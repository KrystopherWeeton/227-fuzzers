; ModuleID = '../../third_party/blink/renderer/core/css/resolver/font_builder.cc'
source_filename = "../../third_party/blink/renderer/core/css/resolver/font_builder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.511 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.481, %class.scoped_refptr.489, %class.scoped_refptr.499, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.510 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.480 }
%class.scoped_refptr.480 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1449", [4 x i8] }>
%"class.WTF::RefCounted.1449" = type { %"class.base::RefCounted.1450" }
%"class.base::RefCounted.1450" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr.481 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.487", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.482" }
%"class.WTF::Vector.482" = type { %"class.WTF::VectorBuffer.483" }
%"class.WTF::VectorBuffer.483" = type { %"class.WTF::VectorBufferBase.484" }
%"class.WTF::VectorBufferBase.484" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.489 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.490", %"class.WTF::RefCounted.497", [4 x i8] }>
%"class.blink::FontSettings.490" = type { %"class.WTF::Vector.491" }
%"class.WTF::Vector.491" = type { %"class.WTF::VectorBuffer.492" }
%"class.WTF::VectorBuffer.492" = type { %"class.WTF::VectorBufferBase.493" }
%"class.WTF::VectorBufferBase.493" = type { %"class.blink::FontTagValuePair.494"*, i32, i32 }
%"class.blink::FontTagValuePair.494" = type { i32, float }
%"class.WTF::RefCounted.497" = type { %"class.base::RefCounted.498" }
%"class.base::RefCounted.498" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.499 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.500", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.507, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.500" = type { %"class.base::RefCounted.501" }
%"class.base::RefCounted.501" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.507 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.508", [4 x i8] }>
%"class.WTF::RefCounted.508" = type { %"class.base::RefCounted.509" }
%"class.base::RefCounted.509" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.510 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.511 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.512", %"class.WTF::Vector.514", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.512" = type { %"class.base::RefCounted.513" }
%"class.base::RefCounted.513" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.514" = type { %"class.WTF::VectorBuffer.515" }
%"class.WTF::VectorBuffer.515" = type { %"class.WTF::VectorBufferBase.516", [8 x i8] }
%"class.WTF::VectorBufferBase.516" = type { %class.scoped_refptr.517*, i32, i32 }
%class.scoped_refptr.517 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.518", [4 x i8] }>
%"class.WTF::RefCounted.518" = type { %"class.base::RefCounted.519" }
%"class.base::RefCounted.519" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.524", %class.scoped_refptr.531, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.518" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.522 }
%union.anon.522 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.523, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.119" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.119" }>
%"struct.std::__1::atomic.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__cxx_atomic_impl.122" }
%"struct.std::__1::__cxx_atomic_impl.122" = type { %"struct.std::__1::__cxx_atomic_base_impl.123" }
%"struct.std::__1::__cxx_atomic_base_impl.123" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.359" }
%"struct.std::__1::atomic.359" = type { %"struct.std::__1::__atomic_base.360" }
%"struct.std::__1::__atomic_base.360" = type { %"struct.std::__1::__atomic_base.361" }
%"struct.std::__1::__atomic_base.361" = type { %"struct.std::__1::__cxx_atomic_impl.362" }
%"struct.std::__1::__cxx_atomic_impl.362" = type { %"struct.std::__1::__cxx_atomic_base_impl.363" }
%"struct.std::__1::__cxx_atomic_base_impl.363" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.523 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.527, %class.scoped_refptr.527 }
%class.scoped_refptr.527 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.531 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.532", [4 x i8] }>
%"class.WTF::RefCounted.532" = type { %"class.base::RefCounted.533" }
%"class.base::RefCounted.533" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.534" }
%"class.blink::PersistentBase.534" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.535" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.535" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.172", i32, [4 x i8], %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.308", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.324", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.336", %"class.std::__1::unique_ptr.342", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.349", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.216", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.237", %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.251", %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.288", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.208" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.208" = type { %"struct.std::__1::__atomic_base.209" }
%"struct.std::__1::__atomic_base.209" = type { %"struct.std::__1::__atomic_base.210" }
%"struct.std::__1::__atomic_base.210" = type { %"struct.std::__1::__cxx_atomic_impl.211" }
%"struct.std::__1::__cxx_atomic_impl.211" = type { %"struct.std::__1::__cxx_atomic_base_impl.212" }
%"struct.std::__1::__cxx_atomic_base_impl.212" = type { i64 }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::Worklist.219"* }
%"class.blink::Worklist.219" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.208" }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::Worklist.226"* }
%"class.blink::Worklist.226" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.208" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::Worklist.233"* }
%"class.blink::Worklist.233" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.208" }
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::Worklist.240"* }
%"class.blink::Worklist.240" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.208" }
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.blink::Worklist.247"* }
%"class.blink::Worklist.247" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.208" }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::Worklist.254"* }
%"class.blink::Worklist.254" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.208" }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::Worklist.261"* }
%"class.blink::Worklist.261" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.208" }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.268", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.280", %"class.std::__1::__compressed_pair.282", [4 x i8] }>
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270", %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { i64 }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { float }
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.291", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.291" = type { %"class.std::__1::__compressed_pair.292" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.300" }
%"class.WTF::Vector.300" = type { %"class.WTF::VectorBuffer.301" }
%"class.WTF::VectorBuffer.301" = type { %"class.WTF::VectorBufferBase.302" }
%"class.WTF::VectorBufferBase.302" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.316" }
%"class.WTF::VectorBuffer.316" = type { %"class.WTF::VectorBufferBase.317" }
%"class.WTF::VectorBufferBase.317" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.330" }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.219"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.226"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.233"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.240"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.247"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1469" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1469" = type { %"struct.std::__1::__compressed_pair_elem.1470" }
%"struct.std::__1::__compressed_pair_elem.1470" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.348 }
%class.scoped_refptr.348 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.349" = type { %"struct.std::__1::__atomic_base.350" }
%"struct.std::__1::__atomic_base.350" = type { %"struct.std::__1::__cxx_atomic_impl.351" }
%"struct.std::__1::__cxx_atomic_impl.351" = type { %"struct.std::__1::__cxx_atomic_base_impl.352" }
%"struct.std::__1::__cxx_atomic_base_impl.352" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.536 }
%class.scoped_refptr.536 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.358", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.358" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.119" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.359" }
%"class.blink::FontBuilder" = type <{ %"class.blink::Document"*, %"class.blink::TreeScope"*, %"class.blink::FontDescription", i32, [4 x i8] }>
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.53", %"class.blink::HeapVector.55" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.35", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.35" = type { %"class.base::RefCounted.36" }
%"class.base::RefCounted.36" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::HeapHashMap.52"* }
%"class.blink::HeapHashMap.52" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.55" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.63", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.65, %"class.WTF::Vector.79", %"class.WTF::Vector.79", %"class.blink::Member", %"class.blink::Member.84", %"class.blink::HeapHashSet", %"class.blink::Member.8", %"class.WTF::HashSet.92", %"class.WTF::TextPosition", %"class.blink::Member.96", %"class.blink::HeapVector.98", %"class.blink::Member.105" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.65 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.66", %"class.WTF::Vector.68" }
%"class.WTF::RefCounted.66" = type { %"class.base::RefCounted.67" }
%"class.base::RefCounted.67" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.68" = type { %"class.WTF::VectorBuffer.69" }
%"class.WTF::VectorBuffer.69" = type { %"class.WTF::VectorBufferBase.70" }
%"class.WTF::VectorBufferBase.70" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.71", %"class.WTF::String" }
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81" }
%"class.WTF::VectorBufferBase.81" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.86" }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.90" }
%"class.WTF::HashTable.90" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.92" = type { %"class.WTF::HashTable.93" }
%"class.WTF::HashTable.93" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.65, %"class.blink::Member.61", %"class.blink::Member.84" }
%"class.blink::HeapVector.98" = type { %"class.WTF::Vector.101" }
%"class.WTF::Vector.101" = type { %"class.WTF::VectorBuffer.102" }
%"class.WTF::VectorBuffer.102" = type { %"class.WTF::VectorBufferBase.103" }
%"class.WTF::VectorBufferBase.103" = type { %"class.blink::Member.84"*, i32, i32 }
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.115", %"class.WTF::Vector.115", i8, i32, %"class.blink::Member.126", %"class.blink::Member.128", %"class.blink::Member.130", %"class.blink::Member.132", %"class.blink::Member.134", %"class.blink::Member.136", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.144", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.150", %"class.blink::Member.152", %"class.blink::Member.61", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.155", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.365", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.374", double, double, i64, i64, %"class.blink::HeapHashSet.376", %"class.blink::HeapHashSet.383", i16, i8, %"class.blink::Member.390", %"class.blink::Member.392", %"class.blink::Member.1224", %"class.blink::Member.1226", %"class.blink::TextLinkColors", %"class.blink::Member.1228", i8, [7 x i8], %"class.blink::HeapHashMap.1230", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.1237", %"class.blink::Member.1242", %"class.blink::Member.1244", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1246", %"class.blink::HeapVector.1248", %"class.std::__1::unique_ptr.1256", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1262", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1275", %"class.WTF::Vector.1277", i8, i8, %"class.std::__1::unique_ptr.1282", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.1288", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1296", i8, i32, %"class.blink::Member.1298", %"class.blink::Member.1300", %"class.blink::Member.1302", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1334", %"class.WTF::HashMap.1336", %"class.blink::Member.1341", %"class.blink::Member.1343", %"class.blink::Member.1345", %"class.blink::Member.1347", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1349", i8, i32, %"class.blink::Member.1356", %"class.blink::Member.1358", i32, %"class.blink::Member.1360", %"class.blink::Member.1362", %"class.blink::Member.1364", %"class.std::__1::unique_ptr.1366", i64, %"class.std::__1::unique_ptr.1372", i32, i32, %"class.blink::Member.1383", %"class.blink::Member.1385", %"class.blink::Member.1387", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1389", %"class.WTF::Vector.1391", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1396", %"class.blink::Member.1403", %"class.std::__1::unique_ptr.1405", %"class.blink::Member.1411", i8, i8, %"class.WTF::String", %"class.blink::Member.1413", i8, [7 x i8], %"class.blink::HeapHashMap.1415", %"class.blink::HeapObserverSet", %"class.blink::Member.1429", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1431", i32, i8, i8, %"class.blink::WeakMember.1433", %"class.blink::Member.1434" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.108" }
%"class.blink::HeapHashMap.108" = type { %"class.WTF::HashMap.111" }
%"class.WTF::HashMap.111" = type { %"class.WTF::HashTable.112" }
%"class.WTF::HashTable.112" = type <{ %"struct.WTF::KeyValuePair.114"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.114" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.115" = type { %"class.WTF::VectorBuffer.116" }
%"class.WTF::VectorBuffer.116" = type { %"class.WTF::VectorBufferBase.117" }
%"class.WTF::VectorBufferBase.117" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.118 }
%class.scoped_refptr.118 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.126" = type { %"class.blink::MemberBase.127" }
%"class.blink::MemberBase.127" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.128" = type { %"class.blink::MemberBase.129" }
%"class.blink::MemberBase.129" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1474", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1541", i32, i8, [3 x i8], %"class.blink::HeapVector.1543", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1551", %"class.blink::Member.1553", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1562", %"class.blink::Member.1685", %"class.blink::Member.1687", i8, [7 x i8] }>
%"class.blink::Supplementable.1474" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1475" }
%"class.blink::HeapHashMap.1475" = type { %"class.WTF::HashMap.1478" }
%"class.WTF::HashMap.1478" = type { %"class.WTF::HashTable.1479" }
%"class.WTF::HashTable.1479" = type <{ %"struct.WTF::KeyValuePair.1481"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1481" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1490" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1482" }
%"class.blink::HeapObserverSet.1482" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1483" }
%"class.blink::HeapHashSet.1483" = type { %"class.WTF::HashSet.1486" }
%"class.WTF::HashSet.1486" = type { %"class.WTF::HashTable.1487" }
%"class.WTF::HashTable.1487" = type <{ %"class.blink::WeakMember.1489"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1489" = type opaque
%"class.blink::Supplementable.1490" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1491" }
%"class.blink::HeapHashMap.1491" = type { %"class.WTF::HashMap.1494" }
%"class.WTF::HashMap.1494" = type { %"class.WTF::HashTable.1495" }
%"class.WTF::HashTable.1495" = type <{ %"struct.WTF::KeyValuePair.1497"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1497" = type { i8*, %"class.blink::Member.2154" }
%"class.blink::Member.2154" = type { %"class.blink::MemberBase.2155" }
%"class.blink::MemberBase.2155" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2156" }
%"class.blink::Member.2156" = type { %"class.blink::MemberBase.2157" }
%"class.blink::MemberBase.2157" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1498, %"class.std::__1::unique_ptr.1507", %"class.std::__1::unique_ptr.1507", %"class.std::__1::unique_ptr.1531", %"class.std::__1::unique_ptr.1531", %"class.blink::Member.128", i32, [4 x i8], %"class.WTF::HashSet.1537", i32, i32 }
%class.scoped_refptr.1498 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1499", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1501", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1506 }
%"class.WTF::RefCounted.1499" = type { %"class.base::RefCounted.1500" }
%"class.base::RefCounted.1500" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1501" = type { %"class.absl::optional_internal::optional_data.1502" }
%"class.absl::optional_internal::optional_data.1502" = type { %"class.absl::optional_internal::optional_data_base.1503" }
%"class.absl::optional_internal::optional_data_base.1503" = type { %"class.absl::optional_internal::optional_data_dtor_base.1504" }
%"class.absl::optional_internal::optional_data_dtor_base.1504" = type { i8, %union.anon.1505 }
%union.anon.1505 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1506 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1507" = type { %"class.std::__1::__compressed_pair.1508" }
%"class.std::__1::__compressed_pair.1508" = type { %"struct.std::__1::__compressed_pair_elem.1509" }
%"struct.std::__1::__compressed_pair_elem.1509" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1518", %"class.std::__1::map.1527"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1501" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1510", %"class.std::__1::__compressed_pair.1515" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1510" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"struct.std::__1::__compressed_pair_elem.1511" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1515" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"class.std::__1::map.1518" = type { %"class.std::__1::__tree.1519" }
%"class.std::__1::__tree.1519" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1520", %"class.std::__1::__compressed_pair.1524" }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"class.std::__1::__compressed_pair.1524" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"class.std::__1::map.1527" = type opaque
%"class.std::__1::unique_ptr.1531" = type { %"class.std::__1::__compressed_pair.1532" }
%"class.std::__1::__compressed_pair.1532" = type { %"struct.std::__1::__compressed_pair_elem.1533" }
%"struct.std::__1::__compressed_pair_elem.1533" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1537" = type { %"class.WTF::HashTable.1538" }
%"class.WTF::HashTable.1538" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1543" = type { %"class.WTF::Vector.1546" }
%"class.WTF::Vector.1546" = type { %"class.WTF::VectorBuffer.1547" }
%"class.WTF::VectorBuffer.1547" = type { %"class.WTF::VectorBufferBase.1548" }
%"class.WTF::VectorBufferBase.1548" = type { %"class.blink::Member.1549"*, i32, i32 }
%"class.blink::Member.1549" = type opaque
%"class.blink::Member.1551" = type { %"class.blink::MemberBase.1552" }
%"class.blink::MemberBase.1552" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1553" = type { %"class.blink::MemberBase.1554" }
%"class.blink::MemberBase.1554" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1555", i32, i32 }
%"class.blink::HeapHashMap.1555" = type { %"class.WTF::HashMap.1558" }
%"class.WTF::HashMap.1558" = type { %"class.WTF::HashTable.1559" }
%"class.WTF::HashTable.1559" = type <{ %"struct.WTF::KeyValuePair.1561"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1561" = type opaque
%"class.std::__1::unique_ptr.1562" = type { %"class.std::__1::__compressed_pair.1563" }
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"struct.std::__1::__compressed_pair_elem.1564" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1565" }
%"class.std::__1::unique_ptr.1565" = type { %"class.std::__1::__compressed_pair.1566" }
%"class.std::__1::__compressed_pair.1566" = type { %"struct.std::__1::__compressed_pair_elem.1567" }
%"struct.std::__1::__compressed_pair_elem.1567" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.mojo::StructPtr.1571"*, i32, i32 }
%"class.mojo::StructPtr.1571" = type { %"class.std::__1::unique_ptr.1572" }
%"class.std::__1::unique_ptr.1572" = type { %"class.std::__1::__compressed_pair.1573" }
%"class.std::__1::__compressed_pair.1573" = type { %"struct.std::__1::__compressed_pair_elem.1574" }
%"struct.std::__1::__compressed_pair_elem.1574" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1575", %"class.WTF::HashMap.1582", %"class.WTF::HashMap.1587", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.803", i32, %"class.mojo::StructPtr.1592", %"class.WTF::Vector.803" }
%"class.mojo::StructPtr.1575" = type { %"class.std::__1::unique_ptr.1576" }
%"class.std::__1::unique_ptr.1576" = type { %"class.std::__1::__compressed_pair.1577" }
%"class.std::__1::__compressed_pair.1577" = type { %"struct.std::__1::__compressed_pair_elem.1578" }
%"struct.std::__1::__compressed_pair_elem.1578" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1582" = type { %"class.WTF::HashTable.1583" }
%"class.WTF::HashTable.1583" = type <{ %"struct.WTF::KeyValuePair.1586"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1586" = type opaque
%"class.WTF::HashMap.1587" = type { %"class.WTF::HashTable.1588" }
%"class.WTF::HashTable.1588" = type <{ %"struct.WTF::KeyValuePair.1591"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1591" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1592" = type { %"class.std::__1::unique_ptr.1593" }
%"class.std::__1::unique_ptr.1593" = type { %"class.std::__1::__compressed_pair.1594" }
%"class.std::__1::__compressed_pair.1594" = type { %"struct.std::__1::__compressed_pair_elem.1595" }
%"struct.std::__1::__compressed_pair_elem.1595" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.803", i8, i8, [6 x i8] }>
%"class.WTF::Vector.803" = type { %"class.WTF::VectorBuffer.804" }
%"class.WTF::VectorBuffer.804" = type { %"class.WTF::VectorBufferBase.805" }
%"class.WTF::VectorBufferBase.805" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1676" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1607", i32 }>
%"class.std::__1::unique_ptr.1607" = type { %"class.std::__1::__compressed_pair.1608" }
%"class.std::__1::__compressed_pair.1608" = type { %"struct.std::__1::__compressed_pair_elem.1609" }
%"struct.std::__1::__compressed_pair_elem.1609" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1610", %"class.absl::optional.1611", %"class.absl::optional.1616", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1629", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1651", %"class.std::__1::map.1662", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1671", i8, %class.scoped_refptr.1621, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1672" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1610" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1611" = type { %"class.absl::optional_internal::optional_data.1612" }
%"class.absl::optional_internal::optional_data.1612" = type { %"class.absl::optional_internal::optional_data_base.1613" }
%"class.absl::optional_internal::optional_data_base.1613" = type { %"class.absl::optional_internal::optional_data_dtor_base.1614" }
%"class.absl::optional_internal::optional_data_dtor_base.1614" = type { i8, %union.anon.1615 }
%union.anon.1615 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1616" = type { %"class.absl::optional_internal::optional_data.1617" }
%"class.absl::optional_internal::optional_data.1617" = type { %"class.absl::optional_internal::optional_data_base.1618" }
%"class.absl::optional_internal::optional_data_base.1618" = type { %"class.absl::optional_internal::optional_data_dtor_base.1619" }
%"class.absl::optional_internal::optional_data_dtor_base.1619" = type { i8, %union.anon.1620 }
%union.anon.1620 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1621, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1622" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1622" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.357 }
%class.scoped_refptr.357 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1627 }
%class.scoped_refptr.1627 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1689", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1621, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1689" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1628 }
%class.scoped_refptr.1628 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1632", %class.scoped_refptr.1633 }
%"class.base::RepeatingCallback.1632" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1633 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1634", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1634" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1638", %"class.std::__1::unique_ptr.1644", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1650" }
%"class.std::__1::unique_ptr.1638" = type { %"class.std::__1::__compressed_pair.1639" }
%"class.std::__1::__compressed_pair.1639" = type { %"struct.std::__1::__compressed_pair_elem.1640" }
%"struct.std::__1::__compressed_pair_elem.1640" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1644" = type { %"class.std::__1::__compressed_pair.1645" }
%"class.std::__1::__compressed_pair.1645" = type { %"struct.std::__1::__compressed_pair_elem.1646" }
%"struct.std::__1::__compressed_pair_elem.1646" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1650" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1651" = type { %"class.std::__1::__tree.1652" }
%"class.std::__1::__tree.1652" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1653", %"class.std::__1::__compressed_pair.1657" }
%"class.std::__1::__compressed_pair.1653" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"class.std::__1::__compressed_pair.1657" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"class.std::__1::map.1662" = type { %"class.std::__1::__tree.1663" }
%"class.std::__1::__tree.1663" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1664", %"class.std::__1::__compressed_pair.1668" }
%"class.std::__1::__compressed_pair.1664" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"class.std::__1::__compressed_pair.1668" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"class.base::OnceCallback.1671" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1621 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.356" }>
%"class.base::RefCountedThreadSafe.356" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1672" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1676" = type { %"class.std::__1::__compressed_pair.1677" }
%"class.std::__1::__compressed_pair.1677" = type { %"struct.std::__1::__compressed_pair_elem.1678" }
%"struct.std::__1::__compressed_pair_elem.1678" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1685" = type { %"class.blink::MemberBase.1686" }
%"class.blink::MemberBase.1686" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1687" = type { %"class.blink::MemberBase.1688" }
%"class.blink::MemberBase.1688" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.130" = type { %"class.blink::MemberBase.131" }
%"class.blink::MemberBase.131" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.138" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::KURL"* }
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.154 }
%class.scoped_refptr.154 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.155" = type { %"class.WTF::VectorBuffer.156" }
%"class.WTF::VectorBuffer.156" = type { %"class.WTF::VectorBufferBase.157" }
%"class.WTF::VectorBufferBase.157" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.158 }
%class.scoped_refptr.158 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.159", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.159" = type { %"class.base::RefCounted.160" }
%"class.base::RefCounted.160" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.163" }
%"class.blink::HeapHashMap.163" = type { %"class.WTF::HashMap.166" }
%"class.WTF::HashMap.166" = type { %"class.WTF::HashTable.167" }
%"class.WTF::HashTable.167" = type <{ %"struct.WTF::KeyValuePair.169"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.169" = type { %"class.blink::WeakMember.170", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.170" = type { %"class.blink::MemberBase.171" }
%"class.blink::MemberBase.171" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.365" = type { %"class.blink::MemberBase.366" }
%"class.blink::MemberBase.366" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.367" }
%"class.blink::HeapHashMap.367" = type { %"class.WTF::HashMap.370" }
%"class.WTF::HashMap.370" = type { %"class.WTF::HashTable.371" }
%"class.WTF::HashTable.371" = type <{ %"struct.WTF::KeyValuePair.373"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.373" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.376" = type { %"class.WTF::HashSet.379" }
%"class.WTF::HashSet.379" = type { %"class.WTF::HashTable.380" }
%"class.WTF::HashTable.380" = type <{ %"class.blink::WeakMember.382"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.382" = type opaque
%"class.blink::HeapHashSet.383" = type { %"class.WTF::HashSet.386" }
%"class.WTF::HashSet.386" = type { %"class.WTF::HashTable.387" }
%"class.WTF::HashTable.387" = type <{ %"class.blink::WeakMember.389"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.389" = type opaque
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.8", i32, i32, i32, %"class.blink::Member.61", %"class.blink::Member.396", %"class.blink::Member.423", %"class.blink::HeapHashMap.425", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.432", %"class.blink::HeapHashSet.432", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.438", %"class.blink::Member.461", %"class.blink::Member.928", %"class.blink::Member.930", %"class.blink::Member.936", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1098", %"class.blink::Member.1104", %"class.blink::HeapHashMap.1165", %"class.blink::HeapHashMap.1172", %"class.std::__1::unique_ptr.1179", i32, %"class.blink::HeapVector.1185", %"class.blink::HeapVector.1185", %"class.blink::HeapVector.408", %"class.blink::HeapHashSet.1193", %"class.blink::HeapHashMap.1200", %"class.blink::Member.1207", %"class.blink::HeapHashMap.1209", %class.scoped_refptr.1216, %class.scoped_refptr.553, %"class.blink::Member.1062", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1217", %"class.blink::Member.21" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.0", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.400", %"class.blink::HeapVector.408", i8 }>
%"class.blink::HeapVector.400" = type { %"class.WTF::Vector.403" }
%"class.WTF::Vector.403" = type { %"class.WTF::VectorBuffer.404" }
%"class.WTF::VectorBuffer.404" = type { %"class.WTF::VectorBufferBase.405" }
%"class.WTF::VectorBufferBase.405" = type { %"class.blink::Member.406"*, i32, i32 }
%"class.blink::Member.406" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.419", %"class.blink::Member.421", %"class.blink::Member.421", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.419" = type <{ %"class.blink::Member.421"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member", %"class.blink::Member.421", %"class.blink::Member.421" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.425" = type { %"class.WTF::HashMap.428" }
%"class.WTF::HashMap.428" = type { %"class.WTF::HashTable.429" }
%"class.WTF::HashTable.429" = type <{ %"struct.WTF::KeyValuePair.431"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.431" = type opaque
%"class.blink::HeapHashSet.432" = type { %"class.WTF::HashSet.435" }
%"class.WTF::HashSet.435" = type { %"class.WTF::HashTable.436" }
%"class.WTF::HashTable.436" = type <{ %"class.blink::Member.0"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.442", %"class.blink::Member.453" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.21", %"class.blink::HeapHashMap.446" }
%"class.blink::HeapHashMap.446" = type { %"class.WTF::HashMap.449" }
%"class.WTF::HashMap.449" = type { %"class.WTF::HashTable.450" }
%"class.WTF::HashTable.450" = type <{ %"struct.WTF::KeyValuePair.452"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.452" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.457", %"class.blink::Member.459" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1453", %"class.blink::Member.453", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.1460] }
%"class.blink::HeapVector.1453" = type { %"class.WTF::Vector.1456" }
%"class.WTF::Vector.1456" = type { %"class.WTF::VectorBuffer.1457" }
%"class.WTF::VectorBuffer.1457" = type { %"class.WTF::VectorBufferBase.1458" }
%"class.WTF::VectorBufferBase.1458" = type { %"class.blink::Member.459"*, i32, i32 }
%class.sk_sp.1460 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1461, i32, %"class.absl::optional.1462", i8, i32 }
%class.sk_sp.1461 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1462" = type { %"class.absl::optional_internal::optional_data.1463" }
%"class.absl::optional_internal::optional_data.1463" = type { %"class.absl::optional_internal::optional_data_base.1464" }
%"class.absl::optional_internal::optional_data_base.1464" = type { %"class.absl::optional_internal::optional_data_dtor_base.1465" }
%"class.absl::optional_internal::optional_data_dtor_base.1465" = type { i8, %union.anon.1466 }
%union.anon.1466 = type { %struct.SkRect }
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.8", %class.scoped_refptr.472, %"class.blink::SelectorFilter", %"class.blink::Member.423", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.465" }
%"class.blink::HeapHashMap.465" = type { %"class.WTF::HashMap.468" }
%"class.WTF::HashMap.468" = type { %"class.WTF::HashTable.469" }
%"class.WTF::HashTable.469" = type <{ %"struct.WTF::KeyValuePair.471"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.471" = type opaque
%class.scoped_refptr.472 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.895", %"class.std::__1::unique_ptr.897" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.538", %"class.blink::DataRef.618", %"class.blink::DataRef.622", %"class.blink::DataRef.820", %"class.blink::DataRef.878", %"class.blink::DataRef.882", %"class.blink::DataRef.886", %"class.blink::DataRef.890", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.473 }
%class.scoped_refptr.473 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.474", %"class.blink::DataRef.476", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.474" = type { %"class.base::RefCounted.475" }
%"class.base::RefCounted.475" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.476" = type { %class.scoped_refptr.477 }
%class.scoped_refptr.477 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.478", %"class.blink::Font" }
%"class.WTF::RefCounted.478" = type { %"class.base::RefCounted.479" }
%"class.base::RefCounted.479" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Length" = type <{ %union.anon.537, i8, i8, i8, i8 }>
%union.anon.537 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.538" = type { %class.scoped_refptr.539 }
%class.scoped_refptr.539 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.540", [4 x i8], %"class.blink::DataRef.542", %"class.blink::DataRef.583", %"class.WTF::Vector.587", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.591, %class.scoped_refptr.600, %"class.blink::Persistent.608", %"class.blink::Persistent.610", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.540" = type { %"class.base::RefCounted.541" }
%"class.base::RefCounted.541" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.542" = type { %class.scoped_refptr.543 }
%class.scoped_refptr.543 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.544", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.546, %class.scoped_refptr.553, %"class.blink::Persistent.570", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.544" = type { %"class.base::RefCounted.545" }
%"class.base::RefCounted.545" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.546 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.547", %"class.WTF::Vector.548" }
%"class.base::RefCountedThreadSafe.547" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.548" = type { %"class.WTF::VectorBuffer.549" }
%"class.WTF::VectorBuffer.549" = type { %"class.WTF::VectorBufferBase.550" }
%"class.WTF::VectorBufferBase.550" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.570" = type { %"class.blink::PersistentBase.571" }
%"class.blink::PersistentBase.571" = type { %"class.blink::HeapVector.572"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.572" = type { %"class.WTF::Vector.575" }
%"class.WTF::Vector.575" = type { %"class.WTF::VectorBuffer.576" }
%"class.WTF::VectorBuffer.576" = type { %"class.WTF::VectorBufferBase.577" }
%"class.WTF::VectorBufferBase.577" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.578", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.578" = type { %"class.blink::MemberBase.579" }
%"class.blink::MemberBase.579" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.583" = type { %class.scoped_refptr.584 }
%class.scoped_refptr.584 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.585", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.585" = type { %"class.base::RefCounted.586" }
%"class.base::RefCounted.586" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.587" = type { %"class.WTF::VectorBuffer.588" }
%"class.WTF::VectorBuffer.588" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.591 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.592", %"class.WTF::Vector.594" }
%"class.WTF::RefCounted.592" = type { %"class.base::RefCounted.593" }
%"class.base::RefCounted.593" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { %"struct.std::__1::pair.597"*, i32, i32 }
%"struct.std::__1::pair.597" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.600 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.601", [4 x i8], %"class.WTF::Vector.603" }
%"class.WTF::RefCounted.601" = type { %"class.base::RefCounted.602" }
%"class.base::RefCounted.602" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.603" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.605", [28 x i8] }>
%"class.WTF::VectorBufferBase.605" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.608" = type { %"class.blink::PersistentBase.609" }
%"class.blink::PersistentBase.609" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.610" = type { %"class.blink::PersistentBase.611" }
%"class.blink::PersistentBase.611" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.614", %"class.blink::Member.616" }
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.616" = type { %"class.blink::MemberBase.617" }
%"class.blink::MemberBase.617" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.618" = type { %class.scoped_refptr.619 }
%class.scoped_refptr.619 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.620", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.620" = type { %"class.base::RefCounted.621" }
%"class.base::RefCounted.621" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.622" = type { %class.scoped_refptr.623 }
%class.scoped_refptr.623 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.624", [4 x i8], %"class.blink::DataRef.626", %"class.blink::DataRef.690", %"class.blink::TransformOperations", %class.scoped_refptr.600, %"class.blink::Persistent.814", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.624" = type { %"class.base::RefCounted.625" }
%"class.base::RefCounted.625" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.626" = type { %class.scoped_refptr.627 }
%class.scoped_refptr.627 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.628", [4 x i8], %"class.blink::DataRef.630", %"class.blink::Persistent.668", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.628" = type { %"class.base::RefCounted.629" }
%"class.base::RefCounted.629" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.630" = type { %class.scoped_refptr.631 }
%class.scoped_refptr.631 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.632", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.650, %class.scoped_refptr.653, %class.scoped_refptr.656, %class.scoped_refptr.659, %class.scoped_refptr.660, %class.scoped_refptr.661, %"class.blink::Persistent.668", %"class.blink::Persistent.681", %"class.absl::optional.685", %"class.absl::optional.685", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.632" = type { %"class.base::RefCounted.633" }
%"class.base::RefCounted.633" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.634", %"class.std::__1::unique_ptr.639" }
%"class.WTF::Vector.634" = type { %"class.WTF::VectorBuffer.635" }
%"class.WTF::VectorBuffer.635" = type { %"class.WTF::VectorBufferBase.636" }
%"class.WTF::VectorBufferBase.636" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.642", %"class.WTF::Vector.634", i32, i32 }
%"class.WTF::Vector.642" = type { %"class.WTF::VectorBuffer.643" }
%"class.WTF::VectorBuffer.643" = type { %"class.WTF::VectorBufferBase.644" }
%"class.WTF::VectorBufferBase.644" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.650 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.651", [4 x i8] }>
%"class.WTF::RefCounted.651" = type { %"class.base::RefCounted.652" }
%"class.base::RefCounted.652" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.653 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.654", [4 x i8] }>
%"class.WTF::RefCounted.654" = type { %"class.base::RefCounted.655" }
%"class.base::RefCounted.655" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.656 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.657" }>
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.659 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.660 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.661 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.662", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.662" = type { %"class.base::RefCounted.663" }
%"class.base::RefCounted.663" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.664" }
%"class.blink::DataRef.664" = type { %class.scoped_refptr.665 }
%class.scoped_refptr.665 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.608", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.666" }
%"class.WTF::RefCounted.666" = type { %"class.base::RefCounted.667" }
%"class.base::RefCounted.667" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.681" = type { %"class.blink::PersistentBase.682" }
%"class.blink::PersistentBase.682" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.653, %"class.blink::Member.578", i32, [4 x i8] }>
%"class.absl::optional.685" = type { %"class.absl::optional_internal::optional_data.686" }
%"class.absl::optional_internal::optional_data.686" = type { %"class.absl::optional_internal::optional_data_base.687" }
%"class.absl::optional_internal::optional_data_base.687" = type { %"class.absl::optional_internal::optional_data_dtor_base.688" }
%"class.absl::optional_internal::optional_data_dtor_base.688" = type { i8, [3 x i8], %union.anon.689 }
%union.anon.689 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.668" = type { %"class.blink::PersistentBase.669" }
%"class.blink::PersistentBase.669" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.672" }
%"class.blink::HeapVector.672" = type { %"class.WTF::Vector.675" }
%"class.WTF::Vector.675" = type { %"class.WTF::VectorBuffer.676" }
%"class.WTF::VectorBuffer.676" = type { %"class.WTF::VectorBufferBase.677" }
%"class.WTF::VectorBufferBase.677" = type { %"class.blink::Member.678"*, i32, i32 }
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.690" = type { %class.scoped_refptr.691 }
%class.scoped_refptr.691 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.692", %"class.blink::DataRef.694", %"class.blink::DataRef.698", %"class.blink::DataRef.707", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.726", %"class.std::__1::unique_ptr.737", %"class.std::__1::unique_ptr.775", %"class.std::__1::unique_ptr.786", %"class.std::__1::unique_ptr.797", %"class.WTF::Vector.803", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.692" = type { %"class.base::RefCounted.693" }
%"class.base::RefCounted.693" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.696", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.698" = type { %class.scoped_refptr.699 }
%class.scoped_refptr.699 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.700", [4 x i8], %"class.WTF::Vector.702", i8, [7 x i8] }>
%"class.WTF::RefCounted.700" = type { %"class.base::RefCounted.701" }
%"class.base::RefCounted.701" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.702" = type { %"class.WTF::VectorBuffer.703" }
%"class.WTF::VectorBuffer.703" = type { %"class.WTF::VectorBufferBase.704" }
%"class.WTF::VectorBufferBase.704" = type { i32*, i32, i32 }
%"class.blink::DataRef.707" = type { %class.scoped_refptr.708 }
%class.scoped_refptr.708 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.709", [4 x i8], %"class.WTF::HashMap.711", %"class.WTF::HashMap.711", %"class.WTF::HashMap.711", %"class.WTF::HashMap.711", %"class.WTF::HashMap.711", %"class.WTF::HashMap.711", %"class.WTF::HashMap.716", %"class.WTF::HashMap.716", %"class.WTF::HashMap.716", %"class.WTF::HashMap.716", %"class.WTF::HashMap.721", %"class.WTF::Vector.634", %"class.WTF::Vector.634", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.709" = type { %"class.base::RefCounted.710" }
%"class.base::RefCounted.710" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.711" = type { %"class.WTF::HashTable.712" }
%"class.WTF::HashTable.712" = type <{ %"struct.WTF::KeyValuePair.715"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.715" = type { %"class.WTF::String", %"class.WTF::Vector.2323" }
%"class.WTF::Vector.2323" = type { %"class.WTF::VectorBuffer.2324" }
%"class.WTF::VectorBuffer.2324" = type { %"class.WTF::VectorBufferBase.2325" }
%"class.WTF::VectorBufferBase.2325" = type { i64*, i32, i32 }
%"class.WTF::HashMap.716" = type { %"class.WTF::HashTable.717" }
%"class.WTF::HashTable.717" = type <{ %"struct.WTF::KeyValuePair.720"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.720" = type { i64, %"class.WTF::Vector.803" }
%"class.WTF::HashMap.721" = type { %"class.WTF::HashTable.722" }
%"class.WTF::HashTable.722" = type <{ %"struct.WTF::KeyValuePair.725"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.725" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.729" }
%"class.WTF::HashMap.729" = type { %"class.WTF::HashTable.730" }
%"class.WTF::HashTable.730" = type <{ %"struct.WTF::KeyValuePair.733"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.733" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2328", %"class.absl::optional.2328", %"class.absl::optional.2328" }
%"class.absl::optional.2328" = type { %"class.absl::optional_internal::optional_data.2329" }
%"class.absl::optional_internal::optional_data.2329" = type { %"class.absl::optional_internal::optional_data_base.2330" }
%"class.absl::optional_internal::optional_data_base.2330" = type { %"class.absl::optional_internal::optional_data_dtor_base.2331" }
%"class.absl::optional_internal::optional_data_dtor_base.2331" = type { i8, %union.anon.2332 }
%union.anon.2332 = type { i32 }
%"class.std::__1::unique_ptr.737" = type { %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.587", %"class.WTF::Vector.752", %"class.WTF::Vector.740", %"class.WTF::Vector.757", %"class.WTF::Vector.762", %"class.WTF::Vector.767" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.740", %"class.WTF::Vector.740", %"class.WTF::Vector.745" }
%"class.WTF::Vector.745" = type { %"class.WTF::VectorBuffer.746" }
%"class.WTF::VectorBuffer.746" = type { %"class.WTF::VectorBufferBase.747" }
%"class.WTF::VectorBufferBase.747" = type { %class.scoped_refptr.748*, i32, i32 }
%class.scoped_refptr.748 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.749" }
%"class.base::RefCountedThreadSafe.749" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.752" = type { %"class.WTF::VectorBuffer.753" }
%"class.WTF::VectorBuffer.753" = type { %"class.WTF::VectorBufferBase.754" }
%"class.WTF::VectorBufferBase.754" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.740" = type { %"class.WTF::VectorBuffer.741" }
%"class.WTF::VectorBuffer.741" = type { %"class.WTF::VectorBufferBase.742" }
%"class.WTF::VectorBufferBase.742" = type { double*, i32, i32 }
%"class.WTF::Vector.757" = type { %"class.WTF::VectorBuffer.758" }
%"class.WTF::VectorBuffer.758" = type { %"class.WTF::VectorBufferBase.759" }
%"class.WTF::VectorBufferBase.759" = type { i32*, i32, i32 }
%"class.WTF::Vector.762" = type { %"class.WTF::VectorBuffer.763" }
%"class.WTF::VectorBuffer.763" = type { %"class.WTF::VectorBufferBase.764" }
%"class.WTF::VectorBufferBase.764" = type { i32*, i32, i32 }
%"class.WTF::Vector.767" = type { %"class.WTF::VectorBuffer.768" }
%"class.WTF::VectorBuffer.768" = type { %"class.WTF::VectorBufferBase.769" }
%"class.WTF::VectorBufferBase.769" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.775" = type { %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.778" }
%"class.WTF::Vector.778" = type { %"class.WTF::VectorBuffer.779" }
%"class.WTF::VectorBuffer.779" = type { %"class.WTF::VectorBufferBase.780" }
%"class.WTF::VectorBufferBase.780" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.789" }
%"class.WTF::Vector.789" = type { %"class.WTF::VectorBuffer.790" }
%"class.WTF::VectorBuffer.790" = type { %"class.WTF::VectorBufferBase.791" }
%"class.WTF::VectorBufferBase.791" = type { %"class.blink::Persistent.608"*, i32, i32 }
%"class.std::__1::unique_ptr.797" = type { %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.556", %"class.blink::Persistent.561" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2333 }
%class.scoped_refptr.2333 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2334", %"class.WTF::Vector.803", %"class.WTF::Vector.2336", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2334" = type { %"class.base::RefCounted.2335" }
%"class.base::RefCounted.2335" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2336" = type { %"class.WTF::VectorBuffer.2337" }
%"class.WTF::VectorBuffer.2337" = type { %"class.WTF::VectorBufferBase.2338" }
%"class.WTF::VectorBufferBase.2338" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2339 }
%union.anon.2339 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent.561" = type { %"class.blink::PersistentBase.562" }
%"class.blink::PersistentBase.562" = type { %"class.blink::HeapHashMap.563"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.563" = type { %"class.WTF::HashMap.566" }
%"class.WTF::HashMap.566" = type { %"class.WTF::HashTable.567" }
%"class.WTF::HashTable.567" = type <{ %"struct.WTF::KeyValuePair.569"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.569" = type opaque
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.608", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.808" }
%"class.WTF::Vector.808" = type { %"class.WTF::VectorBuffer.809" }
%"class.WTF::VectorBuffer.809" = type { %"class.WTF::VectorBufferBase.810" }
%"class.WTF::VectorBufferBase.810" = type { %class.scoped_refptr.811*, i32, i32 }
%class.scoped_refptr.811 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.657", [4 x i8] }>
%"class.blink::Persistent.814" = type { %"class.blink::PersistentBase.815" }
%"class.blink::PersistentBase.815" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.818" }
%"class.blink::Member.818" = type { %"class.blink::MemberBase.819" }
%"class.blink::MemberBase.819" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.820" = type { %class.scoped_refptr.821 }
%class.scoped_refptr.821 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.822", [4 x i8], %"class.blink::DataRef.824", %"class.blink::DataRef.828", %"class.blink::DataRef.849", %"class.blink::DataRef.858", %"class.blink::DataRef.870", %"class.blink::DataRef.874", %class.scoped_refptr.853, i32, [4 x i8] }>
%"class.WTF::RefCounted.822" = type { %"class.base::RefCounted.823" }
%"class.base::RefCounted.823" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.824" = type { %class.scoped_refptr.825 }
%class.scoped_refptr.825 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.826", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.826" = type { %"class.base::RefCounted.827" }
%"class.base::RefCounted.827" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.828" = type { %class.scoped_refptr.829 }
%class.scoped_refptr.829 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.830", %class.scoped_refptr.832, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.830" = type { %"class.base::RefCounted.831" }
%"class.base::RefCounted.831" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.832 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.833", %"class.std::__1::unique_ptr.839", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.654" }>
%"class.std::__1::unique_ptr.833" = type { %"class.std::__1::__compressed_pair.834" }
%"class.std::__1::__compressed_pair.834" = type { %"struct.std::__1::__compressed_pair_elem.835" }
%"struct.std::__1::__compressed_pair_elem.835" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.839" = type { %"class.std::__1::__compressed_pair.840" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.841" }
%"struct.std::__1::__compressed_pair_elem.841" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.842, i32, %"struct.std::__1::atomic.359", %"struct.std::__1::atomic.359", i8, i8 }>
%class.sk_sp.842 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.843, %class.SkTDArray.844, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.119" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.843 = type { i8*, i32, i32 }
%class.SkTDArray.844 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.845 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.119", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.845 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.349", [3 x i8] }
%"class.blink::DataRef.849" = type { %class.scoped_refptr.850 }
%class.scoped_refptr.850 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.851", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.851" = type { %"class.base::RefCounted.852" }
%"class.base::RefCounted.852" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.853, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.858" = type { %class.scoped_refptr.859 }
%class.scoped_refptr.859 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.860", [4 x i8], %class.scoped_refptr.862, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.862 = type { %"class.base::RefCountedData.863"* }
%"class.base::RefCountedData.863" = type { %"class.base::RefCountedThreadSafe.864", %"class.WTF::Vector.865" }
%"class.base::RefCountedThreadSafe.864" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.870" = type { %class.scoped_refptr.871 }
%class.scoped_refptr.871 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.872", %class.scoped_refptr.853, %class.scoped_refptr.853, %class.scoped_refptr.853 }
%"class.WTF::RefCounted.872" = type { %"class.base::RefCounted.873" }
%"class.base::RefCounted.873" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.874" = type { %class.scoped_refptr.875 }
%class.scoped_refptr.875 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.876", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.876" = type { %"class.base::RefCounted.877" }
%"class.base::RefCounted.877" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.853 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.854", %"class.blink::Persistent.856", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.854" = type { %"class.base::RefCounted.855" }
%"class.base::RefCounted.855" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.856" = type { %"class.blink::PersistentBase.857" }
%"class.blink::PersistentBase.857" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DataRef.878" = type { %class.scoped_refptr.879 }
%class.scoped_refptr.879 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.880", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.880" = type { %"class.base::RefCounted.881" }
%"class.base::RefCounted.881" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.882" = type { %class.scoped_refptr.883 }
%class.scoped_refptr.883 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.884", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.884" = type { %"class.base::RefCounted.885" }
%"class.base::RefCounted.885" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.886" = type { %class.scoped_refptr.887 }
%class.scoped_refptr.887 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.888", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.888" = type { %"class.base::RefCounted.889" }
%"class.base::RefCounted.889" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.890" = type { %class.scoped_refptr.891 }
%class.scoped_refptr.891 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.892", %class.scoped_refptr.894 }
%"class.WTF::RefCounted.892" = type { %"class.base::RefCounted.893" }
%"class.base::RefCounted.893" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.894 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1447", %"class.blink::StyleVariables", %class.scoped_refptr.894 }
%"class.WTF::RefCounted.1447" = type { %"class.base::RefCounted.1448" }
%"class.base::RefCounted.1448" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.895" = type { %"class.base::RefCounted.896" }
%"class.base::RefCounted.896" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.900" }
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"class.WTF::Vector.903"* }
%"class.WTF::Vector.903" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.910", %"class.std::__1::unique_ptr.922" }
%"class.blink::HeapVector.910" = type { %"class.WTF::Vector.913" }
%"class.WTF::Vector.913" = type { %"class.WTF::VectorBuffer.914" }
%"class.WTF::VectorBuffer.914" = type { %"class.WTF::VectorBufferBase.915" }
%"class.WTF::VectorBufferBase.915" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.21", %"class.WTF::Vector.916" }
%"class.WTF::Vector.916" = type { %"class.WTF::VectorBuffer.917" }
%"class.WTF::VectorBuffer.917" = type { %"class.WTF::VectorBufferBase.918", [16 x i8] }
%"class.WTF::VectorBufferBase.918" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.922" = type { %"class.std::__1::__compressed_pair.923" }
%"class.std::__1::__compressed_pair.923" = type { %"struct.std::__1::__compressed_pair_elem.924" }
%"struct.std::__1::__compressed_pair_elem.924" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.928" = type { %"class.blink::MemberBase.929" }
%"class.blink::MemberBase.929" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.934", i8, [7 x i8] }>
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.936" = type { %"class.blink::MemberBase.937" }
%"class.blink::MemberBase.937" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.958", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.940", %"class.WTF::HashMap.940", %"class.WTF::HashMap.940", %"class.WTF::HashMap.945", %class.scoped_refptr.950, %class.scoped_refptr.957, %class.scoped_refptr.956, %"class.WTF::Vector.79", %"class.WTF::Vector.79", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.940" = type { %"class.WTF::HashTable.941" }
%"class.WTF::HashTable.941" = type <{ %"struct.WTF::KeyValuePair.944"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.944" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2158 }
%class.scoped_refptr.2158 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.951", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.953", %"union.blink::InvalidationSet::Backing.954", %"union.blink::InvalidationSet::Backing.955", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.951" = type { %"class.base::RefCounted.952" }
%"class.base::RefCounted.952" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.953" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.954" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.955" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.945" = type { %"class.WTF::HashTable.946" }
%"class.WTF::HashTable.946" = type <{ %"struct.WTF::KeyValuePair.949"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.949" = type opaque
%class.scoped_refptr.950 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.956, %class.scoped_refptr.956 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.951", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.953", %"union.blink::InvalidationSet::Backing.954", %"union.blink::InvalidationSet::Backing.955", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.957 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.956 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.958" = type { %"class.blink::MemberBase.959" }
%"class.blink::MemberBase.959" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.962", %"class.blink::HeapHashMap.962", %"class.blink::HeapHashMap.962", %"class.blink::HeapHashMap.962", %"class.blink::HeapVector.969", %"class.blink::HeapVector.969", %"class.blink::HeapVector.969", %"class.blink::HeapVector.969", %"class.blink::HeapVector.969", %"class.blink::HeapVector.969", %"class.blink::HeapVector.969", %"class.blink::HeapVector.969", %"class.blink::HeapVector.969", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1005", %"class.blink::HeapVector.1013", %"class.blink::HeapVector.1021", %"class.blink::HeapVector.1038", %"class.blink::HeapVector.1046", %"class.blink::HeapVector.1054", %"class.blink::HeapVector.1067", %"class.WTF::Vector.1074", i32, %"class.blink::Member.1080" }
%"class.blink::HeapHashMap.962" = type { %"class.WTF::HashMap.965" }
%"class.WTF::HashMap.965" = type { %"class.WTF::HashTable.966" }
%"class.WTF::HashTable.966" = type <{ %"struct.WTF::KeyValuePair.968"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.968" = type { %"class.WTF::AtomicString", %"class.blink::Member.2168" }
%"class.blink::Member.2168" = type { %"class.blink::MemberBase.2169" }
%"class.blink::MemberBase.2169" = type { %"class.blink::HeapVector.969"* }
%"class.blink::HeapVector.969" = type { %"class.WTF::Vector.972" }
%"class.WTF::Vector.972" = type { %"class.WTF::VectorBuffer.973" }
%"class.WTF::VectorBuffer.973" = type { %"class.WTF::VectorBufferBase.974" }
%"class.WTF::VectorBufferBase.974" = type { %"class.blink::Member.975"*, i32, i32 }
%"class.blink::Member.975" = type { %"class.blink::MemberBase.976" }
%"class.blink::MemberBase.976" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.979", i64, [4 x i32] }
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.30", %"class.blink::Member.1000" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1005" = type { %"class.WTF::Vector.1008" }
%"class.WTF::Vector.1008" = type { %"class.WTF::VectorBuffer.1009" }
%"class.WTF::VectorBuffer.1009" = type { %"class.WTF::VectorBufferBase.1010" }
%"class.WTF::VectorBufferBase.1010" = type { %"class.blink::Member.1011"*, i32, i32 }
%"class.blink::Member.1011" = type { %"class.blink::MemberBase.2164" }
%"class.blink::MemberBase.2164" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.30", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1013" = type { %"class.WTF::Vector.1016" }
%"class.WTF::Vector.1016" = type { %"class.WTF::VectorBuffer.1017" }
%"class.WTF::VectorBuffer.1017" = type { %"class.WTF::VectorBufferBase.1018" }
%"class.WTF::VectorBufferBase.1018" = type { %"class.blink::Member.1019"*, i32, i32 }
%"class.blink::Member.1019" = type { %"class.blink::MemberBase.2165" }
%"class.blink::MemberBase.2165" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.30" }
%"class.blink::HeapVector.1021" = type { %"class.WTF::Vector.1024" }
%"class.WTF::Vector.1024" = type { %"class.WTF::VectorBuffer.1025" }
%"class.WTF::VectorBuffer.1025" = type { %"class.WTF::VectorBufferBase.1026" }
%"class.WTF::VectorBufferBase.1026" = type { %"class.blink::Member.1027"*, i32, i32 }
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1029", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1029" = type { %"class.WTF::Vector.1032" }
%"class.WTF::Vector.1032" = type { %"class.WTF::VectorBuffer.1033" }
%"class.WTF::VectorBuffer.1033" = type { %"class.WTF::VectorBufferBase.1034" }
%"class.WTF::VectorBufferBase.1034" = type { %"class.blink::Member.1035"*, i32, i32 }
%"class.blink::Member.1035" = type opaque
%"class.blink::HeapVector.1038" = type { %"class.WTF::Vector.1041" }
%"class.WTF::Vector.1041" = type { %"class.WTF::VectorBuffer.1042" }
%"class.WTF::VectorBuffer.1042" = type { %"class.WTF::VectorBufferBase.1043" }
%"class.WTF::VectorBufferBase.1043" = type { %"class.blink::Member.1044"*, i32, i32 }
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.2166" }
%"class.blink::MemberBase.2166" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.30" }
%"class.blink::HeapVector.1046" = type { %"class.WTF::Vector.1049" }
%"class.WTF::Vector.1049" = type { %"class.WTF::VectorBuffer.1050" }
%"class.WTF::VectorBuffer.1050" = type { %"class.WTF::VectorBufferBase.1051" }
%"class.WTF::VectorBufferBase.1051" = type { %"class.blink::Member.1052"*, i32, i32 }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.2167" }
%"class.blink::MemberBase.2167" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1062", %"class.blink::Member.1062", %"class.blink::Member.1062", %"class.blink::Member.1062", %"class.blink::Member.1062", %"class.blink::Member.1062", %"class.blink::Member.1062", %"class.blink::Member.1062", %"class.blink::Member.1062", %"class.blink::Member.1062", i32, [4 x i8] }>
%"class.blink::HeapVector.1054" = type { %"class.WTF::Vector.1057" }
%"class.WTF::Vector.1057" = type { %"class.WTF::VectorBuffer.1058" }
%"class.WTF::VectorBuffer.1058" = type { %"class.WTF::VectorBufferBase.1059" }
%"class.WTF::VectorBufferBase.1059" = type { %"class.blink::Member.1060"*, i32, i32 }
%"class.blink::Member.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1062", %"class.blink::Member.1062", %"class.blink::Member.1062", %"class.blink::Member.1062", %"class.blink::Member.1062" }
%"class.blink::HeapVector.1067" = type { %"class.WTF::Vector.1070" }
%"class.WTF::Vector.1070" = type { %"class.WTF::VectorBuffer.1071" }
%"class.WTF::VectorBuffer.1071" = type { %"class.WTF::VectorBufferBase.1072" }
%"class.WTF::VectorBufferBase.1072" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.979", i32, i32 }
%"class.WTF::Vector.1074" = type { %"class.WTF::VectorBuffer.1075" }
%"class.WTF::VectorBuffer.1075" = type { %"class.WTF::VectorBufferBase.1076" }
%"class.WTF::VectorBufferBase.1076" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1077, i8, [7 x i8] }>
%class.scoped_refptr.1077 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1080" = type { %"class.blink::MemberBase.1081" }
%"class.blink::MemberBase.1081" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1084", %"class.blink::HeapHashMap.1084", %"class.blink::HeapHashMap.1084", %"class.blink::HeapHashMap.1084" }
%"class.blink::HeapHashMap.1084" = type { %"class.WTF::HashMap.1087" }
%"class.WTF::HashMap.1087" = type { %"class.WTF::HashTable.1088" }
%"class.WTF::HashTable.1088" = type <{ %"struct.WTF::KeyValuePair.1090"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1090" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1091" }
%"class.blink::HeapHashMap.1091" = type { %"class.WTF::HashMap.1094" }
%"class.WTF::HashMap.1094" = type { %"class.WTF::HashTable.1095" }
%"class.WTF::HashTable.1095" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.blink::Member.6", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2159", %"class.WTF::Vector.2159" }
%"class.WTF::Vector.2159" = type { %"class.WTF::VectorBuffer.2160" }
%"class.WTF::VectorBuffer.2160" = type { %"class.WTF::VectorBufferBase.2161" }
%"class.WTF::VectorBufferBase.2161" = type { %class.scoped_refptr.2158*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1098" = type { %"class.WTF::HashSet.1101" }
%"class.WTF::HashSet.1101" = type { %"class.WTF::HashTable.1102" }
%"class.WTF::HashTable.1102" = type <{ %"class.blink::Member.21"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1104" = type { %"class.blink::MemberBase.1105" }
%"class.blink::MemberBase.1105" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type { %"class.blink::FontSelector", %"class.blink::WeakMember.1110", %"class.blink::Member.1111", %"class.blink::HeapHashSet.1146", %"class.blink::GenericFontFamilySettings" }
%"class.blink::FontSelector" = type { %"class.blink::FontCacheClient", %"class.blink::Member.1108" }
%"class.blink::FontCacheClient" = type { i32 (...)** }
%"class.blink::Member.1108" = type { %"class.blink::MemberBase.1109" }
%"class.blink::MemberBase.1109" = type { %"class.blink::FontFallbackMap"* }
%"class.blink::WeakMember.1110" = type { %"class.blink::MemberBase.615" }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::FontFaceCache"* }
%"class.blink::FontFaceCache" = type <{ %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1122", %"class.blink::HeapHashMap.1129", %"class.blink::HeapLinkedHashSet", i32, [4 x i8] }>
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type opaque
%"class.blink::HeapHashMap.1122" = type { %"class.WTF::HashMap.1125" }
%"class.WTF::HashMap.1125" = type { %"class.WTF::HashTable.1126" }
%"class.WTF::HashTable.1126" = type <{ %"struct.WTF::KeyValuePair.1128"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1128" = type opaque
%"class.blink::HeapHashMap.1129" = type { %"class.WTF::HashMap.1132" }
%"class.WTF::HashMap.1132" = type { %"class.WTF::HashTable.1133" }
%"class.WTF::HashTable.1133" = type <{ %"struct.WTF::KeyValuePair.1135"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1135" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1138", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1138" = type { %"class.WTF::HashTable.1139" }
%"class.WTF::HashTable.1139" = type <{ %"struct.WTF::KeyValuePair.1141"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1141" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1142", i32, i32 }
%"class.WTF::Vector.1142" = type { %"class.WTF::VectorBuffer.1143" }
%"class.WTF::VectorBuffer.1143" = type { %"class.WTF::VectorBufferBase.1144" }
%"class.WTF::VectorBufferBase.1144" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapHashSet.1146" = type { %"class.WTF::HashSet.1149" }
%"class.WTF::HashSet.1149" = type { %"class.WTF::HashTable.1150" }
%"class.WTF::HashTable.1150" = type <{ %"class.blink::WeakMember.1152"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1152" = type opaque
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1153", %"class.WTF::HashMap.1153", %"class.WTF::HashMap.1153", %"class.WTF::HashMap.1153", %"class.WTF::HashMap.1153", %"class.WTF::HashMap.1153", %"class.WTF::HashMap.1153", %"class.std::__1::unique_ptr.1158" }
%"class.WTF::HashMap.1153" = type { %"class.WTF::HashTable.1154" }
%"class.WTF::HashTable.1154" = type <{ %"struct.WTF::KeyValuePair.1157"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1157" = type opaque
%"class.std::__1::unique_ptr.1158" = type { %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"class.WTF::Vector.1161"* }
%"class.WTF::Vector.1161" = type opaque
%"class.blink::HeapHashMap.1165" = type { %"class.WTF::HashMap.1168" }
%"class.WTF::HashMap.1168" = type { %"class.WTF::HashTable.1169" }
%"class.WTF::HashTable.1169" = type <{ %"struct.WTF::KeyValuePair.1171"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1171" = type opaque
%"class.blink::HeapHashMap.1172" = type { %"class.WTF::HashMap.1175" }
%"class.WTF::HashMap.1175" = type { %"class.WTF::HashTable.1176" }
%"class.WTF::HashTable.1176" = type <{ %"struct.WTF::KeyValuePair.1178"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1178" = type opaque
%"class.std::__1::unique_ptr.1179" = type { %"class.std::__1::__compressed_pair.1180" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1185" = type { %"class.WTF::Vector.1188" }
%"class.WTF::Vector.1188" = type { %"class.WTF::VectorBuffer.1189" }
%"class.WTF::VectorBuffer.1189" = type { %"class.WTF::VectorBufferBase.1190" }
%"class.WTF::VectorBufferBase.1190" = type { %"struct.std::__1::pair.1191"*, i32, i32 }
%"struct.std::__1::pair.1191" = type opaque
%"class.blink::HeapVector.408" = type { %"class.WTF::Vector.411" }
%"class.WTF::Vector.411" = type { %"class.WTF::VectorBuffer.412" }
%"class.WTF::VectorBuffer.412" = type { %"class.WTF::VectorBufferBase.413" }
%"class.WTF::VectorBufferBase.413" = type { %"struct.std::__1::pair.414"*, i32, i32 }
%"struct.std::__1::pair.414" = type opaque
%"class.blink::HeapHashSet.1193" = type { %"class.WTF::HashSet.1196" }
%"class.WTF::HashSet.1196" = type { %"class.WTF::HashTable.1197" }
%"class.WTF::HashTable.1197" = type <{ %"class.blink::WeakMember.1199"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1199" = type { %"class.blink::MemberBase.62" }
%"class.blink::HeapHashMap.1200" = type { %"class.WTF::HashMap.1203" }
%"class.WTF::HashMap.1203" = type { %"class.WTF::HashTable.1204" }
%"class.WTF::HashTable.1204" = type <{ %"struct.WTF::KeyValuePair.1206"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1206" = type { %"class.WTF::AtomicString", %"class.blink::Member.1027" }
%"class.blink::Member.1207" = type { %"class.blink::MemberBase.1208" }
%"class.blink::MemberBase.1208" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1209" = type { %"class.WTF::HashMap.1212" }
%"class.WTF::HashMap.1212" = type { %"class.WTF::HashTable.1213" }
%"class.WTF::HashTable.1213" = type <{ %"struct.WTF::KeyValuePair.1215"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1215" = type opaque
%class.scoped_refptr.1216 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.553 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.554", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.554" = type { %"class.base::RefCounted.555" }
%"class.base::RefCounted.555" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1217" = type { %"class.WTF::HashSet.1220" }
%"class.WTF::HashSet.1220" = type { %"class.WTF::HashTable.1221" }
%"class.WTF::HashTable.1221" = type <{ %"class.blink::Member.1223"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1223" = type opaque
%"class.blink::Member.1224" = type { %"class.blink::MemberBase.1225" }
%"class.blink::MemberBase.1225" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1226" = type { %"class.blink::MemberBase.1227" }
%"class.blink::MemberBase.1227" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1228" = type { %"class.blink::MemberBase.1229" }
%"class.blink::MemberBase.1229" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1230" = type { %"class.WTF::HashMap.1233" }
%"class.WTF::HashMap.1233" = type { %"class.WTF::HashTable.1234" }
%"class.WTF::HashTable.1234" = type <{ %"struct.WTF::KeyValuePair.1236"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1236" = type opaque
%"class.WTF::Vector.1237" = type { %"class.WTF::VectorBuffer.1238" }
%"class.WTF::VectorBuffer.1238" = type { %"class.WTF::VectorBufferBase.1239" }
%"class.WTF::VectorBufferBase.1239" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1244" = type { %"class.blink::MemberBase.1245" }
%"class.blink::MemberBase.1245" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1246" = type { %"class.blink::MemberBase.1247" }
%"class.blink::MemberBase.1247" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1248" = type { %"class.WTF::Vector.1251" }
%"class.WTF::Vector.1251" = type { %"class.WTF::VectorBuffer.1252" }
%"class.WTF::VectorBuffer.1252" = type { %"class.WTF::VectorBufferBase.1253" }
%"class.WTF::VectorBufferBase.1253" = type { %"class.blink::Member.1254"*, i32, i32 }
%"class.blink::Member.1254" = type opaque
%"class.std::__1::unique_ptr.1256" = type { %"class.std::__1::__compressed_pair.1257" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.1258" }
%"struct.std::__1::__compressed_pair_elem.1258" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1262" = type { %"class.WTF::HashSet.1265" }
%"class.WTF::HashSet.1265" = type { %"class.WTF::HashTable.1266" }
%"class.WTF::HashTable.1266" = type <{ %"class.blink::WeakMember.1268"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1268" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1269", i32, [4 x i8] }>
%"class.WTF::Vector.1269" = type { %"class.WTF::VectorBuffer.1270" }
%"class.WTF::VectorBuffer.1270" = type { %"class.WTF::VectorBufferBase.1271" }
%"class.WTF::VectorBufferBase.1271" = type { %"struct.std::__1::pair.1272"*, i32, i32 }
%"struct.std::__1::pair.1272" = type opaque
%"class.blink::Member.1275" = type { %"class.blink::MemberBase.1276" }
%"class.blink::MemberBase.1276" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1277" = type { %"class.WTF::VectorBuffer.1278" }
%"class.WTF::VectorBuffer.1278" = type { %"class.WTF::VectorBufferBase.1279" }
%"class.WTF::VectorBufferBase.1279" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1282" = type { %"class.std::__1::__compressed_pair.1283" }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.1284" }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1288" = type { %"class.WTF::Vector.1291" }
%"class.WTF::Vector.1291" = type { %"class.WTF::VectorBuffer.1292" }
%"class.WTF::VectorBuffer.1292" = type { %"class.WTF::VectorBufferBase.1293" }
%"class.WTF::VectorBufferBase.1293" = type { %"class.blink::Member.1294"*, i32, i32 }
%"class.blink::Member.1294" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.1296" = type { %"class.blink::MemberBase.1297" }
%"class.blink::MemberBase.1297" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1298" = type { %"class.blink::MemberBase.1299" }
%"class.blink::MemberBase.1299" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1300" = type { %"class.blink::MemberBase.1301" }
%"class.blink::MemberBase.1301" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type <{ %"class.blink::Member.1306", %"class.blink::LayoutBlock"*, %"class.WTF::Vector.1308", %"class.blink::TextAutosizer::FingerprintMapper", %"struct.blink::TextAutosizer::PageInfo", i8, i8, [2 x i8] }>
%"class.blink::Member.1306" = type { %"class.blink::MemberBase.1307" }
%"class.blink::MemberBase.1307" = type { %"class.blink::Document"* }
%"class.blink::LayoutBlock" = type opaque
%"class.WTF::Vector.1308" = type { %"class.WTF::VectorBuffer.1309" }
%"class.WTF::VectorBuffer.1309" = type { %"class.WTF::VectorBufferBase.1310" }
%"class.WTF::VectorBufferBase.1310" = type { %"class.std::__1::unique_ptr.1311"*, i32, i32 }
%"class.std::__1::unique_ptr.1311" = type opaque
%"class.blink::TextAutosizer::FingerprintMapper" = type { %"class.WTF::HashMap.1314", %"class.WTF::HashMap.1319", %"class.WTF::HashMap.1324", %"class.WTF::HashSet.1329" }
%"class.WTF::HashMap.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"struct.WTF::KeyValuePair.1318"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1318" = type opaque
%"class.WTF::HashMap.1319" = type { %"class.WTF::HashTable.1320" }
%"class.WTF::HashTable.1320" = type <{ %"struct.WTF::KeyValuePair.1323"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1323" = type opaque
%"class.WTF::HashMap.1324" = type { %"class.WTF::HashTable.1325" }
%"class.WTF::HashTable.1325" = type <{ %"struct.WTF::KeyValuePair.1328"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1328" = type opaque
%"class.WTF::HashSet.1329" = type { %"class.WTF::HashTable.1330" }
%"class.WTF::HashTable.1330" = type <{ %"struct.blink::TextAutosizer::Supercluster"**, i32, i32, i32, [4 x i8] }>
%"struct.blink::TextAutosizer::Supercluster" = type <{ %"class.WTF::HashSet.1333"*, i32, float, i32, [4 x i8] }>
%"class.WTF::HashSet.1333" = type opaque
%"struct.blink::TextAutosizer::PageInfo" = type <{ %"class.blink::mojom::blink::TextAutosizerPageInfo", float, i8, i8, i8, i8 }>
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::Member.1334" = type { %"class.blink::MemberBase.1335" }
%"class.blink::MemberBase.1335" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1336" = type { %"class.WTF::HashTable.1337" }
%"class.WTF::HashTable.1337" = type <{ %"struct.WTF::KeyValuePair.1340"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1340" = type opaque
%"class.blink::Member.1341" = type { %"class.blink::MemberBase.1342" }
%"class.blink::MemberBase.1342" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1343" = type { %"class.blink::MemberBase.1344" }
%"class.blink::MemberBase.1344" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1345" = type { %"class.blink::MemberBase.1346" }
%"class.blink::MemberBase.1346" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1347" = type { %"class.blink::MemberBase.1348" }
%"class.blink::MemberBase.1348" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.364", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.355, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.355 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.364" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.1349" = type { %"class.WTF::HashSet.1352" }
%"class.WTF::HashSet.1352" = type { %"class.WTF::HashTable.1353" }
%"class.WTF::HashTable.1353" = type <{ %"class.blink::Member.1355"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1355" = type opaque
%"class.blink::Member.1356" = type { %"class.blink::MemberBase.1357" }
%"class.blink::MemberBase.1357" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1358" = type { %"class.blink::MemberBase.1359" }
%"class.blink::MemberBase.1359" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1360" = type { %"class.blink::MemberBase.1361" }
%"class.blink::MemberBase.1361" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1362" = type { %"class.blink::MemberBase.1363" }
%"class.blink::MemberBase.1363" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1364" = type { %"class.blink::MemberBase.1365" }
%"class.blink::MemberBase.1365" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1366" = type { %"class.std::__1::__compressed_pair.1367" }
%"class.std::__1::__compressed_pair.1367" = type { %"struct.std::__1::__compressed_pair_elem.1368" }
%"struct.std::__1::__compressed_pair_elem.1368" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1372" = type { %"class.std::__1::__compressed_pair.1373" }
%"class.std::__1::__compressed_pair.1373" = type { %"struct.std::__1::__compressed_pair_elem.1374" }
%"struct.std::__1::__compressed_pair_elem.1374" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.92", %"class.WTF::HashSet.92", %"class.WTF::HashSet.92", %"class.WTF::HashSet.92", %"class.WTF::HashSet.92", %"class.WTF::HashSet.92", i32, [4 x i8], %"class.WTF::HashMap.1375", %"class.WTF::HashMap.1375", %"class.WTF::HashMap.1375", %"class.WTF::HashMap.1375", %"class.WTF::HashMap.1375", %"class.WTF::HashMap.1375", %"class.WTF::HashMap.1375", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1375" = type { %"class.WTF::HashTable.1376" }
%"class.WTF::HashTable.1376" = type <{ %"struct.WTF::KeyValuePair.1379"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1379" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1389" = type { %"class.blink::MemberBase.1390" }
%"class.blink::MemberBase.1390" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1391" = type { %"class.WTF::VectorBuffer.1392" }
%"class.WTF::VectorBuffer.1392" = type { %"class.WTF::VectorBufferBase.1393" }
%"class.WTF::VectorBufferBase.1393" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1396" = type { %"class.WTF::HashMap.1399" }
%"class.WTF::HashMap.1399" = type { %"class.WTF::HashTable.1400" }
%"class.WTF::HashTable.1400" = type <{ %"struct.WTF::KeyValuePair.1402"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1402" = type opaque
%"class.blink::Member.1403" = type { %"class.blink::MemberBase.1404" }
%"class.blink::MemberBase.1404" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1405" = type { %"class.std::__1::__compressed_pair.1406" }
%"class.std::__1::__compressed_pair.1406" = type { %"struct.std::__1::__compressed_pair_elem.1407" }
%"struct.std::__1::__compressed_pair_elem.1407" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1413" = type { %"class.blink::MemberBase.1414" }
%"class.blink::MemberBase.1414" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1415" = type { %"class.WTF::HashMap.1418" }
%"class.WTF::HashMap.1418" = type { %"class.WTF::HashTable.1419" }
%"class.WTF::HashTable.1419" = type <{ %"struct.WTF::KeyValuePair.1421"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1421" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1422" }
%"class.blink::HeapHashSet.1422" = type { %"class.WTF::HashSet.1425" }
%"class.WTF::HashSet.1425" = type { %"class.WTF::HashTable.1426" }
%"class.WTF::HashTable.1426" = type <{ %"class.blink::WeakMember.1428"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1428" = type opaque
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1431" = type { %"class.blink::MemberBase.1432" }
%"class.blink::MemberBase.1432" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.1438", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1445", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1438" = type { %"class.WTF::HashSet.1441" }
%"class.WTF::HashSet.1441" = type { %"class.WTF::HashTable.1442" }
%"class.WTF::HashTable.1442" = type <{ %"class.blink::Member.1444"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1444" = type opaque
%"class.blink::HeapTaskRunnerTimer.1445" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1446", { i64, i64 } }
%"class.blink::WeakMember.1446" = type { %"class.blink::MemberBase.1432" }
%"class.blink::WeakMember.1433" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1434" = type { %"class.blink::MemberBase.1435" }
%"class.blink::MemberBase.1435" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"struct.blink::FontDescription::FamilyDescription" = type { i32, %"class.blink::FontFamily" }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.1690" }
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { %"class.blink::Settings"* }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.blink::FontDescription::Size" = type { i8, float }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.blink::FontDescription::VariantLigatures" = type { i8, [3 x i8] }
%"class.blink::FontVariantNumeric" = type { %union.anon.1697 }
%union.anon.1697 = type { i32 }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1741", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1749", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1763", %"class.blink::FrameLoader", %"class.blink::Member.1784", %"class.blink::Member.21", %"class.blink::Member.1786", %"class.blink::Member.1788", %"class.blink::Member.1790", %"class.blink::Member.1792", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1794", %class.scoped_refptr.1796, %"class.blink::Member.1797", %"class.blink::Member.1799", %"class.blink::Member.1801", %"class.blink::Member.1803", %"class.blink::Member.1805", %"class.blink::Member.1807", %"class.blink::Member.1809", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1813", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1819", %"class.std::__1::unique_ptr.1820", %"class.absl::optional.1729", i32, [4 x i8], %"class.std::__1::unique_ptr.1826", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1834", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1839", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1844", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1847", %"class.blink::Member.1849", %"class.blink::Member.1851", %"class.blink::Member.1853", %"class.mojo::StructPtr.1856", %"class.blink::Member.1865", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1867", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1702", %"class.blink::Member.1704", %"class.blink::Member.1706", i8, i32, i8, i32, %"class.blink::Member.1708", %"class.blink::Member.1710", %"class.blink::FrameLifecycle", %"class.blink::Member.1700", %"class.blink::Member.1700", %"class.blink::Member.1700", %"class.blink::Member.1700", %"class.blink::Member.1700", %"class.blink::Member.1700", %"class.blink::Member.1712", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1722", i8, %"class.base::UnguessableToken", %"class.absl::optional.1724", %"class.absl::optional.1729", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1700", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1702" = type { %"class.blink::MemberBase.1703" }
%"class.blink::MemberBase.1703" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1704" = type { %"class.blink::MemberBase.1705" }
%"class.blink::MemberBase.1705" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1706" = type { %"class.blink::MemberBase.1707" }
%"class.blink::MemberBase.1707" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.1708" = type { %"class.blink::MemberBase.1709" }
%"class.blink::MemberBase.1709" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1710" = type { %"class.blink::MemberBase.1711" }
%"class.blink::MemberBase.1711" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1700" = type { %"class.blink::MemberBase.1701" }
%"class.blink::MemberBase.1701" = type { %"class.blink::Frame"* }
%"class.blink::Member.1712" = type { %"class.blink::MemberBase.1713" }
%"class.blink::MemberBase.1713" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1700", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1714" }
%"class.std::__1::vector.1714" = type { %"class.std::__1::__vector_base.1715" }
%"class.std::__1::__vector_base.1715" = type { %"struct.std::__1::pair.1716"*, %"struct.std::__1::pair.1716"*, %"class.std::__1::__compressed_pair.1717" }
%"struct.std::__1::pair.1716" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1717" = type { %"struct.std::__1::__compressed_pair_elem.1718" }
%"struct.std::__1::__compressed_pair_elem.1718" = type { %"struct.std::__1::pair.1716"* }
%"class.blink::Member.1722" = type { %"class.blink::MemberBase.1723" }
%"class.blink::MemberBase.1723" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1724" = type { %"class.absl::optional_internal::optional_data.1725" }
%"class.absl::optional_internal::optional_data.1725" = type { %"class.absl::optional_internal::optional_data_base.1726" }
%"class.absl::optional_internal::optional_data_base.1726" = type { %"class.absl::optional_internal::optional_data_dtor_base.1727" }
%"class.absl::optional_internal::optional_data_dtor_base.1727" = type { i8, %union.anon.1728 }
%union.anon.1728 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1734" }
%"class.blink::HeapHashSet.1734" = type { %"class.WTF::HashSet.1737" }
%"class.WTF::HashSet.1737" = type { %"class.WTF::HashTable.1738" }
%"class.WTF::HashTable.1738" = type <{ %"class.blink::WeakMember.1740"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1740" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1741" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1742" }
%"class.blink::HeapHashMap.1742" = type { %"class.WTF::HashMap.1745" }
%"class.WTF::HashMap.1745" = type { %"class.WTF::HashTable.1746" }
%"class.WTF::HashTable.1746" = type <{ %"struct.WTF::KeyValuePair.1748"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1748" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1749" = type { %"class.std::__1::__compressed_pair.1750" }
%"class.std::__1::__compressed_pair.1750" = type { %"struct.std::__1::__compressed_pair_elem.1751" }
%"struct.std::__1::__compressed_pair_elem.1751" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1752", %"class.base::WeakPtrFactory.1757" }
%"class.WTF::HashMap.1752" = type { %"class.WTF::HashTable.1753" }
%"class.WTF::HashTable.1753" = type <{ %"struct.WTF::KeyValuePair.1756"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1756" = type opaque
%"class.base::WeakPtrFactory.1757" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1761" }
%"class.blink::Member.1761" = type { %"class.blink::MemberBase.1762" }
%"class.blink::MemberBase.1762" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2172" }
%"class.blink::WeakMember.2172" = type { %"class.blink::MemberBase.2173" }
%"class.blink::MemberBase.2173" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2174", i64, %"class.std::__1::map.2175", i8*, i64, %"class.base::WeakPtrFactory.2184" }
%"class.base::RepeatingCallback.2174" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2175" = type { %"class.std::__1::__tree.2176" }
%"class.std::__1::__tree.2176" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2177", %"class.std::__1::__compressed_pair.2181" }
%"class.std::__1::__compressed_pair.2177" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"class.std::__1::__compressed_pair.2181" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"class.base::WeakPtrFactory.2184" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1763" = type { %"class.WTF::HashSet.1766" }
%"class.WTF::HashSet.1766" = type { %"class.WTF::HashTable.1767" }
%"class.WTF::HashTable.1767" = type <{ %"class.blink::WeakMember.1769"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1769" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1712", %"class.blink::Member.1770", %"class.blink::Member.1772", %"class.std::__1::unique_ptr.1774", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1780" }
%"class.blink::Member.1770" = type { %"class.blink::MemberBase.1771" }
%"class.blink::MemberBase.1771" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1772" = type { %"class.blink::MemberBase.1773" }
%"class.blink::MemberBase.1773" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1774" = type { %"class.std::__1::__compressed_pair.1775" }
%"class.std::__1::__compressed_pair.1775" = type { %"struct.std::__1::__compressed_pair_elem.1776" }
%"struct.std::__1::__compressed_pair_elem.1776" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.1780" = type { %"class.WTF::HashTable.1781" }
%"class.WTF::HashTable.1781" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1784" = type { %"class.blink::MemberBase.1785" }
%"class.blink::MemberBase.1785" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1874", %"class.blink::Member.1712", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1879", i8, i32, %"class.blink::Color", %"class.absl::optional.1881", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1886", %"class.blink::Member.1888", %"class.blink::Member.1888", %"class.std::__1::unique_ptr.1891", i32, [4 x i8], %"class.WTF::HashSet.1894", %"class.blink::Member.1901", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1903", %"class.blink::HeapHashSet.1910", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1918", i8, %"class.blink::Member.1924", i8, i8, i32, %"class.blink::HeapLinkedHashSet.1926", %"class.blink::HeapLinkedHashSet.1940", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1954", i8, %"class.std::__1::unique_ptr.1960", %"class.std::__1::unique_ptr.2077", %"class.WTF::Vector.2083", i32, %class.scoped_refptr.2088, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2089", %"class.blink::Member.2091", %"class.blink::Member.2093", %"class.blink::HeapHashSet.2095", %"class.blink::HeapHashSet.2102", %"class.std::__1::unique_ptr.2109", %"class.std::__1::unique_ptr.2116", %"class.WTF::Vector.115" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1874" = type { %"class.WTF::HashTable.1875" }
%"class.WTF::HashTable.1875" = type <{ %class.scoped_refptr.1878*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1878 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1879" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1880", { i64, i64 } }
%"class.blink::WeakMember.1880" = type { %"class.blink::MemberBase.1785" }
%"class.absl::optional.1881" = type { %"class.absl::optional_internal::optional_data.1882" }
%"class.absl::optional_internal::optional_data.1882" = type { %"class.absl::optional_internal::optional_data_base.1883" }
%"class.absl::optional_internal::optional_data_base.1883" = type { %"class.absl::optional_internal::optional_data_dtor_base.1884" }
%"class.absl::optional_internal::optional_data_dtor_base.1884" = type { i8, %union.anon.1885 }
%union.anon.1885 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1886" = type { %"class.blink::MemberBase.1887" }
%"class.blink::MemberBase.1887" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1888" = type { %"class.blink::MemberBase.1889" }
%"class.blink::MemberBase.1889" = type { %"class.blink::HeapHashSet.1890"* }
%"class.blink::HeapHashSet.1890" = type opaque
%"class.std::__1::unique_ptr.1891" = type { %"class.std::__1::__compressed_pair.1892" }
%"class.std::__1::__compressed_pair.1892" = type { %"struct.std::__1::__compressed_pair_elem.1893" }
%"struct.std::__1::__compressed_pair_elem.1893" = type { %"class.WTF::HashSet.1894"* }
%"class.WTF::HashSet.1894" = type { %"class.WTF::HashTable.1895" }
%"class.WTF::HashTable.1895" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1901" = type { %"class.blink::MemberBase.1902" }
%"class.blink::MemberBase.1902" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1903" = type { %"class.WTF::HashSet.1906" }
%"class.WTF::HashSet.1906" = type { %"class.WTF::HashTable.1907" }
%"class.WTF::HashTable.1907" = type <{ %"class.blink::Member.1909"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1909" = type opaque
%"class.blink::HeapHashSet.1910" = type { %"class.WTF::HashSet.1913" }
%"class.WTF::HashSet.1913" = type { %"class.WTF::HashTable.1914" }
%"class.WTF::HashTable.1914" = type <{ %"class.blink::Member.1916"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2150", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2152", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.21" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.2150" = type { %"class.blink::MemberBase.2151" }
%"class.blink::MemberBase.2151" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.2152" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2153", { i64, i64 } }
%"class.blink::WeakMember.2153" = type { %"class.blink::MemberBase.1917" }
%"class.std::__1::unique_ptr.1918" = type { %"class.std::__1::__compressed_pair.1919" }
%"class.std::__1::__compressed_pair.1919" = type { %"struct.std::__1::__compressed_pair_elem.1920" }
%"struct.std::__1::__compressed_pair_elem.1920" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1924" = type { %"class.blink::MemberBase.1925" }
%"class.blink::MemberBase.1925" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet.1926" = type { %"class.WTF::LinkedHashSet.1929" }
%"class.WTF::LinkedHashSet.1929" = type { %"class.WTF::HashMap.1930", %"class.WTF::VectorBackedLinkedList.1934" }
%"class.WTF::HashMap.1930" = type { %"class.WTF::HashTable.1931" }
%"class.WTF::HashTable.1931" = type <{ %"struct.WTF::KeyValuePair.1933"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1933" = type opaque
%"class.WTF::VectorBackedLinkedList.1934" = type { %"class.WTF::Vector.1935", i32, i32 }
%"class.WTF::Vector.1935" = type { %"class.WTF::VectorBuffer.1936" }
%"class.WTF::VectorBuffer.1936" = type { %"class.WTF::VectorBufferBase.1937" }
%"class.WTF::VectorBufferBase.1937" = type { %"class.WTF::VectorBackedLinkedListNode.1938"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1938" = type opaque
%"class.blink::HeapLinkedHashSet.1940" = type { %"class.WTF::LinkedHashSet.1943" }
%"class.WTF::LinkedHashSet.1943" = type { %"class.WTF::HashMap.1944", %"class.WTF::VectorBackedLinkedList.1948" }
%"class.WTF::HashMap.1944" = type { %"class.WTF::HashTable.1945" }
%"class.WTF::HashTable.1945" = type <{ %"struct.WTF::KeyValuePair.1947"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1947" = type opaque
%"class.WTF::VectorBackedLinkedList.1948" = type { %"class.WTF::Vector.1949", i32, i32 }
%"class.WTF::Vector.1949" = type { %"class.WTF::VectorBuffer.1950" }
%"class.WTF::VectorBuffer.1950" = type { %"class.WTF::VectorBufferBase.1951" }
%"class.WTF::VectorBufferBase.1951" = type { %"class.WTF::VectorBackedLinkedListNode.1952"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1952" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1954" = type { %"class.std::__1::__compressed_pair.1955" }
%"class.std::__1::__compressed_pair.1955" = type { %"struct.std::__1::__compressed_pair_elem.1956" }
%"struct.std::__1::__compressed_pair_elem.1956" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1960" = type { %"class.std::__1::__compressed_pair.1961" }
%"class.std::__1::__compressed_pair.1961" = type { %"struct.std::__1::__compressed_pair_elem.1962" }
%"struct.std::__1::__compressed_pair_elem.1962" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1963, %class.scoped_refptr.1963, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2054", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2059", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1963 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1964", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1971" }
%"class.WTF::RefCounted.1964" = type { %"class.base::RefCounted.1965" }
%"class.base::RefCounted.1965" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1966", i32, [4 x i8] }>
%"class.WTF::Vector.1966" = type { %"class.WTF::VectorBuffer.1967" }
%"class.WTF::VectorBuffer.1967" = type { %"class.WTF::VectorBufferBase.1968" }
%"class.WTF::VectorBufferBase.1968" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1971" = type { %"class.WTF::VectorBuffer.1972" }
%"class.WTF::VectorBuffer.1972" = type { %"class.WTF::VectorBufferBase.1973" }
%"class.WTF::VectorBufferBase.1973" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1977", %"class.std::__1::unique_ptr.2026", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1974, %class.scoped_refptr.1975, %class.scoped_refptr.1976 }
%class.scoped_refptr.1974 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1990", i8, i8, %class.scoped_refptr.1974, i32, i32 }
%"class.WTF::RefCounted.1990" = type { %"class.base::RefCounted.1991" }
%"class.base::RefCounted.1991" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1975 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2145" }
%"class.blink::PaintPropertyNode.2145" = type { %"class.WTF::RefCounted.2146", i8, i8, %class.scoped_refptr.1975, i32, i32 }
%"class.WTF::RefCounted.2146" = type { %"class.base::RefCounted.2147" }
%"class.base::RefCounted.2147" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1976 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.2142" }
%"class.blink::PaintPropertyNode.2142" = type { %"class.WTF::RefCounted.2143", i8, i8, %class.scoped_refptr.1976, i32, i32 }
%"class.WTF::RefCounted.2143" = type { %"class.base::RefCounted.2144" }
%"class.base::RefCounted.2144" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1977" = type { %"class.std::__1::__compressed_pair.1978" }
%"class.std::__1::__compressed_pair.1978" = type { %"struct.std::__1::__compressed_pair_elem.1979" }
%"struct.std::__1::__compressed_pair_elem.1979" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1980", %"class.WTF::Vector.1985", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1980" = type { %"class.WTF::VectorBuffer.1981" }
%"class.WTF::VectorBuffer.1981" = type { %"class.WTF::VectorBufferBase.1982" }
%"class.WTF::VectorBufferBase.1982" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1985" = type { %"class.WTF::VectorBuffer.1986" }
%"class.WTF::VectorBuffer.1986" = type { %"class.WTF::VectorBufferBase.1987" }
%"class.WTF::VectorBufferBase.1987" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.2005" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1998, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1999", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1992" }
%"class.std::__1::unique_ptr.1992" = type { %"class.std::__1::__compressed_pair.1993" }
%"class.std::__1::__compressed_pair.1993" = type { %"struct.std::__1::__compressed_pair_elem.1994" }
%"struct.std::__1::__compressed_pair_elem.1994" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1998 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.2127", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.2127" = type { %"class.WTF::RefCounted.2128", i8, i8, %class.scoped_refptr.1998, i32, i32 }
%"class.WTF::RefCounted.2128" = type { %"class.base::RefCounted.2129" }
%"class.base::RefCounted.2129" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.2130" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.2130" = type { %"class.absl::optional_internal::optional_data.2131" }
%"class.absl::optional_internal::optional_data.2131" = type { %"class.absl::optional_internal::optional_data_base.2132" }
%"class.absl::optional_internal::optional_data_base.2132" = type { %"class.absl::optional_internal::optional_data_dtor_base.2133" }
%"class.absl::optional_internal::optional_data_dtor_base.2133" = type { i8, %union.anon.2134 }
%union.anon.2134 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.2135", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.2135" = type { %"class.std::__1::__vector_base.2136" }
%"class.std::__1::__vector_base.2136" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.2137" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.2137" = type { %"struct.std::__1::__compressed_pair_elem.2138" }
%"struct.std::__1::__compressed_pair_elem.2138" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1999" = type { %"class.std::__1::__compressed_pair.2000" }
%"class.std::__1::__compressed_pair.2000" = type { %"struct.std::__1::__compressed_pair_elem.2001" }
%"struct.std::__1::__compressed_pair_elem.2001" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.2005" = type { %"class.std::__1::__compressed_pair.2006" }
%"class.std::__1::__compressed_pair.2006" = type { %"struct.std::__1::__compressed_pair_elem.2007" }
%"struct.std::__1::__compressed_pair_elem.2007" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.2008", %"class.std::__1::unique_ptr.2014", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2008" = type { %"class.std::__1::__compressed_pair.2009" }
%"class.std::__1::__compressed_pair.2009" = type { %"struct.std::__1::__compressed_pair_elem.2010" }
%"struct.std::__1::__compressed_pair_elem.2010" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2014" = type { %"class.std::__1::__compressed_pair.2015" }
%"class.std::__1::__compressed_pair.2015" = type { %"struct.std::__1::__compressed_pair_elem.2016" }
%"struct.std::__1::__compressed_pair_elem.2016" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2026" = type { %"class.std::__1::__compressed_pair.2027" }
%"class.std::__1::__compressed_pair.2027" = type { %"struct.std::__1::__compressed_pair_elem.2028" }
%"struct.std::__1::__compressed_pair_elem.2028" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2029", %"class.absl::optional.2029" }
%"class.absl::optional.2029" = type { %"class.absl::optional_internal::optional_data.2030" }
%"class.absl::optional_internal::optional_data.2030" = type { %"class.absl::optional_internal::optional_data_base.2031" }
%"class.absl::optional_internal::optional_data_base.2031" = type { %"class.absl::optional_internal::optional_data_dtor_base.2032" }
%"class.absl::optional_internal::optional_data_dtor_base.2032" = type { i8, [3 x i8], %union.anon.2033 }
%union.anon.2033 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1971"*, %"class.absl::optional.2039", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2039" = type { %"class.absl::optional_internal::optional_data.2040" }
%"class.absl::optional_internal::optional_data.2040" = type { %"class.absl::optional_internal::optional_data_base.2041" }
%"class.absl::optional_internal::optional_data_base.2041" = type { %"class.absl::optional_internal::optional_data_dtor_base.2042" }
%"class.absl::optional_internal::optional_data_dtor_base.2042" = type { i8, %union.anon.2043 }
%union.anon.2043 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2044", %"class.WTF::Vector.2049" }
%"class.WTF::Vector.2044" = type { %"class.WTF::VectorBuffer.2045" }
%"class.WTF::VectorBuffer.2045" = type { %"class.WTF::VectorBufferBase.2046", [128 x i8] }
%"class.WTF::VectorBufferBase.2046" = type { i32*, i32, i32 }
%"class.WTF::Vector.2049" = type { %"class.WTF::VectorBuffer.2050" }
%"class.WTF::VectorBuffer.2050" = type { %"class.WTF::VectorBufferBase.2051", [128 x i8] }
%"class.WTF::VectorBufferBase.2051" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2054" = type { %"class.WTF::VectorBuffer.2055" }
%"class.WTF::VectorBuffer.2055" = type { %"class.WTF::VectorBufferBase.2056" }
%"class.WTF::VectorBufferBase.2056" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2059" = type { %"class.WTF::HashTable.2060" }
%"class.WTF::HashTable.2060" = type <{ %"struct.WTF::KeyValuePair.2063"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2063" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2064", %"class.WTF::Vector.2069" }
%"class.WTF::HashMap.2064" = type { %"class.WTF::HashTable.2065" }
%"class.WTF::HashTable.2065" = type <{ %"struct.WTF::KeyValuePair.2068"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2068" = type opaque
%"class.WTF::Vector.2069" = type { %"class.WTF::VectorBuffer.2070" }
%"class.WTF::VectorBuffer.2070" = type { %"class.WTF::VectorBufferBase.2071" }
%"class.WTF::VectorBufferBase.2071" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2077" = type { %"class.std::__1::__compressed_pair.2078" }
%"class.std::__1::__compressed_pair.2078" = type { %"struct.std::__1::__compressed_pair_elem.2079" }
%"struct.std::__1::__compressed_pair_elem.2079" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2083" = type { %"class.WTF::VectorBuffer.2084" }
%"class.WTF::VectorBuffer.2084" = type { %"class.WTF::VectorBufferBase.2085" }
%"class.WTF::VectorBufferBase.2085" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2088 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2089" = type { %"class.blink::MemberBase.2090" }
%"class.blink::MemberBase.2090" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2091" = type { %"class.blink::MemberBase.2092" }
%"class.blink::MemberBase.2092" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2093" = type { %"class.blink::MemberBase.2094" }
%"class.blink::MemberBase.2094" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2095" = type { %"class.WTF::HashSet.2098" }
%"class.WTF::HashSet.2098" = type { %"class.WTF::HashTable.2099" }
%"class.WTF::HashTable.2099" = type <{ %"class.blink::WeakMember.2101"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2101" = type opaque
%"class.blink::HeapHashSet.2102" = type { %"class.WTF::HashSet.2105" }
%"class.WTF::HashSet.2105" = type { %"class.WTF::HashTable.2106" }
%"class.WTF::HashTable.2106" = type <{ %"class.blink::WeakMember.2108"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2108" = type opaque
%"class.std::__1::unique_ptr.2109" = type { %"class.std::__1::__compressed_pair.2110" }
%"class.std::__1::__compressed_pair.2110" = type { %"struct.std::__1::__compressed_pair_elem.2111" }
%"struct.std::__1::__compressed_pair_elem.2111" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2112" }
%"class.base::time_internal::TimeBase.2112" = type { i64 }
%"class.std::__1::unique_ptr.2116" = type { %"class.std::__1::__compressed_pair.2117" }
%"class.std::__1::__compressed_pair.2117" = type { %"struct.std::__1::__compressed_pair_elem.2118" }
%"struct.std::__1::__compressed_pair_elem.2118" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2119", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2119" = type { %"class.absl::optional_internal::optional_data.2120" }
%"class.absl::optional_internal::optional_data.2120" = type { %"class.absl::optional_internal::optional_data_base.2121" }
%"class.absl::optional_internal::optional_data_base.2121" = type { %"class.absl::optional_internal::optional_data_dtor_base.2122" }
%"class.absl::optional_internal::optional_data_dtor_base.2122" = type { i8, %union.anon.2123 }
%union.anon.2123 = type { %"class.base::Time" }
%"class.blink::Member.1786" = type { %"class.blink::MemberBase.1787" }
%"class.blink::MemberBase.1787" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1788" = type { %"class.blink::MemberBase.1789" }
%"class.blink::MemberBase.1789" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1790" = type { %"class.blink::MemberBase.1791" }
%"class.blink::MemberBase.1791" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1792" = type { %"class.blink::MemberBase.1793" }
%"class.blink::MemberBase.1793" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1794" = type { %"class.blink::MemberBase.1795" }
%"class.blink::MemberBase.1795" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1796 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1797" = type { %"class.blink::MemberBase.1798" }
%"class.blink::MemberBase.1798" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1799" = type { %"class.blink::MemberBase.1800" }
%"class.blink::MemberBase.1800" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1801" = type { %"class.blink::MemberBase.1802" }
%"class.blink::MemberBase.1802" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1803" = type { %"class.blink::MemberBase.1804" }
%"class.blink::MemberBase.1804" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1805" = type { %"class.blink::MemberBase.1806" }
%"class.blink::MemberBase.1806" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1807" = type { %"class.blink::MemberBase.1808" }
%"class.blink::MemberBase.1808" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1809" = type { %"class.blink::MemberBase.1810" }
%"class.blink::MemberBase.1810" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1811" }
%"class.blink::Member.1811" = type { %"class.blink::MemberBase.1812" }
%"class.blink::MemberBase.1812" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2280" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2187, %"class.std::__1::unique_ptr.1607", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1621, i32 }>
%class.scoped_refptr.2187 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1621, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2246", %"class.absl::optional.2251", %"class.absl::optional.2204", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2271", i8, [7 x i8], %class.scoped_refptr.1621, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1634" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1621, %"class.std::__1::unique_ptr.2188", %"class.absl::optional.2198", %"struct.std::__1::atomic.349", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2204", %"class.std::__1::unique_ptr.2209", i8, i64, %class.scoped_refptr.2243, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2244", %"class.base::WeakPtrFactory.2245" }
%"class.std::__1::unique_ptr.2188" = type { %"class.std::__1::__compressed_pair.2189" }
%"class.std::__1::__compressed_pair.2189" = type { %"struct.std::__1::__compressed_pair_elem.2190" }
%"struct.std::__1::__compressed_pair_elem.2190" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1621, i8, %"class.mojo::ScopedHandleBase.2191", %class.scoped_refptr.2192, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2193", i8*, %"class.base::WeakPtrFactory.2194" }
%"class.mojo::ScopedHandleBase.2191" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2192 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2193" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2194" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2198" = type { %"class.absl::optional_internal::optional_data.2199" }
%"class.absl::optional_internal::optional_data.2199" = type { %"class.absl::optional_internal::optional_data_base.2200" }
%"class.absl::optional_internal::optional_data_base.2200" = type { %"class.absl::optional_internal::optional_data_dtor_base.2201" }
%"class.absl::optional_internal::optional_data_dtor_base.2201" = type { i8, %union.anon.2202 }
%union.anon.2202 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2203", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2203" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2209" = type { %"class.std::__1::__compressed_pair.2210" }
%"class.std::__1::__compressed_pair.2210" = type { %"struct.std::__1::__compressed_pair_elem.2211" }
%"struct.std::__1::__compressed_pair_elem.2211" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2212", i8, i64, %class.scoped_refptr.2213, %class.scoped_refptr.2238 }
%"class.base::RepeatingCallback.2212" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2213 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2214", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2216", %"class.std::__1::map.2227", i8, [7 x i8] }>
%"class.base::RefCounted.2214" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2215 }
%class.scoped_refptr.2215 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2216" = type { %"class.std::__1::__tree.2217" }
%"class.std::__1::__tree.2217" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2218", %"class.std::__1::__compressed_pair.2222" }
%"class.std::__1::__compressed_pair.2218" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"class.std::__1::__compressed_pair.2222" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"class.std::__1::map.2227" = type { %"class.std::__1::__tree.2228" }
%"class.std::__1::__tree.2228" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2229", %"class.std::__1::__compressed_pair.2233" }
%"class.std::__1::__compressed_pair.2229" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"class.std::__1::__compressed_pair.2233" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%class.scoped_refptr.2238 = type { %"class.base::RefCountedData.2239"* }
%"class.base::RefCountedData.2239" = type opaque
%class.scoped_refptr.2243 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2244" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2245" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2246" = type { %"class.absl::optional_internal::optional_data.2247" }
%"class.absl::optional_internal::optional_data.2247" = type { %"class.absl::optional_internal::optional_data_base.2248" }
%"class.absl::optional_internal::optional_data_base.2248" = type { %"class.absl::optional_internal::optional_data_dtor_base.2249" }
%"class.absl::optional_internal::optional_data_dtor_base.2249" = type { i8, %union.anon.2250 }
%union.anon.2250 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2251" = type { %"class.absl::optional_internal::optional_data.2252" }
%"class.absl::optional_internal::optional_data.2252" = type { %"class.absl::optional_internal::optional_data_base.2253" }
%"class.absl::optional_internal::optional_data_base.2253" = type { %"class.absl::optional_internal::optional_data_dtor_base.2254" }
%"class.absl::optional_internal::optional_data_dtor_base.2254" = type { i8, [7 x i8], %union.anon.2255 }
%union.anon.2255 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2204" = type { %"class.absl::optional_internal::optional_data.2205" }
%"class.absl::optional_internal::optional_data.2205" = type { %"class.absl::optional_internal::optional_data_base.2206" }
%"class.absl::optional_internal::optional_data_base.2206" = type { %"class.absl::optional_internal::optional_data_dtor_base.2207" }
%"class.absl::optional_internal::optional_data_dtor_base.2207" = type { i8, %union.anon.2208 }
%union.anon.2208 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2256 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2256 = type { %"class.std::__1::map.2259" }
%"class.std::__1::map.2259" = type { %"class.std::__1::__tree.2260" }
%"class.std::__1::__tree.2260" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2261", %"class.std::__1::__compressed_pair.2265" }
%"class.std::__1::__compressed_pair.2261" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"class.std::__1::__compressed_pair.2265" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2270"*, i64 }
%"class.std::__1::unique_ptr.2270" = type opaque
%"class.std::__1::map.2271" = type { %"class.std::__1::__tree.2272" }
%"class.std::__1::__tree.2272" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2273", %"class.std::__1::__compressed_pair.2277" }
%"class.std::__1::__compressed_pair.2273" = type { %"struct.std::__1::__compressed_pair_elem.1511" }
%"class.std::__1::__compressed_pair.2277" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2280" = type { %"class.std::__1::__compressed_pair.2281" }
%"class.std::__1::__compressed_pair.2281" = type { %"struct.std::__1::__compressed_pair_elem.2282" }
%"struct.std::__1::__compressed_pair_elem.2282" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1813" = type { %"class.std::__1::__compressed_pair.1814" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1819" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1820" = type { %"class.std::__1::__compressed_pair.1821" }
%"class.std::__1::__compressed_pair.1821" = type { %"struct.std::__1::__compressed_pair_elem.1822" }
%"struct.std::__1::__compressed_pair_elem.1822" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.1729" = type { %"class.absl::optional_internal::optional_data.1730" }
%"class.absl::optional_internal::optional_data.1730" = type { %"class.absl::optional_internal::optional_data_base.1731" }
%"class.absl::optional_internal::optional_data_base.1731" = type { %"class.absl::optional_internal::optional_data_dtor_base.1732" }
%"class.absl::optional_internal::optional_data_dtor_base.1732" = type { i8, %union.anon.1733 }
%union.anon.1733 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1826" = type { %"class.std::__1::__compressed_pair.1827" }
%"class.std::__1::__compressed_pair.1827" = type { %"struct.std::__1::__compressed_pair_elem.1828" }
%"struct.std::__1::__compressed_pair_elem.1828" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1832" }
%"class.blink::Member.1832" = type { %"class.blink::MemberBase.1833" }
%"class.blink::MemberBase.1833" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2288" }
%"class.mojo::AssociatedRemote.2288" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2289" }
%"class.mojo::internal::AssociatedInterfacePtrState.2289" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2290" }
%"class.std::__1::unique_ptr.2290" = type { %"class.std::__1::__compressed_pair.2291" }
%"class.std::__1::__compressed_pair.2291" = type { %"struct.std::__1::__compressed_pair_elem.2292" }
%"struct.std::__1::__compressed_pair_elem.2292" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1834" = type { %"class.blink::Member.1835" }
%"class.blink::Member.1835" = type { %"class.blink::MemberBase.1836" }
%"class.blink::MemberBase.1836" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2298" }
%"class.mojo::AssociatedRemote.2298" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2299" }
%"class.mojo::internal::AssociatedInterfacePtrState.2299" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2300" }
%"class.std::__1::unique_ptr.2300" = type { %"class.std::__1::__compressed_pair.2301" }
%"class.std::__1::__compressed_pair.2301" = type { %"struct.std::__1::__compressed_pair_elem.2302" }
%"struct.std::__1::__compressed_pair_elem.2302" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1837" }
%"class.blink::Member.1837" = type { %"class.blink::MemberBase.1838" }
%"class.blink::MemberBase.1838" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1712", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2308" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1607" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2308" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1839" = type { %"class.blink::Member.1840" }
%"class.blink::Member.1840" = type { %"class.blink::MemberBase.1841" }
%"class.blink::MemberBase.1841" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2311", %"class.blink::Member.1712", %"class.mojo::AssociatedReceiver.2312" }
%"class.blink::ThreadState::PrefinalizerRegistration.2311" = type { i8 }
%"class.mojo::AssociatedReceiver.2312" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2313" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2313" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1842" }
%"class.blink::Member.1842" = type { %"class.blink::MemberBase.1843" }
%"class.blink::MemberBase.1843" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2316", %"class.blink::Member.1712", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2316" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2187, %"class.std::__1::unique_ptr.1607", %"class.base::WeakPtrFactory.2317" }
%"class.base::WeakPtrFactory.2317" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1844" = type { %"class.blink::Member.1845" }
%"class.blink::Member.1845" = type { %"class.blink::MemberBase.1846" }
%"class.blink::MemberBase.1846" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2320", %"class.blink::Member.1712", %"class.mojo::AssociatedReceiver.2321" }
%"class.blink::ThreadState::PrefinalizerRegistration.2320" = type { i8 }
%"class.mojo::AssociatedReceiver.2321" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2322" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2322" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1847" = type { %"class.blink::MemberBase.1848" }
%"class.blink::MemberBase.1848" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1849" = type { %"class.blink::MemberBase.1850" }
%"class.blink::MemberBase.1850" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1851" = type { %"class.blink::MemberBase.1852" }
%"class.blink::MemberBase.1852" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1853" = type { %"class.blink::MemberBase.1854" }
%"class.blink::MemberBase.1854" = type { %"class.blink::HeapHashMap.1855"* }
%"class.blink::HeapHashMap.1855" = type opaque
%"class.mojo::StructPtr.1856" = type { %"class.std::__1::unique_ptr.1857" }
%"class.std::__1::unique_ptr.1857" = type { %"class.std::__1::__compressed_pair.1858" }
%"class.std::__1::__compressed_pair.1858" = type { %"struct.std::__1::__compressed_pair_elem.1859" }
%"struct.std::__1::__compressed_pair_elem.1859" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1860", %"class.mojo::InlinedStructPtr.1861" }
%"class.mojo::InlinedStructPtr.1860" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1861" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1865" = type { %"class.blink::MemberBase.1866" }
%"class.blink::MemberBase.1866" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1867" = type { %"class.absl::optional_internal::optional_data.1868" }
%"class.absl::optional_internal::optional_data.1868" = type { %"class.absl::optional_internal::optional_data_base.1869" }
%"class.absl::optional_internal::optional_data_base.1869" = type { %"class.absl::optional_internal::optional_data_dtor_base.1870" }
%"class.absl::optional_internal::optional_data_dtor_base.1870" = type { i8, %union.anon.1871 }
%union.anon.1871 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.538", %"class.blink::DataRef.618", %"class.blink::DataRef.622", %"class.blink::DataRef.820", %"class.blink::DataRef.878", %"class.blink::DataRef.882", %"class.blink::DataRef.886", %"class.blink::DataRef.890", [20 x i8], [4 x i8] }>

$_ZN5blink10FontFamilyD2Ev = comdat any

$_ZN13scoped_refptrIKN5blink12LayoutLocaleEED2Ev = comdat any

$_ZN5blink17ComputedStyleBase15SetFontInternalEONS_4FontE = comdat any

$_ZN5blink15FontDescriptionD2Ev = comdat any

$_ZN5blink10FontFamilyaSERKS0_ = comdat any

@_ZN5blink17font_family_names12kWebkitSerifE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names16kWebkitSansSerifE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names16kWebkitMonospaceE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names14kWebkitCursiveE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink17font_family_names14kWebkitFantasyE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@__const._ZN5blink11FontBuilder18UpdateAdjustedSizeERNS_15FontDescriptionERKNS_13ComputedStyleEPNS_12FontSelectorE.font = private unnamed_addr constant %"class.blink::Font" { %"class.blink::FontDescription" { %"class.blink::FontFamily" { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %class.scoped_refptr.480 { %"class.blink::SharedFontFamily"* inttoptr (i64 -6148914691236517206 to %"class.blink::SharedFontFamily"*) } }, %class.scoped_refptr.481 { %"class.blink::FontFeatureSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFeatureSettings"*) }, %class.scoped_refptr.489 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, %class.scoped_refptr.499 { %"class.blink::LayoutLocale"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutLocale"*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::FontSelectionRequest" { %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 } }, %"class.blink::FontSelectionValue" { i16 -21846 }, %union.anon.510 { %"struct.blink::FontDescription::BitFields" { i56 -24019198012642646 } } }, %class.scoped_refptr.511 { %"class.blink::FontFallbackList"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFallbackList"*) } }, align 8
@__const._ZN5blink11FontBuilder17CreateInitialFontERNS_13ComputedStyleE.font_description = private unnamed_addr constant %"class.blink::FontDescription" { %"class.blink::FontFamily" { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %class.scoped_refptr.480 { %"class.blink::SharedFontFamily"* inttoptr (i64 -6148914691236517206 to %"class.blink::SharedFontFamily"*) } }, %class.scoped_refptr.481 { %"class.blink::FontFeatureSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontFeatureSettings"*) }, %class.scoped_refptr.489 { %"class.blink::FontVariationSettings"* inttoptr (i64 -6148914691236517206 to %"class.blink::FontVariationSettings"*) }, %class.scoped_refptr.499 { %"class.blink::LayoutLocale"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutLocale"*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %"struct.blink::FontSelectionRequest" { %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 }, %"class.blink::FontSelectionValue" { i16 -21846 } }, %"class.blink::FontSelectionValue" { i16 -21846 }, %union.anon.510 { %"struct.blink::FontDescription::BitFields" { i56 -24019198012642646 } } }, align 8

@_ZN5blink11FontBuilderC1EPNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::FontBuilder"*, %"class.blink::Document"*), void (%"class.blink::FontBuilder"*, %"class.blink::Document"*)* @_ZN5blink11FontBuilderC2EPNS_8DocumentE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilderC2EPNS_8DocumentE(%"class.blink::FontBuilder"*, %"class.blink::Document"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  store %"class.blink::Document"* %1, %"class.blink::Document"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 1
  store %"class.blink::TreeScope"* null, %"class.blink::TreeScope"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2
  tail call void @_ZN5blink15FontDescriptionC1Ev(%"class.blink::FontDescription"* %5) #12
  %6 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  store i32 0, i32* %6, align 8
  ret void
}

declare void @_ZN5blink15FontDescriptionC1Ev(%"class.blink::FontDescription"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder10SetInitialEf(%"class.blink::FontBuilder"*, float) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::FontDescription::FamilyDescription", align 8
  %4 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %5) #12
  %7 = icmp eq %"class.blink::Settings"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2
  %10 = bitcast %"struct.blink::FontDescription::FamilyDescription"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"struct.blink::FontDescription::FamilyDescription", %"struct.blink::FontDescription::FamilyDescription"* %3, i64 0, i32 0
  store i32 1, i32* %11, align 8, !alias.scope !2
  %12 = getelementptr inbounds %"struct.blink::FontDescription::FamilyDescription", %"struct.blink::FontDescription::FamilyDescription"* %3, i64 0, i32 1
  %13 = bitcast %"class.blink::FontFamily"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #12, !alias.scope !2
  call void @_ZN5blink11FontBuilder20SetFamilyDescriptionERNS_15FontDescriptionERKNS1_17FamilyDescriptionE(%"class.blink::FontBuilder"* %0, %"class.blink::FontDescription"* dereferenceable(80) %9, %"struct.blink::FontDescription::FamilyDescription"* nonnull dereferenceable(24) %3)
  call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %12) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  %14 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 1
  store %"class.blink::TreeScope"* null, %"class.blink::TreeScope"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = or i32 %16, 2
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 12, i32 0
  %19 = bitcast %"struct.blink::FontDescription::BitFields"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 4
  store float 0.000000e+00, float* %21, align 8
  %22 = and i64 %20, -31457409
  %23 = or i64 %22, 8388608
  store i64 %23, i64* %19, align 8
  br label %24

24:                                               ; preds = %2, %8
  ret void
}

declare %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder20SetFamilyDescriptionERNS_15FontDescriptionERKNS1_17FamilyDescriptionE(%"class.blink::FontBuilder"* nocapture, %"class.blink::FontDescription"* dereferenceable(80), %"struct.blink::FontDescription::FamilyDescription"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FontFamily", align 8
  %5 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = or i32 %6, 8
  store i32 %7, i32* %5, align 8
  %8 = getelementptr inbounds %"struct.blink::FontDescription::FamilyDescription", %"struct.blink::FontDescription::FamilyDescription"* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %19

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.blink::FontDescription::FamilyDescription", %"struct.blink::FontDescription::FamilyDescription"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br label %19

19:                                               ; preds = %15, %11, %3
  %20 = phi i1 [ false, %3 ], [ true, %11 ], [ %18, %15 ]
  %21 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %22 = bitcast %"struct.blink::FontDescription::BitFields"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = shl i32 %9, 8
  %25 = and i32 %24, 1792
  %26 = zext i32 %25 to i64
  %27 = and i64 %23, -1793
  %28 = or i64 %27, %26
  store i64 %28, i64* %22, align 8
  %29 = bitcast %"class.blink::FontFamily"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #12
  br i1 %20, label %30, label %31

30:                                               ; preds = %19
  call void @_ZNK5blink11FontBuilder18StandardFontFamilyEv(%"class.blink::FontFamily"* nonnull sret %4, %"class.blink::FontBuilder"* %0)
  br label %60

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"struct.blink::FontDescription::FamilyDescription", %"struct.blink::FontDescription::FamilyDescription"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #12
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !5

50:                                               ; preds = %41
  tail call void @llvm.trap() #12
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %51, %36, %31
  %54 = getelementptr inbounds %"struct.blink::FontDescription::FamilyDescription", %"struct.blink::FontDescription::FamilyDescription"* %2, i64 0, i32 1, i32 1, i32 0
  %55 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %4, i64 0, i32 1, i32 0
  store %"class.blink::SharedFontFamily"* %55, %"class.blink::SharedFontFamily"** %56, align 8
  %57 = icmp eq %"class.blink::SharedFontFamily"* %55, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %55, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %59) #12
  br label %60

60:                                               ; preds = %58, %53, %30
  %61 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0
  %62 = call dereferenceable(16) %"class.blink::FontFamily"* @_ZN5blink10FontFamilyaSERKS0_(%"class.blink::FontFamily"* %61, %"class.blink::FontFamily"* nonnull dereferenceable(16) %4) #12
  call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink11FontBuilder18SetFamilyTreeScopeEPKNS_9TreeScopeE(%"class.blink::FontBuilder"* nocapture, %"class.blink::TreeScope"*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 1
  store %"class.blink::TreeScope"* %1, %"class.blink::TreeScope"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder7SetSizeERNS_15FontDescriptionERKNS1_4SizeE(%"class.blink::FontBuilder"* nocapture, %"class.blink::FontDescription"* nocapture dereferenceable(80), %"struct.blink::FontDescription::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.blink::FontDescription::Size", %"struct.blink::FontDescription::Size"* %2, i64 0, i32 1
  %5 = load float, float* %4, align 4
  %6 = fcmp olt float %5, 0.000000e+00
  br i1 %6, label %34, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = or i32 %9, 2
  store i32 %10, i32* %8, align 8
  %11 = fcmp olt float %5, 1.000000e+04
  %12 = getelementptr inbounds %"struct.blink::FontDescription::Size", %"struct.blink::FontDescription::Size"* %2, i64 0, i32 0
  %13 = load i8, i8* %12, align 4
  %14 = zext i8 %13 to i64
  %15 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %16 = bitcast %"struct.blink::FontDescription::BitFields"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl nuw nsw i64 %14, 21
  %19 = and i64 %18, 31457280
  %20 = and i64 %17, -31457281
  %21 = or i64 %19, %20
  store i64 %21, i64* %16, align 8
  %22 = select i1 %11, float %5, float 1.000000e+04
  %23 = fcmp ult float %22, 0x47EFFFFFE0000000
  %24 = fcmp ole float %22, 0xC7EFFFFFE0000000
  %25 = select i1 %24, float 0xC7EFFFFFE0000000, float %22
  %26 = select i1 %23, float %25, float 0x47EFFFFFE0000000
  %27 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 4
  store float %26, float* %27, align 8
  %28 = load i8, i8* %12, align 4
  %29 = lshr i8 %28, 4
  %30 = shl i8 %29, 7
  %31 = zext i8 %30 to i64
  %32 = and i64 %21, -129
  %33 = or i64 %32, %31
  store i64 %33, i64* %16, align 8
  br label %34

34:                                               ; preds = %3, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder22DidChangeEffectiveZoomEv(%"class.blink::FontBuilder"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = or i32 %3, 131072
  store i32 %4, i32* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder24DidChangeTextOrientationEv(%"class.blink::FontBuilder"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = or i32 %3, 262144
  store i32 %4, i32* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder20DidChangeWritingModeEv(%"class.blink::FontBuilder"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = or i32 %3, 524288
  store i32 %4, i32* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11FontBuilder18StandardFontFamilyEv(%"class.blink::FontFamily"* noalias nocapture sret, %"class.blink::FontBuilder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::FontFamily"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #12
  %4 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %1, i64 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %5) #12
  %7 = icmp eq %"class.blink::Settings"* %6, null
  br i1 %7, label %48, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %6, i64 0, i32 1
  %10 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink25GenericFontFamilySettings8StandardE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %9, i32 0) #12
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %48, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #12
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !5

29:                                               ; preds = %20
  tail call void @llvm.trap() #12
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %30, %15
  %33 = load atomic i32, i32* %16 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %51

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i33
  %40 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #12
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !5

45:                                               ; preds = %36
  tail call void @llvm.trap() #12
  unreachable

46:                                               ; preds = %36
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %37, align 4
  br label %51

48:                                               ; preds = %2, %8
  %49 = phi i64 [ %13, %8 ], [ 0, %2 ]
  %50 = bitcast %"class.blink::FontFamily"* %0 to i64*
  store i64 %49, i64* %50, align 8
  br label %65

51:                                               ; preds = %46, %32
  %52 = bitcast %"class.blink::FontFamily"* %0 to i64*
  store i64 %13, i64* %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %51
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %51
  %62 = phi i32 [ %60, %59 ], [ %58, %51 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #12
  br label %65

65:                                               ; preds = %48, %61, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink11FontBuilder22StandardFontFamilyNameEv(%"class.blink::FontBuilder"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %3 = load %"class.blink::Document"*, %"class.blink::Document"** %2, align 8
  %4 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %3) #12
  %5 = icmp eq %"class.blink::Settings"* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %4, i64 0, i32 1
  %8 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink25GenericFontFamilySettings8StandardE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %7, i32 0) #12
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #12
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !5

27:                                               ; preds = %18
  tail call void @llvm.trap() #12
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %1, %28, %13, %6
  %31 = phi i64 [ %11, %6 ], [ %11, %13 ], [ %11, %28 ], [ 0, %1 ]
  %32 = inttoptr i64 %31 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %32
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %2, align 8
  %4 = icmp eq %"class.blink::SharedFontFamily"* %3, null
  br i1 %4, label %47, label %5

5:                                                ; preds = %1, %22
  %6 = phi %"class.blink::SharedFontFamily"* [ %12, %22 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 0, i32 1, i32 0
  %12 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %11, align 8
  store %"class.blink::SharedFontFamily"* null, %"class.blink::SharedFontFamily"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.1450", %"class.base::RefCounted.1450"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #12
  %15 = getelementptr inbounds %"class.base::RefCounted.1450", %"class.base::RefCounted.1450"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.base::RefCounted.1450", %"class.base::RefCounted.1450"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.1450"* %19 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %20) #12
  %21 = bitcast %"class.base::RefCounted.1450"* %19 to i8*
  tail call void @free(i8* %21) #12
  br label %22

22:                                               ; preds = %10, %18
  %23 = icmp eq %"class.blink::SharedFontFamily"* %12, null
  br i1 %23, label %34, label %5

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %6, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.1450", %"class.base::RefCounted.1450"* %25, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #12
  %27 = getelementptr inbounds %"class.base::RefCounted.1450", %"class.base::RefCounted.1450"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.1450", %"class.base::RefCounted.1450"* %25, i64 -4
  %32 = bitcast %"class.base::RefCounted.1450"* %31 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %32) #12
  %33 = bitcast %"class.base::RefCounted.1450"* %31 to i8*
  tail call void @free(i8* %33) #12
  br label %34

34:                                               ; preds = %22, %24, %30
  %35 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %2, align 8
  %36 = icmp eq %"class.blink::SharedFontFamily"* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %35, i64 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.base::RefCounted.1450", %"class.base::RefCounted.1450"* %38, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %39) #12
  %40 = getelementptr inbounds %"class.base::RefCounted.1450", %"class.base::RefCounted.1450"* %38, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.base::RefCounted.1450", %"class.base::RefCounted.1450"* %38, i64 -4
  %45 = bitcast %"class.base::RefCounted.1450"* %44 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %45) #12
  %46 = bitcast %"class.base::RefCounted.1450"* %44 to i8*
  tail call void @free(i8* %46) #12
  br label %47

47:                                               ; preds = %1, %43, %37, %34
  %48 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #12
  br label %64

64:                                               ; preds = %47, %60, %63
  ret void
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink25GenericFontFamilySettings8StandardE11UScriptCode(%"class.blink::GenericFontFamilySettings"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink11FontBuilder21GenericFontFamilyNameENS_15FontDescription17GenericFamilyTypeE(%"class.blink::FontBuilder"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %147 [
    i32 6, label %124
    i32 1, label %3
    i32 2, label %32
    i32 3, label %55
    i32 4, label %78
    i32 5, label %101
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %5) #12
  %7 = icmp eq %"class.blink::Settings"* %6, null
  br i1 %7, label %147, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %6, i64 0, i32 1
  %10 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink25GenericFontFamilySettings8StandardE11UScriptCode(%"class.blink::GenericFontFamilySettings"* %9, i32 0) #12
  %11 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %14 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %14, label %147, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %147

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #12
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !5

29:                                               ; preds = %20
  tail call void @llvm.trap() #12
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %147

32:                                               ; preds = %2
  %33 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names12kWebkitSerifE, align 8
  %34 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %147, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %147

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #12
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !5

52:                                               ; preds = %43
  tail call void @llvm.trap() #12
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %147

55:                                               ; preds = %2
  %56 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names16kWebkitSansSerifE, align 8
  %57 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  %60 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %60, label %147, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %147

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i33
  %70 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %69, i33 1) #12
  %71 = extractvalue { i33, i1 } %70, 1
  %72 = extractvalue { i33, i1 } %70, 0
  %73 = icmp slt i33 %72, 0
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %76, !prof !5

75:                                               ; preds = %66
  tail call void @llvm.trap() #12
  unreachable

76:                                               ; preds = %66
  %77 = trunc i33 %72 to i32
  store i32 %77, i32* %67, align 4
  br label %147

78:                                               ; preds = %2
  %79 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names16kWebkitMonospaceE, align 8
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %83 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %83, label %147, label %84

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %147

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i33
  %93 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #12
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !5

98:                                               ; preds = %89
  tail call void @llvm.trap() #12
  unreachable

99:                                               ; preds = %89
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %90, align 4
  br label %147

101:                                              ; preds = %2
  %102 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names14kWebkitCursiveE, align 8
  %103 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = ptrtoint %"class.WTF::StringImpl"* %104 to i64
  %106 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %106, label %147, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %147

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i33
  %116 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %115, i33 1) #12
  %117 = extractvalue { i33, i1 } %116, 1
  %118 = extractvalue { i33, i1 } %116, 0
  %119 = icmp slt i33 %118, 0
  %120 = or i1 %117, %119
  br i1 %120, label %121, label %122, !prof !5

121:                                              ; preds = %112
  tail call void @llvm.trap() #12
  unreachable

122:                                              ; preds = %112
  %123 = trunc i33 %118 to i32
  store i32 %123, i32* %113, align 4
  br label %147

124:                                              ; preds = %2
  %125 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names14kWebkitFantasyE, align 8
  %126 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = ptrtoint %"class.WTF::StringImpl"* %127 to i64
  %129 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %129, label %147, label %130

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %147

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = zext i32 %137 to i33
  %139 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %138, i33 1) #12
  %140 = extractvalue { i33, i1 } %139, 1
  %141 = extractvalue { i33, i1 } %139, 0
  %142 = icmp slt i33 %141, 0
  %143 = or i1 %140, %142
  br i1 %143, label %144, label %145, !prof !5

144:                                              ; preds = %135
  tail call void @llvm.trap() #12
  unreachable

145:                                              ; preds = %135
  %146 = trunc i33 %141 to i32
  store i32 %146, i32* %136, align 4
  br label %147

147:                                              ; preds = %30, %15, %8, %3, %145, %130, %124, %122, %107, %101, %99, %84, %78, %76, %61, %55, %53, %38, %32, %2
  %148 = phi i64 [ 0, %2 ], [ %36, %32 ], [ %36, %38 ], [ %36, %53 ], [ %59, %55 ], [ %59, %61 ], [ %59, %76 ], [ %82, %78 ], [ %82, %84 ], [ %82, %99 ], [ %105, %101 ], [ %105, %107 ], [ %105, %122 ], [ %128, %124 ], [ %128, %130 ], [ %128, %145 ], [ %13, %8 ], [ %13, %15 ], [ %13, %30 ], [ 0, %3 ]
  %149 = inttoptr i64 %148 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %149
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink11FontBuilder18FontSizeForKeywordEjb(%"class.blink::FontBuilder"* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = tail call float @_ZN5blink17FontSizeFunctions18FontSizeForKeywordEPKNS_8DocumentEjb(%"class.blink::Document"* %5, i32 %1, i1 zeroext %2) #12
  ret float %6
}

declare float @_ZN5blink17FontSizeFunctions18FontSizeForKeywordEPKNS_8DocumentEjb(%"class.blink::Document"*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder20SetFamilyDescriptionERKNS_15FontDescription17FamilyDescriptionE(%"class.blink::FontBuilder"*, %"struct.blink::FontDescription::FamilyDescription"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2
  tail call void @_ZN5blink11FontBuilder20SetFamilyDescriptionERNS_15FontDescriptionERKNS1_17FamilyDescriptionE(%"class.blink::FontBuilder"* %0, %"class.blink::FontDescription"* dereferenceable(80) %3, %"struct.blink::FontDescription::FamilyDescription"* dereferenceable(24) %1)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder9SetWeightENS_18FontSelectionValueE(%"class.blink::FontBuilder"* nocapture, i16) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, 1
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 10, i32 0, i32 0
  store i16 %1, i16* %6, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder8SetStyleENS_18FontSelectionValueE(%"class.blink::FontBuilder"*, i16) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, 64
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2
  tail call void @_ZN5blink15FontDescription8SetStyleENS_18FontSelectionValueE(%"class.blink::FontDescription"* %6, i16 %1) #12
  ret void
}

declare void @_ZN5blink15FontDescription8SetStyleENS_18FontSelectionValueE(%"class.blink::FontDescription"*, i16) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder10SetStretchENS_18FontSelectionValueE(%"class.blink::FontBuilder"* nocapture, i16) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, 4
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 10, i32 1, i32 0
  store i16 %1, i16* %6, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder7SetSizeERKNS_15FontDescription4SizeE(%"class.blink::FontBuilder"* nocapture, %"struct.blink::FontDescription::Size"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.blink::FontDescription::Size", %"struct.blink::FontDescription::Size"* %1, i64 0, i32 1
  %4 = load float, float* %3, align 4
  %5 = fcmp olt float %4, 0.000000e+00
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = or i32 %8, 2
  store i32 %9, i32* %7, align 8
  %10 = fcmp olt float %4, 1.000000e+04
  %11 = getelementptr inbounds %"struct.blink::FontDescription::Size", %"struct.blink::FontDescription::Size"* %1, i64 0, i32 0
  %12 = load i8, i8* %11, align 4
  %13 = zext i8 %12 to i64
  %14 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 12, i32 0
  %15 = bitcast %"struct.blink::FontDescription::BitFields"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = shl nuw nsw i64 %13, 21
  %18 = and i64 %17, 31457280
  %19 = and i64 %16, -31457281
  %20 = or i64 %18, %19
  store i64 %20, i64* %15, align 8
  %21 = select i1 %10, float %4, float 1.000000e+04
  %22 = fcmp ult float %21, 0x47EFFFFFE0000000
  %23 = fcmp ole float %21, 0xC7EFFFFFE0000000
  %24 = select i1 %23, float 0xC7EFFFFFE0000000, float %21
  %25 = select i1 %22, float %24, float 0x47EFFFFFE0000000
  %26 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 4
  store float %25, float* %26, align 8
  %27 = load i8, i8* %11, align 4
  %28 = lshr i8 %27, 4
  %29 = shl i8 %28, 7
  %30 = zext i8 %29 to i64
  %31 = and i64 %20, -129
  %32 = or i64 %31, %30
  store i64 %32, i64* %15, align 8
  br label %33

33:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder13SetSizeAdjustEf(%"class.blink::FontBuilder"* nocapture, float) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, 128
  store i32 %5, i32* %3, align 8
  %6 = fcmp ult float %1, 0x47EFFFFFE0000000
  %7 = fcmp ole float %1, 0xC7EFFFFFE0000000
  %8 = select i1 %7, float 0xC7EFFFFFE0000000, float %1
  %9 = select i1 %6, float %8, float 0x47EFFFFFE0000000
  %10 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 7
  store float %9, float* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder9SetLocaleE13scoped_refptrIKNS_12LayoutLocaleEE(%"class.blink::FontBuilder"* nocapture, %"class.blink::LayoutLocale"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.499, align 8
  %4 = alloca %class.scoped_refptr.499, align 8
  %5 = alloca %class.scoped_refptr.499, align 8
  %6 = getelementptr inbounds %class.scoped_refptr.499, %class.scoped_refptr.499* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = or i32 %8, 32
  store i32 %9, i32* %7, align 8
  %10 = ptrtoint %"class.blink::LayoutLocale"* %1 to i64
  store %"class.blink::LayoutLocale"* null, %"class.blink::LayoutLocale"** %6, align 8
  %11 = bitcast %class.scoped_refptr.499* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = getelementptr inbounds %class.scoped_refptr.499, %class.scoped_refptr.499* %4, i64 0, i32 0
  store %"class.blink::LayoutLocale"* null, %"class.blink::LayoutLocale"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 3
  %14 = bitcast %class.scoped_refptr.499* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = bitcast %class.scoped_refptr.499* %13 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %class.scoped_refptr.499* %3 to i64*
  store i64 %10, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  call void @_ZN13scoped_refptrIKN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.499* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  call void @_ZN13scoped_refptrIKN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.499* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  call void @_ZN13scoped_refptrIKN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.499* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.499*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.499, %class.scoped_refptr.499* %0, i64 0, i32 0
  %3 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutLocale"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #12
  %7 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %55

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 5, i32 0
  %12 = load %"class.blink::Hyphenation"*, %"class.blink::Hyphenation"** %11, align 8
  %13 = icmp eq %"class.blink::Hyphenation"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Hyphenation", %"class.blink::Hyphenation"* %12, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.base::RefCounted.509", %"class.base::RefCounted.509"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #12
  %17 = getelementptr inbounds %"class.base::RefCounted.509", %"class.base::RefCounted.509"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted.509", %"class.base::RefCounted.509"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted.509"* %21 to %"class.blink::Hyphenation"*
  %23 = bitcast %"class.base::RefCounted.509"* %21 to void (%"class.blink::Hyphenation"*)***
  %24 = load void (%"class.blink::Hyphenation"*)**, void (%"class.blink::Hyphenation"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %24, i64 1
  %26 = load void (%"class.blink::Hyphenation"*)*, void (%"class.blink::Hyphenation"*)** %25, align 8
  tail call void %26(%"class.blink::Hyphenation"* nonnull %22) #12
  br label %27

27:                                               ; preds = %20, %14, %10
  %28 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 3
  %29 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  tail call void @_ZdlPv(i8* %35) #13
  br label %36

36:                                               ; preds = %33, %27
  %37 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #12
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = bitcast %"class.blink::LayoutLocale"* %3 to i8*
  tail call void @free(i8* %54) #12
  br label %55

55:                                               ; preds = %5, %53, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder14SetVariantCapsENS_15FontDescription15FontVariantCapsE(%"class.blink::FontBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, 256
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2
  tail call void @_ZN5blink15FontDescription14SetVariantCapsENS0_15FontVariantCapsE(%"class.blink::FontDescription"* %6, i32 %1) #12
  ret void
}

declare void @_ZN5blink15FontDescription14SetVariantCapsENS0_15FontVariantCapsE(%"class.blink::FontDescription"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder19SetVariantEastAsianENS_20FontVariantEastAsianE(%"class.blink::FontBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, 512
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2
  tail call void @_ZN5blink15FontDescription19SetVariantEastAsianENS_20FontVariantEastAsianE(%"class.blink::FontDescription"* %6, i32 %1) #12
  ret void
}

declare void @_ZN5blink15FontDescription19SetVariantEastAsianENS_20FontVariantEastAsianE(%"class.blink::FontDescription"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder19SetVariantLigaturesERKNS_15FontDescription16VariantLigaturesE(%"class.blink::FontBuilder"*, %"struct.blink::FontDescription::VariantLigatures"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, 1024
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2
  tail call void @_ZN5blink15FontDescription19SetVariantLigaturesERKNS0_16VariantLigaturesE(%"class.blink::FontDescription"* %6, %"struct.blink::FontDescription::VariantLigatures"* dereferenceable(4) %1) #12
  ret void
}

declare void @_ZN5blink15FontDescription19SetVariantLigaturesERKNS0_16VariantLigaturesE(%"class.blink::FontDescription"*, %"struct.blink::FontDescription::VariantLigatures"* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder17SetVariantNumericERKNS_18FontVariantNumericE(%"class.blink::FontBuilder"*, %"class.blink::FontVariantNumeric"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, 2048
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2
  tail call void @_ZN5blink15FontDescription17SetVariantNumericERKNS_18FontVariantNumericE(%"class.blink::FontDescription"* %6, %"class.blink::FontVariantNumeric"* dereferenceable(4) %1) #12
  ret void
}

declare void @_ZN5blink15FontDescription17SetVariantNumericERKNS_18FontVariantNumericE(%"class.blink::FontDescription"*, %"class.blink::FontVariantNumeric"* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder16SetTextRenderingENS_17TextRenderingModeE(%"class.blink::FontBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, 8192
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 12, i32 0
  %8 = bitcast %"struct.blink::FontDescription::BitFields"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = shl i32 %1, 27
  %11 = and i32 %10, 402653184
  %12 = zext i32 %11 to i64
  %13 = and i64 %9, -402653185
  %14 = or i64 %13, %12
  store i64 %14, i64* %8, align 8
  tail call void @_ZN5blink15FontDescription25UpdateTypesettingFeaturesEv(%"class.blink::FontDescription"* %6) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder10SetKerningENS_15FontDescription7KerningE(%"class.blink::FontBuilder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, 16384
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 12, i32 0
  %8 = bitcast %"struct.blink::FontDescription::BitFields"* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = shl i32 %1, 11
  %11 = and i32 %10, 6144
  %12 = zext i32 %11 to i64
  %13 = and i64 %9, -6145
  %14 = or i64 %13, %12
  store i64 %14, i64* %8, align 8
  tail call void @_ZN5blink15FontDescription25UpdateTypesettingFeaturesEv(%"class.blink::FontDescription"* %6) #12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder20SetFontOpticalSizingENS_13OpticalSizingE(%"class.blink::FontBuilder"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, 32768
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 12, i32 0
  %7 = bitcast %"struct.blink::FontDescription::BitFields"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i32 %1, 1
  %10 = zext i32 %9 to i64
  %11 = shl nuw nsw i64 %10, 51
  %12 = and i64 %8, -2251799813685249
  %13 = or i64 %12, %11
  store i64 %13, i64* %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder16SetFontSmoothingENS_17FontSmoothingModeE(%"class.blink::FontBuilder"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = or i32 %4, 65536
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 12, i32 0
  %7 = bitcast %"struct.blink::FontDescription::BitFields"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = shl i32 %1, 25
  %10 = and i32 %9, 100663296
  %11 = zext i32 %10 to i64
  %12 = and i64 %8, -100663297
  %13 = or i64 %12, %11
  store i64 %13, i64* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder18SetFeatureSettingsE13scoped_refptrINS_19FontFeatureSettingsEE(%"class.blink::FontBuilder"* nocapture, %"class.blink::FontFeatureSettings"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::FontFeatureSettings"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = or i32 %5, 16
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 1
  %8 = bitcast %class.scoped_refptr.481* %7 to i64*
  %9 = getelementptr inbounds %class.scoped_refptr.481, %class.scoped_refptr.481* %7, i64 0, i32 0
  %10 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %9, align 8
  store i64 %3, i64* %8, align 8
  %11 = icmp eq %"class.blink::FontFeatureSettings"* %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %10, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.488", %"class.base::RefCounted.488"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #12
  %15 = getelementptr inbounds %"class.base::RefCounted.488", %"class.base::RefCounted.488"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %32

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.base::RefCounted.488", %"class.base::RefCounted.488"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.488"* %19 to %"class.blink::FontTagValuePair"**
  %21 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %20, align 8
  %22 = icmp eq %"class.blink::FontTagValuePair"* %21, null
  %23 = bitcast %"class.blink::FontTagValuePair"* %21 to i8*
  br i1 %22, label %30, label %24, !prof !6

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.base::RefCounted.488", %"class.base::RefCounted.488"* %13, i64 -1, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28, !prof !5

28:                                               ; preds = %24
  store i32 0, i32* %25, align 4
  br label %29

29:                                               ; preds = %28, %24
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %23) #12
  br label %30

30:                                               ; preds = %29, %18
  %31 = bitcast %"class.base::RefCounted.488"* %19 to i8*
  tail call void @free(i8* %31) #12
  br label %32

32:                                               ; preds = %30, %12, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder20SetVariationSettingsE13scoped_refptrINS_21FontVariationSettingsEE(%"class.blink::FontBuilder"* nocapture, %"class.blink::FontVariationSettings"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::FontVariationSettings"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = or i32 %5, 4096
  store i32 %6, i32* %4, align 8
  %7 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 2
  %8 = bitcast %class.scoped_refptr.489* %7 to i64*
  %9 = getelementptr inbounds %class.scoped_refptr.489, %class.scoped_refptr.489* %7, i64 0, i32 0
  %10 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %9, align 8
  store i64 %3, i64* %8, align 8
  %11 = icmp eq %"class.blink::FontVariationSettings"* %10, null
  br i1 %11, label %32, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %10, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::RefCounted.498", %"class.base::RefCounted.498"* %13, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %14) #12
  %15 = getelementptr inbounds %"class.base::RefCounted.498", %"class.base::RefCounted.498"* %13, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %32

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.base::RefCounted.498", %"class.base::RefCounted.498"* %13, i64 -4
  %20 = bitcast %"class.base::RefCounted.498"* %19 to %"class.blink::FontTagValuePair.494"**
  %21 = load %"class.blink::FontTagValuePair.494"*, %"class.blink::FontTagValuePair.494"** %20, align 8
  %22 = icmp eq %"class.blink::FontTagValuePair.494"* %21, null
  %23 = bitcast %"class.blink::FontTagValuePair.494"* %21 to i8*
  br i1 %22, label %30, label %24, !prof !6

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.base::RefCounted.498", %"class.base::RefCounted.498"* %13, i64 -1, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28, !prof !5

28:                                               ; preds = %24
  store i32 0, i32* %25, align 4
  br label %29

29:                                               ; preds = %28, %24
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %23) #12
  br label %30

30:                                               ; preds = %29, %18
  %31 = bitcast %"class.base::RefCounted.498"* %19 to i8*
  tail call void @free(i8* %31) #12
  br label %32

32:                                               ; preds = %30, %12, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink11FontBuilder32GetComputedSizeFromSpecifiedSizeERNS_15FontDescriptionEff(%"class.blink::FontBuilder"* nocapture readonly, %"class.blink::FontDescription"* nocapture readonly dereferenceable(80), float, float) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %6) #12
  %8 = icmp eq %"class.blink::LocalFrame"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %7, i64 0, i32 21
  %11 = load float, float* %10, align 4
  %12 = fmul float %11, %2
  br label %13

13:                                               ; preds = %4, %9
  %14 = phi float [ %12, %9 ], [ %2, %4 ]
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %16 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %17 = bitcast %"struct.blink::FontDescription::BitFields"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = trunc i64 %18 to i8
  %20 = icmp slt i8 %19, 0
  %21 = tail call float @_ZN5blink17FontSizeFunctions32GetComputedSizeFromSpecifiedSizeEPKNS_8DocumentEfbfNS_20ApplyMinimumFontSizeE(%"class.blink::Document"* %15, float %14, i1 zeroext %20, float %3, i32 1) #12
  ret float %21
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare float @_ZN5blink17FontSizeFunctions32GetComputedSizeFromSpecifiedSizeEPKNS_8DocumentEfbfNS_20ApplyMinimumFontSizeE(%"class.blink::Document"*, float, i1 zeroext, float, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder27CheckForGenericFamilyChangeERKNS_15FontDescriptionERS1_(%"class.blink::FontBuilder"* nocapture readonly, %"class.blink::FontDescription"* nocapture readonly dereferenceable(80), %"class.blink::FontDescription"* nocapture dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 12, i32 0
  %5 = bitcast %"struct.blink::FontDescription::BitFields"* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = trunc i64 %6 to i8
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %116, label %9

9:                                                ; preds = %3
  %10 = and i64 %6, 1792
  %11 = icmp eq i64 %10, 1024
  br i1 %11, label %12, label %23

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 0, i32 1, i32 0
  %14 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %13, align 8
  %15 = icmp eq %"class.blink::SharedFontFamily"* %14, null
  br i1 %15, label %16, label %23

16:                                               ; preds = %12
  %17 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names16kWebkitMonospaceE, align 8
  %18 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %17, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %19, %21
  br label %23

23:                                               ; preds = %9, %12, %16
  %24 = phi i1 [ false, %12 ], [ false, %9 ], [ %22, %16 ]
  %25 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %26 = bitcast %"struct.blink::FontDescription::BitFields"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 1792
  %29 = icmp eq i64 %28, 1024
  br i1 %29, label %30, label %34

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0, i32 1, i32 0
  %32 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %31, align 8
  %33 = icmp eq %"class.blink::SharedFontFamily"* %32, null
  br i1 %33, label %37, label %34

34:                                               ; preds = %23, %30
  %35 = or i1 %11, %29
  %36 = and i1 %24, %35
  br i1 %36, label %45, label %116

37:                                               ; preds = %30
  %38 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names16kWebkitMonospaceE, align 8
  %39 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %38, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %40, %42
  %44 = xor i1 %24, %43
  br i1 %44, label %45, label %116

45:                                               ; preds = %34, %37
  %46 = lshr i64 %6, 21
  %47 = trunc i64 %46 to i32
  %48 = and i32 %47, 15
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %67, label %50

50:                                               ; preds = %45
  br i1 %11, label %51, label %62

51:                                               ; preds = %50
  %52 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 0, i32 1, i32 0
  %53 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %52, align 8
  %54 = icmp eq %"class.blink::SharedFontFamily"* %53, null
  br i1 %54, label %55, label %62

55:                                               ; preds = %51
  %56 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names16kWebkitMonospaceE, align 8
  %57 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %56, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %58, %60
  br label %62

62:                                               ; preds = %50, %51, %55
  %63 = phi i1 [ false, %51 ], [ false, %50 ], [ %61, %55 ]
  %64 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %65 = load %"class.blink::Document"*, %"class.blink::Document"** %64, align 8
  %66 = tail call float @_ZN5blink17FontSizeFunctions18FontSizeForKeywordEPKNS_8DocumentEjb(%"class.blink::Document"* %65, i32 %48, i1 zeroext %63) #12
  br label %109

67:                                               ; preds = %45
  %68 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %69 = load %"class.blink::Document"*, %"class.blink::Document"** %68, align 8
  %70 = tail call %"class.blink::Settings"* @_ZNK5blink8Document11GetSettingsEv(%"class.blink::Document"* %69) #12
  %71 = icmp eq %"class.blink::Settings"* %70, null
  br i1 %71, label %84, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %70, i64 0, i32 9
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %70, i64 0, i32 10
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %84, label %80

80:                                               ; preds = %76
  %81 = sitofp i32 %74 to float
  %82 = sitofp i32 %78 to float
  %83 = fdiv float %81, %82
  br label %84

84:                                               ; preds = %76, %72, %67, %80
  %85 = phi float [ %83, %80 ], [ 1.000000e+00, %76 ], [ 1.000000e+00, %72 ], [ 1.000000e+00, %67 ]
  %86 = load i64, i64* %26, align 8
  %87 = and i64 %86, 1792
  %88 = icmp eq i64 %87, 1024
  br i1 %88, label %89, label %93

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0, i32 1, i32 0
  %91 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %90, align 8
  %92 = icmp eq %"class.blink::SharedFontFamily"* %91, null
  br i1 %92, label %97, label %93

93:                                               ; preds = %89, %84
  %94 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 4
  %95 = load float, float* %94, align 8
  %96 = fmul float %85, %95
  br label %109

97:                                               ; preds = %89
  %98 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names16kWebkitMonospaceE, align 8
  %99 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %100, %102
  %104 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 4
  %105 = load float, float* %104, align 8
  %106 = fdiv float %105, %85
  %107 = fmul float %85, %105
  %108 = select i1 %103, float %106, float %107
  br label %109

109:                                              ; preds = %97, %93, %62
  %110 = phi float [ %66, %62 ], [ %96, %93 ], [ %108, %97 ]
  %111 = fcmp ult float %110, 0x47EFFFFFE0000000
  %112 = fcmp ole float %110, 0xC7EFFFFFE0000000
  %113 = select i1 %112, float 0xC7EFFFFFE0000000, float %110
  %114 = select i1 %111, float %113, float 0x47EFFFFFE0000000
  %115 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %2, i64 0, i32 4
  store float %114, float* %115, align 8
  br label %116

116:                                              ; preds = %34, %37, %3, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder19UpdateSpecifiedSizeERNS_15FontDescriptionERKNS_13ComputedStyleEPS4_(%"class.blink::FontBuilder"* nocapture readonly, %"class.blink::FontDescription"* nocapture dereferenceable(80), %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), %"class.blink::ComputedStyle"* readonly) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 4
  %6 = load float, float* %5, align 8
  %7 = fcmp une float %6, 0.000000e+00
  br i1 %7, label %35, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %10 = bitcast %"struct.blink::FontDescription::BitFields"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = lshr i64 %11, 21
  %13 = trunc i64 %12 to i32
  %14 = and i32 %13, 15
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %35, label %16

16:                                               ; preds = %8
  %17 = and i64 %11, 1792
  %18 = icmp eq i64 %17, 1024
  br i1 %18, label %19, label %30

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %20, align 8
  %22 = icmp eq %"class.blink::SharedFontFamily"* %21, null
  br i1 %22, label %23, label %30

23:                                               ; preds = %19
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names16kWebkitMonospaceE, align 8
  %25 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %26, %28
  br label %30

30:                                               ; preds = %16, %19, %23
  %31 = phi i1 [ false, %19 ], [ false, %16 ], [ %29, %23 ]
  %32 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %33 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %34 = tail call float @_ZN5blink17FontSizeFunctions18FontSizeForKeywordEPKNS_8DocumentEjb(%"class.blink::Document"* %33, i32 %14, i1 zeroext %31) #12
  br label %35

35:                                               ; preds = %8, %30, %4
  %36 = phi float [ %6, %4 ], [ %34, %30 ], [ %6, %8 ]
  %37 = fcmp ult float %36, 0x47EFFFFFE0000000
  %38 = fcmp ole float %36, 0xC7EFFFFFE0000000
  %39 = select i1 %38, float 0xC7EFFFFFE0000000, float %36
  %40 = select i1 %37, float %39, float 0x47EFFFFFE0000000
  store float %40, float* %5, align 8
  %41 = icmp eq %"class.blink::ComputedStyle"* %3, null
  %42 = select i1 %41, %"class.blink::ComputedStyle"* %2, %"class.blink::ComputedStyle"* %3
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %44, i64 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %46, i64 0, i32 1, i32 0
  tail call void @_ZN5blink11FontBuilder27CheckForGenericFamilyChangeERKNS_15FontDescriptionERS1_(%"class.blink::FontBuilder"* %0, %"class.blink::FontDescription"* dereferenceable(80) %47, %"class.blink::FontDescription"* dereferenceable(80) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder18UpdateAdjustedSizeERNS_15FontDescriptionERKNS_13ComputedStyleEPNS_12FontSelectorE(%"class.blink::FontBuilder"* nocapture readnone, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::ComputedStyle"* nocapture readnone dereferenceable(104), %"class.blink::FontSelector"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Font", align 8
  %6 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 5
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 7
  %9 = load float, float* %8, align 4
  %10 = fcmp une float %9, -1.000000e+00
  %11 = fcmp une float %7, 0.000000e+00
  %12 = and i1 %11, %10
  br i1 %12, label %13, label %47

13:                                               ; preds = %4
  %14 = fcmp ult float %7, 0x47EFFFFFE0000000
  %15 = fcmp ole float %7, 0xC7EFFFFFE0000000
  %16 = select i1 %15, float 0xC7EFFFFFE0000000, float %7
  %17 = select i1 %14, float %16, float 0x47EFFFFFE0000000
  %18 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 6
  store float %17, float* %18, align 8
  %19 = bitcast %"class.blink::Font"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %19) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 bitcast (%"class.blink::Font"* @__const._ZN5blink11FontBuilder18UpdateAdjustedSizeERNS_15FontDescriptionERKNS_13ComputedStyleEPNS_12FontSelectorE.font to i8*), i64 88, i1 false)
  call void @_ZN5blink4FontC1ERKNS_15FontDescriptionEPNS_12FontSelectorE(%"class.blink::Font"* nonnull %5, %"class.blink::FontDescription"* dereferenceable(80) %1, %"class.blink::FontSelector"* %3) #12
  %20 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* nonnull %5) #12
  %21 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %20, i64 0, i32 2
  %22 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %21, align 8
  %23 = icmp eq %"class.blink::SimpleFontData"* %22, null
  br i1 %23, label %24, label %28

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %5, i64 0, i32 0
  %26 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %20, %"class.blink::FontDescription"* nonnull dereferenceable(80) %25) #12
  store %"class.blink::SimpleFontData"* %26, %"class.blink::SimpleFontData"** %21, align 8
  %27 = icmp eq %"class.blink::SimpleFontData"* %26, null
  br i1 %27, label %46, label %28

28:                                               ; preds = %13, %24
  %29 = phi %"class.blink::SimpleFontData"* [ %26, %24 ], [ %22, %13 ]
  %30 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %29, i64 0, i32 1, i32 11
  %31 = load i8, i8* %30, align 4, !range !7
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %46, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %29, i64 0, i32 1, i32 5
  %35 = load float, float* %34, align 4
  %36 = fcmp ogt float %35, 0.000000e+00
  br i1 %36, label %37, label %46

37:                                               ; preds = %33
  %38 = load float, float* %8, align 4
  %39 = fdiv float %35, %7
  %40 = fdiv float %38, %39
  %41 = fmul float %7, %40
  %42 = fcmp ult float %41, 0x47EFFFFFE0000000
  %43 = fcmp ole float %41, 0xC7EFFFFFE0000000
  %44 = select i1 %43, float 0xC7EFFFFFE0000000, float %41
  %45 = select i1 %42, float %44, float 0x47EFFFFFE0000000
  store float %45, float* %18, align 8
  br label %46

46:                                               ; preds = %28, %33, %24, %37
  call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %19) #12
  br label %47

47:                                               ; preds = %4, %46
  ret void
}

declare void @_ZN5blink4FontC1ERKNS_15FontDescriptionEPNS_12FontSelectorE(%"class.blink::Font"*, %"class.blink::FontDescription"* dereferenceable(80), %"class.blink::FontSelector"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder18UpdateComputedSizeERNS_15FontDescriptionERKNS_13ComputedStyleE(%"class.blink::FontBuilder"* nocapture readonly, %"class.blink::FontDescription"* nocapture dereferenceable(80), %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %7, i64 0, i32 6
  %9 = load float, float* %8, align 8
  %10 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 4
  %11 = load float, float* %10, align 8
  %12 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %13) #12
  %15 = icmp eq %"class.blink::LocalFrame"* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %14, i64 0, i32 21
  %18 = load float, float* %17, align 4
  %19 = fmul float %9, %18
  br label %20

20:                                               ; preds = %3, %16
  %21 = phi float [ %19, %16 ], [ %9, %3 ]
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %23 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %24 = bitcast %"struct.blink::FontDescription::BitFields"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i8
  %27 = icmp slt i8 %26, 0
  %28 = tail call float @_ZN5blink17FontSizeFunctions32GetComputedSizeFromSpecifiedSizeEPKNS_8DocumentEfbfNS_20ApplyMinimumFontSizeE(%"class.blink::Document"* %22, float %21, i1 zeroext %27, float %11, i32 1) #12
  %29 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %30, i64 0, i32 3
  %32 = load float, float* %31, align 8
  %33 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %4, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %35, i64 0, i32 6
  %37 = load float, float* %36, align 8
  %38 = tail call float @_ZN5blink13TextAutosizer24ComputeAutosizedFontSizeEfff(float %28, float %32, float %37) #12
  %39 = fcmp ult float %38, 0x47EFFFFFE0000000
  %40 = fcmp ole float %38, 0xC7EFFFFFE0000000
  %41 = select i1 %40, float 0xC7EFFFFFE0000000, float %38
  %42 = select i1 %39, float %41, float 0x47EFFFFFE0000000
  %43 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 5
  store float %42, float* %43, align 4
  ret void
}

declare float @_ZN5blink13TextAutosizer24ComputeAutosizedFontSizeEfff(float, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder21UpdateFontDescriptionERNS_15FontDescriptionENS_15FontOrientationE(%"class.blink::FontBuilder"*, %"class.blink::FontDescription"* dereferenceable(80), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.scoped_refptr.499, align 8
  %5 = alloca %class.scoped_refptr.499, align 8
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to %"struct.blink::FontDescription::VariantLigatures"*
  %8 = alloca %"class.blink::FontVariantNumeric", align 4
  %9 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %27, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 12, i32 0
  %15 = bitcast %"struct.blink::FontDescription::BitFields"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %18 = bitcast %"struct.blink::FontDescription::BitFields"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %16, 1792
  %21 = and i64 %19, -1793
  %22 = or i64 %21, %20
  store i64 %22, i64* %18, align 8
  %23 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 0
  %24 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0
  %25 = tail call dereferenceable(16) %"class.blink::FontFamily"* @_ZN5blink10FontFamilyaSERKS0_(%"class.blink::FontFamily"* %24, %"class.blink::FontFamily"* dereferenceable(16) %23) #12
  %26 = load i32, i32* %9, align 8
  br label %27

27:                                               ; preds = %3, %13
  %28 = phi i32 [ %10, %3 ], [ %26, %13 ]
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %53, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 12, i32 0
  %33 = bitcast %"struct.blink::FontDescription::BitFields"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %36 = bitcast %"struct.blink::FontDescription::BitFields"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %34, 31457280
  %39 = and i64 %37, -31457281
  %40 = or i64 %39, %38
  store i64 %40, i64* %36, align 8
  %41 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 4
  %42 = load float, float* %41, align 8
  %43 = fcmp ult float %42, 0x47EFFFFFE0000000
  %44 = fcmp ole float %42, 0xC7EFFFFFE0000000
  %45 = select i1 %44, float 0xC7EFFFFFE0000000, float %42
  %46 = select i1 %43, float %45, float 0x47EFFFFFE0000000
  %47 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 4
  store float %46, float* %47, align 8
  %48 = load i64, i64* %33, align 8
  %49 = and i64 %48, 128
  %50 = and i64 %40, -129
  %51 = or i64 %49, %50
  store i64 %51, i64* %36, align 8
  %52 = load i32, i32* %9, align 8
  br label %53

53:                                               ; preds = %27, %31
  %54 = phi i32 [ %28, %27 ], [ %52, %31 ]
  %55 = trunc i32 %54 to i8
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %66

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 7
  %59 = load float, float* %58, align 4
  %60 = fcmp ult float %59, 0x47EFFFFFE0000000
  %61 = fcmp ole float %59, 0xC7EFFFFFE0000000
  %62 = select i1 %61, float 0xC7EFFFFFE0000000, float %59
  %63 = select i1 %60, float %62, float 0x47EFFFFFE0000000
  %64 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 7
  store float %63, float* %64, align 4
  %65 = load i32, i32* %9, align 8
  br label %66

66:                                               ; preds = %57, %53
  %67 = phi i32 [ %65, %57 ], [ %54, %53 ]
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 10, i32 0, i32 0
  %72 = load i16, i16* %71, align 8
  %73 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 10, i32 0, i32 0
  store i16 %72, i16* %73, align 8
  %74 = load i32, i32* %9, align 8
  br label %75

75:                                               ; preds = %66, %70
  %76 = phi i32 [ %67, %66 ], [ %74, %70 ]
  %77 = and i32 %76, 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 10, i32 1, i32 0
  %81 = load i16, i16* %80, align 2
  %82 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 10, i32 1, i32 0
  store i16 %81, i16* %82, align 2
  %83 = load i32, i32* %9, align 8
  br label %84

84:                                               ; preds = %75, %79
  %85 = phi i32 [ %76, %75 ], [ %83, %79 ]
  %86 = and i32 %85, 16
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %121, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 1, i32 0
  %90 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %89, align 8
  %91 = icmp eq %"class.blink::FontFeatureSettings"* %90, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %90, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %93) #12
  br label %94

94:                                               ; preds = %88, %92
  %95 = ptrtoint %"class.blink::FontFeatureSettings"* %90 to i64
  %96 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 1
  %97 = bitcast %class.scoped_refptr.481* %96 to i64*
  %98 = getelementptr inbounds %class.scoped_refptr.481, %class.scoped_refptr.481* %96, i64 0, i32 0
  %99 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %98, align 8
  store i64 %95, i64* %97, align 8
  %100 = icmp eq %"class.blink::FontFeatureSettings"* %99, null
  br i1 %100, label %121, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %99, i64 0, i32 1, i32 0
  %103 = getelementptr inbounds %"class.base::RefCounted.488", %"class.base::RefCounted.488"* %102, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %103) #12
  %104 = getelementptr inbounds %"class.base::RefCounted.488", %"class.base::RefCounted.488"* %102, i64 0, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %121

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.base::RefCounted.488", %"class.base::RefCounted.488"* %102, i64 -4
  %109 = bitcast %"class.base::RefCounted.488"* %108 to %"class.blink::FontTagValuePair"**
  %110 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %109, align 8
  %111 = icmp eq %"class.blink::FontTagValuePair"* %110, null
  %112 = bitcast %"class.blink::FontTagValuePair"* %110 to i8*
  br i1 %111, label %119, label %113, !prof !6

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.base::RefCounted.488", %"class.base::RefCounted.488"* %102, i64 -1, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %118, label %117, !prof !5

117:                                              ; preds = %113
  store i32 0, i32* %114, align 4
  br label %118

118:                                              ; preds = %117, %113
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %112) #12
  br label %119

119:                                              ; preds = %118, %107
  %120 = bitcast %"class.base::RefCounted.488"* %108 to i8*
  tail call void @free(i8* %120) #12
  br label %121

121:                                              ; preds = %84, %119, %101, %94
  %122 = load i32, i32* %9, align 8
  %123 = and i32 %122, 32
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 3, i32 0
  %127 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %126, align 8
  %128 = icmp eq %"class.blink::LayoutLocale"* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %127, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %130) #12
  br label %131

131:                                              ; preds = %125, %129
  %132 = bitcast %class.scoped_refptr.499* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132)
  %133 = getelementptr inbounds %class.scoped_refptr.499, %class.scoped_refptr.499* %5, i64 0, i32 0
  %134 = ptrtoint %"class.blink::LayoutLocale"* %127 to i64
  store %"class.blink::LayoutLocale"* null, %"class.blink::LayoutLocale"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 3
  %136 = bitcast %class.scoped_refptr.499* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #12
  %137 = bitcast %class.scoped_refptr.499* %135 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %class.scoped_refptr.499* %4 to i64*
  store i64 %134, i64* %137, align 8
  store i64 %138, i64* %139, align 8
  call void @_ZN13scoped_refptrIKN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.499* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #12
  call void @_ZN13scoped_refptrIKN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.499* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132)
  %140 = load i32, i32* %9, align 8
  br label %141

141:                                              ; preds = %121, %131
  %142 = phi i32 [ %122, %121 ], [ %140, %131 ]
  %143 = and i32 %142, 64
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %149, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 10, i32 2, i32 0
  %147 = load i16, i16* %146, align 4
  call void @_ZN5blink15FontDescription8SetStyleENS_18FontSelectionValueE(%"class.blink::FontDescription"* %1, i16 %147) #12
  %148 = load i32, i32* %9, align 8
  br label %149

149:                                              ; preds = %141, %145
  %150 = phi i32 [ %142, %141 ], [ %148, %145 ]
  %151 = and i32 %150, 256
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 12, i32 0
  %155 = bitcast %"struct.blink::FontDescription::BitFields"* %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = lshr i64 %156, 4
  %158 = trunc i64 %157 to i32
  %159 = and i32 %158, 7
  call void @_ZN5blink15FontDescription14SetVariantCapsENS0_15FontVariantCapsE(%"class.blink::FontDescription"* %1, i32 %159) #12
  %160 = load i32, i32* %9, align 8
  br label %161

161:                                              ; preds = %149, %153
  %162 = phi i32 [ %150, %149 ], [ %160, %153 ]
  %163 = and i32 %162, 512
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %173, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 12, i32 0
  %167 = bitcast %"struct.blink::FontDescription::BitFields"* %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = lshr i64 %168, 44
  %170 = trunc i64 %169 to i32
  %171 = and i32 %170, 63
  call void @_ZN5blink15FontDescription19SetVariantEastAsianENS_20FontVariantEastAsianE(%"class.blink::FontDescription"* %1, i32 %171) #12
  %172 = load i32, i32* %9, align 8
  br label %173

173:                                              ; preds = %161, %165
  %174 = phi i32 [ %162, %161 ], [ %172, %165 ]
  %175 = and i32 %174, 1024
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %182, label %177

177:                                              ; preds = %173
  %178 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %178) #12
  %179 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2
  %180 = call i32 @_ZNK5blink15FontDescription19GetVariantLigaturesEv(%"class.blink::FontDescription"* %179) #12
  store i32 %180, i32* %6, align 4
  call void @_ZN5blink15FontDescription19SetVariantLigaturesERKNS0_16VariantLigaturesE(%"class.blink::FontDescription"* %1, %"struct.blink::FontDescription::VariantLigatures"* nonnull dereferenceable(4) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %178) #12
  %181 = load i32, i32* %9, align 8
  br label %182

182:                                              ; preds = %173, %177
  %183 = phi i32 [ %174, %173 ], [ %181, %177 ]
  %184 = and i32 %183, 2048
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %196, label %186

186:                                              ; preds = %182
  %187 = bitcast %"class.blink::FontVariantNumeric"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %187) #12
  %188 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 12, i32 0
  %189 = bitcast %"struct.blink::FontDescription::BitFields"* %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = lshr i64 %190, 36
  %192 = trunc i64 %191 to i32
  %193 = and i32 %192, 255
  %194 = getelementptr inbounds %"class.blink::FontVariantNumeric", %"class.blink::FontVariantNumeric"* %8, i64 0, i32 0, i32 0
  store i32 %193, i32* %194, align 4
  call void @_ZN5blink15FontDescription17SetVariantNumericERKNS_18FontVariantNumericE(%"class.blink::FontDescription"* %1, %"class.blink::FontVariantNumeric"* nonnull dereferenceable(4) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %187) #12
  %195 = load i32, i32* %9, align 8
  br label %196

196:                                              ; preds = %182, %186
  %197 = phi i32 [ %183, %182 ], [ %195, %186 ]
  %198 = and i32 %197, 4096
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %233, label %200

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 2, i32 0
  %202 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %201, align 8
  %203 = icmp eq %"class.blink::FontVariationSettings"* %202, null
  br i1 %203, label %206, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %202, i64 0, i32 1, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %205) #12
  br label %206

206:                                              ; preds = %200, %204
  %207 = ptrtoint %"class.blink::FontVariationSettings"* %202 to i64
  %208 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 2
  %209 = bitcast %class.scoped_refptr.489* %208 to i64*
  %210 = getelementptr inbounds %class.scoped_refptr.489, %class.scoped_refptr.489* %208, i64 0, i32 0
  %211 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %210, align 8
  store i64 %207, i64* %209, align 8
  %212 = icmp eq %"class.blink::FontVariationSettings"* %211, null
  br i1 %212, label %233, label %213

213:                                              ; preds = %206
  %214 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %211, i64 0, i32 1, i32 0
  %215 = getelementptr inbounds %"class.base::RefCounted.498", %"class.base::RefCounted.498"* %214, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %215) #12
  %216 = getelementptr inbounds %"class.base::RefCounted.498", %"class.base::RefCounted.498"* %214, i64 0, i32 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %233

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"class.base::RefCounted.498", %"class.base::RefCounted.498"* %214, i64 -4
  %221 = bitcast %"class.base::RefCounted.498"* %220 to %"class.blink::FontTagValuePair.494"**
  %222 = load %"class.blink::FontTagValuePair.494"*, %"class.blink::FontTagValuePair.494"** %221, align 8
  %223 = icmp eq %"class.blink::FontTagValuePair.494"* %222, null
  %224 = bitcast %"class.blink::FontTagValuePair.494"* %222 to i8*
  br i1 %223, label %231, label %225, !prof !6

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.base::RefCounted.498", %"class.base::RefCounted.498"* %214, i64 -1, i32 0, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %230, label %229, !prof !5

229:                                              ; preds = %225
  store i32 0, i32* %226, align 4
  br label %230

230:                                              ; preds = %229, %225
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %224) #12
  br label %231

231:                                              ; preds = %230, %219
  %232 = bitcast %"class.base::RefCounted.498"* %220 to i8*
  call void @free(i8* %232) #12
  br label %233

233:                                              ; preds = %196, %231, %213, %206
  %234 = load i32, i32* %9, align 8
  %235 = and i32 %234, 8192
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %248, label %237

237:                                              ; preds = %233
  %238 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 12, i32 0
  %239 = bitcast %"struct.blink::FontDescription::BitFields"* %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %242 = bitcast %"struct.blink::FontDescription::BitFields"* %241 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = and i64 %240, 402653184
  %245 = and i64 %243, -402653185
  %246 = or i64 %245, %244
  store i64 %246, i64* %242, align 8
  call void @_ZN5blink15FontDescription25UpdateTypesettingFeaturesEv(%"class.blink::FontDescription"* %1) #12
  %247 = load i32, i32* %9, align 8
  br label %248

248:                                              ; preds = %233, %237
  %249 = phi i32 [ %234, %233 ], [ %247, %237 ]
  %250 = and i32 %249, 16384
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %263, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 12, i32 0
  %254 = bitcast %"struct.blink::FontDescription::BitFields"* %253 to i64*
  %255 = load i64, i64* %254, align 8
  %256 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %257 = bitcast %"struct.blink::FontDescription::BitFields"* %256 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = and i64 %255, 6144
  %260 = and i64 %258, -6145
  %261 = or i64 %260, %259
  store i64 %261, i64* %257, align 8
  call void @_ZN5blink15FontDescription25UpdateTypesettingFeaturesEv(%"class.blink::FontDescription"* %1) #12
  %262 = load i32, i32* %9, align 8
  br label %263

263:                                              ; preds = %248, %252
  %264 = phi i32 [ %249, %248 ], [ %262, %252 ]
  %265 = trunc i32 %264 to i16
  %266 = icmp slt i16 %265, 0
  br i1 %266, label %267, label %278

267:                                              ; preds = %263
  %268 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 12, i32 0
  %269 = bitcast %"struct.blink::FontDescription::BitFields"* %268 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = and i64 %270, 2251799813685248
  %272 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %273 = bitcast %"struct.blink::FontDescription::BitFields"* %272 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = and i64 %274, -2251799813685249
  %276 = or i64 %275, %271
  store i64 %276, i64* %273, align 8
  %277 = load i32, i32* %9, align 8
  br label %278

278:                                              ; preds = %267, %263
  %279 = phi i32 [ %277, %267 ], [ %264, %263 ]
  %280 = and i32 %279, 65536
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %293, label %282

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 2, i32 12, i32 0
  %284 = bitcast %"struct.blink::FontDescription::BitFields"* %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %287 = bitcast %"struct.blink::FontDescription::BitFields"* %286 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = and i64 %285, 100663296
  %290 = and i64 %288, -100663297
  %291 = or i64 %290, %289
  store i64 %291, i64* %287, align 8
  %292 = load i32, i32* %9, align 8
  br label %293

293:                                              ; preds = %278, %282
  %294 = phi i32 [ %279, %278 ], [ %292, %282 ]
  %295 = and i32 %294, 786432
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %298, label %297

297:                                              ; preds = %293
  call void @_ZN5blink15FontDescription14SetOrientationENS_15FontOrientationE(%"class.blink::FontDescription"* %1, i32 %2) #12
  br label %298

298:                                              ; preds = %293, %297
  %299 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 4
  %300 = load float, float* %299, align 8
  %301 = fcmp une float %300, 0.000000e+00
  br i1 %301, label %329, label %302

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 12, i32 0
  %304 = bitcast %"struct.blink::FontDescription::BitFields"* %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = lshr i64 %305, 21
  %307 = trunc i64 %306 to i32
  %308 = and i32 %307, 15
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %329, label %310

310:                                              ; preds = %302
  %311 = and i64 %305, 1792
  %312 = icmp eq i64 %311, 1024
  br i1 %312, label %313, label %324

313:                                              ; preds = %310
  %314 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0, i32 1, i32 0
  %315 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %314, align 8
  %316 = icmp eq %"class.blink::SharedFontFamily"* %315, null
  br i1 %316, label %317, label %324

317:                                              ; preds = %313
  %318 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names16kWebkitMonospaceE, align 8
  %319 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %319, align 8
  %321 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %318, i64 0, i32 0, i32 0, i32 0
  %322 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %321, align 8
  %323 = icmp eq %"class.WTF::StringImpl"* %320, %322
  br label %324

324:                                              ; preds = %310, %313, %317
  %325 = phi i1 [ false, %313 ], [ false, %310 ], [ %323, %317 ]
  %326 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %327 = load %"class.blink::Document"*, %"class.blink::Document"** %326, align 8
  %328 = call float @_ZN5blink17FontSizeFunctions18FontSizeForKeywordEPKNS_8DocumentEjb(%"class.blink::Document"* %327, i32 %308, i1 zeroext %325) #12
  br label %329

329:                                              ; preds = %302, %324, %298
  %330 = phi float [ %300, %298 ], [ %328, %324 ], [ %300, %302 ]
  %331 = fcmp ult float %330, 0x47EFFFFFE0000000
  %332 = fcmp ole float %330, 0xC7EFFFFFE0000000
  %333 = select i1 %332, float 0xC7EFFFFFE0000000, float %330
  %334 = select i1 %331, float %333, float 0x47EFFFFFE0000000
  store float %334, float* %299, align 8
  %335 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 5
  store float %334, float* %335, align 4
  %336 = fcmp une float %330, 0.000000e+00
  br i1 %336, label %337, label %343

337:                                              ; preds = %329
  %338 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 7
  %339 = load float, float* %338, align 4
  %340 = fcmp une float %339, -1.000000e+00
  br i1 %340, label %341, label %343

341:                                              ; preds = %337
  %342 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %1, i64 0, i32 6
  store float %334, float* %342, align 8
  br label %343

343:                                              ; preds = %341, %337, %329
  ret void
}

declare i32 @_ZNK5blink15FontDescription19GetVariantLigaturesEv(%"class.blink::FontDescription"*) local_unnamed_addr #1

declare void @_ZN5blink15FontDescription14SetOrientationENS_15FontOrientationE(%"class.blink::FontDescription"*, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::FontSelector"* @_ZN5blink11FontBuilder25FontSelectorFromTreeScopeEPKNS_9TreeScopeE(%"class.blink::FontBuilder"* nocapture readonly, %"class.blink::TreeScope"* nocapture readnone) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %4 = load %"class.blink::Document"*, %"class.blink::Document"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %4, i64 0, i32 59, i32 0, i32 0
  %6 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %6, i64 0, i32 37, i32 0, i32 0
  %8 = load %"class.blink::CSSFontSelector"*, %"class.blink::CSSFontSelector"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSFontSelector", %"class.blink::CSSFontSelector"* %8, i64 0, i32 0
  ret %"class.blink::FontSelector"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FontSelector"* @_ZN5blink11FontBuilder19ComputeFontSelectorERKNS_13ComputedStyleE(%"class.blink::FontBuilder"* nocapture readonly, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %9 = load %"class.blink::Document"*, %"class.blink::Document"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %9, i64 0, i32 59, i32 0, i32 0
  %11 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %11, i64 0, i32 37, i32 0, i32 0
  %13 = load %"class.blink::CSSFontSelector"*, %"class.blink::CSSFontSelector"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::CSSFontSelector", %"class.blink::CSSFontSelector"* %13, i64 0, i32 0
  br label %25

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %19, i64 0, i32 1, i32 1, i32 0
  %21 = load %"class.blink::FontFallbackList"*, %"class.blink::FontFallbackList"** %20, align 8
  %22 = icmp eq %"class.blink::FontFallbackList"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %15
  %24 = tail call %"class.blink::FontSelector"* @_ZNK5blink16FontFallbackList15GetFontSelectorEv(%"class.blink::FontFallbackList"* nonnull %21) #12
  br label %25

25:                                               ; preds = %23, %15, %7
  %26 = phi %"class.blink::FontSelector"* [ %14, %7 ], [ %24, %23 ], [ null, %15 ]
  ret %"class.blink::FontSelector"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder10CreateFontERNS_13ComputedStyleEPKS1_(%"class.blink::FontBuilder"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::ComputedStyle"* readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FontDescription", align 8
  %5 = alloca %"class.blink::Font", align 8
  %6 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %121, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::FontDescription"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %10) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 bitcast (%"class.blink::FontDescription"* @__const._ZN5blink11FontBuilder17CreateInitialFontERNS_13ComputedStyleE.font_description to i8*), i64 80, i1 false)
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %14, i64 0, i32 1, i32 0
  call void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"* nonnull %4, %"class.blink::FontDescription"* dereferenceable(80) %15) #12
  %16 = call i32 @_ZNK5blink13ComputedStyle22ComputeFontOrientationEv(%"class.blink::ComputedStyle"* %1) #12
  call void @_ZN5blink11FontBuilder21UpdateFontDescriptionERNS_15FontDescriptionENS_15FontOrientationE(%"class.blink::FontBuilder"* %0, %"class.blink::FontDescription"* nonnull dereferenceable(80) %4, i32 %16)
  %17 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %4, i64 0, i32 4
  %18 = load float, float* %17, align 8
  %19 = fcmp une float %18, 0.000000e+00
  br i1 %19, label %47, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %4, i64 0, i32 12, i32 0
  %22 = bitcast %"struct.blink::FontDescription::BitFields"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = lshr i64 %23, 21
  %25 = trunc i64 %24 to i32
  %26 = and i32 %25, 15
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %47, label %28

28:                                               ; preds = %20
  %29 = and i64 %23, 1792
  %30 = icmp eq i64 %29, 1024
  br i1 %30, label %31, label %42

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %4, i64 0, i32 0, i32 1, i32 0
  %33 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %32, align 8
  %34 = icmp eq %"class.blink::SharedFontFamily"* %33, null
  br i1 %34, label %35, label %42

35:                                               ; preds = %31
  %36 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names16kWebkitMonospaceE, align 8
  %37 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %36, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %38, %40
  br label %42

42:                                               ; preds = %35, %31, %28
  %43 = phi i1 [ false, %31 ], [ false, %28 ], [ %41, %35 ]
  %44 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %45 = load %"class.blink::Document"*, %"class.blink::Document"** %44, align 8
  %46 = call float @_ZN5blink17FontSizeFunctions18FontSizeForKeywordEPKNS_8DocumentEjb(%"class.blink::Document"* %45, i32 %26, i1 zeroext %43) #12
  br label %47

47:                                               ; preds = %9, %20, %42
  %48 = phi float [ %18, %9 ], [ %46, %42 ], [ %18, %20 ]
  %49 = fcmp ult float %48, 0x47EFFFFFE0000000
  %50 = fcmp ole float %48, 0xC7EFFFFFE0000000
  %51 = select i1 %50, float 0xC7EFFFFFE0000000, float %48
  %52 = select i1 %49, float %51, float 0x47EFFFFFE0000000
  store float %52, float* %17, align 8
  %53 = icmp eq %"class.blink::ComputedStyle"* %2, null
  %54 = select i1 %53, %"class.blink::ComputedStyle"* %1, %"class.blink::ComputedStyle"* %2
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %56, i64 0, i32 1, i32 0, i32 0
  %58 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %58, i64 0, i32 1, i32 0
  call void @_ZN5blink11FontBuilder27CheckForGenericFamilyChangeERKNS_15FontDescriptionERS1_(%"class.blink::FontBuilder"* %0, %"class.blink::FontDescription"* dereferenceable(80) %59, %"class.blink::FontDescription"* nonnull dereferenceable(80) %4) #12
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %61 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %63, i64 0, i32 6
  %65 = load float, float* %64, align 8
  %66 = load float, float* %17, align 8
  %67 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %68 = load %"class.blink::Document"*, %"class.blink::Document"** %67, align 8
  %69 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %68) #12
  %70 = icmp eq %"class.blink::LocalFrame"* %69, null
  br i1 %70, label %75, label %71

71:                                               ; preds = %47
  %72 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %69, i64 0, i32 21
  %73 = load float, float* %72, align 4
  %74 = fmul float %65, %73
  br label %75

75:                                               ; preds = %47, %71
  %76 = phi float [ %74, %71 ], [ %65, %47 ]
  %77 = load %"class.blink::Document"*, %"class.blink::Document"** %67, align 8
  %78 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %4, i64 0, i32 12, i32 0
  %79 = bitcast %"struct.blink::FontDescription::BitFields"* %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = trunc i64 %80 to i8
  %82 = icmp slt i8 %81, 0
  %83 = call float @_ZN5blink17FontSizeFunctions32GetComputedSizeFromSpecifiedSizeEPKNS_8DocumentEfbfNS_20ApplyMinimumFontSizeE(%"class.blink::Document"* %77, float %76, i1 zeroext %82, float %66, i32 1) #12
  %84 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %11, align 8
  %85 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %84, i64 0, i32 3
  %86 = load float, float* %85, align 8
  %87 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %60, align 8
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %87, i64 0, i32 2, i32 0, i32 0
  %89 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %89, i64 0, i32 6
  %91 = load float, float* %90, align 8
  %92 = call float @_ZN5blink13TextAutosizer24ComputeAutosizedFontSizeEfff(float %83, float %86, float %91) #12
  %93 = fcmp ult float %92, 0x47EFFFFFE0000000
  %94 = fcmp ole float %92, 0xC7EFFFFFE0000000
  %95 = select i1 %94, float 0xC7EFFFFFE0000000, float %92
  %96 = select i1 %93, float %95, float 0x47EFFFFFE0000000
  %97 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %4, i64 0, i32 5
  store float %96, float* %97, align 4
  %98 = load i32, i32* %6, align 8
  %99 = and i32 %98, 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %108, label %101

101:                                              ; preds = %75
  %102 = load %"class.blink::Document"*, %"class.blink::Document"** %67, align 8
  %103 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %102, i64 0, i32 59, i32 0, i32 0
  %104 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %104, i64 0, i32 37, i32 0, i32 0
  %106 = load %"class.blink::CSSFontSelector"*, %"class.blink::CSSFontSelector"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::CSSFontSelector", %"class.blink::CSSFontSelector"* %106, i64 0, i32 0
  br label %117

108:                                              ; preds = %75
  %109 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %11, align 8
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %109, i64 0, i32 1, i32 0, i32 0
  %111 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %111, i64 0, i32 1, i32 1, i32 0
  %113 = load %"class.blink::FontFallbackList"*, %"class.blink::FontFallbackList"** %112, align 8
  %114 = icmp eq %"class.blink::FontFallbackList"* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %108
  %116 = call %"class.blink::FontSelector"* @_ZNK5blink16FontFallbackList15GetFontSelectorEv(%"class.blink::FontFallbackList"* nonnull %113) #12
  br label %117

117:                                              ; preds = %101, %108, %115
  %118 = phi %"class.blink::FontSelector"* [ %107, %101 ], [ %116, %115 ], [ null, %108 ]
  call void @_ZN5blink11FontBuilder18UpdateAdjustedSizeERNS_15FontDescriptionERKNS_13ComputedStyleEPNS_12FontSelectorE(%"class.blink::FontBuilder"* undef, %"class.blink::FontDescription"* nonnull dereferenceable(80) %4, %"class.blink::ComputedStyle"* dereferenceable(104) undef, %"class.blink::FontSelector"* %118)
  %119 = bitcast %"class.blink::ComputedStyle"* %1 to %"class.blink::ComputedStyleBase"*
  %120 = bitcast %"class.blink::Font"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %120) #12
  call void @_ZN5blink4FontC1ERKNS_15FontDescriptionEPNS_12FontSelectorE(%"class.blink::Font"* nonnull %5, %"class.blink::FontDescription"* nonnull dereferenceable(80) %4, %"class.blink::FontSelector"* %118) #12
  call void @_ZN5blink17ComputedStyleBase15SetFontInternalEONS_4FontE(%"class.blink::ComputedStyleBase"* %119, %"class.blink::Font"* nonnull dereferenceable(88) %5)
  call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %120) #12
  store i32 0, i32* %6, align 8
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %10) #12
  br label %121

121:                                              ; preds = %3, %117
  ret void
}

declare void @_ZN5blink15FontDescriptionC1ERKS0_(%"class.blink::FontDescription"*, %"class.blink::FontDescription"* dereferenceable(80)) unnamed_addr #1

declare i32 @_ZNK5blink13ComputedStyle22ComputeFontOrientationEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase15SetFontInternalEONS_4FontE(%"class.blink::ComputedStyleBase"*, %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %4, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %6, i64 0, i32 1
  %8 = tail call zeroext i1 @_ZNK5blink4FonteqERKS0_(%"class.blink::Font"* %7, %"class.blink::Font"* dereferenceable(88) %1) #12
  br i1 %8, label %77, label %9

9:                                                ; preds = %2
  %10 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %3, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %48, label %14

14:                                               ; preds = %9
  %15 = tail call noalias i8* @malloc(i64 48) #12
  %16 = bitcast i8* %15 to %"class.blink::ComputedStyleBase::StyleInheritedData"*
  tail call void @_ZN5blink17ComputedStyleBase18StyleInheritedDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleInheritedData"* %16, %"class.blink::ComputedStyleBase::StyleInheritedData"* dereferenceable(48) %10) #12
  %17 = ptrtoint i8* %15 to i64
  %18 = bitcast %"class.blink::ComputedStyleBase"* %0 to i64*
  %19 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %3, align 8
  store i64 %17, i64* %18, align 8
  %20 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedData"* %19, null
  br i1 %20, label %48, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %19, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #12
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %48

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %19, i64 0, i32 2, i32 2
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %19, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %31) #12
  br label %32

32:                                               ; preds = %30, %26
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %19, i64 0, i32 1, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %33, align 8
  %35 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %34, null
  br i1 %35, label %46, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %34, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %37) #12
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %46

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %34, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.base::RefCounted.479", %"class.base::RefCounted.479"* %42, i64 2
  %44 = bitcast %"class.base::RefCounted.479"* %43 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %44) #12
  %45 = bitcast %"class.blink::ComputedStyleBase::StyleFontData"* %34 to i8*
  tail call void @free(i8* %45) #12
  br label %46

46:                                               ; preds = %32, %36, %41
  %47 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedData"* %19 to i8*
  tail call void @free(i8* %47) #12
  br label %48

48:                                               ; preds = %9, %14, %21, %46
  %49 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %3, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %49, i64 0, i32 1
  %51 = getelementptr inbounds %"class.blink::DataRef.476", %"class.blink::DataRef.476"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %73, label %56

56:                                               ; preds = %48
  %57 = tail call noalias i8* @malloc(i64 96) #12
  %58 = bitcast i8* %57 to %"class.blink::ComputedStyleBase::StyleFontData"*
  tail call void @_ZN5blink17ComputedStyleBase13StyleFontDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleFontData"* %58, %"class.blink::ComputedStyleBase::StyleFontData"* dereferenceable(96) %52) #12
  %59 = ptrtoint i8* %57 to i64
  %60 = bitcast %"class.blink::DataRef.476"* %50 to i64*
  %61 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %51, align 8
  store i64 %59, i64* %60, align 8
  %62 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %61, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %61, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %64) #12
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %73

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %61, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.base::RefCounted.479", %"class.base::RefCounted.479"* %69, i64 2
  %71 = bitcast %"class.base::RefCounted.479"* %70 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %71) #12
  %72 = bitcast %"class.blink::ComputedStyleBase::StyleFontData"* %61 to i8*
  tail call void @free(i8* %72) #12
  br label %73

73:                                               ; preds = %48, %56, %63, %68
  %74 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %51, align 8
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %74, i64 0, i32 1
  %76 = tail call dereferenceable(88) %"class.blink::Font"* @_ZN5blink4FontaSERKS0_(%"class.blink::Font"* %75, %"class.blink::Font"* dereferenceable(88) %1) #12
  br label %77

77:                                               ; preds = %73, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 3
  tail call void @_ZN13scoped_refptrIKN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.499* %2) #12
  %3 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.blink::FontVariationSettings"*, %"class.blink::FontVariationSettings"** %3, align 8
  %5 = icmp eq %"class.blink::FontVariationSettings"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::FontVariationSettings", %"class.blink::FontVariationSettings"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted.498", %"class.base::RefCounted.498"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #12
  %9 = getelementptr inbounds %"class.base::RefCounted.498", %"class.base::RefCounted.498"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %26

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.498", %"class.base::RefCounted.498"* %7, i64 -4
  %14 = bitcast %"class.base::RefCounted.498"* %13 to %"class.blink::FontTagValuePair.494"**
  %15 = load %"class.blink::FontTagValuePair.494"*, %"class.blink::FontTagValuePair.494"** %14, align 8
  %16 = icmp eq %"class.blink::FontTagValuePair.494"* %15, null
  %17 = bitcast %"class.blink::FontTagValuePair.494"* %15 to i8*
  br i1 %16, label %24, label %18, !prof !6

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.base::RefCounted.498", %"class.base::RefCounted.498"* %7, i64 -1, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !5

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #12
  br label %24

24:                                               ; preds = %23, %12
  %25 = bitcast %"class.base::RefCounted.498"* %13 to i8*
  tail call void @free(i8* %25) #12
  br label %26

26:                                               ; preds = %1, %6, %24
  %27 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 1, i32 0
  %28 = load %"class.blink::FontFeatureSettings"*, %"class.blink::FontFeatureSettings"** %27, align 8
  %29 = icmp eq %"class.blink::FontFeatureSettings"* %28, null
  br i1 %29, label %50, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::FontFeatureSettings", %"class.blink::FontFeatureSettings"* %28, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.base::RefCounted.488", %"class.base::RefCounted.488"* %31, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %32) #12
  %33 = getelementptr inbounds %"class.base::RefCounted.488", %"class.base::RefCounted.488"* %31, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %50

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.base::RefCounted.488", %"class.base::RefCounted.488"* %31, i64 -4
  %38 = bitcast %"class.base::RefCounted.488"* %37 to %"class.blink::FontTagValuePair"**
  %39 = load %"class.blink::FontTagValuePair"*, %"class.blink::FontTagValuePair"** %38, align 8
  %40 = icmp eq %"class.blink::FontTagValuePair"* %39, null
  %41 = bitcast %"class.blink::FontTagValuePair"* %39 to i8*
  br i1 %40, label %48, label %42, !prof !6

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.base::RefCounted.488", %"class.base::RefCounted.488"* %31, i64 -1, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %47, label %46, !prof !5

46:                                               ; preds = %42
  store i32 0, i32* %43, align 4
  br label %47

47:                                               ; preds = %46, %42
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %41) #12
  br label %48

48:                                               ; preds = %47, %36
  %49 = bitcast %"class.base::RefCounted.488"* %37 to i8*
  tail call void @free(i8* %49) #12
  br label %50

50:                                               ; preds = %26, %30, %48
  %51 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %0, i64 0, i32 0
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %51) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11FontBuilder17CreateInitialFontERNS_13ComputedStyleE(%"class.blink::FontBuilder"* nocapture, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.scoped_refptr.499, align 8
  %4 = alloca %class.scoped_refptr.499, align 8
  %5 = alloca %"class.blink::FontDescription", align 8
  %6 = alloca %"struct.blink::FontDescription::FamilyDescription", align 8
  %7 = alloca %"class.blink::Font", align 8
  %8 = bitcast %"class.blink::FontDescription"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %8) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 bitcast (%"class.blink::FontDescription"* @__const._ZN5blink11FontBuilder17CreateInitialFontERNS_13ComputedStyleE.font_description to i8*), i64 80, i1 false)
  call void @_ZN5blink15FontDescriptionC1Ev(%"class.blink::FontDescription"* nonnull %5) #12
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %10, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %12, i64 0, i32 1, i32 0, i32 3, i32 0
  %14 = load %"class.blink::LayoutLocale"*, %"class.blink::LayoutLocale"** %13, align 8
  %15 = icmp eq %"class.blink::LayoutLocale"* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::LayoutLocale", %"class.blink::LayoutLocale"* %14, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %17) #12
  br label %18

18:                                               ; preds = %16, %2
  %19 = bitcast %class.scoped_refptr.499* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = getelementptr inbounds %class.scoped_refptr.499, %class.scoped_refptr.499* %4, i64 0, i32 0
  %21 = ptrtoint %"class.blink::LayoutLocale"* %14 to i64
  store %"class.blink::LayoutLocale"* null, %"class.blink::LayoutLocale"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %5, i64 0, i32 3
  %23 = bitcast %class.scoped_refptr.499* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  %24 = bitcast %class.scoped_refptr.499* %22 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %class.scoped_refptr.499* %3 to i64*
  store i64 %21, i64* %24, align 8
  store i64 %25, i64* %26, align 8
  call void @_ZN13scoped_refptrIKN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.499* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  call void @_ZN13scoped_refptrIKN5blink12LayoutLocaleEED2Ev(%class.scoped_refptr.499* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %27 = bitcast %"struct.blink::FontDescription::FamilyDescription"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"struct.blink::FontDescription::FamilyDescription", %"struct.blink::FontDescription::FamilyDescription"* %6, i64 0, i32 0
  store i32 1, i32* %28, align 8, !alias.scope !8
  %29 = getelementptr inbounds %"struct.blink::FontDescription::FamilyDescription", %"struct.blink::FontDescription::FamilyDescription"* %6, i64 0, i32 1
  %30 = bitcast %"class.blink::FontFamily"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #12, !alias.scope !8
  call void @_ZN5blink11FontBuilder20SetFamilyDescriptionERNS_15FontDescriptionERKNS1_17FamilyDescriptionE(%"class.blink::FontBuilder"* %0, %"class.blink::FontDescription"* nonnull dereferenceable(80) %5, %"struct.blink::FontDescription::FamilyDescription"* nonnull dereferenceable(24) %6)
  call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %29) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  %31 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = or i32 %32, 2
  store i32 %33, i32* %31, align 8
  %34 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %5, i64 0, i32 12, i32 0
  %35 = bitcast %"struct.blink::FontDescription::BitFields"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %5, i64 0, i32 4
  store float 0.000000e+00, float* %37, align 8
  %38 = and i64 %36, -31457409
  %39 = or i64 %38, 8388608
  store i64 %39, i64* %35, align 8
  %40 = and i64 %36, 1792
  %41 = icmp eq i64 %40, 1024
  br i1 %41, label %42, label %53

42:                                               ; preds = %18
  %43 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %5, i64 0, i32 0, i32 1, i32 0
  %44 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %43, align 8
  %45 = icmp eq %"class.blink::SharedFontFamily"* %44, null
  br i1 %45, label %46, label %53

46:                                               ; preds = %42
  %47 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink17font_family_names16kWebkitMonospaceE, align 8
  %48 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %47, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %49, %51
  br label %53

53:                                               ; preds = %18, %42, %46
  %54 = phi i1 [ false, %42 ], [ false, %18 ], [ %52, %46 ]
  %55 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %56 = load %"class.blink::Document"*, %"class.blink::Document"** %55, align 8
  %57 = call float @_ZN5blink17FontSizeFunctions18FontSizeForKeywordEPKNS_8DocumentEjb(%"class.blink::Document"* %56, i32 4, i1 zeroext %54) #12
  %58 = fcmp ult float %57, 0x47EFFFFFE0000000
  %59 = fcmp ole float %57, 0xC7EFFFFFE0000000
  %60 = select i1 %59, float 0xC7EFFFFFE0000000, float %57
  %61 = select i1 %58, float %60, float 0x47EFFFFFE0000000
  store float %61, float* %37, align 8
  %62 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %9, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %62, i64 0, i32 1, i32 0, i32 0
  %64 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %64, i64 0, i32 1, i32 0
  call void @_ZN5blink11FontBuilder27CheckForGenericFamilyChangeERKNS_15FontDescriptionERS1_(%"class.blink::FontBuilder"* %0, %"class.blink::FontDescription"* dereferenceable(80) %65, %"class.blink::FontDescription"* nonnull dereferenceable(80) %5) #12
  %66 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %67 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %67, i64 0, i32 2, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %69, i64 0, i32 6
  %71 = load float, float* %70, align 8
  %72 = load float, float* %37, align 8
  %73 = getelementptr inbounds %"class.blink::FontBuilder", %"class.blink::FontBuilder"* %0, i64 0, i32 0
  %74 = load %"class.blink::Document"*, %"class.blink::Document"** %73, align 8
  %75 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %74) #12
  %76 = icmp eq %"class.blink::LocalFrame"* %75, null
  br i1 %76, label %81, label %77

77:                                               ; preds = %53
  %78 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %75, i64 0, i32 21
  %79 = load float, float* %78, align 4
  %80 = fmul float %71, %79
  br label %81

81:                                               ; preds = %53, %77
  %82 = phi float [ %80, %77 ], [ %71, %53 ]
  %83 = load %"class.blink::Document"*, %"class.blink::Document"** %73, align 8
  %84 = load i64, i64* %35, align 8
  %85 = trunc i64 %84 to i8
  %86 = icmp slt i8 %85, 0
  %87 = call float @_ZN5blink17FontSizeFunctions32GetComputedSizeFromSpecifiedSizeEPKNS_8DocumentEfbfNS_20ApplyMinimumFontSizeE(%"class.blink::Document"* %83, float %82, i1 zeroext %86, float %72, i32 1) #12
  %88 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %9, align 8
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %88, i64 0, i32 3
  %90 = load float, float* %89, align 8
  %91 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %66, align 8
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %91, i64 0, i32 2, i32 0, i32 0
  %93 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %93, i64 0, i32 6
  %95 = load float, float* %94, align 8
  %96 = call float @_ZN5blink13TextAutosizer24ComputeAutosizedFontSizeEfff(float %87, float %90, float %95) #12
  %97 = fcmp ult float %96, 0x47EFFFFFE0000000
  %98 = fcmp ole float %96, 0xC7EFFFFFE0000000
  %99 = select i1 %98, float 0xC7EFFFFFE0000000, float %96
  %100 = select i1 %97, float %99, float 0x47EFFFFFE0000000
  %101 = getelementptr inbounds %"class.blink::FontDescription", %"class.blink::FontDescription"* %5, i64 0, i32 5
  store float %100, float* %101, align 4
  %102 = call i32 @_ZNK5blink13ComputedStyle22ComputeFontOrientationEv(%"class.blink::ComputedStyle"* %1) #12
  call void @_ZN5blink15FontDescription14SetOrientationENS_15FontOrientationE(%"class.blink::FontDescription"* nonnull %5, i32 %102) #12
  %103 = load %"class.blink::Document"*, %"class.blink::Document"** %73, align 8
  %104 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %103, i64 0, i32 59, i32 0, i32 0
  %105 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %105, i64 0, i32 37, i32 0, i32 0
  %107 = load %"class.blink::CSSFontSelector"*, %"class.blink::CSSFontSelector"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::CSSFontSelector", %"class.blink::CSSFontSelector"* %107, i64 0, i32 0
  %109 = bitcast %"class.blink::ComputedStyle"* %1 to %"class.blink::ComputedStyleBase"*
  %110 = bitcast %"class.blink::Font"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %110) #12
  call void @_ZN5blink4FontC1ERKNS_15FontDescriptionEPNS_12FontSelectorE(%"class.blink::Font"* nonnull %7, %"class.blink::FontDescription"* nonnull dereferenceable(80) %5, %"class.blink::FontSelector"* %108) #12
  call void @_ZN5blink17ComputedStyleBase15SetFontInternalEONS_4FontE(%"class.blink::ComputedStyleBase"* %109, %"class.blink::Font"* nonnull dereferenceable(88) %7)
  call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %110) #12
  call void @_ZN5blink15FontDescriptionD2Ev(%"class.blink::FontDescription"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %8) #12
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

declare void @_ZN5blink15FontDescription25UpdateTypesettingFeaturesEv(%"class.blink::FontDescription"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::FontFamily"* @_ZN5blink10FontFamilyaSERKS0_(%"class.blink::FontFamily"*, %"class.blink::FontFamily"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #12
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !5

20:                                               ; preds = %11
  tail call void @llvm.trap() #12
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"class.blink::FontFamily"* %0 to i64*
  %26 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #12
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.blink::FontFamily", %"class.blink::FontFamily"* %1, i64 0, i32 1, i32 0
  %45 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %44, align 8
  %46 = icmp eq %"class.blink::SharedFontFamily"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %45, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #12
  br label %49

49:                                               ; preds = %42, %47
  %50 = ptrtoint %"class.blink::SharedFontFamily"* %45 to i64
  %51 = bitcast %class.scoped_refptr.480* %43 to i64*
  %52 = getelementptr inbounds %class.scoped_refptr.480, %class.scoped_refptr.480* %43, i64 0, i32 0
  %53 = load %"class.blink::SharedFontFamily"*, %"class.blink::SharedFontFamily"** %52, align 8
  store i64 %50, i64* %51, align 8
  %54 = icmp eq %"class.blink::SharedFontFamily"* %53, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::SharedFontFamily", %"class.blink::SharedFontFamily"* %53, i64 0, i32 1, i32 0
  %57 = getelementptr inbounds %"class.base::RefCounted.1450", %"class.base::RefCounted.1450"* %56, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %57) #12
  %58 = getelementptr inbounds %"class.base::RefCounted.1450", %"class.base::RefCounted.1450"* %56, i64 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.base::RefCounted.1450", %"class.base::RefCounted.1450"* %56, i64 -4
  %63 = bitcast %"class.base::RefCounted.1450"* %62 to %"class.blink::FontFamily"*
  tail call void @_ZN5blink10FontFamilyD2Ev(%"class.blink::FontFamily"* %63) #12
  %64 = bitcast %"class.base::RefCounted.1450"* %62 to i8*
  tail call void @free(i8* %64) #12
  br label %65

65:                                               ; preds = %49, %55, %61
  ret %"class.blink::FontFamily"* %0
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #1

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #1

declare %"class.blink::FontSelector"* @_ZNK5blink16FontFallbackList15GetFontSelectorEv(%"class.blink::FontFallbackList"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4FonteqERKS0_(%"class.blink::Font"*, %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #1

declare dereferenceable(88) %"class.blink::Font"* @_ZN5blink4FontaSERKS0_(%"class.blink::Font"*, %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #1

declare void @_ZN5blink17ComputedStyleBase18StyleInheritedDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"* dereferenceable(48)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #10

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare void @_ZN5blink17ComputedStyleBase13StyleFontDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"* dereferenceable(96)) unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink11FontBuilder24InitialFamilyDescriptionEv: argument 0"}
!4 = distinct !{!4, !"_ZN5blink11FontBuilder24InitialFamilyDescriptionEv"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN5blink11FontBuilder24InitialFamilyDescriptionEv: argument 0"}
!10 = distinct !{!10, !"_ZN5blink11FontBuilder24InitialFamilyDescriptionEv"}
