; ModuleID = '../../cc/trees/throttle_decider.cc'
source_filename = "../../cc/trees/throttle_decider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::ThrottleDecider" = type { %"class.base::flat_map", %"class.base::internal::flat_tree.34", %"class.base::internal::flat_tree.34" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.29" }
%"struct.std::__1::pair" = type { %"class.util::IdType", %"class.viz::CompositorRenderPass"* }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.viz::CompositorRenderPass" = type <{ %"class.viz::RenderPassInternal", %"class.util::IdType", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [4 x i8] }>
%"class.viz::RenderPassInternal" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Transform", %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.12", i8, i8, i8, i8, %"class.std::__1::vector.17", %"class.viz::QuadList", %"class.cc::ListContainer.28" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.0" }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.7" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.4", i32, [4 x i8] }>
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.3, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.3 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%union.anon.16 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::unique_ptr" = type opaque
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::unique_ptr"* }
%"class.viz::QuadList" = type { %"class.cc::ListContainer" }
%"class.cc::ListContainer" = type { %"class.cc::ListContainerHelper" }
%"class.cc::ListContainerHelper" = type { %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.cc::ListContainerHelper::CharAllocator"* }
%"class.cc::ListContainerHelper::CharAllocator" = type opaque
%"class.cc::ListContainer.28" = type { %"class.cc::ListContainerHelper" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::pair"* }
%"class.base::internal::flat_tree.34" = type { %"class.std::__1::vector.35" }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.37" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.viz::FrameSinkId"* }
%"class.cc::ListContainerHelper::ConstIterator" = type { %"struct.cc::ListContainerHelper::PositionInCharAllocator", i64 }
%"struct.cc::ListContainerHelper::PositionInCharAllocator" = type { %"class.cc::ListContainerHelper::CharAllocator"*, i64, i8* }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.gfx::RectF"*, %"class.gfx::RectF"*, %"class.std::__1::__compressed_pair.44" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.gfx::RectF"* }
%"class.cc::ListContainer<viz::DrawQuad>::ConstIterator" = type { %"class.cc::ListContainerHelper::ConstIterator" }
%"class.viz::DrawQuad" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources", [4 x i8] }>
%"class.viz::SharedQuadState" = type <{ %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo", %"class.absl::optional.49", i8, [3 x i8], float, i32, i32, i8, [3 x i8], %"class.absl::optional.54", float, i8, [3 x i8] }>
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.absl::optional.49" = type { %"class.absl::optional_internal::optional_data.50" }
%"class.absl::optional_internal::optional_data.50" = type { %"class.absl::optional_internal::optional_data_base.51" }
%"class.absl::optional_internal::optional_data_base.51" = type { %"class.absl::optional_internal::optional_data_dtor_base.52" }
%"class.absl::optional_internal::optional_data_dtor_base.52" = type { i8, %union.anon.53 }
%union.anon.53 = type { %"class.gfx::Rect" }
%"class.absl::optional.54" = type { %"class.absl::optional_internal::optional_data.55" }
%"class.absl::optional_internal::optional_data.55" = type { %"class.absl::optional_internal::optional_data_base.56" }
%"class.absl::optional_internal::optional_data_base.56" = type { %"class.absl::optional_internal::optional_data_dtor_base.57" }
%"class.absl::optional_internal::optional_data_dtor_base.57" = type { i8, %union.anon.58 }
%union.anon.58 = type { i64 }
%"struct.viz::DrawQuad::Resources" = type { i32, [4 x %"class.util::IdType.59"] }
%"class.util::IdType.59" = type { %"class.base::StrongAlias.60" }
%"class.base::StrongAlias.60" = type { i32 }
%"class.viz::CompositorRenderPassDrawQuad" = type { %"class.viz::RenderPassDrawQuadInternal.base", %"class.util::IdType" }
%"class.viz::RenderPassDrawQuadInternal.base" = type <{ %"class.viz::DrawQuad.base", %"class.gfx::RectF", %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::PointF", %"class.gfx::RectF", float, i8, i8 }>
%"class.viz::DrawQuad.base" = type <{ i32 (...)**, i32, %"class.gfx::Rect", %"class.gfx::Rect", i8, [3 x i8], %"class.viz::SharedQuadState"*, %"struct.viz::DrawQuad::Resources" }>
%"class.gfx::Vector2dF" = type { float, float }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.viz::SurfaceDrawQuad" = type <{ %"class.viz::DrawQuad.base", [4 x i8], %"class.viz::SurfaceRange", i32, i8, i8, i8, i8 }>
%"class.viz::SurfaceRange" = type { %"class.absl::optional.62", %"class.viz::SurfaceId" }
%"class.absl::optional.62" = type { %"class.absl::optional_internal::optional_data.63" }
%"class.absl::optional_internal::optional_data.63" = type { %"class.absl::optional_internal::optional_data_base.64" }
%"class.absl::optional_internal::optional_data_base.64" = type { %"class.absl::optional_internal::optional_data_dtor_base.65" }
%"class.absl::optional_internal::optional_data_dtor_base.65" = type { i8, %union.anon.66 }
%union.anon.66 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.std::__1::__split_buffer.89" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.38", %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::allocator.40"* }
%"class.std::__1::allocator.40" = type { i8 }
%"struct.std::__1::__split_buffer.93" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.30", %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.std::__1::allocator.32"* }
%"class.std::__1::allocator.32" = type { i8 }

$_ZNSt3__16vectorIN3viz11FrameSinkIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN3viz11FrameSinkIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_4pairIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEEPKS5_EENS_9allocatorIS9_EEE7emplaceIJS9_EEENS_11__wrap_iterIPS9_EENSE_IPKS9_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEEPKS5_EERNS_9allocatorIS9_EEE12emplace_backIJS9_EEEvDpOT_ = comdat any

@_ZN2cc15ThrottleDeciderC1Ev = hidden unnamed_addr alias void (%"class.cc::ThrottleDecider"*), void (%"class.cc::ThrottleDecider"*)* @_ZN2cc15ThrottleDeciderC2Ev
@_ZN2cc15ThrottleDeciderD1Ev = hidden unnamed_addr alias void (%"class.cc::ThrottleDecider"*), void (%"class.cc::ThrottleDecider"*)* @_ZN2cc15ThrottleDeciderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15ThrottleDeciderC2Ev(%"class.cc::ThrottleDecider"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.cc::ThrottleDecider"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 72, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15ThrottleDeciderD2Ev(%"class.cc::ThrottleDecider"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %2, align 8
  %4 = icmp eq %"class.viz::FrameSinkId"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.viz::FrameSinkId"* %3 to i64
  %7 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %8 = bitcast %"class.viz::FrameSinkId"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"class.viz::FrameSinkId"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %11, align 8
  %13 = icmp eq %"class.viz::FrameSinkId"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"class.viz::FrameSinkId"* %12 to i64
  %16 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %17 = bitcast %"class.viz::FrameSinkId"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"class.viz::FrameSinkId"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %20, align 8
  %22 = icmp eq %"struct.std::__1::pair"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"struct.std::__1::pair"* %21 to i64
  %25 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::pair"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"struct.std::__1::pair"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15ThrottleDecider7PrepareEv(%"class.cc::ThrottleDecider"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 1
  %4 = bitcast %"class.base::internal::flat_tree.34"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.viz::FrameSinkId"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::internal::flat_tree.34"* %3 to i64*
  %10 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %11 = bitcast %"class.viz::FrameSinkId"** %10 to i64*
  %12 = bitcast %"class.base::internal::flat_tree.34"* %3 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  %14 = bitcast %"class.base::internal::flat_tree.34"* %2 to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %14, align 8
  %15 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.viz::FrameSinkId"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %7, align 8
  store i64 %5, i64* %9, align 8
  store i64 %8, i64* %16, align 8
  %18 = bitcast %"class.cc::ThrottleDecider"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::pair"** %20 to i64*
  store i64 %19, i64* %21, align 8
  store i64 %5, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc15ThrottleDecider17ProcessRenderPassERKN3viz20CompositorRenderPassE(%"class.cc::ThrottleDecider"*, %"class.viz::CompositorRenderPass"* dereferenceable(280)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::pair", align 8
  %4 = alloca %"class.cc::ListContainerHelper::ConstIterator", align 8
  %5 = alloca %"class.cc::ListContainerHelper::ConstIterator", align 8
  %6 = alloca %"struct.cc::ListContainerHelper::PositionInCharAllocator", align 8
  %7 = alloca %"class.std::__1::vector.42", align 8
  %8 = alloca %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", align 8
  %9 = alloca %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", align 8
  %10 = alloca %"class.gfx::RectF", align 4
  %11 = alloca { <2 x float>, <2 x float> }, align 8
  %12 = bitcast { <2 x float>, <2 x float> }* %11 to %"class.gfx::RectF"*
  %13 = alloca %"class.gfx::RectF", align 4
  %14 = alloca %"class.gfx::RectF", align 4
  %15 = alloca %"class.gfx::RectF", align 4
  %16 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %1, i64 0, i32 0, i32 3
  %17 = tail call zeroext i1 @_ZNK2cc16FilterOperations15HasFilterOfTypeENS_15FilterOperation10FilterTypeE(%"class.cc::FilterOperations"* %16, i32 8) #10
  %18 = bitcast %"class.std::__1::vector.42"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %7, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %7, i64 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #10
  %22 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %8, i64 0, i32 0, i32 1
  %24 = bitcast %"class.cc::ListContainerHelper::ConstIterator"* %5 to i8*
  %25 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #10, !noalias !2
  %26 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %1, i64 0, i32 0, i32 11, i32 0, i32 0
  call void @_ZNK2cc19ListContainerHelper6cbeginEv(%"class.cc::ListContainerHelper::ConstIterator"* nonnull sret %5, %"class.cc::ListContainerHelper"* %26) #10, !noalias !2
  %27 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %8, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %5, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %27, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %28) #10
  %29 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %5, i64 0, i32 1
  %30 = load i64, i64* %29, align 8, !noalias !2
  store i64 %30, i64* %23, align 8, !alias.scope !2
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD1Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #10, !noalias !2
  %31 = bitcast %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #10
  %32 = bitcast %"class.cc::ListContainerHelper::ConstIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #10, !noalias !7
  call void @_ZNK2cc19ListContainerHelper4cendEv(%"class.cc::ListContainerHelper::ConstIterator"* nonnull sret %4, %"class.cc::ListContainerHelper"* %26) #10, !noalias !7
  %33 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %9, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %4, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %33, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %34) #10
  %35 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %9, i64 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.cc::ListContainerHelper::ConstIterator", %"class.cc::ListContainerHelper::ConstIterator"* %4, i64 0, i32 1
  %37 = load i64, i64* %36, align 8, !noalias !7
  store i64 %37, i64* %35, align 8, !alias.scope !7
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD1Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #10, !noalias !7
  %38 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %27, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %33) #10
  %39 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %9, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD2Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #10
  br i1 %38, label %40, label %80

40:                                               ; preds = %2
  %41 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %8, i64 0, i32 0, i32 0, i32 2
  %42 = bitcast i8** %41 to %"class.viz::DrawQuad"**
  %43 = bitcast %"class.gfx::RectF"* %14 to i8*
  %44 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %14, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %14, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %14, i64 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %14, i64 0, i32 1, i32 1
  %48 = bitcast %"class.gfx::RectF"* %15 to i8*
  %49 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %15, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %15, i64 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %15, i64 0, i32 1, i32 0
  %52 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %15, i64 0, i32 1, i32 1
  %53 = xor i1 %17, true
  %54 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 1
  %55 = getelementptr inbounds %"class.base::internal::flat_tree.34", %"class.base::internal::flat_tree.34"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %57 = bitcast %"class.viz::FrameSinkId"** %56 to i64*
  %58 = getelementptr inbounds %"class.base::internal::flat_tree.34", %"class.base::internal::flat_tree.34"* %54, i64 0, i32 0
  %59 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = bitcast %"struct.std::__1::pair"** %60 to i64*
  %62 = bitcast %"class.gfx::RectF"* %10 to i8*
  %63 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 1, i32 0
  %66 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %10, i64 0, i32 1, i32 1
  %67 = bitcast { <2 x float>, <2 x float> }* %11 to i8*
  %68 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 0
  %69 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %11, i64 0, i32 1
  %70 = bitcast %"class.gfx::RectF"* %13 to i8*
  %71 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %13, i64 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %13, i64 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %13, i64 0, i32 1, i32 0
  %74 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %13, i64 0, i32 1, i32 1
  %75 = bitcast %"class.gfx::RectF"** %20 to i64*
  %76 = bitcast %"class.std::__1::vector.42"* %7 to i64*
  %77 = bitcast %"class.gfx::RectF"** %21 to i64*
  %78 = bitcast %"struct.cc::ListContainerHelper::PositionInCharAllocator"* %6 to i8*
  %79 = bitcast %"class.gfx::RectF"* %10 to i8*
  br label %132

80:                                               ; preds = %419, %2
  %81 = getelementptr inbounds %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator", %"class.cc::ListContainer<viz::DrawQuad>::ConstIterator"* %8, i64 0, i32 0
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD2Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %81) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %22) #10
  %82 = ptrtoint %"class.viz::CompositorRenderPass"* %1 to i64
  %83 = bitcast %"struct.std::__1::pair"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #10
  %84 = getelementptr inbounds %"class.viz::CompositorRenderPass", %"class.viz::CompositorRenderPass"* %1, i64 0, i32 1, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0, i32 0, i32 0
  %86 = load i64, i64* %84, align 8
  store i64 %86, i64* %85, align 8
  %87 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 1
  %88 = bitcast %"class.viz::CompositorRenderPass"** %87 to i64*
  store i64 %82, i64* %88, align 8
  %89 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %89, align 8
  %91 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = bitcast %"struct.std::__1::pair"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = ptrtoint %"struct.std::__1::pair"* %90 to i64
  %95 = sub i64 %93, %94
  %96 = icmp eq i64 %95, 0
  %97 = inttoptr i64 %93 to %"struct.std::__1::pair"*
  br i1 %96, label %114, label %98

98:                                               ; preds = %80
  %99 = ashr exact i64 %95, 4
  br label %100

100:                                              ; preds = %100, %98
  %101 = phi %"struct.std::__1::pair"* [ %90, %98 ], [ %112, %100 ]
  %102 = phi i64 [ %99, %98 ], [ %111, %100 ]
  %103 = lshr i64 %102, 1
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 %103
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = icmp ult i64 %106, %86
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 1
  %109 = xor i64 %103, -1
  %110 = add i64 %102, %109
  %111 = select i1 %107, i64 %110, i64 %103
  %112 = select i1 %107, %"struct.std::__1::pair"* %108, %"struct.std::__1::pair"* %101
  %113 = icmp eq i64 %111, 0
  br i1 %113, label %114, label %100

114:                                              ; preds = %100, %80
  %115 = phi %"struct.std::__1::pair"* [ %90, %80 ], [ %112, %100 ]
  %116 = icmp eq %"struct.std::__1::pair"* %115, %97
  br i1 %116, label %121, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %115, i64 0, i32 0, i32 0, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = icmp ult i64 %86, %119
  br i1 %120, label %121, label %124

121:                                              ; preds = %117, %114
  %122 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEEPKS5_EENS_9allocatorIS9_EEE7emplaceIJS9_EEENS_11__wrap_iterIPS9_EENSE_IPKS9_EEDpOT_(%"class.std::__1::vector"* %122, %"struct.std::__1::pair"* %115, %"struct.std::__1::pair"* nonnull dereferenceable(16) %3) #10
  br label %124

124:                                              ; preds = %117, %121
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #10
  %125 = load %"class.gfx::RectF"*, %"class.gfx::RectF"** %19, align 8
  %126 = icmp eq %"class.gfx::RectF"* %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %124
  %128 = ptrtoint %"class.gfx::RectF"* %125 to i64
  %129 = bitcast %"class.gfx::RectF"** %20 to i64*
  store i64 %128, i64* %129, align 8
  %130 = bitcast %"class.gfx::RectF"* %125 to i8*
  call void @_ZdlPv(i8* %130) #9
  br label %131

131:                                              ; preds = %124, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  ret void

132:                                              ; preds = %40, %419
  %133 = load %"class.viz::DrawQuad"*, %"class.viz::DrawQuad"** %42, align 8
  %134 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %133, i64 0, i32 1
  %135 = load i32, i32* %134, align 8
  switch i32 %135, label %419 [
    i32 3, label %136
    i32 7, label %298
  ]

136:                                              ; preds = %132
  %137 = call %"class.viz::CompositorRenderPassDrawQuad"* @_ZN3viz28CompositorRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %133) #10
  %138 = getelementptr inbounds %"class.viz::CompositorRenderPassDrawQuad", %"class.viz::CompositorRenderPassDrawQuad"* %137, i64 0, i32 1
  %139 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %59, align 8
  %140 = load i64, i64* %61, align 8
  %141 = ptrtoint %"struct.std::__1::pair"* %139 to i64
  %142 = sub i64 %140, %141
  %143 = icmp eq i64 %142, 0
  %144 = inttoptr i64 %140 to %"struct.std::__1::pair"*
  br i1 %143, label %165, label %145

145:                                              ; preds = %136
  %146 = ashr exact i64 %142, 4
  %147 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %138, i64 0, i32 0, i32 0
  %148 = load i64, i64* %147, align 8
  br label %149

149:                                              ; preds = %149, %145
  %150 = phi %"struct.std::__1::pair"* [ %139, %145 ], [ %161, %149 ]
  %151 = phi i64 [ %146, %145 ], [ %160, %149 ]
  %152 = lshr i64 %151, 1
  %153 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %150, i64 %152
  %154 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 0, i32 0, i32 0, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = icmp ult i64 %155, %148
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 1
  %158 = xor i64 %152, -1
  %159 = add i64 %151, %158
  %160 = select i1 %156, i64 %159, i64 %152
  %161 = select i1 %156, %"struct.std::__1::pair"* %157, %"struct.std::__1::pair"* %150
  %162 = icmp eq i64 %160, 0
  br i1 %162, label %163, label %149

163:                                              ; preds = %149
  %164 = ptrtoint %"struct.std::__1::pair"* %161 to i64
  br label %165

165:                                              ; preds = %163, %136
  %166 = phi i64 [ %164, %163 ], [ %141, %136 ]
  %167 = phi %"struct.std::__1::pair"* [ %161, %163 ], [ %139, %136 ]
  %168 = icmp eq %"struct.std::__1::pair"* %167, %144
  br i1 %168, label %178, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.util::IdType", %"class.util::IdType"* %138, i64 0, i32 0, i32 0
  %171 = load i64, i64* %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %167, i64 0, i32 0, i32 0, i32 0
  %173 = load i64, i64* %172, align 8
  %174 = icmp ult i64 %171, %173
  br i1 %174, label %178, label %175

175:                                              ; preds = %169
  %176 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %167, i64 1
  %177 = ptrtoint %"struct.std::__1::pair"* %176 to i64
  br label %178

178:                                              ; preds = %165, %169, %175
  %179 = phi i64 [ %177, %175 ], [ %166, %165 ], [ %166, %169 ]
  %180 = inttoptr i64 %179 to %"struct.std::__1::pair"*
  %181 = icmp eq %"struct.std::__1::pair"* %167, %180
  %182 = select i1 %181, %"struct.std::__1::pair"* %144, %"struct.std::__1::pair"* %167
  %183 = icmp eq %"struct.std::__1::pair"* %182, %144
  br i1 %183, label %419, label %184

184:                                              ; preds = %178
  %185 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %182, i64 0, i32 1
  %186 = bitcast %"class.viz::CompositorRenderPass"** %185 to %"class.viz::RenderPassInternal"**
  %187 = load %"class.viz::RenderPassInternal"*, %"class.viz::RenderPassInternal"** %186, align 8
  %188 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %187, i64 0, i32 4
  %189 = call zeroext i1 @_ZNK2cc16FilterOperations15HasFilterOfTypeENS_15FilterOperation10FilterTypeE(%"class.cc::FilterOperations"* %188, i32 8) #10
  br i1 %189, label %190, label %419

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"class.viz::CompositorRenderPassDrawQuad", %"class.viz::CompositorRenderPassDrawQuad"* %137, i64 0, i32 0, i32 0, i32 7, i32 1, i64 0, i32 0, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %419

194:                                              ; preds = %190
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #10
  %195 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %187, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %79, i8 -1, i64 16, i1 false)
  %196 = load i32, i32* %195, align 4
  %197 = sitofp i32 %196 to float
  %198 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %187, i64 0, i32 0, i32 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = sitofp i32 %199 to float
  %201 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %187, i64 0, i32 0, i32 1, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %187, i64 0, i32 0, i32 1, i32 1
  %204 = load i32, i32* %203, align 4
  store float %197, float* %63, align 4
  store float %200, float* %64, align 4
  %205 = icmp sgt i32 %202, 0
  %206 = select i1 %205, i32 %202, i32 0
  %207 = sitofp i32 %206 to float
  store float %207, float* %65, align 4
  %208 = icmp sgt i32 %204, 0
  %209 = select i1 %208, i32 %204, i32 0
  %210 = sitofp i32 %209 to float
  store float %210, float* %66, align 4
  %211 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %187, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %212 = load i8, i8* %211, align 4, !range !12
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %219, label %214

214:                                              ; preds = %194
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #10
  %215 = getelementptr inbounds %"class.viz::RenderPassInternal", %"class.viz::RenderPassInternal"* %187, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %216 = call { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* dereferenceable(16) %215) #10
  %217 = extractvalue { <2 x float>, <2 x float> } %216, 0
  store <2 x float> %217, <2 x float>* %68, align 8
  %218 = extractvalue { <2 x float>, <2 x float> } %216, 1
  store <2 x float> %218, <2 x float>* %69, align 8
  call void @_ZN3gfx5RectF9IntersectERKS0_(%"class.gfx::RectF"* nonnull %10, %"class.gfx::RectF"* nonnull dereferenceable(16) %12) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #10
  br label %219

219:                                              ; preds = %194, %214
  %220 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %133, i64 0, i32 6
  %221 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %220, align 8
  %222 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %221, i64 0, i32 0
  call void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"* %222, %"class.gfx::RectF"* nonnull %10) #10
  %223 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %220, align 8
  %224 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %223, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %225 = load i8, i8* %224, align 4, !range !12
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %244, label %227

227:                                              ; preds = %219
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #10
  %228 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %223, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %229 = load i32, i32* %228, align 4
  %230 = sitofp i32 %229 to float
  %231 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %223, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = sitofp i32 %232 to float
  %234 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %223, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %223, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %237 = load i32, i32* %236, align 4
  store float %230, float* %71, align 4
  store float %233, float* %72, align 4
  %238 = icmp sgt i32 %235, 0
  %239 = select i1 %238, i32 %235, i32 0
  %240 = sitofp i32 %239 to float
  store float %240, float* %73, align 4
  %241 = icmp sgt i32 %237, 0
  %242 = select i1 %241, i32 %237, i32 0
  %243 = sitofp i32 %242 to float
  store float %243, float* %74, align 4
  call void @_ZN3gfx5RectF9IntersectERKS0_(%"class.gfx::RectF"* nonnull %10, %"class.gfx::RectF"* nonnull dereferenceable(16) %13) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #10
  br label %244

244:                                              ; preds = %219, %227
  %245 = load %"class.gfx::RectF"*, %"class.gfx::RectF"** %20, align 8
  %246 = load %"class.gfx::RectF"*, %"class.gfx::RectF"** %21, align 8
  %247 = icmp eq %"class.gfx::RectF"* %245, %246
  %248 = ptrtoint %"class.gfx::RectF"* %246 to i64
  br i1 %247, label %253, label %249

249:                                              ; preds = %244
  %250 = bitcast %"class.gfx::RectF"* %245 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %250, i8* nonnull align 4 %62, i64 16, i1 false) #10
  %251 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %245, i64 1
  %252 = ptrtoint %"class.gfx::RectF"* %251 to i64
  store i64 %252, i64* %75, align 8
  br label %297

253:                                              ; preds = %244
  %254 = ptrtoint %"class.gfx::RectF"* %245 to i64
  %255 = load i64, i64* %76, align 8
  %256 = sub i64 %254, %255
  %257 = ashr exact i64 %256, 4
  %258 = add nsw i64 %257, 1
  %259 = icmp ugt i64 %258, 1152921504606846975
  br i1 %259, label %260, label %262

260:                                              ; preds = %253
  %261 = bitcast %"class.std::__1::vector.42"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %261) #11
  unreachable

262:                                              ; preds = %253
  %263 = sub i64 %248, %255
  %264 = ashr exact i64 %263, 4
  %265 = icmp ult i64 %264, 576460752303423487
  br i1 %265, label %266, label %274

266:                                              ; preds = %262
  %267 = ashr exact i64 %263, 3
  %268 = icmp ult i64 %267, %258
  %269 = select i1 %268, i64 %258, i64 %267
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %279, label %271

271:                                              ; preds = %266
  %272 = icmp ugt i64 %269, 1152921504606846975
  br i1 %272, label %273, label %274

273:                                              ; preds = %271
  call void @abort() #11
  unreachable

274:                                              ; preds = %271, %262
  %275 = phi i64 [ %269, %271 ], [ 1152921504606846975, %262 ]
  %276 = shl i64 %275, 4
  %277 = call i8* @_Znwm(i64 %276) #9
  %278 = bitcast i8* %277 to %"class.gfx::RectF"*
  br label %279

279:                                              ; preds = %274, %266
  %280 = phi i64 [ %275, %274 ], [ 0, %266 ]
  %281 = phi i8* [ %277, %274 ], [ null, %266 ]
  %282 = phi %"class.gfx::RectF"* [ %278, %274 ], [ null, %266 ]
  %283 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %282, i64 %257
  %284 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %282, i64 %280
  %285 = ptrtoint %"class.gfx::RectF"* %284 to i64
  %286 = bitcast %"class.gfx::RectF"* %283 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %286, i8* nonnull align 4 %62, i64 16, i1 false) #10
  %287 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %283, i64 1
  %288 = ptrtoint %"class.gfx::RectF"* %287 to i64
  %289 = ptrtoint %"class.gfx::RectF"* %282 to i64
  %290 = icmp sgt i64 %256, 0
  br i1 %290, label %291, label %293

291:                                              ; preds = %279
  %292 = inttoptr i64 %255 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %281, i8* align 4 %292, i64 %256, i1 false) #10
  br label %293

293:                                              ; preds = %291, %279
  store i64 %289, i64* %76, align 8
  store i64 %288, i64* %75, align 8
  store i64 %285, i64* %77, align 8
  %294 = icmp eq i64 %255, 0
  br i1 %294, label %297, label %295

295:                                              ; preds = %293
  %296 = inttoptr i64 %255 to i8*
  call void @_ZdlPv(i8* %296) #9
  br label %297

297:                                              ; preds = %249, %293, %295
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #10
  br label %419

298:                                              ; preds = %132
  br i1 %17, label %358, label %299

299:                                              ; preds = %298
  %300 = load %"class.gfx::RectF"*, %"class.gfx::RectF"** %19, align 8
  %301 = load %"class.gfx::RectF"*, %"class.gfx::RectF"** %20, align 8
  %302 = icmp eq %"class.gfx::RectF"* %300, %301
  br i1 %302, label %358, label %303

303:                                              ; preds = %299
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #10
  %304 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %133, i64 0, i32 3, i32 0, i32 0
  %305 = load i32, i32* %304, align 4
  %306 = sitofp i32 %305 to float
  %307 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %133, i64 0, i32 3, i32 0, i32 1
  %308 = load i32, i32* %307, align 4
  %309 = sitofp i32 %308 to float
  %310 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %133, i64 0, i32 3, i32 1, i32 0
  %311 = load i32, i32* %310, align 4
  %312 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %133, i64 0, i32 3, i32 1, i32 1
  %313 = load i32, i32* %312, align 4
  store float %306, float* %44, align 4
  store float %309, float* %45, align 4
  %314 = icmp sgt i32 %311, 0
  %315 = select i1 %314, i32 %311, i32 0
  %316 = sitofp i32 %315 to float
  store float %316, float* %46, align 4
  %317 = icmp sgt i32 %313, 0
  %318 = select i1 %317, i32 %313, i32 0
  %319 = sitofp i32 %318 to float
  store float %319, float* %47, align 4
  %320 = getelementptr inbounds %"class.viz::DrawQuad", %"class.viz::DrawQuad"* %133, i64 0, i32 6
  %321 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %320, align 8
  %322 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %321, i64 0, i32 0
  call void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"* %322, %"class.gfx::RectF"* nonnull %14) #10
  %323 = load %"class.viz::SharedQuadState"*, %"class.viz::SharedQuadState"** %320, align 8
  %324 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %323, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %325 = load i8, i8* %324, align 4, !range !12
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %344, label %327

327:                                              ; preds = %303
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #10
  %328 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %323, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %329 = load i32, i32* %328, align 4
  %330 = sitofp i32 %329 to float
  %331 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %323, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %332 = load i32, i32* %331, align 4
  %333 = sitofp i32 %332 to float
  %334 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %323, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %335 = load i32, i32* %334, align 4
  %336 = getelementptr inbounds %"class.viz::SharedQuadState", %"class.viz::SharedQuadState"* %323, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %337 = load i32, i32* %336, align 4
  store float %330, float* %49, align 4
  store float %333, float* %50, align 4
  %338 = icmp sgt i32 %335, 0
  %339 = select i1 %338, i32 %335, i32 0
  %340 = sitofp i32 %339 to float
  store float %340, float* %51, align 4
  %341 = icmp sgt i32 %337, 0
  %342 = select i1 %341, i32 %337, i32 0
  %343 = sitofp i32 %342 to float
  store float %343, float* %52, align 4
  call void @_ZN3gfx5RectF9IntersectERKS0_(%"class.gfx::RectF"* nonnull %14, %"class.gfx::RectF"* nonnull dereferenceable(16) %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #10
  br label %344

344:                                              ; preds = %303, %327
  %345 = load %"class.gfx::RectF"*, %"class.gfx::RectF"** %19, align 8
  %346 = load %"class.gfx::RectF"*, %"class.gfx::RectF"** %20, align 8
  %347 = icmp eq %"class.gfx::RectF"* %345, %346
  br i1 %347, label %356, label %348

348:                                              ; preds = %344, %348
  %349 = phi i8 [ %352, %348 ], [ 0, %344 ]
  %350 = phi %"class.gfx::RectF"* [ %353, %348 ], [ %345, %344 ]
  %351 = call zeroext i1 @_ZNK3gfx5RectF8ContainsERKS0_(%"class.gfx::RectF"* %350, %"class.gfx::RectF"* nonnull dereferenceable(16) %14) #10
  %352 = select i1 %351, i8 1, i8 %349
  %353 = getelementptr inbounds %"class.gfx::RectF", %"class.gfx::RectF"* %350, i64 1
  %354 = icmp eq %"class.gfx::RectF"* %353, %346
  %355 = or i1 %351, %354
  br i1 %355, label %356, label %348

356:                                              ; preds = %348, %344
  %357 = phi i8 [ 0, %344 ], [ %352, %348 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #10
  br label %358

358:                                              ; preds = %356, %299, %298
  %359 = phi i8 [ 0, %298 ], [ 0, %299 ], [ %357, %356 ]
  %360 = call %"class.viz::SurfaceDrawQuad"* @_ZN3viz15SurfaceDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"* %133) #10
  %361 = and i8 %359, 1
  %362 = icmp eq i8 %361, 0
  %363 = and i1 %362, %53
  br i1 %363, label %419, label %364

364:                                              ; preds = %358
  %365 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %360, i64 0, i32 2, i32 1, i32 0
  %366 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %55, align 8
  %367 = load i64, i64* %57, align 8
  %368 = ptrtoint %"class.viz::FrameSinkId"* %366 to i64
  %369 = sub i64 %367, %368
  %370 = icmp eq i64 %369, 0
  %371 = inttoptr i64 %367 to %"class.viz::FrameSinkId"*
  br i1 %370, label %400, label %372

372:                                              ; preds = %364
  %373 = ashr exact i64 %369, 3
  %374 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %365, i64 0, i32 0
  %375 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %360, i64 0, i32 2, i32 1, i32 0, i32 1
  %376 = load i32, i32* %374, align 4
  %377 = load i32, i32* %375, align 4
  br label %378

378:                                              ; preds = %396, %372
  %379 = phi %"class.viz::FrameSinkId"* [ %366, %372 ], [ %398, %396 ]
  %380 = phi i64 [ %373, %372 ], [ %397, %396 ]
  %381 = lshr i64 %380, 1
  %382 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %379, i64 %381
  %383 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %382, i64 0, i32 0
  %384 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %379, i64 %381, i32 1
  %385 = load i32, i32* %383, align 4
  %386 = icmp ult i32 %385, %376
  br i1 %386, label %392, label %387

387:                                              ; preds = %378
  %388 = icmp ult i32 %376, %385
  br i1 %388, label %396, label %389

389:                                              ; preds = %387
  %390 = load i32, i32* %384, align 4
  %391 = icmp ult i32 %390, %377
  br i1 %391, label %392, label %396

392:                                              ; preds = %389, %378
  %393 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %382, i64 1
  %394 = xor i64 %381, -1
  %395 = add i64 %380, %394
  br label %396

396:                                              ; preds = %392, %389, %387
  %397 = phi i64 [ %395, %392 ], [ %381, %389 ], [ %381, %387 ]
  %398 = phi %"class.viz::FrameSinkId"* [ %393, %392 ], [ %379, %389 ], [ %379, %387 ]
  %399 = icmp eq i64 %397, 0
  br i1 %399, label %400, label %378

400:                                              ; preds = %396, %364
  %401 = phi %"class.viz::FrameSinkId"* [ %366, %364 ], [ %398, %396 ]
  %402 = icmp eq %"class.viz::FrameSinkId"* %401, %371
  br i1 %402, label %417, label %403

403:                                              ; preds = %400
  %404 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %365, i64 0, i32 0
  %405 = getelementptr inbounds %"class.viz::SurfaceDrawQuad", %"class.viz::SurfaceDrawQuad"* %360, i64 0, i32 2, i32 1, i32 0, i32 1
  %406 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %401, i64 0, i32 0
  %407 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %401, i64 0, i32 1
  %408 = load i32, i32* %404, align 4
  %409 = load i32, i32* %406, align 4
  %410 = icmp ult i32 %408, %409
  br i1 %410, label %417, label %411

411:                                              ; preds = %403
  %412 = icmp ult i32 %409, %408
  br i1 %412, label %419, label %413

413:                                              ; preds = %411
  %414 = load i32, i32* %405, align 4
  %415 = load i32, i32* %407, align 4
  %416 = icmp ult i32 %414, %415
  br i1 %416, label %417, label %419

417:                                              ; preds = %413, %403, %400
  %418 = call %"class.viz::FrameSinkId"* @_ZNSt3__16vectorIN3viz11FrameSinkIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.35"* %58, %"class.viz::FrameSinkId"* %401, %"class.viz::FrameSinkId"* dereferenceable(8) %365) #10
  br label %419

419:                                              ; preds = %417, %413, %411, %178, %297, %190, %184, %132, %358
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #10
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull sret %6, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %27) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #10
  %420 = load i64, i64* %23, align 8
  %421 = add i64 %420, 1
  store i64 %421, i64* %23, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #10
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #10, !noalias !7
  call void @_ZNK2cc19ListContainerHelper4cendEv(%"class.cc::ListContainerHelper::ConstIterator"* nonnull sret %4, %"class.cc::ListContainerHelper"* %26) #10, !noalias !7
  call void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %33, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %34) #10
  %422 = load i64, i64* %36, align 8, !noalias !7
  store i64 %422, i64* %35, align 8, !alias.scope !7
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD1Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #10, !noalias !7
  %423 = call zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull %27, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* nonnull dereferenceable(24) %33) #10
  call void @_ZN2cc19ListContainerHelper13ConstIteratorD2Ev(%"class.cc::ListContainerHelper::ConstIterator"* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #10
  br i1 %423, label %132, label %80
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK2cc16FilterOperations15HasFilterOfTypeENS_15FilterOperation10FilterTypeE(%"class.cc::FilterOperations"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2cc19ListContainerHelper23PositionInCharAllocatorneERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"*, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper13ConstIteratorD2Ev(%"class.cc::ListContainerHelper::ConstIterator"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.viz::CompositorRenderPassDrawQuad"* @_ZN3viz28CompositorRenderPassDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #2

declare void @_ZN3gfx5RectF9IntersectERKS0_(%"class.gfx::RectF"*, %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK3gfx9Transform13TransformRectEPNS_5RectFE(%"class.gfx::Transform"*, %"class.gfx::RectF"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3gfx5RectF8ContainsERKS0_(%"class.gfx::RectF"*, %"class.gfx::RectF"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.viz::SurfaceDrawQuad"* @_ZN3viz15SurfaceDrawQuad12MaterialCastEPKNS_8DrawQuadE(%"class.viz::DrawQuad"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc15ThrottleDecider20HasThrottlingChangedEv(%"class.cc::ThrottleDecider"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %5 = bitcast %"class.viz::FrameSinkId"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.base::internal::flat_tree.34"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = getelementptr inbounds %"class.cc::ThrottleDecider", %"class.cc::ThrottleDecider"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %11 = bitcast %"class.viz::FrameSinkId"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::internal::flat_tree.34"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = icmp eq i64 %9, %15
  %17 = inttoptr i64 %8 to %"class.viz::FrameSinkId"*
  %18 = inttoptr i64 %6 to %"class.viz::FrameSinkId"*
  br i1 %16, label %19, label %41

19:                                               ; preds = %1
  %20 = icmp eq %"class.viz::FrameSinkId"* %17, %18
  br i1 %20, label %41, label %21

21:                                               ; preds = %19
  %22 = inttoptr i64 %14 to %"class.viz::FrameSinkId"*
  br label %23

23:                                               ; preds = %37, %21
  %24 = phi %"class.viz::FrameSinkId"* [ %39, %37 ], [ %22, %21 ]
  %25 = phi %"class.viz::FrameSinkId"* [ %38, %37 ], [ %17, %21 ]
  %26 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %24, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %31, label %41

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %25, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %24, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %37, label %41

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %25, i64 1
  %39 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %24, i64 1
  %40 = icmp eq %"class.viz::FrameSinkId"* %38, %18
  br i1 %40, label %41, label %23

41:                                               ; preds = %23, %31, %37, %1, %19
  %42 = phi i1 [ true, %1 ], [ false, %19 ], [ true, %31 ], [ true, %23 ], [ false, %37 ]
  ret i1 %42
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare { <2 x float>, <2 x float> } @_ZN3gfx13SkRectToRectFERK6SkRect(%struct.SkRect* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK2cc19ListContainerHelper6cbeginEv(%"class.cc::ListContainerHelper::ConstIterator"* sret, %"class.cc::ListContainerHelper"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc19ListContainerHelper13ConstIteratorD1Ev(%"class.cc::ListContainerHelper::ConstIterator"*) unnamed_addr #3

declare void @_ZN2cc19ListContainerHelper23PositionInCharAllocatorC2ERKS1_(%"struct.cc::ListContainerHelper::PositionInCharAllocator"*, %"struct.cc::ListContainerHelper::PositionInCharAllocator"* dereferenceable(24)) unnamed_addr #2

declare void @_ZNK2cc19ListContainerHelper4cendEv(%"class.cc::ListContainerHelper::ConstIterator"* sret, %"class.cc::ListContainerHelper"*) local_unnamed_addr #2

declare void @_ZN2cc19ListContainerHelper23PositionInCharAllocator9IncrementEv(%"struct.cc::ListContainerHelper::PositionInCharAllocator"* sret, %"struct.cc::ListContainerHelper::PositionInCharAllocator"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.viz::FrameSinkId"* @_ZNSt3__16vectorIN3viz11FrameSinkIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector.35"*, %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.viz::FrameSinkId"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.89", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %9, align 8
  %11 = icmp ult %"class.viz::FrameSinkId"* %8, %10
  %12 = ptrtoint %"class.viz::FrameSinkId"* %8 to i64
  %13 = ptrtoint %"class.viz::FrameSinkId"* %10 to i64
  br i1 %11, label %14, label %115

14:                                               ; preds = %3
  %15 = icmp eq %"class.viz::FrameSinkId"* %8, %1
  br i1 %15, label %16, label %26

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %18 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %21 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %20, align 4
  %23 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 1
  %24 = ptrtoint %"class.viz::FrameSinkId"* %23 to i64
  %25 = bitcast %"class.viz::FrameSinkId"** %7 to i64*
  store i64 %24, i64* %25, align 8
  br label %343

26:                                               ; preds = %14
  %27 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %2, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 1
  %32 = ptrtoint %"class.viz::FrameSinkId"* %31 to i64
  %33 = sub i64 %12, %32
  %34 = ashr exact i64 %33, 3
  %35 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 %34
  %36 = bitcast %"class.viz::FrameSinkId"** %7 to i64*
  %37 = icmp ult %"class.viz::FrameSinkId"* %35, %8
  br i1 %37, label %38, label %71

38:                                               ; preds = %26
  %39 = sub nsw i64 0, %34
  %40 = getelementptr %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %8, i64 %39, i32 0
  %41 = bitcast i32* %40 to i8*
  %42 = xor i64 %4, -1
  %43 = getelementptr i8, i8* %41, i64 %42
  %44 = ptrtoint i8* %43 to i64
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = and i64 %46, 3
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %63, label %49

49:                                               ; preds = %38, %49
  %50 = phi %"class.viz::FrameSinkId"* [ %60, %49 ], [ %8, %38 ]
  %51 = phi %"class.viz::FrameSinkId"* [ %59, %49 ], [ %35, %38 ]
  %52 = phi i64 [ %61, %49 ], [ %47, %38 ]
  %53 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %50, i64 0, i32 0
  %54 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %51, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  store i32 %55, i32* %53, align 4
  %56 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %50, i64 0, i32 1
  %57 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %51, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  store i32 %58, i32* %56, align 4
  %59 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %51, i64 1
  %60 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %50, i64 1
  %61 = add i64 %52, -1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %49, !llvm.loop !13

63:                                               ; preds = %49, %38
  %64 = phi %"class.viz::FrameSinkId"* [ %8, %38 ], [ %60, %49 ]
  %65 = phi %"class.viz::FrameSinkId"* [ %35, %38 ], [ %59, %49 ]
  %66 = phi %"class.viz::FrameSinkId"* [ undef, %38 ], [ %60, %49 ]
  %67 = icmp ult i8* %43, inttoptr (i64 24 to i8*)
  br i1 %67, label %68, label %79

68:                                               ; preds = %79, %63
  %69 = phi %"class.viz::FrameSinkId"* [ %66, %63 ], [ %107, %79 ]
  %70 = ptrtoint %"class.viz::FrameSinkId"* %69 to i64
  br label %71

71:                                               ; preds = %68, %26
  %72 = phi i64 [ %70, %68 ], [ %12, %26 ]
  store i64 %72, i64* %36, align 8
  %73 = icmp eq i64 %33, 0
  br i1 %73, label %109, label %74

74:                                               ; preds = %71
  %75 = sub nsw i64 0, %34
  %76 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %8, i64 %75
  %77 = bitcast %"class.viz::FrameSinkId"* %76 to i8*
  %78 = bitcast %"class.viz::FrameSinkId"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 %33, i1 false) #10
  br label %109

79:                                               ; preds = %63, %79
  %80 = phi %"class.viz::FrameSinkId"* [ %107, %79 ], [ %64, %63 ]
  %81 = phi %"class.viz::FrameSinkId"* [ %106, %79 ], [ %65, %63 ]
  %82 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 0, i32 0
  %83 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  store i32 %84, i32* %82, align 4
  %85 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 0, i32 1
  %86 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 1, i32 0
  %89 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 1, i32 0
  %90 = load i32, i32* %89, align 4
  store i32 %90, i32* %88, align 4
  %91 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 1, i32 1
  %92 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 1, i32 1
  %93 = load i32, i32* %92, align 4
  store i32 %93, i32* %91, align 4
  %94 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 2, i32 0
  %95 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 2, i32 0
  %96 = load i32, i32* %95, align 4
  store i32 %96, i32* %94, align 4
  %97 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 2, i32 1
  %98 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 2, i32 1
  %99 = load i32, i32* %98, align 4
  store i32 %99, i32* %97, align 4
  %100 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 3, i32 0
  %101 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 3, i32 0
  %102 = load i32, i32* %101, align 4
  store i32 %102, i32* %100, align 4
  %103 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 3, i32 1
  %104 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 3, i32 1
  %105 = load i32, i32* %104, align 4
  store i32 %105, i32* %103, align 4
  %106 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %81, i64 4
  %107 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %80, i64 4
  %108 = icmp ult %"class.viz::FrameSinkId"* %106, %8
  br i1 %108, label %79, label %68

109:                                              ; preds = %71, %74
  %110 = bitcast %"class.viz::FrameSinkId"* %1 to i64*
  %111 = zext i32 %30 to i64
  %112 = shl nuw i64 %111, 32
  %113 = zext i32 %28 to i64
  %114 = or i64 %112, %113
  store i64 %114, i64* %110, align 4
  br label %343

115:                                              ; preds = %3
  %116 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %0, i64 0, i32 0, i32 2
  %117 = bitcast %"struct.std::__1::__split_buffer.89"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %117) #10
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.89", %"struct.std::__1::__split_buffer.89"* %5, i64 0, i32 0
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.89", %"struct.std::__1::__split_buffer.89"* %5, i64 0, i32 1
  %120 = getelementptr inbounds %"struct.std::__1::__split_buffer.89", %"struct.std::__1::__split_buffer.89"* %5, i64 0, i32 2
  %121 = getelementptr inbounds %"struct.std::__1::__split_buffer.89", %"struct.std::__1::__split_buffer.89"* %5, i64 0, i32 3, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::__1::__split_buffer.89", %"struct.std::__1::__split_buffer.89"* %5, i64 0, i32 3, i32 1, i32 0
  %123 = bitcast %"class.viz::FrameSinkId"** %7 to i64*
  %124 = bitcast %"class.std::__1::vector.35"* %0 to i64*
  %125 = bitcast %"struct.std::__1::__split_buffer.89"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 40, i1 false)
  %126 = load i64, i64* %124, align 8
  %127 = sub i64 %12, %126
  %128 = ashr exact i64 %127, 3
  %129 = add nsw i64 %128, 1
  %130 = icmp ugt i64 %129, 2305843009213693951
  br i1 %130, label %131, label %133

131:                                              ; preds = %115
  %132 = bitcast %"class.std::__1::vector.35"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %132) #11
  unreachable

133:                                              ; preds = %115
  %134 = bitcast %"class.viz::FrameSinkId"** %9 to i64*
  %135 = sub i64 %13, %126
  %136 = ashr exact i64 %135, 3
  %137 = icmp ult i64 %136, 1152921504606846975
  br i1 %137, label %142, label %138

138:                                              ; preds = %133
  %139 = sub i64 %4, %126
  %140 = ashr exact i64 %139, 3
  store %"class.viz::FrameSinkId"* null, %"class.viz::FrameSinkId"** %121, align 8
  %141 = bitcast %"class.std::__1::allocator.40"** %122 to %"class.std::__1::__compressed_pair.37"**
  store %"class.std::__1::__compressed_pair.37"* %116, %"class.std::__1::__compressed_pair.37"** %141, align 8
  br label %153

142:                                              ; preds = %133
  %143 = ashr exact i64 %135, 2
  %144 = icmp ult i64 %143, %129
  %145 = select i1 %144, i64 %129, i64 %143
  %146 = sub i64 %4, %126
  %147 = ashr exact i64 %146, 3
  store %"class.viz::FrameSinkId"* null, %"class.viz::FrameSinkId"** %121, align 8
  %148 = bitcast %"class.std::__1::allocator.40"** %122 to %"class.std::__1::__compressed_pair.37"**
  store %"class.std::__1::__compressed_pair.37"* %116, %"class.std::__1::__compressed_pair.37"** %148, align 8
  %149 = icmp eq i64 %145, 0
  br i1 %149, label %159, label %150

150:                                              ; preds = %142
  %151 = icmp ugt i64 %145, 2305843009213693951
  br i1 %151, label %152, label %153

152:                                              ; preds = %150
  tail call void @abort() #11
  unreachable

153:                                              ; preds = %138, %150
  %154 = phi i64 [ 2305843009213693951, %138 ], [ %145, %150 ]
  %155 = phi i64 [ %140, %138 ], [ %147, %150 ]
  %156 = shl i64 %154, 3
  %157 = tail call i8* @_Znwm(i64 %156) #9
  %158 = bitcast i8* %157 to %"class.viz::FrameSinkId"*
  br label %159

159:                                              ; preds = %142, %153
  %160 = phi i64 [ %155, %153 ], [ %147, %142 ]
  %161 = phi i64 [ %154, %153 ], [ 0, %142 ]
  %162 = phi %"class.viz::FrameSinkId"* [ %158, %153 ], [ null, %142 ]
  store %"class.viz::FrameSinkId"* %162, %"class.viz::FrameSinkId"** %118, align 8
  %163 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %162, i64 %160
  store %"class.viz::FrameSinkId"* %163, %"class.viz::FrameSinkId"** %120, align 8
  store %"class.viz::FrameSinkId"* %163, %"class.viz::FrameSinkId"** %119, align 8
  %164 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %162, i64 %161
  store %"class.viz::FrameSinkId"* %164, %"class.viz::FrameSinkId"** %121, align 8
  call void @_ZNSt3__114__split_bufferIN3viz11FrameSinkIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.89"* nonnull %5, %"class.viz::FrameSinkId"* dereferenceable(8) %2)
  %165 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %166 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %6, align 8
  %167 = icmp eq %"class.viz::FrameSinkId"* %166, %1
  br i1 %167, label %234, label %168

168:                                              ; preds = %159
  %169 = ptrtoint %"class.viz::FrameSinkId"* %166 to i64
  %170 = getelementptr %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 -1, i32 0
  %171 = ptrtoint i32* %170 to i64
  %172 = sub i64 %171, %169
  %173 = lshr i64 %172, 3
  %174 = add nuw nsw i64 %173, 1
  %175 = and i64 %174, 3
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %192, label %177

177:                                              ; preds = %168, %177
  %178 = phi %"class.viz::FrameSinkId"* [ %189, %177 ], [ %165, %168 ]
  %179 = phi %"class.viz::FrameSinkId"* [ %181, %177 ], [ %1, %168 ]
  %180 = phi i64 [ %190, %177 ], [ %175, %168 ]
  %181 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %179, i64 -1
  %182 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %178, i64 -1, i32 0
  %183 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %181, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  store i32 %184, i32* %182, align 4
  %185 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %178, i64 -1, i32 1
  %186 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %179, i64 -1, i32 1
  %187 = load i32, i32* %186, align 4
  store i32 %187, i32* %185, align 4
  %188 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %189 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %188, i64 -1
  store %"class.viz::FrameSinkId"* %189, %"class.viz::FrameSinkId"** %119, align 8
  %190 = add i64 %180, -1
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %177, !llvm.loop !15

192:                                              ; preds = %177, %168
  %193 = phi %"class.viz::FrameSinkId"* [ undef, %168 ], [ %189, %177 ]
  %194 = phi %"class.viz::FrameSinkId"* [ %165, %168 ], [ %189, %177 ]
  %195 = phi %"class.viz::FrameSinkId"* [ %1, %168 ], [ %181, %177 ]
  %196 = icmp ult i64 %172, 24
  br i1 %196, label %234, label %197

197:                                              ; preds = %192, %197
  %198 = phi %"class.viz::FrameSinkId"* [ %232, %197 ], [ %194, %192 ]
  %199 = phi %"class.viz::FrameSinkId"* [ %224, %197 ], [ %195, %192 ]
  %200 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %198, i64 -1, i32 0
  %201 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -1, i32 0
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %200, align 4
  %203 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %198, i64 -1, i32 1
  %204 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -1, i32 1
  %205 = load i32, i32* %204, align 4
  store i32 %205, i32* %203, align 4
  %206 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %207 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %206, i64 -1
  store %"class.viz::FrameSinkId"* %207, %"class.viz::FrameSinkId"** %119, align 8
  %208 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %206, i64 -2, i32 0
  %209 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -2, i32 0
  %210 = load i32, i32* %209, align 4
  store i32 %210, i32* %208, align 4
  %211 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %206, i64 -2, i32 1
  %212 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -2, i32 1
  %213 = load i32, i32* %212, align 4
  store i32 %213, i32* %211, align 4
  %214 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %215 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %214, i64 -1
  store %"class.viz::FrameSinkId"* %215, %"class.viz::FrameSinkId"** %119, align 8
  %216 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %214, i64 -2, i32 0
  %217 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -3, i32 0
  %218 = load i32, i32* %217, align 4
  store i32 %218, i32* %216, align 4
  %219 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %214, i64 -2, i32 1
  %220 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -3, i32 1
  %221 = load i32, i32* %220, align 4
  store i32 %221, i32* %219, align 4
  %222 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %223 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %222, i64 -1
  store %"class.viz::FrameSinkId"* %223, %"class.viz::FrameSinkId"** %119, align 8
  %224 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -4
  %225 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %222, i64 -2, i32 0
  %226 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %224, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  store i32 %227, i32* %225, align 4
  %228 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %222, i64 -2, i32 1
  %229 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %199, i64 -4, i32 1
  %230 = load i32, i32* %229, align 4
  store i32 %230, i32* %228, align 4
  %231 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %119, align 8
  %232 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %231, i64 -1
  store %"class.viz::FrameSinkId"* %232, %"class.viz::FrameSinkId"** %119, align 8
  %233 = icmp eq %"class.viz::FrameSinkId"* %224, %166
  br i1 %233, label %234, label %197

234:                                              ; preds = %192, %197, %159
  %235 = phi %"class.viz::FrameSinkId"* [ %165, %159 ], [ %193, %192 ], [ %232, %197 ]
  %236 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %7, align 8
  %237 = icmp eq %"class.viz::FrameSinkId"* %236, %1
  br i1 %237, label %238, label %244

238:                                              ; preds = %234
  %239 = ptrtoint %"class.viz::FrameSinkId"* %236 to i64
  %240 = ptrtoint %"class.viz::FrameSinkId"* %235 to i64
  %241 = bitcast %"class.viz::FrameSinkId"** %119 to i64*
  %242 = bitcast %"class.viz::FrameSinkId"** %120 to i64*
  %243 = load i64, i64* %242, align 8
  br label %317

244:                                              ; preds = %234
  %245 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %246 = getelementptr %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %236, i64 -1, i32 0
  %247 = ptrtoint i32* %246 to i64
  %248 = sub i64 %247, %4
  %249 = lshr i64 %248, 3
  %250 = add nuw nsw i64 %249, 1
  %251 = and i64 %250, 3
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %268, label %253

253:                                              ; preds = %244, %253
  %254 = phi %"class.viz::FrameSinkId"* [ %265, %253 ], [ %245, %244 ]
  %255 = phi %"class.viz::FrameSinkId"* [ %263, %253 ], [ %1, %244 ]
  %256 = phi i64 [ %266, %253 ], [ %251, %244 ]
  %257 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %254, i64 0, i32 0
  %258 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %255, i64 0, i32 0
  %259 = load i32, i32* %258, align 4
  store i32 %259, i32* %257, align 4
  %260 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %254, i64 0, i32 1
  %261 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %255, i64 0, i32 1
  %262 = load i32, i32* %261, align 4
  store i32 %262, i32* %260, align 4
  %263 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %255, i64 1
  %264 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %265 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %264, i64 1
  store %"class.viz::FrameSinkId"* %265, %"class.viz::FrameSinkId"** %120, align 8
  %266 = add i64 %256, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %253, !llvm.loop !16

268:                                              ; preds = %253, %244
  %269 = phi %"class.viz::FrameSinkId"* [ undef, %244 ], [ %265, %253 ]
  %270 = phi %"class.viz::FrameSinkId"* [ %245, %244 ], [ %265, %253 ]
  %271 = phi %"class.viz::FrameSinkId"* [ %1, %244 ], [ %263, %253 ]
  %272 = icmp ult i64 %248, 24
  br i1 %272, label %310, label %273

273:                                              ; preds = %268, %273
  %274 = phi %"class.viz::FrameSinkId"* [ %308, %273 ], [ %270, %268 ]
  %275 = phi %"class.viz::FrameSinkId"* [ %306, %273 ], [ %271, %268 ]
  %276 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %274, i64 0, i32 0
  %277 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  store i32 %278, i32* %276, align 4
  %279 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %274, i64 0, i32 1
  %280 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 0, i32 1
  %281 = load i32, i32* %280, align 4
  store i32 %281, i32* %279, align 4
  %282 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %283 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %282, i64 1
  store %"class.viz::FrameSinkId"* %283, %"class.viz::FrameSinkId"** %120, align 8
  %284 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %283, i64 0, i32 0
  %285 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 1, i32 0
  %286 = load i32, i32* %285, align 4
  store i32 %286, i32* %284, align 4
  %287 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %282, i64 1, i32 1
  %288 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 1, i32 1
  %289 = load i32, i32* %288, align 4
  store i32 %289, i32* %287, align 4
  %290 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %291 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %290, i64 1
  store %"class.viz::FrameSinkId"* %291, %"class.viz::FrameSinkId"** %120, align 8
  %292 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %291, i64 0, i32 0
  %293 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 2, i32 0
  %294 = load i32, i32* %293, align 4
  store i32 %294, i32* %292, align 4
  %295 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %290, i64 1, i32 1
  %296 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 2, i32 1
  %297 = load i32, i32* %296, align 4
  store i32 %297, i32* %295, align 4
  %298 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %299 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %298, i64 1
  store %"class.viz::FrameSinkId"* %299, %"class.viz::FrameSinkId"** %120, align 8
  %300 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %299, i64 0, i32 0
  %301 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 3, i32 0
  %302 = load i32, i32* %301, align 4
  store i32 %302, i32* %300, align 4
  %303 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %298, i64 1, i32 1
  %304 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 3, i32 1
  %305 = load i32, i32* %304, align 4
  store i32 %305, i32* %303, align 4
  %306 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %275, i64 4
  %307 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %120, align 8
  %308 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %307, i64 1
  store %"class.viz::FrameSinkId"* %308, %"class.viz::FrameSinkId"** %120, align 8
  %309 = icmp eq %"class.viz::FrameSinkId"* %306, %236
  br i1 %309, label %310, label %273

310:                                              ; preds = %273, %268
  %311 = phi %"class.viz::FrameSinkId"* [ %269, %268 ], [ %308, %273 ]
  %312 = ptrtoint %"class.viz::FrameSinkId"* %311 to i64
  %313 = bitcast %"class.viz::FrameSinkId"** %119 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = load i64, i64* %123, align 8
  %316 = bitcast %"class.viz::FrameSinkId"** %120 to i64*
  br label %317

317:                                              ; preds = %238, %310
  %318 = phi i64* [ %242, %238 ], [ %316, %310 ]
  %319 = phi i64 [ %243, %238 ], [ %312, %310 ]
  %320 = phi i64 [ %239, %238 ], [ %315, %310 ]
  %321 = phi i64* [ %241, %238 ], [ %313, %310 ]
  %322 = phi i64 [ %240, %238 ], [ %314, %310 ]
  %323 = load i64, i64* %124, align 8
  store i64 %322, i64* %124, align 8
  store i64 %323, i64* %321, align 8
  store i64 %319, i64* %123, align 8
  store i64 %320, i64* %318, align 8
  %324 = load i64, i64* %134, align 8
  %325 = bitcast %"class.viz::FrameSinkId"** %121 to i64*
  %326 = load i64, i64* %325, align 8
  store i64 %326, i64* %134, align 8
  store i64 %324, i64* %325, align 8
  %327 = bitcast %"struct.std::__1::__split_buffer.89"* %5 to i64*
  store i64 %323, i64* %327, align 8
  %328 = inttoptr i64 %323 to %"class.viz::FrameSinkId"*
  %329 = inttoptr i64 %320 to %"class.viz::FrameSinkId"*
  %330 = icmp eq %"class.viz::FrameSinkId"* %329, %328
  br i1 %330, label %338, label %331

331:                                              ; preds = %317
  %332 = getelementptr %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %329, i64 -1, i32 0
  %333 = ptrtoint i32* %332 to i64
  %334 = sub i64 %333, %323
  %335 = lshr i64 %334, 3
  %336 = xor i64 %335, -1
  %337 = getelementptr %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %329, i64 %336
  store %"class.viz::FrameSinkId"* %337, %"class.viz::FrameSinkId"** %120, align 8
  br label %338

338:                                              ; preds = %331, %317
  %339 = icmp eq i64 %323, 0
  br i1 %339, label %342, label %340

340:                                              ; preds = %338
  %341 = inttoptr i64 %323 to i8*
  call void @_ZdlPv(i8* %341) #9
  br label %342

342:                                              ; preds = %338, %340
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %117) #10
  br label %343

343:                                              ; preds = %16, %109, %342
  %344 = phi %"class.viz::FrameSinkId"* [ %1, %16 ], [ %1, %109 ], [ %165, %342 ]
  ret %"class.viz::FrameSinkId"* %344
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN3viz11FrameSinkIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.89"*, %"class.viz::FrameSinkId"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.89", %"struct.std::__1::__split_buffer.89"* %0, i64 0, i32 2
  %4 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.89", %"struct.std::__1::__split_buffer.89"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %5, align 8
  %7 = icmp eq %"class.viz::FrameSinkId"* %4, %6
  %8 = ptrtoint %"class.viz::FrameSinkId"* %6 to i64
  br i1 %7, label %9, label %127

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.89", %"struct.std::__1::__split_buffer.89"* %0, i64 0, i32 1
  %11 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.89", %"struct.std::__1::__split_buffer.89"* %0, i64 0, i32 0
  %13 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %12, align 8
  %14 = icmp ugt %"class.viz::FrameSinkId"* %11, %13
  %15 = ptrtoint %"class.viz::FrameSinkId"* %13 to i64
  br i1 %14, label %16, label %35

16:                                               ; preds = %9
  %17 = ptrtoint %"class.viz::FrameSinkId"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %11, i64 %21
  %23 = ptrtoint %"class.viz::FrameSinkId"* %4 to i64
  %24 = sub i64 %23, %17
  %25 = ashr exact i64 %24, 3
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %16
  %28 = bitcast %"class.viz::FrameSinkId"* %22 to i8*
  %29 = bitcast %"class.viz::FrameSinkId"* %11 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %29, i64 %24, i1 false) #10
  %30 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %10, align 8
  br label %31

31:                                               ; preds = %16, %27
  %32 = phi %"class.viz::FrameSinkId"* [ %11, %16 ], [ %30, %27 ]
  %33 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %22, i64 %25
  store %"class.viz::FrameSinkId"* %33, %"class.viz::FrameSinkId"** %3, align 8
  %34 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %32, i64 %21
  store %"class.viz::FrameSinkId"* %34, %"class.viz::FrameSinkId"** %10, align 8
  br label %127

35:                                               ; preds = %9
  %36 = bitcast %"class.viz::FrameSinkId"** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.89"* %0 to i64*
  %38 = sub i64 %8, %15
  %39 = ashr exact i64 %38, 2
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #11
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 3
  %47 = tail call i8* @_Znwm(i64 %46) #9
  %48 = bitcast i8* %47 to %"class.viz::FrameSinkId"*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %48, i64 %45
  %51 = ptrtoint %"class.viz::FrameSinkId"* %50 to i64
  %52 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %48, i64 %41
  %53 = ptrtoint %"class.viz::FrameSinkId"* %52 to i64
  %54 = ptrtoint %"class.viz::FrameSinkId"* %11 to i64
  %55 = ptrtoint %"class.viz::FrameSinkId"* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %117, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -8
  %62 = lshr i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %80, label %66

66:                                               ; preds = %60, %66
  %67 = phi %"class.viz::FrameSinkId"* [ %76, %66 ], [ %50, %60 ]
  %68 = phi %"class.viz::FrameSinkId"* [ %77, %66 ], [ %11, %60 ]
  %69 = phi i64 [ %78, %66 ], [ %64, %60 ]
  %70 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %67, i64 0, i32 0
  %71 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %68, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %70, align 4
  %73 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %67, i64 0, i32 1
  %74 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %68, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  store i32 %75, i32* %73, align 4
  %76 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %67, i64 1
  %77 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %68, i64 1
  %78 = add i64 %69, -1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %66, !llvm.loop !17

80:                                               ; preds = %66, %60
  %81 = phi %"class.viz::FrameSinkId"* [ %50, %60 ], [ %76, %66 ]
  %82 = phi %"class.viz::FrameSinkId"* [ %11, %60 ], [ %77, %66 ]
  %83 = icmp ult i64 %61, 24
  br i1 %83, label %114, label %84

84:                                               ; preds = %80, %84
  %85 = phi %"class.viz::FrameSinkId"* [ %111, %84 ], [ %81, %80 ]
  %86 = phi %"class.viz::FrameSinkId"* [ %112, %84 ], [ %82, %80 ]
  %87 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 0, i32 0
  %88 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  store i32 %89, i32* %87, align 4
  %90 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 0, i32 1
  %91 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  store i32 %92, i32* %90, align 4
  %93 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 1, i32 0
  %94 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 1, i32 0
  %95 = load i32, i32* %94, align 4
  store i32 %95, i32* %93, align 4
  %96 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 1, i32 1
  %97 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 1, i32 1
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %96, align 4
  %99 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 2, i32 0
  %100 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 2, i32 0
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %99, align 4
  %102 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 2, i32 1
  %103 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 2, i32 1
  %104 = load i32, i32* %103, align 4
  store i32 %104, i32* %102, align 4
  %105 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 3, i32 0
  %106 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 3, i32 0
  %107 = load i32, i32* %106, align 4
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 3, i32 1
  %109 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 3, i32 1
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %85, i64 4
  %112 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %86, i64 4
  %113 = icmp eq %"class.viz::FrameSinkId"* %58, %111
  br i1 %113, label %114, label %84

114:                                              ; preds = %84, %80
  %115 = ptrtoint %"class.viz::FrameSinkId"* %58 to i64
  %116 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %12, align 8
  br label %117

117:                                              ; preds = %44, %114
  %118 = phi %"class.viz::FrameSinkId"* [ %116, %114 ], [ %13, %44 ]
  %119 = phi i64 [ %115, %114 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %120 = bitcast %"class.viz::FrameSinkId"** %10 to i64*
  store i64 %51, i64* %120, align 8
  %121 = bitcast %"class.viz::FrameSinkId"** %3 to i64*
  store i64 %119, i64* %121, align 8
  store i64 %53, i64* %36, align 8
  %122 = icmp eq %"class.viz::FrameSinkId"* %118, null
  %123 = inttoptr i64 %119 to %"class.viz::FrameSinkId"*
  br i1 %122, label %127, label %124

124:                                              ; preds = %117
  %125 = bitcast %"class.viz::FrameSinkId"* %118 to i8*
  tail call void @_ZdlPv(i8* %125) #9
  %126 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %3, align 8
  br label %127

127:                                              ; preds = %124, %117, %31, %2
  %128 = phi %"class.viz::FrameSinkId"* [ %126, %124 ], [ %123, %117 ], [ %33, %31 ], [ %4, %2 ]
  %129 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %128, i64 0, i32 0
  %130 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  store i32 %131, i32* %129, align 4
  %132 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %128, i64 0, i32 1
  %133 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %1, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  store i32 %134, i32* %132, align 4
  %135 = load %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"** %3, align 8
  %136 = getelementptr inbounds %"class.viz::FrameSinkId", %"class.viz::FrameSinkId"* %135, i64 1
  store %"class.viz::FrameSinkId"* %136, %"class.viz::FrameSinkId"** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEEPKS5_EENS_9allocatorIS9_EEE7emplaceIJS9_EEENS_11__wrap_iterIPS9_EENSE_IPKS9_EEDpOT_(%"class.std::__1::vector"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.93", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %9, align 8
  %11 = icmp ult %"struct.std::__1::pair"* %8, %10
  %12 = ptrtoint %"struct.std::__1::pair"* %8 to i64
  %13 = ptrtoint %"struct.std::__1::pair"* %10 to i64
  br i1 %11, label %14, label %150

14:                                               ; preds = %3
  %15 = icmp eq %"struct.std::__1::pair"* %8, %1
  br i1 %15, label %16, label %22

16:                                               ; preds = %14
  %17 = bitcast %"struct.std::__1::pair"* %1 to i8*
  %18 = bitcast %"struct.std::__1::pair"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #10
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %20 = ptrtoint %"struct.std::__1::pair"* %19 to i64
  %21 = bitcast %"struct.std::__1::pair"** %7 to i64*
  store i64 %20, i64* %21, align 8
  br label %301

22:                                               ; preds = %14
  %23 = bitcast %"struct.std::__1::pair"* %2 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %26 = ptrtoint %"struct.std::__1::pair"* %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 4
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %28
  %30 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %31 = icmp ult %"struct.std::__1::pair"* %29, %8
  br i1 %31, label %32, label %61

32:                                               ; preds = %22
  %33 = sub nsw i64 0, %28
  %34 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %8, i64 %33, i32 0, i32 0, i32 0
  %35 = bitcast i64* %34 to i8*
  %36 = xor i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = lshr i64 %38, 4
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 3
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %53, label %43

43:                                               ; preds = %32, %43
  %44 = phi %"struct.std::__1::pair"* [ %50, %43 ], [ %8, %32 ]
  %45 = phi %"struct.std::__1::pair"* [ %49, %43 ], [ %29, %32 ]
  %46 = phi i64 [ %51, %43 ], [ %41, %32 ]
  %47 = bitcast %"struct.std::__1::pair"* %44 to i8*
  %48 = bitcast %"struct.std::__1::pair"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 16, i1 false) #10
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 1
  %50 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 1
  %51 = add i64 %46, -1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %43, !llvm.loop !18

53:                                               ; preds = %43, %32
  %54 = phi %"struct.std::__1::pair"* [ %8, %32 ], [ %50, %43 ]
  %55 = phi %"struct.std::__1::pair"* [ %29, %32 ], [ %49, %43 ]
  %56 = phi %"struct.std::__1::pair"* [ undef, %32 ], [ %50, %43 ]
  %57 = icmp ult i8* %37, inttoptr (i64 48 to i8*)
  br i1 %57, label %58, label %128

58:                                               ; preds = %128, %53
  %59 = phi %"struct.std::__1::pair"* [ %56, %53 ], [ %146, %128 ]
  %60 = ptrtoint %"struct.std::__1::pair"* %59 to i64
  br label %61

61:                                               ; preds = %58, %22
  %62 = phi i64 [ %60, %58 ], [ %12, %22 ]
  store i64 %62, i64* %30, align 8
  %63 = icmp eq i64 %27, 0
  br i1 %63, label %148, label %64

64:                                               ; preds = %61
  %65 = add i64 %27, -16
  %66 = lshr i64 %65, 4
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %86, label %70

70:                                               ; preds = %64, %70
  %71 = phi %"struct.std::__1::pair"* [ %75, %70 ], [ %8, %64 ]
  %72 = phi %"struct.std::__1::pair"* [ %74, %70 ], [ %29, %64 ]
  %73 = phi i64 [ %84, %70 ], [ %68, %64 ]
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 -1
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 -1
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %74, i64 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %75, i64 0, i32 0, i32 0, i32 0
  %78 = load i64, i64* %76, align 8
  store i64 %78, i64* %77, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 -1, i32 1
  %80 = bitcast %"class.viz::CompositorRenderPass"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 -1, i32 1
  %83 = bitcast %"class.viz::CompositorRenderPass"** %82 to i64*
  store i64 %81, i64* %83, align 8
  %84 = add i64 %73, -1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %70, !llvm.loop !19

86:                                               ; preds = %70, %64
  %87 = phi %"struct.std::__1::pair"* [ %8, %64 ], [ %75, %70 ]
  %88 = phi %"struct.std::__1::pair"* [ %29, %64 ], [ %74, %70 ]
  %89 = icmp ult i64 %65, 48
  br i1 %89, label %148, label %90

90:                                               ; preds = %86, %90
  %91 = phi %"struct.std::__1::pair"* [ %118, %90 ], [ %87, %86 ]
  %92 = phi %"struct.std::__1::pair"* [ %117, %90 ], [ %88, %86 ]
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -1, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -1, i32 0, i32 0, i32 0
  %95 = load i64, i64* %93, align 8
  store i64 %95, i64* %94, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -1, i32 1
  %97 = bitcast %"class.viz::CompositorRenderPass"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -1, i32 1
  %100 = bitcast %"class.viz::CompositorRenderPass"** %99 to i64*
  store i64 %98, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -2, i32 0, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -2, i32 0, i32 0, i32 0
  %103 = load i64, i64* %101, align 8
  store i64 %103, i64* %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -2, i32 1
  %105 = bitcast %"class.viz::CompositorRenderPass"** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -2, i32 1
  %108 = bitcast %"class.viz::CompositorRenderPass"** %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -3, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -3, i32 0, i32 0, i32 0
  %111 = load i64, i64* %109, align 8
  store i64 %111, i64* %110, align 8
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -3, i32 1
  %113 = bitcast %"class.viz::CompositorRenderPass"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -3, i32 1
  %116 = bitcast %"class.viz::CompositorRenderPass"** %115 to i64*
  store i64 %114, i64* %116, align 8
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -4
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -4
  %119 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %117, i64 0, i32 0, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 0, i32 0, i32 0, i32 0
  %121 = load i64, i64* %119, align 8
  store i64 %121, i64* %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 -4, i32 1
  %123 = bitcast %"class.viz::CompositorRenderPass"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %91, i64 -4, i32 1
  %126 = bitcast %"class.viz::CompositorRenderPass"** %125 to i64*
  store i64 %124, i64* %126, align 8
  %127 = icmp eq %"struct.std::__1::pair"* %117, %1
  br i1 %127, label %148, label %90

128:                                              ; preds = %53, %128
  %129 = phi %"struct.std::__1::pair"* [ %146, %128 ], [ %54, %53 ]
  %130 = phi %"struct.std::__1::pair"* [ %145, %128 ], [ %55, %53 ]
  %131 = bitcast %"struct.std::__1::pair"* %129 to i8*
  %132 = bitcast %"struct.std::__1::pair"* %130 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* align 8 %132, i64 16, i1 false) #10
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %130, i64 1
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %129, i64 1
  %135 = bitcast %"struct.std::__1::pair"* %134 to i8*
  %136 = bitcast %"struct.std::__1::pair"* %133 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 8 %136, i64 16, i1 false) #10
  %137 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %130, i64 2
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %129, i64 2
  %139 = bitcast %"struct.std::__1::pair"* %138 to i8*
  %140 = bitcast %"struct.std::__1::pair"* %137 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %139, i8* align 8 %140, i64 16, i1 false) #10
  %141 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %130, i64 3
  %142 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %129, i64 3
  %143 = bitcast %"struct.std::__1::pair"* %142 to i8*
  %144 = bitcast %"struct.std::__1::pair"* %141 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %143, i8* align 8 %144, i64 16, i1 false) #10
  %145 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %130, i64 4
  %146 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %129, i64 4
  %147 = icmp ult %"struct.std::__1::pair"* %145, %8
  br i1 %147, label %128, label %58

148:                                              ; preds = %86, %90, %61
  %149 = bitcast %"struct.std::__1::pair"* %1 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %149, align 8
  br label %301

150:                                              ; preds = %3
  %151 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %152 = bitcast %"struct.std::__1::__split_buffer.93"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %152) #10
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %5, i64 0, i32 0
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %5, i64 0, i32 1
  %155 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %5, i64 0, i32 2
  %156 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %5, i64 0, i32 3, i32 0, i32 0
  %157 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %5, i64 0, i32 3, i32 1, i32 0
  %158 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %159 = bitcast %"class.std::__1::vector"* %0 to i64*
  %160 = bitcast %"struct.std::__1::__split_buffer.93"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 40, i1 false)
  %161 = load i64, i64* %159, align 8
  %162 = sub i64 %12, %161
  %163 = ashr exact i64 %162, 4
  %164 = add nsw i64 %163, 1
  %165 = icmp ugt i64 %164, 1152921504606846975
  br i1 %165, label %166, label %168

166:                                              ; preds = %150
  %167 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %167) #11
  unreachable

168:                                              ; preds = %150
  %169 = bitcast %"struct.std::__1::pair"** %9 to i64*
  %170 = sub i64 %13, %161
  %171 = ashr exact i64 %170, 4
  %172 = icmp ult i64 %171, 576460752303423487
  br i1 %172, label %177, label %173

173:                                              ; preds = %168
  %174 = sub i64 %4, %161
  %175 = ashr exact i64 %174, 4
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %156, align 8
  %176 = bitcast %"class.std::__1::allocator.32"** %157 to %"class.std::__1::__compressed_pair.29"**
  store %"class.std::__1::__compressed_pair.29"* %151, %"class.std::__1::__compressed_pair.29"** %176, align 8
  br label %188

177:                                              ; preds = %168
  %178 = ashr exact i64 %170, 3
  %179 = icmp ult i64 %178, %164
  %180 = select i1 %179, i64 %164, i64 %178
  %181 = sub i64 %4, %161
  %182 = ashr exact i64 %181, 4
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %156, align 8
  %183 = bitcast %"class.std::__1::allocator.32"** %157 to %"class.std::__1::__compressed_pair.29"**
  store %"class.std::__1::__compressed_pair.29"* %151, %"class.std::__1::__compressed_pair.29"** %183, align 8
  %184 = icmp eq i64 %180, 0
  br i1 %184, label %194, label %185

185:                                              ; preds = %177
  %186 = icmp ugt i64 %180, 1152921504606846975
  br i1 %186, label %187, label %188

187:                                              ; preds = %185
  tail call void @abort() #11
  unreachable

188:                                              ; preds = %173, %185
  %189 = phi i64 [ 1152921504606846975, %173 ], [ %180, %185 ]
  %190 = phi i64 [ %175, %173 ], [ %182, %185 ]
  %191 = shl i64 %189, 4
  %192 = tail call i8* @_Znwm(i64 %191) #9
  %193 = bitcast i8* %192 to %"struct.std::__1::pair"*
  br label %194

194:                                              ; preds = %177, %188
  %195 = phi i64 [ %190, %188 ], [ %182, %177 ]
  %196 = phi i64 [ %189, %188 ], [ 0, %177 ]
  %197 = phi %"struct.std::__1::pair"* [ %193, %188 ], [ null, %177 ]
  store %"struct.std::__1::pair"* %197, %"struct.std::__1::pair"** %153, align 8
  %198 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %197, i64 %195
  store %"struct.std::__1::pair"* %198, %"struct.std::__1::pair"** %155, align 8
  store %"struct.std::__1::pair"* %198, %"struct.std::__1::pair"** %154, align 8
  %199 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %197, i64 %196
  store %"struct.std::__1::pair"* %199, %"struct.std::__1::pair"** %156, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEEPKS5_EERNS_9allocatorIS9_EEE12emplace_backIJS9_EEEvDpOT_(%"struct.std::__1::__split_buffer.93"* nonnull %5, %"struct.std::__1::pair"* dereferenceable(16) %2)
  %200 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %154, align 8
  %201 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %202 = ptrtoint %"struct.std::__1::pair"* %201 to i64
  %203 = sub i64 %4, %202
  %204 = ashr exact i64 %203, 4
  %205 = sub nsw i64 0, %204
  %206 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %200, i64 %205
  store %"struct.std::__1::pair"* %206, %"struct.std::__1::pair"** %154, align 8
  %207 = icmp sgt i64 %203, 0
  br i1 %207, label %208, label %211

208:                                              ; preds = %194
  %209 = bitcast %"struct.std::__1::pair"* %206 to i8*
  %210 = bitcast %"struct.std::__1::pair"* %201 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %209, i8* align 8 %210, i64 %203, i1 false) #10
  br label %211

211:                                              ; preds = %208, %194
  %212 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %213 = icmp eq %"struct.std::__1::pair"* %212, %1
  br i1 %213, label %214, label %218

214:                                              ; preds = %211
  %215 = ptrtoint %"struct.std::__1::pair"* %212 to i64
  %216 = bitcast %"struct.std::__1::pair"** %155 to i64*
  %217 = load i64, i64* %216, align 8
  br label %275

218:                                              ; preds = %211
  %219 = bitcast %"struct.std::__1::pair"** %155 to i8**
  %220 = load i8*, i8** %219, align 8
  %221 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %212, i64 -1, i32 0, i32 0, i32 0
  %222 = ptrtoint i64* %221 to i64
  %223 = sub i64 %222, %4
  %224 = lshr i64 %223, 4
  %225 = add nuw nsw i64 %224, 1
  %226 = and i64 %225, 3
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %241, label %228

228:                                              ; preds = %218, %228
  %229 = phi i8* [ %236, %228 ], [ %220, %218 ]
  %230 = phi %"struct.std::__1::pair"* [ %233, %228 ], [ %1, %218 ]
  %231 = phi i64 [ %237, %228 ], [ %226, %218 ]
  %232 = bitcast %"struct.std::__1::pair"* %230 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %229, i8* align 8 %232, i64 16, i1 false) #10
  %233 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %230, i64 1
  %234 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %155, align 8
  %235 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %234, i64 1
  store %"struct.std::__1::pair"* %235, %"struct.std::__1::pair"** %155, align 8
  %236 = bitcast %"struct.std::__1::pair"* %235 to i8*
  %237 = add i64 %231, -1
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %228, !llvm.loop !20

239:                                              ; preds = %228
  %240 = bitcast %"struct.std::__1::pair"* %235 to i8*
  br label %241

241:                                              ; preds = %218, %239
  %242 = phi %"struct.std::__1::pair"* [ undef, %218 ], [ %235, %239 ]
  %243 = phi i8* [ %220, %218 ], [ %240, %239 ]
  %244 = phi %"struct.std::__1::pair"* [ %1, %218 ], [ %233, %239 ]
  %245 = icmp ult i64 %223, 48
  br i1 %245, label %270, label %246

246:                                              ; preds = %241, %246
  %247 = phi i8* [ %269, %246 ], [ %243, %241 ]
  %248 = phi %"struct.std::__1::pair"* [ %265, %246 ], [ %244, %241 ]
  %249 = bitcast %"struct.std::__1::pair"* %248 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %249, i64 16, i1 false) #10
  %250 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %248, i64 1
  %251 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %155, align 8
  %252 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %251, i64 1
  store %"struct.std::__1::pair"* %252, %"struct.std::__1::pair"** %155, align 8
  %253 = bitcast %"struct.std::__1::pair"* %252 to i8*
  %254 = bitcast %"struct.std::__1::pair"* %250 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %253, i8* align 8 %254, i64 16, i1 false) #10
  %255 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %248, i64 2
  %256 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %155, align 8
  %257 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %256, i64 1
  store %"struct.std::__1::pair"* %257, %"struct.std::__1::pair"** %155, align 8
  %258 = bitcast %"struct.std::__1::pair"* %257 to i8*
  %259 = bitcast %"struct.std::__1::pair"* %255 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %258, i8* align 8 %259, i64 16, i1 false) #10
  %260 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %248, i64 3
  %261 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %155, align 8
  %262 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %261, i64 1
  store %"struct.std::__1::pair"* %262, %"struct.std::__1::pair"** %155, align 8
  %263 = bitcast %"struct.std::__1::pair"* %262 to i8*
  %264 = bitcast %"struct.std::__1::pair"* %260 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %263, i8* align 8 %264, i64 16, i1 false) #10
  %265 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %248, i64 4
  %266 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %155, align 8
  %267 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %266, i64 1
  store %"struct.std::__1::pair"* %267, %"struct.std::__1::pair"** %155, align 8
  %268 = icmp eq %"struct.std::__1::pair"* %265, %212
  %269 = bitcast %"struct.std::__1::pair"* %267 to i8*
  br i1 %268, label %270, label %246

270:                                              ; preds = %246, %241
  %271 = phi %"struct.std::__1::pair"* [ %242, %241 ], [ %267, %246 ]
  %272 = ptrtoint %"struct.std::__1::pair"* %271 to i64
  %273 = load i64, i64* %158, align 8
  %274 = bitcast %"struct.std::__1::pair"** %155 to i64*
  br label %275

275:                                              ; preds = %214, %270
  %276 = phi i64* [ %216, %214 ], [ %274, %270 ]
  %277 = phi i64 [ %217, %214 ], [ %272, %270 ]
  %278 = phi i64 [ %215, %214 ], [ %273, %270 ]
  %279 = load i64, i64* %159, align 8
  %280 = bitcast %"struct.std::__1::pair"** %154 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %159, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %158, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %169, align 8
  %283 = bitcast %"struct.std::__1::pair"** %156 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %169, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer.93"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to %"struct.std::__1::pair"*
  %287 = inttoptr i64 %278 to %"struct.std::__1::pair"*
  %288 = icmp eq %"struct.std::__1::pair"* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %287, i64 -1, i32 0, i32 0, i32 0
  %291 = ptrtoint i64* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 4
  %294 = xor i64 %293, -1
  %295 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %287, i64 %294
  store %"struct.std::__1::pair"* %295, %"struct.std::__1::pair"** %155, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #9
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %152) #10
  br label %301

301:                                              ; preds = %16, %148, %300
  %302 = phi %"struct.std::__1::pair"* [ %1, %16 ], [ %1, %148 ], [ %200, %300 ]
  ret %"struct.std::__1::pair"* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIN4util6IdTypeIN3viz20CompositorRenderPassEmLm0ELm1EEEPKS5_EERNS_9allocatorIS9_EEE12emplace_backIJS9_EEEvDpOT_(%"struct.std::__1::__split_buffer.93"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair"* %4, %6
  %8 = ptrtoint %"struct.std::__1::pair"* %6 to i64
  %9 = bitcast %"struct.std::__1::pair"* %4 to i8*
  br i1 %7, label %10, label %186

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.93", %"struct.std::__1::__split_buffer.93"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair"* %15 to i64
  br i1 %16, label %18, label %101

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 4
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair"* %12, %4
  br i1 %25, label %96, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 -1, i32 0, i32 0, i32 0
  %28 = ptrtoint i64* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 4
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %50, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair"* [ %47, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair"* [ %46, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %48, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 0, i32 0, i32 0
  %40 = load i64, i64* %38, align 8
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  %42 = bitcast %"class.viz::CompositorRenderPass"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 1
  %45 = bitcast %"class.viz::CompositorRenderPass"** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1
  %48 = add i64 %37, -1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %34, !llvm.loop !21

50:                                               ; preds = %34, %26
  %51 = phi %"struct.std::__1::pair"* [ undef, %26 ], [ %47, %34 ]
  %52 = phi %"struct.std::__1::pair"* [ %24, %26 ], [ %47, %34 ]
  %53 = phi %"struct.std::__1::pair"* [ %12, %26 ], [ %46, %34 ]
  %54 = icmp ult i64 %29, 48
  br i1 %54, label %93, label %55

55:                                               ; preds = %50, %55
  %56 = phi %"struct.std::__1::pair"* [ %91, %55 ], [ %52, %50 ]
  %57 = phi %"struct.std::__1::pair"* [ %90, %55 ], [ %53, %50 ]
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 0, i32 0, i32 0, i32 0
  %60 = load i64, i64* %58, align 8
  store i64 %60, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 0, i32 1
  %62 = bitcast %"class.viz::CompositorRenderPass"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 0, i32 1
  %65 = bitcast %"class.viz::CompositorRenderPass"** %64 to i64*
  store i64 %63, i64* %65, align 8
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 1, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 1, i32 0, i32 0, i32 0
  %68 = load i64, i64* %66, align 8
  store i64 %68, i64* %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 1, i32 1
  %70 = bitcast %"class.viz::CompositorRenderPass"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 1, i32 1
  %73 = bitcast %"class.viz::CompositorRenderPass"** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 2, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 2, i32 0, i32 0, i32 0
  %76 = load i64, i64* %74, align 8
  store i64 %76, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 2, i32 1
  %78 = bitcast %"class.viz::CompositorRenderPass"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 2, i32 1
  %81 = bitcast %"class.viz::CompositorRenderPass"** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 3, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 3, i32 0, i32 0, i32 0
  %84 = load i64, i64* %82, align 8
  store i64 %84, i64* %83, align 8
  %85 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 3, i32 1
  %86 = bitcast %"class.viz::CompositorRenderPass"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 3, i32 1
  %89 = bitcast %"class.viz::CompositorRenderPass"** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %57, i64 4
  %91 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %56, i64 4
  %92 = icmp eq %"struct.std::__1::pair"* %90, %4
  br i1 %92, label %93, label %55

93:                                               ; preds = %55, %50
  %94 = phi %"struct.std::__1::pair"* [ %51, %50 ], [ %91, %55 ]
  %95 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  br label %96

96:                                               ; preds = %93, %18
  %97 = phi %"struct.std::__1::pair"* [ %4, %18 ], [ %95, %93 ]
  %98 = phi %"struct.std::__1::pair"* [ %24, %18 ], [ %94, %93 ]
  store %"struct.std::__1::pair"* %98, %"struct.std::__1::pair"** %3, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 %23
  store %"struct.std::__1::pair"* %99, %"struct.std::__1::pair"** %11, align 8
  %100 = bitcast %"struct.std::__1::pair"* %98 to i8*
  br label %186

101:                                              ; preds = %10
  %102 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %103 = bitcast %"struct.std::__1::__split_buffer.93"* %0 to i64*
  %104 = sub i64 %8, %17
  %105 = ashr exact i64 %104, 3
  %106 = icmp eq i64 %104, 0
  %107 = select i1 %106, i64 1, i64 %105
  %108 = icmp ugt i64 %107, 1152921504606846975
  br i1 %108, label %109, label %110

109:                                              ; preds = %101
  tail call void @abort() #11
  unreachable

110:                                              ; preds = %101
  %111 = lshr i64 %107, 2
  %112 = shl i64 %107, 4
  %113 = tail call i8* @_Znwm(i64 %112) #9
  %114 = bitcast i8* %113 to %"struct.std::__1::pair"*
  %115 = ptrtoint i8* %113 to i64
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %114, i64 %111
  %117 = ptrtoint %"struct.std::__1::pair"* %116 to i64
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %114, i64 %107
  %119 = ptrtoint %"struct.std::__1::pair"* %118 to i64
  %120 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %121 = sub i64 %120, %13
  %122 = ashr exact i64 %121, 4
  %123 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %116, i64 %122
  %124 = icmp eq i64 %121, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %110
  %126 = add i64 %121, -16
  %127 = lshr i64 %126, 4
  %128 = add nuw nsw i64 %127, 1
  %129 = and i64 %128, 3
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %145, label %131

131:                                              ; preds = %125, %131
  %132 = phi %"struct.std::__1::pair"* [ %138, %131 ], [ %116, %125 ]
  %133 = phi i64 [ %139, %131 ], [ %117, %125 ]
  %134 = phi %"struct.std::__1::pair"* [ %140, %131 ], [ %12, %125 ]
  %135 = phi i64 [ %141, %131 ], [ %129, %125 ]
  %136 = inttoptr i64 %133 to i8*
  %137 = bitcast %"struct.std::__1::pair"* %134 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 16, i1 false) #10
  %138 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %132, i64 1
  %139 = ptrtoint %"struct.std::__1::pair"* %138 to i64
  %140 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %134, i64 1
  %141 = add i64 %135, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %131, !llvm.loop !22

143:                                              ; preds = %131
  %144 = ptrtoint %"struct.std::__1::pair"* %138 to i64
  br label %145

145:                                              ; preds = %125, %143
  %146 = phi %"struct.std::__1::pair"* [ %116, %125 ], [ %138, %143 ]
  %147 = phi i64 [ %117, %125 ], [ %144, %143 ]
  %148 = phi %"struct.std::__1::pair"* [ %12, %125 ], [ %140, %143 ]
  %149 = icmp ult i64 %126, 48
  br i1 %149, label %172, label %150

150:                                              ; preds = %145, %150
  %151 = phi %"struct.std::__1::pair"* [ %168, %150 ], [ %146, %145 ]
  %152 = phi i64 [ %169, %150 ], [ %147, %145 ]
  %153 = phi %"struct.std::__1::pair"* [ %170, %150 ], [ %148, %145 ]
  %154 = inttoptr i64 %152 to i8*
  %155 = bitcast %"struct.std::__1::pair"* %153 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %155, i64 16, i1 false) #10
  %156 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 1
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 1
  %158 = bitcast %"struct.std::__1::pair"* %156 to i8*
  %159 = bitcast %"struct.std::__1::pair"* %157 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %159, i64 16, i1 false) #10
  %160 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 2
  %161 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 2
  %162 = bitcast %"struct.std::__1::pair"* %160 to i8*
  %163 = bitcast %"struct.std::__1::pair"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* align 8 %163, i64 16, i1 false) #10
  %164 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 3
  %165 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 3
  %166 = bitcast %"struct.std::__1::pair"* %164 to i8*
  %167 = bitcast %"struct.std::__1::pair"* %165 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %166, i8* align 8 %167, i64 16, i1 false) #10
  %168 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 4
  %169 = ptrtoint %"struct.std::__1::pair"* %168 to i64
  %170 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %153, i64 4
  %171 = icmp eq %"struct.std::__1::pair"* %123, %168
  br i1 %171, label %172, label %150

172:                                              ; preds = %150, %145
  %173 = ptrtoint %"struct.std::__1::pair"* %123 to i64
  %174 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  br label %175

175:                                              ; preds = %110, %172
  %176 = phi %"struct.std::__1::pair"* [ %174, %172 ], [ %15, %110 ]
  %177 = phi i64 [ %173, %172 ], [ %117, %110 ]
  store i64 %115, i64* %103, align 8
  %178 = bitcast %"struct.std::__1::pair"** %11 to i64*
  store i64 %117, i64* %178, align 8
  %179 = bitcast %"struct.std::__1::pair"** %3 to i64*
  store i64 %177, i64* %179, align 8
  store i64 %119, i64* %102, align 8
  %180 = icmp eq %"struct.std::__1::pair"* %176, null
  %181 = inttoptr i64 %177 to i8*
  br i1 %180, label %186, label %182

182:                                              ; preds = %175
  %183 = bitcast %"struct.std::__1::pair"* %176 to i8*
  tail call void @_ZdlPv(i8* %183) #9
  %184 = bitcast %"struct.std::__1::pair"** %3 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %186

186:                                              ; preds = %182, %175, %96, %2
  %187 = phi i8* [ %185, %182 ], [ %181, %175 ], [ %100, %96 ], [ %9, %2 ]
  %188 = bitcast %"struct.std::__1::pair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %187, i8* align 8 %188, i64 16, i1 false) #10
  %189 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %190 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %189, i64 1
  store %"struct.std::__1::pair"* %190, %"struct.std::__1::pair"** %3, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE6cbeginEv: argument 0"}
!4 = distinct !{!4, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE6cbeginEv"}
!5 = distinct !{!5, !6, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE5beginEv: argument 0"}
!6 = distinct !{!6, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE5beginEv"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE4cendEv: argument 0"}
!9 = distinct !{!9, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE4cendEv"}
!10 = distinct !{!10, !11, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE3endEv: argument 0"}
!11 = distinct !{!11, !"_ZNK2cc13ListContainerIN3viz8DrawQuadEE3endEv"}
!12 = !{i8 0, i8 2}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.unroll.disable"}
!15 = distinct !{!15, !14}
!16 = distinct !{!16, !14}
!17 = distinct !{!17, !14}
!18 = distinct !{!18, !14}
!19 = distinct !{!19, !14}
!20 = distinct !{!20, !14}
!21 = distinct !{!21, !14}
!22 = distinct !{!22, !14}
