; ModuleID = '../../net/base/mime_sniffer.cc'
source_filename = "../../net/base/mime_sniffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::MagicNumber" = type { i8*, %"class.base::BasicStringPiece", i8, i8* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"struct.net::OfficeExtensionType" = type { i32, %"class.base::BasicStringPiece" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::CheckedContiguousIterator" = type { %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"* }
%"class.logging::CheckOpResult" = type { i8* }

$_ZNK4base25CheckedContiguousIteratorIKN3net11MagicNumberEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKN3net11MagicNumberEEppEv = comdat any

$_ZZN7logging15CheckOpValueStrIPKN3net11MagicNumberEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKN3net11MagicNumberEEC2EPS3_S5_S5_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKN3net11MagicNumberEE15CheckComparableERKS4_ = comdat any

@_ZZN3net19ShouldSniffMimeTypeERK4GURLN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE15kSniffableTypes = internal constant [18 x i8*] [i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"application/octet-stream\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"text/xml\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"application/xml\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"application/msword\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"application/vnd.ms-excel\00", align 1
@.str.6 = private unnamed_addr constant [30 x i8] c"application/vnd.ms-powerpoint\00", align 1
@.str.7 = private unnamed_addr constant [72 x i8] c"application/vnd.openxmlformats-officedocument.wordprocessingml.document\00", align 1
@.str.8 = private unnamed_addr constant [66 x i8] c"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\00", align 1
@.str.9 = private unnamed_addr constant [74 x i8] c"application/vnd.openxmlformats-officedocument.presentationml.presentation\00", align 1
@.str.10 = private unnamed_addr constant [47 x i8] c"application/vnd.ms-excel.sheet.macroenabled.12\00", align 1
@.str.11 = private unnamed_addr constant [49 x i8] c"application/vnd.ms-word.document.macroenabled.12\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"application/vnd.ms-powerpoint.presentation.macroenabled.12\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"application/mspowerpoint\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"application/msexcel\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"application/vnd.ms-word\00", align 1
@.str.16 = private unnamed_addr constant [36 x i8] c"application/vnd.ms-word.document.12\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"application/vnd.msword\00", align 1
@_ZN3netL18kExtraMagicNumbersE = internal constant [27 x %"struct.net::MagicNumber"] [%"struct.net::MagicNumber" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.72, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i32 0, i32 0), i64 7 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.74, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.75, i32 0, i32 0), i64 4 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.76, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i32 0, i32 0), i64 16 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.78, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.79, i32 0, i32 0), i64 16 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.80, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.81, i32 0, i32 0), i64 5 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i32 0, i32 0), i64 4 }, i8 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.84, i32 0, i32 0) }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.86, i32 0, i32 0), i64 2 }, i8 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.86, i32 0, i32 0) }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.87, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.88, i32 0, i32 0), i64 10 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.87, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.89, i32 0, i32 0), i64 12 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.90, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.91, i32 0, i32 0), i64 8 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.92, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i32 0, i32 0), i64 8 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.94, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.95, i32 0, i32 0), i64 3 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.94, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.96, i32 0, i32 0), i64 3 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.97, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.98, i32 0, i32 0), i64 3 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.99, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.100, i32 0, i32 0), i64 4 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.101, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.102, i32 0, i32 0), i64 6 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.103, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.104, i32 0, i32 0), i64 9 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.105, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.106, i32 0, i32 0), i64 14 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.107, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.108, i32 0, i32 0), i64 4 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.109, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i32 0, i32 0), i64 4 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.109, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.111, i32 0, i32 0), i64 4 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.109, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.112, i32 0, i32 0), i64 4 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.113, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.114, i32 0, i32 0), i64 16 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.115, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.116, i32 0, i32 0), i64 8 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.115, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i32 0, i32 0), i64 8 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.118, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.119, i32 0, i32 0), i64 7 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.120, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.121, i32 0, i32 0), i64 4 }, i8 0, i8* null }], align 16
@_ZN3netL13kMagicNumbersE = internal constant [24 x %"struct.net::MagicNumber"] [%"struct.net::MagicNumber" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.122, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i32 0, i32 0), i64 5 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.124, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.125, i32 0, i32 0), i64 11 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.126, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i32 0, i32 0), i64 6 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.126, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.128, i32 0, i32 0), i64 6 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.129, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.130, i32 0, i32 0), i64 8 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.131, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.132, i32 0, i32 0), i64 3 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.133, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.134, i32 0, i32 0), i64 2 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.135, i32 0, i32 0), i64 2 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.136, i32 0, i32 0), i64 2 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.137, i32 0, i32 0), i64 4 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.138, i32 0, i32 0), i64 5 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.139, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.140, i32 0, i32 0), i64 3 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.141, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.142, i32 0, i32 0), i64 4 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.143, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.144, i32 0, i32 0), i64 16 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.145, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.146, i32 0, i32 0), i64 3 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.145, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.147, i32 0, i32 0), i64 3 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.145, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.148, i32 0, i32 0), i64 4 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.149, i32 0, i32 0), i64 3 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.150, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.151, i32 0, i32 0), i64 14 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.152, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.153, i32 0, i32 0), i64 4 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.154, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i64 4 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.155, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.156, i32 0, i32 0), i64 7 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.157, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.158, i32 0, i32 0), i64 4 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.159, i32 0, i32 0), i64 2 }, i8 0, i8* null }], align 16
@_ZN3url11kFileSchemeE = external constant [0 x i8], align 1
@_ZN3url17kFileSystemSchemeE = external constant [0 x i8], align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.20 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.21 = private unnamed_addr constant [16 x i8] c"unknown/unknown\00", align 1
@.str.22 = private unnamed_addr constant [20 x i8] c"application/unknown\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"*/*\00", align 1
@_ZN3netL19kOfficeMagicNumbersE = internal constant [2 x %"struct.net::MagicNumber"] [%"struct.net::MagicNumber" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), i64 8 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i32 0, i32 0), i64 4 }, i8 0, i8* null }], align 16
@.str.25 = private unnamed_addr constant [4 x i8] c"CFB\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"\D0\CF\11\E0\A1\B1\1A\E1\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"OOXML\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"PK\03\04\00", align 1
@_ZN3netL14kSniffableTagsE = internal constant [18 x %"struct.net::MagicNumber"] [%"struct.net::MagicNumber" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i32 0, i32 0), i64 5 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0), i64 14 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i32 0, i32 0), i64 7 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i32 0, i32 0), i64 5 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i32 0, i32 0), i64 4 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i32 0, i32 0), i64 5 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i32 0, i32 0), i64 7 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i32 0, i32 0), i64 3 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i32 0, i32 0), i64 4 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i32 0, i32 0), i64 5 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.40, i32 0, i32 0), i64 6 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i32 0, i32 0), i64 2 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i32 0, i32 0), i64 6 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i32 0, i32 0), i64 6 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i32 0, i32 0), i64 2 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.45, i32 0, i32 0), i64 5 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.46, i32 0, i32 0), i64 3 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i32 0, i32 0), i64 2 }, i8 1, i8* null }], align 16
@.str.29 = private unnamed_addr constant [6 x i8] c"<?xml\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"text/html\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"<!DOCTYPE html\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"<script\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"<html\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"<!--\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"<head\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"<iframe\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"<h1\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"<div\00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"<font\00", align 1
@.str.40 = private unnamed_addr constant [7 x i8] c"<table\00", align 1
@.str.41 = private unnamed_addr constant [3 x i8] c"<a\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"<style\00", align 1
@.str.43 = private unnamed_addr constant [7 x i8] c"<title\00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c"<b\00", align 1
@.str.45 = private unnamed_addr constant [6 x i8] c"<body\00", align 1
@.str.46 = private unnamed_addr constant [4 x i8] c"<br\00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c"<p\00", align 1
@_ZN3netL14kByteOrderMarkE = internal constant [3 x %"struct.net::MagicNumber"] [%"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i32 0, i32 0), i64 2 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.49, i32 0, i32 0), i64 2 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.50, i32 0, i32 0), i64 3 }, i8 0, i8* null }], align 16
@.str.48 = private unnamed_addr constant [3 x i8] c"\FE\FF\00", align 1
@.str.49 = private unnamed_addr constant [3 x i8] c"\FF\FE\00", align 1
@.str.50 = private unnamed_addr constant [4 x i8] c"\EF\BB\BF\00", align 1
@.str.51 = private unnamed_addr constant [10 x i8] c"<!DOCTYPE\00", align 1
@_ZN3netL9kMagicXMLE = internal constant [2 x %"struct.net::MagicNumber"] [%"struct.net::MagicNumber" { i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.52, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i64 5 }, i8 1, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.54, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), i64 4 }, i8 1, i8* null }], align 16
@.str.52 = private unnamed_addr constant [21 x i8] c"application/atom+xml\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"<feed\00", align 1
@.str.54 = private unnamed_addr constant [20 x i8] c"application/rss+xml\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"<rss\00", align 1
@_ZZN3netL8SniffCRXEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERK4GURLPbPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEEE16kCRXMagicNumbers = internal constant [2 x %"struct.net::MagicNumber"] [%"struct.net::MagicNumber" { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.56, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57, i32 0, i32 0), i64 8 }, i8 0, i8* null }, %"struct.net::MagicNumber" { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.56, i32 0, i32 0), %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i32 0, i32 0), i64 8 }, i8 0, i8* null }], align 16
@.str.56 = private unnamed_addr constant [31 x i8] c"application/x-chrome-extension\00", align 1
@.str.57 = private unnamed_addr constant [9 x i8] c"Cr24\02\00\00\00\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"Cr24\03\00\00\00\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c".crx\00", align 1
@_ZN3netL21kOfficeExtensionTypesE = internal unnamed_addr constant [6 x %"struct.net::OfficeExtensionType"] [%"struct.net::OfficeExtensionType" { i32 0, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i64 4 } }, %"struct.net::OfficeExtensionType" { i32 1, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i32 0, i32 0), i64 4 } }, %"struct.net::OfficeExtensionType" { i32 2, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i32 0, i32 0), i64 4 } }, %"struct.net::OfficeExtensionType" { i32 0, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i64 5 } }, %"struct.net::OfficeExtensionType" { i32 1, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i32 0, i32 0), i64 5 } }, %"struct.net::OfficeExtensionType" { i32 2, %"class.base::BasicStringPiece" { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i32 0, i32 0), i64 5 } }], align 16
@.str.60 = private unnamed_addr constant [5 x i8] c".doc\00", align 1
@.str.61 = private unnamed_addr constant [5 x i8] c".xls\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c".ppt\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c".docx\00", align 1
@.str.64 = private unnamed_addr constant [6 x i8] c".xlsx\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c".pptx\00", align 1
@.str.66 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.67 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.68 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.69 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.70 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.71 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@.str.72 = private unnamed_addr constant [16 x i8] c"image/x-xbitmap\00", align 1
@.str.73 = private unnamed_addr constant [8 x i8] c"#define\00", align 1
@.str.74 = private unnamed_addr constant [13 x i8] c"image/x-icon\00", align 1
@.str.75 = private unnamed_addr constant [5 x i8] c"\00\00\01\00\00", align 1
@.str.76 = private unnamed_addr constant [10 x i8] c"audio/wav\00", align 1
@.str.77 = private unnamed_addr constant [17 x i8] c"RIFF....WAVEfmt \00", align 1
@.str.78 = private unnamed_addr constant [10 x i8] c"video/avi\00", align 1
@.str.79 = private unnamed_addr constant [17 x i8] c"RIFF....AVI LIST\00", align 1
@.str.80 = private unnamed_addr constant [10 x i8] c"audio/ogg\00", align 1
@.str.81 = private unnamed_addr constant [6 x i8] c"OggS\00\00", align 1
@.str.82 = private unnamed_addr constant [11 x i8] c"video/mpeg\00", align 1
@.str.83 = private unnamed_addr constant [5 x i8] c"\00\00\01\B0\00", align 1
@.str.84 = private unnamed_addr constant [5 x i8] c"\FF\FF\FF\F0\00", align 1
@.str.85 = private unnamed_addr constant [11 x i8] c"audio/mpeg\00", align 1
@.str.86 = private unnamed_addr constant [3 x i8] c"\FF\E0\00", align 1
@.str.87 = private unnamed_addr constant [11 x i8] c"video/3gpp\00", align 1
@.str.88 = private unnamed_addr constant [11 x i8] c"....ftyp3g\00", align 1
@.str.89 = private unnamed_addr constant [13 x i8] c"....ftypavcl\00", align 1
@.str.90 = private unnamed_addr constant [10 x i8] c"video/mp4\00", align 1
@.str.91 = private unnamed_addr constant [9 x i8] c"....ftyp\00", align 1
@.str.92 = private unnamed_addr constant [16 x i8] c"video/quicktime\00", align 1
@.str.93 = private unnamed_addr constant [9 x i8] c"....moov\00", align 1
@.str.94 = private unnamed_addr constant [30 x i8] c"application/x-shockwave-flash\00", align 1
@.str.95 = private unnamed_addr constant [4 x i8] c"CWS\00", align 1
@.str.96 = private unnamed_addr constant [4 x i8] c"FWS\00", align 1
@.str.97 = private unnamed_addr constant [12 x i8] c"video/x-flv\00", align 1
@.str.98 = private unnamed_addr constant [4 x i8] c"FLV\00", align 1
@.str.99 = private unnamed_addr constant [13 x i8] c"audio/x-flac\00", align 1
@.str.100 = private unnamed_addr constant [5 x i8] c"fLaC\00", align 1
@.str.101 = private unnamed_addr constant [10 x i8] c"audio/amr\00", align 1
@.str.102 = private unnamed_addr constant [7 x i8] c"#!AMR\0A\00", align 1
@.str.103 = private unnamed_addr constant [18 x i8] c"image/x-canon-cr2\00", align 1
@.str.104 = private unnamed_addr constant [10 x i8] c"II*\00\10\00\00\0CR\00", align 1
@.str.105 = private unnamed_addr constant [18 x i8] c"image/x-canon-crw\00", align 1
@.str.106 = private unnamed_addr constant [15 x i8] c"II\1A\00\00\00HEAPCCDR\00", align 1
@.str.107 = private unnamed_addr constant [20 x i8] c"image/x-minolta-mrw\00", align 1
@.str.108 = private unnamed_addr constant [5 x i8] c"\00MRM\00", align 1
@.str.109 = private unnamed_addr constant [20 x i8] c"image/x-olympus-orf\00", align 1
@.str.110 = private unnamed_addr constant [5 x i8] c"MMOR\00", align 1
@.str.111 = private unnamed_addr constant [5 x i8] c"IIRO\00", align 1
@.str.112 = private unnamed_addr constant [5 x i8] c"IIRS\00", align 1
@.str.113 = private unnamed_addr constant [17 x i8] c"image/x-fuji-raf\00", align 1
@.str.114 = private unnamed_addr constant [17 x i8] c"FUJIFILMCCD-RAW \00", align 1
@.str.115 = private unnamed_addr constant [22 x i8] c"image/x-panasonic-raw\00", align 1
@.str.116 = private unnamed_addr constant [9 x i8] c"IIU\00\08\00\00\00\00", align 1
@.str.117 = private unnamed_addr constant [9 x i8] c"IIU\00\18\00\00\00\00", align 1
@.str.118 = private unnamed_addr constant [21 x i8] c"image/x-phaseone-raw\00", align 1
@.str.119 = private unnamed_addr constant [8 x i8] c"MMMMRaw\00", align 1
@.str.120 = private unnamed_addr constant [12 x i8] c"image/x-x3f\00", align 1
@.str.121 = private unnamed_addr constant [5 x i8] c"FOVb\00", align 1
@.str.122 = private unnamed_addr constant [16 x i8] c"application/pdf\00", align 1
@.str.123 = private unnamed_addr constant [6 x i8] c"%PDF-\00", align 1
@.str.124 = private unnamed_addr constant [23 x i8] c"application/postscript\00", align 1
@.str.125 = private unnamed_addr constant [12 x i8] c"%!PS-Adobe-\00", align 1
@.str.126 = private unnamed_addr constant [10 x i8] c"image/gif\00", align 1
@.str.127 = private unnamed_addr constant [7 x i8] c"GIF87a\00", align 1
@.str.128 = private unnamed_addr constant [7 x i8] c"GIF89a\00", align 1
@.str.129 = private unnamed_addr constant [10 x i8] c"image/png\00", align 1
@.str.130 = private unnamed_addr constant [9 x i8] c"\89PNG\0D\0A\1A\0A\00", align 1
@.str.131 = private unnamed_addr constant [11 x i8] c"image/jpeg\00", align 1
@.str.132 = private unnamed_addr constant [4 x i8] c"\FF\D8\FF\00", align 1
@.str.133 = private unnamed_addr constant [10 x i8] c"image/bmp\00", align 1
@.str.134 = private unnamed_addr constant [3 x i8] c"BM\00", align 1
@.str.135 = private unnamed_addr constant [3 x i8] c"#!\00", align 1
@.str.136 = private unnamed_addr constant [3 x i8] c"%!\00", align 1
@.str.137 = private unnamed_addr constant [5 x i8] c"From\00", align 1
@.str.138 = private unnamed_addr constant [6 x i8] c">From\00", align 1
@.str.139 = private unnamed_addr constant [19 x i8] c"application/x-gzip\00", align 1
@.str.140 = private unnamed_addr constant [4 x i8] c"\1F\8B\08\00", align 1
@.str.141 = private unnamed_addr constant [21 x i8] c"audio/x-pn-realaudio\00", align 1
@.str.142 = private unnamed_addr constant [5 x i8] c".RMF\00", align 1
@.str.143 = private unnamed_addr constant [15 x i8] c"video/x-ms-asf\00", align 1
@.str.144 = private unnamed_addr constant [17 x i8] c"0&\B2u\8Ef\CF\11\A6\D9\00\AA\00b\CEl\00", align 1
@.str.145 = private unnamed_addr constant [11 x i8] c"image/tiff\00", align 1
@.str.146 = private unnamed_addr constant [4 x i8] c"I I\00", align 1
@.str.147 = private unnamed_addr constant [4 x i8] c"II*\00", align 1
@.str.148 = private unnamed_addr constant [5 x i8] c"MM\00*\00", align 1
@.str.149 = private unnamed_addr constant [4 x i8] c"ID3\00", align 1
@.str.150 = private unnamed_addr constant [11 x i8] c"image/webp\00", align 1
@.str.151 = private unnamed_addr constant [15 x i8] c"RIFF....WEBPVP\00", align 1
@.str.152 = private unnamed_addr constant [11 x i8] c"video/webm\00", align 1
@.str.153 = private unnamed_addr constant [5 x i8] c"\1AE\DF\A3\00", align 1
@.str.154 = private unnamed_addr constant [16 x i8] c"application/zip\00", align 1
@.str.155 = private unnamed_addr constant [29 x i8] c"application/x-rar-compressed\00", align 1
@.str.156 = private unnamed_addr constant [8 x i8] c"Rar!\1A\07\00\00", align 1
@.str.157 = private unnamed_addr constant [25 x i8] c"application/x-msmetafile\00", align 1
@.str.158 = private unnamed_addr constant [5 x i8] c"\D7\CD\C6\9A\00", align 1
@.str.159 = private unnamed_addr constant [3 x i8] c"MZ\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net19ShouldSniffMimeTypeERK4GURLN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* dereferenceable(120), i8*, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %class.GURL* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %class.GURL, %class.GURL* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %22, label %14

14:                                               ; preds = %3
  %15 = tail call zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL* %0) #10
  br i1 %15, label %22, label %16

16:                                               ; preds = %14
  %17 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #10
  %18 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %17) #10
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0)) #10
  %21 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0), i64 %20) #10
  br i1 %21, label %22, label %43

22:                                               ; preds = %3, %14, %16, %19
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  br label %24

24:                                               ; preds = %22, %38
  %25 = phi i8** [ getelementptr inbounds ([18 x i8*], [18 x i8*]* @_ZZN3net19ShouldSniffMimeTypeERK4GURLN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE15kSniffableTypes, i64 0, i64 0), %22 ], [ %39, %38 ]
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = call i64 @strlen(i8* nonnull %26) #10
  br label %32

30:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0)) #10
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %32

32:                                               ; preds = %28, %30
  %33 = phi i64 [ 0, %30 ], [ %29, %28 ]
  %34 = icmp eq i64 %33, %2
  br i1 %34, label %35, label %38

35:                                               ; preds = %32
  %36 = call i32 @bcmp(i8* %1, i8* %26, i64 %2) #10
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %32, %35
  %39 = getelementptr inbounds i8*, i8** %25, i64 1
  %40 = icmp eq i8** %39, getelementptr inbounds ([18 x i8*], [18 x i8*]* @_ZZN3net19ShouldSniffMimeTypeERK4GURLN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEE15kSniffableTypes, i64 1, i64 0)
  br i1 %40, label %41, label %24

41:                                               ; preds = %38
  %42 = call fastcc zeroext i1 @_ZN3netL17IsUnknownMimeTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %1, i64 %2)
  br label %43

43:                                               ; preds = %35, %41, %19
  %44 = phi i1 [ false, %19 ], [ %42, %41 ], [ true, %35 ]
  ret i1 %44
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK4GURL19SchemeIsHTTPOrHTTPSEv(%class.GURL*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3netL17IsUnknownMimeTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) unnamed_addr #0 {
  switch i64 %1, label %6 [
    i64 0, label %3
    i64 15, label %17
    i64 19, label %20
    i64 3, label %23
  ]

3:                                                ; preds = %2
  %4 = call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.20, i64 0, i64 0), i64 %1) #10
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %15, label %14

6:                                                ; preds = %2, %17, %20, %23
  %7 = call i8* @memchr(i8* %0, i32 47, i64 %1) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %7 to i64
  %11 = ptrtoint i8* %0 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, -1
  br i1 %13, label %14, label %15

14:                                               ; preds = %3, %6, %9
  br label %15

15:                                               ; preds = %3, %17, %20, %23, %14, %9
  %16 = phi i1 [ true, %14 ], [ false, %9 ], [ true, %23 ], [ true, %20 ], [ true, %17 ], [ true, %3 ]
  ret i1 %16

17:                                               ; preds = %2
  %18 = call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0), i64 %1) #10
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %15, label %6

20:                                               ; preds = %2
  %21 = call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22, i64 0, i64 0), i64 %1) #10
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %15, label %6

23:                                               ; preds = %2
  %24 = call i32 @bcmp(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0), i64 %1) #10
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %15, label %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net13SniffMimeTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERK4GURLRKNS2_12basic_stringIcS4_NS2_9allocatorIcEEEENS_25ForceSniffFileUrlsForHtmlEPSC_(i8*, i64, %class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.base::BasicStringPiece", align 8
  %11 = alloca %"class.base::BasicStringPiece", align 8
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"class.base::BasicStringPiece"*
  %14 = alloca <2 x i64>, align 16
  %15 = bitcast <2 x i64>* %14 to %"class.base::BasicStringPiece"*
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.base::BasicStringPiece", align 8
  %18 = alloca %"class.base::BasicStringPiece", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = icmp eq %"class.std::__1::basic_string"* %5, %3
  br i1 %20, label %21, label %23

21:                                               ; preds = %6
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %52

23:                                               ; preds = %6
  %24 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  br i1 %27, label %42, label %32

32:                                               ; preds = %23
  br i1 %31, label %36, label %33

33:                                               ; preds = %32
  %34 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %35 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false) #10
  br label %52

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %5, i8* %38, i64 %40) #10
  br label %52

42:                                               ; preds = %23
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %48 = zext i8 %30 to i64
  %49 = select i1 %31, i8* %44, i8* %47
  %50 = select i1 %31, i64 %46, i64 %48
  %51 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %5, i8* %49, i64 %50) #10
  br label %52

52:                                               ; preds = %21, %33, %36, %42
  %53 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %22, %21 ], [ %28, %33 ], [ %28, %36 ], [ %28, %42 ]
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = zext i8 %55 to i64
  %60 = select i1 %56, i64 %58, i64 %59
  %61 = icmp eq i64 %60, 18
  br i1 %61, label %62, label %69

62:                                               ; preds = %52
  %63 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i64 18) #10
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %250, label %65

65:                                               ; preds = %62
  %66 = load i8, i8* %54, align 1
  %67 = load i64, i64* %57, align 8
  %68 = zext i8 %66 to i64
  br label %69

69:                                               ; preds = %65, %52
  %70 = phi i64 [ %68, %65 ], [ %59, %52 ]
  %71 = phi i64 [ %67, %65 ], [ %58, %52 ]
  %72 = phi i8 [ %66, %65 ], [ %55, %52 ]
  %73 = icmp slt i8 %72, 0
  %74 = select i1 %73, i64 %71, i64 %70
  %75 = icmp eq i64 %74, 24
  br i1 %75, label %76, label %83

76:                                               ; preds = %69
  %77 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i64 24) #10
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %250, label %79

79:                                               ; preds = %76
  %80 = load i8, i8* %54, align 1
  %81 = load i64, i64* %57, align 8
  %82 = zext i8 %80 to i64
  br label %83

83:                                               ; preds = %79, %69
  %84 = phi i64 [ %82, %79 ], [ %70, %69 ]
  %85 = phi i64 [ %81, %79 ], [ %71, %69 ]
  %86 = phi i8 [ %80, %79 ], [ %72, %69 ]
  %87 = icmp slt i8 %86, 0
  %88 = select i1 %87, i64 %85, i64 %84
  %89 = icmp eq i64 %88, 29
  br i1 %89, label %90, label %97

90:                                               ; preds = %83
  %91 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0), i64 29) #10
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %250, label %93

93:                                               ; preds = %90
  %94 = load i8, i8* %54, align 1
  %95 = load i64, i64* %57, align 8
  %96 = zext i8 %94 to i64
  br label %97

97:                                               ; preds = %93, %83
  %98 = phi i64 [ %96, %93 ], [ %84, %83 ]
  %99 = phi i64 [ %95, %93 ], [ %85, %83 ]
  %100 = phi i8 [ %94, %93 ], [ %86, %83 ]
  %101 = icmp slt i8 %100, 0
  %102 = select i1 %101, i64 %99, i64 %98
  %103 = icmp eq i64 %102, 71
  br i1 %103, label %104, label %111

104:                                              ; preds = %97
  %105 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.7, i64 0, i64 0), i64 71) #10
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %250, label %107

107:                                              ; preds = %104
  %108 = load i8, i8* %54, align 1
  %109 = load i64, i64* %57, align 8
  %110 = zext i8 %108 to i64
  br label %111

111:                                              ; preds = %107, %97
  %112 = phi i64 [ %110, %107 ], [ %98, %97 ]
  %113 = phi i64 [ %109, %107 ], [ %99, %97 ]
  %114 = phi i8 [ %108, %107 ], [ %100, %97 ]
  %115 = icmp slt i8 %114, 0
  %116 = select i1 %115, i64 %113, i64 %112
  %117 = icmp eq i64 %116, 65
  br i1 %117, label %118, label %125

118:                                              ; preds = %111
  %119 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8, i64 0, i64 0), i64 65) #10
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %250, label %121

121:                                              ; preds = %118
  %122 = load i8, i8* %54, align 1
  %123 = load i64, i64* %57, align 8
  %124 = zext i8 %122 to i64
  br label %125

125:                                              ; preds = %121, %111
  %126 = phi i64 [ %124, %121 ], [ %112, %111 ]
  %127 = phi i64 [ %123, %121 ], [ %113, %111 ]
  %128 = phi i8 [ %122, %121 ], [ %114, %111 ]
  %129 = icmp slt i8 %128, 0
  %130 = select i1 %129, i64 %127, i64 %126
  %131 = icmp eq i64 %130, 73
  br i1 %131, label %132, label %139

132:                                              ; preds = %125
  %133 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.9, i64 0, i64 0), i64 73) #10
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %250, label %135

135:                                              ; preds = %132
  %136 = load i8, i8* %54, align 1
  %137 = load i64, i64* %57, align 8
  %138 = zext i8 %136 to i64
  br label %139

139:                                              ; preds = %135, %125
  %140 = phi i64 [ %138, %135 ], [ %126, %125 ]
  %141 = phi i64 [ %137, %135 ], [ %127, %125 ]
  %142 = phi i8 [ %136, %135 ], [ %128, %125 ]
  %143 = icmp slt i8 %142, 0
  %144 = select i1 %143, i64 %141, i64 %140
  %145 = icmp eq i64 %144, 46
  br i1 %145, label %146, label %153

146:                                              ; preds = %139
  %147 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10, i64 0, i64 0), i64 46) #10
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %250, label %149

149:                                              ; preds = %146
  %150 = load i8, i8* %54, align 1
  %151 = load i64, i64* %57, align 8
  %152 = zext i8 %150 to i64
  br label %153

153:                                              ; preds = %149, %139
  %154 = phi i64 [ %152, %149 ], [ %140, %139 ]
  %155 = phi i64 [ %151, %149 ], [ %141, %139 ]
  %156 = phi i8 [ %150, %149 ], [ %142, %139 ]
  %157 = icmp slt i8 %156, 0
  %158 = select i1 %157, i64 %155, i64 %154
  %159 = icmp eq i64 %158, 48
  br i1 %159, label %160, label %167

160:                                              ; preds = %153
  %161 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.11, i64 0, i64 0), i64 48) #10
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %250, label %163

163:                                              ; preds = %160
  %164 = load i8, i8* %54, align 1
  %165 = load i64, i64* %57, align 8
  %166 = zext i8 %164 to i64
  br label %167

167:                                              ; preds = %163, %153
  %168 = phi i64 [ %166, %163 ], [ %154, %153 ]
  %169 = phi i64 [ %165, %163 ], [ %155, %153 ]
  %170 = phi i8 [ %164, %163 ], [ %156, %153 ]
  %171 = icmp slt i8 %170, 0
  %172 = select i1 %171, i64 %169, i64 %168
  %173 = icmp eq i64 %172, 58
  br i1 %173, label %174, label %181

174:                                              ; preds = %167
  %175 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i64 58) #10
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %250, label %177

177:                                              ; preds = %174
  %178 = load i8, i8* %54, align 1
  %179 = load i64, i64* %57, align 8
  %180 = zext i8 %178 to i64
  br label %181

181:                                              ; preds = %177, %167
  %182 = phi i64 [ %180, %177 ], [ %168, %167 ]
  %183 = phi i64 [ %179, %177 ], [ %169, %167 ]
  %184 = phi i8 [ %178, %177 ], [ %170, %167 ]
  %185 = icmp slt i8 %184, 0
  %186 = select i1 %185, i64 %183, i64 %182
  %187 = icmp eq i64 %186, 24
  br i1 %187, label %188, label %195

188:                                              ; preds = %181
  %189 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0), i64 24) #10
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %250, label %191

191:                                              ; preds = %188
  %192 = load i8, i8* %54, align 1
  %193 = load i64, i64* %57, align 8
  %194 = zext i8 %192 to i64
  br label %195

195:                                              ; preds = %191, %181
  %196 = phi i64 [ %194, %191 ], [ %182, %181 ]
  %197 = phi i64 [ %193, %191 ], [ %183, %181 ]
  %198 = phi i8 [ %192, %191 ], [ %184, %181 ]
  %199 = icmp slt i8 %198, 0
  %200 = select i1 %199, i64 %197, i64 %196
  %201 = icmp eq i64 %200, 19
  br i1 %201, label %202, label %209

202:                                              ; preds = %195
  %203 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i64 19) #10
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %250, label %205

205:                                              ; preds = %202
  %206 = load i8, i8* %54, align 1
  %207 = load i64, i64* %57, align 8
  %208 = zext i8 %206 to i64
  br label %209

209:                                              ; preds = %205, %195
  %210 = phi i64 [ %208, %205 ], [ %196, %195 ]
  %211 = phi i64 [ %207, %205 ], [ %197, %195 ]
  %212 = phi i8 [ %206, %205 ], [ %198, %195 ]
  %213 = icmp slt i8 %212, 0
  %214 = select i1 %213, i64 %211, i64 %210
  %215 = icmp eq i64 %214, 23
  br i1 %215, label %216, label %223

216:                                              ; preds = %209
  %217 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i64 23) #10
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %250, label %219

219:                                              ; preds = %216
  %220 = load i8, i8* %54, align 1
  %221 = load i64, i64* %57, align 8
  %222 = zext i8 %220 to i64
  br label %223

223:                                              ; preds = %219, %209
  %224 = phi i64 [ %222, %219 ], [ %210, %209 ]
  %225 = phi i64 [ %221, %219 ], [ %211, %209 ]
  %226 = phi i8 [ %220, %219 ], [ %212, %209 ]
  %227 = icmp slt i8 %226, 0
  %228 = select i1 %227, i64 %225, i64 %224
  %229 = icmp eq i64 %228, 35
  br i1 %229, label %230, label %237

230:                                              ; preds = %223
  %231 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i64 0, i64 0), i64 35) #10
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %250, label %233

233:                                              ; preds = %230
  %234 = load i8, i8* %54, align 1
  %235 = load i64, i64* %57, align 8
  %236 = zext i8 %234 to i64
  br label %237

237:                                              ; preds = %233, %223
  %238 = phi i64 [ %236, %233 ], [ %224, %223 ]
  %239 = phi i64 [ %235, %233 ], [ %225, %223 ]
  %240 = phi i8 [ %234, %233 ], [ %226, %223 ]
  %241 = icmp slt i8 %240, 0
  %242 = select i1 %241, i64 %239, i64 %238
  %243 = icmp eq i64 %242, 22
  br i1 %243, label %244, label %274

244:                                              ; preds = %237
  %245 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i64 22) #10
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %250, label %247

247:                                              ; preds = %244
  %248 = load i8, i8* %54, align 1
  %249 = load i64, i64* %57, align 8
  br label %274

250:                                              ; preds = %62, %76, %90, %104, %118, %132, %146, %160, %174, %188, %202, %216, %230, %244
  %251 = bitcast %"class.base::BasicStringPiece"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %251)
  %252 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 0
  store i8* %0, i8** %252, align 8
  %253 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %18, i64 0, i32 1
  store i64 %1, i64* %253, align 8
  %254 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %18, i64 0, i64 8) #10
  %255 = extractvalue { i8*, i64 } %254, 0
  %256 = extractvalue { i8*, i64 } %254, 1
  store i8* %255, i8** %252, align 8
  store i64 %256, i64* %253, align 8
  %257 = icmp eq i64 %256, 8
  br i1 %257, label %258, label %272

258:                                              ; preds = %250
  %259 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %259) #10
  %260 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %259, i8 0, i64 24, i1 false) #10
  %261 = call fastcc zeroext i1 @_ZN3netL20CheckForMagicNumbersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4spanIKNS_11MagicNumberELm18446744073709551615EEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(i8* %255, i64 8, i64 2, %"struct.net::MagicNumber"* getelementptr inbounds ([2 x %"struct.net::MagicNumber"], [2 x %"struct.net::MagicNumber"]* @_ZN3netL19kOfficeMagicNumbersE, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull %19) #10
  br i1 %261, label %264, label %262

262:                                              ; preds = %258
  %263 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i64 24) #10
  br label %264

264:                                              ; preds = %262, %258
  %265 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %266 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %265, i64 0, i32 1, i32 0
  %267 = load i8, i8* %266, align 1
  %268 = icmp slt i8 %267, 0
  br i1 %268, label %269, label %271

269:                                              ; preds = %264
  %270 = load i8*, i8** %260, align 8
  call void @_ZdlPv(i8* %270) #11
  br label %271

271:                                              ; preds = %269, %264
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %259) #10
  br label %272

272:                                              ; preds = %250, %271
  %273 = phi i1 [ true, %271 ], [ false, %250 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %251)
  br label %638

274:                                              ; preds = %247, %237
  %275 = phi i64 [ %249, %247 ], [ %239, %237 ]
  %276 = phi i8 [ %248, %247 ], [ %240, %237 ]
  %277 = icmp slt i8 %276, 0
  %278 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load i8*, i8** %278, align 8
  %280 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %281 = select i1 %277, i8* %279, i8* %280
  %282 = zext i8 %276 to i64
  %283 = select i1 %277, i64 %275, i64 %282
  %284 = tail call fastcc zeroext i1 @_ZN3netL17IsUnknownMimeTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %281, i64 %283)
  br i1 %284, label %285, label %304

285:                                              ; preds = %274
  %286 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #10
  %287 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %286) #10
  %288 = xor i1 %287, true
  %289 = icmp eq i32 %4, 1
  %290 = or i1 %289, %288
  br i1 %290, label %291, label %304

291:                                              ; preds = %285
  %292 = bitcast %"class.base::BasicStringPiece"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %292)
  %293 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 0
  store i8* %0, i8** %293, align 8
  %294 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %17, i64 0, i32 1
  store i64 %1, i64* %294, align 8
  %295 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %17, i64 0, i64 512) #10
  %296 = extractvalue { i8*, i64 } %295, 0
  %297 = extractvalue { i8*, i64 } %295, 1
  store i8* %296, i8** %293, align 8
  store i64 %297, i64* %294, align 8
  %298 = icmp eq i64 %297, 512
  %299 = zext i1 %298 to i8
  %300 = call { i8*, i64 } @_ZN4base19TrimWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_13TrimPositionsE(i8* %296, i64 %297, i32 1) #10
  %301 = extractvalue { i8*, i64 } %300, 0
  %302 = extractvalue { i8*, i64 } %300, 1
  %303 = call fastcc zeroext i1 @_ZN3netL20CheckForMagicNumbersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4spanIKNS_11MagicNumberELm18446744073709551615EEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(i8* %301, i64 %302, i64 18, %"struct.net::MagicNumber"* getelementptr inbounds ([18 x %"struct.net::MagicNumber"], [18 x %"struct.net::MagicNumber"]* @_ZN3netL14kSniffableTagsE, i64 0, i64 0), %"class.std::__1::basic_string"* %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %292)
  br i1 %303, label %638, label %304

304:                                              ; preds = %291, %285, %274
  %305 = phi i8 [ %299, %291 ], [ 1, %285 ], [ 1, %274 ]
  %306 = load i8, i8* %54, align 1
  %307 = icmp slt i8 %306, 0
  %308 = load i64, i64* %57, align 8
  %309 = zext i8 %306 to i64
  %310 = select i1 %307, i64 %308, i64 %309
  %311 = icmp eq i64 %310, 10
  br i1 %311, label %312, label %315

312:                                              ; preds = %304
  %313 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10) #10
  %314 = icmp eq i32 %313, 0
  br label %315

315:                                              ; preds = %304, %312
  %316 = phi i1 [ %314, %312 ], [ false, %304 ]
  %317 = or i1 %284, %316
  br i1 %317, label %318, label %395

318:                                              ; preds = %315
  %319 = bitcast <2 x i64>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %319)
  %320 = bitcast <2 x i64>* %14 to i8**
  store i8* %0, i8** %320, align 16
  %321 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %15, i64 0, i32 1
  store i64 %1, i64* %321, align 8
  %322 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %15, i64 0, i64 1024) #10
  %323 = extractvalue { i8*, i64 } %322, 0
  %324 = extractvalue { i8*, i64 } %322, 1
  store i8* %323, i8** %320, align 16
  store i64 %324, i64* %321, align 8
  %325 = icmp eq i64 %324, 1024
  %326 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %326) #10
  %327 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %326, i8 0, i64 24, i1 false) #10
  %328 = call fastcc zeroext i1 @_ZN3netL20CheckForMagicNumbersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4spanIKNS_11MagicNumberELm18446744073709551615EEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(i8* %323, i64 %324, i64 3, %"struct.net::MagicNumber"* getelementptr inbounds ([3 x %"struct.net::MagicNumber"], [3 x %"struct.net::MagicNumber"]* @_ZN3netL14kByteOrderMarkE, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull %16) #10
  br i1 %328, label %329, label %343

329:                                              ; preds = %318
  %330 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %331 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %330, i64 0, i32 1, i32 0
  %332 = load i8, i8* %331, align 1
  %333 = icmp slt i8 %332, 0
  br i1 %333, label %334, label %338

334:                                              ; preds = %329
  %335 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 10, i64* %335, align 8
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load i8*, i8** %336, align 8
  br label %340

338:                                              ; preds = %329
  store i8 10, i8* %331, align 1
  %339 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %340

340:                                              ; preds = %338, %334
  %341 = phi i8* [ %337, %334 ], [ %339, %338 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %341, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #10
  %342 = getelementptr inbounds i8, i8* %341, i64 10
  store i8 0, i8* %342, align 1
  br label %381

343:                                              ; preds = %318
  %344 = load <2 x i64>, <2 x i64>* %14, align 16
  %345 = bitcast <2 x i64>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %345) #10
  %346 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %13, i64 0, i32 1
  store <2 x i64> %344, <2 x i64>* %12, align 16
  %347 = extractelement <2 x i64> %344, i32 1
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %365, label %349

349:                                              ; preds = %343, %359
  %350 = phi i64 [ %360, %359 ], [ 0, %343 ]
  %351 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %13, i64 %350) #10
  %352 = load i8, i8* %351, align 1
  %353 = icmp ult i8 %352, 32
  br i1 %353, label %354, label %359

354:                                              ; preds = %349
  %355 = zext i8 %352 to i32
  %356 = shl i32 1, %355
  %357 = and i32 %356, -134231553
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %363

359:                                              ; preds = %354, %349
  %360 = add nuw i64 %350, 1
  %361 = load i64, i64* %346, align 8
  %362 = icmp ult i64 %360, %361
  br i1 %362, label %349, label %365

363:                                              ; preds = %354
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %345) #10
  %364 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i64 24) #10
  br label %381

365:                                              ; preds = %359, %343
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %345) #10
  %366 = zext i1 %325 to i8
  %367 = and i8 %305, %366
  %368 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %369 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %368, i64 0, i32 1, i32 0
  %370 = load i8, i8* %369, align 1
  %371 = icmp slt i8 %370, 0
  br i1 %371, label %372, label %376

372:                                              ; preds = %365
  %373 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 10, i64* %373, align 8
  %374 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load i8*, i8** %374, align 8
  br label %378

376:                                              ; preds = %365
  store i8 10, i8* %369, align 1
  %377 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %378

378:                                              ; preds = %376, %372
  %379 = phi i8* [ %375, %372 ], [ %377, %376 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %379, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #10
  %380 = getelementptr inbounds i8, i8* %379, i64 10
  store i8 0, i8* %380, align 1
  br label %381

381:                                              ; preds = %378, %363, %340
  %382 = phi i8 [ %305, %340 ], [ %367, %378 ], [ %305, %363 ]
  %383 = phi i1 [ false, %340 ], [ false, %378 ], [ true, %363 ]
  %384 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %385 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %384, i64 0, i32 1, i32 0
  %386 = load i8, i8* %385, align 1
  %387 = icmp slt i8 %386, 0
  br i1 %387, label %388, label %390

388:                                              ; preds = %381
  %389 = load i8*, i8** %327, align 8
  call void @_ZdlPv(i8* %389) #11
  br label %390

390:                                              ; preds = %381, %388
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %326) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %319)
  %391 = xor i1 %316, true
  %392 = or i1 %383, %391
  br i1 %392, label %395, label %393

393:                                              ; preds = %390
  %394 = icmp ne i8 %382, 0
  br label %638

395:                                              ; preds = %390, %315
  %396 = phi i8 [ %382, %390 ], [ %305, %315 ]
  %397 = load i8, i8* %54, align 1
  %398 = icmp slt i8 %397, 0
  %399 = load i64, i64* %57, align 8
  %400 = zext i8 %397 to i64
  %401 = select i1 %398, i64 %399, i64 %400
  %402 = icmp eq i64 %401, 8
  br i1 %402, label %403, label %410

403:                                              ; preds = %395
  %404 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 8) #10
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %420, label %406

406:                                              ; preds = %403
  %407 = load i8, i8* %54, align 1
  %408 = load i64, i64* %57, align 8
  %409 = zext i8 %407 to i64
  br label %410

410:                                              ; preds = %406, %395
  %411 = phi i64 [ %409, %406 ], [ %400, %395 ]
  %412 = phi i64 [ %408, %406 ], [ %399, %395 ]
  %413 = phi i8 [ %407, %406 ], [ %397, %395 ]
  %414 = icmp slt i8 %413, 0
  %415 = select i1 %414, i64 %412, i64 %411
  %416 = icmp eq i64 %415, 15
  br i1 %416, label %417, label %467

417:                                              ; preds = %410
  %418 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i64 15) #10
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %467

420:                                              ; preds = %417, %403
  %421 = bitcast %"class.base::BasicStringPiece"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %421)
  %422 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 0
  store i8* %0, i8** %422, align 8
  %423 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %11, i64 0, i32 1
  store i64 %1, i64* %423, align 8
  %424 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %11, i64 0, i64 300) #10
  %425 = extractvalue { i8*, i64 } %424, 0
  %426 = extractvalue { i8*, i64 } %424, 1
  store i8* %425, i8** %422, align 8
  store i64 %426, i64* %423, align 8
  %427 = icmp eq i64 %426, 300
  %428 = zext i1 %427 to i8
  %429 = and i8 %396, %428
  br label %430

430:                                              ; preds = %455, %420
  %431 = phi i64 [ %426, %420 ], [ %459, %455 ]
  %432 = phi i64 [ 0, %420 ], [ %456, %455 ]
  %433 = phi i64 [ 0, %420 ], [ %457, %455 ]
  %434 = icmp ugt i64 %431, %432
  br i1 %434, label %435, label %461

435:                                              ; preds = %430
  %436 = load i8*, i8** %422, align 8
  %437 = getelementptr inbounds i8, i8* %436, i64 %432
  %438 = sub i64 %431, %432
  %439 = call i8* @memchr(i8* %437, i32 60, i64 %438) #10
  %440 = icmp eq i8* %439, null
  br i1 %440, label %460, label %441

441:                                              ; preds = %435
  %442 = ptrtoint i8* %439 to i64
  %443 = ptrtoint i8* %436 to i64
  %444 = sub i64 %442, %443
  %445 = icmp eq i64 %444, -1
  br i1 %445, label %460, label %446

446:                                              ; preds = %441
  %447 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %11, i64 %444, i64 -1) #10
  %448 = extractvalue { i8*, i64 } %447, 0
  %449 = extractvalue { i8*, i64 } %447, 1
  %450 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %448, i64 %449, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0), i64 5, i32 1) #10
  br i1 %450, label %455, label %451

451:                                              ; preds = %446
  %452 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %448, i64 %449, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i64 0, i64 0), i64 9, i32 1) #10
  br i1 %452, label %455, label %453

453:                                              ; preds = %451
  %454 = call fastcc zeroext i1 @_ZN3netL20CheckForMagicNumbersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4spanIKNS_11MagicNumberELm18446744073709551615EEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(i8* %448, i64 %449, i64 2, %"struct.net::MagicNumber"* getelementptr inbounds ([2 x %"struct.net::MagicNumber"], [2 x %"struct.net::MagicNumber"]* @_ZN3netL9kMagicXMLE, i64 0, i64 0), %"class.std::__1::basic_string"* %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %421)
  br label %638

455:                                              ; preds = %451, %446
  %456 = add nuw i64 %444, 1
  %457 = add nuw nsw i64 %433, 1
  %458 = icmp eq i64 %457, 5
  %459 = load i64, i64* %423, align 8
  br i1 %458, label %461, label %430

460:                                              ; preds = %441, %435
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %421)
  br label %465

461:                                              ; preds = %455, %430
  %462 = phi i64 [ %431, %430 ], [ %459, %455 ]
  %463 = phi i64 [ %432, %430 ], [ %456, %455 ]
  %464 = icmp ult i64 %463, %462
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %421)
  br i1 %464, label %638, label %465

465:                                              ; preds = %460, %461
  %466 = icmp ne i8 %429, 0
  br label %638

467:                                              ; preds = %410, %417
  %468 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %468)
  %469 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 0
  store i8* %0, i8** %469, align 8
  %470 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 1
  store i64 %1, i64* %470, align 8
  %471 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 5, i32 1
  %472 = load i32, i32* %471, align 4
  %473 = icmp slt i32 %472, 1
  br i1 %473, label %488, label %474

474:                                              ; preds = %467
  %475 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 5, i32 0
  %476 = load i32, i32* %475, align 4
  %477 = sext i32 %476 to i64
  %478 = bitcast %class.GURL* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %479 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %478, i64 0, i32 1, i32 0
  %480 = load i8, i8* %479, align 1
  %481 = icmp slt i8 %480, 0
  %482 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %483 = load i8*, i8** %482, align 8
  %484 = bitcast %class.GURL* %2 to i8*
  %485 = select i1 %481, i8* %483, i8* %484
  %486 = getelementptr inbounds i8, i8* %485, i64 %477
  %487 = sext i32 %472 to i64
  br label %488

488:                                              ; preds = %474, %467
  %489 = phi i8* [ %486, %474 ], [ null, %467 ]
  %490 = phi i64 [ %487, %474 ], [ 0, %467 ]
  %491 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %489, i64 %490, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0), i64 4, i32 0) #10
  br i1 %491, label %493, label %492

492:                                              ; preds = %488
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %468)
  br label %501

493:                                              ; preds = %488
  %494 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %10, i64 0, i64 42) #10
  %495 = extractvalue { i8*, i64 } %494, 0
  %496 = extractvalue { i8*, i64 } %494, 1
  store i8* %495, i8** %469, align 8
  store i64 %496, i64* %470, align 8
  %497 = icmp eq i64 %496, 42
  %498 = zext i1 %497 to i8
  %499 = and i8 %396, %498
  %500 = call fastcc zeroext i1 @_ZN3netL20CheckForMagicNumbersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4spanIKNS_11MagicNumberELm18446744073709551615EEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(i8* %495, i64 %496, i64 2, %"struct.net::MagicNumber"* getelementptr inbounds ([2 x %"struct.net::MagicNumber"], [2 x %"struct.net::MagicNumber"]* @_ZZN3netL8SniffCRXEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERK4GURLPbPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEEE16kCRXMagicNumbers, i64 0, i64 0), %"class.std::__1::basic_string"* %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %468)
  br i1 %500, label %638, label %501

501:                                              ; preds = %492, %493
  %502 = phi i8 [ %396, %492 ], [ %499, %493 ]
  %503 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %503)
  %504 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  store i8* %0, i8** %504, align 8
  %505 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  store i64 %1, i64* %505, align 8
  %506 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %8, i64 0, i64 8) #10
  %507 = extractvalue { i8*, i64 } %506, 0
  %508 = extractvalue { i8*, i64 } %506, 1
  store i8* %507, i8** %504, align 8
  store i64 %508, i64* %505, align 8
  %509 = icmp eq i64 %508, 8
  %510 = zext i1 %509 to i8
  %511 = and i8 %502, %510
  %512 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %512) #10
  %513 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %514 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %512, i8 0, i64 24, i1 false) #10
  %515 = call fastcc zeroext i1 @_ZN3netL20CheckForMagicNumbersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4spanIKNS_11MagicNumberELm18446744073709551615EEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(i8* %507, i64 %508, i64 2, %"struct.net::MagicNumber"* getelementptr inbounds ([2 x %"struct.net::MagicNumber"], [2 x %"struct.net::MagicNumber"]* @_ZN3netL19kOfficeMagicNumbersE, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull %9) #10
  br i1 %515, label %516, label %596

516:                                              ; preds = %501
  %517 = load i32, i32* %471, align 4
  %518 = icmp slt i32 %517, 1
  br i1 %518, label %533, label %519

519:                                              ; preds = %516
  %520 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 2, i32 5, i32 0
  %521 = load i32, i32* %520, align 4
  %522 = sext i32 %521 to i64
  %523 = bitcast %class.GURL* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %524 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %523, i64 0, i32 1, i32 0
  %525 = load i8, i8* %524, align 1
  %526 = icmp slt i8 %525, 0
  %527 = getelementptr inbounds %class.GURL, %class.GURL* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %528 = load i8*, i8** %527, align 8
  %529 = bitcast %class.GURL* %2 to i8*
  %530 = select i1 %526, i8* %528, i8* %529
  %531 = getelementptr inbounds i8, i8* %530, i64 %522
  %532 = sext i32 %517 to i64
  br label %533

533:                                              ; preds = %519, %516
  %534 = phi i8* [ %531, %519 ], [ null, %516 ]
  %535 = phi i64 [ %532, %519 ], [ 0, %516 ]
  %536 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %534, i64 %535, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i64 0, i64 0), i64 4, i32 1) #10
  br i1 %536, label %539, label %537

537:                                              ; preds = %533
  %538 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %534, i64 %535, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.61, i64 0, i64 0), i64 4, i32 1) #10
  br i1 %538, label %539, label %604

539:                                              ; preds = %610, %608, %606, %604, %537, %533
  %540 = phi %"struct.net::OfficeExtensionType"* [ getelementptr inbounds ([6 x %"struct.net::OfficeExtensionType"], [6 x %"struct.net::OfficeExtensionType"]* @_ZN3netL21kOfficeExtensionTypesE, i64 0, i64 0), %533 ], [ getelementptr inbounds ([6 x %"struct.net::OfficeExtensionType"], [6 x %"struct.net::OfficeExtensionType"]* @_ZN3netL21kOfficeExtensionTypesE, i64 0, i64 1), %537 ], [ getelementptr inbounds ([6 x %"struct.net::OfficeExtensionType"], [6 x %"struct.net::OfficeExtensionType"]* @_ZN3netL21kOfficeExtensionTypesE, i64 0, i64 2), %604 ], [ getelementptr inbounds ([6 x %"struct.net::OfficeExtensionType"], [6 x %"struct.net::OfficeExtensionType"]* @_ZN3netL21kOfficeExtensionTypesE, i64 0, i64 3), %606 ], [ getelementptr inbounds ([6 x %"struct.net::OfficeExtensionType"], [6 x %"struct.net::OfficeExtensionType"]* @_ZN3netL21kOfficeExtensionTypesE, i64 0, i64 4), %608 ], [ getelementptr inbounds ([6 x %"struct.net::OfficeExtensionType"], [6 x %"struct.net::OfficeExtensionType"]* @_ZN3netL21kOfficeExtensionTypesE, i64 0, i64 5), %610 ]
  %541 = getelementptr inbounds %"struct.net::OfficeExtensionType", %"struct.net::OfficeExtensionType"* %540, i64 0, i32 0
  %542 = load i32, i32* %541, align 8
  %543 = icmp eq i32 %542, 3
  br i1 %543, label %596, label %544

544:                                              ; preds = %539
  %545 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %546 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %545, i64 0, i32 1, i32 0
  %547 = load i8, i8* %546, align 1
  %548 = icmp slt i8 %547, 0
  %549 = load i64, i64* %514, align 8
  %550 = zext i8 %547 to i64
  %551 = select i1 %548, i64 %549, i64 %550
  %552 = icmp eq i64 %551, 3
  br i1 %552, label %553, label %579

553:                                              ; preds = %544
  %554 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %9, i64 0, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i64 0, i64 0), i64 3) #10
  %555 = icmp eq i32 %554, 0
  br i1 %555, label %560, label %556

556:                                              ; preds = %553
  %557 = load i8, i8* %546, align 1
  %558 = load i64, i64* %514, align 8
  %559 = zext i8 %557 to i64
  br label %579

560:                                              ; preds = %553
  switch i32 %542, label %596 [
    i32 0, label %561
    i32 1, label %575
    i32 2, label %577
  ]

561:                                              ; preds = %560
  %562 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %563 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %562, i64 0, i32 1, i32 0
  %564 = load i8, i8* %563, align 1
  %565 = icmp slt i8 %564, 0
  br i1 %565, label %566, label %570

566:                                              ; preds = %561
  %567 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 18, i64* %567, align 8
  %568 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %569 = load i8*, i8** %568, align 8
  br label %572

570:                                              ; preds = %561
  store i8 18, i8* %563, align 1
  %571 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %572

572:                                              ; preds = %570, %566
  %573 = phi i8* [ %569, %566 ], [ %571, %570 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %573, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i64 18, i1 false) #10
  %574 = getelementptr inbounds i8, i8* %573, i64 18
  store i8 0, i8* %574, align 1
  br label %596

575:                                              ; preds = %560
  %576 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i64 24) #10
  br label %596

577:                                              ; preds = %560
  %578 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0), i64 29) #10
  br label %596

579:                                              ; preds = %556, %544
  %580 = phi i64 [ %559, %556 ], [ %550, %544 ]
  %581 = phi i64 [ %558, %556 ], [ %549, %544 ]
  %582 = phi i8 [ %557, %556 ], [ %547, %544 ]
  %583 = icmp slt i8 %582, 0
  %584 = select i1 %583, i64 %581, i64 %580
  %585 = icmp eq i64 %584, 5
  br i1 %585, label %586, label %596

586:                                              ; preds = %579
  %587 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* nonnull %9, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i64 5) #10
  %588 = icmp eq i32 %587, 0
  br i1 %588, label %589, label %596

589:                                              ; preds = %586
  switch i32 %542, label %596 [
    i32 0, label %590
    i32 1, label %592
    i32 2, label %594
  ]

590:                                              ; preds = %589
  %591 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.7, i64 0, i64 0), i64 71) #10
  br label %596

592:                                              ; preds = %589
  %593 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8, i64 0, i64 0), i64 65) #10
  br label %596

594:                                              ; preds = %589
  %595 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %5, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.9, i64 0, i64 0), i64 73) #10
  br label %596

596:                                              ; preds = %610, %594, %592, %590, %589, %586, %579, %577, %575, %572, %560, %539, %501
  %597 = phi i1 [ false, %501 ], [ false, %539 ], [ false, %586 ], [ false, %589 ], [ false, %560 ], [ true, %572 ], [ true, %575 ], [ true, %577 ], [ true, %590 ], [ true, %592 ], [ true, %594 ], [ false, %579 ], [ false, %610 ]
  %598 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %599 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %598, i64 0, i32 1, i32 0
  %600 = load i8, i8* %599, align 1
  %601 = icmp slt i8 %600, 0
  br i1 %601, label %602, label %612

602:                                              ; preds = %596
  %603 = load i8*, i8** %513, align 8
  call void @_ZdlPv(i8* %603) #11
  br label %612

604:                                              ; preds = %537
  %605 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %534, i64 %535, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0), i64 4, i32 1) #10
  br i1 %605, label %539, label %606

606:                                              ; preds = %604
  %607 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %534, i64 %535, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i64 0, i64 0), i64 5, i32 1) #10
  br i1 %607, label %539, label %608

608:                                              ; preds = %606
  %609 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %534, i64 %535, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i64 0, i64 0), i64 5, i32 1) #10
  br i1 %609, label %539, label %610

610:                                              ; preds = %608
  %611 = call zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %534, i64 %535, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0), i64 5, i32 1) #10
  br i1 %611, label %539, label %596

612:                                              ; preds = %596, %602
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %512) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %503)
  br i1 %597, label %638, label %613

613:                                              ; preds = %612
  %614 = load i8, i8* %54, align 1
  %615 = icmp slt i8 %614, 0
  %616 = load i64, i64* %57, align 8
  %617 = zext i8 %614 to i64
  %618 = select i1 %615, i64 %616, i64 %617
  %619 = icmp eq i64 %618, 24
  br i1 %619, label %620, label %625

620:                                              ; preds = %613
  %621 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %3, i64 0, i64 -1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i64 24) #10
  %622 = icmp eq i32 %621, 0
  br i1 %622, label %623, label %625

623:                                              ; preds = %620
  %624 = icmp ne i8 %511, 0
  br label %638

625:                                              ; preds = %613, %620
  %626 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %626)
  %627 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  store i8* %0, i8** %627, align 8
  %628 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  store i64 %1, i64* %628, align 8
  %629 = call { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"* nonnull %7, i64 0, i64 42) #10
  %630 = extractvalue { i8*, i64 } %629, 0
  %631 = extractvalue { i8*, i64 } %629, 1
  store i8* %630, i8** %627, align 8
  store i64 %631, i64* %628, align 8
  %632 = call fastcc zeroext i1 @_ZN3netL20CheckForMagicNumbersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4spanIKNS_11MagicNumberELm18446744073709551615EEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(i8* %630, i64 %631, i64 24, %"struct.net::MagicNumber"* getelementptr inbounds ([24 x %"struct.net::MagicNumber"], [24 x %"struct.net::MagicNumber"]* @_ZN3netL13kMagicNumbersE, i64 0, i64 0), %"class.std::__1::basic_string"* %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %626)
  br i1 %632, label %638, label %633

633:                                              ; preds = %625
  %634 = icmp eq i64 %631, 42
  %635 = zext i1 %634 to i8
  %636 = and i8 %511, %635
  %637 = icmp ne i8 %636, 0
  br label %638

638:                                              ; preds = %453, %291, %625, %612, %493, %461, %633, %623, %465, %393, %272
  %639 = phi i1 [ %273, %272 ], [ true, %291 ], [ %466, %465 ], [ %624, %623 ], [ %637, %633 ], [ %394, %393 ], [ true, %461 ], [ true, %493 ], [ true, %612 ], [ true, %625 ], [ true, %453 ]
  ret i1 %639
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net13SniffMimeTypeEPKcmRK4GURLRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEENS_25ForceSniffFileUrlsForHtmlEPSB_(i8*, i64, %class.GURL* dereferenceable(120), %"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %7 = tail call zeroext i1 @_ZN3net13SniffMimeTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEERK4GURLRKNS2_12basic_stringIcS4_NS2_9allocatorIcEEEENS_25ForceSniffFileUrlsForHtmlEPSC_(i8* %0, i64 %1, %class.GURL* dereferenceable(120) %2, %"class.std::__1::basic_string"* dereferenceable(24) %3, i32 %4, %"class.std::__1::basic_string"* %5)
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net26SniffMimeTypeFromLocalDataEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %4 = tail call fastcc zeroext i1 @_ZN3netL20CheckForMagicNumbersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4spanIKNS_11MagicNumberELm18446744073709551615EEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(i8* %0, i64 %1, i64 27, %"struct.net::MagicNumber"* getelementptr inbounds ([27 x %"struct.net::MagicNumber"], [27 x %"struct.net::MagicNumber"]* @_ZN3netL18kExtraMagicNumbersE, i64 0, i64 0), %"class.std::__1::basic_string"* %2)
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i1 @_ZN3netL20CheckForMagicNumbersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4spanIKNS_11MagicNumberELm18446744073709551615EEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(i8* %0, i64 %1, i64 24, %"struct.net::MagicNumber"* getelementptr inbounds ([24 x %"struct.net::MagicNumber"], [24 x %"struct.net::MagicNumber"]* @_ZN3netL13kMagicNumbersE, i64 0, i64 0), %"class.std::__1::basic_string"* %2)
  br label %7

7:                                                ; preds = %3, %5
  %8 = phi i1 [ %6, %5 ], [ true, %3 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3netL20CheckForMagicNumbersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4spanIKNS_11MagicNumberELm18446744073709551615EEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(i8*, i64, i64, %"struct.net::MagicNumber"*, %"class.std::__1::basic_string"*) unnamed_addr #0 {
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = alloca %"class.base::BasicStringPiece", align 8
  %11 = alloca %"class.base::CheckedContiguousIterator", align 8
  %12 = alloca %"class.base::CheckedContiguousIterator", align 8
  %13 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %11, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.net::MagicNumber", %"struct.net::MagicNumber"* %3, i64 %2
  %16 = bitcast %"class.base::CheckedContiguousIterator"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN3net11MagicNumberEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %11, %"struct.net::MagicNumber"* %3, %"struct.net::MagicNumber"* %3, %"struct.net::MagicNumber"* %15) #10
  %17 = bitcast %"class.base::CheckedContiguousIterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %12, i64 0, i32 1
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call void @_ZN4base25CheckedContiguousIteratorIKN3net11MagicNumberEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"* nonnull %12, %"struct.net::MagicNumber"* %3, %"struct.net::MagicNumber"* %15, %"struct.net::MagicNumber"* %15) #10
  call void @_ZNK4base25CheckedContiguousIteratorIKN3net11MagicNumberEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %11, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %12) #10
  %20 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %14, align 8
  %21 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %18, align 8
  %22 = icmp eq %"struct.net::MagicNumber"* %20, %21
  br i1 %22, label %137, label %23

23:                                               ; preds = %5
  %24 = bitcast %"class.base::BasicStringPiece"* %6 to i8*
  %25 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  %26 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  %29 = bitcast %"class.base::BasicStringPiece"* %7 to i64*
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %31 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %32 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  %33 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  %34 = bitcast %"class.base::BasicStringPiece"* %10 to i8*
  %35 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %36 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %37 = bitcast %"class.base::BasicStringPiece"* %10 to i64*
  %38 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %10, i64 0, i32 1
  br label %39

39:                                               ; preds = %23, %132
  %40 = call dereferenceable(40) %"struct.net::MagicNumber"* @_ZNK4base25CheckedContiguousIteratorIKN3net11MagicNumberEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %11)
  %41 = getelementptr inbounds %"struct.net::MagicNumber", %"struct.net::MagicNumber"* %40, i64 0, i32 1, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = icmp ugt i64 %42, %1
  br i1 %43, label %132, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"struct.net::MagicNumber", %"struct.net::MagicNumber"* %40, i64 0, i32 2
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.net::MagicNumber", %"struct.net::MagicNumber"* %40, i64 0, i32 1, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %0, i64 %1, i8* %50, i64 %42, i32 1) #10
  br i1 %51, label %102, label %132

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"struct.net::MagicNumber", %"struct.net::MagicNumber"* %40, i64 0, i32 3
  %54 = load i8*, i8** %53, align 8
  %55 = icmp eq i8* %54, null
  %56 = getelementptr inbounds %"struct.net::MagicNumber", %"struct.net::MagicNumber"* %40, i64 0, i32 1, i32 0
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  br i1 %55, label %59, label %76

59:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #10
  store i8* %0, i8** %35, align 8
  store i64 %1, i64* %36, align 8
  store i64 %58, i64* %37, align 8
  store i64 %42, i64* %38, align 8
  %60 = icmp eq i64 %42, 0
  br i1 %60, label %99, label %61

61:                                               ; preds = %59, %72
  %62 = phi i64 [ %73, %72 ], [ 0, %59 ]
  %63 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %10, i64 %62) #10
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 46
  br i1 %65, label %72, label %66

66:                                               ; preds = %61
  %67 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %10, i64 %62) #10
  %68 = load i8, i8* %67, align 1
  %69 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %9, i64 %62) #10
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %68, %70
  br i1 %71, label %72, label %98

72:                                               ; preds = %66, %61
  %73 = add nuw i64 %62, 1
  %74 = load i64, i64* %38, align 8
  %75 = icmp ult i64 %73, %74
  br i1 %75, label %61, label %99

76:                                               ; preds = %52
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #10
  store i8* %0, i8** %27, align 8
  store i64 %1, i64* %28, align 8
  store i64 %58, i64* %29, align 8
  store i64 %42, i64* %30, align 8
  store i8* %54, i8** %31, align 8
  store i64 %42, i64* %32, align 8
  %77 = icmp eq i64 %42, 0
  br i1 %77, label %96, label %78

78:                                               ; preds = %76, %92
  %79 = phi i64 [ %93, %92 ], [ 0, %76 ]
  %80 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %7, i64 %79) #10
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 46
  br i1 %82, label %92, label %83

83:                                               ; preds = %78
  %84 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %7, i64 %79) #10
  %85 = load i8, i8* %84, align 1
  %86 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %8, i64 %79) #10
  %87 = load i8, i8* %86, align 1
  %88 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %6, i64 %79) #10
  %89 = load i8, i8* %88, align 1
  %90 = and i8 %89, %87
  %91 = icmp eq i8 %85, %90
  br i1 %91, label %92, label %97

92:                                               ; preds = %83, %78
  %93 = add nuw i64 %79, 1
  %94 = load i64, i64* %30, align 8
  %95 = icmp ult i64 %93, %94
  br i1 %95, label %78, label %96

96:                                               ; preds = %76, %92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #10
  br label %99

97:                                               ; preds = %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #10
  br label %132

98:                                               ; preds = %66
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #10
  br label %132

99:                                               ; preds = %59, %72, %96
  %100 = phi i8* [ %25, %96 ], [ %33, %72 ], [ %33, %59 ]
  %101 = phi i8* [ %26, %96 ], [ %34, %72 ], [ %34, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #10
  br label %102

102:                                              ; preds = %48, %99
  %103 = getelementptr inbounds %"struct.net::MagicNumber", %"struct.net::MagicNumber"* %40, i64 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = load i8, i8* %104, align 1
  %106 = call i1 @llvm.is.constant.i8(i8 %105) #10
  br i1 %106, label %107, label %130

107:                                              ; preds = %102
  %108 = call i64 @strlen(i8* %104) #10
  %109 = icmp ult i64 %108, 23
  br i1 %109, label %110, label %128

110:                                              ; preds = %107
  %111 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %119

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %108, i64* %116, align 8
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  br label %122

119:                                              ; preds = %110
  %120 = trunc i64 %108 to i8
  store i8 %120, i8* %112, align 1
  %121 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  br label %122

122:                                              ; preds = %119, %115
  %123 = phi i8* [ %118, %115 ], [ %121, %119 ]
  %124 = icmp eq i64 %108, 0
  br i1 %124, label %126, label %125

125:                                              ; preds = %122
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %123, i8* align 1 %104, i64 %108, i1 false) #10
  br label %126

126:                                              ; preds = %125, %122
  %127 = getelementptr inbounds i8, i8* %123, i64 %108
  store i8 0, i8* %127, align 1
  br label %137

128:                                              ; preds = %107
  %129 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %4, i8* %104, i64 %108) #10
  br label %137

130:                                              ; preds = %102
  %131 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %4, i8* %104) #10
  br label %137

132:                                              ; preds = %97, %48, %98, %39
  %133 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN3net11MagicNumberEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %11)
  call void @_ZNK4base25CheckedContiguousIteratorIKN3net11MagicNumberEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"* nonnull %11, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %12) #10
  %134 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %14, align 8
  %135 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %18, align 8
  %136 = icmp eq %"struct.net::MagicNumber"* %134, %135
  br i1 %136, label %137, label %39

137:                                              ; preds = %132, %5, %126, %128, %130
  %138 = phi i1 [ true, %130 ], [ true, %128 ], [ true, %126 ], [ false, %5 ], [ false, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  ret i1 %138
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net26SniffMimeTypeFromLocalDataEPKcmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 {
  %4 = tail call fastcc zeroext i1 @_ZN3netL20CheckForMagicNumbersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4spanIKNS_11MagicNumberELm18446744073709551615EEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(i8* %0, i64 %1, i64 27, %"struct.net::MagicNumber"* getelementptr inbounds ([27 x %"struct.net::MagicNumber"], [27 x %"struct.net::MagicNumber"]* @_ZN3netL18kExtraMagicNumbersE, i64 0, i64 0), %"class.std::__1::basic_string"* %2) #10
  br i1 %4, label %7, label %5

5:                                                ; preds = %3
  %6 = tail call fastcc zeroext i1 @_ZN3netL20CheckForMagicNumbersEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_4spanIKNS_11MagicNumberELm18446744073709551615EEEPNS2_12basic_stringIcS4_NS2_9allocatorIcEEEE(i8* %0, i64 %1, i64 24, %"struct.net::MagicNumber"* getelementptr inbounds ([24 x %"struct.net::MagicNumber"], [24 x %"struct.net::MagicNumber"]* @_ZN3netL13kMagicNumbersE, i64 0, i64 0), %"class.std::__1::basic_string"* %2) #10
  br label %7

7:                                                ; preds = %3, %5
  %8 = phi i1 [ %6, %5 ], [ true, %3 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net15LooksLikeBinaryEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  store i8* %0, i8** %4, align 8
  %5 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = icmp eq i64 %1, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %2, %17
  %8 = phi i64 [ %18, %17 ], [ 0, %2 ]
  %9 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %3, i64 %8) #10
  %10 = load i8, i8* %9, align 1
  %11 = icmp ult i8 %10, 32
  br i1 %11, label %12, label %17

12:                                               ; preds = %7
  %13 = zext i8 %10 to i32
  %14 = shl i32 1, %13
  %15 = and i32 %14, -134231553
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %7, %12
  %18 = add nuw i64 %8, 1
  %19 = load i64, i64* %5, align 8
  %20 = icmp ult i64 %18, %19
  br i1 %20, label %7, label %21

21:                                               ; preds = %12, %17, %2
  %22 = phi i1 [ false, %2 ], [ false, %17 ], [ true, %12 ]
  ret i1 %22
}

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
declare { i8*, i64 } @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #6

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare { i8*, i64 } @_ZN4base19TrimWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_13TrimPositionsE(i8*, i64, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN4base8EndsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"struct.net::MagicNumber"* @_ZNK4base25CheckedContiguousIteratorIKN3net11MagicNumberEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %7, align 8
  %11 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %8, align 8
  %12 = icmp eq %"struct.net::MagicNumber"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.net::MagicNumber"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN3net11MagicNumberEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %17 = bitcast %"struct.net::MagicNumber"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN3net11MagicNumberEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.71, i64 0, i64 0), i8* %16, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.67, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %26 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %7, align 8
  ret %"struct.net::MagicNumber"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorIKN3net11MagicNumberEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %7, align 8
  %11 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %8, align 8
  %12 = icmp eq %"struct.net::MagicNumber"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"struct.net::MagicNumber"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN3net11MagicNumberEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %17 = bitcast %"struct.net::MagicNumber"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN3net11MagicNumberEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.71, i64 0, i64 0), i8* %16, i8* %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.67, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %26 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %7, align 8
  %27 = getelementptr inbounds %"struct.net::MagicNumber", %"struct.net::MagicNumber"* %26, i64 1
  store %"struct.net::MagicNumber"* %27, %"struct.net::MagicNumber"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN3net11MagicNumberEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #8 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #10
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKN3net11MagicNumberEEC2EPS3_S5_S5_(%"class.base::CheckedContiguousIterator"*, %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"struct.net::MagicNumber"*, align 8
  %8 = alloca %"struct.net::MagicNumber"*, align 8
  %9 = alloca %"struct.net::MagicNumber"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"struct.net::MagicNumber"* %1, %"struct.net::MagicNumber"** %7, align 8
  store %"struct.net::MagicNumber"* %2, %"struct.net::MagicNumber"** %8, align 8
  store %"struct.net::MagicNumber"* %3, %"struct.net::MagicNumber"** %9, align 8
  %14 = ptrtoint %"struct.net::MagicNumber"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"struct.net::MagicNumber"* %2 to i64
  %18 = bitcast %"struct.net::MagicNumber"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"struct.net::MagicNumber"* %3 to i64
  %21 = bitcast %"struct.net::MagicNumber"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"struct.net::MagicNumber"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"struct.net::MagicNumber"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN3net11MagicNumberEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %30 = bitcast %"struct.net::MagicNumber"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN3net11MagicNumberEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.66, i64 0, i64 0), i8* %29, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.67, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %8, align 8
  %43 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %9, align 8
  %44 = icmp ugt %"struct.net::MagicNumber"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"struct.net::MagicNumber"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN3net11MagicNumberEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %49 = bitcast %"struct.net::MagicNumber"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN3net11MagicNumberEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68, i64 0, i64 0), i8* %48, i8* %50) #10
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.67, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #10
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKN3net11MagicNumberEE15CheckComparableERKS4_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %11, align 8
  %15 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %12, align 8
  %16 = icmp eq %"struct.net::MagicNumber"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN3net11MagicNumberEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN3net11MagicNumberEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.69, i64 0, i64 0), i8* %20, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.67, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %32, align 8
  %36 = load %"struct.net::MagicNumber"*, %"struct.net::MagicNumber"** %33, align 8
  %37 = icmp eq %"struct.net::MagicNumber"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"struct.net::MagicNumber"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN3net11MagicNumberEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  %42 = bitcast %"struct.net::MagicNumber"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN3net11MagicNumberEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.70, i64 0, i64 0), i8* %41, i8* %43) #10
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.67, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #10
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #10
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
