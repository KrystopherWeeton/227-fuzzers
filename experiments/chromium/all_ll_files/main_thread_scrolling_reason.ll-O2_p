; ModuleID = '../../cc/input/main_thread_scrolling_reason.cc'
source_filename = "../../cc/input/main_thread_scrolling_reason.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::trace_event::TracedValueJSON" = type { %"class.base::trace_event::TracedValue" }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.std::__1::allocator" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender" = type { i32 (...)** }
%"class.base::trace_event::TraceEventMemoryOverhead" = type { [14 x %"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize"] }
%"struct.base::trace_event::TraceEventMemoryOverhead::ObjectCountAndSize" = type { i64, i64, i64 }

$_ZN4base5EraseIcNSt3__111char_traitsIcEENS1_9allocatorIcEEcEEmRNS1_12basic_stringIT_T0_T1_EERKT2_ = comdat any

$_ZN4base11trace_event15TracedValueJSOND0Ev = comdat any

$_ZTVN4base11trace_event15TracedValueJSONE = comdat any

@.str = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"main_thread_scrolling_reasons\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"Has background-attachment:fixed\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"Threaded scrolling is disabled\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"Scrollbar scrolling\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"Not opaque for text and LCD text\00", align 1
@.str.7 = private unnamed_addr constant [46 x i8] c"Can't paint scrolling background and LCD text\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"Non fast scrollable region\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"Failed hit test\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"No scrolling layer\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"Not scrollable\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"Non-invertible transform\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"Wheel event handler region\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"Touch event handler region\00", align 1
@_ZTVN4base11trace_event15TracedValueJSONE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::trace_event::TracedValue"*)* @_ZN4base11trace_event11TracedValueD2Ev to i8*), i8* bitcast (void (%"class.base::trace_event::TracedValueJSON"*)* @_ZN4base11trace_event15TracedValueJSOND0Ev to i8*), i8* bitcast (void (%"class.base::trace_event::TracedValue"*, %"class.std::__1::basic_string"*)* @_ZNK4base11trace_event11TracedValue19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*)* @_ZN4base11trace_event11TracedValue13AppendToProtoEPNS0_24ConvertableToTraceFormat13ProtoAppenderE to i8*), i8* bitcast (void (%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::TraceEventMemoryOverhead"*)* @_ZN4base11trace_event11TracedValue27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc25MainThreadScrollingReason6AsTextEj(%"class.std::__1::basic_string"* noalias sret, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::trace_event::TracedValueJSON", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca i8, align 1
  %6 = bitcast %"class.base::trace_event::TracedValueJSON"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.base::trace_event::TracedValueJSON", %"class.base::trace_event::TracedValueJSON"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.base::trace_event::TracedValueJSON", %"class.base::trace_event::TracedValueJSON"* %3, i64 0, i32 0
  %9 = bitcast %"class.base::trace_event::TracedValueJSON"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZN4base11trace_event11TracedValueC2Emb(%"class.base::trace_event::TracedValue"* nonnull %8, i64 0, i1 zeroext true) #7
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4base11trace_event15TracedValueJSONE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  call void @_ZN2cc25MainThreadScrollingReason16AddToTracedValueEjRN4base11trace_event11TracedValueE(i32 %1, %"class.base::trace_event::TracedValue"* nonnull dereferenceable(16) %8)
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 -86, i64 24, i1 false)
  call void @_ZNK4base11trace_event15TracedValueJSON6ToJSONEv(%"class.std::__1::basic_string"* sret %0, %"class.base::trace_event::TracedValueJSON"* nonnull %3) #7
  %13 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %0, i8 signext 91, i64 0) #7
  %14 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %0, i8 signext 93, i64 0) #7
  %15 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #7
  %16 = add i64 %13, 1
  %17 = xor i64 %13, -1
  %18 = add i64 %14, %17
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %0, i64 %16, i64 %18, %"class.std::__1::allocator"* dereferenceable(1) %19) #7
  %20 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %2
  %25 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %25) #8
  br label %26

26:                                               ; preds = %24, %2
  %27 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %15, i64 24, i1 false) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #7
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #7
  store i8 34, i8* %5, align 1
  %28 = call i64 @_ZN4base5EraseIcNSt3__111char_traitsIcEENS1_9allocatorIcEEcEEmRNS1_12basic_stringIT_T0_T1_EERKT2_(%"class.std::__1::basic_string"* dereferenceable(24) %0, i8* nonnull dereferenceable(1) %5)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #7
  %29 = load i8, i8* %21, align 1
  %30 = icmp slt i8 %29, 0
  %31 = load i8*, i8** %10, align 8
  %32 = select i1 %30, i8* %31, i8* %27
  %33 = load i64, i64* %11, align 8
  %34 = zext i8 %29 to i64
  %35 = select i1 %30, i64 %33, i64 %34
  %36 = call zeroext i1 @_ZN4base12ReplaceCharsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_S4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8* %32, i64 %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64 2, %"class.std::__1::basic_string"* %0) #7
  call void @_ZN4base11trace_event11TracedValueD2Ev(%"class.base::trace_event::TracedValue"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc25MainThreadScrollingReason16AddToTracedValueEjRN4base11trace_event11TracedValueE(i32, %"class.base::trace_event::TracedValue"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0)) #7
  %3 = and i32 %0, 2
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i64 31) #7
  br label %6

6:                                                ; preds = %2, %5
  %7 = and i32 %0, 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6
  tail call void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0), i64 30) #7
  br label %10

10:                                               ; preds = %6, %9
  %11 = and i32 %0, 16
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %10
  tail call void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i64 19) #7
  br label %14

14:                                               ; preds = %10, %13
  %15 = and i32 %0, 524288
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %14
  tail call void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i64 32) #7
  br label %18

18:                                               ; preds = %14, %17
  %19 = and i32 %0, 1048576
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  tail call void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0), i64 45) #7
  br label %22

22:                                               ; preds = %18, %21
  %23 = and i32 %0, 64
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  tail call void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i64 26) #7
  br label %26

26:                                               ; preds = %22, %25
  %27 = and i32 %0, 256
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %26
  tail call void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i64 15) #7
  br label %30

30:                                               ; preds = %26, %29
  %31 = and i32 %0, 512
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  tail call void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i64 18) #7
  br label %34

34:                                               ; preds = %30, %33
  %35 = and i32 %0, 1024
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %34
  tail call void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i64 14) #7
  br label %38

38:                                               ; preds = %34, %37
  %39 = and i32 %0, 4096
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  tail call void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0), i64 24) #7
  br label %42

42:                                               ; preds = %38, %41
  %43 = and i32 %0, 16777216
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %42
  tail call void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i64 26) #7
  br label %46

46:                                               ; preds = %42, %45
  %47 = and i32 %0, 33554432
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %50, label %49

49:                                               ; preds = %46
  tail call void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"* %1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i64 26) #7
  br label %50

50:                                               ; preds = %46, %49
  tail call void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"* %1) #7
  ret void
}

declare void @_ZNK4base11trace_event15TracedValueJSON6ToJSONEv(%"class.std::__1::basic_string"* sret, %"class.base::trace_event::TracedValueJSON"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4base5EraseIcNSt3__111char_traitsIcEENS1_9allocatorIcEEcEEmRNS1_12basic_stringIT_T0_T1_EERKT2_(%"class.std::__1::basic_string"* dereferenceable(24), i8* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %12 = zext i8 %5 to i64
  %13 = select i1 %6, i8* %8, i8* %11
  %14 = select i1 %6, i64 %10, i64 %12
  %15 = getelementptr inbounds i8, i8* %13, i64 %14
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %2
  %18 = load i8, i8* %1, align 1
  br label %19

19:                                               ; preds = %23, %17
  %20 = phi i8* [ %13, %17 ], [ %24, %23 ]
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, %18
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds i8, i8* %20, i64 1
  %25 = icmp eq i8* %24, %15
  br i1 %25, label %26, label %19

26:                                               ; preds = %23
  %27 = ptrtoint i8* %15 to i64
  br label %51

28:                                               ; preds = %19, %2
  %29 = phi i8* [ %13, %2 ], [ %20, %19 ]
  %30 = ptrtoint i8* %29 to i64
  %31 = icmp eq i8* %29, %15
  br i1 %31, label %51, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds i8, i8* %29, i64 1
  %34 = icmp eq i8* %33, %15
  br i1 %34, label %51, label %35

35:                                               ; preds = %32, %45
  %36 = phi i8* [ %47, %45 ], [ %33, %32 ]
  %37 = phi i64 [ %46, %45 ], [ %30, %32 ]
  %38 = load i8, i8* %36, align 1
  %39 = load i8, i8* %1, align 1
  %40 = icmp eq i8 %38, %39
  br i1 %40, label %45, label %41

41:                                               ; preds = %35
  %42 = inttoptr i64 %37 to i8*
  store i8 %38, i8* %42, align 1
  %43 = getelementptr inbounds i8, i8* %42, i64 1
  %44 = ptrtoint i8* %43 to i64
  br label %45

45:                                               ; preds = %41, %35
  %46 = phi i64 [ %37, %35 ], [ %44, %41 ]
  %47 = getelementptr inbounds i8, i8* %36, i64 1
  %48 = icmp eq i8* %47, %15
  br i1 %48, label %49, label %35

49:                                               ; preds = %45
  %50 = load i8, i8* %4, align 1
  br label %51

51:                                               ; preds = %49, %26, %28, %32
  %52 = phi i8 [ %5, %28 ], [ %5, %26 ], [ %5, %32 ], [ %50, %49 ]
  %53 = phi i64 [ %30, %28 ], [ %27, %26 ], [ %30, %32 ], [ %46, %49 ]
  %54 = icmp slt i8 %52, 0
  %55 = load i8*, i8** %7, align 8
  %56 = load i64, i64* %9, align 8
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  %58 = ptrtoint i8* %55 to i64
  %59 = zext i8 %52 to i64
  %60 = getelementptr inbounds i8, i8* %11, i64 %59
  %61 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  %62 = select i1 %54, i8* %57, i8* %60
  %63 = select i1 %54, i64 %58, i64 %61
  %64 = select i1 %54, i64 %56, i64 %59
  %65 = ptrtoint i8* %62 to i64
  %66 = sub i64 %65, %53
  %67 = ptrtoint i8* %62 to i64
  %68 = sub i64 %53, %63
  %69 = sub i64 %67, %53
  %70 = icmp ult i64 %64, %68
  br i1 %70, label %71, label %73

71:                                               ; preds = %51
  %72 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"* %72) #9
  unreachable

73:                                               ; preds = %51
  %74 = icmp eq i64 %69, -1
  br i1 %74, label %75, label %82

75:                                               ; preds = %73
  br i1 %54, label %76, label %79

76:                                               ; preds = %75
  %77 = load i8*, i8** %7, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 %68
  store i8 0, i8* %78, align 1
  store i64 %68, i64* %9, align 8
  br label %83

79:                                               ; preds = %75
  %80 = getelementptr inbounds i8, i8* %11, i64 %68
  store i8 0, i8* %80, align 1
  %81 = trunc i64 %68 to i8
  store i8 %81, i8* %4, align 1
  br label %83

82:                                               ; preds = %73
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* %0, i64 %68, i64 %69) #7
  br label %83

83:                                               ; preds = %76, %79, %82
  ret i64 %66
}

declare zeroext i1 @_ZN4base12ReplaceCharsENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_S4_PNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(i8*, i64, i8*, i64, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base11trace_event11TracedValueD2Ev(%"class.base::trace_event::TracedValue"*) unnamed_addr #3

declare void @_ZN4base11trace_event11TracedValue10BeginArrayEPKc(%"class.base::trace_event::TracedValue"*, i8*) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue12AppendStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::trace_event::TracedValue"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue8EndArrayEv(%"class.base::trace_event::TracedValue"*) local_unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValueC2Emb(%"class.base::trace_event::TracedValue"*, i64, i1 zeroext) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base11trace_event15TracedValueJSOND0Ev(%"class.base::trace_event::TracedValueJSON"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::trace_event::TracedValueJSON", %"class.base::trace_event::TracedValueJSON"* %0, i64 0, i32 0
  tail call void @_ZN4base11trace_event11TracedValueD2Ev(%"class.base::trace_event::TracedValue"* %2) #7
  %3 = bitcast %"class.base::trace_event::TracedValueJSON"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

declare void @_ZNK4base11trace_event11TracedValue19AppendAsTraceFormatEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::TracedValue"*, %"class.std::__1::basic_string"*) unnamed_addr #2

declare zeroext i1 @_ZN4base11trace_event11TracedValue13AppendToProtoEPNS0_24ConvertableToTraceFormat13ProtoAppenderE(%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::ConvertableToTraceFormat::ProtoAppender"*) unnamed_addr #2

declare void @_ZN4base11trace_event11TracedValue27EstimateTraceMemoryOverheadEPNS0_24TraceEventMemoryOverheadE(%"class.base::trace_event::TracedValue"*, %"class.base::trace_event::TraceEventMemoryOverhead"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"*, i64, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
