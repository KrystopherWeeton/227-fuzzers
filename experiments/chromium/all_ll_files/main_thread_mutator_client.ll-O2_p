; ModuleID = '../../third_party/blink/renderer/platform/graphics/main_thread_mutator_client.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/main_thread_mutator_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::MainThreadMutatorClient" = type { %"class.blink::MutatorClient", %"class.std::__1::unique_ptr", %"class.blink::MutatorClient"* }
%"class.blink::MutatorClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::AnimationWorkletMutatorDispatcherImpl"* }
%"class.blink::AnimationWorkletMutatorDispatcherImpl" = type { %"class.blink::AnimationWorkletMutatorDispatcher", %"class.WTF::HashMap", %class.scoped_refptr, %"class.blink::MutatorClient"*, %"class.WTF::HashMap.1", %class.scoped_refptr.6, %"class.WTF::CrossThreadOnceFunction", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.13", %"class.base::WeakPtrFactory" }
%"class.blink::AnimationWorkletMutatorDispatcher" = type { i32 (...)** }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::HashMap.1" = type { %"class.WTF::HashTable.2" }
%"class.WTF::HashTable.2" = type <{ %"struct.WTF::KeyValuePair.5"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.5" = type opaque
%class.scoped_refptr.6 = type { %"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef"* }
%"class.blink::AnimationWorkletMutatorDispatcherImpl::OutputVectorRef" = type opaque
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.8", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.8" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest"* }
%"struct.blink::AnimationWorkletMutatorDispatcherImpl::AsyncMutationRequest" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::TickClock"* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.19 }
%class.scoped_refptr.19 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.20", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.20" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.21" }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i8 }
%"class.WTF::String" = type { %class.scoped_refptr.29 }
%class.scoped_refptr.29 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.30" }
%"struct.std::__1::atomic.30" = type { %"struct.std::__1::__atomic_base.31" }
%"struct.std::__1::__atomic_base.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { i32 }
%"struct.cc::AnimationWorkletOutput" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"struct.cc::AnimationWorkletOutput::AnimationState"*, %"class.std::__1::__compressed_pair.43" }
%"struct.cc::AnimationWorkletOutput::AnimationState" = type { %"struct.cc::WorkletAnimationId", %"class.std::__1::vector.38" }
%"struct.cc::WorkletAnimationId" = type { i32, i32 }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.absl::optional"*, %"class.absl::optional"*, %"class.std::__1::__compressed_pair.40" }
%"class.absl::optional" = type opaque
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.absl::optional"* }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.cc::AnimationWorkletOutput::AnimationState"* }

$_ZN5blink23MainThreadMutatorClientD2Ev = comdat any

$_ZN5blink23MainThreadMutatorClientD0Ev = comdat any

@_ZTVN5blink23MainThreadMutatorClientE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::MainThreadMutatorClient"*)* @_ZN5blink23MainThreadMutatorClientD2Ev to i8*), i8* bitcast (void (%"class.blink::MainThreadMutatorClient"*)* @_ZN5blink23MainThreadMutatorClientD0Ev to i8*), i8* bitcast (void (%"class.blink::MainThreadMutatorClient"*, %"class.WTF::String"*)* @_ZN5blink23MainThreadMutatorClient23SynchronizeAnimatorNameERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::MainThreadMutatorClient"*, %"struct.cc::AnimationWorkletOutput"*)* @_ZN5blink23MainThreadMutatorClient17SetMutationUpdateENSt3__110unique_ptrIN2cc22AnimationWorkletOutputENS1_14default_deleteIS4_EEEE to i8*)] }, align 8

@_ZN5blink23MainThreadMutatorClientC1ENSt3__110unique_ptrINS_37AnimationWorkletMutatorDispatcherImplENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.blink::MainThreadMutatorClient"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl"*), void (%"class.blink::MainThreadMutatorClient"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl"*)* @_ZN5blink23MainThreadMutatorClientC2ENSt3__110unique_ptrINS_37AnimationWorkletMutatorDispatcherImplENS1_14default_deleteIS3_EEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23MainThreadMutatorClientC2ENSt3__110unique_ptrINS_37AnimationWorkletMutatorDispatcherImplENS1_14default_deleteIS3_EEEE(%"class.blink::MainThreadMutatorClient"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::MainThreadMutatorClient", %"class.blink::MainThreadMutatorClient"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::MainThreadMutatorClient", %"class.blink::MainThreadMutatorClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink23MainThreadMutatorClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::MainThreadMutatorClient", %"class.blink::MainThreadMutatorClient"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 %3, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::AnimationWorkletMutatorDispatcherImpl", %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %1, i64 0, i32 3
  store %"class.blink::MutatorClient"* %4, %"class.blink::MutatorClient"** %8, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23MainThreadMutatorClient23SynchronizeAnimatorNameERKN3WTF6StringE(%"class.blink::MainThreadMutatorClient"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MainThreadMutatorClient", %"class.blink::MainThreadMutatorClient"* %0, i64 0, i32 2
  %4 = load %"class.blink::MutatorClient"*, %"class.blink::MutatorClient"** %3, align 8
  %5 = bitcast %"class.blink::MutatorClient"* %4 to void (%"class.blink::MutatorClient"*, %"class.WTF::String"*)***
  %6 = load void (%"class.blink::MutatorClient"*, %"class.WTF::String"*)**, void (%"class.blink::MutatorClient"*, %"class.WTF::String"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::MutatorClient"*, %"class.WTF::String"*)*, void (%"class.blink::MutatorClient"*, %"class.WTF::String"*)** %6, i64 2
  %8 = load void (%"class.blink::MutatorClient"*, %"class.WTF::String"*)*, void (%"class.blink::MutatorClient"*, %"class.WTF::String"*)** %7, align 8
  tail call void %8(%"class.blink::MutatorClient"* %4, %"class.WTF::String"* dereferenceable(8) %1) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23MainThreadMutatorClient17SetMutationUpdateENSt3__110unique_ptrIN2cc22AnimationWorkletOutputENS1_14default_deleteIS4_EEEE(%"class.blink::MainThreadMutatorClient"* nocapture readonly, %"struct.cc::AnimationWorkletOutput"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MainThreadMutatorClient", %"class.blink::MainThreadMutatorClient"* %0, i64 0, i32 2
  %4 = load %"class.blink::MutatorClient"*, %"class.blink::MutatorClient"** %3, align 8
  %5 = bitcast %"class.blink::MutatorClient"* %4 to void (%"class.blink::MutatorClient"*, %"struct.cc::AnimationWorkletOutput"*)***
  %6 = load void (%"class.blink::MutatorClient"*, %"struct.cc::AnimationWorkletOutput"*)**, void (%"class.blink::MutatorClient"*, %"struct.cc::AnimationWorkletOutput"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.blink::MutatorClient"*, %"struct.cc::AnimationWorkletOutput"*)*, void (%"class.blink::MutatorClient"*, %"struct.cc::AnimationWorkletOutput"*)** %6, i64 3
  %8 = load void (%"class.blink::MutatorClient"*, %"struct.cc::AnimationWorkletOutput"*)*, void (%"class.blink::MutatorClient"*, %"struct.cc::AnimationWorkletOutput"*)** %7, align 8
  tail call void %8(%"class.blink::MutatorClient"* %4, %"struct.cc::AnimationWorkletOutput"* %1) #3
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink23MainThreadMutatorClient11SetDelegateEPNS_13MutatorClientE(%"class.blink::MainThreadMutatorClient"* nocapture, %"class.blink::MutatorClient"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::MainThreadMutatorClient", %"class.blink::MainThreadMutatorClient"* %0, i64 0, i32 2
  store %"class.blink::MutatorClient"* %1, %"class.blink::MutatorClient"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23MainThreadMutatorClientD2Ev(%"class.blink::MainThreadMutatorClient"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MainThreadMutatorClient", %"class.blink::MainThreadMutatorClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink23MainThreadMutatorClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MainThreadMutatorClient", %"class.blink::MainThreadMutatorClient"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::AnimationWorkletMutatorDispatcherImpl"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl"** %3, align 8
  store %"class.blink::AnimationWorkletMutatorDispatcherImpl"* null, %"class.blink::AnimationWorkletMutatorDispatcherImpl"** %3, align 8
  %5 = icmp eq %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %4 to void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)***
  %8 = load void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)**, void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)*, void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)** %8, i64 1
  %10 = load void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)*, void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)** %9, align 8
  tail call void %10(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* nonnull %4) #3
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23MainThreadMutatorClientD0Ev(%"class.blink::MainThreadMutatorClient"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MainThreadMutatorClient", %"class.blink::MainThreadMutatorClient"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink23MainThreadMutatorClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MainThreadMutatorClient", %"class.blink::MainThreadMutatorClient"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::AnimationWorkletMutatorDispatcherImpl"*, %"class.blink::AnimationWorkletMutatorDispatcherImpl"** %3, align 8
  store %"class.blink::AnimationWorkletMutatorDispatcherImpl"* null, %"class.blink::AnimationWorkletMutatorDispatcherImpl"** %3, align 8
  %5 = icmp eq %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::AnimationWorkletMutatorDispatcherImpl"* %4 to void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)***
  %8 = load void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)**, void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)*, void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)** %8, i64 1
  %10 = load void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)*, void (%"class.blink::AnimationWorkletMutatorDispatcherImpl"*)** %9, align 8
  tail call void %10(%"class.blink::AnimationWorkletMutatorDispatcherImpl"* nonnull %4) #3
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.blink::MainThreadMutatorClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #4
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
