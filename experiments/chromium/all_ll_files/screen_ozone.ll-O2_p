; ModuleID = '../../ui/aura/screen_ozone.cc'
source_filename = "../../ui/aura/screen_ozone.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.aura::ScreenOzone" = type { %"class.display::Screen", %"class.display::Screen"*, %"class.std::__1::unique_ptr" }
%"class.display::Screen" = type { i32 (...)**, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::PlatformScreen"* }
%"class.ui::PlatformScreen" = type { i32 (...)** }
%"class.ui::OzonePlatform" = type <{ i32 (...)**, i8, i8, i8, i8, [4 x i8] }>
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.91", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::vector.110", i32, i32, i32, [4 x i8], %"class.base::ObserverList.117", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.129", %"class.base::WeakPtr.135" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.1", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.7" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.10", %"class.std::__1::vector.26", %"class.ui::EventHandler"* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.33" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.26" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.19" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.12" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.14" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.base::flat_map.22"* }
%"class.base::flat_map.22" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.46" }
%"class.std::__1::map.46" = type { %"class.std::__1::__tree.47" }
%"class.std::__1::__tree.47" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.aura::WindowTreeHost" = type { %"class.ui::internal::InputMethodDelegate", %"class.ui::EventSource", %"class.display::DisplayObserver", %"class.ui::CompositorObserver", %"class.aura::Window"*, i32, [4 x i8], %"class.base::ObserverList.65", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.75", float, %"class.ui::Cursor", %"class.gfx::Point", %"class.std::__1::unique_ptr.84", %"class.ui::InputMethod"*, i8, i8, i8, %"class.base::WeakPtrFactory.90" }
%"class.ui::internal::InputMethodDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.55" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.display::DisplayObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.60" }
%"struct.std::__1::atomic.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__cxx_atomic_impl.63" }
%"struct.std::__1::__cxx_atomic_impl.63" = type { %"struct.std::__1::__cxx_atomic_base_impl.64" }
%"struct.std::__1::__cxx_atomic_base_impl.64" = type { i8 }
%"class.ui::CompositorObserver" = type { i32 (...)** }
%"class.base::ObserverList.65" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.66", i64, i32, [4 x i8] }>
%"class.base::LinkedList.66" = type { %"class.base::LinkNode.67" }
%"class.base::LinkNode.67" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.aura::WindowEventDispatcher"* }
%"class.aura::WindowEventDispatcher" = type opaque
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.ui::Compositor"* }
%"class.ui::Compositor" = type opaque
%"class.ui::Cursor" = type { i32, %class.scoped_refptr.81, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr.81 = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.83 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.82, i32, i32 }
%class.sk_sp.82 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.60" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.83 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.ui::ViewProp"* }
%"class.ui::ViewProp" = type opaque
%"class.ui::InputMethod" = type opaque
%"class.base::WeakPtrFactory.90" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.aura::WindowDelegate" = type opaque
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.110" = type { %"class.std::__1::__vector_base.111" }
%"class.std::__1::__vector_base.111" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.117" = type <{ %"class.std::__1::vector.118", %"class.base::LinkedList.126", i64, i32, [4 x i8] }>
%"class.std::__1::vector.118" = type { %"class.std::__1::__vector_base.119" }
%"class.std::__1::__vector_base.119" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.121" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.120 }
%class.scoped_refptr.120 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.126" = type { %"class.base::LinkNode.127" }
%"class.base::LinkNode.127" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.135" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.136" }
%"class.std::__1::__tree.136" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::set.145" = type { %"class.std::__1::__tree.146" }
%"class.std::__1::__tree.146" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"class.display::Display"*, %"class.display::Display"*, %"class.std::__1::__compressed_pair.164" }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.159" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.159" = type { %"class.absl::optional_internal::optional_data.160" }
%"class.absl::optional_internal::optional_data.160" = type { %"class.absl::optional_internal::optional_data_base.161" }
%"class.absl::optional_internal::optional_data_base.161" = type { %"class.absl::optional_internal::optional_data_dtor_base.162" }
%"class.absl::optional_internal::optional_data_dtor_base.162" = type { i8, %union.anon.163 }
%union.anon.163 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.display::Display"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.171 }
%union.anon.171 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.189" }
%"union.absl::variant_internal::DestructibleUnionImpl.189" = type { %"union.absl::variant_internal::DestructibleUnionImpl.190" }
%"union.absl::variant_internal::DestructibleUnionImpl.190" = type { %"union.absl::variant_internal::DestructibleUnionImpl.191" }
%"union.absl::variant_internal::DestructibleUnionImpl.191" = type { %"union.absl::variant_internal::DestructibleUnionImpl.192" }
%"union.absl::variant_internal::DestructibleUnionImpl.192" = type { %"class.std::__1::basic_string" }
%"struct.gfx::GpuExtraInfo" = type { %"class.std::__1::vector.175", %"class.std::__1::vector.182" }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"*, %"class.std::__1::__compressed_pair.177" }
%"struct.gfx::ANGLEFeature" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"struct.gfx::ANGLEFeature"* }
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"*, %"class.std::__1::__compressed_pair.184" }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.gfx::BufferUsageAndFormat"* }

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTVN4aura11ScreenOzoneE = hidden unnamed_addr constant { [26 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.aura::ScreenOzone"*)* @_ZN4aura11ScreenOzoneD2Ev to i8*), i8* bitcast (void (%"class.aura::ScreenOzone"*)* @_ZN4aura11ScreenOzoneD0Ev to i8*), i8* bitcast (i64 (%"class.aura::ScreenOzone"*)* @_ZN4aura11ScreenOzone20GetCursorScreenPointEv to i8*), i8* bitcast (i1 (%"class.aura::ScreenOzone"*, %"class.aura::Window"*)* @_ZN4aura11ScreenOzone19IsWindowUnderCursorEPNS_6WindowE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.aura::ScreenOzone"*, %"class.gfx::Point"*)* @_ZN4aura11ScreenOzone22GetWindowAtScreenPointERKN3gfx5PointE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.aura::ScreenOzone"*, %"class.gfx::Point"*, %"class.std::__1::set"*)* @_ZN4aura11ScreenOzone28GetLocalProcessWindowAtPointERKN3gfx5PointERKNSt3__13setIPNS_6WindowENS5_4lessIS8_EENS5_9allocatorIS8_EEEE to i8*), i8* bitcast (i32 (%"class.aura::ScreenOzone"*)* @_ZNK4aura11ScreenOzone14GetNumDisplaysEv to i8*), i8* bitcast (%"class.std::__1::vector.157"* (%"class.aura::ScreenOzone"*)* @_ZNK4aura11ScreenOzone14GetAllDisplaysEv to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.aura::ScreenOzone"*, %"class.aura::Window"*)* @_ZNK4aura11ScreenOzone23GetDisplayNearestWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.aura::ScreenOzone"*, %"class.aura::Window"*)* @_ZNK4aura11ScreenOzone21GetDisplayNearestViewEPNS_6WindowE to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.aura::ScreenOzone"*, %"class.gfx::Point"*)* @_ZNK4aura11ScreenOzone22GetDisplayNearestPointERKN3gfx5PointE to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.aura::ScreenOzone"*, %"class.gfx::Rect"*)* @_ZNK4aura11ScreenOzone18GetDisplayMatchingERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.aura::ScreenOzone"*)* @_ZNK4aura11ScreenOzone17GetPrimaryDisplayEv to i8*), i8* bitcast (void (%"class.aura::ScreenOzone"*, i1)* @_ZN4aura11ScreenOzone23SetScreenSaverSuspendedEb to i8*), i8* bitcast (i1 (%"class.aura::ScreenOzone"*)* @_ZNK4aura11ScreenOzone19IsScreenSaverActiveEv to i8*), i8* bitcast (i64 (%"class.aura::ScreenOzone"*)* @_ZNK4aura11ScreenOzone17CalculateIdleTimeEv to i8*), i8* bitcast (void (%"class.aura::ScreenOzone"*, %"class.display::DisplayObserver"*)* @_ZN4aura11ScreenOzone11AddObserverEPN7display15DisplayObserverE to i8*), i8* bitcast (void (%"class.aura::ScreenOzone"*, %"class.display::DisplayObserver"*)* @_ZN4aura11ScreenOzone14RemoveObserverEPN7display15DisplayObserverE to i8*), i8* bitcast ({ i64, i64 } (%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"*)* @_ZNK7display6Screen23ScreenToDIPRectInWindowEPN4aura6WindowERKN3gfx4RectE to i8*), i8* bitcast ({ i64, i64 } (%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"*)* @_ZNK7display6Screen23DIPToScreenRectInWindowEPN4aura6WindowERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.display::Screen"*, i64, i32)* @_ZN7display6Screen26SetPanelRotationForTestingElNS_7Display8RotationE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.aura::ScreenOzone"*)* @_ZN4aura11ScreenOzone19GetCurrentWorkspaceEv to i8*), i8* bitcast (void (%"class.base::Value"*, %"class.aura::ScreenOzone"*, %"struct.gfx::GpuExtraInfo"*)* @_ZN4aura11ScreenOzone26GetGpuExtraInfoAsListValueERKN3gfx12GpuExtraInfoE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.aura::ScreenOzone"*, i32)* @_ZNK4aura11ScreenOzone36GetNativeWindowFromAcceleratedWidgetEj to i8*)] }, align 8

@_ZN4aura11ScreenOzoneC1Ev = hidden unnamed_addr alias void (%"class.aura::ScreenOzone"*), void (%"class.aura::ScreenOzone"*)* @_ZN4aura11ScreenOzoneC2Ev
@_ZN4aura11ScreenOzoneD1Ev = hidden unnamed_addr alias void (%"class.aura::ScreenOzone"*), void (%"class.aura::ScreenOzone"*)* @_ZN4aura11ScreenOzoneD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura11ScreenOzoneC2Ev(%"class.aura::ScreenOzone"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 0
  tail call void @_ZN7display6ScreenC2Ev(%"class.display::Screen"* %2) #7
  %3 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTVN4aura11ScreenOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 1
  %5 = tail call %"class.display::Screen"* @_ZN7display6Screen17SetScreenInstanceEPS0_(%"class.display::Screen"* %2) #7
  store %"class.display::Screen"* %5, %"class.display::Screen"** %4, align 8
  %6 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::unique_ptr"* %6 to i64*
  store i64 0, i64* %7, align 8
  %8 = tail call %"class.ui::OzonePlatform"* @_ZN2ui13OzonePlatform11GetInstanceEv() #7
  %9 = bitcast %"class.ui::OzonePlatform"* %8 to %"class.ui::PlatformScreen"* (%"class.ui::OzonePlatform"*)***
  %10 = load %"class.ui::PlatformScreen"* (%"class.ui::OzonePlatform"*)**, %"class.ui::PlatformScreen"* (%"class.ui::OzonePlatform"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.ui::PlatformScreen"* (%"class.ui::OzonePlatform"*)*, %"class.ui::PlatformScreen"* (%"class.ui::OzonePlatform"*)** %10, i64 12
  %12 = load %"class.ui::PlatformScreen"* (%"class.ui::OzonePlatform"*)*, %"class.ui::PlatformScreen"* (%"class.ui::OzonePlatform"*)** %11, align 8
  %13 = tail call %"class.ui::PlatformScreen"* %12(%"class.ui::OzonePlatform"* %8) #7
  %14 = ptrtoint %"class.ui::PlatformScreen"* %13 to i64
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %15, align 8
  store i64 %14, i64* %7, align 8
  %17 = icmp eq %"class.ui::PlatformScreen"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %1
  %19 = bitcast %"class.ui::PlatformScreen"* %16 to void (%"class.ui::PlatformScreen"*)***
  %20 = load void (%"class.ui::PlatformScreen"*)**, void (%"class.ui::PlatformScreen"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.ui::PlatformScreen"*)*, void (%"class.ui::PlatformScreen"*)** %20, i64 1
  %22 = load void (%"class.ui::PlatformScreen"*)*, void (%"class.ui::PlatformScreen"*)** %21, align 8
  tail call void %22(%"class.ui::PlatformScreen"* nonnull %16) #7
  br label %23

23:                                               ; preds = %18, %1
  ret void
}

declare void @_ZN7display6ScreenC2Ev(%"class.display::Screen"*) unnamed_addr #1

declare %"class.display::Screen"* @_ZN7display6Screen17SetScreenInstanceEPS0_(%"class.display::Screen"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.ui::OzonePlatform"* @_ZN2ui13OzonePlatform11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura11ScreenOzoneD2Ev(%"class.aura::ScreenOzone"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTVN4aura11ScreenOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 1
  %4 = load %"class.display::Screen"*, %"class.display::Screen"** %3, align 8
  %5 = tail call %"class.display::Screen"* @_ZN7display6Screen17SetScreenInstanceEPS0_(%"class.display::Screen"* %4) #7
  %6 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %6, align 8
  store %"class.ui::PlatformScreen"* null, %"class.ui::PlatformScreen"** %6, align 8
  %8 = icmp eq %"class.ui::PlatformScreen"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.ui::PlatformScreen"* %7 to void (%"class.ui::PlatformScreen"*)***
  %11 = load void (%"class.ui::PlatformScreen"*)**, void (%"class.ui::PlatformScreen"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.ui::PlatformScreen"*)*, void (%"class.ui::PlatformScreen"*)** %11, i64 1
  %13 = load void (%"class.ui::PlatformScreen"*)*, void (%"class.ui::PlatformScreen"*)** %12, align 8
  tail call void %13(%"class.ui::PlatformScreen"* nonnull %7) #7
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 0
  tail call void @_ZN7display6ScreenD2Ev(%"class.display::Screen"* %15) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7display6ScreenD2Ev(%"class.display::Screen"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura11ScreenOzoneD0Ev(%"class.aura::ScreenOzone"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTVN4aura11ScreenOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 1
  %4 = load %"class.display::Screen"*, %"class.display::Screen"** %3, align 8
  %5 = tail call %"class.display::Screen"* @_ZN7display6Screen17SetScreenInstanceEPS0_(%"class.display::Screen"* %4) #7
  %6 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %6, align 8
  store %"class.ui::PlatformScreen"* null, %"class.ui::PlatformScreen"** %6, align 8
  %8 = icmp eq %"class.ui::PlatformScreen"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.ui::PlatformScreen"* %7 to void (%"class.ui::PlatformScreen"*)***
  %11 = load void (%"class.ui::PlatformScreen"*)**, void (%"class.ui::PlatformScreen"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.ui::PlatformScreen"*)*, void (%"class.ui::PlatformScreen"*)** %11, i64 1
  %13 = load void (%"class.ui::PlatformScreen"*)*, void (%"class.ui::PlatformScreen"*)** %12, align 8
  tail call void %13(%"class.ui::PlatformScreen"* nonnull %7) #7
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 0
  tail call void @_ZN7display6ScreenD2Ev(%"class.display::Screen"* %15) #7
  %16 = bitcast %"class.aura::ScreenOzone"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4aura11ScreenOzone20GetCursorScreenPointEv(%"class.aura::ScreenOzone"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %2, align 8
  %4 = bitcast %"class.ui::PlatformScreen"* %3 to i64 (%"class.ui::PlatformScreen"*)***
  %5 = load i64 (%"class.ui::PlatformScreen"*)**, i64 (%"class.ui::PlatformScreen"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.ui::PlatformScreen"*)*, i64 (%"class.ui::PlatformScreen"*)** %5, i64 5
  %7 = load i64 (%"class.ui::PlatformScreen"*)*, i64 (%"class.ui::PlatformScreen"*)** %6, align 8
  %8 = tail call i64 %7(%"class.ui::PlatformScreen"* %3) #7
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4aura11ScreenOzone19IsWindowUnderCursorEPNS_6WindowE(%"class.aura::ScreenOzone"*, %"class.aura::Window"* readnone) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.gfx::Point"*
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = bitcast %"class.aura::ScreenOzone"* %0 to i64 (%"class.aura::ScreenOzone"*)***
  %7 = load i64 (%"class.aura::ScreenOzone"*)**, i64 (%"class.aura::ScreenOzone"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.aura::ScreenOzone"*)*, i64 (%"class.aura::ScreenOzone"*)** %7, i64 2
  %9 = load i64 (%"class.aura::ScreenOzone"*)*, i64 (%"class.aura::ScreenOzone"*)** %8, align 8
  %10 = tail call i64 %9(%"class.aura::ScreenOzone"* %0) #7
  store i64 %10, i64* %3, align 8
  %11 = bitcast %"class.aura::ScreenOzone"* %0 to %"class.aura::Window"* (%"class.aura::ScreenOzone"*, %"class.gfx::Point"*)***
  %12 = load %"class.aura::Window"* (%"class.aura::ScreenOzone"*, %"class.gfx::Point"*)**, %"class.aura::Window"* (%"class.aura::ScreenOzone"*, %"class.gfx::Point"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.aura::Window"* (%"class.aura::ScreenOzone"*, %"class.gfx::Point"*)*, %"class.aura::Window"* (%"class.aura::ScreenOzone"*, %"class.gfx::Point"*)** %12, i64 4
  %14 = load %"class.aura::Window"* (%"class.aura::ScreenOzone"*, %"class.gfx::Point"*)*, %"class.aura::Window"* (%"class.aura::ScreenOzone"*, %"class.gfx::Point"*)** %13, align 8
  %15 = call %"class.aura::Window"* %14(%"class.aura::ScreenOzone"* %0, %"class.gfx::Point"* nonnull dereferenceable(8) %4) #7
  %16 = icmp eq %"class.aura::Window"* %15, %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZN4aura11ScreenOzone22GetWindowAtScreenPointERKN3gfx5PointE(%"class.aura::ScreenOzone"*, %"class.gfx::Point"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %3, align 8
  %5 = bitcast %"class.ui::PlatformScreen"* %4 to i32 (%"class.ui::PlatformScreen"*, %"class.gfx::Point"*)***
  %6 = load i32 (%"class.ui::PlatformScreen"*, %"class.gfx::Point"*)**, i32 (%"class.ui::PlatformScreen"*, %"class.gfx::Point"*)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.ui::PlatformScreen"*, %"class.gfx::Point"*)*, i32 (%"class.ui::PlatformScreen"*, %"class.gfx::Point"*)** %6, i64 6
  %8 = load i32 (%"class.ui::PlatformScreen"*, %"class.gfx::Point"*)*, i32 (%"class.ui::PlatformScreen"*, %"class.gfx::Point"*)** %7, align 8
  %9 = tail call i32 %8(%"class.ui::PlatformScreen"* %4, %"class.gfx::Point"* dereferenceable(8) %1) #7
  %10 = bitcast %"class.aura::ScreenOzone"* %0 to %"class.aura::Window"* (%"class.aura::ScreenOzone"*, i32)***
  %11 = load %"class.aura::Window"* (%"class.aura::ScreenOzone"*, i32)**, %"class.aura::Window"* (%"class.aura::ScreenOzone"*, i32)*** %10, align 8
  %12 = getelementptr inbounds %"class.aura::Window"* (%"class.aura::ScreenOzone"*, i32)*, %"class.aura::Window"* (%"class.aura::ScreenOzone"*, i32)** %11, i64 23
  %13 = load %"class.aura::Window"* (%"class.aura::ScreenOzone"*, i32)*, %"class.aura::Window"* (%"class.aura::ScreenOzone"*, i32)** %12, align 8
  %14 = tail call %"class.aura::Window"* %13(%"class.aura::ScreenOzone"* %0, i32 %9) #7
  ret %"class.aura::Window"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZN4aura11ScreenOzone28GetLocalProcessWindowAtPointERKN3gfx5PointERKNSt3__13setIPNS_6WindowENS5_4lessIS8_EENS5_9allocatorIS8_EEEE(%"class.aura::ScreenOzone"*, %"class.gfx::Point"* dereferenceable(8), %"class.std::__1::set"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::set.145", align 8
  %5 = bitcast %"class.std::__1::set.145"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.std::__1::set.145", %"class.std::__1::set.145"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::set.145", %"class.std::__1::set.145"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::set.145", %"class.std::__1::set.145"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::set.145", %"class.std::__1::set.145"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"** %6, align 8
  %11 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %14 = icmp eq %"class.std::__1::__tree_end_node"* %12, %13
  %15 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"**
  br i1 %14, label %19, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 0, i32 0
  %18 = bitcast %"class.std::__1::set.145"* %4 to i64*
  br label %34

19:                                               ; preds = %127, %3
  %20 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %20, align 8
  %22 = bitcast %"class.ui::PlatformScreen"* %21 to i32 (%"class.ui::PlatformScreen"*, %"class.gfx::Point"*, %"class.std::__1::set.145"*)***
  %23 = load i32 (%"class.ui::PlatformScreen"*, %"class.gfx::Point"*, %"class.std::__1::set.145"*)**, i32 (%"class.ui::PlatformScreen"*, %"class.gfx::Point"*, %"class.std::__1::set.145"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.ui::PlatformScreen"*, %"class.gfx::Point"*, %"class.std::__1::set.145"*)*, i32 (%"class.ui::PlatformScreen"*, %"class.gfx::Point"*, %"class.std::__1::set.145"*)** %23, i64 7
  %25 = load i32 (%"class.ui::PlatformScreen"*, %"class.gfx::Point"*, %"class.std::__1::set.145"*)*, i32 (%"class.ui::PlatformScreen"*, %"class.gfx::Point"*, %"class.std::__1::set.145"*)** %24, align 8
  %26 = call i32 %25(%"class.ui::PlatformScreen"* %21, %"class.gfx::Point"* dereferenceable(8) %1, %"class.std::__1::set.145"* nonnull dereferenceable(24) %4) #7
  %27 = bitcast %"class.aura::ScreenOzone"* %0 to %"class.aura::Window"* (%"class.aura::ScreenOzone"*, i32)***
  %28 = load %"class.aura::Window"* (%"class.aura::ScreenOzone"*, i32)**, %"class.aura::Window"* (%"class.aura::ScreenOzone"*, i32)*** %27, align 8
  %29 = getelementptr inbounds %"class.aura::Window"* (%"class.aura::ScreenOzone"*, i32)*, %"class.aura::Window"* (%"class.aura::ScreenOzone"*, i32)** %28, i64 23
  %30 = load %"class.aura::Window"* (%"class.aura::ScreenOzone"*, i32)*, %"class.aura::Window"* (%"class.aura::ScreenOzone"*, i32)** %29, align 8
  %31 = call %"class.aura::Window"* %30(%"class.aura::ScreenOzone"* %0, i32 %26) #7
  %32 = getelementptr inbounds %"class.std::__1::set.145", %"class.std::__1::set.145"* %4, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %15, align 8
  call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.146"* nonnull %32, %"class.std::__1::__tree_node"* %33) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7
  ret %"class.aura::Window"* %31

34:                                               ; preds = %16, %127
  %35 = phi %"class.std::__1::__tree_end_node"* [ %12, %16 ], [ %128, %127 ]
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 4
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.aura::Window"**
  %38 = load %"class.aura::Window"*, %"class.aura::Window"** %37, align 8
  %39 = call %"class.aura::WindowTreeHost"* @_ZN4aura6Window7GetHostEv(%"class.aura::Window"* %38) #7
  %40 = bitcast %"class.aura::WindowTreeHost"* %39 to i32 (%"class.aura::WindowTreeHost"*)***
  %41 = load i32 (%"class.aura::WindowTreeHost"*)**, i32 (%"class.aura::WindowTreeHost"*)*** %40, align 8
  %42 = getelementptr inbounds i32 (%"class.aura::WindowTreeHost"*)*, i32 (%"class.aura::WindowTreeHost"*)** %41, i64 13
  %43 = load i32 (%"class.aura::WindowTreeHost"*)*, i32 (%"class.aura::WindowTreeHost"*)** %42, align 8
  %44 = call i32 %43(%"class.aura::WindowTreeHost"* %39) #7
  %45 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %15, align 8
  %46 = icmp eq %"class.std::__1::__tree_node"* %45, null
  br i1 %46, label %73, label %47

47:                                               ; preds = %34, %69
  %48 = phi %"class.std::__1::__tree_node"* [ %72, %69 ], [ %45, %34 ]
  %49 = phi %"class.std::__1::__tree_node_base"** [ %71, %69 ], [ %7, %34 ]
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp ult i32 %44, %51
  br i1 %52, label %53, label %59

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %57, label %69

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 0
  br label %73

59:                                               ; preds = %47
  %60 = icmp ult i32 %51, %44
  br i1 %60, label %61, label %67

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 1
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, null
  br i1 %64, label %65, label %69

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 0
  br label %73

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %48, i64 0, i32 0, i32 0
  br label %73

69:                                               ; preds = %61, %53
  %70 = phi %"class.std::__1::__tree_node_base"* [ %55, %53 ], [ %63, %61 ]
  %71 = phi %"class.std::__1::__tree_node_base"** [ %54, %53 ], [ %62, %61 ]
  %72 = bitcast %"class.std::__1::__tree_node_base"* %70 to %"class.std::__1::__tree_node"*
  br label %47

73:                                               ; preds = %34, %67, %65, %57
  %74 = phi %"class.std::__1::__tree_end_node"* [ %58, %57 ], [ %66, %65 ], [ %68, %67 ], [ %9, %34 ]
  %75 = phi %"class.std::__1::__tree_node_base"** [ %54, %57 ], [ %62, %65 ], [ %49, %67 ], [ %17, %34 ]
  %76 = bitcast %"class.std::__1::__tree_node_base"** %75 to %"class.std::__1::__tree_node"**
  %77 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node"* %77, null
  br i1 %78, label %79, label %99

79:                                               ; preds = %73
  %80 = call i8* @_Znwm(i64 32) #8, !noalias !2
  %81 = getelementptr inbounds i8, i8* %80, i64 28
  %82 = bitcast i8* %81 to i32*
  store i32 %44, i32* %82, align 4, !noalias !2
  %83 = bitcast i8* %80 to %"class.std::__1::__tree_node_base"*
  %84 = getelementptr inbounds i8, i8* %80, i64 16
  %85 = bitcast i8* %84 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 16, i1 false) #7
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %85, align 8
  %86 = bitcast %"class.std::__1::__tree_node_base"** %75 to i8**
  store i8* %80, i8** %86, align 8
  %87 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %88 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %87, i64 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  %90 = icmp eq %"class.std::__1::__tree_node_base"* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %79
  %92 = ptrtoint %"class.std::__1::__tree_node_base"* %89 to i64
  store i64 %92, i64* %18, align 8
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  br label %94

94:                                               ; preds = %91, %79
  %95 = phi %"class.std::__1::__tree_node_base"* [ %83, %79 ], [ %93, %91 ]
  %96 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %96, %"class.std::__1::__tree_node_base"* %95) #7
  %97 = load i64, i64* %8, align 8
  %98 = add i64 %97, 1
  store i64 %98, i64* %8, align 8
  br label %99

99:                                               ; preds = %73, %94
  %100 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 1, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, null
  br i1 %102, label %103, label %111

103:                                              ; preds = %99
  %104 = bitcast %"class.std::__1::__tree_end_node"* %35 to %"class.std::__1::__tree_node_base"*
  %105 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %35, i64 2
  %106 = bitcast %"class.std::__1::__tree_end_node"* %105 to %"class.std::__1::__tree_end_node"**
  %107 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %106, align 8
  %108 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %107, i64 0, i32 0
  %109 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8
  %110 = icmp eq %"class.std::__1::__tree_node_base"* %109, %104
  br i1 %110, label %127, label %118

111:                                              ; preds = %99, %111
  %112 = phi %"class.std::__1::__tree_node_base"* [ %114, %111 ], [ %101, %99 ]
  %113 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %112, i64 0, i32 0, i32 0
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = icmp eq %"class.std::__1::__tree_node_base"* %114, null
  br i1 %115, label %116, label %111

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %112, i64 0, i32 0
  br label %127

118:                                              ; preds = %103, %118
  %119 = phi %"class.std::__1::__tree_end_node"** [ %122, %118 ], [ %106, %103 ]
  %120 = bitcast %"class.std::__1::__tree_end_node"** %119 to %"class.std::__1::__tree_node_base"**
  %121 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %121, i64 0, i32 2
  %123 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %123, i64 0, i32 0
  %125 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %124, align 8
  %126 = icmp eq %"class.std::__1::__tree_node_base"* %125, %121
  br i1 %126, label %127, label %118

127:                                              ; preds = %118, %103, %116
  %128 = phi %"class.std::__1::__tree_end_node"* [ %117, %116 ], [ %107, %103 ], [ %123, %118 ]
  %129 = icmp eq %"class.std::__1::__tree_end_node"* %128, %13
  br i1 %129, label %19, label %34
}

declare %"class.aura::WindowTreeHost"* @_ZN4aura6Window7GetHostEv(%"class.aura::Window"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4aura11ScreenOzone14GetNumDisplaysEv(%"class.aura::ScreenOzone"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.aura::ScreenOzone"* %0 to %"class.std::__1::vector.157"* (%"class.aura::ScreenOzone"*)***
  %3 = load %"class.std::__1::vector.157"* (%"class.aura::ScreenOzone"*)**, %"class.std::__1::vector.157"* (%"class.aura::ScreenOzone"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.157"* (%"class.aura::ScreenOzone"*)*, %"class.std::__1::vector.157"* (%"class.aura::ScreenOzone"*)** %3, i64 7
  %5 = load %"class.std::__1::vector.157"* (%"class.aura::ScreenOzone"*)*, %"class.std::__1::vector.157"* (%"class.aura::ScreenOzone"*)** %4, align 8
  %6 = tail call dereferenceable(24) %"class.std::__1::vector.157"* %5(%"class.aura::ScreenOzone"* %0) #7
  %7 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %6, i64 0, i32 0, i32 1
  %8 = bitcast %"class.display::Display"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.157"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 568
  %14 = trunc i64 %13 to i32
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector.157"* @_ZNK4aura11ScreenOzone14GetAllDisplaysEv(%"class.aura::ScreenOzone"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %2, align 8
  %4 = bitcast %"class.ui::PlatformScreen"* %3 to %"class.std::__1::vector.157"* (%"class.ui::PlatformScreen"*)***
  %5 = load %"class.std::__1::vector.157"* (%"class.ui::PlatformScreen"*)**, %"class.std::__1::vector.157"* (%"class.ui::PlatformScreen"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.157"* (%"class.ui::PlatformScreen"*)*, %"class.std::__1::vector.157"* (%"class.ui::PlatformScreen"*)** %5, i64 2
  %7 = load %"class.std::__1::vector.157"* (%"class.ui::PlatformScreen"*)*, %"class.std::__1::vector.157"* (%"class.ui::PlatformScreen"*)** %6, align 8
  %8 = tail call dereferenceable(24) %"class.std::__1::vector.157"* %7(%"class.ui::PlatformScreen"* %3) #7
  ret %"class.std::__1::vector.157"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4aura11ScreenOzone23GetDisplayNearestWindowEPNS_6WindowE(%"class.display::Display"* noalias sret, %"class.aura::ScreenOzone"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.aura::Window"* %2, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %3
  %6 = tail call %"class.aura::WindowTreeHost"* @_ZN4aura6Window7GetHostEv(%"class.aura::Window"* nonnull %2) #7
  %7 = icmp eq %"class.aura::WindowTreeHost"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %5
  %9 = bitcast %"class.aura::WindowTreeHost"* %6 to i32 (%"class.aura::WindowTreeHost"*)***
  %10 = load i32 (%"class.aura::WindowTreeHost"*)**, i32 (%"class.aura::WindowTreeHost"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.aura::WindowTreeHost"*)*, i32 (%"class.aura::WindowTreeHost"*)** %10, i64 13
  %12 = load i32 (%"class.aura::WindowTreeHost"*)*, i32 (%"class.aura::WindowTreeHost"*)** %11, align 8
  %13 = tail call i32 %12(%"class.aura::WindowTreeHost"* nonnull %6) #7
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %5, %3, %8
  %16 = bitcast %"class.aura::ScreenOzone"* %1 to void (%"class.display::Display"*, %"class.aura::ScreenOzone"*)***
  %17 = load void (%"class.display::Display"*, %"class.aura::ScreenOzone"*)**, void (%"class.display::Display"*, %"class.aura::ScreenOzone"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.display::Display"*, %"class.aura::ScreenOzone"*)*, void (%"class.display::Display"*, %"class.aura::ScreenOzone"*)** %17, i64 12
  %19 = load void (%"class.display::Display"*, %"class.aura::ScreenOzone"*)*, void (%"class.display::Display"*, %"class.aura::ScreenOzone"*)** %18, align 8
  tail call void %19(%"class.display::Display"* sret %0, %"class.aura::ScreenOzone"* %1) #7
  br label %27

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %22 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %21, align 8
  %23 = bitcast %"class.ui::PlatformScreen"* %22 to void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, i32)***
  %24 = load void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, i32)**, void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, i32)*, void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, i32)** %24, i64 4
  %26 = load void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, i32)*, void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, i32)** %25, align 8
  tail call void %26(%"class.display::Display"* sret %0, %"class.ui::PlatformScreen"* %22, i32 %13) #7
  br label %27

27:                                               ; preds = %20, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4aura11ScreenOzone29GetAcceleratedWidgetForWindowEPNS_6WindowE(%"class.aura::ScreenOzone"* nocapture readnone, %"class.aura::Window"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.aura::Window"* %1, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.aura::WindowTreeHost"* @_ZN4aura6Window7GetHostEv(%"class.aura::Window"* nonnull %1) #7
  %6 = icmp eq %"class.aura::WindowTreeHost"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.aura::WindowTreeHost"* %5 to i32 (%"class.aura::WindowTreeHost"*)***
  %9 = load i32 (%"class.aura::WindowTreeHost"*)**, i32 (%"class.aura::WindowTreeHost"*)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.aura::WindowTreeHost"*)*, i32 (%"class.aura::WindowTreeHost"*)** %9, i64 13
  %11 = load i32 (%"class.aura::WindowTreeHost"*)*, i32 (%"class.aura::WindowTreeHost"*)** %10, align 8
  %12 = tail call i32 %11(%"class.aura::WindowTreeHost"* nonnull %5) #7
  br label %13

13:                                               ; preds = %7, %4, %2
  %14 = phi i32 [ 0, %2 ], [ %12, %7 ], [ 0, %4 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4aura11ScreenOzone21GetDisplayNearestViewEPNS_6WindowE(%"class.display::Display"* noalias sret, %"class.aura::ScreenOzone"*, %"class.aura::Window"*) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.aura::ScreenOzone"* %1 to void (%"class.display::Display"*, %"class.aura::ScreenOzone"*, %"class.aura::Window"*)***
  %5 = load void (%"class.display::Display"*, %"class.aura::ScreenOzone"*, %"class.aura::Window"*)**, void (%"class.display::Display"*, %"class.aura::ScreenOzone"*, %"class.aura::Window"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.display::Display"*, %"class.aura::ScreenOzone"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.aura::ScreenOzone"*, %"class.aura::Window"*)** %5, i64 8
  %7 = load void (%"class.display::Display"*, %"class.aura::ScreenOzone"*, %"class.aura::Window"*)*, void (%"class.display::Display"*, %"class.aura::ScreenOzone"*, %"class.aura::Window"*)** %6, align 8
  tail call void %7(%"class.display::Display"* sret %0, %"class.aura::ScreenOzone"* %1, %"class.aura::Window"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4aura11ScreenOzone22GetDisplayNearestPointERKN3gfx5PointE(%"class.display::Display"* noalias sret, %"class.aura::ScreenOzone"* nocapture readonly, %"class.gfx::Point"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %4, align 8
  %6 = bitcast %"class.ui::PlatformScreen"* %5 to void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, %"class.gfx::Point"*)***
  %7 = load void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, %"class.gfx::Point"*)**, void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, %"class.gfx::Point"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, %"class.gfx::Point"*)*, void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, %"class.gfx::Point"*)** %7, i64 8
  %9 = load void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, %"class.gfx::Point"*)*, void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, %"class.gfx::Point"*)** %8, align 8
  tail call void %9(%"class.display::Display"* sret %0, %"class.ui::PlatformScreen"* %5, %"class.gfx::Point"* dereferenceable(8) %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4aura11ScreenOzone18GetDisplayMatchingERKN3gfx4RectE(%"class.display::Display"* noalias sret, %"class.aura::ScreenOzone"* nocapture readonly, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %4, align 8
  %6 = bitcast %"class.ui::PlatformScreen"* %5 to void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, %"class.gfx::Rect"*)***
  %7 = load void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, %"class.gfx::Rect"*)**, void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, %"class.gfx::Rect"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, %"class.gfx::Rect"*)*, void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, %"class.gfx::Rect"*)** %7, i64 9
  %9 = load void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, %"class.gfx::Rect"*)*, void (%"class.display::Display"*, %"class.ui::PlatformScreen"*, %"class.gfx::Rect"*)** %8, align 8
  tail call void %9(%"class.display::Display"* sret %0, %"class.ui::PlatformScreen"* %5, %"class.gfx::Rect"* dereferenceable(16) %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4aura11ScreenOzone17GetPrimaryDisplayEv(%"class.display::Display"* noalias sret, %"class.aura::ScreenOzone"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %3, align 8
  %5 = bitcast %"class.ui::PlatformScreen"* %4 to void (%"class.display::Display"*, %"class.ui::PlatformScreen"*)***
  %6 = load void (%"class.display::Display"*, %"class.ui::PlatformScreen"*)**, void (%"class.display::Display"*, %"class.ui::PlatformScreen"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.display::Display"*, %"class.ui::PlatformScreen"*)*, void (%"class.display::Display"*, %"class.ui::PlatformScreen"*)** %6, i64 3
  %8 = load void (%"class.display::Display"*, %"class.ui::PlatformScreen"*)*, void (%"class.display::Display"*, %"class.ui::PlatformScreen"*)** %7, align 8
  tail call void %8(%"class.display::Display"* sret %0, %"class.ui::PlatformScreen"* %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura11ScreenOzone23SetScreenSaverSuspendedEb(%"class.aura::ScreenOzone"* nocapture readonly, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %3, align 8
  %5 = bitcast %"class.ui::PlatformScreen"* %4 to void (%"class.ui::PlatformScreen"*, i1)***
  %6 = load void (%"class.ui::PlatformScreen"*, i1)**, void (%"class.ui::PlatformScreen"*, i1)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.ui::PlatformScreen"*, i1)*, void (%"class.ui::PlatformScreen"*, i1)** %6, i64 10
  %8 = load void (%"class.ui::PlatformScreen"*, i1)*, void (%"class.ui::PlatformScreen"*, i1)** %7, align 8
  tail call void %8(%"class.ui::PlatformScreen"* %4, i1 zeroext %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4aura11ScreenOzone19IsScreenSaverActiveEv(%"class.aura::ScreenOzone"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %2, align 8
  %4 = bitcast %"class.ui::PlatformScreen"* %3 to i1 (%"class.ui::PlatformScreen"*)***
  %5 = load i1 (%"class.ui::PlatformScreen"*)**, i1 (%"class.ui::PlatformScreen"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.ui::PlatformScreen"*)*, i1 (%"class.ui::PlatformScreen"*)** %5, i64 11
  %7 = load i1 (%"class.ui::PlatformScreen"*)*, i1 (%"class.ui::PlatformScreen"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.ui::PlatformScreen"* %3) #7
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK4aura11ScreenOzone17CalculateIdleTimeEv(%"class.aura::ScreenOzone"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %2, align 8
  %4 = bitcast %"class.ui::PlatformScreen"* %3 to i64 (%"class.ui::PlatformScreen"*)***
  %5 = load i64 (%"class.ui::PlatformScreen"*)**, i64 (%"class.ui::PlatformScreen"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.ui::PlatformScreen"*)*, i64 (%"class.ui::PlatformScreen"*)** %5, i64 12
  %7 = load i64 (%"class.ui::PlatformScreen"*)*, i64 (%"class.ui::PlatformScreen"*)** %6, align 8
  %8 = tail call i64 %7(%"class.ui::PlatformScreen"* %3) #7
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura11ScreenOzone11AddObserverEPN7display15DisplayObserverE(%"class.aura::ScreenOzone"* nocapture readonly, %"class.display::DisplayObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %3, align 8
  %5 = bitcast %"class.ui::PlatformScreen"* %4 to void (%"class.ui::PlatformScreen"*, %"class.display::DisplayObserver"*)***
  %6 = load void (%"class.ui::PlatformScreen"*, %"class.display::DisplayObserver"*)**, void (%"class.ui::PlatformScreen"*, %"class.display::DisplayObserver"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.ui::PlatformScreen"*, %"class.display::DisplayObserver"*)*, void (%"class.ui::PlatformScreen"*, %"class.display::DisplayObserver"*)** %6, i64 13
  %8 = load void (%"class.ui::PlatformScreen"*, %"class.display::DisplayObserver"*)*, void (%"class.ui::PlatformScreen"*, %"class.display::DisplayObserver"*)** %7, align 8
  tail call void %8(%"class.ui::PlatformScreen"* %4, %"class.display::DisplayObserver"* %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura11ScreenOzone14RemoveObserverEPN7display15DisplayObserverE(%"class.aura::ScreenOzone"* nocapture readonly, %"class.display::DisplayObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %3, align 8
  %5 = bitcast %"class.ui::PlatformScreen"* %4 to void (%"class.ui::PlatformScreen"*, %"class.display::DisplayObserver"*)***
  %6 = load void (%"class.ui::PlatformScreen"*, %"class.display::DisplayObserver"*)**, void (%"class.ui::PlatformScreen"*, %"class.display::DisplayObserver"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.ui::PlatformScreen"*, %"class.display::DisplayObserver"*)*, void (%"class.ui::PlatformScreen"*, %"class.display::DisplayObserver"*)** %6, i64 14
  %8 = load void (%"class.ui::PlatformScreen"*, %"class.display::DisplayObserver"*)*, void (%"class.ui::PlatformScreen"*, %"class.display::DisplayObserver"*)** %7, align 8
  tail call void %8(%"class.ui::PlatformScreen"* %4, %"class.display::DisplayObserver"* %1) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura11ScreenOzone19GetCurrentWorkspaceEv(%"class.std::__1::basic_string"* noalias sret, %"class.aura::ScreenOzone"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %3, align 8
  %5 = bitcast %"class.ui::PlatformScreen"* %4 to void (%"class.std::__1::basic_string"*, %"class.ui::PlatformScreen"*)***
  %6 = load void (%"class.std::__1::basic_string"*, %"class.ui::PlatformScreen"*)**, void (%"class.std::__1::basic_string"*, %"class.ui::PlatformScreen"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.ui::PlatformScreen"*)*, void (%"class.std::__1::basic_string"*, %"class.ui::PlatformScreen"*)** %6, i64 15
  %8 = load void (%"class.std::__1::basic_string"*, %"class.ui::PlatformScreen"*)*, void (%"class.std::__1::basic_string"*, %"class.ui::PlatformScreen"*)** %7, align 8
  tail call void %8(%"class.std::__1::basic_string"* sret %0, %"class.ui::PlatformScreen"* %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4aura11ScreenOzone26GetGpuExtraInfoAsListValueERKN3gfx12GpuExtraInfoE(%"class.base::Value"* noalias sret, %"class.aura::ScreenOzone"* nocapture readonly, %"struct.gfx::GpuExtraInfo"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.aura::ScreenOzone", %"class.aura::ScreenOzone"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.ui::PlatformScreen"*, %"class.ui::PlatformScreen"** %4, align 8
  %6 = bitcast %"class.ui::PlatformScreen"* %5 to void (%"class.base::Value"*, %"class.ui::PlatformScreen"*, %"struct.gfx::GpuExtraInfo"*)***
  %7 = load void (%"class.base::Value"*, %"class.ui::PlatformScreen"*, %"struct.gfx::GpuExtraInfo"*)**, void (%"class.base::Value"*, %"class.ui::PlatformScreen"*, %"struct.gfx::GpuExtraInfo"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.base::Value"*, %"class.ui::PlatformScreen"*, %"struct.gfx::GpuExtraInfo"*)*, void (%"class.base::Value"*, %"class.ui::PlatformScreen"*, %"struct.gfx::GpuExtraInfo"*)** %7, i64 16
  %9 = load void (%"class.base::Value"*, %"class.ui::PlatformScreen"*, %"struct.gfx::GpuExtraInfo"*)*, void (%"class.base::Value"*, %"class.ui::PlatformScreen"*, %"struct.gfx::GpuExtraInfo"*)** %8, align 8
  tail call void %9(%"class.base::Value"* sret %0, %"class.ui::PlatformScreen"* %5, %"struct.gfx::GpuExtraInfo"* dereferenceable(48) %2) #7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.aura::Window"* @_ZNK4aura11ScreenOzone36GetNativeWindowFromAcceleratedWidgetEj(%"class.aura::ScreenOzone"* nocapture readnone, i32) unnamed_addr #5 align 2 {
  ret %"class.aura::Window"* null
}

declare { i64, i64 } @_ZNK7display6Screen23ScreenToDIPRectInWindowEPN4aura6WindowERKN3gfx4RectE(%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare { i64, i64 } @_ZNK7display6Screen23DIPToScreenRectInWindowEPN4aura6WindowERKN3gfx4RectE(%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN7display6Screen26SetPanelRotationForTestingElNS_7Display8RotationE(%"class.display::Screen"*, i64, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.146"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.146"* %0, %"class.std::__1::__tree_node"* %6) #7
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.146"* %0, %"class.std::__1::__tree_node"* %9) #7
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #8
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!5 = !{i8 0, i8 2}
