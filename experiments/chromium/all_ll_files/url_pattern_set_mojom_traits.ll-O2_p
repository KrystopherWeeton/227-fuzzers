; ModuleID = '../../extensions/common/mojom/url_pattern_set_mojom_traits.cc'
source_filename = "../../extensions/common/mojom/url_pattern_set_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::mojom::internal::URLPattern_Data" = type { %"struct.mojo::internal::StructHeader", i32, [4 x i8], %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.0"*, %"class.mojo::ScopedHandleBase.0"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.0" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.0"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.4" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.13, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.15", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.13 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.14" }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }
%class.URLPattern = type { i32, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.extensions::mojom::internal::URLPatternSet_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.25" }
%"struct.mojo::internal::Pointer.25" = type { i64 }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { i64 }
%"class.std::__1::vector.34" = type { %"class.std::__1::__vector_base.35" }
%"class.std::__1::__vector_base.35" = type { %class.URLPattern*, %class.URLPattern*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %class.URLPattern* }
%"class.mojo::internal::Array_Data.41" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }

$_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN10extensions5mojom18URLPatternDataViewEEENSt3__16vectorI10URLPatternNS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal15URLPattern_DataEEEEEPSC_PNS_7MessageE = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN10extensions5mojom18URLPatternDataViewE10URLPatternE4ReadES3_PS4_(%"class.extensions::mojom::internal::URLPattern_Data"*, %"class.mojo::Message"*, %class.URLPattern*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #7
  %8 = getelementptr inbounds %"class.extensions::mojom::internal::URLPattern_Data", %"class.extensions::mojom::internal::URLPattern_Data"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %8, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  %12 = bitcast %"struct.mojo::internal::Pointer"* %8 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  br i1 %11, label %46, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = getelementptr inbounds i8, i8* %13, i64 4
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 1
  %19 = zext i32 %18 to i64
  %20 = tail call i1 @llvm.is.constant.i64(i64 %19) #7
  %21 = icmp ult i32 %18, 23
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %31

23:                                               ; preds = %14
  %24 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = trunc i32 %18 to i8
  store i8 %26, i8* %25, align 1
  %27 = icmp eq i32 %18, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 1 %15, i64 %19, i1 false) #7
  br label %29

29:                                               ; preds = %28, %23
  %30 = getelementptr inbounds i8, i8* %5, i64 %19
  store i8 0, i8* %30, align 1
  br label %34

31:                                               ; preds = %14
  %32 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %15, i64 %19) #7
  %33 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

34:                                               ; preds = %31, %29
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %33, %31 ], [ %24, %29 ]
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = load i8*, i8** %6, align 8
  %40 = select i1 %38, i8* %39, i8* %5
  %41 = load i64, i64* %7, align 8
  %42 = zext i8 %37 to i64
  %43 = select i1 %38, i64 %41, i64 %42
  %44 = call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %40, i64 %43) #7
  br i1 %44, label %46, label %45

45:                                               ; preds = %34
  call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #7
  br label %46

46:                                               ; preds = %3, %34, %45
  call void @_ZN10URLPattern15SetValidSchemesEi(%class.URLPattern* %2, i32 -1) #7
  %47 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = load i8*, i8** %6, align 8
  %52 = select i1 %50, i8* %51, i8* %5
  %53 = load i64, i64* %7, align 8
  %54 = zext i8 %49 to i64
  %55 = select i1 %50, i64 %53, i64 %54
  %56 = call i32 @_ZN10URLPattern5ParseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.URLPattern* %2, i8* %52, i64 %55) #7
  %57 = getelementptr inbounds %"class.extensions::mojom::internal::URLPattern_Data", %"class.extensions::mojom::internal::URLPattern_Data"* %0, i64 0, i32 1
  %58 = load i32, i32* %57, align 1
  call void @_ZN10URLPattern15SetValidSchemesEi(%class.URLPattern* %2, i32 %58) #7
  %59 = icmp eq i32 %56, 0
  %60 = load i8, i8* %48, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %46
  %63 = load i8*, i8** %6, align 8
  call void @_ZdlPv(i8* %63) #8
  br label %64

64:                                               ; preds = %46, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7
  ret i1 %59
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN10URLPattern15SetValidSchemesEi(%class.URLPattern*, i32) local_unnamed_addr #2

declare i32 @_ZN10URLPattern5ParseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.URLPattern*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN10extensions5mojom21URLPatternSetDataViewENS1_13URLPatternSetEE4ReadES3_PS4_(%"class.extensions::mojom::internal::URLPatternSet_Data"*, %"class.mojo::Message"*, %"class.extensions::URLPatternSet"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.34", align 8
  %5 = bitcast %"class.std::__1::vector.34"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #7
  %7 = getelementptr inbounds %"class.extensions::mojom::internal::URLPatternSet_Data", %"class.extensions::mojom::internal::URLPatternSet_Data"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"struct.mojo::internal::Pointer.25", %"struct.mojo::internal::Pointer.25"* %7, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  store %class.URLPattern* null, %class.URLPattern** %6, align 8
  br label %30

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %4, i64 0, i32 0, i32 0
  %14 = bitcast %"struct.mojo::internal::Pointer.25"* %7 to i8*
  %15 = getelementptr inbounds i8, i8* %14, i64 %9
  %16 = bitcast i8* %15 to %"class.mojo::internal::Array_Data.41"*
  %17 = call zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN10extensions5mojom18URLPatternDataViewEEENSt3__16vectorI10URLPatternNS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal15URLPattern_DataEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data.41"* nonnull %16, %"class.std::__1::vector.34"* nonnull %4, %"class.mojo::Message"* %1) #7
  %18 = load %class.URLPattern*, %class.URLPattern** %13, align 8
  br i1 %17, label %19, label %44

19:                                               ; preds = %12
  %20 = load %class.URLPattern*, %class.URLPattern** %6, align 8
  %21 = ptrtoint %class.URLPattern* %20 to i64
  %22 = ptrtoint %class.URLPattern* %18 to i64
  %23 = icmp eq %class.URLPattern* %18, %20
  br i1 %23, label %30, label %39

24:                                               ; preds = %39
  %25 = bitcast %class.URLPattern** %6 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector.34"* %4 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = inttoptr i64 %28 to %class.URLPattern*
  br label %30

30:                                               ; preds = %19, %11, %24
  %31 = phi %class.URLPattern* [ %29, %24 ], [ null, %11 ], [ %20, %19 ]
  %32 = phi i64 [ %28, %24 ], [ 0, %11 ], [ %22, %19 ]
  %33 = phi i64 [ %26, %24 ], [ 0, %11 ], [ %21, %19 ]
  %34 = sub i64 %33, %32
  %35 = sdiv exact i64 %34, 160
  %36 = getelementptr inbounds %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %35, %37
  br label %44

39:                                               ; preds = %19, %39
  %40 = phi %class.URLPattern* [ %42, %39 ], [ %18, %19 ]
  %41 = call zeroext i1 @_ZN10extensions13URLPatternSet10AddPatternERK10URLPattern(%"class.extensions::URLPatternSet"* %2, %class.URLPattern* dereferenceable(160) %40) #7
  %42 = getelementptr inbounds %class.URLPattern, %class.URLPattern* %40, i64 1
  %43 = icmp eq %class.URLPattern* %42, %20
  br i1 %43, label %24, label %39

44:                                               ; preds = %12, %30
  %45 = phi %class.URLPattern* [ %31, %30 ], [ %18, %12 ]
  %46 = phi i1 [ %38, %30 ], [ false, %12 ]
  %47 = icmp eq %class.URLPattern* %45, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %44
  %49 = bitcast %class.URLPattern* %45 to i8*
  %50 = load %class.URLPattern*, %class.URLPattern** %6, align 8
  %51 = icmp eq %class.URLPattern* %50, %45
  br i1 %51, label %59, label %52

52:                                               ; preds = %48, %52
  %53 = phi %class.URLPattern* [ %54, %52 ], [ %50, %48 ]
  %54 = getelementptr inbounds %class.URLPattern, %class.URLPattern* %53, i64 -1
  call void @_ZN10URLPatternD1Ev(%class.URLPattern* %54) #7
  %55 = icmp eq %class.URLPattern* %54, %45
  br i1 %55, label %56, label %52

56:                                               ; preds = %52
  %57 = bitcast %"class.std::__1::vector.34"* %4 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %48
  %60 = phi i8* [ %58, %56 ], [ %49, %48 ]
  store %class.URLPattern* %45, %class.URLPattern** %6, align 8
  call void @_ZdlPv(i8* %60) #8
  br label %61

61:                                               ; preds = %44, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7
  ret i1 %46
}

declare zeroext i1 @_ZN10extensions13URLPatternSet10AddPatternERK10URLPattern(%"class.extensions::URLPatternSet"*, %class.URLPattern* dereferenceable(160)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN10URLPatternD1Ev(%class.URLPattern*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo8internal15ArraySerializerINS_13ArrayDataViewIN10extensions5mojom18URLPatternDataViewEEENSt3__16vectorI10URLPatternNS7_9allocatorIS9_EEEENS0_13ArrayIteratorINS_11ArrayTraitsISC_EESC_Lb0EEEvE19DeserializeElementsEPNS0_10Array_DataINS0_7PointerINS4_8internal15URLPattern_DataEEEEEPSC_PNS_7MessageE(%"class.mojo::internal::Array_Data.41"*, %"class.std::__1::vector.34"*, %"class.mojo::Message"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::Array_Data.41", %"class.mojo::internal::Array_Data.41"* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 1
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %class.URLPattern** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.34"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 160
  %14 = icmp eq i64 %13, %6
  br i1 %14, label %49, label %15

15:                                               ; preds = %3
  %16 = icmp eq i32 %5, 0
  br i1 %16, label %31, label %17

17:                                               ; preds = %15
  %18 = mul nuw nsw i64 %6, 160
  %19 = tail call i8* @_Znwm(i64 %18) #8
  %20 = bitcast i8* %19 to %class.URLPattern*
  %21 = getelementptr inbounds %class.URLPattern, %class.URLPattern* %20, i64 %6
  %22 = ptrtoint i8* %19 to i64
  br label %23

23:                                               ; preds = %23, %17
  %24 = phi %class.URLPattern* [ %25, %23 ], [ %20, %17 ]
  tail call void @_ZN10URLPatternC1Ev(%class.URLPattern* %24) #7
  %25 = getelementptr inbounds %class.URLPattern, %class.URLPattern* %24, i64 1
  %26 = icmp eq %class.URLPattern* %25, %21
  br i1 %26, label %27, label %23

27:                                               ; preds = %23
  %28 = ptrtoint %class.URLPattern* %21 to i64
  %29 = load i64, i64* %10, align 8
  %30 = load i64, i64* %8, align 8
  br label %31

31:                                               ; preds = %15, %27
  %32 = phi i64 [ %28, %27 ], [ 0, %15 ]
  %33 = phi i64 [ %30, %27 ], [ %9, %15 ]
  %34 = phi i64 [ %22, %27 ], [ 0, %15 ]
  %35 = phi i64 [ %29, %27 ], [ %11, %15 ]
  store i64 %34, i64* %10, align 8
  store i64 %32, i64* %8, align 8
  %36 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast %class.URLPattern** %36 to i64*
  store i64 %32, i64* %37, align 8
  %38 = inttoptr i64 %35 to %class.URLPattern*
  %39 = icmp eq i64 %35, 0
  %40 = inttoptr i64 %33 to %class.URLPattern*
  br i1 %39, label %49, label %41

41:                                               ; preds = %31
  %42 = icmp eq %class.URLPattern* %40, %38
  br i1 %42, label %47, label %43

43:                                               ; preds = %41, %43
  %44 = phi %class.URLPattern* [ %45, %43 ], [ %40, %41 ]
  %45 = getelementptr inbounds %class.URLPattern, %class.URLPattern* %44, i64 -1
  tail call void @_ZN10URLPatternD1Ev(%class.URLPattern* %45) #7
  %46 = icmp eq %class.URLPattern* %45, %38
  br i1 %46, label %47, label %43

47:                                               ; preds = %43, %41
  %48 = inttoptr i64 %35 to i8*
  tail call void @_ZdlPv(i8* %48) #8
  br label %49

49:                                               ; preds = %3, %47, %31
  %50 = load i32, i32* %4, align 1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %78, label %52

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.mojo::internal::Array_Data.41", %"class.mojo::internal::Array_Data.41"* %0, i64 1
  %54 = getelementptr inbounds %"class.std::__1::vector.34", %"class.std::__1::vector.34"* %1, i64 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %52, %74
  %56 = phi i32 [ %50, %52 ], [ %75, %74 ]
  %57 = phi i64 [ 0, %52 ], [ %64, %74 ]
  %58 = getelementptr inbounds %"class.mojo::internal::Array_Data.41", %"class.mojo::internal::Array_Data.41"* %53, i64 %57
  %59 = bitcast %"class.mojo::internal::Array_Data.41"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  %62 = bitcast %"class.mojo::internal::Array_Data.41"* %58 to i8*
  %63 = getelementptr inbounds i8, i8* %62, i64 %60
  %64 = add nuw nsw i64 %57, 1
  %65 = icmp eq i8* %63, null
  %66 = or i1 %61, %65
  br i1 %66, label %74, label %67

67:                                               ; preds = %55
  %68 = bitcast i8* %63 to %"class.extensions::mojom::internal::URLPattern_Data"*
  %69 = load %class.URLPattern*, %class.URLPattern** %54, align 8
  %70 = getelementptr inbounds %class.URLPattern, %class.URLPattern* %69, i64 %57
  %71 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN10extensions5mojom18URLPatternDataViewE10URLPatternE4ReadES3_PS4_(%"class.extensions::mojom::internal::URLPattern_Data"* nonnull %68, %"class.mojo::Message"* %2, %class.URLPattern* %70) #7
  br i1 %71, label %72, label %78

72:                                               ; preds = %67
  %73 = load i32, i32* %4, align 1
  br label %74

74:                                               ; preds = %72, %55
  %75 = phi i32 [ %73, %72 ], [ %56, %55 ]
  %76 = zext i32 %75 to i64
  %77 = icmp ult i64 %64, %76
  br i1 %77, label %55, label %78

78:                                               ; preds = %74, %67, %49
  %79 = phi i1 [ true, %49 ], [ false, %67 ], [ true, %74 ]
  ret i1 %79
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN10URLPatternC1Ev(%class.URLPattern*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
