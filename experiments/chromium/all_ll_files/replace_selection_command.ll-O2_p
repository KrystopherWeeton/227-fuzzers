; ModuleID = '../../third_party/blink/renderer/core/editing/commands/replace_selection_command.cc'
source_filename = "../../third_party/blink/renderer/core/editing/commands/replace_selection_command.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::String>::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::String>::InstanceStorage" = type { [8 x i8] }
%"class.WTF::StaticSingleton.2528" = type { %"class.WTF::StaticSingleton<WTF::HashSet<WTF::AtomicString, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashSet<WTF::AtomicString, WTF::AtomicStringHash, WTF::HashTraits<WTF::AtomicString>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.106" }
%"struct.std::__1::atomic.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__cxx_atomic_impl.109" }
%"struct.std::__1::__cxx_atomic_impl.109" = type { %"struct.std::__1::__cxx_atomic_base_impl.110" }
%"struct.std::__1::__cxx_atomic_base_impl.110" = type { i32 }
%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.154", i32, [4 x i8], %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.290", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.306", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.318", %"class.std::__1::unique_ptr.324", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.331", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.270", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.190" = type { %"struct.std::__1::__atomic_base.191" }
%"struct.std::__1::__atomic_base.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__cxx_atomic_impl.193" }
%"struct.std::__1::__cxx_atomic_impl.193" = type { %"struct.std::__1::__cxx_atomic_base_impl.194" }
%"struct.std::__1::__cxx_atomic_base_impl.194" = type { i64 }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::Worklist.229"* }
%"class.blink::Worklist.229" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::Worklist.236"* }
%"class.blink::Worklist.236" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::Worklist.243"* }
%"class.blink::Worklist.243" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.190" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.250", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.262", %"class.std::__1::__compressed_pair.264", [4 x i8] }>
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252", %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { i64 }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { float }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.273", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.282" }
%"class.WTF::Vector.282" = type { %"class.WTF::VectorBuffer.283" }
%"class.WTF::VectorBuffer.283" = type { %"class.WTF::VectorBufferBase.284" }
%"class.WTF::VectorBufferBase.284" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.298" }
%"class.WTF::VectorBuffer.298" = type { %"class.WTF::VectorBufferBase.299" }
%"class.WTF::VectorBufferBase.299" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.312" }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.201"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.208"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.215"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.222"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.229"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.569" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.330 }
%class.scoped_refptr.330 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.331" = type { %"struct.std::__1::__atomic_base.332" }
%"struct.std::__1::__atomic_base.332" = type { %"struct.std::__1::__cxx_atomic_impl.333" }
%"struct.std::__1::__cxx_atomic_impl.333" = type { %"struct.std::__1::__cxx_atomic_base_impl.334" }
%"struct.std::__1::__cxx_atomic_base_impl.334" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ReplacementFragment" = type <{ %"class.blink::Document"*, %"class.blink::DocumentFragment"*, i8, i8, [6 x i8] }>
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.102", %"class.WTF::Vector.102", i8, i32, %"class.blink::Member.113", %"class.blink::Member.115", %"class.blink::Member.117", %"class.blink::Member.119", %"class.blink::Member.121", %"class.blink::Member.123", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.126", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.132", %"class.blink::Member.134", %"class.blink::Member.61", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.137", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.347", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.356", double, double, i64, i64, %"class.blink::HeapHashSet.358", %"class.blink::HeapHashSet.365", i16, i8, %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::Member.378", %"class.blink::TextLinkColors", %"class.blink::Member.380", i8, [7 x i8], %"class.blink::HeapHashMap.382", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.389", %"class.blink::Member.394", %"class.blink::Member.396", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.398", %"class.blink::HeapVector.400", %"class.std::__1::unique_ptr.408", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.414", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.427", %"class.WTF::Vector.429", i8, i8, %"class.std::__1::unique_ptr.434", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.440", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.448", i8, i32, %"class.blink::Member.450", %"class.blink::Member.452", %"class.blink::Member.454", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.456", %"class.WTF::HashMap.458", %"class.blink::Member.463", %"class.blink::Member.465", %"class.blink::Member.467", %"class.blink::Member.469", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.471", i8, i32, %"class.blink::Member.478", %"class.blink::Member.480", i32, %"class.blink::Member.482", %"class.blink::Member.484", %"class.blink::Member.486", %"class.std::__1::unique_ptr.488", i64, %"class.std::__1::unique_ptr.494", i32, i32, %"class.blink::Member.505", %"class.blink::Member.507", %"class.blink::Member.509", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.511", %"class.WTF::Vector.513", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.518", %"class.blink::Member.525", %"class.std::__1::unique_ptr.527", %"class.blink::Member.533", i8, i8, %"class.WTF::String", %"class.blink::Member.535", i8, [7 x i8], %"class.blink::HeapHashMap.537", %"class.blink::HeapObserverSet", %"class.blink::Member.551", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.553", i32, i8, i8, %"class.blink::WeakMember.555", %"class.blink::Member.556" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.53", %"class.blink::HeapVector.55" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::HeapHashMap.52"* }
%"class.blink::HeapHashMap.52" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.55" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.95" }
%"class.blink::HeapHashMap.95" = type { %"class.WTF::HashMap.98" }
%"class.WTF::HashMap.98" = type { %"class.WTF::HashTable.99" }
%"class.WTF::HashTable.99" = type <{ %"struct.WTF::KeyValuePair.101"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.101" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.102" = type { %"class.WTF::VectorBuffer.103" }
%"class.WTF::VectorBuffer.103" = type { %"class.WTF::VectorBufferBase.104" }
%"class.WTF::VectorBufferBase.104" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.105 }
%class.scoped_refptr.105 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.106" }
%"class.blink::Member.113" = type { %"class.blink::MemberBase.114" }
%"class.blink::MemberBase.114" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.574", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.642", i32, i8, [3 x i8], %"class.blink::HeapVector.644", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.652", %"class.blink::Member.654", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.663", %"class.blink::Member.791", %"class.blink::Member.793", i8, [7 x i8] }>
%"class.blink::Supplementable.574" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.575" }
%"class.blink::HeapHashMap.575" = type { %"class.WTF::HashMap.578" }
%"class.WTF::HashMap.578" = type { %"class.WTF::HashTable.579" }
%"class.WTF::HashTable.579" = type <{ %"struct.WTF::KeyValuePair.581"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.581" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.590" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.582" }
%"class.blink::HeapObserverSet.582" = type { i32, [4 x i8], %"class.blink::HeapHashSet.583" }
%"class.blink::HeapHashSet.583" = type { %"class.WTF::HashSet.586" }
%"class.WTF::HashSet.586" = type { %"class.WTF::HashTable.587" }
%"class.WTF::HashTable.587" = type <{ %"class.blink::WeakMember.589"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.589" = type opaque
%"class.blink::Supplementable.590" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.591" }
%"class.blink::HeapHashMap.591" = type { %"class.WTF::HashMap.594" }
%"class.WTF::HashMap.594" = type { %"class.WTF::HashTable.595" }
%"class.WTF::HashTable.595" = type <{ %"struct.WTF::KeyValuePair.597"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.597" = type { i8*, %"class.blink::Member.2387" }
%"class.blink::Member.2387" = type { %"class.blink::MemberBase.2388" }
%"class.blink::MemberBase.2388" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2389" }
%"class.blink::Member.2389" = type { %"class.blink::MemberBase.2390" }
%"class.blink::MemberBase.2390" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.598, %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.632", %"class.std::__1::unique_ptr.632", %"class.blink::Member.115", i32, [4 x i8], %"class.WTF::HashSet.638", i32, i32 }
%class.scoped_refptr.598 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.599", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.601 }
%"class.WTF::RefCounted.599" = type { %"class.base::RefCounted.600" }
%"class.base::RefCounted.600" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.601 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.619", %"class.std::__1::map.628"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.605" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.607 }
%union.anon.607 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.611", %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::map.619" = type { %"class.std::__1::__tree.620" }
%"class.std::__1::__tree.620" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::map.628" = type opaque
%"class.std::__1::unique_ptr.632" = type { %"class.std::__1::__compressed_pair.633" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.638" = type { %"class.WTF::HashTable.639" }
%"class.WTF::HashTable.639" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.644" = type { %"class.WTF::Vector.647" }
%"class.WTF::Vector.647" = type { %"class.WTF::VectorBuffer.648" }
%"class.WTF::VectorBuffer.648" = type { %"class.WTF::VectorBufferBase.649" }
%"class.WTF::VectorBufferBase.649" = type { %"class.blink::Member.650"*, i32, i32 }
%"class.blink::Member.650" = type opaque
%"class.blink::Member.652" = type { %"class.blink::MemberBase.653" }
%"class.blink::MemberBase.653" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.654" = type { %"class.blink::MemberBase.655" }
%"class.blink::MemberBase.655" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.656", i32, i32 }
%"class.blink::HeapHashMap.656" = type { %"class.WTF::HashMap.659" }
%"class.WTF::HashMap.659" = type { %"class.WTF::HashTable.660" }
%"class.WTF::HashTable.660" = type <{ %"struct.WTF::KeyValuePair.662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.662" = type opaque
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.666" }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.669" }
%"class.WTF::Vector.669" = type { %"class.WTF::VectorBuffer.670" }
%"class.WTF::VectorBuffer.670" = type { %"class.WTF::VectorBufferBase.671" }
%"class.WTF::VectorBufferBase.671" = type { %"class.mojo::StructPtr.672"*, i32, i32 }
%"class.mojo::StructPtr.672" = type { %"class.std::__1::unique_ptr.673" }
%"class.std::__1::unique_ptr.673" = type { %"class.std::__1::__compressed_pair.674" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.676", %"class.WTF::HashMap.683", %"class.WTF::HashMap.688", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.693", i32, %"class.mojo::StructPtr.698", %"class.WTF::Vector.693" }
%"class.mojo::StructPtr.676" = type { %"class.std::__1::unique_ptr.677" }
%"class.std::__1::unique_ptr.677" = type { %"class.std::__1::__compressed_pair.678" }
%"class.std::__1::__compressed_pair.678" = type { %"struct.std::__1::__compressed_pair_elem.679" }
%"struct.std::__1::__compressed_pair_elem.679" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.683" = type { %"class.WTF::HashTable.684" }
%"class.WTF::HashTable.684" = type <{ %"struct.WTF::KeyValuePair.687"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.687" = type opaque
%"class.WTF::HashMap.688" = type { %"class.WTF::HashTable.689" }
%"class.WTF::HashTable.689" = type <{ %"struct.WTF::KeyValuePair.692"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.692" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.698" = type { %"class.std::__1::unique_ptr.699" }
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.693", i8, i8, [6 x i8] }>
%"class.WTF::Vector.693" = type { %"class.WTF::VectorBuffer.694" }
%"class.WTF::VectorBuffer.694" = type { %"class.WTF::VectorBufferBase.695" }
%"class.WTF::VectorBufferBase.695" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.782" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.713", i32 }>
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.716", %"class.absl::optional.717", %"class.absl::optional.722", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.735", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.757", %"class.std::__1::map.768", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.777", i8, %class.scoped_refptr.727, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.778" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.716" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.717" = type { %"class.absl::optional_internal::optional_data.718" }
%"class.absl::optional_internal::optional_data.718" = type { %"class.absl::optional_internal::optional_data_base.719" }
%"class.absl::optional_internal::optional_data_base.719" = type { %"class.absl::optional_internal::optional_data_dtor_base.720" }
%"class.absl::optional_internal::optional_data_dtor_base.720" = type { i8, %union.anon.721 }
%union.anon.721 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.722" = type { %"class.absl::optional_internal::optional_data.723" }
%"class.absl::optional_internal::optional_data.723" = type { %"class.absl::optional_internal::optional_data_base.724" }
%"class.absl::optional_internal::optional_data_base.724" = type { %"class.absl::optional_internal::optional_data_dtor_base.725" }
%"class.absl::optional_internal::optional_data_dtor_base.725" = type { i8, %union.anon.726 }
%union.anon.726 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.727, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.728" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.728" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.339 }
%class.scoped_refptr.339 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.340", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.340" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.341" }
%"struct.std::__1::atomic.341" = type { %"struct.std::__1::__atomic_base.342" }
%"struct.std::__1::__atomic_base.342" = type { %"struct.std::__1::__atomic_base.343" }
%"struct.std::__1::__atomic_base.343" = type { %"struct.std::__1::__cxx_atomic_impl.344" }
%"struct.std::__1::__cxx_atomic_impl.344" = type { %"struct.std::__1::__cxx_atomic_base_impl.345" }
%"struct.std::__1::__cxx_atomic_base_impl.345" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.733 }
%class.scoped_refptr.733 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.795", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.727, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.795" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.734 }
%class.scoped_refptr.734 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.738", %class.scoped_refptr.739 }
%"class.base::RepeatingCallback.738" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.739 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.740", [4 x i8] }>
%"class.base::RefCountedThreadSafe.740" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.744", %"class.std::__1::unique_ptr.750", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.756" }
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.756" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.757" = type { %"class.std::__1::__tree.758" }
%"class.std::__1::__tree.758" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.759", %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::map.768" = type { %"class.std::__1::__tree.769" }
%"class.std::__1::__tree.769" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.770", %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.base::OnceCallback.777" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.727 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.338" }>
%"class.base::RefCountedThreadSafe.338" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.778" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.132" = type { %"class.blink::MemberBase.133" }
%"class.blink::MemberBase.133" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.63", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.65, %"class.WTF::Vector.66", %"class.WTF::Vector.66", %"class.blink::Member", %"class.blink::Member.71", %"class.blink::HeapHashSet", %"class.blink::Member.8", %"class.WTF::HashSet.79", %"class.WTF::TextPosition", %"class.blink::Member.83", %"class.blink::HeapVector.85", %"class.blink::Member.92" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.65 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.66" = type { %"class.WTF::VectorBuffer.67" }
%"class.WTF::VectorBuffer.67" = type { %"class.WTF::VectorBufferBase.68" }
%"class.WTF::VectorBufferBase.68" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.73" }
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.77" }
%"class.WTF::HashTable.77" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.79" = type { %"class.WTF::HashTable.80" }
%"class.WTF::HashTable.80" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.83" = type { %"class.blink::MemberBase.84" }
%"class.blink::MemberBase.84" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.85" = type { %"class.WTF::Vector.88" }
%"class.WTF::Vector.88" = type { %"class.WTF::VectorBuffer.89" }
%"class.WTF::VectorBuffer.89" = type { %"class.WTF::VectorBufferBase.90" }
%"class.WTF::VectorBufferBase.90" = type { %"class.blink::Member.71"*, i32, i32 }
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.136 }
%class.scoped_refptr.136 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.137" = type { %"class.WTF::VectorBuffer.138" }
%"class.WTF::VectorBuffer.138" = type { %"class.WTF::VectorBufferBase.139" }
%"class.WTF::VectorBufferBase.139" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.140 }
%class.scoped_refptr.140 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.141", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.141" = type { %"class.base::RefCounted.142" }
%"class.base::RefCounted.142" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.145" }
%"class.blink::HeapHashMap.145" = type { %"class.WTF::HashMap.148" }
%"class.WTF::HashMap.148" = type { %"class.WTF::HashTable.149" }
%"class.WTF::HashTable.149" = type <{ %"struct.WTF::KeyValuePair.151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.151" = type { %"class.blink::WeakMember.152", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.8", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.349" }
%"class.blink::HeapHashMap.349" = type { %"class.WTF::HashMap.352" }
%"class.WTF::HashMap.352" = type { %"class.WTF::HashTable.353" }
%"class.WTF::HashTable.353" = type <{ %"struct.WTF::KeyValuePair.355"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.355" = type opaque
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.358" = type { %"class.WTF::HashSet.361" }
%"class.WTF::HashSet.361" = type { %"class.WTF::HashTable.362" }
%"class.WTF::HashTable.362" = type <{ %"class.blink::WeakMember.364"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.364" = type opaque
%"class.blink::HeapHashSet.365" = type { %"class.WTF::HashSet.368" }
%"class.WTF::HashSet.368" = type { %"class.WTF::HashTable.369" }
%"class.WTF::HashTable.369" = type <{ %"class.blink::WeakMember.371"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.371" = type opaque
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.55" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.382" = type { %"class.WTF::HashMap.385" }
%"class.WTF::HashMap.385" = type { %"class.WTF::HashTable.386" }
%"class.WTF::HashTable.386" = type <{ %"struct.WTF::KeyValuePair.388"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.388" = type opaque
%"class.WTF::Vector.389" = type { %"class.WTF::VectorBuffer.390" }
%"class.WTF::VectorBuffer.390" = type { %"class.WTF::VectorBufferBase.391" }
%"class.WTF::VectorBufferBase.391" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.35", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.35" = type { %"class.base::RefCounted.36" }
%"class.base::RefCounted.36" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.400" = type { %"class.WTF::Vector.403" }
%"class.WTF::Vector.403" = type { %"class.WTF::VectorBuffer.404" }
%"class.WTF::VectorBuffer.404" = type { %"class.WTF::VectorBufferBase.405" }
%"class.WTF::VectorBufferBase.405" = type { %"class.blink::Member.406"*, i32, i32 }
%"class.blink::Member.406" = type opaque
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.414" = type { %"class.WTF::HashSet.417" }
%"class.WTF::HashSet.417" = type { %"class.WTF::HashTable.418" }
%"class.WTF::HashTable.418" = type <{ %"class.blink::WeakMember.420"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.420" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.421", i32, [4 x i8] }>
%"class.WTF::Vector.421" = type { %"class.WTF::VectorBuffer.422" }
%"class.WTF::VectorBuffer.422" = type { %"class.WTF::VectorBufferBase.423" }
%"class.WTF::VectorBufferBase.423" = type { %"struct.std::__1::pair.424"*, i32, i32 }
%"struct.std::__1::pair.424" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.429" = type { %"class.WTF::VectorBuffer.430" }
%"class.WTF::VectorBuffer.430" = type { %"class.WTF::VectorBufferBase.431" }
%"class.WTF::VectorBufferBase.431" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.440" = type { %"class.WTF::Vector.443" }
%"class.WTF::Vector.443" = type { %"class.WTF::VectorBuffer.444" }
%"class.WTF::VectorBuffer.444" = type { %"class.WTF::VectorBufferBase.445" }
%"class.WTF::VectorBufferBase.445" = type { %"class.blink::Member.446"*, i32, i32 }
%"class.blink::Member.446" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.454" = type { %"class.blink::MemberBase.455" }
%"class.blink::MemberBase.455" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.458" = type { %"class.WTF::HashTable.459" }
%"class.WTF::HashTable.459" = type <{ %"struct.WTF::KeyValuePair.462"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.462" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.467" = type { %"class.blink::MemberBase.468" }
%"class.blink::MemberBase.468" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.469" = type { %"class.blink::MemberBase.470" }
%"class.blink::MemberBase.470" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.346", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.337, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.337 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.346" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.471" = type { %"class.WTF::HashSet.474" }
%"class.WTF::HashSet.474" = type { %"class.WTF::HashTable.475" }
%"class.WTF::HashTable.475" = type <{ %"class.blink::Member.477"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.477" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.486" = type { %"class.blink::MemberBase.487" }
%"class.blink::MemberBase.487" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", %"class.WTF::HashSet.79", i32, [4 x i8], %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", %"class.WTF::HashMap.497", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.497" = type { %"class.WTF::HashTable.498" }
%"class.WTF::HashTable.498" = type <{ %"struct.WTF::KeyValuePair.501"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.501" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.511" = type { %"class.blink::MemberBase.512" }
%"class.blink::MemberBase.512" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.513" = type { %"class.WTF::VectorBuffer.514" }
%"class.WTF::VectorBuffer.514" = type { %"class.WTF::VectorBufferBase.515" }
%"class.WTF::VectorBufferBase.515" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.518" = type { %"class.WTF::HashMap.521" }
%"class.WTF::HashMap.521" = type { %"class.WTF::HashTable.522" }
%"class.WTF::HashTable.522" = type <{ %"struct.WTF::KeyValuePair.524"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.524" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.535" = type { %"class.blink::MemberBase.536" }
%"class.blink::MemberBase.536" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.537" = type { %"class.WTF::HashMap.540" }
%"class.WTF::HashMap.540" = type { %"class.WTF::HashTable.541" }
%"class.WTF::HashTable.541" = type <{ %"struct.WTF::KeyValuePair.543"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.543" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.544" }
%"class.blink::HeapHashSet.544" = type { %"class.WTF::HashSet.547" }
%"class.WTF::HashSet.547" = type { %"class.WTF::HashTable.548" }
%"class.WTF::HashTable.548" = type <{ %"class.blink::WeakMember.550"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.550" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.560", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.567", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.560" = type { %"class.WTF::HashSet.563" }
%"class.WTF::HashSet.563" = type { %"class.WTF::HashTable.564" }
%"class.WTF::HashTable.564" = type <{ %"class.blink::Member.566"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.566" = type opaque
%"class.blink::HeapTaskRunnerTimer.567" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.568", { i64, i64 } }
%"class.blink::WeakMember.568" = type { %"class.blink::MemberBase.554" }
%"class.blink::WeakMember.555" = type { %"class.blink::MemberBase" }
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::VisibleSelectionTemplate" = type <{ %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, [3 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::ReplaceSelectionCommand" = type { %"class.blink::CompositeEditCommand", %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", %"class.blink::Member.1445", i8, i8, i8, %"class.blink::Member.1465", i8, i8, i32, i8, i8, %"class.blink::PositionTemplate", %"class.blink::PositionTemplate" }
%"class.blink::CompositeEditCommand" = type { %"class.blink::EditCommand.base", %"class.blink::HeapVector.1424", %"class.blink::SelectionForUndoStep", %"class.blink::SelectionForUndoStep", %"class.blink::Member.1433" }
%"class.blink::EditCommand.base" = type <{ i32 (...)**, %"class.blink::Member.8", %"class.blink::Member.1422", i8 }>
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::CompositeEditCommand"* }
%"class.blink::HeapVector.1424" = type { %"class.WTF::Vector.1427" }
%"class.WTF::Vector.1427" = type { %"class.WTF::VectorBuffer.1428" }
%"class.WTF::VectorBuffer.1428" = type { %"class.WTF::VectorBufferBase.1429" }
%"class.WTF::VectorBufferBase.1429" = type { %"class.blink::Member.1430"*, i32, i32 }
%"class.blink::Member.1430" = type { %"class.blink::MemberBase.1431" }
%"class.blink::MemberBase.1431" = type { %"class.blink::EditCommand"* }
%"class.blink::EditCommand" = type <{ i32 (...)**, %"class.blink::Member.8", %"class.blink::Member.1422", i8, [7 x i8] }>
%"class.blink::SelectionForUndoStep" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, %"class.blink::Member.21" }
%"class.blink::Member.1433" = type { %"class.blink::MemberBase.1434" }
%"class.blink::MemberBase.1434" = type { %"class.blink::UndoStep"* }
%"class.blink::UndoStep" = type <{ %"class.blink::Member.8", %"class.blink::SelectionForUndoStep", %"class.blink::SelectionForUndoStep", %"class.blink::HeapVector.1437", i64, i8, [7 x i8] }>
%"class.blink::HeapVector.1437" = type { %"class.WTF::Vector.1440" }
%"class.WTF::Vector.1440" = type { %"class.WTF::VectorBuffer.1441" }
%"class.WTF::VectorBuffer.1441" = type { %"class.WTF::VectorBufferBase.1442" }
%"class.WTF::VectorBufferBase.1442" = type { %"class.blink::Member.1443"*, i32, i32 }
%"class.blink::Member.1443" = type opaque
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::EditingStyle"* }
%"class.blink::EditingStyle" = type <{ %"class.blink::Member.1449", %"class.blink::Member", i8, [3 x i8], float, i8, [7 x i8] }>
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.1451", %"class.blink::HeapVector.1453", i8, [7 x i8] }>
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.1449" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1467" }
%"class.blink::WeakMember.1467" = type { %"class.blink::MemberBase.116" }
%"class.blink::HeapVector.1453" = type { %"class.WTF::Vector.1456" }
%"class.WTF::Vector.1456" = type { %"class.WTF::VectorBuffer.1457" }
%"class.WTF::VectorBuffer.1457" = type { %"class.WTF::VectorBufferBase.1458", [96 x i8] }
%"class.WTF::VectorBufferBase.1458" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.1459" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.1459" = type { %"class.blink::MemberBase.1460" }
%"class.blink::MemberBase.1460" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::DocumentFragment"* }
%"class.blink::EphemeralRangeTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate" }
%"class.blink::SelectionTemplate" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder" = type { %"class.blink::SelectionTemplate" }
%"class.blink::TextIteratorBehavior" = type { %union.anon.1409 }
%union.anon.1409 = type { i32 }
%"class.blink::TextIteratorBehavior::Builder" = type { %"class.blink::TextIteratorBehavior" }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.798" }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { i64 }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2497", %"class.blink::Member.2499", %"class.blink::Member.2501", %"class.blink::Member.2520", %"class.blink::Member.2522" }
%"class.blink::Member.2497" = type { %"class.blink::MemberBase.2498" }
%"class.blink::MemberBase.2498" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.803 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.803, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1246" }
%"class.blink::MemberBase.1246" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1247" }
%"class.std::__1::unique_ptr.1247" = type { %"class.std::__1::__compressed_pair.1248" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1250", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1256", %"class.std::__1::unique_ptr.1379", i8, %"class.absl::optional.1385", %class.scoped_refptr.1361, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1390" }
%"class.std::__1::unique_ptr.1250" = type { %"class.std::__1::__compressed_pair.1251" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1256" = type { %"class.std::__1::__compressed_pair.1257" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.1258" }
%"struct.std::__1::__compressed_pair_elem.1258" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1259, %class.scoped_refptr.1259, %class.scoped_refptr.1259, %class.scoped_refptr.1259, %class.scoped_refptr.1259, %class.scoped_refptr.1259, %class.scoped_refptr.1294, %class.scoped_refptr.1310, %class.scoped_refptr.1311, %class.scoped_refptr.1311, %class.scoped_refptr.1311, %class.scoped_refptr.1311, %class.scoped_refptr.1311, %class.scoped_refptr.1311, %class.scoped_refptr.1351, %class.scoped_refptr.1352, %class.scoped_refptr.1352, %class.scoped_refptr.1352, %class.scoped_refptr.1352, %class.scoped_refptr.1352, %class.scoped_refptr.1352, %class.scoped_refptr.1352, %class.scoped_refptr.1352, %class.scoped_refptr.1375 }
%class.scoped_refptr.1259 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1276" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1260", i8, i8, %class.scoped_refptr.1262, i32, i32 }
%"class.WTF::RefCounted.1260" = type { %"class.base::RefCounted.1261" }
%"class.base::RefCounted.1261" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1262 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1269, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1270", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1263" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.1263" = type { %"class.std::__1::__compressed_pair.1264" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.1265" }
%"struct.std::__1::__compressed_pair_elem.1265" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1269 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1295", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1295" = type { %"class.WTF::RefCounted.1296", i8, i8, %class.scoped_refptr.1269, i32, i32 }
%"class.WTF::RefCounted.1296" = type { %"class.base::RefCounted.1297" }
%"class.base::RefCounted.1297" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1298" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1298" = type { %"class.absl::optional_internal::optional_data.1299" }
%"class.absl::optional_internal::optional_data.1299" = type { %"class.absl::optional_internal::optional_data_base.1300" }
%"class.absl::optional_internal::optional_data_base.1300" = type { %"class.absl::optional_internal::optional_data_dtor_base.1301" }
%"class.absl::optional_internal::optional_data_dtor_base.1301" = type { i8, %union.anon.1302 }
%union.anon.1302 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1303", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1303" = type { %"class.std::__1::__vector_base.1304" }
%"class.std::__1::__vector_base.1304" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1305" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem.1306" }
%"struct.std::__1::__compressed_pair_elem.1306" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1270" = type { %"class.std::__1::__compressed_pair.1271" }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem.1272" }
%"struct.std::__1::__compressed_pair_elem.1272" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.1278" }
%"struct.std::__1::__compressed_pair_elem.1278" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1279", %"class.std::__1::unique_ptr.1285", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1279" = type { %"class.std::__1::__compressed_pair.1280" }
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.1281" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1285" = type { %"class.std::__1::__compressed_pair.1286" }
%"class.std::__1::__compressed_pair.1286" = type { %"struct.std::__1::__compressed_pair_elem.1287" }
%"struct.std::__1::__compressed_pair_elem.1287" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1294 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1310 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1311 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1312" }
%"class.blink::PaintPropertyNode.1312" = type { %"class.WTF::RefCounted.1313", i8, i8, %class.scoped_refptr.1315, i32, i32 }
%"class.WTF::RefCounted.1313" = type { %"class.base::RefCounted.1314" }
%"class.base::RefCounted.1314" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1315 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1262, %class.scoped_refptr.1316, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1338", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1316 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1353" }
%"class.blink::PaintPropertyNode.1353" = type { %"class.WTF::RefCounted.1354", i8, i8, %class.scoped_refptr.1316, i32, i32 }
%"class.WTF::RefCounted.1354" = type { %"class.base::RefCounted.1355" }
%"class.base::RefCounted.1355" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1317" }
%"class.std::__1::vector.1317" = type { %"class.std::__1::__vector_base.1318" }
%"class.std::__1::__vector_base.1318" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1333" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1319, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1326", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1319 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1320, i32, %"class.absl::optional.1321", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.106" }>
%class.sk_sp.1320 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1321" = type { %"class.absl::optional_internal::optional_data.1322" }
%"class.absl::optional_internal::optional_data.1322" = type { %"class.absl::optional_internal::optional_data_base.1323" }
%"class.absl::optional_internal::optional_data_base.1323" = type { %"class.absl::optional_internal::optional_data_dtor_base.1324" }
%"class.absl::optional_internal::optional_data_dtor_base.1324" = type { i8, %union.anon.1325 }
%union.anon.1325 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.1326" = type { %"class.std::__1::__vector_base.1327" }
%"class.std::__1::__vector_base.1327" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1328" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1328" = type { %"struct.std::__1::__compressed_pair_elem.1329" }
%"struct.std::__1::__compressed_pair_elem.1329" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1333" = type { %"struct.std::__1::__compressed_pair_elem.1334" }
%"struct.std::__1::__compressed_pair_elem.1334" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.std::__1::unique_ptr.1338" = type { %"class.std::__1::__compressed_pair.1339" }
%"class.std::__1::__compressed_pair.1339" = type { %"struct.std::__1::__compressed_pair_elem.1340" }
%"struct.std::__1::__compressed_pair_elem.1340" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1344" }
%"class.std::__1::vector.1344" = type { %"class.std::__1::__vector_base.1345" }
%"class.std::__1::__vector_base.1345" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1346" }
%"class.std::__1::__compressed_pair.1346" = type { %"struct.std::__1::__compressed_pair_elem.1347" }
%"struct.std::__1::__compressed_pair_elem.1347" = type { i32* }
%class.scoped_refptr.1351 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1352 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1364" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1262, %"class.absl::optional.1356", %class.scoped_refptr.1361, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1356" = type { %"class.absl::optional_internal::optional_data.1357" }
%"class.absl::optional_internal::optional_data.1357" = type { %"class.absl::optional_internal::optional_data_base.1358" }
%"class.absl::optional_internal::optional_data_base.1358" = type { %"class.absl::optional_internal::optional_data_dtor_base.1359" }
%"class.absl::optional_internal::optional_data_dtor_base.1359" = type { i8, [3 x i8], %union.anon.1360 }
%union.anon.1360 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1364" = type { %"class.std::__1::__compressed_pair.1365" }
%"class.std::__1::__compressed_pair.1365" = type { %"struct.std::__1::__compressed_pair_elem.1366" }
%"struct.std::__1::__compressed_pair_elem.1366" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1367", i32, [4 x i8] }>
%"class.WTF::Vector.1367" = type { %"class.WTF::VectorBuffer.1368" }
%"class.WTF::VectorBuffer.1368" = type { %"class.WTF::VectorBufferBase.1369" }
%"class.WTF::VectorBufferBase.1369" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1375 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1379" = type { %"class.std::__1::__compressed_pair.1380" }
%"class.std::__1::__compressed_pair.1380" = type { %"struct.std::__1::__compressed_pair_elem.1381" }
%"struct.std::__1::__compressed_pair_elem.1381" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1262, %class.scoped_refptr.1316, %class.scoped_refptr.1315 }
%"class.absl::optional.1385" = type { %"class.absl::optional_internal::optional_data.1386" }
%"class.absl::optional_internal::optional_data.1386" = type { %"class.absl::optional_internal::optional_data_base.1387" }
%"class.absl::optional_internal::optional_data_base.1387" = type { %"class.absl::optional_internal::optional_data_dtor_base.1388" }
%"class.absl::optional_internal::optional_data_dtor_base.1388" = type { i8, %union.anon.1389 }
%union.anon.1389 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1361 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1362", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1169, i32, %"struct.std::__1::atomic.341", %"struct.std::__1::atomic.341", i8, i8 }>
%class.sk_sp.1169 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1170, %class.SkTDArray.1171, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.106" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1170 = type { i8*, i32, i32 }
%class.SkTDArray.1171 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1172 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.106", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.341" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1172 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.331", [3 x i8] }
%"class.WTF::RefCounted.1362" = type { %"class.base::RefCounted.1363" }
%"class.base::RefCounted.1363" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1390" = type { %"class.std::__1::__compressed_pair.1391" }
%"class.std::__1::__compressed_pair.1391" = type { %"struct.std::__1::__compressed_pair_elem.1392" }
%"struct.std::__1::__compressed_pair_elem.1392" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.803 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1231", %"class.std::__1::unique_ptr.1233" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.868", %"class.blink::DataRef.948", %"class.blink::DataRef.952", %"class.blink::DataRef.1147", %"class.blink::DataRef.1214", %"class.blink::DataRef.1218", %"class.blink::DataRef.1222", %"class.blink::DataRef.1226", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.804 }
%class.scoped_refptr.804 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.805", %"class.blink::DataRef.807", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.805" = type { %"class.base::RefCounted.806" }
%"class.base::RefCounted.806" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.807" = type { %class.scoped_refptr.808 }
%class.scoped_refptr.808 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.809", %"class.blink::Font" }
%"class.WTF::RefCounted.809" = type { %"class.base::RefCounted.810" }
%"class.base::RefCounted.810" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.837 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.812, %class.scoped_refptr.820, %class.scoped_refptr.830, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.836 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.811 }
%class.scoped_refptr.811 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1401", [4 x i8] }>
%"class.WTF::RefCounted.1401" = type { %"class.base::RefCounted.1402" }
%"class.base::RefCounted.1402" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.812 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.818", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.813" }
%"class.WTF::Vector.813" = type { %"class.WTF::VectorBuffer.814" }
%"class.WTF::VectorBuffer.814" = type { %"class.WTF::VectorBufferBase.815" }
%"class.WTF::VectorBufferBase.815" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.818" = type { %"class.base::RefCounted.819" }
%"class.base::RefCounted.819" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.820 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.821", %"class.WTF::RefCounted.828", [4 x i8] }>
%"class.blink::FontSettings.821" = type { %"class.WTF::Vector.822" }
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"class.blink::FontTagValuePair.825"*, i32, i32 }
%"class.blink::FontTagValuePair.825" = type { i32, float }
%"class.WTF::RefCounted.828" = type { %"class.base::RefCounted.829" }
%"class.base::RefCounted.829" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.830 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.831", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.833, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.831" = type { %"class.base::RefCounted.832" }
%"class.base::RefCounted.832" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.833 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.834", [4 x i8] }>
%"class.WTF::RefCounted.834" = type { %"class.base::RefCounted.835" }
%"class.base::RefCounted.835" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.836 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.837 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.838", %"class.WTF::Vector.840", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.838" = type { %"class.base::RefCounted.839" }
%"class.base::RefCounted.839" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.840" = type { %"class.WTF::VectorBuffer.841" }
%"class.WTF::VectorBuffer.841" = type { %"class.WTF::VectorBufferBase.842", [8 x i8] }
%"class.WTF::VectorBufferBase.842" = type { %class.scoped_refptr.843*, i32, i32 }
%class.scoped_refptr.843 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.844", [4 x i8] }>
%"class.WTF::RefCounted.844" = type { %"class.base::RefCounted.845" }
%"class.base::RefCounted.845" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.854", %class.scoped_refptr.861, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.844" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.848", %"class.absl::optional.848", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.848" = type { %"class.absl::optional_internal::optional_data.849" }
%"class.absl::optional_internal::optional_data.849" = type { %"class.absl::optional_internal::optional_data_base.850" }
%"class.absl::optional_internal::optional_data_base.850" = type { %"class.absl::optional_internal::optional_data_dtor_base.851" }
%"class.absl::optional_internal::optional_data_dtor_base.851" = type { i8, %union.anon.852 }
%union.anon.852 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.853, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.106" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.853 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.854" = type { %"class.std::__1::__compressed_pair.855" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.857, %class.scoped_refptr.857 }
%class.scoped_refptr.857 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.861 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.862", [4 x i8] }>
%"class.WTF::RefCounted.862" = type { %"class.base::RefCounted.863" }
%"class.base::RefCounted.863" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.864" }
%"class.blink::PersistentBase.864" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.865" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.865" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.866 }
%class.scoped_refptr.866 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.867, i8, i8, i8, i8 }>
%union.anon.867 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.868" = type { %class.scoped_refptr.869 }
%class.scoped_refptr.869 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.870", [4 x i8], %"class.blink::DataRef.872", %"class.blink::DataRef.913", %"class.WTF::Vector.917", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.921, %class.scoped_refptr.930, %"class.blink::Persistent.938", %"class.blink::Persistent.940", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.870" = type { %"class.base::RefCounted.871" }
%"class.base::RefCounted.871" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.872" = type { %class.scoped_refptr.873 }
%class.scoped_refptr.873 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.874", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.876, %class.scoped_refptr.883, %"class.blink::Persistent.900", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.874" = type { %"class.base::RefCounted.875" }
%"class.base::RefCounted.875" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.876 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.877", %"class.WTF::Vector.878" }
%"class.base::RefCountedThreadSafe.877" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.878" = type { %"class.WTF::VectorBuffer.879" }
%"class.WTF::VectorBuffer.879" = type { %"class.WTF::VectorBufferBase.880" }
%"class.WTF::VectorBufferBase.880" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.883 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.884", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.884" = type { %"class.base::RefCounted.885" }
%"class.base::RefCounted.885" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.886", %"class.blink::Persistent.891" }
%"class.WTF::HashMap.886" = type { %"class.WTF::HashTable.887" }
%"class.WTF::HashTable.887" = type <{ %"struct.WTF::KeyValuePair.890"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.890" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2463 }
%class.scoped_refptr.2463 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2464", %"class.WTF::Vector.693", %"class.WTF::Vector.2466", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2464" = type { %"class.base::RefCounted.2465" }
%"class.base::RefCounted.2465" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2466" = type { %"class.WTF::VectorBuffer.2467" }
%"class.WTF::VectorBuffer.2467" = type { %"class.WTF::VectorBufferBase.2468" }
%"class.WTF::VectorBufferBase.2468" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2469 }
%union.anon.2469 = type { double }
%"class.blink::Persistent.891" = type { %"class.blink::PersistentBase.892" }
%"class.blink::PersistentBase.892" = type { %"class.blink::HeapHashMap.893"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.893" = type { %"class.WTF::HashMap.896" }
%"class.WTF::HashMap.896" = type { %"class.WTF::HashTable.897" }
%"class.WTF::HashTable.897" = type <{ %"struct.WTF::KeyValuePair.899"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.899" = type opaque
%"class.blink::Persistent.900" = type { %"class.blink::PersistentBase.901" }
%"class.blink::PersistentBase.901" = type { %"class.blink::HeapVector.902"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.902" = type { %"class.WTF::Vector.905" }
%"class.WTF::Vector.905" = type { %"class.WTF::VectorBuffer.906" }
%"class.WTF::VectorBuffer.906" = type { %"class.WTF::VectorBufferBase.907" }
%"class.WTF::VectorBufferBase.907" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.908", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.913" = type { %class.scoped_refptr.914 }
%class.scoped_refptr.914 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.915", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.915" = type { %"class.base::RefCounted.916" }
%"class.base::RefCounted.916" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.917" = type { %"class.WTF::VectorBuffer.918" }
%"class.WTF::VectorBuffer.918" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.921 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.922", %"class.WTF::Vector.924" }
%"class.WTF::RefCounted.922" = type { %"class.base::RefCounted.923" }
%"class.base::RefCounted.923" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.924" = type { %"class.WTF::VectorBuffer.925" }
%"class.WTF::VectorBuffer.925" = type { %"class.WTF::VectorBufferBase.926" }
%"class.WTF::VectorBufferBase.926" = type { %"struct.std::__1::pair.927"*, i32, i32 }
%"struct.std::__1::pair.927" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.930 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.931", [4 x i8], %"class.WTF::Vector.933" }
%"class.WTF::RefCounted.931" = type { %"class.base::RefCounted.932" }
%"class.base::RefCounted.932" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.933" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.935", [28 x i8] }>
%"class.WTF::VectorBufferBase.935" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.938" = type { %"class.blink::PersistentBase.939" }
%"class.blink::PersistentBase.939" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.940" = type { %"class.blink::PersistentBase.941" }
%"class.blink::PersistentBase.941" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.944", %"class.blink::Member.946" }
%"class.blink::Member.944" = type { %"class.blink::MemberBase.945" }
%"class.blink::MemberBase.945" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.946" = type { %"class.blink::MemberBase.947" }
%"class.blink::MemberBase.947" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.948" = type { %class.scoped_refptr.949 }
%class.scoped_refptr.949 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.950", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.950" = type { %"class.base::RefCounted.951" }
%"class.base::RefCounted.951" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.952" = type { %class.scoped_refptr.953 }
%class.scoped_refptr.953 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.954", [4 x i8], %"class.blink::DataRef.956", %"class.blink::DataRef.1022", %"class.blink::TransformOperations", %class.scoped_refptr.930, %"class.blink::Persistent.1141", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.954" = type { %"class.base::RefCounted.955" }
%"class.base::RefCounted.955" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.956" = type { %class.scoped_refptr.957 }
%class.scoped_refptr.957 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.958", [4 x i8], %"class.blink::DataRef.960", %"class.blink::Persistent.998", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.958" = type { %"class.base::RefCounted.959" }
%"class.base::RefCounted.959" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.960" = type { %class.scoped_refptr.961 }
%class.scoped_refptr.961 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.962", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.980, %class.scoped_refptr.983, %class.scoped_refptr.986, %class.scoped_refptr.989, %class.scoped_refptr.990, %class.scoped_refptr.991, %"class.blink::Persistent.998", %"class.blink::Persistent.1013", %"class.absl::optional.1017", %"class.absl::optional.1017", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.962" = type { %"class.base::RefCounted.963" }
%"class.base::RefCounted.963" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.964", %"class.std::__1::unique_ptr.969" }
%"class.WTF::Vector.964" = type { %"class.WTF::VectorBuffer.965" }
%"class.WTF::VectorBuffer.965" = type { %"class.WTF::VectorBufferBase.966" }
%"class.WTF::VectorBufferBase.966" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.969" = type { %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.972", %"class.WTF::Vector.964", i32, i32 }
%"class.WTF::Vector.972" = type { %"class.WTF::VectorBuffer.973" }
%"class.WTF::VectorBuffer.973" = type { %"class.WTF::VectorBufferBase.974" }
%"class.WTF::VectorBufferBase.974" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.980 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.981", [4 x i8] }>
%"class.WTF::RefCounted.981" = type { %"class.base::RefCounted.982" }
%"class.base::RefCounted.982" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.983 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.984", [4 x i8] }>
%"class.WTF::RefCounted.984" = type { %"class.base::RefCounted.985" }
%"class.base::RefCounted.985" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.986 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.987" }>
%"class.WTF::RefCounted.987" = type { %"class.base::RefCounted.988" }
%"class.base::RefCounted.988" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.989 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.990 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.991 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.992", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.992" = type { %"class.base::RefCounted.993" }
%"class.base::RefCounted.993" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.994" }
%"class.blink::DataRef.994" = type { %class.scoped_refptr.995 }
%class.scoped_refptr.995 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.938", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.996" }
%"class.WTF::RefCounted.996" = type { %"class.base::RefCounted.997" }
%"class.base::RefCounted.997" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1013" = type { %"class.blink::PersistentBase.1014" }
%"class.blink::PersistentBase.1014" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.983, %"class.blink::Member.908", i32, [4 x i8] }>
%"class.absl::optional.1017" = type { %"class.absl::optional_internal::optional_data.1018" }
%"class.absl::optional_internal::optional_data.1018" = type { %"class.absl::optional_internal::optional_data_base.1019" }
%"class.absl::optional_internal::optional_data_base.1019" = type { %"class.absl::optional_internal::optional_data_dtor_base.1020" }
%"class.absl::optional_internal::optional_data_dtor_base.1020" = type { i8, [3 x i8], %union.anon.1021 }
%union.anon.1021 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.998" = type { %"class.blink::PersistentBase.999" }
%"class.blink::PersistentBase.999" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1002" }
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1022" = type { %class.scoped_refptr.1023 }
%class.scoped_refptr.1023 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1024", %"class.blink::DataRef.1026", %"class.blink::DataRef.1030", %"class.blink::DataRef.1039", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1058", %"class.std::__1::unique_ptr.1069", %"class.std::__1::unique_ptr.1107", %"class.std::__1::unique_ptr.1118", %"class.std::__1::unique_ptr.1129", %"class.WTF::Vector.693", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1024" = type { %"class.base::RefCounted.1025" }
%"class.base::RefCounted.1025" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1026" = type { %class.scoped_refptr.1027 }
%class.scoped_refptr.1027 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1028", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1028" = type { %"class.base::RefCounted.1029" }
%"class.base::RefCounted.1029" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1030" = type { %class.scoped_refptr.1031 }
%class.scoped_refptr.1031 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1032", [4 x i8], %"class.WTF::Vector.1034", i8, [7 x i8] }>
%"class.WTF::RefCounted.1032" = type { %"class.base::RefCounted.1033" }
%"class.base::RefCounted.1033" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1034" = type { %"class.WTF::VectorBuffer.1035" }
%"class.WTF::VectorBuffer.1035" = type { %"class.WTF::VectorBufferBase.1036" }
%"class.WTF::VectorBufferBase.1036" = type { i32*, i32, i32 }
%"class.blink::DataRef.1039" = type { %class.scoped_refptr.1040 }
%class.scoped_refptr.1040 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1041", [4 x i8], %"class.WTF::HashMap.1043", %"class.WTF::HashMap.1043", %"class.WTF::HashMap.1043", %"class.WTF::HashMap.1043", %"class.WTF::HashMap.1043", %"class.WTF::HashMap.1043", %"class.WTF::HashMap.1048", %"class.WTF::HashMap.1048", %"class.WTF::HashMap.1048", %"class.WTF::HashMap.1048", %"class.WTF::HashMap.1053", %"class.WTF::Vector.964", %"class.WTF::Vector.964", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1041" = type { %"class.base::RefCounted.1042" }
%"class.base::RefCounted.1042" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1043" = type { %"class.WTF::HashTable.1044" }
%"class.WTF::HashTable.1044" = type <{ %"struct.WTF::KeyValuePair.1047"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1047" = type { %"class.WTF::String", %"class.WTF::Vector.2453" }
%"class.WTF::Vector.2453" = type { %"class.WTF::VectorBuffer.2454" }
%"class.WTF::VectorBuffer.2454" = type { %"class.WTF::VectorBufferBase.2455" }
%"class.WTF::VectorBufferBase.2455" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1048" = type { %"class.WTF::HashTable.1049" }
%"class.WTF::HashTable.1049" = type <{ %"struct.WTF::KeyValuePair.1052"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1052" = type { i64, %"class.WTF::Vector.693" }
%"class.WTF::HashMap.1053" = type { %"class.WTF::HashTable.1054" }
%"class.WTF::HashTable.1054" = type <{ %"struct.WTF::KeyValuePair.1057"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1057" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1061" }
%"class.WTF::HashMap.1061" = type { %"class.WTF::HashTable.1062" }
%"class.WTF::HashTable.1062" = type <{ %"struct.WTF::KeyValuePair.1065"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1065" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2458", %"class.absl::optional.2458", %"class.absl::optional.2458" }
%"class.absl::optional.2458" = type { %"class.absl::optional_internal::optional_data.2459" }
%"class.absl::optional_internal::optional_data.2459" = type { %"class.absl::optional_internal::optional_data_base.2460" }
%"class.absl::optional_internal::optional_data_base.2460" = type { %"class.absl::optional_internal::optional_data_dtor_base.2461" }
%"class.absl::optional_internal::optional_data_dtor_base.2461" = type { i8, %union.anon.2462 }
%union.anon.2462 = type { i32 }
%"class.std::__1::unique_ptr.1069" = type { %"class.std::__1::__compressed_pair.1070" }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.917", %"class.WTF::Vector.1084", %"class.WTF::Vector.1072", %"class.WTF::Vector.1089", %"class.WTF::Vector.1094", %"class.WTF::Vector.1099" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1072", %"class.WTF::Vector.1072", %"class.WTF::Vector.1077" }
%"class.WTF::Vector.1077" = type { %"class.WTF::VectorBuffer.1078" }
%"class.WTF::VectorBuffer.1078" = type { %"class.WTF::VectorBufferBase.1079" }
%"class.WTF::VectorBufferBase.1079" = type { %class.scoped_refptr.1080*, i32, i32 }
%class.scoped_refptr.1080 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1081" }
%"class.base::RefCountedThreadSafe.1081" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1084" = type { %"class.WTF::VectorBuffer.1085" }
%"class.WTF::VectorBuffer.1085" = type { %"class.WTF::VectorBufferBase.1086" }
%"class.WTF::VectorBufferBase.1086" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1072" = type { %"class.WTF::VectorBuffer.1073" }
%"class.WTF::VectorBuffer.1073" = type { %"class.WTF::VectorBufferBase.1074" }
%"class.WTF::VectorBufferBase.1074" = type { double*, i32, i32 }
%"class.WTF::Vector.1089" = type { %"class.WTF::VectorBuffer.1090" }
%"class.WTF::VectorBuffer.1090" = type { %"class.WTF::VectorBufferBase.1091" }
%"class.WTF::VectorBufferBase.1091" = type { i32*, i32, i32 }
%"class.WTF::Vector.1094" = type { %"class.WTF::VectorBuffer.1095" }
%"class.WTF::VectorBuffer.1095" = type { %"class.WTF::VectorBufferBase.1096" }
%"class.WTF::VectorBufferBase.1096" = type { i32*, i32, i32 }
%"class.WTF::Vector.1099" = type { %"class.WTF::VectorBuffer.1100" }
%"class.WTF::VectorBuffer.1100" = type { %"class.WTF::VectorBufferBase.1101" }
%"class.WTF::VectorBufferBase.1101" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1107" = type { %"class.std::__1::__compressed_pair.1108" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.1109" }
%"struct.std::__1::__compressed_pair_elem.1109" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1110" }
%"class.WTF::Vector.1110" = type { %"class.WTF::VectorBuffer.1111" }
%"class.WTF::VectorBuffer.1111" = type { %"class.WTF::VectorBufferBase.1112" }
%"class.WTF::VectorBufferBase.1112" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1118" = type { %"class.std::__1::__compressed_pair.1119" }
%"class.std::__1::__compressed_pair.1119" = type { %"struct.std::__1::__compressed_pair_elem.1120" }
%"struct.std::__1::__compressed_pair_elem.1120" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1121" }
%"class.WTF::Vector.1121" = type { %"class.WTF::VectorBuffer.1122" }
%"class.WTF::VectorBuffer.1122" = type { %"class.WTF::VectorBufferBase.1123" }
%"class.WTF::VectorBufferBase.1123" = type { %"class.blink::Persistent.938"*, i32, i32 }
%"class.std::__1::unique_ptr.1129" = type { %"class.std::__1::__compressed_pair.1130" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.938", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1135" }
%"class.WTF::Vector.1135" = type { %"class.WTF::VectorBuffer.1136" }
%"class.WTF::VectorBuffer.1136" = type { %"class.WTF::VectorBufferBase.1137" }
%"class.WTF::VectorBufferBase.1137" = type { %class.scoped_refptr.1138*, i32, i32 }
%class.scoped_refptr.1138 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.987", [4 x i8] }>
%"class.blink::Persistent.1141" = type { %"class.blink::PersistentBase.1142" }
%"class.blink::PersistentBase.1142" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1145" }
%"class.blink::Member.1145" = type { %"class.blink::MemberBase.1146" }
%"class.blink::MemberBase.1146" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1147" = type { %class.scoped_refptr.1148 }
%class.scoped_refptr.1148 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1149", [4 x i8], %"class.blink::DataRef.1151", %"class.blink::DataRef.1155", %"class.blink::DataRef.1176", %"class.blink::DataRef.1194", %"class.blink::DataRef.1206", %"class.blink::DataRef.1210", %class.scoped_refptr.1180, i32, [4 x i8] }>
%"class.WTF::RefCounted.1149" = type { %"class.base::RefCounted.1150" }
%"class.base::RefCounted.1150" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1151" = type { %class.scoped_refptr.1152 }
%class.scoped_refptr.1152 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1153", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1153" = type { %"class.base::RefCounted.1154" }
%"class.base::RefCounted.1154" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1155" = type { %class.scoped_refptr.1156 }
%class.scoped_refptr.1156 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1157", %class.scoped_refptr.1159, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1157" = type { %"class.base::RefCounted.1158" }
%"class.base::RefCounted.1158" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1159 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1160", %"class.std::__1::unique_ptr.1166", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.984" }>
%"class.std::__1::unique_ptr.1160" = type { %"class.std::__1::__compressed_pair.1161" }
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.1162" }
%"struct.std::__1::__compressed_pair_elem.1162" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1166" = type { %"class.std::__1::__compressed_pair.1167" }
%"class.std::__1::__compressed_pair.1167" = type { %"struct.std::__1::__compressed_pair_elem.1168" }
%"struct.std::__1::__compressed_pair_elem.1168" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1176" = type { %class.scoped_refptr.1177 }
%class.scoped_refptr.1177 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1178", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1178" = type { %"class.base::RefCounted.1179" }
%"class.base::RefCounted.1179" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1180, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1194" = type { %class.scoped_refptr.1195 }
%class.scoped_refptr.1195 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1196", [4 x i8], %class.scoped_refptr.1198, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1196" = type { %"class.base::RefCounted.1197" }
%"class.base::RefCounted.1197" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1198 = type { %"class.base::RefCountedData.1199"* }
%"class.base::RefCountedData.1199" = type { %"class.base::RefCountedThreadSafe.1200", %"class.WTF::Vector.1201" }
%"class.base::RefCountedThreadSafe.1200" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1201" = type { %"class.WTF::VectorBuffer.1202" }
%"class.WTF::VectorBuffer.1202" = type { %"class.WTF::VectorBufferBase.1203" }
%"class.WTF::VectorBufferBase.1203" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1206" = type { %class.scoped_refptr.1207 }
%class.scoped_refptr.1207 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1208", %class.scoped_refptr.1180, %class.scoped_refptr.1180, %class.scoped_refptr.1180 }
%"class.WTF::RefCounted.1208" = type { %"class.base::RefCounted.1209" }
%"class.base::RefCounted.1209" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1210" = type { %class.scoped_refptr.1211 }
%class.scoped_refptr.1211 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1212", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1212" = type { %"class.base::RefCounted.1213" }
%"class.base::RefCounted.1213" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1180 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1181", %"class.blink::Persistent.1183", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1181" = type { %"class.base::RefCounted.1182" }
%"class.base::RefCounted.1182" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1183" = type { %"class.blink::PersistentBase.1184" }
%"class.blink::PersistentBase.1184" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.21", %"class.blink::HeapHashMap.1187" }
%"class.blink::HeapHashMap.1187" = type { %"class.WTF::HashMap.1190" }
%"class.WTF::HashMap.1190" = type { %"class.WTF::HashTable.1191" }
%"class.WTF::HashTable.1191" = type <{ %"struct.WTF::KeyValuePair.1193"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1193" = type opaque
%"class.blink::DataRef.1214" = type { %class.scoped_refptr.1215 }
%class.scoped_refptr.1215 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1216", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1216" = type { %"class.base::RefCounted.1217" }
%"class.base::RefCounted.1217" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1218" = type { %class.scoped_refptr.1219 }
%class.scoped_refptr.1219 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1220", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1220" = type { %"class.base::RefCounted.1221" }
%"class.base::RefCounted.1221" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1222" = type { %class.scoped_refptr.1223 }
%class.scoped_refptr.1223 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1224", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1224" = type { %"class.base::RefCounted.1225" }
%"class.base::RefCounted.1225" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1226" = type { %class.scoped_refptr.1227 }
%class.scoped_refptr.1227 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1228", %class.scoped_refptr.1230 }
%"class.WTF::RefCounted.1228" = type { %"class.base::RefCounted.1229" }
%"class.base::RefCounted.1229" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1230 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1399", %"class.blink::StyleVariables", %class.scoped_refptr.1230 }
%"class.WTF::RefCounted.1399" = type { %"class.base::RefCounted.1400" }
%"class.base::RefCounted.1400" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1231" = type { %"class.base::RefCounted.1232" }
%"class.base::RefCounted.1232" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1233" = type { %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1236" }
%"class.std::__1::unique_ptr.1236" = type { %"class.std::__1::__compressed_pair.1237" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"class.WTF::Vector.1239"* }
%"class.WTF::Vector.1239" = type { %"class.WTF::VectorBuffer.2473" }
%"class.WTF::VectorBuffer.2473" = type { %"class.WTF::VectorBufferBase.2474", [32 x i8] }
%"class.WTF::VectorBufferBase.2474" = type { %class.scoped_refptr.803*, i32, i32 }
%"class.blink::Member.2499" = type { %"class.blink::MemberBase.2500" }
%"class.blink::MemberBase.2500" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2501" = type { %"class.blink::MemberBase.2502" }
%"class.blink::MemberBase.2502" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2505", %"class.blink::HeapHashSet.2514" }
%"class.blink::HeapVector.2505" = type { %"class.WTF::Vector.2508" }
%"class.WTF::Vector.2508" = type { %"class.WTF::VectorBuffer.2509" }
%"class.WTF::VectorBuffer.2509" = type { %"class.WTF::VectorBufferBase.2510" }
%"class.WTF::VectorBufferBase.2510" = type { %"class.blink::Member.2511"*, i32, i32 }
%"class.blink::Member.2511" = type { %"class.blink::MemberBase.2512" }
%"class.blink::MemberBase.2512" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2514" = type { %"class.WTF::HashSet.2517" }
%"class.WTF::HashSet.2517" = type { %"class.WTF::HashTable.2518" }
%"class.WTF::HashTable.2518" = type <{ %"class.blink::Member.2511"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2520" = type { %"class.blink::MemberBase.2521" }
%"class.blink::MemberBase.2521" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2522" = type { %"class.blink::MemberBase.2523" }
%"class.blink::MemberBase.2523" = type { %"class.blink::HeapHashSet.2524"* }
%"class.blink::HeapHashSet.2524" = type opaque
%"class.blink::BeforeTextInsertedEvent" = type { %"class.blink::Event", %"class.WTF::String" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1403", %"class.blink::Member.1403", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.base::TimeTicks" }
%"class.blink::Member.1403" = type { %"class.blink::MemberBase.1404" }
%"class.blink::MemberBase.1404" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::Event"* }
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::HeapVector.1411" = type { %"class.WTF::Vector.1414" }
%"class.WTF::Vector.1414" = type { %"class.WTF::VectorBuffer.1415" }
%"class.WTF::VectorBuffer.1415" = type { %"class.WTF::VectorBufferBase.1416" }
%"class.WTF::VectorBufferBase.1416" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::VisiblePositionTemplate" = type { %"class.blink::PositionWithAffinityTemplate" }
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::ReplaceSelectionCommand::InsertedNodes" = type { %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"* }
%"class.blink::EditingState" = type { i8 }
%"class.WTF::Vector.1468" = type { %"class.WTF::VectorBuffer.1469" }
%"class.WTF::VectorBuffer.1469" = type { %"class.WTF::VectorBufferBase.1470" }
%"class.WTF::VectorBufferBase.1470" = type { %"class.blink::QualifiedName"*, i32, i32 }
%"class.blink::HTMLSpanElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLQuoteElement" = type { %"class.blink::HTMLElement" }
%"class.blink::IgnorableEditingAbortState" = type { %"class.blink::EditingState" }
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.2541 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2541 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type opaque
%"class.blink::HTMLBRElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.868", %"class.blink::DataRef.948", %"class.blink::DataRef.952", %"class.blink::DataRef.1147", %"class.blink::DataRef.1214", %"class.blink::DataRef.1218", %"class.blink::DataRef.1222", %"class.blink::DataRef.1226", [20 x i8], [4 x i8] }>
%"class.blink::DeleteSelectionOptions" = type { i8, i8, i8, i8 }
%"class.blink::DeleteSelectionOptions::Builder" = type { %"class.blink::DeleteSelectionOptions" }
%"class.blink::BreakBlockquoteCommand" = type { %"class.blink::CompositeEditCommand" }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1711", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1719", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1733", %"class.blink::FrameLoader", %"class.blink::Member.1754", %"class.blink::Member.21", %"class.blink::Member.1756", %"class.blink::Member.1768", %"class.blink::Member.1770", %"class.blink::Member.1772", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1774", %class.scoped_refptr.1994, %"class.blink::Member.1995", %"class.blink::Member.1997", %"class.blink::Member.1999", %"class.blink::Member.2001", %"class.blink::Member.2003", %"class.blink::Member.2007", %"class.blink::Member.2009", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2013", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2034", %"class.std::__1::unique_ptr.2035", %"class.absl::optional.1699", i32, [4 x i8], %"class.std::__1::unique_ptr.2041", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2049", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2054", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2059", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2062", %"class.blink::Member.2064", %"class.blink::Member.2066", %"class.blink::Member.2068", %"class.mojo::StructPtr.2071", %"class.blink::Member.2080", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2082", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1542", %"class.blink::Member.1544", %"class.blink::Member.1546", i8, i32, i8, i32, %"class.blink::Member.1679", %"class.blink::Member.1569", %"class.blink::FrameLifecycle", %"class.blink::Member.1540", %"class.blink::Member.1540", %"class.blink::Member.1540", %"class.blink::Member.1540", %"class.blink::Member.1540", %"class.blink::Member.1540", %"class.blink::Member.1681", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1692", i8, %"class.base::UnguessableToken", %"class.absl::optional.1694", %"class.absl::optional.1699", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1540", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1544" = type { %"class.blink::MemberBase.1545" }
%"class.blink::MemberBase.1545" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1546" = type { %"class.blink::MemberBase.1547" }
%"class.blink::MemberBase.1547" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1540", %"class.blink::Member.1569", %"class.blink::Member.1571", %"class.blink::Member.1573", i8, %"class.WTF::Vector.1575" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1562" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1550" }
%"class.blink::HeapVector.1550" = type { %"class.WTF::Vector.1553" }
%"class.WTF::Vector.1553" = type { %"class.WTF::VectorBuffer.1554" }
%"class.WTF::VectorBuffer.1554" = type { %"class.WTF::VectorBufferBase.1555", [32 x i8] }
%"class.WTF::VectorBufferBase.1555" = type { %"struct.std::__1::pair.1556"*, i32, i32 }
%"struct.std::__1::pair.1556" = type { %"class.WTF::AtomicString", %"class.blink::Member.1557" }
%"class.blink::Member.1557" = type { %"class.blink::MemberBase.1558" }
%"class.blink::MemberBase.1558" = type { %"class.blink::HeapVector.1559"* }
%"class.blink::HeapVector.1559" = type opaque
%"class.std::__1::unique_ptr.1562" = type { %"class.std::__1::__compressed_pair.1563" }
%"class.std::__1::__compressed_pair.1563" = type { %"struct.std::__1::__compressed_pair_elem.1564" }
%"struct.std::__1::__compressed_pair_elem.1564" = type { %"class.WTF::Vector.1565"* }
%"class.WTF::Vector.1565" = type opaque
%"class.blink::Member.1571" = type { %"class.blink::MemberBase.1572" }
%"class.blink::MemberBase.1572" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1575" = type { %"class.WTF::VectorBuffer.1576" }
%"class.WTF::VectorBuffer.1576" = type { %"class.WTF::VectorBufferBase.1577" }
%"class.WTF::VectorBufferBase.1577" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1671" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1578, %"class.std::__1::unique_ptr.713", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.727, i32 }>
%class.scoped_refptr.1578 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.727, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1637", %"class.absl::optional.1642", %"class.absl::optional.1595", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1662", i8, [7 x i8], %class.scoped_refptr.727, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.740" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.727, %"class.std::__1::unique_ptr.1579", %"class.absl::optional.1589", %"struct.std::__1::atomic.331", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1595", %"class.std::__1::unique_ptr.1600", i8, i64, %class.scoped_refptr.1634, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1635", %"class.base::WeakPtrFactory.1636" }
%"class.std::__1::unique_ptr.1579" = type { %"class.std::__1::__compressed_pair.1580" }
%"class.std::__1::__compressed_pair.1580" = type { %"struct.std::__1::__compressed_pair_elem.1581" }
%"struct.std::__1::__compressed_pair_elem.1581" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.727, i8, %"class.mojo::ScopedHandleBase.1582", %class.scoped_refptr.1583, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1584", i8*, %"class.base::WeakPtrFactory.1585" }
%"class.mojo::ScopedHandleBase.1582" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1583 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.1584" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1585" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1589" = type { %"class.absl::optional_internal::optional_data.1590" }
%"class.absl::optional_internal::optional_data.1590" = type { %"class.absl::optional_internal::optional_data_base.1591" }
%"class.absl::optional_internal::optional_data_base.1591" = type { %"class.absl::optional_internal::optional_data_dtor_base.1592" }
%"class.absl::optional_internal::optional_data_dtor_base.1592" = type { i8, %union.anon.1593 }
%union.anon.1593 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1594", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1594" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1600" = type { %"class.std::__1::__compressed_pair.1601" }
%"class.std::__1::__compressed_pair.1601" = type { %"struct.std::__1::__compressed_pair_elem.1602" }
%"struct.std::__1::__compressed_pair_elem.1602" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1603", i8, i64, %class.scoped_refptr.1604, %class.scoped_refptr.1629 }
%"class.base::RepeatingCallback.1603" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1604 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1605", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1607", %"class.std::__1::map.1618", i8, [7 x i8] }>
%"class.base::RefCounted.1605" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1606 }
%class.scoped_refptr.1606 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1607" = type { %"class.std::__1::__tree.1608" }
%"class.std::__1::__tree.1608" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1609", %"class.std::__1::__compressed_pair.1613" }
%"class.std::__1::__compressed_pair.1609" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.1613" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.std::__1::map.1618" = type { %"class.std::__1::__tree.1619" }
%"class.std::__1::__tree.1619" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1620", %"class.std::__1::__compressed_pair.1624" }
%"class.std::__1::__compressed_pair.1620" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.1624" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%class.scoped_refptr.1629 = type { %"class.base::RefCountedData.1630"* }
%"class.base::RefCountedData.1630" = type opaque
%class.scoped_refptr.1634 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.1635" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1636" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1637" = type { %"class.absl::optional_internal::optional_data.1638" }
%"class.absl::optional_internal::optional_data.1638" = type { %"class.absl::optional_internal::optional_data_base.1639" }
%"class.absl::optional_internal::optional_data_base.1639" = type { %"class.absl::optional_internal::optional_data_dtor_base.1640" }
%"class.absl::optional_internal::optional_data_dtor_base.1640" = type { i8, %union.anon.1641 }
%union.anon.1641 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1642" = type { %"class.absl::optional_internal::optional_data.1643" }
%"class.absl::optional_internal::optional_data.1643" = type { %"class.absl::optional_internal::optional_data_base.1644" }
%"class.absl::optional_internal::optional_data_base.1644" = type { %"class.absl::optional_internal::optional_data_dtor_base.1645" }
%"class.absl::optional_internal::optional_data_dtor_base.1645" = type { i8, [7 x i8], %union.anon.1646 }
%union.anon.1646 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1595" = type { %"class.absl::optional_internal::optional_data.1596" }
%"class.absl::optional_internal::optional_data.1596" = type { %"class.absl::optional_internal::optional_data_base.1597" }
%"class.absl::optional_internal::optional_data_base.1597" = type { %"class.absl::optional_internal::optional_data_dtor_base.1598" }
%"class.absl::optional_internal::optional_data_dtor_base.1598" = type { i8, %union.anon.1599 }
%union.anon.1599 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1647 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1647 = type { %"class.std::__1::map.1650" }
%"class.std::__1::map.1650" = type { %"class.std::__1::__tree.1651" }
%"class.std::__1::__tree.1651" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1652", %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1652" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1661"*, i64 }
%"class.std::__1::unique_ptr.1661" = type opaque
%"class.std::__1::map.1662" = type { %"class.std::__1::__tree.1663" }
%"class.std::__1::__tree.1663" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1664", %"class.std::__1::__compressed_pair.1668" }
%"class.std::__1::__compressed_pair.1664" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.1668" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1679" = type { %"class.blink::MemberBase.1680" }
%"class.blink::MemberBase.1680" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1569" = type { %"class.blink::MemberBase.1570" }
%"class.blink::MemberBase.1570" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::Frame"* }
%"class.blink::Member.1681" = type { %"class.blink::MemberBase.1682" }
%"class.blink::MemberBase.1682" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1540", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.1683" }
%"class.base::internal::flat_tree.1683" = type { %"class.std::__1::vector.1684" }
%"class.std::__1::vector.1684" = type { %"class.std::__1::__vector_base.1685" }
%"class.std::__1::__vector_base.1685" = type { %"struct.std::__1::pair.1686"*, %"struct.std::__1::pair.1686"*, %"class.std::__1::__compressed_pair.1687" }
%"struct.std::__1::pair.1686" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"struct.std::__1::pair.1686"* }
%"class.blink::Member.1692" = type { %"class.blink::MemberBase.1693" }
%"class.blink::MemberBase.1693" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1694" = type { %"class.absl::optional_internal::optional_data.1695" }
%"class.absl::optional_internal::optional_data.1695" = type { %"class.absl::optional_internal::optional_data_base.1696" }
%"class.absl::optional_internal::optional_data_base.1696" = type { %"class.absl::optional_internal::optional_data_dtor_base.1697" }
%"class.absl::optional_internal::optional_data_dtor_base.1697" = type { i8, %union.anon.1698 }
%union.anon.1698 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1704" }
%"class.blink::HeapHashSet.1704" = type { %"class.WTF::HashSet.1707" }
%"class.WTF::HashSet.1707" = type { %"class.WTF::HashTable.1708" }
%"class.WTF::HashTable.1708" = type <{ %"class.blink::WeakMember.1710"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1710" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1711" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1712" }
%"class.blink::HeapHashMap.1712" = type { %"class.WTF::HashMap.1715" }
%"class.WTF::HashMap.1715" = type { %"class.WTF::HashTable.1716" }
%"class.WTF::HashTable.1716" = type <{ %"struct.WTF::KeyValuePair.1718"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1718" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1719" = type { %"class.std::__1::__compressed_pair.1720" }
%"class.std::__1::__compressed_pair.1720" = type { %"struct.std::__1::__compressed_pair_elem.1721" }
%"struct.std::__1::__compressed_pair_elem.1721" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1722", %"class.base::WeakPtrFactory.1727" }
%"class.WTF::HashMap.1722" = type { %"class.WTF::HashTable.1723" }
%"class.WTF::HashTable.1723" = type <{ %"struct.WTF::KeyValuePair.1726"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1726" = type opaque
%"class.base::WeakPtrFactory.1727" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1731" }
%"class.blink::Member.1731" = type { %"class.blink::MemberBase.1732" }
%"class.blink::MemberBase.1732" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2393" }
%"class.blink::WeakMember.2393" = type { %"class.blink::MemberBase.2394" }
%"class.blink::MemberBase.2394" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2395", i64, %"class.std::__1::map.2396", i8*, i64, %"class.base::WeakPtrFactory.2405" }
%"class.base::RepeatingCallback.2395" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2396" = type { %"class.std::__1::__tree.2397" }
%"class.std::__1::__tree.2397" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2398", %"class.std::__1::__compressed_pair.2402" }
%"class.std::__1::__compressed_pair.2398" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"class.std::__1::__compressed_pair.2402" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.base::WeakPtrFactory.2405" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1733" = type { %"class.WTF::HashSet.1736" }
%"class.WTF::HashSet.1736" = type { %"class.WTF::HashTable.1737" }
%"class.WTF::HashTable.1737" = type <{ %"class.blink::WeakMember.1739"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1739" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1681", %"class.blink::Member.1740", %"class.blink::Member.1742", %"class.std::__1::unique_ptr.1744", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1750" }
%"class.blink::Member.1740" = type { %"class.blink::MemberBase.1741" }
%"class.blink::MemberBase.1741" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1744" = type { %"class.std::__1::__compressed_pair.1745" }
%"class.std::__1::__compressed_pair.1745" = type { %"struct.std::__1::__compressed_pair_elem.1746" }
%"struct.std::__1::__compressed_pair_elem.1746" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.WTF::HashSet.1750" = type { %"class.WTF::HashTable.1751" }
%"class.WTF::HashTable.1751" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1754" = type { %"class.blink::MemberBase.1755" }
%"class.blink::MemberBase.1755" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2161", %"class.blink::Member.1681", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2166", i8, i32, %"class.blink::Color", %"class.absl::optional.2168", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2173", %"class.blink::Member.2175", %"class.blink::Member.2175", %"class.std::__1::unique_ptr.2178", i32, [4 x i8], %"class.WTF::HashSet.2181", %"class.blink::Member.2188", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2190", %"class.blink::HeapHashSet.2197", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2205", i8, %"class.blink::Member.2211", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2223", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2237", i8, %"class.std::__1::unique_ptr.2243", %"class.std::__1::unique_ptr.2324", %"class.WTF::Vector.2330", i32, %class.scoped_refptr.2335, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2336", %"class.blink::Member.2338", %"class.blink::Member.2340", %"class.blink::HeapHashSet.2342", %"class.blink::HeapHashSet.2349", %"class.std::__1::unique_ptr.2356", %"class.std::__1::unique_ptr.2363", %"class.WTF::Vector.102" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2161" = type { %"class.WTF::HashTable.2162" }
%"class.WTF::HashTable.2162" = type <{ %class.scoped_refptr.2165*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2165 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2166" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2167", { i64, i64 } }
%"class.blink::WeakMember.2167" = type { %"class.blink::MemberBase.1755" }
%"class.absl::optional.2168" = type { %"class.absl::optional_internal::optional_data.2169" }
%"class.absl::optional_internal::optional_data.2169" = type { %"class.absl::optional_internal::optional_data_base.2170" }
%"class.absl::optional_internal::optional_data_base.2170" = type { %"class.absl::optional_internal::optional_data_dtor_base.2171" }
%"class.absl::optional_internal::optional_data_dtor_base.2171" = type { i8, %union.anon.2172 }
%union.anon.2172 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2173" = type { %"class.blink::MemberBase.2174" }
%"class.blink::MemberBase.2174" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2175" = type { %"class.blink::MemberBase.2176" }
%"class.blink::MemberBase.2176" = type { %"class.blink::HeapHashSet.2177"* }
%"class.blink::HeapHashSet.2177" = type opaque
%"class.std::__1::unique_ptr.2178" = type { %"class.std::__1::__compressed_pair.2179" }
%"class.std::__1::__compressed_pair.2179" = type { %"struct.std::__1::__compressed_pair_elem.2180" }
%"struct.std::__1::__compressed_pair_elem.2180" = type { %"class.WTF::HashSet.2181"* }
%"class.WTF::HashSet.2181" = type { %"class.WTF::HashTable.2182" }
%"class.WTF::HashTable.2182" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2188" = type { %"class.blink::MemberBase.2189" }
%"class.blink::MemberBase.2189" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2190" = type { %"class.WTF::HashSet.2193" }
%"class.WTF::HashSet.2193" = type { %"class.WTF::HashTable.2194" }
%"class.WTF::HashTable.2194" = type <{ %"class.blink::Member.2196"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2196" = type opaque
%"class.blink::HeapHashSet.2197" = type { %"class.WTF::HashSet.2200" }
%"class.WTF::HashSet.2200" = type { %"class.WTF::HashTable.2201" }
%"class.WTF::HashTable.2201" = type <{ %"class.blink::Member.2203"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2203" = type { %"class.blink::MemberBase.2204" }
%"class.blink::MemberBase.2204" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.std::__1::unique_ptr.2205" = type { %"class.std::__1::__compressed_pair.2206" }
%"class.std::__1::__compressed_pair.2206" = type { %"struct.std::__1::__compressed_pair_elem.2207" }
%"struct.std::__1::__compressed_pair_elem.2207" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2211" = type { %"class.blink::MemberBase.2212" }
%"class.blink::MemberBase.2212" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2215", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2215" = type { %"class.WTF::HashTable.2216" }
%"class.WTF::HashTable.2216" = type <{ %"struct.WTF::KeyValuePair.2218"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2218" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2219", i32, i32 }
%"class.WTF::Vector.2219" = type { %"class.WTF::VectorBuffer.2220" }
%"class.WTF::VectorBuffer.2220" = type { %"class.WTF::VectorBufferBase.2221" }
%"class.WTF::VectorBufferBase.2221" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2223" = type { %"class.WTF::LinkedHashSet.2226" }
%"class.WTF::LinkedHashSet.2226" = type { %"class.WTF::HashMap.2227", %"class.WTF::VectorBackedLinkedList.2231" }
%"class.WTF::HashMap.2227" = type { %"class.WTF::HashTable.2228" }
%"class.WTF::HashTable.2228" = type <{ %"struct.WTF::KeyValuePair.2230"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2230" = type opaque
%"class.WTF::VectorBackedLinkedList.2231" = type { %"class.WTF::Vector.2232", i32, i32 }
%"class.WTF::Vector.2232" = type { %"class.WTF::VectorBuffer.2233" }
%"class.WTF::VectorBuffer.2233" = type { %"class.WTF::VectorBufferBase.2234" }
%"class.WTF::VectorBufferBase.2234" = type { %"class.WTF::VectorBackedLinkedListNode.2235"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2235" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2237" = type { %"class.std::__1::__compressed_pair.2238" }
%"class.std::__1::__compressed_pair.2238" = type { %"struct.std::__1::__compressed_pair_elem.2239" }
%"struct.std::__1::__compressed_pair_elem.2239" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2243" = type { %"class.std::__1::__compressed_pair.2244" }
%"class.std::__1::__compressed_pair.2244" = type { %"struct.std::__1::__compressed_pair_elem.2245" }
%"struct.std::__1::__compressed_pair_elem.2245" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2246, %class.scoped_refptr.2246, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2301", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2306", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2246 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2247", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2254" }
%"class.WTF::RefCounted.2247" = type { %"class.base::RefCounted.2248" }
%"class.base::RefCounted.2248" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2249", i32, [4 x i8] }>
%"class.WTF::Vector.2249" = type { %"class.WTF::VectorBuffer.2250" }
%"class.WTF::VectorBuffer.2250" = type { %"class.WTF::VectorBufferBase.2251" }
%"class.WTF::VectorBufferBase.2251" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2254" = type { %"class.WTF::VectorBuffer.2255" }
%"class.WTF::VectorBuffer.2255" = type { %"class.WTF::VectorBufferBase.2256" }
%"class.WTF::VectorBufferBase.2256" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2257", %"class.std::__1::unique_ptr.2273", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2257" = type { %"class.std::__1::__compressed_pair.2258" }
%"class.std::__1::__compressed_pair.2258" = type { %"struct.std::__1::__compressed_pair_elem.2259" }
%"struct.std::__1::__compressed_pair_elem.2259" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2260", %"class.WTF::Vector.2265", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2260" = type { %"class.WTF::VectorBuffer.2261" }
%"class.WTF::VectorBuffer.2261" = type { %"class.WTF::VectorBufferBase.2262" }
%"class.WTF::VectorBufferBase.2262" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2265" = type { %"class.WTF::VectorBuffer.2266" }
%"class.WTF::VectorBuffer.2266" = type { %"class.WTF::VectorBufferBase.2267" }
%"class.WTF::VectorBufferBase.2267" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2273" = type { %"class.std::__1::__compressed_pair.2274" }
%"class.std::__1::__compressed_pair.2274" = type { %"struct.std::__1::__compressed_pair_elem.2275" }
%"struct.std::__1::__compressed_pair_elem.2275" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2276", %"class.absl::optional.2276" }
%"class.absl::optional.2276" = type { %"class.absl::optional_internal::optional_data.2277" }
%"class.absl::optional_internal::optional_data.2277" = type { %"class.absl::optional_internal::optional_data_base.2278" }
%"class.absl::optional_internal::optional_data_base.2278" = type { %"class.absl::optional_internal::optional_data_dtor_base.2279" }
%"class.absl::optional_internal::optional_data_dtor_base.2279" = type { i8, [3 x i8], %union.anon.2280 }
%union.anon.2280 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2254"*, %"class.absl::optional.2286", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2286" = type { %"class.absl::optional_internal::optional_data.2287" }
%"class.absl::optional_internal::optional_data.2287" = type { %"class.absl::optional_internal::optional_data_base.2288" }
%"class.absl::optional_internal::optional_data_base.2288" = type { %"class.absl::optional_internal::optional_data_dtor_base.2289" }
%"class.absl::optional_internal::optional_data_dtor_base.2289" = type { i8, %union.anon.2290 }
%union.anon.2290 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2291", %"class.WTF::Vector.2296" }
%"class.WTF::Vector.2291" = type { %"class.WTF::VectorBuffer.2292" }
%"class.WTF::VectorBuffer.2292" = type { %"class.WTF::VectorBufferBase.2293", [128 x i8] }
%"class.WTF::VectorBufferBase.2293" = type { i32*, i32, i32 }
%"class.WTF::Vector.2296" = type { %"class.WTF::VectorBuffer.2297" }
%"class.WTF::VectorBuffer.2297" = type { %"class.WTF::VectorBufferBase.2298", [128 x i8] }
%"class.WTF::VectorBufferBase.2298" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2301" = type { %"class.WTF::VectorBuffer.2302" }
%"class.WTF::VectorBuffer.2302" = type { %"class.WTF::VectorBufferBase.2303" }
%"class.WTF::VectorBufferBase.2303" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2306" = type { %"class.WTF::HashTable.2307" }
%"class.WTF::HashTable.2307" = type <{ %"struct.WTF::KeyValuePair.2310"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2310" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2311", %"class.WTF::Vector.2316" }
%"class.WTF::HashMap.2311" = type { %"class.WTF::HashTable.2312" }
%"class.WTF::HashTable.2312" = type <{ %"struct.WTF::KeyValuePair.2315"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2315" = type opaque
%"class.WTF::Vector.2316" = type { %"class.WTF::VectorBuffer.2317" }
%"class.WTF::VectorBuffer.2317" = type { %"class.WTF::VectorBufferBase.2318" }
%"class.WTF::VectorBufferBase.2318" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2324" = type { %"class.std::__1::__compressed_pair.2325" }
%"class.std::__1::__compressed_pair.2325" = type { %"struct.std::__1::__compressed_pair_elem.2326" }
%"struct.std::__1::__compressed_pair_elem.2326" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2330" = type { %"class.WTF::VectorBuffer.2331" }
%"class.WTF::VectorBuffer.2331" = type { %"class.WTF::VectorBufferBase.2332" }
%"class.WTF::VectorBufferBase.2332" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2335 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2336" = type { %"class.blink::MemberBase.2337" }
%"class.blink::MemberBase.2337" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2338" = type { %"class.blink::MemberBase.2339" }
%"class.blink::MemberBase.2339" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2340" = type { %"class.blink::MemberBase.2341" }
%"class.blink::MemberBase.2341" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2342" = type { %"class.WTF::HashSet.2345" }
%"class.WTF::HashSet.2345" = type { %"class.WTF::HashTable.2346" }
%"class.WTF::HashTable.2346" = type <{ %"class.blink::WeakMember.2348"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2348" = type opaque
%"class.blink::HeapHashSet.2349" = type { %"class.WTF::HashSet.2352" }
%"class.WTF::HashSet.2352" = type { %"class.WTF::HashTable.2353" }
%"class.WTF::HashTable.2353" = type <{ %"class.blink::WeakMember.2355"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2355" = type opaque
%"class.std::__1::unique_ptr.2356" = type { %"class.std::__1::__compressed_pair.2357" }
%"class.std::__1::__compressed_pair.2357" = type { %"struct.std::__1::__compressed_pair_elem.2358" }
%"struct.std::__1::__compressed_pair_elem.2358" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2359" }
%"class.base::time_internal::TimeBase.2359" = type { i64 }
%"class.std::__1::unique_ptr.2363" = type { %"class.std::__1::__compressed_pair.2364" }
%"class.std::__1::__compressed_pair.2364" = type { %"struct.std::__1::__compressed_pair_elem.2365" }
%"struct.std::__1::__compressed_pair_elem.2365" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2366", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2366" = type { %"class.absl::optional_internal::optional_data.2367" }
%"class.absl::optional_internal::optional_data.2367" = type { %"class.absl::optional_internal::optional_data_base.2368" }
%"class.absl::optional_internal::optional_data_base.2368" = type { %"class.absl::optional_internal::optional_data_dtor_base.2369" }
%"class.absl::optional_internal::optional_data_dtor_base.2369" = type { i8, %union.anon.2370 }
%union.anon.2370 = type { %"class.base::Time" }
%"class.blink::Member.1756" = type { %"class.blink::MemberBase.1757" }
%"class.blink::MemberBase.1757" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type <{ %"class.blink::Member.1681", %"class.blink::Member.1422", %"class.blink::Member.1760", i32, i8, i8, [2 x i8], %"class.std::__1::unique_ptr.1762", %"class.blink::VisibleSelectionTemplate", i8, [3 x i8], i32, %"class.blink::Member.1445", i8, [7 x i8] }>
%"class.blink::Member.1760" = type { %"class.blink::MemberBase.1761" }
%"class.blink::MemberBase.1761" = type { %"class.blink::UndoStack"* }
%"class.blink::UndoStack" = type opaque
%"class.std::__1::unique_ptr.1762" = type { %"class.std::__1::__compressed_pair.1763" }
%"class.std::__1::__compressed_pair.1763" = type { %"struct.std::__1::__compressed_pair_elem.1764" }
%"struct.std::__1::__compressed_pair_elem.1764" = type { %"class.blink::KillRing"* }
%"class.blink::KillRing" = type opaque
%"class.blink::Member.1768" = type { %"class.blink::MemberBase.1769" }
%"class.blink::MemberBase.1769" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1770" = type { %"class.blink::MemberBase.1771" }
%"class.blink::MemberBase.1771" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1772" = type { %"class.blink::MemberBase.1773" }
%"class.blink::MemberBase.1773" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1774" = type { %"class.blink::MemberBase.1775" }
%"class.blink::MemberBase.1775" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1785", %"class.blink::HeapListHashSet.1796", %"class.blink::HeapListHashSet.1807", %"class.blink::HeapListHashSet.1818", %"class.blink::HeapListHashSet.1829", %"class.blink::HeapListHashSet.1840", %"class.blink::HeapListHashSet.1851", %"class.blink::HeapListHashSet.1862", %"class.blink::HeapListHashSet.1873", %"class.blink::HeapListHashSet.1884", %"class.blink::HeapListHashSet.1895", %"class.blink::HeapListHashSet.1906", %"class.blink::HeapListHashSet.1917", %"class.blink::HeapListHashSet.1928", %"class.blink::HeapListHashSet.1939", %"class.blink::HeapListHashSet.1950", %"class.blink::HeapListHashSet.1961", %"class.blink::HeapListHashSet.1972", %"class.blink::HeapListHashSet.1983" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1781", %"class.blink::Member.1783", %"class.blink::Member.1783", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1781" = type <{ %"class.blink::Member.1783"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1783" = type { %"class.blink::MemberBase.1784" }
%"class.blink::MemberBase.1784" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1997", %"class.blink::Member.1783", %"class.blink::Member.1783" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1785" = type { %"class.WTF::ListHashSet.base.1795", [7 x i8] }
%"class.WTF::ListHashSet.base.1795" = type <{ %"class.WTF::HashTable.1790", %"class.blink::Member.1792", %"class.blink::Member.1792", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1790" = type <{ %"class.blink::Member.1792"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1792" = type { %"class.blink::MemberBase.1793" }
%"class.blink::MemberBase.1793" = type { %"class.blink::HeapListHashSetNode.1794"* }
%"class.blink::HeapListHashSetNode.1794" = type { %"class.blink::Member.2155", %"class.blink::Member.1792", %"class.blink::Member.1792" }
%"class.blink::Member.2155" = type { %"class.blink::MemberBase.2156" }
%"class.blink::MemberBase.2156" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1796" = type { %"class.WTF::ListHashSet.base.1806", [7 x i8] }
%"class.WTF::ListHashSet.base.1806" = type <{ %"class.WTF::HashTable.1801", %"class.blink::Member.1803", %"class.blink::Member.1803", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1801" = type <{ %"class.blink::Member.1803"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1803" = type { %"class.blink::MemberBase.1804" }
%"class.blink::MemberBase.1804" = type { %"class.blink::HeapListHashSetNode.1805"* }
%"class.blink::HeapListHashSetNode.1805" = type { %"class.blink::Member.2151", %"class.blink::Member.1803", %"class.blink::Member.1803" }
%"class.blink::Member.2151" = type { %"class.blink::MemberBase.2152" }
%"class.blink::MemberBase.2152" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1807" = type { %"class.WTF::ListHashSet.base.1817", [7 x i8] }
%"class.WTF::ListHashSet.base.1817" = type <{ %"class.WTF::HashTable.1812", %"class.blink::Member.1814", %"class.blink::Member.1814", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1812" = type <{ %"class.blink::Member.1814"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1814" = type { %"class.blink::MemberBase.1815" }
%"class.blink::MemberBase.1815" = type { %"class.blink::HeapListHashSetNode.1816"* }
%"class.blink::HeapListHashSetNode.1816" = type { %"class.blink::Member.2147", %"class.blink::Member.1814", %"class.blink::Member.1814" }
%"class.blink::Member.2147" = type { %"class.blink::MemberBase.2148" }
%"class.blink::MemberBase.2148" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1818" = type { %"class.WTF::ListHashSet.base.1828", [7 x i8] }
%"class.WTF::ListHashSet.base.1828" = type <{ %"class.WTF::HashTable.1823", %"class.blink::Member.1825", %"class.blink::Member.1825", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1823" = type <{ %"class.blink::Member.1825"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1825" = type { %"class.blink::MemberBase.1826" }
%"class.blink::MemberBase.1826" = type { %"class.blink::HeapListHashSetNode.1827"* }
%"class.blink::HeapListHashSetNode.1827" = type { %"class.blink::Member.2143", %"class.blink::Member.1825", %"class.blink::Member.1825" }
%"class.blink::Member.2143" = type { %"class.blink::MemberBase.2144" }
%"class.blink::MemberBase.2144" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1829" = type { %"class.WTF::ListHashSet.base.1839", [7 x i8] }
%"class.WTF::ListHashSet.base.1839" = type <{ %"class.WTF::HashTable.1834", %"class.blink::Member.1836", %"class.blink::Member.1836", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1834" = type <{ %"class.blink::Member.1836"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1836" = type { %"class.blink::MemberBase.1837" }
%"class.blink::MemberBase.1837" = type { %"class.blink::HeapListHashSetNode.1838"* }
%"class.blink::HeapListHashSetNode.1838" = type { %"class.blink::Member.2139", %"class.blink::Member.1836", %"class.blink::Member.1836" }
%"class.blink::Member.2139" = type { %"class.blink::MemberBase.2140" }
%"class.blink::MemberBase.2140" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1840" = type { %"class.WTF::ListHashSet.base.1850", [7 x i8] }
%"class.WTF::ListHashSet.base.1850" = type <{ %"class.WTF::HashTable.1845", %"class.blink::Member.1847", %"class.blink::Member.1847", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1845" = type <{ %"class.blink::Member.1847"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1847" = type { %"class.blink::MemberBase.1848" }
%"class.blink::MemberBase.1848" = type { %"class.blink::HeapListHashSetNode.1849"* }
%"class.blink::HeapListHashSetNode.1849" = type { %"class.blink::Member.2135", %"class.blink::Member.1847", %"class.blink::Member.1847" }
%"class.blink::Member.2135" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1851" = type { %"class.WTF::ListHashSet.base.1861", [7 x i8] }
%"class.WTF::ListHashSet.base.1861" = type <{ %"class.WTF::HashTable.1856", %"class.blink::Member.1858", %"class.blink::Member.1858", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1856" = type <{ %"class.blink::Member.1858"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1858" = type { %"class.blink::MemberBase.1859" }
%"class.blink::MemberBase.1859" = type { %"class.blink::HeapListHashSetNode.1860"* }
%"class.blink::HeapListHashSetNode.1860" = type { %"class.blink::Member.2131", %"class.blink::Member.1858", %"class.blink::Member.1858" }
%"class.blink::Member.2131" = type { %"class.blink::MemberBase.2132" }
%"class.blink::MemberBase.2132" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1862" = type { %"class.WTF::ListHashSet.base.1872", [7 x i8] }
%"class.WTF::ListHashSet.base.1872" = type <{ %"class.WTF::HashTable.1867", %"class.blink::Member.1869", %"class.blink::Member.1869", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1867" = type <{ %"class.blink::Member.1869"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1869" = type { %"class.blink::MemberBase.1870" }
%"class.blink::MemberBase.1870" = type { %"class.blink::HeapListHashSetNode.1871"* }
%"class.blink::HeapListHashSetNode.1871" = type { %"class.blink::Member.2127", %"class.blink::Member.1869", %"class.blink::Member.1869" }
%"class.blink::Member.2127" = type { %"class.blink::MemberBase.2128" }
%"class.blink::MemberBase.2128" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1873" = type { %"class.WTF::ListHashSet.base.1883", [7 x i8] }
%"class.WTF::ListHashSet.base.1883" = type <{ %"class.WTF::HashTable.1878", %"class.blink::Member.1880", %"class.blink::Member.1880", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1878" = type <{ %"class.blink::Member.1880"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1880" = type { %"class.blink::MemberBase.1881" }
%"class.blink::MemberBase.1881" = type { %"class.blink::HeapListHashSetNode.1882"* }
%"class.blink::HeapListHashSetNode.1882" = type { %"class.blink::Member.2123", %"class.blink::Member.1880", %"class.blink::Member.1880" }
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1884" = type { %"class.WTF::ListHashSet.base.1894", [7 x i8] }
%"class.WTF::ListHashSet.base.1894" = type <{ %"class.WTF::HashTable.1889", %"class.blink::Member.1891", %"class.blink::Member.1891", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1889" = type <{ %"class.blink::Member.1891"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1891" = type { %"class.blink::MemberBase.1892" }
%"class.blink::MemberBase.1892" = type { %"class.blink::HeapListHashSetNode.1893"* }
%"class.blink::HeapListHashSetNode.1893" = type { %"class.blink::Member.2001", %"class.blink::Member.1891", %"class.blink::Member.1891" }
%"class.blink::HeapListHashSet.1895" = type { %"class.WTF::ListHashSet.base.1905", [7 x i8] }
%"class.WTF::ListHashSet.base.1905" = type <{ %"class.WTF::HashTable.1900", %"class.blink::Member.1902", %"class.blink::Member.1902", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1900" = type <{ %"class.blink::Member.1902"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1902" = type { %"class.blink::MemberBase.1903" }
%"class.blink::MemberBase.1903" = type { %"class.blink::HeapListHashSetNode.1904"* }
%"class.blink::HeapListHashSetNode.1904" = type { %"class.blink::Member.2117", %"class.blink::Member.1902", %"class.blink::Member.1902" }
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1906" = type { %"class.WTF::ListHashSet.base.1916", [7 x i8] }
%"class.WTF::ListHashSet.base.1916" = type <{ %"class.WTF::HashTable.1911", %"class.blink::Member.1913", %"class.blink::Member.1913", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1911" = type <{ %"class.blink::Member.1913"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1913" = type { %"class.blink::MemberBase.1914" }
%"class.blink::MemberBase.1914" = type { %"class.blink::HeapListHashSetNode.1915"* }
%"class.blink::HeapListHashSetNode.1915" = type { %"class.blink::Member.2113", %"class.blink::Member.1913", %"class.blink::Member.1913" }
%"class.blink::Member.2113" = type { %"class.blink::MemberBase.2114" }
%"class.blink::MemberBase.2114" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1917" = type { %"class.WTF::ListHashSet.base.1927", [7 x i8] }
%"class.WTF::ListHashSet.base.1927" = type <{ %"class.WTF::HashTable.1922", %"class.blink::Member.1924", %"class.blink::Member.1924", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1922" = type <{ %"class.blink::Member.1924"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1924" = type { %"class.blink::MemberBase.1925" }
%"class.blink::MemberBase.1925" = type { %"class.blink::HeapListHashSetNode.1926"* }
%"class.blink::HeapListHashSetNode.1926" = type { %"class.blink::Member.2109", %"class.blink::Member.1924", %"class.blink::Member.1924" }
%"class.blink::Member.2109" = type { %"class.blink::MemberBase.2110" }
%"class.blink::MemberBase.2110" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1928" = type { %"class.WTF::ListHashSet.base.1938", [7 x i8] }
%"class.WTF::ListHashSet.base.1938" = type <{ %"class.WTF::HashTable.1933", %"class.blink::Member.1935", %"class.blink::Member.1935", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1933" = type <{ %"class.blink::Member.1935"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1935" = type { %"class.blink::MemberBase.1936" }
%"class.blink::MemberBase.1936" = type { %"class.blink::HeapListHashSetNode.1937"* }
%"class.blink::HeapListHashSetNode.1937" = type { %"class.blink::Member.2105", %"class.blink::Member.1935", %"class.blink::Member.1935" }
%"class.blink::Member.2105" = type { %"class.blink::MemberBase.2106" }
%"class.blink::MemberBase.2106" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1939" = type { %"class.WTF::ListHashSet.base.1949", [7 x i8] }
%"class.WTF::ListHashSet.base.1949" = type <{ %"class.WTF::HashTable.1944", %"class.blink::Member.1946", %"class.blink::Member.1946", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1944" = type <{ %"class.blink::Member.1946"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1946" = type { %"class.blink::MemberBase.1947" }
%"class.blink::MemberBase.1947" = type { %"class.blink::HeapListHashSetNode.1948"* }
%"class.blink::HeapListHashSetNode.1948" = type { %"class.blink::Member.2101", %"class.blink::Member.1946", %"class.blink::Member.1946" }
%"class.blink::Member.2101" = type { %"class.blink::MemberBase.2102" }
%"class.blink::MemberBase.2102" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1950" = type { %"class.WTF::ListHashSet.base.1960", [7 x i8] }
%"class.WTF::ListHashSet.base.1960" = type <{ %"class.WTF::HashTable.1955", %"class.blink::Member.1957", %"class.blink::Member.1957", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1955" = type <{ %"class.blink::Member.1957"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1957" = type { %"class.blink::MemberBase.1958" }
%"class.blink::MemberBase.1958" = type { %"class.blink::HeapListHashSetNode.1959"* }
%"class.blink::HeapListHashSetNode.1959" = type { %"class.blink::Member.2097", %"class.blink::Member.1957", %"class.blink::Member.1957" }
%"class.blink::Member.2097" = type { %"class.blink::MemberBase.2098" }
%"class.blink::MemberBase.2098" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1961" = type { %"class.WTF::ListHashSet.base.1971", [7 x i8] }
%"class.WTF::ListHashSet.base.1971" = type <{ %"class.WTF::HashTable.1966", %"class.blink::Member.1968", %"class.blink::Member.1968", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1966" = type <{ %"class.blink::Member.1968"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1968" = type { %"class.blink::MemberBase.1969" }
%"class.blink::MemberBase.1969" = type { %"class.blink::HeapListHashSetNode.1970"* }
%"class.blink::HeapListHashSetNode.1970" = type { %"class.blink::Member.2093", %"class.blink::Member.1968", %"class.blink::Member.1968" }
%"class.blink::Member.2093" = type { %"class.blink::MemberBase.2094" }
%"class.blink::MemberBase.2094" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1972" = type { %"class.WTF::ListHashSet.base.1982", [7 x i8] }
%"class.WTF::ListHashSet.base.1982" = type <{ %"class.WTF::HashTable.1977", %"class.blink::Member.1979", %"class.blink::Member.1979", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1977" = type <{ %"class.blink::Member.1979"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1979" = type { %"class.blink::MemberBase.1980" }
%"class.blink::MemberBase.1980" = type { %"class.blink::HeapListHashSetNode.1981"* }
%"class.blink::HeapListHashSetNode.1981" = type { %"class.blink::Member.2003", %"class.blink::Member.1979", %"class.blink::Member.1979" }
%"class.blink::HeapListHashSet.1983" = type { %"class.WTF::ListHashSet.base.1993", [7 x i8] }
%"class.WTF::ListHashSet.base.1993" = type <{ %"class.WTF::HashTable.1988", %"class.blink::Member.1990", %"class.blink::Member.1990", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1988" = type <{ %"class.blink::Member.1990"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1990" = type { %"class.blink::MemberBase.1991" }
%"class.blink::MemberBase.1991" = type { %"class.blink::HeapListHashSetNode.1992"* }
%"class.blink::HeapListHashSetNode.1992" = type { %"class.blink::Member.1995", %"class.blink::Member.1990", %"class.blink::Member.1990" }
%class.scoped_refptr.1994 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1995" = type { %"class.blink::MemberBase.1996" }
%"class.blink::MemberBase.1996" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1999" = type { %"class.blink::MemberBase.2000" }
%"class.blink::MemberBase.2000" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2001" = type { %"class.blink::MemberBase.2002" }
%"class.blink::MemberBase.2002" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2003" = type { %"class.blink::MemberBase.2004" }
%"class.blink::MemberBase.2004" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2007" = type { %"class.blink::MemberBase.2008" }
%"class.blink::MemberBase.2008" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2009" = type { %"class.blink::MemberBase.2010" }
%"class.blink::MemberBase.2010" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2011" }
%"class.blink::Member.2011" = type { %"class.blink::MemberBase.2012" }
%"class.blink::MemberBase.2012" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2408" }
%"class.mojo::Remote.2408" = type { %"class.mojo::internal::InterfacePtrState.2409" }
%"class.mojo::internal::InterfacePtrState.2409" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2410" }
%"class.std::__1::unique_ptr.2410" = type { %"class.std::__1::__compressed_pair.2411" }
%"class.std::__1::__compressed_pair.2411" = type { %"struct.std::__1::__compressed_pair_elem.2412" }
%"struct.std::__1::__compressed_pair_elem.2412" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2013" = type { %"class.std::__1::__compressed_pair.2014" }
%"class.std::__1::__compressed_pair.2014" = type { %"struct.std::__1::__compressed_pair_elem.2015" }
%"struct.std::__1::__compressed_pair_elem.2015" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2016, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2016 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.2017", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.2017" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2018" }
%"class.std::__1::vector.2018" = type { %"class.std::__1::__vector_base.2019" }
%"class.std::__1::__vector_base.2019" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2020" }
%"class.std::__1::__compressed_pair.2020" = type { %"struct.std::__1::__compressed_pair_elem.2021" }
%"struct.std::__1::__compressed_pair_elem.2021" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2025, i8, [7 x i8] }>
%class.scoped_refptr.2025 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2026", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2026" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2027" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2027" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2034" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2035" = type { %"class.std::__1::__compressed_pair.2036" }
%"class.std::__1::__compressed_pair.2036" = type { %"struct.std::__1::__compressed_pair_elem.2037" }
%"struct.std::__1::__compressed_pair_elem.2037" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.1699" = type { %"class.absl::optional_internal::optional_data.1700" }
%"class.absl::optional_internal::optional_data.1700" = type { %"class.absl::optional_internal::optional_data_base.1701" }
%"class.absl::optional_internal::optional_data_base.1701" = type { %"class.absl::optional_internal::optional_data_dtor_base.1702" }
%"class.absl::optional_internal::optional_data_dtor_base.1702" = type { i8, %union.anon.1703 }
%union.anon.1703 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2041" = type { %"class.std::__1::__compressed_pair.2042" }
%"class.std::__1::__compressed_pair.2042" = type { %"struct.std::__1::__compressed_pair_elem.2043" }
%"struct.std::__1::__compressed_pair_elem.2043" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2047" }
%"class.blink::Member.2047" = type { %"class.blink::MemberBase.2048" }
%"class.blink::MemberBase.2048" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2418" }
%"class.mojo::AssociatedRemote.2418" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2419" }
%"class.mojo::internal::AssociatedInterfacePtrState.2419" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2420" }
%"class.std::__1::unique_ptr.2420" = type { %"class.std::__1::__compressed_pair.2421" }
%"class.std::__1::__compressed_pair.2421" = type { %"struct.std::__1::__compressed_pair_elem.2422" }
%"struct.std::__1::__compressed_pair_elem.2422" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2049" = type { %"class.blink::Member.2050" }
%"class.blink::Member.2050" = type { %"class.blink::MemberBase.2051" }
%"class.blink::MemberBase.2051" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2428" }
%"class.mojo::AssociatedRemote.2428" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2429" }
%"class.mojo::internal::AssociatedInterfacePtrState.2429" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2430" }
%"class.std::__1::unique_ptr.2430" = type { %"class.std::__1::__compressed_pair.2431" }
%"class.std::__1::__compressed_pair.2431" = type { %"struct.std::__1::__compressed_pair_elem.2432" }
%"struct.std::__1::__compressed_pair_elem.2432" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2052" }
%"class.blink::Member.2052" = type { %"class.blink::MemberBase.2053" }
%"class.blink::MemberBase.2053" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1681", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2438" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.713" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2438" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2054" = type { %"class.blink::Member.2055" }
%"class.blink::Member.2055" = type { %"class.blink::MemberBase.2056" }
%"class.blink::MemberBase.2056" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2441", %"class.blink::Member.1681", %"class.mojo::AssociatedReceiver.2442" }
%"class.blink::ThreadState::PrefinalizerRegistration.2441" = type { i8 }
%"class.mojo::AssociatedReceiver.2442" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2443" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2443" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2057" }
%"class.blink::Member.2057" = type { %"class.blink::MemberBase.2058" }
%"class.blink::MemberBase.2058" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2446", %"class.blink::Member.1681", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2446" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1578, %"class.std::__1::unique_ptr.713", %"class.base::WeakPtrFactory.2447" }
%"class.base::WeakPtrFactory.2447" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2059" = type { %"class.blink::Member.2060" }
%"class.blink::Member.2060" = type { %"class.blink::MemberBase.2061" }
%"class.blink::MemberBase.2061" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2450", %"class.blink::Member.1681", %"class.mojo::AssociatedReceiver.2451" }
%"class.blink::ThreadState::PrefinalizerRegistration.2450" = type { i8 }
%"class.mojo::AssociatedReceiver.2451" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2452" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2452" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2062" = type { %"class.blink::MemberBase.2063" }
%"class.blink::MemberBase.2063" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2064" = type { %"class.blink::MemberBase.2065" }
%"class.blink::MemberBase.2065" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2066" = type { %"class.blink::MemberBase.2067" }
%"class.blink::MemberBase.2067" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2068" = type { %"class.blink::MemberBase.2069" }
%"class.blink::MemberBase.2069" = type { %"class.blink::HeapHashMap.2070"* }
%"class.blink::HeapHashMap.2070" = type opaque
%"class.mojo::StructPtr.2071" = type { %"class.std::__1::unique_ptr.2072" }
%"class.std::__1::unique_ptr.2072" = type { %"class.std::__1::__compressed_pair.2073" }
%"class.std::__1::__compressed_pair.2073" = type { %"struct.std::__1::__compressed_pair_elem.2074" }
%"struct.std::__1::__compressed_pair_elem.2074" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2075", %"class.mojo::InlinedStructPtr.2076" }
%"class.mojo::InlinedStructPtr.2075" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2076" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2080" = type { %"class.blink::MemberBase.2081" }
%"class.blink::MemberBase.2081" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2082" = type { %"class.absl::optional_internal::optional_data.2083" }
%"class.absl::optional_internal::optional_data.2083" = type { %"class.absl::optional_internal::optional_data_base.2084" }
%"class.absl::optional_internal::optional_data_base.2084" = type { %"class.absl::optional_internal::optional_data_dtor_base.2085" }
%"class.absl::optional_internal::optional_data_dtor_base.2085" = type { i8, %union.anon.2086 }
%union.anon.2086 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.1473 }
%class.scoped_refptr.1473 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1474", %"class.WTF::String", %"class.std::__1::unique_ptr.1476" }
%"class.WTF::RefCounted.1474" = type { %"class.base::RefCounted.1475" }
%"class.base::RefCounted.1475" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1476" = type { %"class.std::__1::__compressed_pair.1477" }
%"class.std::__1::__compressed_pair.1477" = type { %"struct.std::__1::__compressed_pair_elem.1478" }
%"struct.std::__1::__compressed_pair_elem.1478" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1479", %"class.std::__1::unique_ptr.1490", %"class.WTF::Vector.1496", i8, i32 }
%"class.std::__1::unique_ptr.1479" = type { %"class.std::__1::__compressed_pair.1480" }
%"class.std::__1::__compressed_pair.1480" = type { %"struct.std::__1::__compressed_pair_elem.1481" }
%"struct.std::__1::__compressed_pair_elem.1481" = type { %"class.WTF::Vector.1482"* }
%"class.WTF::Vector.1482" = type { %"class.WTF::VectorBuffer.1483" }
%"class.WTF::VectorBuffer.1483" = type { %"class.WTF::VectorBufferBase.1484" }
%"class.WTF::VectorBufferBase.1484" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1490" = type { %"class.std::__1::__compressed_pair.1491" }
%"class.std::__1::__compressed_pair.1491" = type { %"struct.std::__1::__compressed_pair_elem.1492" }
%"struct.std::__1::__compressed_pair_elem.1492" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1496" = type { %"class.WTF::VectorBuffer.1497" }
%"class.WTF::VectorBuffer.1497" = type { %"class.WTF::VectorBufferBase.1484", [32 x i8] }
%"class.blink::SimplifyMarkupCommand" = type { %"class.blink::CompositeEditCommand", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.2374", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.1503", %"class.blink::Member.1505", %"class.blink::Member.1507", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.1503" = type { %"class.blink::MemberBase.1504" }
%"class.blink::MemberBase.1504" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.1505" = type { %"class.blink::MemberBase.1506" }
%"class.blink::MemberBase.1506" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.1507" = type { %"class.blink::MemberBase.1508" }
%"class.blink::MemberBase.1508" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::Member.2374" = type { %"class.blink::MemberBase.2375" }
%"class.blink::MemberBase.2375" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::HTMLLIElement" = type { %"class.blink::HTMLElement" }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2384" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2384" = type { %"class.v8::TracedReference.2385" }
%"class.v8::TracedReference.2385" = type { %"class.v8::BasicTracedReference.2386" }
%"class.v8::BasicTracedReference.2386" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink23ReplaceSelectionCommandD0Ev = comdat any

$_ZNK5blink11EditCommand19IsSimpleEditCommandEv = comdat any

$_ZNK5blink20CompositeEditCommand22IsCompositeEditCommandEv = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_12EditingStyleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_12EditingStyleEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink13QualifiedNameELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11EditCommandEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11EditCommandEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11EditCommandEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11EditCommandEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLLIElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_16DocumentFragmentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11EditCommandEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11EditCommandEE5IndexEvE13gc_info_index = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [32 x i8] c"ReplacementFragment constructor\00", align 1
@_ZN5blink16event_type_names25kWebkitBeforeTextInsertedE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.1 = private unnamed_addr constant [52 x i8] c"ReplacementFragment::insertFragmentForTestRendering\00", align 1
@_ZTVN5blink23ReplaceSelectionCommandE = hidden unnamed_addr constant { [19 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CompositeEditCommand"*)* @_ZN5blink20CompositeEditCommandD2Ev to i8*), i8* bitcast (void (%"class.blink::ReplaceSelectionCommand"*)* @_ZN5blink23ReplaceSelectionCommandD0Ev to i8*), i8* bitcast (void (%"class.blink::CompositeEditCommand"*, %"class.blink::CompositeEditCommand"*)* @_ZN5blink20CompositeEditCommand9SetParentEPS0_ to i8*), i8* bitcast (i32 (%"class.blink::ReplaceSelectionCommand"*)* @_ZNK5blink23ReplaceSelectionCommand12GetInputTypeEv to i8*), i8* bitcast (i1 (%"class.blink::EditCommand"*)* @_ZNK5blink11EditCommand19IsSimpleEditCommandEv to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand22IsCompositeEditCommandEv to i8*), i8* bitcast (void (%"class.blink::ReplaceSelectionCommand"*, %"class.blink::EditingState"*)* @_ZN5blink23ReplaceSelectionCommand7DoApplyEPNS_12EditingStateE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::EditCommand"*)* @_ZNK5blink11EditCommand21TextDataForInputEventEv to i8*), i8* bitcast (void (%"class.blink::ReplaceSelectionCommand"*, %"class.blink::Visitor"*)* @_ZNK5blink23ReplaceSelectionCommand5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::ReplaceSelectionCommand"*)* @_ZNK5blink23ReplaceSelectionCommand25IsReplaceSelectionCommandEv to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand15IsTypingCommandEv to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand21IsCommandGroupWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand20IsDragAndDropCommandEv to i8*), i8* bitcast (i1 (%"class.blink::CompositeEditCommand"*)* @_ZNK5blink20CompositeEditCommand20PreservesTypingStyleEv to i8*), i8* bitcast (void (%"class.blink::CompositeEditCommand"*)* @_ZN5blink20CompositeEditCommand14AppliedEditingEv to i8*), i8* bitcast (void (%"class.blink::CompositeEditCommand"*, %"class.blink::Text"*, i32, i32)* @_ZN5blink20CompositeEditCommand18DeleteTextFromNodeEPNS_4TextEjj to i8*), i8* bitcast (void (%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::EditingState"*, i32)* @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE to i8*)] }, align 8
@_ZN5blink10html_names14kBlockquoteTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kStyleAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names20kContenteditableAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names5kPTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kSelectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.2 = private unnamed_addr constant [33 x i8] c"ReplaceSelectionCommand::doApply\00", align 1
@_ZN5blink16input_type_names9kPasswordE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.3 = private unnamed_addr constant [2 x i8] c" \00", align 1
@_ZZN5blinkL26IsInterchangeHTMLBRElementEPKNS_4NodeEE34s_interchange_newline_class_string = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL26IsInterchangeHTMLBRElementEPKNS_4NodeEE34s_interchange_newline_class_string = internal global i64 0, align 8
@_ZN5blink10html_names10kClassAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.4 = private unnamed_addr constant [26 x i8] c"Apple-interchange-newline\00", align 1
@_ZN5blink10html_names6kBrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH1TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH2TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH3TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH4TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH5TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kH6TagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZZN5blinkL26IsProhibitedParagraphChildERKN3WTF12AtomicStringEE10s_elements = internal global %"class.WTF::StaticSingleton.2528" zeroinitializer, align 8
@_ZGVZN5blinkL26IsProhibitedParagraphChildERKN3WTF12AtomicStringEE10s_elements = internal global i64 0, align 8
@_ZN5blink10html_names11kAddressTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kArticleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kAsideTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kCaptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kCenterTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kColTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kColgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kDdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kDetailsTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kDirTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kDivTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kDlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kDtTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kFieldsetTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names14kFigcaptionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kFigureTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kFooterTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kFormTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kHeaderTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kHgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kHrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kLiTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kListingTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMainTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMenuTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kNavTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kOlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names13kPlaintextTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kPreTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kSectionTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kSummaryTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTableTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTbodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kTdTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTfootTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kThTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTheadTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kTrTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kUlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kXmpTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv = private unnamed_addr constant [65 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::AtomicString]\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink10html_names8kBaseTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kLinkTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kMetaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kTitleTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink9svg_names9kStyleTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink10html_names8kSpanTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names8kBodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.10 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.13 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.15 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.16 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [149 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Node>, WTF::VectorTraits<blink::Member<blink::Node> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12EditingStyleEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EditingStyle]\00", align 1
@_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_12EditingStyleEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_12EditingStyleEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.17 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11EditCommandEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::EditCommand]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11EditCommandEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11EditCommandEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11EditCommandEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11EditCommandEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11EditCommandEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

@_ZN5blink19ReplacementFragmentC1EPNS_8DocumentEPNS_16DocumentFragmentERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE = hidden unnamed_addr alias void (%"class.blink::ReplacementFragment"*, %"class.blink::Document"*, %"class.blink::DocumentFragment"*, %"class.blink::VisibleSelectionTemplate"*), void (%"class.blink::ReplacementFragment"*, %"class.blink::Document"*, %"class.blink::DocumentFragment"*, %"class.blink::VisibleSelectionTemplate"*)* @_ZN5blink19ReplacementFragmentC2EPNS_8DocumentEPNS_16DocumentFragmentERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE
@_ZN5blink23ReplaceSelectionCommandC1ERNS_8DocumentEPNS_16DocumentFragmentEjNS_10InputEvent9InputTypeE = hidden unnamed_addr alias void (%"class.blink::ReplaceSelectionCommand"*, %"class.blink::Document"*, %"class.blink::DocumentFragment"*, i32, i32), void (%"class.blink::ReplaceSelectionCommand"*, %"class.blink::Document"*, %"class.blink::DocumentFragment"*, i32, i32)* @_ZN5blink23ReplaceSelectionCommandC2ERNS_8DocumentEPNS_16DocumentFragmentEjNS_10InputEvent9InputTypeE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ReplacementFragmentC2EPNS_8DocumentEPNS_16DocumentFragmentERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ReplacementFragment"* nocapture, %"class.blink::Document"*, %"class.blink::DocumentFragment"*, %"class.blink::VisibleSelectionTemplate"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %8 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %9 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %10 = alloca %"class.blink::SelectionTemplate", align 8
  %11 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %12 = alloca %"class.blink::TextIteratorBehavior", align 4
  %13 = alloca %"class.blink::TextIteratorBehavior::Builder", align 4
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %16 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %0, i64 0, i32 0
  store %"class.blink::Document"* %1, %"class.blink::Document"** %16, align 8
  %17 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %0, i64 0, i32 1
  store %"class.blink::DocumentFragment"* %2, %"class.blink::DocumentFragment"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %0, i64 0, i32 2
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %0, i64 0, i32 3
  store i8 0, i8* %19, align 1
  %20 = icmp eq %"class.blink::Document"* %1, null
  %21 = icmp eq %"class.blink::DocumentFragment"* %2, null
  %22 = or i1 %20, %21
  br i1 %22, label %323, label %23

23:                                               ; preds = %4
  %24 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %323, label %27

27:                                               ; preds = %23
  %28 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %29 = and i8 %28, 25
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %37, label %31, !prof !2

31:                                               ; preds = %27
  %32 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %33 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %35 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %35, i64* %34, align 8
  %36 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %32, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  br label %37

37:                                               ; preds = %27, %31
  %38 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %27 ], [ getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), %31 ]
  %39 = phi i8* [ null, %27 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %31 ]
  %40 = phi i64 [ -6148914691236517206, %27 ], [ %36, %31 ]
  %41 = call %"class.blink::Element"* @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19RootEditableElementEv(%"class.blink::VisibleSelectionTemplate"* %3) #11
  %42 = icmp eq %"class.blink::Element"* %41, null
  br i1 %42, label %317, label %43

43:                                               ; preds = %37
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %44, i32 7) #11
  %45 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %41, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %41, i64 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 512
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %43
  %51 = call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %45) #11
  br label %52

52:                                               ; preds = %43, %50
  %53 = phi %"class.blink::Element"* [ %51, %50 ], [ %41, %43 ]
  %54 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %41, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names25kWebkitBeforeTextInsertedE, align 8
  %56 = call %"class.blink::EventListener"* @_ZN5blink11EventTarget25GetAttributeEventListenerERKN3WTF12AtomicStringE(%"class.blink::EventTarget"* %54, %"class.WTF::AtomicString"* dereferenceable(8) %55) #11
  %57 = icmp eq %"class.blink::EventListener"* %56, null
  br i1 %57, label %58, label %110

58:                                               ; preds = %52
  %59 = icmp eq %"class.blink::Element"* %53, null
  br i1 %59, label %105, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %53, i64 0, i32 0, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = and i32 %62, 1
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %53, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %64, label %70, label %66

66:                                               ; preds = %60
  %67 = bitcast %"class.blink::NodeData"** %65 to %"class.blink::NodeRareData"**
  %68 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %68, i64 0, i32 1, i32 0, i32 0
  br label %72

70:                                               ; preds = %60
  %71 = bitcast %"class.blink::NodeData"** %65 to %"class.blink::NodeRenderingData"**
  br label %72

72:                                               ; preds = %66, %70
  %73 = phi %"class.blink::NodeRenderingData"** [ %69, %66 ], [ %71, %70 ]
  %74 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %74, i64 0, i32 1
  %76 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %75, align 8
  %77 = icmp eq %"class.blink::LayoutObject"* %76, null
  br i1 %77, label %105, label %78

78:                                               ; preds = %72
  br i1 %64, label %83, label %79

79:                                               ; preds = %78
  %80 = bitcast %"class.blink::NodeData"** %65 to %"class.blink::NodeRareData"**
  %81 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %81, i64 0, i32 1, i32 0, i32 0
  br label %85

83:                                               ; preds = %78
  %84 = bitcast %"class.blink::NodeData"** %65 to %"class.blink::NodeRenderingData"**
  br label %85

85:                                               ; preds = %79, %83
  %86 = phi %"class.blink::NodeRenderingData"** [ %82, %79 ], [ %84, %83 ]
  %87 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %87, i64 0, i32 1
  %89 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %88, align 8
  %90 = bitcast %"class.blink::LayoutObject"* %89 to i1 (%"class.blink::LayoutObject"*, i32)***
  %91 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %91, i64 92
  %93 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %92, align 8
  %94 = call zeroext i1 %93(%"class.blink::LayoutObject"* %89, i32 51) #11
  br i1 %94, label %110, label %95

95:                                               ; preds = %85
  %96 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %90, align 8
  %97 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %96, i64 92
  %98 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %97, align 8
  %99 = call zeroext i1 %98(%"class.blink::LayoutObject"* %89, i32 34) #11
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %90, align 8
  %102 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %101, i64 92
  %103 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %102, align 8
  %104 = call zeroext i1 %103(%"class.blink::LayoutObject"* %89, i32 35) #11
  br i1 %104, label %110, label %105

105:                                              ; preds = %72, %58, %100
  %106 = call zeroext i1 @_ZN5blink22HasRichlyEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %45) #11
  br i1 %106, label %107, label %110

107:                                              ; preds = %105
  %108 = bitcast %"class.blink::DocumentFragment"** %17 to %"class.blink::ContainerNode"**
  %109 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %108, align 8
  call void @_ZN5blink19ReplacementFragment22RemoveInterchangeNodesEPNS_13ContainerNodeE(%"class.blink::ReplacementFragment"* %0, %"class.blink::ContainerNode"* %109)
  br label %317

110:                                              ; preds = %85, %95, %52, %105, %100
  %111 = call zeroext i1 @_ZN5blink22HasRichlyEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %45) #11
  br i1 %111, label %195, label %112

112:                                              ; preds = %110
  %113 = bitcast %"class.blink::DocumentFragment"** %17 to %"class.blink::Node"**
  %114 = load %"class.blink::Node"*, %"class.blink::Node"** %113, align 8
  %115 = icmp eq %"class.blink::Node"* %114, null
  %116 = bitcast %"class.blink::Node"* %114 to %"class.blink::ContainerNode"*
  br i1 %115, label %127, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %114, i64 0, i32 1
  %119 = load i32, i32* %118, align 8
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %114, i64 1
  %124 = bitcast %"class.blink::Node"* %123 to %"class.blink::Node"**
  %125 = load %"class.blink::Node"*, %"class.blink::Node"** %124, align 8
  %126 = icmp eq %"class.blink::Node"* %125, null
  br i1 %126, label %127, label %129

127:                                              ; preds = %117, %112, %122
  %128 = bitcast %"class.blink::DocumentFragment"** %17 to %"class.blink::ContainerNode"**
  br label %150

129:                                              ; preds = %122
  %130 = bitcast %"class.blink::DocumentFragment"** %17 to %"class.blink::ContainerNode"**
  br label %131

131:                                              ; preds = %129, %144
  %132 = phi %"class.blink::Node"* [ %125, %129 ], [ %146, %144 ]
  %133 = call fastcc zeroext i1 @_ZN5blinkL26IsInterchangeHTMLBRElementEPKNS_4NodeE(%"class.blink::Node"* nonnull %132)
  br i1 %133, label %134, label %139

134:                                              ; preds = %131
  %135 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %130, align 8
  %136 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %135, i64 0, i32 2, i32 0, i32 0
  %137 = load %"class.blink::Node"*, %"class.blink::Node"** %136, align 8
  %138 = icmp eq %"class.blink::Node"* %132, %137
  br i1 %138, label %144, label %139

139:                                              ; preds = %134, %131
  %140 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %132, i64 0, i32 1
  %141 = load i32, i32* %140, align 8
  %142 = and i32 %141, 12
  %143 = icmp eq i32 %142, 4
  br i1 %143, label %144, label %195

144:                                              ; preds = %139, %134
  %145 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %132, i64 0, i32 5, i32 0, i32 0
  %146 = load %"class.blink::Node"*, %"class.blink::Node"** %145, align 8
  %147 = icmp eq %"class.blink::Node"* %146, null
  br i1 %147, label %148, label %131

148:                                              ; preds = %144
  %149 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %130, align 8
  br label %150

150:                                              ; preds = %127, %148
  %151 = phi %"class.blink::ContainerNode"** [ %128, %127 ], [ %130, %148 ]
  %152 = phi %"class.blink::ContainerNode"* [ %116, %127 ], [ %149, %148 ]
  call void @_ZN5blink19ReplacementFragment22RemoveInterchangeNodesEPNS_13ContainerNodeE(%"class.blink::ReplacementFragment"* %0, %"class.blink::ContainerNode"* %152)
  %153 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #11
  %154 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %155 = load %"class.blink::Node"*, %"class.blink::Node"** %113, align 8
  %156 = call %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"* %155, i1 zeroext false) #11
  store %"class.WTF::StringImpl"* %156, %"class.WTF::StringImpl"** %154, align 8
  %157 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 112) #11
  %158 = bitcast i8* %157 to %"class.blink::BeforeTextInsertedEvent"*
  call void @_ZN5blink23BeforeTextInsertedEventC1ERKN3WTF6StringE(%"class.blink::BeforeTextInsertedEvent"* %158, %"class.WTF::String"* nonnull dereferenceable(8) %6) #11
  %159 = getelementptr inbounds i8, i8* %157, i64 -4
  %160 = bitcast i8* %159 to i16*
  %161 = load atomic i16, i16* %160 monotonic, align 2
  %162 = or i16 %161, 1
  store atomic i16 %162, i16* %160 release, align 2
  %163 = bitcast i8* %157 to %"class.blink::Event"*
  %164 = bitcast %"class.blink::Element"* %41 to void (%"class.blink::Node"*, %"class.blink::Event"*)***
  %165 = load void (%"class.blink::Node"*, %"class.blink::Event"*)**, void (%"class.blink::Node"*, %"class.blink::Event"*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Event"*)*, void (%"class.blink::Node"*, %"class.blink::Event"*)** %165, i64 65
  %167 = load void (%"class.blink::Node"*, %"class.blink::Event"*)*, void (%"class.blink::Node"*, %"class.blink::Event"*)** %166, align 8
  call void %167(%"class.blink::Node"* %45, %"class.blink::Event"* dereferenceable(104) %163) #11
  %168 = getelementptr inbounds i8, i8* %157, i64 104
  %169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %170 = bitcast i8* %168 to %"class.WTF::StringImpl"**
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %172 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %169, %"class.WTF::StringImpl"* %171) #11
  br i1 %172, label %178, label %173

173:                                              ; preds = %150
  %174 = bitcast i8* %168 to %"class.WTF::String"*
  %175 = bitcast %"class.blink::EphemeralRangeTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %175) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE26ToNormalizedEphemeralRangeEv(%"class.blink::EphemeralRangeTemplate"* nonnull sret %7, %"class.blink::VisibleSelectionTemplate"* %3) #11
  %176 = call %"class.blink::DocumentFragment"* @_ZN5blink22CreateFragmentFromTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKN3WTF6StringE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %7, %"class.WTF::String"* dereferenceable(8) %174) #11
  store %"class.blink::DocumentFragment"* %176, %"class.blink::DocumentFragment"** %17, align 8
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %175) #11
  %177 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %151, align 8
  call void @_ZN5blink19ReplacementFragment22RemoveInterchangeNodesEPNS_13ContainerNodeE(%"class.blink::ReplacementFragment"* %0, %"class.blink::ContainerNode"* %177)
  br label %178

178:                                              ; preds = %150, %173
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %178
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #11
  br label %194

194:                                              ; preds = %178, %190, %193
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #11
  br label %317

195:                                              ; preds = %139, %110
  %196 = call %"class.blink::HTMLElement"* @_ZN5blink19ReplacementFragment30InsertFragmentForTestRenderingEPNS_7ElementE(%"class.blink::ReplacementFragment"* %0, %"class.blink::Element"* nonnull %41)
  %197 = icmp eq %"class.blink::HTMLElement"* %196, null
  br i1 %197, label %198, label %201

198:                                              ; preds = %195
  %199 = bitcast %"class.blink::DocumentFragment"** %17 to %"class.blink::ContainerNode"**
  %200 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %199, align 8
  call void @_ZN5blink19ReplacementFragment22RemoveInterchangeNodesEPNS_13ContainerNodeE(%"class.blink::ReplacementFragment"* %0, %"class.blink::ContainerNode"* %200)
  br label %317

201:                                              ; preds = %195
  %202 = bitcast %"class.blink::EphemeralRangeTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %202) #11
  %203 = bitcast %"class.blink::VisibleSelectionTemplate"* %9 to i8*
  %204 = bitcast %"class.blink::EphemeralRangeTemplate"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %204, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %203) #11
  %205 = bitcast %"class.blink::SelectionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %205) #11
  %206 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %206) #11
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %11) #11
  %207 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %196, i64 0, i32 0, i32 0, i32 0
  %208 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder17SelectAllChildrenERKNS_4NodeE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %11, %"class.blink::Node"* dereferenceable(64) %207) #11
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %10, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %208) #11
  call void @_ZN5blink22CreateVisibleSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisibleSelectionTemplate"* nonnull sret %9, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %10) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE26ToNormalizedEphemeralRangeEv(%"class.blink::EphemeralRangeTemplate"* nonnull sret %8, %"class.blink::VisibleSelectionTemplate"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %206) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %205) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %203) #11
  %209 = bitcast %"class.blink::TextIteratorBehavior"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %209) #11
  %210 = bitcast %"class.blink::TextIteratorBehavior::Builder"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %210) #11
  call void @_ZN5blink20TextIteratorBehavior7BuilderC1Ev(%"class.blink::TextIteratorBehavior::Builder"* nonnull %13) #11
  %211 = call dereferenceable(4) %"class.blink::TextIteratorBehavior::Builder"* @_ZN5blink20TextIteratorBehavior7Builder20SetEmitsOriginalTextEb(%"class.blink::TextIteratorBehavior::Builder"* nonnull %13, i1 zeroext true) #11
  %212 = call dereferenceable(4) %"class.blink::TextIteratorBehavior::Builder"* @_ZN5blink20TextIteratorBehavior7Builder25SetIgnoresStyleVisibilityEb(%"class.blink::TextIteratorBehavior::Builder"* %211, i1 zeroext true) #11
  call void @_ZN5blink20TextIteratorBehavior7Builder5BuildEv(%"class.blink::TextIteratorBehavior"* nonnull sret %12, %"class.blink::TextIteratorBehavior::Builder"* %212) #11
  call void @_ZN5blink20TextIteratorBehavior7BuilderD1Ev(%"class.blink::TextIteratorBehavior::Builder"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %210) #11
  %213 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213) #11
  %214 = call %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %8, %"class.blink::TextIteratorBehavior"* nonnull dereferenceable(4) %12) #11
  %215 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %214, %"class.WTF::StringImpl"** %215, align 8
  %216 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %196, i64 0, i32 0, i32 0
  call void @_ZN5blink19ReplacementFragment22RemoveInterchangeNodesEPNS_13ContainerNodeE(%"class.blink::ReplacementFragment"* %0, %"class.blink::ContainerNode"* %216)
  call void @_ZN5blink19ReplacementFragment21RemoveUnrenderedNodesEPNS_13ContainerNodeE(%"class.blink::ReplacementFragment"* %0, %"class.blink::ContainerNode"* %216)
  %217 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %196, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %218 = load %"class.blink::Node"*, %"class.blink::Node"** %217, align 8
  %219 = icmp eq %"class.blink::Node"* %218, null
  br i1 %219, label %229, label %220

220:                                              ; preds = %201
  %221 = bitcast %"class.blink::DocumentFragment"** %17 to %"class.blink::ContainerNode"**
  br label %222

222:                                              ; preds = %222, %220
  %223 = phi %"class.blink::Node"* [ %218, %220 ], [ %227, %222 ]
  %224 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* %216, %"class.blink::Node"* nonnull %223) #11
  %225 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %221, align 8
  %226 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %225, %"class.blink::Node"* nonnull %223) #11
  %227 = load %"class.blink::Node"*, %"class.blink::Node"** %217, align 8
  %228 = icmp eq %"class.blink::Node"* %227, null
  br i1 %228, label %229, label %222

229:                                              ; preds = %222, %201
  %230 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* nonnull %207) #11
  %231 = icmp eq %"class.blink::ContainerNode"* %230, null
  br i1 %231, label %234, label %232

232:                                              ; preds = %229
  %233 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* nonnull %230, %"class.blink::Node"* nonnull %207) #11
  br label %234

234:                                              ; preds = %229, %232
  %235 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 112) #11
  %236 = bitcast i8* %235 to %"class.blink::BeforeTextInsertedEvent"*
  call void @_ZN5blink23BeforeTextInsertedEventC1ERKN3WTF6StringE(%"class.blink::BeforeTextInsertedEvent"* %236, %"class.WTF::String"* nonnull dereferenceable(8) %14) #11
  %237 = getelementptr inbounds i8, i8* %235, i64 -4
  %238 = bitcast i8* %237 to i16*
  %239 = load atomic i16, i16* %238 monotonic, align 2
  %240 = or i16 %239, 1
  store atomic i16 %240, i16* %238 release, align 2
  %241 = bitcast i8* %235 to %"class.blink::Event"*
  %242 = bitcast %"class.blink::Element"* %41 to void (%"class.blink::Node"*, %"class.blink::Event"*)***
  %243 = load void (%"class.blink::Node"*, %"class.blink::Event"*)**, void (%"class.blink::Node"*, %"class.blink::Event"*)*** %242, align 8
  %244 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Event"*)*, void (%"class.blink::Node"*, %"class.blink::Event"*)** %243, i64 65
  %245 = load void (%"class.blink::Node"*, %"class.blink::Event"*)*, void (%"class.blink::Node"*, %"class.blink::Event"*)** %244, align 8
  call void %245(%"class.blink::Node"* %45, %"class.blink::Event"* dereferenceable(104) %241) #11
  %246 = getelementptr inbounds i8, i8* %235, i64 104
  %247 = bitcast i8* %246 to %"class.WTF::String"*
  %248 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %249 = bitcast i8* %246 to %"class.WTF::StringImpl"**
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %249, align 8
  %251 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %248, %"class.WTF::StringImpl"* %250) #11
  br i1 %251, label %252, label %254

252:                                              ; preds = %234
  %253 = call zeroext i1 @_ZN5blink22HasRichlyEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %45) #11
  br i1 %253, label %300, label %254

254:                                              ; preds = %252, %234
  %255 = load %"class.blink::Node"*, %"class.blink::Node"** %217, align 8
  %256 = icmp eq %"class.blink::Node"* %255, null
  br i1 %256, label %266, label %257

257:                                              ; preds = %254
  %258 = bitcast %"class.blink::DocumentFragment"** %17 to %"class.blink::ContainerNode"**
  br label %259

259:                                              ; preds = %259, %257
  %260 = phi %"class.blink::Node"* [ %255, %257 ], [ %264, %259 ]
  %261 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* %216, %"class.blink::Node"* nonnull %260) #11
  %262 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %258, align 8
  %263 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %262, %"class.blink::Node"* nonnull %260) #11
  %264 = load %"class.blink::Node"*, %"class.blink::Node"** %217, align 8
  %265 = icmp eq %"class.blink::Node"* %264, null
  br i1 %265, label %266, label %259

266:                                              ; preds = %259, %254
  %267 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* nonnull %207) #11
  %268 = icmp eq %"class.blink::ContainerNode"* %267, null
  br i1 %268, label %271, label %269

269:                                              ; preds = %266
  %270 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* nonnull %267, %"class.blink::Node"* nonnull %207) #11
  br label %271

271:                                              ; preds = %266, %269
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %1, i32 7) #11
  %272 = bitcast %"class.blink::EphemeralRangeTemplate"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %272) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE26ToNormalizedEphemeralRangeEv(%"class.blink::EphemeralRangeTemplate"* nonnull sret %15, %"class.blink::VisibleSelectionTemplate"* %3) #11
  %273 = call %"class.blink::DocumentFragment"* @_ZN5blink22CreateFragmentFromTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKN3WTF6StringE(%"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %15, %"class.WTF::String"* dereferenceable(8) %247) #11
  store %"class.blink::DocumentFragment"* %273, %"class.blink::DocumentFragment"** %17, align 8
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %272) #11
  %274 = bitcast %"class.blink::DocumentFragment"** %17 to %"class.blink::ContainerNode"**
  %275 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %274, align 8
  %276 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %275, i64 0, i32 1, i32 0, i32 0
  %277 = load %"class.blink::Node"*, %"class.blink::Node"** %276, align 8
  %278 = icmp eq %"class.blink::Node"* %277, null
  br i1 %278, label %300, label %279

279:                                              ; preds = %271
  %280 = call %"class.blink::HTMLElement"* @_ZN5blink19ReplacementFragment30InsertFragmentForTestRenderingEPNS_7ElementE(%"class.blink::ReplacementFragment"* %0, %"class.blink::Element"* nonnull %41)
  %281 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %280, i64 0, i32 0, i32 0
  call void @_ZN5blink19ReplacementFragment22RemoveInterchangeNodesEPNS_13ContainerNodeE(%"class.blink::ReplacementFragment"* %0, %"class.blink::ContainerNode"* %281)
  call void @_ZN5blink19ReplacementFragment21RemoveUnrenderedNodesEPNS_13ContainerNodeE(%"class.blink::ReplacementFragment"* %0, %"class.blink::ContainerNode"* %281)
  %282 = icmp eq %"class.blink::HTMLElement"* %280, null
  br i1 %282, label %300, label %283

283:                                              ; preds = %279
  %284 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %280, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %285 = load %"class.blink::Node"*, %"class.blink::Node"** %284, align 8
  %286 = icmp eq %"class.blink::Node"* %285, null
  br i1 %286, label %294, label %287

287:                                              ; preds = %283, %287
  %288 = phi %"class.blink::Node"* [ %292, %287 ], [ %285, %283 ]
  %289 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* %281, %"class.blink::Node"* nonnull %288) #11
  %290 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %274, align 8
  %291 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %290, %"class.blink::Node"* nonnull %288) #11
  %292 = load %"class.blink::Node"*, %"class.blink::Node"** %284, align 8
  %293 = icmp eq %"class.blink::Node"* %292, null
  br i1 %293, label %294, label %287

294:                                              ; preds = %287, %283
  %295 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %280, i64 0, i32 0, i32 0, i32 0
  %296 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* nonnull %295) #11
  %297 = icmp eq %"class.blink::ContainerNode"* %296, null
  br i1 %297, label %300, label %298

298:                                              ; preds = %294
  %299 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* nonnull %296, %"class.blink::Node"* nonnull %295) #11
  br label %300

300:                                              ; preds = %271, %298, %294, %279, %252
  %301 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %302 = icmp eq %"class.WTF::StringImpl"* %301, null
  br i1 %302, label %316, label %303

303:                                              ; preds = %300
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load atomic i32, i32* %304 monotonic, align 4
  %306 = and i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  br i1 %307, label %310, label %312

310:                                              ; preds = %303
  %311 = add i32 %309, -1
  store i32 %311, i32* %308, align 4
  br label %312

312:                                              ; preds = %310, %303
  %313 = phi i32 [ %311, %310 ], [ %309, %303 ]
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %312
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %301) #11
  br label %316

316:                                              ; preds = %300, %312, %315
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %209) #11
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %202) #11
  br label %317

317:                                              ; preds = %107, %194, %316, %198, %37
  %318 = icmp eq i8* %39, null
  br i1 %318, label %323, label %319

319:                                              ; preds = %317
  %320 = load i8, i8* %39, align 1
  %321 = icmp eq i8 %320, 0
  br i1 %321, label %323, label %322

322:                                              ; preds = %319
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %39, i8* %38, i64 %40) #11
  br label %323

323:                                              ; preds = %23, %322, %319, %317, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::Element"* @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19RootEditableElementEv(%"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::EventListener"* @_ZN5blink11EventTarget25GetAttributeEventListenerERKN3WTF12AtomicStringE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink22HasRichlyEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ReplacementFragment22RemoveInterchangeNodesEPNS_13ContainerNodeE(%"class.blink::ReplacementFragment"* nocapture, %"class.blink::ContainerNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %0, i64 0, i32 2
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %0, i64 0, i32 3
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %51, label %8

8:                                                ; preds = %2, %21
  %9 = phi %"class.blink::Node"* [ %24, %21 ], [ %6, %2 ]
  %10 = tail call fastcc zeroext i1 @_ZN5blinkL26IsInterchangeHTMLBRElementEPKNS_4NodeE(%"class.blink::Node"* nonnull %9)
  br i1 %10, label %11, label %16

11:                                               ; preds = %8
  store i8 1, i8* %3, align 8
  %12 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* nonnull %9) #11
  %13 = icmp eq %"class.blink::ContainerNode"* %12, null
  br i1 %13, label %26, label %14

14:                                               ; preds = %11
  %15 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* nonnull %12, %"class.blink::Node"* nonnull %9) #11
  br label %26

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1
  %23 = bitcast %"class.blink::Node"* %22 to %"class.blink::Node"**
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %26, label %8

26:                                               ; preds = %16, %21, %14, %11
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %51, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %51, label %33

33:                                               ; preds = %29, %46
  %34 = phi %"class.blink::Node"* [ %49, %46 ], [ %31, %29 ]
  %35 = tail call fastcc zeroext i1 @_ZN5blinkL26IsInterchangeHTMLBRElementEPKNS_4NodeE(%"class.blink::Node"* nonnull %34)
  br i1 %35, label %36, label %41

36:                                               ; preds = %33
  store i8 1, i8* %4, align 1
  %37 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* nonnull %34) #11
  %38 = icmp eq %"class.blink::ContainerNode"* %37, null
  br i1 %38, label %51, label %39

39:                                               ; preds = %36
  %40 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* nonnull %37, %"class.blink::Node"* nonnull %34) #11
  br label %51

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 1, i32 0, i32 0, i32 1
  %48 = bitcast %"class.blink::TraceWrapperV8Reference"* %47 to %"class.blink::Node"**
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %51, label %33

51:                                               ; preds = %41, %46, %2, %29, %26, %39, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL26IsInterchangeHTMLBRElementEPKNS_4NodeE(%"class.blink::Node"*) unnamed_addr #0 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL26IsInterchangeHTMLBRElementEPKNS_4NodeEE34s_interchange_newline_class_string to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !3

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL26IsInterchangeHTMLBRElementEPKNS_4NodeEE34s_interchange_newline_class_string) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL26IsInterchangeHTMLBRElementEPKNS_4NodeEE34s_interchange_newline_class_string to %"class.WTF::String"*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i64 25) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL26IsInterchangeHTMLBRElementEPKNS_4NodeEE34s_interchange_newline_class_string) #11
  br label %8

8:                                                ; preds = %4, %7, %1
  %9 = icmp eq %"class.blink::Node"* %0, null
  br i1 %9, label %45, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 48
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %45

15:                                               ; preds = %10
  %16 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %17 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %20 = bitcast %"class.blink::Member"* %19 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, %25
  br i1 %26, label %27, label %45

27:                                               ; preds = %15
  %28 = bitcast %"class.blink::Node"* %0 to %"class.blink::Element"*
  %29 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kClassAttrE, align 8
  %30 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %28, %"class.blink::QualifiedName"* dereferenceable(8) %29) #11
  %31 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL26IsInterchangeHTMLBRElementEPKNS_4NodeEE34s_interchange_newline_class_string to %"class.WTF::StringImpl"**), align 8
  %34 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"* %33) #11
  br i1 %34, label %35, label %45

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %39, i64 0, i32 2
  %41 = bitcast %"class.blink::UseCounter"* %40 to void (%"class.blink::UseCounter"*, i32)***
  %42 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %42, i64 3
  %44 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %43, align 8
  tail call void %44(%"class.blink::UseCounter"* %40, i32 458) #11
  br label %45

45:                                               ; preds = %27, %15, %8, %10, %35
  %46 = phi i1 [ true, %35 ], [ false, %27 ], [ false, %15 ], [ false, %10 ], [ false, %8 ]
  ret i1 %46
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node11textContentEb(%"class.blink::Node"*, i1 zeroext) local_unnamed_addr #2

declare %"class.blink::DocumentFragment"* @_ZN5blink22CreateFragmentFromTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKN3WTF6StringE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE26ToNormalizedEphemeralRangeEv(%"class.blink::EphemeralRangeTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLElement"* @_ZN5blink19ReplacementFragment30InsertFragmentForTestRenderingEPNS_7ElementE(%"class.blink::ReplacementFragment"* nocapture readonly, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %13, label %7, !prof !2

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %9 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %11 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %11, i64* %10, align 8
  %12 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %8, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i64 [ -6148914691236517206, %2 ], [ %12, %7 ]
  %15 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), %7 ]
  %16 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %7 ]
  %17 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %0, i64 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = call %"class.blink::HTMLElement"* @_ZN5blink29CreateDefaultParagraphElementERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848) %18) #11
  %20 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %19, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %0, i64 0, i32 1
  %22 = bitcast %"class.blink::DocumentFragment"** %21 to %"class.blink::Node"**
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %20, %"class.blink::Node"* %23) #11
  %25 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  %26 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %19, i64 0, i32 0, i32 0, i32 0
  %27 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %25, %"class.blink::Node"* %26) #11
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %28, i32 7) #11
  %29 = icmp eq i8* %16, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %13
  %31 = load i8, i8* %16, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %16, i8* %15, i64 %14) #11
  br label %34

34:                                               ; preds = %13, %30, %33
  ret %"class.blink::HTMLElement"* %19
}

declare void @_ZN5blink22CreateVisibleSelectionERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisibleSelectionTemplate"* sret, %"class.blink::SelectionTemplate"* dereferenceable(40)) local_unnamed_addr #2

declare void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*) unnamed_addr #2

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder17SelectAllChildrenERKNS_4NodeE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* sret, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*) local_unnamed_addr #2

declare void @_ZN5blink20TextIteratorBehavior7BuilderC1Ev(%"class.blink::TextIteratorBehavior::Builder"*) unnamed_addr #2

declare dereferenceable(4) %"class.blink::TextIteratorBehavior::Builder"* @_ZN5blink20TextIteratorBehavior7Builder20SetEmitsOriginalTextEb(%"class.blink::TextIteratorBehavior::Builder"*, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(4) %"class.blink::TextIteratorBehavior::Builder"* @_ZN5blink20TextIteratorBehavior7Builder25SetIgnoresStyleVisibilityEb(%"class.blink::TextIteratorBehavior::Builder"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZN5blink20TextIteratorBehavior7Builder5BuildEv(%"class.blink::TextIteratorBehavior"* sret, %"class.blink::TextIteratorBehavior::Builder"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink20TextIteratorBehavior7BuilderD1Ev(%"class.blink::TextIteratorBehavior::Builder"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink9PlainTextERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_20TextIteratorBehaviorE(%"class.blink::EphemeralRangeTemplate"* dereferenceable(32), %"class.blink::TextIteratorBehavior"* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ReplacementFragment21RemoveUnrenderedNodesEPNS_13ContainerNodeE(%"class.blink::ReplacementFragment"* nocapture readnone, %"class.blink::ContainerNode"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.1411", align 8
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = bitcast %"class.blink::HeapVector.1411"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::HeapVector.1411", %"class.blink::HeapVector.1411"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::HeapVector.1411", %"class.blink::HeapVector.1411"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::HeapVector.1411", %"class.blink::HeapVector.1411"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #11
  %9 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %10 = icmp eq %"class.blink::ContainerNode"* %1, null
  br i1 %10, label %76, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %76, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1
  %18 = bitcast %"class.blink::Node"* %17 to %"class.blink::Node"**
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %76, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"** %4 to i8*
  %23 = getelementptr inbounds %"class.blink::HeapVector.1411", %"class.blink::HeapVector.1411"* %3, i64 0, i32 0
  br label %30

24:                                               ; preds = %65, %73
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %26 = load i32, i32* %8, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %25, i64 %27
  %29 = icmp eq i32 %26, 0
  br i1 %29, label %76, label %77

30:                                               ; preds = %21, %73
  %31 = phi %"class.blink::Node"* [ %19, %21 ], [ %74, %73 ]
  %32 = call zeroext i1 @_ZN5blink14IsNodeRenderedERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %31) #11
  br i1 %32, label %55, label %33

33:                                               ; preds = %30
  %34 = call zeroext i1 @_ZN5blink20IsTableStructureNodeEPKNS_4NodeE(%"class.blink::Node"* nonnull %31) #11
  br i1 %34, label %55, label %35

35:                                               ; preds = %33
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  store %"class.blink::Node"* %31, %"class.blink::Node"** %4, align 8
  %36 = load i32, i32* %8, align 4
  %37 = load i32, i32* %7, align 8
  %38 = icmp eq i32 %36, %37
  br i1 %38, label %53, label %39, !prof !4

39:                                               ; preds = %35
  %40 = ptrtoint %"class.blink::Node"* %31 to i64
  %41 = load %"class.blink::Member"*, %"class.blink::Member"** %6, align 8
  %42 = zext i32 %36 to i64
  %43 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %41, i64 %42
  %44 = bitcast %"class.blink::Member"* %43 to i64*
  store atomic i64 %40, i64* %44 monotonic, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.blink::Node"* %31 to i8*
  %49 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %39
  %51 = load i32, i32* %8, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %8, align 4
  br label %54

53:                                               ; preds = %35
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.1414"* nonnull %23, %"class.blink::Node"** nonnull dereferenceable(8) %4) #11
  br label %54

54:                                               ; preds = %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  br label %55

55:                                               ; preds = %30, %33, %54
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 1
  %62 = bitcast %"class.blink::Node"* %61 to %"class.blink::Node"**
  %63 = load %"class.blink::Node"*, %"class.blink::Node"** %62, align 8
  %64 = icmp eq %"class.blink::Node"* %63, null
  br i1 %64, label %65, label %73

65:                                               ; preds = %60, %55
  %66 = icmp eq %"class.blink::Node"* %31, %9
  br i1 %66, label %24, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 5, i32 0, i32 0
  %69 = load %"class.blink::Node"*, %"class.blink::Node"** %68, align 8
  %70 = icmp eq %"class.blink::Node"* %69, null
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %31, %"class.blink::Node"* %9) #11
  br label %73

73:                                               ; preds = %60, %67, %71
  %74 = phi %"class.blink::Node"* [ %72, %71 ], [ %69, %67 ], [ %63, %60 ]
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %24, label %30

76:                                               ; preds = %87, %11, %2, %16, %24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #11
  ret void

77:                                               ; preds = %24, %87
  %78 = phi %"class.blink::Member"* [ %88, %87 ], [ %25, %24 ]
  %79 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %77
  %83 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* nonnull %80) #11
  %84 = icmp eq %"class.blink::ContainerNode"* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* nonnull %83, %"class.blink::Node"* nonnull %80) #11
  br label %87

87:                                               ; preds = %77, %82, %85
  %88 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %78, i64 1
  %89 = icmp eq %"class.blink::Member"* %88, %28
  br i1 %89, label %76, label %77
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ReplacementFragment44RestoreAndRemoveTestRenderingNodesToFragmentEPNS_7ElementE(%"class.blink::ReplacementFragment"* nocapture readonly, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Element"* %1, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %0, i64 0, i32 1
  %11 = bitcast %"class.blink::DocumentFragment"** %10 to %"class.blink::ContainerNode"**
  br label %12

12:                                               ; preds = %8, %12
  %13 = phi %"class.blink::Node"* [ %6, %8 ], [ %17, %12 ]
  %14 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* %9, %"class.blink::Node"* nonnull %13) #11
  %15 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %11, align 8
  %16 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"* %15, %"class.blink::Node"* nonnull %13) #11
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %19, label %12

19:                                               ; preds = %12, %4
  %20 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %21 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* nonnull %20) #11
  %22 = icmp eq %"class.blink::ContainerNode"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* nonnull %21, %"class.blink::Node"* nonnull %20) #11
  br label %25

25:                                               ; preds = %23, %19, %2
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink19ReplacementFragment7IsEmptyEv(%"class.blink::ReplacementFragment"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %0, i64 0, i32 1
  %3 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %2, align 8
  %4 = icmp eq %"class.blink::DocumentFragment"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %9, label %17

9:                                                ; preds = %5, %1
  %10 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %0, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !5
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %0, i64 0, i32 3
  %15 = load i8, i8* %14, align 1, !range !5
  %16 = icmp eq i8 %15, 0
  br label %17

17:                                               ; preds = %5, %9, %13
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ %16, %13 ]
  ret i1 %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink19ReplacementFragment10FirstChildEv(%"class.blink::ReplacementFragment"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %0, i64 0, i32 1
  %3 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %2, align 8
  %4 = icmp eq %"class.blink::DocumentFragment"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::Node"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::Node"* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink19ReplacementFragment9LastChildEv(%"class.blink::ReplacementFragment"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %0, i64 0, i32 1
  %3 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %2, align 8
  %4 = icmp eq %"class.blink::DocumentFragment"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::Node"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::Node"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ReplacementFragment28RemoveNodePreservingChildrenEPNS_13ContainerNodeE(%"class.blink::ReplacementFragment"* nocapture readnone, %"class.blink::ContainerNode"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::ContainerNode"* %1, null
  br i1 %3, label %30, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  br label %10

10:                                               ; preds = %8, %21
  %11 = phi %"class.blink::Node"* [ %6, %8 ], [ %22, %21 ]
  %12 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* nonnull %11) #11
  %13 = icmp eq %"class.blink::ContainerNode"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* nonnull %12, %"class.blink::Node"* nonnull %11) #11
  br label %16

16:                                               ; preds = %10, %14
  %17 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* nonnull %9) #11
  %18 = icmp eq %"class.blink::ContainerNode"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %16
  %20 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode12InsertBeforeEPNS_4NodeES2_(%"class.blink::ContainerNode"* nonnull %17, %"class.blink::Node"* nonnull %11, %"class.blink::Node"* nonnull %9) #11
  br label %21

21:                                               ; preds = %16, %19
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %24, label %10

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %26 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* nonnull %25) #11
  %27 = icmp eq %"class.blink::ContainerNode"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* nonnull %26, %"class.blink::Node"* nonnull %25) #11
  br label %30

30:                                               ; preds = %28, %24, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ReplacementFragment10RemoveNodeEPNS_4NodeE(%"class.blink::ReplacementFragment"* nocapture readnone, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Node"* %1, null
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* nonnull %1) #11
  %6 = icmp eq %"class.blink::ContainerNode"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  %8 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* nonnull %5, %"class.blink::Node"* nonnull %1) #11
  br label %9

9:                                                ; preds = %7, %4, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ReplacementFragment16InsertNodeBeforeEPNS_4NodeES2_(%"class.blink::ReplacementFragment"* nocapture readnone, %"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %4 = icmp ne %"class.blink::Node"* %1, null
  %5 = icmp ne %"class.blink::Node"* %2, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* nonnull %2) #11
  %9 = icmp eq %"class.blink::ContainerNode"* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %7
  %11 = tail call %"class.blink::Node"* @_ZN5blink13ContainerNode12InsertBeforeEPNS_4NodeES2_(%"class.blink::ContainerNode"* nonnull %8, %"class.blink::Node"* nonnull %1, %"class.blink::Node"* nonnull %2) #11
  br label %12

12:                                               ; preds = %10, %7, %3
  ret void
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13ContainerNode12InsertBeforeEPNS_4NodeES2_(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::HTMLElement"* @_ZN5blink29CreateDefaultParagraphElementERNS_8DocumentE(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11AppendChildEPNS_4NodeE(%"class.blink::ContainerNode"*, %"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14IsNodeRenderedERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink20IsTableStructureNodeEPKNS_4NodeE(%"class.blink::Node"*) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ReplaceSelectionCommandC2ERNS_8DocumentEPNS_16DocumentFragmentEjNS_10InputEvent9InputTypeE(%"class.blink::ReplaceSelectionCommand"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::DocumentFragment"*, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  tail call void @_ZN5blink20CompositeEditCommandC2ERNS_8DocumentE(%"class.blink::CompositeEditCommand"* %6, %"class.blink::Document"* dereferenceable(2848) %1) #11
  %7 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*] }, { [19 x i8*] }* @_ZTVN5blink23ReplaceSelectionCommandE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 4
  %10 = trunc i32 %3 to i8
  %11 = and i8 %10, 1
  %12 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 40, i1 false)
  store i8 %11, i8* %9, align 8
  %13 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 5
  %14 = lshr i32 %3, 1
  %15 = trunc i32 %14 to i8
  %16 = and i8 %15, 1
  store i8 %16, i8* %13, align 1
  %17 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 6
  %18 = lshr i32 %3, 2
  %19 = trunc i32 %18 to i8
  %20 = and i8 %19, 1
  store i8 %20, i8* %17, align 2
  %21 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::DocumentFragment"* %2, %"class.blink::DocumentFragment"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 8
  %23 = lshr i32 %3, 3
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 1
  store i8 %25, i8* %22, align 8
  %26 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 9
  %27 = lshr i32 %3, 4
  %28 = trunc i32 %27 to i8
  %29 = and i8 %28, 1
  store i8 %29, i8* %26, align 1
  %30 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 10
  store i32 %4, i32* %30, align 4
  %31 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 11
  %32 = lshr i32 %3, 5
  %33 = trunc i32 %32 to i8
  %34 = and i8 %33, 1
  store i8 %34, i8* %31, align 8
  %35 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 12
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 13
  %37 = bitcast %"class.blink::PositionTemplate"* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 32, i1 false)
  ret void
}

declare void @_ZN5blink20CompositeEditCommandC2ERNS_8DocumentE(%"class.blink::CompositeEditCommand"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23ReplaceSelectionCommand16ShouldMergeStartEbbb(%"class.blink::ReplaceSelectionCommand"*, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %8 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %9 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %10 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 9
  %13 = load i8, i8* %12, align 1, !range !5
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %92

15:                                               ; preds = %4
  %16 = bitcast %"class.blink::VisiblePositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = bitcast %"class.blink::VisiblePositionTemplate"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 24, i1 false)
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8, !noalias !6
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %19, i32 7) #11, !noalias !6
  %20 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8, !noalias !6
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %15
  %25 = tail call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* %20) #11
  br i1 %25, label %27, label %26

26:                                               ; preds = %24
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::VisiblePositionTemplate"* nonnull %7) #11
  br label %28

27:                                               ; preds = %24, %15
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %7, %"class.blink::PositionTemplate"* dereferenceable(16) %20, i32 1) #11
  br label %28

28:                                               ; preds = %26, %27
  %29 = bitcast %"class.blink::VisiblePositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %8, i64 0, i32 0, i32 1
  %32 = bitcast %"class.blink::VisiblePositionTemplate"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  call void @_ZN5blink18PreviousPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %8, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %7, i32 1) #11
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %34 = icmp eq %"class.blink::Node"* %33, null
  br i1 %34, label %88, label %35

35:                                               ; preds = %28
  %36 = call zeroext i1 @_ZN5blink18IsStartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %7, i32 1) #11
  %37 = and i1 %36, %3
  br i1 %37, label %38, label %57

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %9, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %8, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %39, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %40) #11
  %41 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %9, i64 0, i32 0, i32 1
  %42 = load i32, i32* %31, align 8
  store i32 %42, i32* %41, align 8
  call void @_ZNK5blink23ReplaceSelectionCommand30PositionAtEndOfInsertedContentEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %10, %"class.blink::ReplaceSelectionCommand"* %0)
  %43 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 16, i1 false) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %39) #11
  %44 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #11
  %45 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %10, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %45) #11
  %46 = call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink27IsMailHTMLBlockquoteElementEPKNS_4NodeE, i32 0) #11
  %47 = icmp eq %"class.blink::Node"* %46, null
  br i1 %47, label %54, label %48

48:                                               ; preds = %38
  %49 = call i32 @_ZN5blink27NumEnclosingMailBlockquotesERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5) #11
  %50 = call i32 @_ZN5blink27NumEnclosingMailBlockquotesERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #11
  %51 = icmp eq i32 %49, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #11
  %52 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %10, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %52) #11
  %53 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %9, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %53) #11
  br i1 %51, label %88, label %57

54:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #11
  %55 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %10, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %55) #11
  %56 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %9, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %56) #11
  br label %57

57:                                               ; preds = %35, %54, %48
  %58 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #11
  %59 = or i1 %1, %2
  br i1 %59, label %86, label %60

60:                                               ; preds = %57
  %61 = call zeroext i1 @_ZN5blink18IsStartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %7, i32 1) #11
  br i1 %61, label %62, label %86

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %7, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %11, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %63) #11
  %64 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %65, i64 0, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, 48
  %69 = icmp ne i32 %68, 0
  %70 = icmp eq %"class.blink::Node"* %65, null
  %71 = or i1 %70, %69
  br i1 %71, label %84, label %72

72:                                               ; preds = %62
  %73 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %74 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %65, i64 1, i32 2
  %77 = bitcast %"class.blink::Member"* %76 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %78 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 3, i32 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %75, i64 0, i32 3, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %80, %82
  br i1 %83, label %86, label %84

84:                                               ; preds = %62, %72
  %85 = call zeroext i1 @_ZN5blink23ReplaceSelectionCommand11ShouldMergeERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_(%"class.blink::ReplaceSelectionCommand"* undef, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %7, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %8)
  br label %86

86:                                               ; preds = %57, %84, %72, %60
  %87 = phi i1 [ false, %72 ], [ false, %60 ], [ false, %57 ], [ %85, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #11
  br label %88

88:                                               ; preds = %48, %28, %86
  %89 = phi i1 [ %87, %86 ], [ false, %28 ], [ true, %48 ]
  %90 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %8, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %90) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  %91 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %7, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %91) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  br label %92

92:                                               ; preds = %4, %88
  %93 = phi i1 [ %89, %88 ], [ false, %4 ]
  ret i1 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23ReplaceSelectionCommand32PositionAtStartOfInsertedContentEv(%"class.blink::VisiblePositionTemplate"* noalias sret, %"class.blink::ReplaceSelectionCommand"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::Document"*, %"class.blink::Document"** %3, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %4, i32 7) #11
  %5 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = tail call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* %5) #11
  br i1 %10, label %12, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::VisiblePositionTemplate"* %0) #11
  br label %13

12:                                               ; preds = %9, %2
  tail call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* sret %0, %"class.blink::PositionTemplate"* dereferenceable(16) %5, i32 1) #11
  br label %13

13:                                               ; preds = %12, %11
  ret void
}

declare void @_ZN5blink18PreviousPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::VisiblePositionTemplate"* dereferenceable(24), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink18IsStartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* dereferenceable(24), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23ReplaceSelectionCommand30PositionAtEndOfInsertedContentEv(%"class.blink::VisiblePositionTemplate"* noalias sret, %"class.blink::ReplaceSelectionCommand"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %5, i32 7) #11
  %6 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %1, i64 0, i32 2
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE to %"class.blink::QualifiedName"**), align 8
  %8 = tail call %"class.blink::Element"* @_ZN5blink23EnclosingElementWithTagERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_13QualifiedNameE(%"class.blink::PositionTemplate"* dereferenceable(16) %6, %"class.blink::QualifiedName"* dereferenceable(8) %7) #11
  %9 = icmp eq %"class.blink::Element"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %8, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::Node"* dereferenceable(64) %12) #11
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* sret %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  br label %21

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = tail call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* %6) #11
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  tail call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::VisiblePositionTemplate"* %0) #11
  br label %21

20:                                               ; preds = %17, %13
  tail call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* sret %0, %"class.blink::PositionTemplate"* dereferenceable(16) %6, i32 1) #11
  br label %21

21:                                               ; preds = %20, %19, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23ReplaceSelectionCommand11ShouldMergeERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_(%"class.blink::ReplaceSelectionCommand"* nocapture readnone, %"class.blink::VisiblePositionTemplate"* dereferenceable(24), %"class.blink::VisiblePositionTemplate"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %159, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %159, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %1, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::PositionTemplate"* dereferenceable(16) %17) #11
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #11
  %20 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %2, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::PositionTemplate"* dereferenceable(16) %21) #11
  %22 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #11
  %24 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %19, i32 1) #11
  %25 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %23, i32 1) #11
  %26 = icmp eq %"class.blink::Element"* %24, null
  %27 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #11
  %28 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  br i1 %26, label %157, label %29

29:                                               ; preds = %15
  %30 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %24, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %24, i64 0, i32 0, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 48
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %49

35:                                               ; preds = %29
  %36 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kBlockquoteTagE, align 8
  %37 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 1, i32 2
  %40 = bitcast %"class.blink::Member"* %39 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %43, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %35
  %48 = call zeroext i1 @_ZN5blink27IsMailHTMLBlockquoteElementEPKNS_4NodeE(%"class.blink::Node"* %30) #11
  br i1 %48, label %49, label %157

49:                                               ; preds = %29, %47, %35
  %50 = call %"class.blink::Node"* @_ZN5blink18EnclosingListChildEPKNS_4NodeE(%"class.blink::Node"* %30) #11
  %51 = call %"class.blink::Node"* @_ZN5blink18EnclosingListChildEPKNS_4NodeE(%"class.blink::Node"* %23) #11
  %52 = icmp eq %"class.blink::Node"* %50, %51
  br i1 %52, label %53, label %157

53:                                               ; preds = %49
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %6, %"class.blink::PositionTemplate"* dereferenceable(16) %17) #11
  %54 = call %"class.blink::Element"* @_ZN5blink18EnclosingTableCellERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::PositionTemplate"* dereferenceable(16) %21) #11
  %55 = call %"class.blink::Element"* @_ZN5blink18EnclosingTableCellERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7) #11
  %56 = icmp eq %"class.blink::Element"* %54, %55
  br i1 %56, label %57, label %157

57:                                               ; preds = %53
  %58 = load i32, i32* %31, align 8
  %59 = and i32 %58, 48
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %152

61:                                               ; preds = %57
  %62 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH1TagE, align 8
  %63 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %30, i64 1, i32 2
  %66 = bitcast %"class.blink::Member"* %65 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %67 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %69, %71
  br i1 %72, label %108, label %73

73:                                               ; preds = %61
  %74 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH2TagE, align 8
  %75 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %76, i64 0, i32 3, i32 0, i32 0, i32 0
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %69, %78
  br i1 %79, label %108, label %80

80:                                               ; preds = %73
  %81 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH3TagE, align 8
  %82 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %81, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 3, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %69, %85
  br i1 %86, label %108, label %87

87:                                               ; preds = %80
  %88 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH4TagE, align 8
  %89 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %90, i64 0, i32 3, i32 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %69, %92
  br i1 %93, label %108, label %94

94:                                               ; preds = %87
  %95 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH5TagE, align 8
  %96 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %97, i64 0, i32 3, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %69, %99
  br i1 %100, label %108, label %101

101:                                              ; preds = %94
  %102 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH6TagE, align 8
  %103 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %104, i64 0, i32 3, i32 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %69, %106
  br i1 %107, label %108, label %152

108:                                              ; preds = %61, %73, %80, %87, %94, %101
  %109 = icmp eq %"class.blink::Element"* %25, null
  br i1 %109, label %157, label %110

110:                                              ; preds = %108
  %111 = bitcast %"class.blink::Element"* %24 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %112 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %111, align 8
  %113 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %112, i64 27
  %114 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %113, align 8
  %115 = call %"class.WTF::StringImpl"* %114(%"class.blink::Element"* nonnull %24) #11
  %116 = bitcast %"class.blink::Element"* %25 to %"class.WTF::StringImpl"* (%"class.blink::Element"*)***
  %117 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)**, %"class.WTF::StringImpl"* (%"class.blink::Element"*)*** %116, align 8
  %118 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %117, i64 27
  %119 = load %"class.WTF::StringImpl"* (%"class.blink::Element"*)*, %"class.WTF::StringImpl"* (%"class.blink::Element"*)** %118, align 8
  %120 = call %"class.WTF::StringImpl"* %119(%"class.blink::Element"* nonnull %25) #11
  %121 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %115, %"class.WTF::StringImpl"* %120) #11
  %122 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %110
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #11
  br label %136

136:                                              ; preds = %135, %132, %110
  %137 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %137, label %151, label %138

138:                                              ; preds = %136
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load atomic i32, i32* %139 monotonic, align 4
  %141 = and i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  br i1 %142, label %145, label %147

145:                                              ; preds = %138
  %146 = add i32 %144, -1
  store i32 %146, i32* %143, align 4
  br label %147

147:                                              ; preds = %145, %138
  %148 = phi i32 [ %146, %145 ], [ %144, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #11
  br i1 %121, label %152, label %157

151:                                              ; preds = %136, %147
  br i1 %121, label %152, label %157

152:                                              ; preds = %57, %150, %151, %101
  %153 = call zeroext i1 @_ZN5blink16IsEnclosingBlockEPKNS_4NodeE(%"class.blink::Node"* %19) #11
  br i1 %153, label %157, label %154

154:                                              ; preds = %152
  %155 = call zeroext i1 @_ZN5blink16IsEnclosingBlockEPKNS_4NodeE(%"class.blink::Node"* %23) #11
  %156 = xor i1 %155, true
  br label %157

157:                                              ; preds = %108, %150, %15, %154, %152, %151, %53, %49, %47
  %158 = phi i1 [ false, %152 ], [ false, %151 ], [ false, %53 ], [ false, %49 ], [ false, %47 ], [ false, %15 ], [ %156, %154 ], [ false, %150 ], [ false, %108 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #11
  br label %159

159:                                              ; preds = %3, %11, %157
  %160 = phi i1 [ %158, %157 ], [ false, %11 ], [ false, %3 ]
  ret i1 %160
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23ReplaceSelectionCommand14ShouldMergeEndEb(%"class.blink::ReplaceSelectionCommand"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %4 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = bitcast %"class.blink::VisiblePositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = bitcast %"class.blink::VisiblePositionTemplate"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink23ReplaceSelectionCommand30PositionAtEndOfInsertedContentEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %3, %"class.blink::ReplaceSelectionCommand"* %0)
  %8 = bitcast %"class.blink::VisiblePositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::VisiblePositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @_ZN5blink14NextPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %4, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %3, i32 1) #11
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  br i1 %1, label %41, label %15

15:                                               ; preds = %13
  %16 = call zeroext i1 @_ZN5blink16IsEndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %3, i32 1) #11
  br i1 %16, label %17, label %41

17:                                               ; preds = %15
  %18 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %3, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18) #11
  %19 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 48
  %24 = icmp ne i32 %23, 0
  %25 = icmp eq %"class.blink::Node"* %20, null
  %26 = or i1 %25, %24
  br i1 %26, label %39, label %27

27:                                               ; preds = %17
  %28 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 1, i32 2
  %32 = bitcast %"class.blink::Member"* %31 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  br i1 %38, label %41, label %39

39:                                               ; preds = %17, %27
  %40 = call zeroext i1 @_ZN5blink23ReplaceSelectionCommand11ShouldMergeERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_(%"class.blink::ReplaceSelectionCommand"* undef, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %3, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %4)
  br label %41

41:                                               ; preds = %39, %27, %15, %13
  %42 = phi i1 [ false, %27 ], [ false, %15 ], [ false, %13 ], [ %40, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  br label %43

43:                                               ; preds = %2, %41
  %44 = phi i1 [ %42, %41 ], [ false, %2 ]
  %45 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %4, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  %46 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %3, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret i1 %44
}

declare void @_ZN5blink14NextPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::VisiblePositionTemplate"* dereferenceable(24), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16IsEndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* dereferenceable(24), i32) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink27IsMailHTMLBlockquoteElementEPKNS_4NodeE(%"class.blink::Node"*) #2

declare %"class.blink::Node"* @_ZN5blink18EnclosingListChildEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Element"* @_ZN5blink18EnclosingTableCellERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN5blinkL19IsHTMLHeaderElementEPKNS_4NodeE(%"class.blink::Node"* readonly) #4 {
  %2 = icmp eq %"class.blink::Node"* %0, null
  br i1 %2, label %55, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 48
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %55

8:                                                ; preds = %3
  %9 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH1TagE, align 8
  %10 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %9, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 1, i32 2
  %13 = bitcast %"class.blink::Member"* %12 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %14 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %11, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %16, %18
  br i1 %19, label %55, label %20

20:                                               ; preds = %8
  %21 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH2TagE, align 8
  %22 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %16, %25
  br i1 %26, label %55, label %27

27:                                               ; preds = %20
  %28 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH3TagE, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %16, %32
  br i1 %33, label %55, label %34

34:                                               ; preds = %27
  %35 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH4TagE, align 8
  %36 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %35, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %16, %39
  br i1 %40, label %55, label %41

41:                                               ; preds = %34
  %42 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH5TagE, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %16, %46
  br i1 %47, label %55, label %48

48:                                               ; preds = %41
  %49 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH6TagE, align 8
  %50 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %16, %53
  br label %55

55:                                               ; preds = %3, %1, %8, %20, %27, %34, %41, %48
  %56 = phi i1 [ true, %41 ], [ true, %34 ], [ true, %27 ], [ true, %20 ], [ true, %8 ], [ %54, %48 ], [ false, %3 ], [ false, %1 ]
  ret i1 %56
}

declare zeroext i1 @_ZN5blink16IsEnclosingBlockEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ReplaceSelectionCommand43RemoveRedundantStylesAndKeepStyleSpanInlineERNS0_13InsertedNodesEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"*, %"class.blink::ReplaceSelectionCommand::InsertedNodes"* nocapture dereferenceable(24), %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.1468", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %13 = alloca %"class.blink::PositionTemplate", align 8
  %14 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %15 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand::InsertedNodes", %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %1, i64 0, i32 1
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %3
  %19 = tail call dereferenceable(64) %"class.blink::Node"* @_ZN5blink13NodeTraversal16LastWithinOrSelfERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %16) #11
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 1
  %26 = bitcast %"class.blink::Node"* %25 to %"class.blink::Node"**
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %29, label %35

29:                                               ; preds = %24, %18
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 5, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  %34 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %19) #11
  br label %35

35:                                               ; preds = %3, %24, %29, %33
  %36 = phi %"class.blink::Node"* [ null, %3 ], [ %34, %33 ], [ %31, %29 ], [ %27, %24 ]
  %37 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand::InsertedNodes", %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %1, i64 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  %40 = icmp eq %"class.blink::Node"* %38, %36
  %41 = or i1 %39, %40
  br i1 %41, label %506, label %42

42:                                               ; preds = %35
  %43 = bitcast %"class.WTF::Vector.1468"* %4 to i8*
  %44 = getelementptr inbounds %"class.WTF::Vector.1468", %"class.WTF::Vector.1468"* %4, i64 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.WTF::Vector.1468", %"class.WTF::Vector.1468"* %4, i64 0, i32 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %47 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand::InsertedNodes", %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %1, i64 0, i32 2
  %48 = bitcast %"class.WTF::Vector.1468"* %4 to i8**
  %49 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  %50 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %51 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %52 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  %53 = bitcast %"class.WTF::AtomicString"* %6 to i64*
  %54 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %55 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  %56 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  %57 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  %58 = bitcast %"class.blink::PositionTemplate"* %13 to i8*
  %59 = bitcast %"class.blink::VisiblePositionTemplate"* %8 to i8*
  %60 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %8, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::VisiblePositionTemplate"* %10 to i8*
  %62 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %10, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 2
  %66 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 2
  %67 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 1
  %68 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 1
  %69 = bitcast %"class.blink::VisiblePositionTemplate"* %12 to i8*
  %70 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %12, i64 0, i32 0, i32 0
  %71 = bitcast %"class.blink::VisiblePositionTemplate"* %14 to i8*
  %72 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %14, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %13, i64 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 2
  %76 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %13, i64 0, i32 2
  %77 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 1
  %78 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %13, i64 0, i32 1
  %79 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %14, i64 0, i32 0
  %80 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %12, i64 0, i32 0
  %81 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %10, i64 0, i32 0
  %82 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %8, i64 0, i32 0
  %83 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %2, i64 0, i32 0
  %84 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names20kContenteditableAttrE, align 8
  br label %85

85:                                               ; preds = %42, %502
  %86 = phi %"class.blink::Node"* [ %38, %42 ], [ %103, %502 ]
  %87 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %86, i64 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %96, label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %86, i64 1
  %93 = bitcast %"class.blink::Node"* %92 to %"class.blink::Node"**
  %94 = load %"class.blink::Node"*, %"class.blink::Node"** %93, align 8
  %95 = icmp eq %"class.blink::Node"* %94, null
  br i1 %95, label %96, label %102

96:                                               ; preds = %91, %85
  %97 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %86, i64 0, i32 5, i32 0, i32 0
  %98 = load %"class.blink::Node"*, %"class.blink::Node"** %97, align 8
  %99 = icmp eq %"class.blink::Node"* %98, null
  br i1 %99, label %100, label %102

100:                                              ; preds = %96
  %101 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %86) #11
  br label %102

102:                                              ; preds = %91, %96, %100
  %103 = phi %"class.blink::Node"* [ %101, %100 ], [ %98, %96 ], [ %94, %91 ]
  %104 = call zeroext i1 @_ZNK5blink4Node15IsStyledElementEv(%"class.blink::Node"* nonnull %86) #11
  br i1 %104, label %105, label %502

105:                                              ; preds = %102
  %106 = bitcast %"class.blink::Node"* %86 to %"class.blink::Element"*
  %107 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %86, i64 1, i32 3
  %108 = bitcast %"class.blink::Member.0"* %107 to %"class.blink::ElementData"**
  %109 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %108, align 8
  %110 = icmp eq %"class.blink::ElementData"* %109, null
  br i1 %110, label %114, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %109, i64 0, i32 1, i32 0, i32 0
  %113 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %112, align 8
  br label %114

114:                                              ; preds = %105, %111
  %115 = phi %"class.blink::CSSPropertyValueSet"* [ %113, %111 ], [ null, %105 ]
  %116 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64 32) #11
  %117 = bitcast i8* %116 to %"class.blink::EditingStyle"*
  call void @_ZN5blink12EditingStyleC1EPKNS_19CSSPropertyValueSetE(%"class.blink::EditingStyle"* %117, %"class.blink::CSSPropertyValueSet"* %115) #11
  %118 = getelementptr inbounds i8, i8* %116, i64 -4
  %119 = bitcast i8* %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = or i16 %120, 1
  store atomic i16 %121, i16* %119 release, align 2
  %122 = icmp eq %"class.blink::CSSPropertyValueSet"* %115, null
  br i1 %122, label %208, label %123

123:                                              ; preds = %114
  %124 = load i32, i32* %87, align 8
  %125 = and i32 %124, 48
  %126 = icmp eq i32 %125, 0
  %127 = bitcast %"class.blink::Node"* %86 to %"class.blink::HTMLElement"*
  br i1 %126, label %128, label %185

128:                                              ; preds = %123
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 16, i1 false) #11
  %129 = call zeroext i1 @_ZNK5blink12EditingStyle35ConflictsWithImplicitStyleOfElementEPNS_11HTMLElementEPS0_NS0_26ShouldExtractMatchingStyleE(%"class.blink::EditingStyle"* %117, %"class.blink::HTMLElement"* nonnull %127, %"class.blink::EditingStyle"* null, i32 1) #11
  br i1 %129, label %130, label %153

130:                                              ; preds = %128
  %131 = call %"class.blink::HTMLSpanElement"* @_ZN5blink20CompositeEditCommand53ReplaceElementWithSpanPreservingChildrenAndAttributesEPNS_11HTMLElementE(%"class.blink::CompositeEditCommand"* %46, %"class.blink::HTMLElement"* nonnull %127) #11
  %132 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %131, i64 0, i32 0, i32 0
  %133 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %131, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %134 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %133, align 8
  %135 = icmp eq %"class.blink::ElementData"* %134, null
  br i1 %135, label %139, label %136

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %134, i64 0, i32 1, i32 0, i32 0
  %138 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %137, align 8
  br label %139

139:                                              ; preds = %130, %136
  %140 = phi %"class.blink::CSSPropertyValueSet"* [ %138, %136 ], [ null, %130 ]
  %141 = getelementptr inbounds %"class.blink::HTMLSpanElement", %"class.blink::HTMLSpanElement"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %142 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %143 = icmp eq %"class.blink::Node"* %142, %86
  br i1 %143, label %144, label %145

144:                                              ; preds = %139
  store %"class.blink::Node"* %141, %"class.blink::Node"** %37, align 8
  br label %145

145:                                              ; preds = %144, %139
  %146 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %147 = icmp eq %"class.blink::Node"* %146, %86
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  store %"class.blink::Node"* %141, %"class.blink::Node"** %15, align 8
  br label %149

149:                                              ; preds = %148, %145
  %150 = load %"class.blink::Node"*, %"class.blink::Node"** %47, align 8
  %151 = icmp eq %"class.blink::Node"* %150, %86
  br i1 %151, label %152, label %164

152:                                              ; preds = %149
  store %"class.blink::Node"* %141, %"class.blink::Node"** %47, align 8
  br label %164

153:                                              ; preds = %128
  %154 = call zeroext i1 @_ZNK5blink12EditingStyle43ExtractConflictingImplicitStyleOfAttributesEPNS_11HTMLElementENS0_30ShouldPreserveWritingDirectionEPS0_RN3WTF6VectorINS_13QualifiedNameELj0ENS5_18PartitionAllocatorEEENS0_26ShouldExtractMatchingStyleE(%"class.blink::EditingStyle"* %117, %"class.blink::HTMLElement"* nonnull %127, i32 0, %"class.blink::EditingStyle"* null, %"class.WTF::Vector.1468"* nonnull dereferenceable(16) %4, i32 1) #11
  %155 = load i32, i32* %45, align 4
  %156 = icmp ne i32 %155, 0
  %157 = and i1 %154, %156
  br i1 %157, label %158, label %164

158:                                              ; preds = %153, %158
  %159 = phi i32 [ %161, %158 ], [ 0, %153 ]
  %160 = call dereferenceable(8) %"class.blink::QualifiedName"* @_ZN3WTF6VectorIN5blink13QualifiedNameELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1468"* nonnull %4, i32 %159) #11
  call void @_ZN5blink20CompositeEditCommand22RemoveElementAttributeEPNS_7ElementERKNS_13QualifiedNameE(%"class.blink::CompositeEditCommand"* %46, %"class.blink::Element"* nonnull %106, %"class.blink::QualifiedName"* dereferenceable(8) %160) #11
  %161 = add nuw i32 %159, 1
  %162 = load i32, i32* %45, align 4
  %163 = icmp ult i32 %161, %162
  br i1 %163, label %158, label %164

164:                                              ; preds = %158, %152, %149, %153
  %165 = phi %"class.blink::CSSPropertyValueSet"* [ %115, %153 ], [ %140, %149 ], [ %140, %152 ], [ %115, %158 ]
  %166 = phi %"class.blink::Element"* [ %106, %153 ], [ %132, %149 ], [ %132, %152 ], [ %106, %158 ]
  %167 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %44, align 8
  %168 = icmp eq %"class.blink::QualifiedName"* %167, null
  br i1 %168, label %184, label %169, !prof !2

169:                                              ; preds = %164
  %170 = bitcast %"class.blink::QualifiedName"* %167 to i8*
  %171 = load i32, i32* %45, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %182, label %173, !prof !4

173:                                              ; preds = %169
  %174 = zext i32 %171 to i64
  %175 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %167, i64 %174
  br label %176

176:                                              ; preds = %176, %173
  %177 = phi %"class.blink::QualifiedName"* [ %178, %176 ], [ %167, %173 ]
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %177) #11
  %178 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %177, i64 1
  %179 = icmp eq %"class.blink::QualifiedName"* %178, %175
  br i1 %179, label %180, label %176

180:                                              ; preds = %176
  store i32 0, i32* %45, align 4
  %181 = load i8*, i8** %48, align 8
  br label %182

182:                                              ; preds = %180, %169
  %183 = phi i8* [ %181, %180 ], [ %170, %169 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %183) #11
  store %"class.blink::QualifiedName"* null, %"class.blink::QualifiedName"** %44, align 8
  br label %184

184:                                              ; preds = %164, %182
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #11
  br label %185

185:                                              ; preds = %123, %184
  %186 = phi %"class.blink::CSSPropertyValueSet"* [ %165, %184 ], [ %115, %123 ]
  %187 = phi %"class.blink::Element"* [ %166, %184 ], [ %106, %123 ]
  %188 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %187, i64 0, i32 0, i32 0
  %189 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %188) #11
  %190 = icmp eq %"class.blink::ContainerNode"* %189, null
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #11
  br i1 %190, label %195, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %189, i64 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::Node"* dereferenceable(64) %192) #11
  %193 = call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink27IsMailHTMLBlockquoteElementEPKNS_4NodeE, i32 0) #11
  %194 = bitcast %"class.blink::Node"* %193 to %"class.blink::HTMLQuoteElement"*
  br label %195

195:                                              ; preds = %185, %191
  %196 = phi %"class.blink::HTMLQuoteElement"* [ %194, %191 ], [ null, %185 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #11
  %197 = load %"class.blink::Document"*, %"class.blink::Document"** %50, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %197, i32 7) #11
  %198 = icmp eq %"class.blink::HTMLQuoteElement"* %196, null
  br i1 %198, label %204, label %199

199:                                              ; preds = %195
  %200 = load %"class.blink::Document"*, %"class.blink::Document"** %50, align 8
  %201 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %200, i64 0, i32 47, i32 0, i32 0
  %202 = load %"class.blink::Element"*, %"class.blink::Element"** %201, align 8
  %203 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %202, i64 0, i32 0
  call void @_ZN5blink12EditingStyle30RemoveStyleFromRulesAndContextEPNS_7ElementEPNS_13ContainerNodeE(%"class.blink::EditingStyle"* %117, %"class.blink::Element"* %187, %"class.blink::ContainerNode"* %203) #11
  br label %204

204:                                              ; preds = %199, %195
  call void @_ZN5blink12EditingStyle30RemoveStyleFromRulesAndContextEPNS_7ElementEPNS_13ContainerNodeE(%"class.blink::EditingStyle"* %117, %"class.blink::Element"* %187, %"class.blink::ContainerNode"* %189) #11
  %205 = icmp eq %"class.blink::CSSPropertyValueSet"* %186, null
  br i1 %205, label %208, label %206

206:                                              ; preds = %204
  %207 = call zeroext i1 @_ZNK5blink12EditingStyle7IsEmptyEv(%"class.blink::EditingStyle"* %117) #11
  br i1 %207, label %208, label %287

208:                                              ; preds = %114, %204, %206
  %209 = phi %"class.blink::Element"* [ %187, %204 ], [ %187, %206 ], [ %106, %114 ]
  %210 = call zeroext i1 @_ZN5blink39IsStyleSpanOrSpanWithOnlyStyleAttributeEPKNS_7ElementE(%"class.blink::Element"* %209) #11
  br i1 %210, label %213, label %211

211:                                              ; preds = %208
  %212 = call zeroext i1 @_ZN5blink14IsEmptyFontTagEPKNS_7ElementENS_27ShouldStyleAttributeBeEmptyE(%"class.blink::Element"* %209, i32 0) #11
  br i1 %212, label %213, label %286

213:                                              ; preds = %211, %208
  %214 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %209, i64 0, i32 0, i32 0
  %215 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %216 = icmp eq %"class.blink::Node"* %215, %214
  br i1 %216, label %217, label %237

217:                                              ; preds = %213
  %218 = icmp eq %"class.blink::Element"* %209, null
  br i1 %218, label %229, label %219

219:                                              ; preds = %217
  %220 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %209, i64 0, i32 0, i32 0, i32 1
  %221 = load i32, i32* %220, align 8
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %229, label %224

224:                                              ; preds = %219
  %225 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %214, i64 1
  %226 = bitcast %"class.blink::Node"* %225 to %"class.blink::Node"**
  %227 = load %"class.blink::Node"*, %"class.blink::Node"** %226, align 8
  %228 = icmp eq %"class.blink::Node"* %227, null
  br i1 %228, label %229, label %235

229:                                              ; preds = %224, %219, %217
  %230 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %209, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %231 = load %"class.blink::Node"*, %"class.blink::Node"** %230, align 8
  %232 = icmp eq %"class.blink::Node"* %231, null
  br i1 %232, label %233, label %235

233:                                              ; preds = %229
  %234 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %214) #11
  br label %235

235:                                              ; preds = %233, %229, %224
  %236 = phi %"class.blink::Node"* [ %234, %233 ], [ %231, %229 ], [ %227, %224 ]
  store %"class.blink::Node"* %236, %"class.blink::Node"** %37, align 8
  br label %237

237:                                              ; preds = %235, %213
  %238 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %239 = icmp eq %"class.blink::Node"* %238, %214
  br i1 %239, label %240, label %260

240:                                              ; preds = %237
  %241 = icmp eq %"class.blink::Element"* %209, null
  br i1 %241, label %252, label %242

242:                                              ; preds = %240
  %243 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %209, i64 0, i32 0, i32 0, i32 1
  %244 = load i32, i32* %243, align 8
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %252, label %247

247:                                              ; preds = %242
  %248 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %214, i64 1, i32 0, i32 0, i32 1
  %249 = bitcast %"class.blink::TraceWrapperV8Reference"* %248 to %"class.blink::Node"**
  %250 = load %"class.blink::Node"*, %"class.blink::Node"** %249, align 8
  %251 = icmp eq %"class.blink::Node"* %250, null
  br i1 %251, label %252, label %258

252:                                              ; preds = %247, %242, %240
  %253 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %209, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %254 = load %"class.blink::Node"*, %"class.blink::Node"** %253, align 8
  %255 = icmp eq %"class.blink::Node"* %254, null
  br i1 %255, label %256, label %258

256:                                              ; preds = %252
  %257 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %214) #11
  br label %258

258:                                              ; preds = %256, %252, %247
  %259 = phi %"class.blink::Node"* [ %257, %256 ], [ %254, %252 ], [ %250, %247 ]
  store %"class.blink::Node"* %259, %"class.blink::Node"** %15, align 8
  br label %260

260:                                              ; preds = %258, %237
  %261 = load %"class.blink::Node"*, %"class.blink::Node"** %47, align 8
  %262 = icmp eq %"class.blink::Node"* %261, %214
  br i1 %262, label %263, label %283

263:                                              ; preds = %260
  %264 = icmp eq %"class.blink::Element"* %209, null
  br i1 %264, label %275, label %265

265:                                              ; preds = %263
  %266 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %209, i64 0, i32 0, i32 0, i32 1
  %267 = load i32, i32* %266, align 8
  %268 = and i32 %267, 2
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %275, label %270

270:                                              ; preds = %265
  %271 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %214, i64 1
  %272 = bitcast %"class.blink::Node"* %271 to %"class.blink::Node"**
  %273 = load %"class.blink::Node"*, %"class.blink::Node"** %272, align 8
  %274 = icmp eq %"class.blink::Node"* %273, null
  br i1 %274, label %275, label %281

275:                                              ; preds = %270, %265, %263
  %276 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %209, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %277 = load %"class.blink::Node"*, %"class.blink::Node"** %276, align 8
  %278 = icmp eq %"class.blink::Node"* %277, null
  br i1 %278, label %279, label %281

279:                                              ; preds = %275
  %280 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %214) #11
  br label %281

281:                                              ; preds = %279, %275, %270
  %282 = phi %"class.blink::Node"* [ %280, %279 ], [ %277, %275 ], [ %273, %270 ]
  store %"class.blink::Node"* %282, %"class.blink::Node"** %47, align 8
  br label %283

283:                                              ; preds = %260, %281
  call void @_ZN5blink20CompositeEditCommand28RemoveNodePreservingChildrenEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %46, %"class.blink::Node"* %214, %"class.blink::EditingState"* %2, i32 1) #11
  %284 = load i8, i8* %83, align 1, !range !5
  %285 = icmp eq i8 %284, 0
  br i1 %285, label %502, label %506

286:                                              ; preds = %211
  call void @_ZN5blink20CompositeEditCommand22RemoveElementAttributeEPNS_7ElementERKNS_13QualifiedNameE(%"class.blink::CompositeEditCommand"* %46, %"class.blink::Element"* %209, %"class.blink::QualifiedName"* dereferenceable(8) %51) #11
  br label %363

287:                                              ; preds = %206
  %288 = bitcast i8* %116 to %"class.blink::MutableCSSPropertyValueSet"**
  %289 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %288, align 8
  %290 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %289, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %291 = load i32, i32* %290, align 4
  %292 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %186, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  %294 = icmp sgt i32 %293, -1
  br i1 %294, label %298, label %295

295:                                              ; preds = %287
  %296 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %186, i64 7, i32 0
  %297 = load i32, i32* %296, align 4
  br label %300

298:                                              ; preds = %287
  %299 = and i32 %293, 268435455
  br label %300

300:                                              ; preds = %295, %298
  %301 = phi i32 [ %299, %298 ], [ %297, %295 ]
  %302 = icmp eq i32 %291, %301
  br i1 %302, label %363, label %303

303:                                              ; preds = %300
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  %304 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %289, i64 0, i32 0
  %305 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"* %304) #11
  %306 = icmp eq %"class.WTF::StringImpl"* %305, null
  br i1 %306, label %330, label %307

307:                                              ; preds = %303
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load atomic i32, i32* %308 acquire, align 4
  %310 = and i32 %309, 4
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %328, label %312

312:                                              ; preds = %307
  %313 = load atomic i32, i32* %308 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %330

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 0
  %318 = load i32, i32* %317, align 4
  %319 = zext i32 %318 to i33
  %320 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %319, i33 1) #11
  %321 = extractvalue { i33, i1 } %320, 1
  %322 = extractvalue { i33, i1 } %320, 0
  %323 = icmp slt i33 %322, 0
  %324 = or i1 %321, %323
  br i1 %324, label %325, label %326, !prof !4

325:                                              ; preds = %316
  call void @llvm.trap() #11
  unreachable

326:                                              ; preds = %316
  %327 = trunc i33 %322 to i32
  store i32 %327, i32* %317, align 4
  br label %330

328:                                              ; preds = %307
  %329 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %305) #11
  br label %330

330:                                              ; preds = %303, %312, %326, %328
  %331 = phi %"class.WTF::StringImpl"* [ %329, %328 ], [ %305, %312 ], [ %305, %326 ], [ null, %303 ]
  %332 = ptrtoint %"class.WTF::StringImpl"* %331 to i64
  store i64 %332, i64* %53, align 8
  call void @_ZN5blink20CompositeEditCommand16SetNodeAttributeEPNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::CompositeEditCommand"* %46, %"class.blink::Element"* %187, %"class.blink::QualifiedName"* dereferenceable(8) %51, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6) #11
  %333 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %334 = icmp eq %"class.WTF::StringImpl"* %333, null
  br i1 %334, label %348, label %335

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load atomic i32, i32* %336 monotonic, align 4
  %338 = and i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 0, i32 0
  %341 = load i32, i32* %340, align 4
  br i1 %339, label %342, label %344

342:                                              ; preds = %335
  %343 = add i32 %341, -1
  store i32 %343, i32* %340, align 4
  br label %344

344:                                              ; preds = %342, %335
  %345 = phi i32 [ %343, %342 ], [ %341, %335 ]
  %346 = icmp eq i32 %345, 0
  br i1 %346, label %347, label %348

347:                                              ; preds = %344
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %333) #11
  br label %348

348:                                              ; preds = %330, %344, %347
  br i1 %306, label %362, label %349

349:                                              ; preds = %348
  %350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %351 = load atomic i32, i32* %350 monotonic, align 4
  %352 = and i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 0
  %355 = load i32, i32* %354, align 4
  br i1 %353, label %356, label %358

356:                                              ; preds = %349
  %357 = add i32 %355, -1
  store i32 %357, i32* %354, align 4
  br label %358

358:                                              ; preds = %356, %349
  %359 = phi i32 [ %357, %356 ], [ %355, %349 ]
  %360 = icmp eq i32 %359, 0
  br i1 %360, label %361, label %362

361:                                              ; preds = %358
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %305) #11
  br label %362

362:                                              ; preds = %348, %358, %361
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  br label %363

363:                                              ; preds = %300, %362, %286
  %364 = phi %"class.blink::Element"* [ %187, %300 ], [ %187, %362 ], [ %209, %286 ]
  %365 = load %"class.blink::Document"*, %"class.blink::Document"** %50, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %365, i32 7) #11
  %366 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %364, i64 0, i32 0, i32 0
  %367 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %366) #11
  %368 = icmp eq %"class.blink::ContainerNode"* %367, null
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #11
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #11
  br i1 %368, label %418, label %369

369:                                              ; preds = %363
  %370 = call zeroext i1 @_ZN5blink30IsNonTableCellHTMLBlockElementEPKNS_4NodeE(%"class.blink::Node"* %366) #11
  br i1 %370, label %371, label %418

371:                                              ; preds = %369
  %372 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %366) #11
  %373 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %372, i64 0, i32 0
  %374 = call zeroext i1 @_ZN5blink20AreIdenticalElementsERKNS_4NodeES2_(%"class.blink::Node"* dereferenceable(64) %366, %"class.blink::Node"* dereferenceable(64) %373) #11
  br i1 %374, label %375, label %418

375:                                              ; preds = %371
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #11
  %376 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %366) #11
  %377 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %376, i64 0, i32 0
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::VisiblePositionTemplate"* nonnull sret %8, %"class.blink::Node"* dereferenceable(64) %377) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %60) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #11
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::VisiblePositionTemplate"* nonnull sret %10, %"class.blink::Node"* dereferenceable(64) %366) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %9, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %62) #11
  %378 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %379 = icmp eq %"class.blink::Node"* %378, null
  %380 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  br i1 %379, label %381, label %383

381:                                              ; preds = %375
  %382 = icmp eq %"class.blink::Node"* %380, null
  br i1 %382, label %395, label %417

383:                                              ; preds = %375
  %384 = icmp eq %"class.blink::Node"* %378, %380
  br i1 %384, label %385, label %417

385:                                              ; preds = %383
  %386 = load i32, i32* %65, align 4
  %387 = load i32, i32* %66, align 4
  %388 = icmp eq i32 %386, %387
  br i1 %388, label %389, label %417

389:                                              ; preds = %385
  %390 = icmp eq i32 %386, 0
  br i1 %390, label %391, label %395

391:                                              ; preds = %389
  %392 = load i32, i32* %67, align 8
  %393 = load i32, i32* %68, align 8
  %394 = icmp eq i32 %392, %393
  br i1 %394, label %395, label %417

395:                                              ; preds = %389, %381, %391
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #11
  %396 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %366) #11
  %397 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %396, i64 0, i32 0
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::VisiblePositionTemplate"* nonnull sret %12, %"class.blink::Node"* dereferenceable(64) %397) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %11, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %70) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #11
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::VisiblePositionTemplate"* nonnull sret %14, %"class.blink::Node"* dereferenceable(64) %366) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %13, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %72) #11
  %398 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %399 = icmp eq %"class.blink::Node"* %398, null
  %400 = load %"class.blink::Node"*, %"class.blink::Node"** %74, align 8
  br i1 %399, label %401, label %403

401:                                              ; preds = %395
  %402 = icmp eq %"class.blink::Node"* %400, null
  br label %415

403:                                              ; preds = %395
  %404 = icmp eq %"class.blink::Node"* %398, %400
  br i1 %404, label %405, label %415

405:                                              ; preds = %403
  %406 = load i32, i32* %75, align 4
  %407 = load i32, i32* %76, align 4
  %408 = icmp eq i32 %406, %407
  br i1 %408, label %409, label %415

409:                                              ; preds = %405
  %410 = icmp eq i32 %406, 0
  br i1 %410, label %411, label %415

411:                                              ; preds = %409
  %412 = load i32, i32* %77, align 8
  %413 = load i32, i32* %78, align 8
  %414 = icmp eq i32 %412, %413
  br label %415

415:                                              ; preds = %401, %403, %405, %409, %411
  %416 = phi i1 [ %402, %401 ], [ %414, %411 ], [ false, %405 ], [ false, %403 ], [ true, %409 ]
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %79) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #11
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %80) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #11
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %81) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #11
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %82) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #11
  br i1 %416, label %419, label %492

417:                                              ; preds = %381, %391, %385, %383
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #11
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %81) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #11
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %82) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #11
  br label %491

418:                                              ; preds = %363, %369, %371
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #11
  br label %491

419:                                              ; preds = %415
  %420 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %421 = icmp eq %"class.blink::Node"* %420, %366
  br i1 %421, label %422, label %442

422:                                              ; preds = %419
  %423 = icmp eq %"class.blink::Element"* %364, null
  br i1 %423, label %434, label %424

424:                                              ; preds = %422
  %425 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %364, i64 0, i32 0, i32 0, i32 1
  %426 = load i32, i32* %425, align 8
  %427 = and i32 %426, 2
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %434, label %429

429:                                              ; preds = %424
  %430 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %366, i64 1
  %431 = bitcast %"class.blink::Node"* %430 to %"class.blink::Node"**
  %432 = load %"class.blink::Node"*, %"class.blink::Node"** %431, align 8
  %433 = icmp eq %"class.blink::Node"* %432, null
  br i1 %433, label %434, label %440

434:                                              ; preds = %429, %424, %422
  %435 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %364, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %436 = load %"class.blink::Node"*, %"class.blink::Node"** %435, align 8
  %437 = icmp eq %"class.blink::Node"* %436, null
  br i1 %437, label %438, label %440

438:                                              ; preds = %434
  %439 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %366) #11
  br label %440

440:                                              ; preds = %438, %434, %429
  %441 = phi %"class.blink::Node"* [ %439, %438 ], [ %436, %434 ], [ %432, %429 ]
  store %"class.blink::Node"* %441, %"class.blink::Node"** %37, align 8
  br label %442

442:                                              ; preds = %440, %419
  %443 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %444 = icmp eq %"class.blink::Node"* %443, %366
  br i1 %444, label %445, label %465

445:                                              ; preds = %442
  %446 = icmp eq %"class.blink::Element"* %364, null
  br i1 %446, label %457, label %447

447:                                              ; preds = %445
  %448 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %364, i64 0, i32 0, i32 0, i32 1
  %449 = load i32, i32* %448, align 8
  %450 = and i32 %449, 2
  %451 = icmp eq i32 %450, 0
  br i1 %451, label %457, label %452

452:                                              ; preds = %447
  %453 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %366, i64 1, i32 0, i32 0, i32 1
  %454 = bitcast %"class.blink::TraceWrapperV8Reference"* %453 to %"class.blink::Node"**
  %455 = load %"class.blink::Node"*, %"class.blink::Node"** %454, align 8
  %456 = icmp eq %"class.blink::Node"* %455, null
  br i1 %456, label %457, label %463

457:                                              ; preds = %452, %447, %445
  %458 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %364, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %459 = load %"class.blink::Node"*, %"class.blink::Node"** %458, align 8
  %460 = icmp eq %"class.blink::Node"* %459, null
  br i1 %460, label %461, label %463

461:                                              ; preds = %457
  %462 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %366) #11
  br label %463

463:                                              ; preds = %461, %457, %452
  %464 = phi %"class.blink::Node"* [ %462, %461 ], [ %459, %457 ], [ %455, %452 ]
  store %"class.blink::Node"* %464, %"class.blink::Node"** %15, align 8
  br label %465

465:                                              ; preds = %463, %442
  %466 = load %"class.blink::Node"*, %"class.blink::Node"** %47, align 8
  %467 = icmp eq %"class.blink::Node"* %466, %366
  br i1 %467, label %468, label %488

468:                                              ; preds = %465
  %469 = icmp eq %"class.blink::Element"* %364, null
  br i1 %469, label %480, label %470

470:                                              ; preds = %468
  %471 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %364, i64 0, i32 0, i32 0, i32 1
  %472 = load i32, i32* %471, align 8
  %473 = and i32 %472, 2
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %480, label %475

475:                                              ; preds = %470
  %476 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %366, i64 1
  %477 = bitcast %"class.blink::Node"* %476 to %"class.blink::Node"**
  %478 = load %"class.blink::Node"*, %"class.blink::Node"** %477, align 8
  %479 = icmp eq %"class.blink::Node"* %478, null
  br i1 %479, label %480, label %486

480:                                              ; preds = %475, %470, %468
  %481 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %364, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %482 = load %"class.blink::Node"*, %"class.blink::Node"** %481, align 8
  %483 = icmp eq %"class.blink::Node"* %482, null
  br i1 %483, label %484, label %486

484:                                              ; preds = %480
  %485 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %366) #11
  br label %486

486:                                              ; preds = %484, %480, %475
  %487 = phi %"class.blink::Node"* [ %485, %484 ], [ %482, %480 ], [ %478, %475 ]
  store %"class.blink::Node"* %487, %"class.blink::Node"** %47, align 8
  br label %488

488:                                              ; preds = %465, %486
  call void @_ZN5blink20CompositeEditCommand28RemoveNodePreservingChildrenEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %46, %"class.blink::Node"* %366, %"class.blink::EditingState"* %2, i32 1) #11
  %489 = load i8, i8* %83, align 1, !range !5
  %490 = icmp eq i8 %489, 0
  br i1 %490, label %502, label %506

491:                                              ; preds = %418, %417
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #11
  br label %492

492:                                              ; preds = %491, %415
  %493 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %366) #11
  %494 = icmp eq %"class.blink::ContainerNode"* %493, null
  br i1 %494, label %502, label %495

495:                                              ; preds = %492
  %496 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %366) #11
  %497 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %496, i64 0, i32 0
  %498 = call zeroext i1 @_ZN5blink22HasRichlyEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %497) #11
  br i1 %498, label %499, label %502

499:                                              ; preds = %495
  %500 = call zeroext i1 @_ZN5blink22HasRichlyEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %366) #11
  br i1 %500, label %501, label %502

501:                                              ; preds = %499
  call void @_ZN5blink20CompositeEditCommand22RemoveElementAttributeEPNS_7ElementERKNS_13QualifiedNameE(%"class.blink::CompositeEditCommand"* %46, %"class.blink::Element"* %364, %"class.blink::QualifiedName"* dereferenceable(8) %84) #11
  br label %502

502:                                              ; preds = %283, %488, %495, %499, %501, %492, %102
  %503 = icmp eq %"class.blink::Node"* %103, null
  %504 = icmp eq %"class.blink::Node"* %103, %36
  %505 = or i1 %503, %504
  br i1 %505, label %506, label %85

506:                                              ; preds = %502, %488, %283, %35
  ret void
}

declare zeroext i1 @_ZNK5blink4Node15IsStyledElementEv(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink12EditingStyle35ConflictsWithImplicitStyleOfElementEPNS_11HTMLElementEPS0_NS0_26ShouldExtractMatchingStyleE(%"class.blink::EditingStyle"*, %"class.blink::HTMLElement"*, %"class.blink::EditingStyle"*, i32) local_unnamed_addr #2

declare %"class.blink::HTMLSpanElement"* @_ZN5blink20CompositeEditCommand53ReplaceElementWithSpanPreservingChildrenAndAttributesEPNS_11HTMLElementE(%"class.blink::CompositeEditCommand"*, %"class.blink::HTMLElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink12EditingStyle43ExtractConflictingImplicitStyleOfAttributesEPNS_11HTMLElementENS0_30ShouldPreserveWritingDirectionEPS0_RN3WTF6VectorINS_13QualifiedNameELj0ENS5_18PartitionAllocatorEEENS0_26ShouldExtractMatchingStyleE(%"class.blink::EditingStyle"*, %"class.blink::HTMLElement"*, i32, %"class.blink::EditingStyle"*, %"class.WTF::Vector.1468"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand22RemoveElementAttributeEPNS_7ElementERKNS_13QualifiedNameE(%"class.blink::CompositeEditCommand"*, %"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* dereferenceable(16), i1 (%"class.blink::Node"*)*, i32) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink12EditingStyle30RemoveStyleFromRulesAndContextEPNS_7ElementEPNS_13ContainerNodeE(%"class.blink::EditingStyle"*, %"class.blink::Element"*, %"class.blink::ContainerNode"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink12EditingStyle7IsEmptyEv(%"class.blink::EditingStyle"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink39IsStyleSpanOrSpanWithOnlyStyleAttributeEPKNS_7ElementE(%"class.blink::Element"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14IsEmptyFontTagEPKNS_7ElementENS_27ShouldStyleAttributeBeEmptyE(%"class.blink::Element"*, i32) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand28RemoveNodePreservingChildrenEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::EditingState"*, i32) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand16SetNodeAttributeEPNS_7ElementERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::CompositeEditCommand"*, %"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink30IsNonTableCellHTMLBlockElementEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink20AreIdenticalElementsERKNS_4NodeES2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ReplaceSelectionCommand52MakeInsertedContentRoundTrippableWithHTMLTreeBuilderERKNS0_13InsertedNodesEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"*, %"class.blink::ReplaceSelectionCommand::InsertedNodes"* nocapture readonly dereferenceable(24), %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca [48 x %"class.WTF::AtomicString"], align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand::InsertedNodes", %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %1, i64 0, i32 1
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %3
  %11 = tail call dereferenceable(64) %"class.blink::Node"* @_ZN5blink13NodeTraversal16LastWithinOrSelfERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %8) #11
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 1
  %18 = bitcast %"class.blink::Node"* %17 to %"class.blink::Node"**
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %21, label %27

21:                                               ; preds = %16, %10
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %11, i64 0, i32 5, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %11) #11
  br label %27

27:                                               ; preds = %3, %16, %21, %25
  %28 = phi %"class.blink::Node"* [ null, %3 ], [ %26, %25 ], [ %23, %21 ], [ %19, %16 ]
  %29 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand::InsertedNodes", %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %1, i64 0, i32 0
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  %32 = icmp eq %"class.blink::Node"* %30, %28
  %33 = or i1 %31, %32
  br i1 %33, label %1415, label %34

34:                                               ; preds = %27
  %35 = bitcast [48 x %"class.WTF::AtomicString"]* %4 to i8*
  %36 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 0
  %37 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kAddressTagE to %"class.blink::QualifiedName"**), align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %37, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kArticleTagE to %"class.blink::QualifiedName"**), align 8
  %41 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %40, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %43 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kAsideTagE to %"class.blink::QualifiedName"**), align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %43, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 2, i32 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kBlockquoteTagE to %"class.blink::QualifiedName"**), align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %46, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 3, i32 0, i32 0, i32 0
  %49 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kCaptionTagE to %"class.blink::QualifiedName"**), align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %49, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 4, i32 0, i32 0, i32 0
  %52 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kCenterTagE to %"class.blink::QualifiedName"**), align 8
  %53 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %52, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 5, i32 0, i32 0, i32 0
  %55 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kColTagE to %"class.blink::QualifiedName"**), align 8
  %56 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %55, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 6, i32 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kColgroupTagE to %"class.blink::QualifiedName"**), align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %58, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 7, i32 0, i32 0, i32 0
  %61 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDdTagE to %"class.blink::QualifiedName"**), align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %61, i64 0, i32 0, i32 0
  %63 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 8, i32 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kDetailsTagE to %"class.blink::QualifiedName"**), align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %64, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 9, i32 0, i32 0, i32 0
  %67 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kDirTagE to %"class.blink::QualifiedName"**), align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %67, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 10, i32 0, i32 0, i32 0
  %70 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kDivTagE to %"class.blink::QualifiedName"**), align 8
  %71 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %70, i64 0, i32 0, i32 0
  %72 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 11, i32 0, i32 0, i32 0
  %73 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDlTagE to %"class.blink::QualifiedName"**), align 8
  %74 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %73, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 12, i32 0, i32 0, i32 0
  %76 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kDtTagE to %"class.blink::QualifiedName"**), align 8
  %77 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %76, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 13, i32 0, i32 0, i32 0
  %79 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE to %"class.blink::QualifiedName"**), align 8
  %80 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %79, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 14, i32 0, i32 0, i32 0
  %82 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names14kFigcaptionTagE to %"class.blink::QualifiedName"**), align 8
  %83 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %82, i64 0, i32 0, i32 0
  %84 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 15, i32 0, i32 0, i32 0
  %85 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kFigureTagE to %"class.blink::QualifiedName"**), align 8
  %86 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %85, i64 0, i32 0, i32 0
  %87 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 16, i32 0, i32 0, i32 0
  %88 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kFooterTagE to %"class.blink::QualifiedName"**), align 8
  %89 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %88, i64 0, i32 0, i32 0
  %90 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 17, i32 0, i32 0, i32 0
  %91 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFormTagE to %"class.blink::QualifiedName"**), align 8
  %92 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %91, i64 0, i32 0, i32 0
  %93 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 18, i32 0, i32 0, i32 0
  %94 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH1TagE to %"class.blink::QualifiedName"**), align 8
  %95 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %94, i64 0, i32 0, i32 0
  %96 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 19, i32 0, i32 0, i32 0
  %97 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH2TagE to %"class.blink::QualifiedName"**), align 8
  %98 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %97, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 20, i32 0, i32 0, i32 0
  %100 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH3TagE to %"class.blink::QualifiedName"**), align 8
  %101 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %100, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 21, i32 0, i32 0, i32 0
  %103 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH4TagE to %"class.blink::QualifiedName"**), align 8
  %104 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %103, i64 0, i32 0, i32 0
  %105 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 22, i32 0, i32 0, i32 0
  %106 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH5TagE to %"class.blink::QualifiedName"**), align 8
  %107 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %106, i64 0, i32 0, i32 0
  %108 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 23, i32 0, i32 0, i32 0
  %109 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH6TagE to %"class.blink::QualifiedName"**), align 8
  %110 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %109, i64 0, i32 0, i32 0
  %111 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 24, i32 0, i32 0, i32 0
  %112 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kHeaderTagE to %"class.blink::QualifiedName"**), align 8
  %113 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %112, i64 0, i32 0, i32 0
  %114 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 25, i32 0, i32 0, i32 0
  %115 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kHgroupTagE to %"class.blink::QualifiedName"**), align 8
  %116 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %115, i64 0, i32 0, i32 0
  %117 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 26, i32 0, i32 0, i32 0
  %118 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kHrTagE to %"class.blink::QualifiedName"**), align 8
  %119 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %118, i64 0, i32 0, i32 0
  %120 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 27, i32 0, i32 0, i32 0
  %121 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kLiTagE to %"class.blink::QualifiedName"**), align 8
  %122 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %121, i64 0, i32 0, i32 0
  %123 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 28, i32 0, i32 0, i32 0
  %124 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kListingTagE to %"class.blink::QualifiedName"**), align 8
  %125 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %124, i64 0, i32 0, i32 0
  %126 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 29, i32 0, i32 0, i32 0
  %127 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMainTagE to %"class.blink::QualifiedName"**), align 8
  %128 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %127, i64 0, i32 0, i32 0
  %129 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 30, i32 0, i32 0, i32 0
  %130 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMenuTagE to %"class.blink::QualifiedName"**), align 8
  %131 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %130, i64 0, i32 0, i32 0
  %132 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 31, i32 0, i32 0, i32 0
  %133 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kNavTagE to %"class.blink::QualifiedName"**), align 8
  %134 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %133, i64 0, i32 0, i32 0
  %135 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 32, i32 0, i32 0, i32 0
  %136 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE to %"class.blink::QualifiedName"**), align 8
  %137 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %136, i64 0, i32 0, i32 0
  %138 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 33, i32 0, i32 0, i32 0
  %139 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kPTagE to %"class.blink::QualifiedName"**), align 8
  %140 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %139, i64 0, i32 0, i32 0
  %141 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 34, i32 0, i32 0, i32 0
  %142 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names13kPlaintextTagE to %"class.blink::QualifiedName"**), align 8
  %143 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %142, i64 0, i32 0, i32 0
  %144 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 35, i32 0, i32 0, i32 0
  %145 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kPreTagE to %"class.blink::QualifiedName"**), align 8
  %146 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %145, i64 0, i32 0, i32 0
  %147 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 36, i32 0, i32 0, i32 0
  %148 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kSectionTagE to %"class.blink::QualifiedName"**), align 8
  %149 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %148, i64 0, i32 0, i32 0
  %150 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 37, i32 0, i32 0, i32 0
  %151 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kSummaryTagE to %"class.blink::QualifiedName"**), align 8
  %152 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %151, i64 0, i32 0, i32 0
  %153 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 38, i32 0, i32 0, i32 0
  %154 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTableTagE to %"class.blink::QualifiedName"**), align 8
  %155 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %154, i64 0, i32 0, i32 0
  %156 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 39, i32 0, i32 0, i32 0
  %157 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTbodyTagE to %"class.blink::QualifiedName"**), align 8
  %158 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %157, i64 0, i32 0, i32 0
  %159 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 40, i32 0, i32 0, i32 0
  %160 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTdTagE to %"class.blink::QualifiedName"**), align 8
  %161 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %160, i64 0, i32 0, i32 0
  %162 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 41, i32 0, i32 0, i32 0
  %163 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTfootTagE to %"class.blink::QualifiedName"**), align 8
  %164 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %163, i64 0, i32 0, i32 0
  %165 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 42, i32 0, i32 0, i32 0
  %166 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kThTagE to %"class.blink::QualifiedName"**), align 8
  %167 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %166, i64 0, i32 0, i32 0
  %168 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 43, i32 0, i32 0, i32 0
  %169 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTheadTagE to %"class.blink::QualifiedName"**), align 8
  %170 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %169, i64 0, i32 0, i32 0
  %171 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 44, i32 0, i32 0, i32 0
  %172 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kTrTagE to %"class.blink::QualifiedName"**), align 8
  %173 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %172, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 45, i32 0, i32 0, i32 0
  %175 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE to %"class.blink::QualifiedName"**), align 8
  %176 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %175, i64 0, i32 0, i32 0
  %177 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 46, i32 0, i32 0, i32 0
  %178 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kXmpTagE to %"class.blink::QualifiedName"**), align 8
  %179 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %178, i64 0, i32 0, i32 0
  %180 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 47, i32 0, i32 0, i32 0
  %181 = getelementptr inbounds [48 x %"class.WTF::AtomicString"], [48 x %"class.WTF::AtomicString"]* %4, i64 0, i64 48
  %182 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  %183 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %2, i64 0, i32 0
  %184 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %94, i64 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %97, i64 0, i32 0, i32 0
  %186 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %100, i64 0, i32 0, i32 0
  %187 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %103, i64 0, i32 0, i32 0
  %188 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %106, i64 0, i32 0, i32 0
  %189 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %109, i64 0, i32 0, i32 0
  %190 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  br label %191

191:                                              ; preds = %34, %1411
  %192 = phi %"class.blink::Node"* [ %30, %34 ], [ %211, %1411 ]
  %193 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %192, i64 0, i32 1
  %194 = load i32, i32* %193, align 8
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %202, label %197

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %192, i64 1
  %199 = bitcast %"class.blink::Node"* %198 to %"class.blink::Node"**
  %200 = load %"class.blink::Node"*, %"class.blink::Node"** %199, align 8
  %201 = icmp eq %"class.blink::Node"* %200, null
  br i1 %201, label %202, label %209

202:                                              ; preds = %197, %191
  %203 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %192, i64 0, i32 5, i32 0, i32 0
  %204 = load %"class.blink::Node"*, %"class.blink::Node"** %203, align 8
  %205 = icmp eq %"class.blink::Node"* %204, null
  br i1 %205, label %206, label %209

206:                                              ; preds = %202
  %207 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %192) #11
  %208 = load i32, i32* %193, align 8
  br label %209

209:                                              ; preds = %197, %202, %206
  %210 = phi i32 [ %208, %206 ], [ %194, %202 ], [ %194, %197 ]
  %211 = phi %"class.blink::Node"* [ %207, %206 ], [ %204, %202 ], [ %200, %197 ]
  %212 = and i32 %210, 304
  %213 = icmp eq i32 %212, 256
  br i1 %213, label %214, label %1411

214:                                              ; preds = %209
  %215 = bitcast %"class.blink::Node"* %192 to %"class.blink::Element"*
  %216 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %192, i64 1, i32 2
  %217 = bitcast %"class.blink::Member"* %216 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %218 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %217, align 8
  %219 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL26IsProhibitedParagraphChildERKN3WTF12AtomicStringEE10s_elements to i8*) acquire, align 8
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %221, label %1308, !prof !3

221:                                              ; preds = %214
  %222 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL26IsProhibitedParagraphChildERKN3WTF12AtomicStringEE10s_elements) #11
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %1308, label %224

224:                                              ; preds = %221
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %35) #11
  %225 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %226 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %225, i64 0, i32 3, i32 0, i32 0, i32 0
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %226, align 8
  store %"class.WTF::StringImpl"* %227, %"class.WTF::StringImpl"** %39, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %246, label %229

229:                                              ; preds = %224
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %246

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = zext i32 %236 to i33
  %238 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %237, i33 1) #11
  %239 = extractvalue { i33, i1 } %238, 1
  %240 = extractvalue { i33, i1 } %238, 0
  %241 = icmp slt i33 %240, 0
  %242 = or i1 %239, %241
  br i1 %242, label %243, label %244, !prof !4

243:                                              ; preds = %234
  call void @llvm.trap() #11
  unreachable

244:                                              ; preds = %234
  %245 = trunc i33 %240 to i32
  store i32 %245, i32* %235, align 4
  br label %246

246:                                              ; preds = %244, %229, %224
  %247 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %248 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %247, i64 0, i32 3, i32 0, i32 0, i32 0
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %248, align 8
  store %"class.WTF::StringImpl"* %249, %"class.WTF::StringImpl"** %42, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %268, label %251

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %268

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = zext i32 %258 to i33
  %260 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %259, i33 1) #11
  %261 = extractvalue { i33, i1 } %260, 1
  %262 = extractvalue { i33, i1 } %260, 0
  %263 = icmp slt i33 %262, 0
  %264 = or i1 %261, %263
  br i1 %264, label %265, label %266, !prof !4

265:                                              ; preds = %256
  call void @llvm.trap() #11
  unreachable

266:                                              ; preds = %256
  %267 = trunc i33 %262 to i32
  store i32 %267, i32* %257, align 4
  br label %268

268:                                              ; preds = %266, %251, %246
  %269 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %44, align 8
  %270 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %269, i64 0, i32 3, i32 0, i32 0, i32 0
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %270, align 8
  store %"class.WTF::StringImpl"* %271, %"class.WTF::StringImpl"** %45, align 8
  %272 = icmp eq %"class.WTF::StringImpl"* %271, null
  br i1 %272, label %290, label %273

273:                                              ; preds = %268
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %290

278:                                              ; preds = %273
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 0
  %280 = load i32, i32* %279, align 4
  %281 = zext i32 %280 to i33
  %282 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %281, i33 1) #11
  %283 = extractvalue { i33, i1 } %282, 1
  %284 = extractvalue { i33, i1 } %282, 0
  %285 = icmp slt i33 %284, 0
  %286 = or i1 %283, %285
  br i1 %286, label %287, label %288, !prof !4

287:                                              ; preds = %278
  call void @llvm.trap() #11
  unreachable

288:                                              ; preds = %278
  %289 = trunc i33 %284 to i32
  store i32 %289, i32* %279, align 4
  br label %290

290:                                              ; preds = %288, %273, %268
  %291 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %292 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %291, i64 0, i32 3, i32 0, i32 0, i32 0
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  store %"class.WTF::StringImpl"* %293, %"class.WTF::StringImpl"** %48, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %312, label %295

295:                                              ; preds = %290
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %312

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 0
  %302 = load i32, i32* %301, align 4
  %303 = zext i32 %302 to i33
  %304 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %303, i33 1) #11
  %305 = extractvalue { i33, i1 } %304, 1
  %306 = extractvalue { i33, i1 } %304, 0
  %307 = icmp slt i33 %306, 0
  %308 = or i1 %305, %307
  br i1 %308, label %309, label %310, !prof !4

309:                                              ; preds = %300
  call void @llvm.trap() #11
  unreachable

310:                                              ; preds = %300
  %311 = trunc i33 %306 to i32
  store i32 %311, i32* %301, align 4
  br label %312

312:                                              ; preds = %310, %295, %290
  %313 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %314 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %313, i64 0, i32 3, i32 0, i32 0, i32 0
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %314, align 8
  store %"class.WTF::StringImpl"* %315, %"class.WTF::StringImpl"** %51, align 8
  %316 = icmp eq %"class.WTF::StringImpl"* %315, null
  br i1 %316, label %334, label %317

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load atomic i32, i32* %318 monotonic, align 4
  %320 = and i32 %319, 2
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %322, label %334

322:                                              ; preds = %317
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 0
  %324 = load i32, i32* %323, align 4
  %325 = zext i32 %324 to i33
  %326 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %325, i33 1) #11
  %327 = extractvalue { i33, i1 } %326, 1
  %328 = extractvalue { i33, i1 } %326, 0
  %329 = icmp slt i33 %328, 0
  %330 = or i1 %327, %329
  br i1 %330, label %331, label %332, !prof !4

331:                                              ; preds = %322
  call void @llvm.trap() #11
  unreachable

332:                                              ; preds = %322
  %333 = trunc i33 %328 to i32
  store i32 %333, i32* %323, align 4
  br label %334

334:                                              ; preds = %332, %317, %312
  %335 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %336 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %335, i64 0, i32 3, i32 0, i32 0, i32 0
  %337 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %336, align 8
  store %"class.WTF::StringImpl"* %337, %"class.WTF::StringImpl"** %54, align 8
  %338 = icmp eq %"class.WTF::StringImpl"* %337, null
  br i1 %338, label %356, label %339

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = and i32 %341, 2
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %356

344:                                              ; preds = %339
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %337, i64 0, i32 0
  %346 = load i32, i32* %345, align 4
  %347 = zext i32 %346 to i33
  %348 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %347, i33 1) #11
  %349 = extractvalue { i33, i1 } %348, 1
  %350 = extractvalue { i33, i1 } %348, 0
  %351 = icmp slt i33 %350, 0
  %352 = or i1 %349, %351
  br i1 %352, label %353, label %354, !prof !4

353:                                              ; preds = %344
  call void @llvm.trap() #11
  unreachable

354:                                              ; preds = %344
  %355 = trunc i33 %350 to i32
  store i32 %355, i32* %345, align 4
  br label %356

356:                                              ; preds = %354, %339, %334
  %357 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %358 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %357, i64 0, i32 3, i32 0, i32 0, i32 0
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %358, align 8
  store %"class.WTF::StringImpl"* %359, %"class.WTF::StringImpl"** %57, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %359, null
  br i1 %360, label %378, label %361

361:                                              ; preds = %356
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %378

366:                                              ; preds = %361
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 0
  %368 = load i32, i32* %367, align 4
  %369 = zext i32 %368 to i33
  %370 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %369, i33 1) #11
  %371 = extractvalue { i33, i1 } %370, 1
  %372 = extractvalue { i33, i1 } %370, 0
  %373 = icmp slt i33 %372, 0
  %374 = or i1 %371, %373
  br i1 %374, label %375, label %376, !prof !4

375:                                              ; preds = %366
  call void @llvm.trap() #11
  unreachable

376:                                              ; preds = %366
  %377 = trunc i33 %372 to i32
  store i32 %377, i32* %367, align 4
  br label %378

378:                                              ; preds = %376, %361, %356
  %379 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %59, align 8
  %380 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %379, i64 0, i32 3, i32 0, i32 0, i32 0
  %381 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %380, align 8
  store %"class.WTF::StringImpl"* %381, %"class.WTF::StringImpl"** %60, align 8
  %382 = icmp eq %"class.WTF::StringImpl"* %381, null
  br i1 %382, label %400, label %383

383:                                              ; preds = %378
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load atomic i32, i32* %384 monotonic, align 4
  %386 = and i32 %385, 2
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %400

388:                                              ; preds = %383
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 0
  %390 = load i32, i32* %389, align 4
  %391 = zext i32 %390 to i33
  %392 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %391, i33 1) #11
  %393 = extractvalue { i33, i1 } %392, 1
  %394 = extractvalue { i33, i1 } %392, 0
  %395 = icmp slt i33 %394, 0
  %396 = or i1 %393, %395
  br i1 %396, label %397, label %398, !prof !4

397:                                              ; preds = %388
  call void @llvm.trap() #11
  unreachable

398:                                              ; preds = %388
  %399 = trunc i33 %394 to i32
  store i32 %399, i32* %389, align 4
  br label %400

400:                                              ; preds = %398, %383, %378
  %401 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %62, align 8
  %402 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %401, i64 0, i32 3, i32 0, i32 0, i32 0
  %403 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %402, align 8
  store %"class.WTF::StringImpl"* %403, %"class.WTF::StringImpl"** %63, align 8
  %404 = icmp eq %"class.WTF::StringImpl"* %403, null
  br i1 %404, label %422, label %405

405:                                              ; preds = %400
  %406 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %403, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %407 = load atomic i32, i32* %406 monotonic, align 4
  %408 = and i32 %407, 2
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %422

410:                                              ; preds = %405
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %403, i64 0, i32 0
  %412 = load i32, i32* %411, align 4
  %413 = zext i32 %412 to i33
  %414 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %413, i33 1) #11
  %415 = extractvalue { i33, i1 } %414, 1
  %416 = extractvalue { i33, i1 } %414, 0
  %417 = icmp slt i33 %416, 0
  %418 = or i1 %415, %417
  br i1 %418, label %419, label %420, !prof !4

419:                                              ; preds = %410
  call void @llvm.trap() #11
  unreachable

420:                                              ; preds = %410
  %421 = trunc i33 %416 to i32
  store i32 %421, i32* %411, align 4
  br label %422

422:                                              ; preds = %420, %405, %400
  %423 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %65, align 8
  %424 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %423, i64 0, i32 3, i32 0, i32 0, i32 0
  %425 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %424, align 8
  store %"class.WTF::StringImpl"* %425, %"class.WTF::StringImpl"** %66, align 8
  %426 = icmp eq %"class.WTF::StringImpl"* %425, null
  br i1 %426, label %444, label %427

427:                                              ; preds = %422
  %428 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %425, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %429 = load atomic i32, i32* %428 monotonic, align 4
  %430 = and i32 %429, 2
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %444

432:                                              ; preds = %427
  %433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %425, i64 0, i32 0
  %434 = load i32, i32* %433, align 4
  %435 = zext i32 %434 to i33
  %436 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %435, i33 1) #11
  %437 = extractvalue { i33, i1 } %436, 1
  %438 = extractvalue { i33, i1 } %436, 0
  %439 = icmp slt i33 %438, 0
  %440 = or i1 %437, %439
  br i1 %440, label %441, label %442, !prof !4

441:                                              ; preds = %432
  call void @llvm.trap() #11
  unreachable

442:                                              ; preds = %432
  %443 = trunc i33 %438 to i32
  store i32 %443, i32* %433, align 4
  br label %444

444:                                              ; preds = %442, %427, %422
  %445 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %446 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %445, i64 0, i32 3, i32 0, i32 0, i32 0
  %447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %446, align 8
  store %"class.WTF::StringImpl"* %447, %"class.WTF::StringImpl"** %69, align 8
  %448 = icmp eq %"class.WTF::StringImpl"* %447, null
  br i1 %448, label %466, label %449

449:                                              ; preds = %444
  %450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %447, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %451 = load atomic i32, i32* %450 monotonic, align 4
  %452 = and i32 %451, 2
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %454, label %466

454:                                              ; preds = %449
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %447, i64 0, i32 0
  %456 = load i32, i32* %455, align 4
  %457 = zext i32 %456 to i33
  %458 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %457, i33 1) #11
  %459 = extractvalue { i33, i1 } %458, 1
  %460 = extractvalue { i33, i1 } %458, 0
  %461 = icmp slt i33 %460, 0
  %462 = or i1 %459, %461
  br i1 %462, label %463, label %464, !prof !4

463:                                              ; preds = %454
  call void @llvm.trap() #11
  unreachable

464:                                              ; preds = %454
  %465 = trunc i33 %460 to i32
  store i32 %465, i32* %455, align 4
  br label %466

466:                                              ; preds = %464, %449, %444
  %467 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %71, align 8
  %468 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %467, i64 0, i32 3, i32 0, i32 0, i32 0
  %469 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %468, align 8
  store %"class.WTF::StringImpl"* %469, %"class.WTF::StringImpl"** %72, align 8
  %470 = icmp eq %"class.WTF::StringImpl"* %469, null
  br i1 %470, label %488, label %471

471:                                              ; preds = %466
  %472 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %469, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %473 = load atomic i32, i32* %472 monotonic, align 4
  %474 = and i32 %473, 2
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %476, label %488

476:                                              ; preds = %471
  %477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %469, i64 0, i32 0
  %478 = load i32, i32* %477, align 4
  %479 = zext i32 %478 to i33
  %480 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %479, i33 1) #11
  %481 = extractvalue { i33, i1 } %480, 1
  %482 = extractvalue { i33, i1 } %480, 0
  %483 = icmp slt i33 %482, 0
  %484 = or i1 %481, %483
  br i1 %484, label %485, label %486, !prof !4

485:                                              ; preds = %476
  call void @llvm.trap() #11
  unreachable

486:                                              ; preds = %476
  %487 = trunc i33 %482 to i32
  store i32 %487, i32* %477, align 4
  br label %488

488:                                              ; preds = %486, %471, %466
  %489 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %74, align 8
  %490 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %489, i64 0, i32 3, i32 0, i32 0, i32 0
  %491 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %490, align 8
  store %"class.WTF::StringImpl"* %491, %"class.WTF::StringImpl"** %75, align 8
  %492 = icmp eq %"class.WTF::StringImpl"* %491, null
  br i1 %492, label %510, label %493

493:                                              ; preds = %488
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %491, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %495 = load atomic i32, i32* %494 monotonic, align 4
  %496 = and i32 %495, 2
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %510

498:                                              ; preds = %493
  %499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %491, i64 0, i32 0
  %500 = load i32, i32* %499, align 4
  %501 = zext i32 %500 to i33
  %502 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %501, i33 1) #11
  %503 = extractvalue { i33, i1 } %502, 1
  %504 = extractvalue { i33, i1 } %502, 0
  %505 = icmp slt i33 %504, 0
  %506 = or i1 %503, %505
  br i1 %506, label %507, label %508, !prof !4

507:                                              ; preds = %498
  call void @llvm.trap() #11
  unreachable

508:                                              ; preds = %498
  %509 = trunc i33 %504 to i32
  store i32 %509, i32* %499, align 4
  br label %510

510:                                              ; preds = %508, %493, %488
  %511 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %512 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %511, i64 0, i32 3, i32 0, i32 0, i32 0
  %513 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %512, align 8
  store %"class.WTF::StringImpl"* %513, %"class.WTF::StringImpl"** %78, align 8
  %514 = icmp eq %"class.WTF::StringImpl"* %513, null
  br i1 %514, label %532, label %515

515:                                              ; preds = %510
  %516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %517 = load atomic i32, i32* %516 monotonic, align 4
  %518 = and i32 %517, 2
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %520, label %532

520:                                              ; preds = %515
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %513, i64 0, i32 0
  %522 = load i32, i32* %521, align 4
  %523 = zext i32 %522 to i33
  %524 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %523, i33 1) #11
  %525 = extractvalue { i33, i1 } %524, 1
  %526 = extractvalue { i33, i1 } %524, 0
  %527 = icmp slt i33 %526, 0
  %528 = or i1 %525, %527
  br i1 %528, label %529, label %530, !prof !4

529:                                              ; preds = %520
  call void @llvm.trap() #11
  unreachable

530:                                              ; preds = %520
  %531 = trunc i33 %526 to i32
  store i32 %531, i32* %521, align 4
  br label %532

532:                                              ; preds = %530, %515, %510
  %533 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %80, align 8
  %534 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %533, i64 0, i32 3, i32 0, i32 0, i32 0
  %535 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %534, align 8
  store %"class.WTF::StringImpl"* %535, %"class.WTF::StringImpl"** %81, align 8
  %536 = icmp eq %"class.WTF::StringImpl"* %535, null
  br i1 %536, label %554, label %537

537:                                              ; preds = %532
  %538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %539 = load atomic i32, i32* %538 monotonic, align 4
  %540 = and i32 %539, 2
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %542, label %554

542:                                              ; preds = %537
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %535, i64 0, i32 0
  %544 = load i32, i32* %543, align 4
  %545 = zext i32 %544 to i33
  %546 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %545, i33 1) #11
  %547 = extractvalue { i33, i1 } %546, 1
  %548 = extractvalue { i33, i1 } %546, 0
  %549 = icmp slt i33 %548, 0
  %550 = or i1 %547, %549
  br i1 %550, label %551, label %552, !prof !4

551:                                              ; preds = %542
  call void @llvm.trap() #11
  unreachable

552:                                              ; preds = %542
  %553 = trunc i33 %548 to i32
  store i32 %553, i32* %543, align 4
  br label %554

554:                                              ; preds = %552, %537, %532
  %555 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %83, align 8
  %556 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %555, i64 0, i32 3, i32 0, i32 0, i32 0
  %557 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %556, align 8
  store %"class.WTF::StringImpl"* %557, %"class.WTF::StringImpl"** %84, align 8
  %558 = icmp eq %"class.WTF::StringImpl"* %557, null
  br i1 %558, label %576, label %559

559:                                              ; preds = %554
  %560 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %561 = load atomic i32, i32* %560 monotonic, align 4
  %562 = and i32 %561, 2
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %564, label %576

564:                                              ; preds = %559
  %565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %557, i64 0, i32 0
  %566 = load i32, i32* %565, align 4
  %567 = zext i32 %566 to i33
  %568 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %567, i33 1) #11
  %569 = extractvalue { i33, i1 } %568, 1
  %570 = extractvalue { i33, i1 } %568, 0
  %571 = icmp slt i33 %570, 0
  %572 = or i1 %569, %571
  br i1 %572, label %573, label %574, !prof !4

573:                                              ; preds = %564
  call void @llvm.trap() #11
  unreachable

574:                                              ; preds = %564
  %575 = trunc i33 %570 to i32
  store i32 %575, i32* %565, align 4
  br label %576

576:                                              ; preds = %574, %559, %554
  %577 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %86, align 8
  %578 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %577, i64 0, i32 3, i32 0, i32 0, i32 0
  %579 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %578, align 8
  store %"class.WTF::StringImpl"* %579, %"class.WTF::StringImpl"** %87, align 8
  %580 = icmp eq %"class.WTF::StringImpl"* %579, null
  br i1 %580, label %598, label %581

581:                                              ; preds = %576
  %582 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %579, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %583 = load atomic i32, i32* %582 monotonic, align 4
  %584 = and i32 %583, 2
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %586, label %598

586:                                              ; preds = %581
  %587 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %579, i64 0, i32 0
  %588 = load i32, i32* %587, align 4
  %589 = zext i32 %588 to i33
  %590 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %589, i33 1) #11
  %591 = extractvalue { i33, i1 } %590, 1
  %592 = extractvalue { i33, i1 } %590, 0
  %593 = icmp slt i33 %592, 0
  %594 = or i1 %591, %593
  br i1 %594, label %595, label %596, !prof !4

595:                                              ; preds = %586
  call void @llvm.trap() #11
  unreachable

596:                                              ; preds = %586
  %597 = trunc i33 %592 to i32
  store i32 %597, i32* %587, align 4
  br label %598

598:                                              ; preds = %596, %581, %576
  %599 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %89, align 8
  %600 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %599, i64 0, i32 3, i32 0, i32 0, i32 0
  %601 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %600, align 8
  store %"class.WTF::StringImpl"* %601, %"class.WTF::StringImpl"** %90, align 8
  %602 = icmp eq %"class.WTF::StringImpl"* %601, null
  br i1 %602, label %620, label %603

603:                                              ; preds = %598
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %601, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %605 = load atomic i32, i32* %604 monotonic, align 4
  %606 = and i32 %605, 2
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %608, label %620

608:                                              ; preds = %603
  %609 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %601, i64 0, i32 0
  %610 = load i32, i32* %609, align 4
  %611 = zext i32 %610 to i33
  %612 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %611, i33 1) #11
  %613 = extractvalue { i33, i1 } %612, 1
  %614 = extractvalue { i33, i1 } %612, 0
  %615 = icmp slt i33 %614, 0
  %616 = or i1 %613, %615
  br i1 %616, label %617, label %618, !prof !4

617:                                              ; preds = %608
  call void @llvm.trap() #11
  unreachable

618:                                              ; preds = %608
  %619 = trunc i33 %614 to i32
  store i32 %619, i32* %609, align 4
  br label %620

620:                                              ; preds = %618, %603, %598
  %621 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %92, align 8
  %622 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %621, i64 0, i32 3, i32 0, i32 0, i32 0
  %623 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %622, align 8
  store %"class.WTF::StringImpl"* %623, %"class.WTF::StringImpl"** %93, align 8
  %624 = icmp eq %"class.WTF::StringImpl"* %623, null
  br i1 %624, label %642, label %625

625:                                              ; preds = %620
  %626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %623, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %627 = load atomic i32, i32* %626 monotonic, align 4
  %628 = and i32 %627, 2
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %630, label %642

630:                                              ; preds = %625
  %631 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %623, i64 0, i32 0
  %632 = load i32, i32* %631, align 4
  %633 = zext i32 %632 to i33
  %634 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %633, i33 1) #11
  %635 = extractvalue { i33, i1 } %634, 1
  %636 = extractvalue { i33, i1 } %634, 0
  %637 = icmp slt i33 %636, 0
  %638 = or i1 %635, %637
  br i1 %638, label %639, label %640, !prof !4

639:                                              ; preds = %630
  call void @llvm.trap() #11
  unreachable

640:                                              ; preds = %630
  %641 = trunc i33 %636 to i32
  store i32 %641, i32* %631, align 4
  br label %642

642:                                              ; preds = %640, %625, %620
  %643 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %95, align 8
  %644 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %643, i64 0, i32 3, i32 0, i32 0, i32 0
  %645 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %644, align 8
  store %"class.WTF::StringImpl"* %645, %"class.WTF::StringImpl"** %96, align 8
  %646 = icmp eq %"class.WTF::StringImpl"* %645, null
  br i1 %646, label %664, label %647

647:                                              ; preds = %642
  %648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %645, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %649 = load atomic i32, i32* %648 monotonic, align 4
  %650 = and i32 %649, 2
  %651 = icmp eq i32 %650, 0
  br i1 %651, label %652, label %664

652:                                              ; preds = %647
  %653 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %645, i64 0, i32 0
  %654 = load i32, i32* %653, align 4
  %655 = zext i32 %654 to i33
  %656 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %655, i33 1) #11
  %657 = extractvalue { i33, i1 } %656, 1
  %658 = extractvalue { i33, i1 } %656, 0
  %659 = icmp slt i33 %658, 0
  %660 = or i1 %657, %659
  br i1 %660, label %661, label %662, !prof !4

661:                                              ; preds = %652
  call void @llvm.trap() #11
  unreachable

662:                                              ; preds = %652
  %663 = trunc i33 %658 to i32
  store i32 %663, i32* %653, align 4
  br label %664

664:                                              ; preds = %662, %647, %642
  %665 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %98, align 8
  %666 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %665, i64 0, i32 3, i32 0, i32 0, i32 0
  %667 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %666, align 8
  store %"class.WTF::StringImpl"* %667, %"class.WTF::StringImpl"** %99, align 8
  %668 = icmp eq %"class.WTF::StringImpl"* %667, null
  br i1 %668, label %686, label %669

669:                                              ; preds = %664
  %670 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %667, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %671 = load atomic i32, i32* %670 monotonic, align 4
  %672 = and i32 %671, 2
  %673 = icmp eq i32 %672, 0
  br i1 %673, label %674, label %686

674:                                              ; preds = %669
  %675 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %667, i64 0, i32 0
  %676 = load i32, i32* %675, align 4
  %677 = zext i32 %676 to i33
  %678 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %677, i33 1) #11
  %679 = extractvalue { i33, i1 } %678, 1
  %680 = extractvalue { i33, i1 } %678, 0
  %681 = icmp slt i33 %680, 0
  %682 = or i1 %679, %681
  br i1 %682, label %683, label %684, !prof !4

683:                                              ; preds = %674
  call void @llvm.trap() #11
  unreachable

684:                                              ; preds = %674
  %685 = trunc i33 %680 to i32
  store i32 %685, i32* %675, align 4
  br label %686

686:                                              ; preds = %684, %669, %664
  %687 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %101, align 8
  %688 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %687, i64 0, i32 3, i32 0, i32 0, i32 0
  %689 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %688, align 8
  store %"class.WTF::StringImpl"* %689, %"class.WTF::StringImpl"** %102, align 8
  %690 = icmp eq %"class.WTF::StringImpl"* %689, null
  br i1 %690, label %708, label %691

691:                                              ; preds = %686
  %692 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %689, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %693 = load atomic i32, i32* %692 monotonic, align 4
  %694 = and i32 %693, 2
  %695 = icmp eq i32 %694, 0
  br i1 %695, label %696, label %708

696:                                              ; preds = %691
  %697 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %689, i64 0, i32 0
  %698 = load i32, i32* %697, align 4
  %699 = zext i32 %698 to i33
  %700 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %699, i33 1) #11
  %701 = extractvalue { i33, i1 } %700, 1
  %702 = extractvalue { i33, i1 } %700, 0
  %703 = icmp slt i33 %702, 0
  %704 = or i1 %701, %703
  br i1 %704, label %705, label %706, !prof !4

705:                                              ; preds = %696
  call void @llvm.trap() #11
  unreachable

706:                                              ; preds = %696
  %707 = trunc i33 %702 to i32
  store i32 %707, i32* %697, align 4
  br label %708

708:                                              ; preds = %706, %691, %686
  %709 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %104, align 8
  %710 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %709, i64 0, i32 3, i32 0, i32 0, i32 0
  %711 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %710, align 8
  store %"class.WTF::StringImpl"* %711, %"class.WTF::StringImpl"** %105, align 8
  %712 = icmp eq %"class.WTF::StringImpl"* %711, null
  br i1 %712, label %730, label %713

713:                                              ; preds = %708
  %714 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %711, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %715 = load atomic i32, i32* %714 monotonic, align 4
  %716 = and i32 %715, 2
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %718, label %730

718:                                              ; preds = %713
  %719 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %711, i64 0, i32 0
  %720 = load i32, i32* %719, align 4
  %721 = zext i32 %720 to i33
  %722 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %721, i33 1) #11
  %723 = extractvalue { i33, i1 } %722, 1
  %724 = extractvalue { i33, i1 } %722, 0
  %725 = icmp slt i33 %724, 0
  %726 = or i1 %723, %725
  br i1 %726, label %727, label %728, !prof !4

727:                                              ; preds = %718
  call void @llvm.trap() #11
  unreachable

728:                                              ; preds = %718
  %729 = trunc i33 %724 to i32
  store i32 %729, i32* %719, align 4
  br label %730

730:                                              ; preds = %728, %713, %708
  %731 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %107, align 8
  %732 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %731, i64 0, i32 3, i32 0, i32 0, i32 0
  %733 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %732, align 8
  store %"class.WTF::StringImpl"* %733, %"class.WTF::StringImpl"** %108, align 8
  %734 = icmp eq %"class.WTF::StringImpl"* %733, null
  br i1 %734, label %752, label %735

735:                                              ; preds = %730
  %736 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %733, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %737 = load atomic i32, i32* %736 monotonic, align 4
  %738 = and i32 %737, 2
  %739 = icmp eq i32 %738, 0
  br i1 %739, label %740, label %752

740:                                              ; preds = %735
  %741 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %733, i64 0, i32 0
  %742 = load i32, i32* %741, align 4
  %743 = zext i32 %742 to i33
  %744 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %743, i33 1) #11
  %745 = extractvalue { i33, i1 } %744, 1
  %746 = extractvalue { i33, i1 } %744, 0
  %747 = icmp slt i33 %746, 0
  %748 = or i1 %745, %747
  br i1 %748, label %749, label %750, !prof !4

749:                                              ; preds = %740
  call void @llvm.trap() #11
  unreachable

750:                                              ; preds = %740
  %751 = trunc i33 %746 to i32
  store i32 %751, i32* %741, align 4
  br label %752

752:                                              ; preds = %750, %735, %730
  %753 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %110, align 8
  %754 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %753, i64 0, i32 3, i32 0, i32 0, i32 0
  %755 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %754, align 8
  store %"class.WTF::StringImpl"* %755, %"class.WTF::StringImpl"** %111, align 8
  %756 = icmp eq %"class.WTF::StringImpl"* %755, null
  br i1 %756, label %774, label %757

757:                                              ; preds = %752
  %758 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %755, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %759 = load atomic i32, i32* %758 monotonic, align 4
  %760 = and i32 %759, 2
  %761 = icmp eq i32 %760, 0
  br i1 %761, label %762, label %774

762:                                              ; preds = %757
  %763 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %755, i64 0, i32 0
  %764 = load i32, i32* %763, align 4
  %765 = zext i32 %764 to i33
  %766 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %765, i33 1) #11
  %767 = extractvalue { i33, i1 } %766, 1
  %768 = extractvalue { i33, i1 } %766, 0
  %769 = icmp slt i33 %768, 0
  %770 = or i1 %767, %769
  br i1 %770, label %771, label %772, !prof !4

771:                                              ; preds = %762
  call void @llvm.trap() #11
  unreachable

772:                                              ; preds = %762
  %773 = trunc i33 %768 to i32
  store i32 %773, i32* %763, align 4
  br label %774

774:                                              ; preds = %772, %757, %752
  %775 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %113, align 8
  %776 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %775, i64 0, i32 3, i32 0, i32 0, i32 0
  %777 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %776, align 8
  store %"class.WTF::StringImpl"* %777, %"class.WTF::StringImpl"** %114, align 8
  %778 = icmp eq %"class.WTF::StringImpl"* %777, null
  br i1 %778, label %796, label %779

779:                                              ; preds = %774
  %780 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %777, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %781 = load atomic i32, i32* %780 monotonic, align 4
  %782 = and i32 %781, 2
  %783 = icmp eq i32 %782, 0
  br i1 %783, label %784, label %796

784:                                              ; preds = %779
  %785 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %777, i64 0, i32 0
  %786 = load i32, i32* %785, align 4
  %787 = zext i32 %786 to i33
  %788 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %787, i33 1) #11
  %789 = extractvalue { i33, i1 } %788, 1
  %790 = extractvalue { i33, i1 } %788, 0
  %791 = icmp slt i33 %790, 0
  %792 = or i1 %789, %791
  br i1 %792, label %793, label %794, !prof !4

793:                                              ; preds = %784
  call void @llvm.trap() #11
  unreachable

794:                                              ; preds = %784
  %795 = trunc i33 %790 to i32
  store i32 %795, i32* %785, align 4
  br label %796

796:                                              ; preds = %794, %779, %774
  %797 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %116, align 8
  %798 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %797, i64 0, i32 3, i32 0, i32 0, i32 0
  %799 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %798, align 8
  store %"class.WTF::StringImpl"* %799, %"class.WTF::StringImpl"** %117, align 8
  %800 = icmp eq %"class.WTF::StringImpl"* %799, null
  br i1 %800, label %818, label %801

801:                                              ; preds = %796
  %802 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %799, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %803 = load atomic i32, i32* %802 monotonic, align 4
  %804 = and i32 %803, 2
  %805 = icmp eq i32 %804, 0
  br i1 %805, label %806, label %818

806:                                              ; preds = %801
  %807 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %799, i64 0, i32 0
  %808 = load i32, i32* %807, align 4
  %809 = zext i32 %808 to i33
  %810 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %809, i33 1) #11
  %811 = extractvalue { i33, i1 } %810, 1
  %812 = extractvalue { i33, i1 } %810, 0
  %813 = icmp slt i33 %812, 0
  %814 = or i1 %811, %813
  br i1 %814, label %815, label %816, !prof !4

815:                                              ; preds = %806
  call void @llvm.trap() #11
  unreachable

816:                                              ; preds = %806
  %817 = trunc i33 %812 to i32
  store i32 %817, i32* %807, align 4
  br label %818

818:                                              ; preds = %816, %801, %796
  %819 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %119, align 8
  %820 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %819, i64 0, i32 3, i32 0, i32 0, i32 0
  %821 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %820, align 8
  store %"class.WTF::StringImpl"* %821, %"class.WTF::StringImpl"** %120, align 8
  %822 = icmp eq %"class.WTF::StringImpl"* %821, null
  br i1 %822, label %840, label %823

823:                                              ; preds = %818
  %824 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %821, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %825 = load atomic i32, i32* %824 monotonic, align 4
  %826 = and i32 %825, 2
  %827 = icmp eq i32 %826, 0
  br i1 %827, label %828, label %840

828:                                              ; preds = %823
  %829 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %821, i64 0, i32 0
  %830 = load i32, i32* %829, align 4
  %831 = zext i32 %830 to i33
  %832 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %831, i33 1) #11
  %833 = extractvalue { i33, i1 } %832, 1
  %834 = extractvalue { i33, i1 } %832, 0
  %835 = icmp slt i33 %834, 0
  %836 = or i1 %833, %835
  br i1 %836, label %837, label %838, !prof !4

837:                                              ; preds = %828
  call void @llvm.trap() #11
  unreachable

838:                                              ; preds = %828
  %839 = trunc i33 %834 to i32
  store i32 %839, i32* %829, align 4
  br label %840

840:                                              ; preds = %838, %823, %818
  %841 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %122, align 8
  %842 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %841, i64 0, i32 3, i32 0, i32 0, i32 0
  %843 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %842, align 8
  store %"class.WTF::StringImpl"* %843, %"class.WTF::StringImpl"** %123, align 8
  %844 = icmp eq %"class.WTF::StringImpl"* %843, null
  br i1 %844, label %862, label %845

845:                                              ; preds = %840
  %846 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %843, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %847 = load atomic i32, i32* %846 monotonic, align 4
  %848 = and i32 %847, 2
  %849 = icmp eq i32 %848, 0
  br i1 %849, label %850, label %862

850:                                              ; preds = %845
  %851 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %843, i64 0, i32 0
  %852 = load i32, i32* %851, align 4
  %853 = zext i32 %852 to i33
  %854 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %853, i33 1) #11
  %855 = extractvalue { i33, i1 } %854, 1
  %856 = extractvalue { i33, i1 } %854, 0
  %857 = icmp slt i33 %856, 0
  %858 = or i1 %855, %857
  br i1 %858, label %859, label %860, !prof !4

859:                                              ; preds = %850
  call void @llvm.trap() #11
  unreachable

860:                                              ; preds = %850
  %861 = trunc i33 %856 to i32
  store i32 %861, i32* %851, align 4
  br label %862

862:                                              ; preds = %860, %845, %840
  %863 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %125, align 8
  %864 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %863, i64 0, i32 3, i32 0, i32 0, i32 0
  %865 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %864, align 8
  store %"class.WTF::StringImpl"* %865, %"class.WTF::StringImpl"** %126, align 8
  %866 = icmp eq %"class.WTF::StringImpl"* %865, null
  br i1 %866, label %884, label %867

867:                                              ; preds = %862
  %868 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %865, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %869 = load atomic i32, i32* %868 monotonic, align 4
  %870 = and i32 %869, 2
  %871 = icmp eq i32 %870, 0
  br i1 %871, label %872, label %884

872:                                              ; preds = %867
  %873 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %865, i64 0, i32 0
  %874 = load i32, i32* %873, align 4
  %875 = zext i32 %874 to i33
  %876 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %875, i33 1) #11
  %877 = extractvalue { i33, i1 } %876, 1
  %878 = extractvalue { i33, i1 } %876, 0
  %879 = icmp slt i33 %878, 0
  %880 = or i1 %877, %879
  br i1 %880, label %881, label %882, !prof !4

881:                                              ; preds = %872
  call void @llvm.trap() #11
  unreachable

882:                                              ; preds = %872
  %883 = trunc i33 %878 to i32
  store i32 %883, i32* %873, align 4
  br label %884

884:                                              ; preds = %882, %867, %862
  %885 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %128, align 8
  %886 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %885, i64 0, i32 3, i32 0, i32 0, i32 0
  %887 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %886, align 8
  store %"class.WTF::StringImpl"* %887, %"class.WTF::StringImpl"** %129, align 8
  %888 = icmp eq %"class.WTF::StringImpl"* %887, null
  br i1 %888, label %906, label %889

889:                                              ; preds = %884
  %890 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %887, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %891 = load atomic i32, i32* %890 monotonic, align 4
  %892 = and i32 %891, 2
  %893 = icmp eq i32 %892, 0
  br i1 %893, label %894, label %906

894:                                              ; preds = %889
  %895 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %887, i64 0, i32 0
  %896 = load i32, i32* %895, align 4
  %897 = zext i32 %896 to i33
  %898 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %897, i33 1) #11
  %899 = extractvalue { i33, i1 } %898, 1
  %900 = extractvalue { i33, i1 } %898, 0
  %901 = icmp slt i33 %900, 0
  %902 = or i1 %899, %901
  br i1 %902, label %903, label %904, !prof !4

903:                                              ; preds = %894
  call void @llvm.trap() #11
  unreachable

904:                                              ; preds = %894
  %905 = trunc i33 %900 to i32
  store i32 %905, i32* %895, align 4
  br label %906

906:                                              ; preds = %904, %889, %884
  %907 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %131, align 8
  %908 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %907, i64 0, i32 3, i32 0, i32 0, i32 0
  %909 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %908, align 8
  store %"class.WTF::StringImpl"* %909, %"class.WTF::StringImpl"** %132, align 8
  %910 = icmp eq %"class.WTF::StringImpl"* %909, null
  br i1 %910, label %928, label %911

911:                                              ; preds = %906
  %912 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %909, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %913 = load atomic i32, i32* %912 monotonic, align 4
  %914 = and i32 %913, 2
  %915 = icmp eq i32 %914, 0
  br i1 %915, label %916, label %928

916:                                              ; preds = %911
  %917 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %909, i64 0, i32 0
  %918 = load i32, i32* %917, align 4
  %919 = zext i32 %918 to i33
  %920 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %919, i33 1) #11
  %921 = extractvalue { i33, i1 } %920, 1
  %922 = extractvalue { i33, i1 } %920, 0
  %923 = icmp slt i33 %922, 0
  %924 = or i1 %921, %923
  br i1 %924, label %925, label %926, !prof !4

925:                                              ; preds = %916
  call void @llvm.trap() #11
  unreachable

926:                                              ; preds = %916
  %927 = trunc i33 %922 to i32
  store i32 %927, i32* %917, align 4
  br label %928

928:                                              ; preds = %926, %911, %906
  %929 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %134, align 8
  %930 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %929, i64 0, i32 3, i32 0, i32 0, i32 0
  %931 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %930, align 8
  store %"class.WTF::StringImpl"* %931, %"class.WTF::StringImpl"** %135, align 8
  %932 = icmp eq %"class.WTF::StringImpl"* %931, null
  br i1 %932, label %950, label %933

933:                                              ; preds = %928
  %934 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %931, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %935 = load atomic i32, i32* %934 monotonic, align 4
  %936 = and i32 %935, 2
  %937 = icmp eq i32 %936, 0
  br i1 %937, label %938, label %950

938:                                              ; preds = %933
  %939 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %931, i64 0, i32 0
  %940 = load i32, i32* %939, align 4
  %941 = zext i32 %940 to i33
  %942 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %941, i33 1) #11
  %943 = extractvalue { i33, i1 } %942, 1
  %944 = extractvalue { i33, i1 } %942, 0
  %945 = icmp slt i33 %944, 0
  %946 = or i1 %943, %945
  br i1 %946, label %947, label %948, !prof !4

947:                                              ; preds = %938
  call void @llvm.trap() #11
  unreachable

948:                                              ; preds = %938
  %949 = trunc i33 %944 to i32
  store i32 %949, i32* %939, align 4
  br label %950

950:                                              ; preds = %948, %933, %928
  %951 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %137, align 8
  %952 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %951, i64 0, i32 3, i32 0, i32 0, i32 0
  %953 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %952, align 8
  store %"class.WTF::StringImpl"* %953, %"class.WTF::StringImpl"** %138, align 8
  %954 = icmp eq %"class.WTF::StringImpl"* %953, null
  br i1 %954, label %972, label %955

955:                                              ; preds = %950
  %956 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %953, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %957 = load atomic i32, i32* %956 monotonic, align 4
  %958 = and i32 %957, 2
  %959 = icmp eq i32 %958, 0
  br i1 %959, label %960, label %972

960:                                              ; preds = %955
  %961 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %953, i64 0, i32 0
  %962 = load i32, i32* %961, align 4
  %963 = zext i32 %962 to i33
  %964 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %963, i33 1) #11
  %965 = extractvalue { i33, i1 } %964, 1
  %966 = extractvalue { i33, i1 } %964, 0
  %967 = icmp slt i33 %966, 0
  %968 = or i1 %965, %967
  br i1 %968, label %969, label %970, !prof !4

969:                                              ; preds = %960
  call void @llvm.trap() #11
  unreachable

970:                                              ; preds = %960
  %971 = trunc i33 %966 to i32
  store i32 %971, i32* %961, align 4
  br label %972

972:                                              ; preds = %970, %955, %950
  %973 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %140, align 8
  %974 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %973, i64 0, i32 3, i32 0, i32 0, i32 0
  %975 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %974, align 8
  store %"class.WTF::StringImpl"* %975, %"class.WTF::StringImpl"** %141, align 8
  %976 = icmp eq %"class.WTF::StringImpl"* %975, null
  br i1 %976, label %994, label %977

977:                                              ; preds = %972
  %978 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %975, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %979 = load atomic i32, i32* %978 monotonic, align 4
  %980 = and i32 %979, 2
  %981 = icmp eq i32 %980, 0
  br i1 %981, label %982, label %994

982:                                              ; preds = %977
  %983 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %975, i64 0, i32 0
  %984 = load i32, i32* %983, align 4
  %985 = zext i32 %984 to i33
  %986 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %985, i33 1) #11
  %987 = extractvalue { i33, i1 } %986, 1
  %988 = extractvalue { i33, i1 } %986, 0
  %989 = icmp slt i33 %988, 0
  %990 = or i1 %987, %989
  br i1 %990, label %991, label %992, !prof !4

991:                                              ; preds = %982
  call void @llvm.trap() #11
  unreachable

992:                                              ; preds = %982
  %993 = trunc i33 %988 to i32
  store i32 %993, i32* %983, align 4
  br label %994

994:                                              ; preds = %992, %977, %972
  %995 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %143, align 8
  %996 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %995, i64 0, i32 3, i32 0, i32 0, i32 0
  %997 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %996, align 8
  store %"class.WTF::StringImpl"* %997, %"class.WTF::StringImpl"** %144, align 8
  %998 = icmp eq %"class.WTF::StringImpl"* %997, null
  br i1 %998, label %1016, label %999

999:                                              ; preds = %994
  %1000 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %997, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1001 = load atomic i32, i32* %1000 monotonic, align 4
  %1002 = and i32 %1001, 2
  %1003 = icmp eq i32 %1002, 0
  br i1 %1003, label %1004, label %1016

1004:                                             ; preds = %999
  %1005 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %997, i64 0, i32 0
  %1006 = load i32, i32* %1005, align 4
  %1007 = zext i32 %1006 to i33
  %1008 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1007, i33 1) #11
  %1009 = extractvalue { i33, i1 } %1008, 1
  %1010 = extractvalue { i33, i1 } %1008, 0
  %1011 = icmp slt i33 %1010, 0
  %1012 = or i1 %1009, %1011
  br i1 %1012, label %1013, label %1014, !prof !4

1013:                                             ; preds = %1004
  call void @llvm.trap() #11
  unreachable

1014:                                             ; preds = %1004
  %1015 = trunc i33 %1010 to i32
  store i32 %1015, i32* %1005, align 4
  br label %1016

1016:                                             ; preds = %1014, %999, %994
  %1017 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %146, align 8
  %1018 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1017, i64 0, i32 3, i32 0, i32 0, i32 0
  %1019 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1018, align 8
  store %"class.WTF::StringImpl"* %1019, %"class.WTF::StringImpl"** %147, align 8
  %1020 = icmp eq %"class.WTF::StringImpl"* %1019, null
  br i1 %1020, label %1038, label %1021

1021:                                             ; preds = %1016
  %1022 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1019, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1023 = load atomic i32, i32* %1022 monotonic, align 4
  %1024 = and i32 %1023, 2
  %1025 = icmp eq i32 %1024, 0
  br i1 %1025, label %1026, label %1038

1026:                                             ; preds = %1021
  %1027 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1019, i64 0, i32 0
  %1028 = load i32, i32* %1027, align 4
  %1029 = zext i32 %1028 to i33
  %1030 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1029, i33 1) #11
  %1031 = extractvalue { i33, i1 } %1030, 1
  %1032 = extractvalue { i33, i1 } %1030, 0
  %1033 = icmp slt i33 %1032, 0
  %1034 = or i1 %1031, %1033
  br i1 %1034, label %1035, label %1036, !prof !4

1035:                                             ; preds = %1026
  call void @llvm.trap() #11
  unreachable

1036:                                             ; preds = %1026
  %1037 = trunc i33 %1032 to i32
  store i32 %1037, i32* %1027, align 4
  br label %1038

1038:                                             ; preds = %1036, %1021, %1016
  %1039 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %149, align 8
  %1040 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1039, i64 0, i32 3, i32 0, i32 0, i32 0
  %1041 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1040, align 8
  store %"class.WTF::StringImpl"* %1041, %"class.WTF::StringImpl"** %150, align 8
  %1042 = icmp eq %"class.WTF::StringImpl"* %1041, null
  br i1 %1042, label %1060, label %1043

1043:                                             ; preds = %1038
  %1044 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1041, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1045 = load atomic i32, i32* %1044 monotonic, align 4
  %1046 = and i32 %1045, 2
  %1047 = icmp eq i32 %1046, 0
  br i1 %1047, label %1048, label %1060

1048:                                             ; preds = %1043
  %1049 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1041, i64 0, i32 0
  %1050 = load i32, i32* %1049, align 4
  %1051 = zext i32 %1050 to i33
  %1052 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1051, i33 1) #11
  %1053 = extractvalue { i33, i1 } %1052, 1
  %1054 = extractvalue { i33, i1 } %1052, 0
  %1055 = icmp slt i33 %1054, 0
  %1056 = or i1 %1053, %1055
  br i1 %1056, label %1057, label %1058, !prof !4

1057:                                             ; preds = %1048
  call void @llvm.trap() #11
  unreachable

1058:                                             ; preds = %1048
  %1059 = trunc i33 %1054 to i32
  store i32 %1059, i32* %1049, align 4
  br label %1060

1060:                                             ; preds = %1058, %1043, %1038
  %1061 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %152, align 8
  %1062 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1061, i64 0, i32 3, i32 0, i32 0, i32 0
  %1063 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1062, align 8
  store %"class.WTF::StringImpl"* %1063, %"class.WTF::StringImpl"** %153, align 8
  %1064 = icmp eq %"class.WTF::StringImpl"* %1063, null
  br i1 %1064, label %1082, label %1065

1065:                                             ; preds = %1060
  %1066 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1063, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1067 = load atomic i32, i32* %1066 monotonic, align 4
  %1068 = and i32 %1067, 2
  %1069 = icmp eq i32 %1068, 0
  br i1 %1069, label %1070, label %1082

1070:                                             ; preds = %1065
  %1071 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1063, i64 0, i32 0
  %1072 = load i32, i32* %1071, align 4
  %1073 = zext i32 %1072 to i33
  %1074 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1073, i33 1) #11
  %1075 = extractvalue { i33, i1 } %1074, 1
  %1076 = extractvalue { i33, i1 } %1074, 0
  %1077 = icmp slt i33 %1076, 0
  %1078 = or i1 %1075, %1077
  br i1 %1078, label %1079, label %1080, !prof !4

1079:                                             ; preds = %1070
  call void @llvm.trap() #11
  unreachable

1080:                                             ; preds = %1070
  %1081 = trunc i33 %1076 to i32
  store i32 %1081, i32* %1071, align 4
  br label %1082

1082:                                             ; preds = %1080, %1065, %1060
  %1083 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %155, align 8
  %1084 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1083, i64 0, i32 3, i32 0, i32 0, i32 0
  %1085 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1084, align 8
  store %"class.WTF::StringImpl"* %1085, %"class.WTF::StringImpl"** %156, align 8
  %1086 = icmp eq %"class.WTF::StringImpl"* %1085, null
  br i1 %1086, label %1104, label %1087

1087:                                             ; preds = %1082
  %1088 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1085, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1089 = load atomic i32, i32* %1088 monotonic, align 4
  %1090 = and i32 %1089, 2
  %1091 = icmp eq i32 %1090, 0
  br i1 %1091, label %1092, label %1104

1092:                                             ; preds = %1087
  %1093 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1085, i64 0, i32 0
  %1094 = load i32, i32* %1093, align 4
  %1095 = zext i32 %1094 to i33
  %1096 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1095, i33 1) #11
  %1097 = extractvalue { i33, i1 } %1096, 1
  %1098 = extractvalue { i33, i1 } %1096, 0
  %1099 = icmp slt i33 %1098, 0
  %1100 = or i1 %1097, %1099
  br i1 %1100, label %1101, label %1102, !prof !4

1101:                                             ; preds = %1092
  call void @llvm.trap() #11
  unreachable

1102:                                             ; preds = %1092
  %1103 = trunc i33 %1098 to i32
  store i32 %1103, i32* %1093, align 4
  br label %1104

1104:                                             ; preds = %1102, %1087, %1082
  %1105 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %158, align 8
  %1106 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1105, i64 0, i32 3, i32 0, i32 0, i32 0
  %1107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1106, align 8
  store %"class.WTF::StringImpl"* %1107, %"class.WTF::StringImpl"** %159, align 8
  %1108 = icmp eq %"class.WTF::StringImpl"* %1107, null
  br i1 %1108, label %1126, label %1109

1109:                                             ; preds = %1104
  %1110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1111 = load atomic i32, i32* %1110 monotonic, align 4
  %1112 = and i32 %1111, 2
  %1113 = icmp eq i32 %1112, 0
  br i1 %1113, label %1114, label %1126

1114:                                             ; preds = %1109
  %1115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1107, i64 0, i32 0
  %1116 = load i32, i32* %1115, align 4
  %1117 = zext i32 %1116 to i33
  %1118 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1117, i33 1) #11
  %1119 = extractvalue { i33, i1 } %1118, 1
  %1120 = extractvalue { i33, i1 } %1118, 0
  %1121 = icmp slt i33 %1120, 0
  %1122 = or i1 %1119, %1121
  br i1 %1122, label %1123, label %1124, !prof !4

1123:                                             ; preds = %1114
  call void @llvm.trap() #11
  unreachable

1124:                                             ; preds = %1114
  %1125 = trunc i33 %1120 to i32
  store i32 %1125, i32* %1115, align 4
  br label %1126

1126:                                             ; preds = %1124, %1109, %1104
  %1127 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %161, align 8
  %1128 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1127, i64 0, i32 3, i32 0, i32 0, i32 0
  %1129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1128, align 8
  store %"class.WTF::StringImpl"* %1129, %"class.WTF::StringImpl"** %162, align 8
  %1130 = icmp eq %"class.WTF::StringImpl"* %1129, null
  br i1 %1130, label %1148, label %1131

1131:                                             ; preds = %1126
  %1132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1133 = load atomic i32, i32* %1132 monotonic, align 4
  %1134 = and i32 %1133, 2
  %1135 = icmp eq i32 %1134, 0
  br i1 %1135, label %1136, label %1148

1136:                                             ; preds = %1131
  %1137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1129, i64 0, i32 0
  %1138 = load i32, i32* %1137, align 4
  %1139 = zext i32 %1138 to i33
  %1140 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1139, i33 1) #11
  %1141 = extractvalue { i33, i1 } %1140, 1
  %1142 = extractvalue { i33, i1 } %1140, 0
  %1143 = icmp slt i33 %1142, 0
  %1144 = or i1 %1141, %1143
  br i1 %1144, label %1145, label %1146, !prof !4

1145:                                             ; preds = %1136
  call void @llvm.trap() #11
  unreachable

1146:                                             ; preds = %1136
  %1147 = trunc i33 %1142 to i32
  store i32 %1147, i32* %1137, align 4
  br label %1148

1148:                                             ; preds = %1146, %1131, %1126
  %1149 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %164, align 8
  %1150 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1149, i64 0, i32 3, i32 0, i32 0, i32 0
  %1151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1150, align 8
  store %"class.WTF::StringImpl"* %1151, %"class.WTF::StringImpl"** %165, align 8
  %1152 = icmp eq %"class.WTF::StringImpl"* %1151, null
  br i1 %1152, label %1170, label %1153

1153:                                             ; preds = %1148
  %1154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1155 = load atomic i32, i32* %1154 monotonic, align 4
  %1156 = and i32 %1155, 2
  %1157 = icmp eq i32 %1156, 0
  br i1 %1157, label %1158, label %1170

1158:                                             ; preds = %1153
  %1159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1151, i64 0, i32 0
  %1160 = load i32, i32* %1159, align 4
  %1161 = zext i32 %1160 to i33
  %1162 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1161, i33 1) #11
  %1163 = extractvalue { i33, i1 } %1162, 1
  %1164 = extractvalue { i33, i1 } %1162, 0
  %1165 = icmp slt i33 %1164, 0
  %1166 = or i1 %1163, %1165
  br i1 %1166, label %1167, label %1168, !prof !4

1167:                                             ; preds = %1158
  call void @llvm.trap() #11
  unreachable

1168:                                             ; preds = %1158
  %1169 = trunc i33 %1164 to i32
  store i32 %1169, i32* %1159, align 4
  br label %1170

1170:                                             ; preds = %1168, %1153, %1148
  %1171 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %167, align 8
  %1172 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1171, i64 0, i32 3, i32 0, i32 0, i32 0
  %1173 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1172, align 8
  store %"class.WTF::StringImpl"* %1173, %"class.WTF::StringImpl"** %168, align 8
  %1174 = icmp eq %"class.WTF::StringImpl"* %1173, null
  br i1 %1174, label %1192, label %1175

1175:                                             ; preds = %1170
  %1176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1173, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1177 = load atomic i32, i32* %1176 monotonic, align 4
  %1178 = and i32 %1177, 2
  %1179 = icmp eq i32 %1178, 0
  br i1 %1179, label %1180, label %1192

1180:                                             ; preds = %1175
  %1181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1173, i64 0, i32 0
  %1182 = load i32, i32* %1181, align 4
  %1183 = zext i32 %1182 to i33
  %1184 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1183, i33 1) #11
  %1185 = extractvalue { i33, i1 } %1184, 1
  %1186 = extractvalue { i33, i1 } %1184, 0
  %1187 = icmp slt i33 %1186, 0
  %1188 = or i1 %1185, %1187
  br i1 %1188, label %1189, label %1190, !prof !4

1189:                                             ; preds = %1180
  call void @llvm.trap() #11
  unreachable

1190:                                             ; preds = %1180
  %1191 = trunc i33 %1186 to i32
  store i32 %1191, i32* %1181, align 4
  br label %1192

1192:                                             ; preds = %1190, %1175, %1170
  %1193 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %170, align 8
  %1194 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1193, i64 0, i32 3, i32 0, i32 0, i32 0
  %1195 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1194, align 8
  store %"class.WTF::StringImpl"* %1195, %"class.WTF::StringImpl"** %171, align 8
  %1196 = icmp eq %"class.WTF::StringImpl"* %1195, null
  br i1 %1196, label %1214, label %1197

1197:                                             ; preds = %1192
  %1198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1195, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1199 = load atomic i32, i32* %1198 monotonic, align 4
  %1200 = and i32 %1199, 2
  %1201 = icmp eq i32 %1200, 0
  br i1 %1201, label %1202, label %1214

1202:                                             ; preds = %1197
  %1203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1195, i64 0, i32 0
  %1204 = load i32, i32* %1203, align 4
  %1205 = zext i32 %1204 to i33
  %1206 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1205, i33 1) #11
  %1207 = extractvalue { i33, i1 } %1206, 1
  %1208 = extractvalue { i33, i1 } %1206, 0
  %1209 = icmp slt i33 %1208, 0
  %1210 = or i1 %1207, %1209
  br i1 %1210, label %1211, label %1212, !prof !4

1211:                                             ; preds = %1202
  call void @llvm.trap() #11
  unreachable

1212:                                             ; preds = %1202
  %1213 = trunc i33 %1208 to i32
  store i32 %1213, i32* %1203, align 4
  br label %1214

1214:                                             ; preds = %1212, %1197, %1192
  %1215 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %173, align 8
  %1216 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1215, i64 0, i32 3, i32 0, i32 0, i32 0
  %1217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1216, align 8
  store %"class.WTF::StringImpl"* %1217, %"class.WTF::StringImpl"** %174, align 8
  %1218 = icmp eq %"class.WTF::StringImpl"* %1217, null
  br i1 %1218, label %1236, label %1219

1219:                                             ; preds = %1214
  %1220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1221 = load atomic i32, i32* %1220 monotonic, align 4
  %1222 = and i32 %1221, 2
  %1223 = icmp eq i32 %1222, 0
  br i1 %1223, label %1224, label %1236

1224:                                             ; preds = %1219
  %1225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1217, i64 0, i32 0
  %1226 = load i32, i32* %1225, align 4
  %1227 = zext i32 %1226 to i33
  %1228 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1227, i33 1) #11
  %1229 = extractvalue { i33, i1 } %1228, 1
  %1230 = extractvalue { i33, i1 } %1228, 0
  %1231 = icmp slt i33 %1230, 0
  %1232 = or i1 %1229, %1231
  br i1 %1232, label %1233, label %1234, !prof !4

1233:                                             ; preds = %1224
  call void @llvm.trap() #11
  unreachable

1234:                                             ; preds = %1224
  %1235 = trunc i33 %1230 to i32
  store i32 %1235, i32* %1225, align 4
  br label %1236

1236:                                             ; preds = %1234, %1219, %1214
  %1237 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %176, align 8
  %1238 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1237, i64 0, i32 3, i32 0, i32 0, i32 0
  %1239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1238, align 8
  store %"class.WTF::StringImpl"* %1239, %"class.WTF::StringImpl"** %177, align 8
  %1240 = icmp eq %"class.WTF::StringImpl"* %1239, null
  br i1 %1240, label %1258, label %1241

1241:                                             ; preds = %1236
  %1242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1243 = load atomic i32, i32* %1242 monotonic, align 4
  %1244 = and i32 %1243, 2
  %1245 = icmp eq i32 %1244, 0
  br i1 %1245, label %1246, label %1258

1246:                                             ; preds = %1241
  %1247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1239, i64 0, i32 0
  %1248 = load i32, i32* %1247, align 4
  %1249 = zext i32 %1248 to i33
  %1250 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1249, i33 1) #11
  %1251 = extractvalue { i33, i1 } %1250, 1
  %1252 = extractvalue { i33, i1 } %1250, 0
  %1253 = icmp slt i33 %1252, 0
  %1254 = or i1 %1251, %1253
  br i1 %1254, label %1255, label %1256, !prof !4

1255:                                             ; preds = %1246
  call void @llvm.trap() #11
  unreachable

1256:                                             ; preds = %1246
  %1257 = trunc i33 %1252 to i32
  store i32 %1257, i32* %1247, align 4
  br label %1258

1258:                                             ; preds = %1256, %1241, %1236
  %1259 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %179, align 8
  %1260 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1259, i64 0, i32 3, i32 0, i32 0, i32 0
  %1261 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1260, align 8
  store %"class.WTF::StringImpl"* %1261, %"class.WTF::StringImpl"** %180, align 8
  %1262 = icmp eq %"class.WTF::StringImpl"* %1261, null
  br i1 %1262, label %1280, label %1263

1263:                                             ; preds = %1258
  %1264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1261, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1265 = load atomic i32, i32* %1264 monotonic, align 4
  %1266 = and i32 %1265, 2
  %1267 = icmp eq i32 %1266, 0
  br i1 %1267, label %1268, label %1280

1268:                                             ; preds = %1263
  %1269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1261, i64 0, i32 0
  %1270 = load i32, i32* %1269, align 4
  %1271 = zext i32 %1270 to i33
  %1272 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1271, i33 1) #11
  %1273 = extractvalue { i33, i1 } %1272, 1
  %1274 = extractvalue { i33, i1 } %1272, 0
  %1275 = icmp slt i33 %1274, 0
  %1276 = or i1 %1273, %1275
  br i1 %1276, label %1277, label %1278, !prof !4

1277:                                             ; preds = %1268
  call void @llvm.trap() #11
  unreachable

1278:                                             ; preds = %1268
  %1279 = trunc i33 %1274 to i32
  store i32 %1279, i32* %1269, align 4
  br label %1280

1280:                                             ; preds = %1278, %1263, %1258
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.2528", %"class.WTF::StaticSingleton.2528"* @_ZZN5blinkL26IsProhibitedParagraphChildERKN3WTF12AtomicStringEE10s_elements, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #11
  call void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.80"* bitcast (%"class.WTF::StaticSingleton.2528"* @_ZZN5blinkL26IsProhibitedParagraphChildERKN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.80"*), i32 48) #11
  br label %1281

1281:                                             ; preds = %1281, %1280
  %1282 = phi %"class.WTF::AtomicString"* [ %1284, %1281 ], [ %36, %1280 ]
  %1283 = call { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.80"* bitcast (%"class.WTF::StaticSingleton.2528"* @_ZZN5blinkL26IsProhibitedParagraphChildERKN3WTF12AtomicStringEE10s_elements to %"class.WTF::HashTable.80"*), %"class.WTF::AtomicString"* dereferenceable(8) %1282, %"class.WTF::AtomicString"* dereferenceable(8) %1282) #11
  %1284 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1282, i64 1
  %1285 = icmp eq %"class.WTF::AtomicString"* %1284, %181
  br i1 %1285, label %1286, label %1281

1286:                                             ; preds = %1281, %1305
  %1287 = phi %"class.WTF::AtomicString"* [ %1288, %1305 ], [ %181, %1281 ]
  %1288 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1287, i64 -1
  %1289 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1288, i64 0, i32 0, i32 0, i32 0
  %1290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1289, align 8
  %1291 = icmp eq %"class.WTF::StringImpl"* %1290, null
  br i1 %1291, label %1305, label %1292

1292:                                             ; preds = %1286
  %1293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1290, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1294 = load atomic i32, i32* %1293 monotonic, align 4
  %1295 = and i32 %1294, 2
  %1296 = icmp eq i32 %1295, 0
  %1297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1290, i64 0, i32 0
  %1298 = load i32, i32* %1297, align 4
  br i1 %1296, label %1299, label %1301

1299:                                             ; preds = %1292
  %1300 = add i32 %1298, -1
  store i32 %1300, i32* %1297, align 4
  br label %1301

1301:                                             ; preds = %1299, %1292
  %1302 = phi i32 [ %1300, %1299 ], [ %1298, %1292 ]
  %1303 = icmp eq i32 %1302, 0
  br i1 %1303, label %1304, label %1305

1304:                                             ; preds = %1301
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1290) #11
  br label %1305

1305:                                             ; preds = %1304, %1301, %1286
  %1306 = icmp eq %"class.WTF::AtomicString"* %1288, %36
  br i1 %1306, label %1307, label %1286

1307:                                             ; preds = %1305
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %35) #11
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL26IsProhibitedParagraphChildERKN3WTF12AtomicStringEE10s_elements) #11
  br label %1308

1308:                                             ; preds = %1307, %221, %214
  %1309 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** bitcast (%"class.WTF::StaticSingleton.2528"* @_ZZN5blinkL26IsProhibitedParagraphChildERKN3WTF12AtomicStringEE10s_elements to %"class.WTF::AtomicString"**), align 8
  %1310 = icmp eq %"class.WTF::AtomicString"* %1309, null
  br i1 %1310, label %1367, label %1311

1311:                                             ; preds = %1308
  %1312 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.2528", %"class.WTF::StaticSingleton.2528"* @_ZZN5blinkL26IsProhibitedParagraphChildERKN3WTF12AtomicStringEE10s_elements, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %1313 = add i32 %1312, -1
  %1314 = zext i32 %1313 to i64
  %1315 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %218, i64 0, i32 3, i32 0, i32 0, i32 0
  %1316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1315, align 8
  %1317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1316, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1318 = load atomic i32, i32* %1317 monotonic, align 4
  %1319 = lshr i32 %1318, 8
  %1320 = and i32 %1319, %1313
  %1321 = zext i32 %1320 to i64
  %1322 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1309, i64 %1321
  %1323 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1322, i64 0, i32 0, i32 0, i32 0
  %1324 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1323, align 8
  %1325 = icmp eq %"class.WTF::StringImpl"* %1324, null
  br i1 %1325, label %1367, label %1326

1326:                                             ; preds = %1311
  %1327 = xor i32 %1319, -1
  %1328 = lshr i32 %1318, 31
  %1329 = add nsw i32 %1328, %1327
  %1330 = shl i32 %1329, 12
  %1331 = xor i32 %1330, %1329
  %1332 = lshr i32 %1331, 7
  %1333 = xor i32 %1332, %1331
  %1334 = shl i32 %1333, 2
  %1335 = xor i32 %1334, %1333
  %1336 = lshr i32 %1335, 20
  %1337 = xor i32 %1336, %1335
  %1338 = or i32 %1337, 1
  %1339 = zext i32 %1338 to i64
  br label %1340

1340:                                             ; preds = %1350, %1326
  %1341 = phi %"class.WTF::StringImpl"* [ %1324, %1326 ], [ %1357, %1350 ]
  %1342 = phi %"class.WTF::AtomicString"* [ %1322, %1326 ], [ %1355, %1350 ]
  %1343 = phi i64 [ %1321, %1326 ], [ %1354, %1350 ]
  %1344 = phi i64 [ 0, %1326 ], [ %1352, %1350 ]
  %1345 = bitcast %"class.WTF::AtomicString"* %1342 to i8**
  %1346 = load i8*, i8** %1345, align 8
  %1347 = icmp ne i8* %1346, inttoptr (i64 -1 to i8*)
  %1348 = icmp eq %"class.WTF::StringImpl"* %1341, %1316
  %1349 = and i1 %1348, %1347
  br i1 %1349, label %1359, label %1350

1350:                                             ; preds = %1340
  %1351 = icmp eq i64 %1344, 0
  %1352 = select i1 %1351, i64 %1339, i64 %1344
  %1353 = add i64 %1352, %1343
  %1354 = and i64 %1353, %1314
  %1355 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1309, i64 %1354
  %1356 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1355, i64 0, i32 0, i32 0, i32 0
  %1357 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1356, align 8
  %1358 = icmp eq %"class.WTF::StringImpl"* %1357, null
  br i1 %1358, label %1367, label %1340

1359:                                             ; preds = %1340
  %1360 = icmp eq %"class.WTF::AtomicString"* %1342, null
  br i1 %1360, label %1367, label %1361

1361:                                             ; preds = %1359
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %182) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::Node"* dereferenceable(64) %192) #11
  %1362 = call %"class.blink::Element"* @_ZN5blink23EnclosingElementWithTagERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_13QualifiedNameE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, %"class.blink::QualifiedName"* dereferenceable(8) %139) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %182) #11
  %1363 = icmp eq %"class.blink::Element"* %1362, null
  br i1 %1363, label %1367, label %1364

1364:                                             ; preds = %1361
  call void @_ZN5blink23ReplaceSelectionCommand24MoveElementOutOfAncestorEPNS_7ElementES2_PNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::Element"* %215, %"class.blink::Element"* nonnull %1362, %"class.blink::EditingState"* %2)
  %1365 = load i8, i8* %183, align 1, !range !5
  %1366 = icmp eq i8 %1365, 0
  br i1 %1366, label %1367, label %1415

1367:                                             ; preds = %1350, %1308, %1311, %1361, %1359, %1364
  %1368 = load i32, i32* %193, align 8
  %1369 = and i32 %1368, 48
  %1370 = icmp eq i32 %1369, 0
  br i1 %1370, label %1371, label %1411

1371:                                             ; preds = %1367
  %1372 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %184, align 8
  %1373 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %217, align 8
  %1374 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1373, i64 0, i32 3, i32 0, i32 0, i32 0
  %1375 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1374, align 8
  %1376 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1372, i64 0, i32 3, i32 0, i32 0, i32 0
  %1377 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1376, align 8
  %1378 = icmp eq %"class.WTF::StringImpl"* %1375, %1377
  br i1 %1378, label %1404, label %1379

1379:                                             ; preds = %1371
  %1380 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %185, align 8
  %1381 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1380, i64 0, i32 3, i32 0, i32 0, i32 0
  %1382 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1381, align 8
  %1383 = icmp eq %"class.WTF::StringImpl"* %1375, %1382
  br i1 %1383, label %1404, label %1384

1384:                                             ; preds = %1379
  %1385 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %186, align 8
  %1386 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1385, i64 0, i32 3, i32 0, i32 0, i32 0
  %1387 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1386, align 8
  %1388 = icmp eq %"class.WTF::StringImpl"* %1375, %1387
  br i1 %1388, label %1404, label %1389

1389:                                             ; preds = %1384
  %1390 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %187, align 8
  %1391 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1390, i64 0, i32 3, i32 0, i32 0, i32 0
  %1392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1391, align 8
  %1393 = icmp eq %"class.WTF::StringImpl"* %1375, %1392
  br i1 %1393, label %1404, label %1394

1394:                                             ; preds = %1389
  %1395 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %188, align 8
  %1396 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1395, i64 0, i32 3, i32 0, i32 0, i32 0
  %1397 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1396, align 8
  %1398 = icmp eq %"class.WTF::StringImpl"* %1375, %1397
  br i1 %1398, label %1404, label %1399

1399:                                             ; preds = %1394
  %1400 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %189, align 8
  %1401 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1400, i64 0, i32 3, i32 0, i32 0, i32 0
  %1402 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1401, align 8
  %1403 = icmp eq %"class.WTF::StringImpl"* %1375, %1402
  br i1 %1403, label %1404, label %1411

1404:                                             ; preds = %1371, %1379, %1384, %1389, %1394, %1399
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %190) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::Node"* nonnull dereferenceable(64) %192) #11
  %1405 = call %"class.blink::Node"* @_ZN5blink26HighestEnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleEPS7_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, i1 (%"class.blink::Node"*)* nonnull @_ZN5blinkL19IsHTMLHeaderElementEPKNS_4NodeE, i32 1, %"class.blink::Node"* null) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %190) #11
  %1406 = icmp eq %"class.blink::Node"* %1405, null
  br i1 %1406, label %1411, label %1407

1407:                                             ; preds = %1404
  %1408 = bitcast %"class.blink::Node"* %1405 to %"class.blink::Element"*
  call void @_ZN5blink23ReplaceSelectionCommand24MoveElementOutOfAncestorEPNS_7ElementES2_PNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::Element"* nonnull %215, %"class.blink::Element"* nonnull %1408, %"class.blink::EditingState"* %2)
  %1409 = load i8, i8* %183, align 1, !range !5
  %1410 = icmp eq i8 %1409, 0
  br i1 %1410, label %1411, label %1415

1411:                                             ; preds = %209, %1407, %1404, %1367, %1399
  %1412 = icmp eq %"class.blink::Node"* %211, null
  %1413 = icmp eq %"class.blink::Node"* %211, %28
  %1414 = or i1 %1412, %1413
  br i1 %1414, label %1415, label %191

1415:                                             ; preds = %1411, %1407, %1364, %27
  ret void
}

declare %"class.blink::Element"* @_ZN5blink23EnclosingElementWithTagERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_13QualifiedNameE(%"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ReplaceSelectionCommand24MoveElementOutOfAncestorEPNS_7ElementES2_PNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"*, %"class.blink::Element"*, %"class.blink::Element"*, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %11 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %10) #11
  %12 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %11, i64 0, i32 0
  %13 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %12) #11
  br i1 %13, label %14, label %89

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::Document"*, %"class.blink::Document"** %15, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %16, i32 7) #11
  %17 = bitcast %"class.blink::VisiblePositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  %19 = bitcast %"class.blink::VisiblePositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #11
  %20 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::Node"* dereferenceable(64) %20) #11
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11
  %21 = bitcast %"class.blink::VisiblePositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #11
  %22 = bitcast %"class.blink::VisiblePositionTemplate"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18LastPositionInNodeERKNS_4NodeE(%"class.blink::VisiblePositionTemplate"* nonnull sret %7, %"class.blink::Node"* dereferenceable(64) %10) #11
  %23 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %5, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %8, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %24) #11
  %25 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %7, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %9, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %26) #11
  %27 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  %30 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  br i1 %29, label %32, label %35

32:                                               ; preds = %14
  %33 = icmp eq %"class.blink::Node"* %31, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  %34 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  br i1 %33, label %56, label %71

35:                                               ; preds = %14
  %36 = icmp eq %"class.blink::Node"* %28, %31
  br i1 %36, label %37, label %47

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %43, label %47

43:                                               ; preds = %37
  %44 = icmp eq i32 %39, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  %46 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  br label %56

47:                                               ; preds = %37, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  %48 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  br label %71

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %51, %53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #11
  %55 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  br i1 %54, label %56, label %71

56:                                               ; preds = %32, %45, %49
  %57 = phi %"class.blink::CompositeEditCommand"* [ %46, %45 ], [ %55, %49 ], [ %34, %32 ]
  call void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %57, %"class.blink::Node"* %20, %"class.blink::EditingState"* %3, i32 1) #11
  %58 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %3, i64 0, i32 0
  %59 = load i8, i8* %58, align 1, !range !5
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %86

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %63 = load %"class.blink::Node"*, %"class.blink::Node"** %62, align 8
  %64 = icmp eq %"class.blink::Node"* %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  call void @_ZN5blink20CompositeEditCommand16InsertNodeBeforeEPNS_4NodeES2_PNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %57, %"class.blink::Node"* %20, %"class.blink::Node"* nonnull %63, %"class.blink::EditingState"* %3, i32 1) #11
  br label %68

66:                                               ; preds = %61
  %67 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %10) #11
  call void @_ZN5blink20CompositeEditCommand10AppendNodeEPNS_4NodeEPNS_13ContainerNodeEPNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %57, %"class.blink::Node"* %20, %"class.blink::ContainerNode"* %67, %"class.blink::EditingState"* %3) #11
  br label %68

68:                                               ; preds = %66, %65
  %69 = load i8, i8* %58, align 1, !range !5
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %80, label %86

71:                                               ; preds = %32, %47, %49
  %72 = phi %"class.blink::CompositeEditCommand"* [ %48, %47 ], [ %55, %49 ], [ %34, %32 ]
  %73 = call %"class.blink::Node"* @_ZN5blink20CompositeEditCommand15SplitTreeToNodeEPNS_4NodeES2_b(%"class.blink::CompositeEditCommand"* %72, %"class.blink::Node"* %20, %"class.blink::Node"* %10, i1 zeroext true) #11
  call void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %72, %"class.blink::Node"* %20, %"class.blink::EditingState"* %3, i32 1) #11
  %74 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %3, i64 0, i32 0
  %75 = load i8, i8* %74, align 1, !range !5
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %86

77:                                               ; preds = %71
  call void @_ZN5blink20CompositeEditCommand16InsertNodeBeforeEPNS_4NodeES2_PNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %72, %"class.blink::Node"* %20, %"class.blink::Node"* %73, %"class.blink::EditingState"* %3, i32 1) #11
  %78 = load i8, i8* %74, align 1, !range !5
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %86

80:                                               ; preds = %68, %77
  %81 = phi %"class.blink::CompositeEditCommand"* [ %72, %77 ], [ %57, %68 ]
  %82 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %83 = load %"class.blink::Node"*, %"class.blink::Node"** %82, align 8
  %84 = icmp eq %"class.blink::Node"* %83, null
  br i1 %84, label %85, label %86

85:                                               ; preds = %80
  call void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %81, %"class.blink::Node"* %10, %"class.blink::EditingState"* %3, i32 1) #11
  br label %86

86:                                               ; preds = %68, %56, %80, %71, %85, %77
  %87 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %7, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %87) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #11
  %88 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %5, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %88) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  br label %89

89:                                               ; preds = %4, %86
  ret void
}

declare %"class.blink::Node"* @_ZN5blink26HighestEnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleEPS7_(%"class.blink::PositionTemplate"* dereferenceable(16), i1 (%"class.blink::Node"*)*, i32, %"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::EditingState"*, i32) unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand16InsertNodeBeforeEPNS_4NodeES2_PNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::EditingState"*, i32) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand10AppendNodeEPNS_4NodeEPNS_13ContainerNodeEPNS_12EditingStateE(%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::ContainerNode"*, %"class.blink::EditingState"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink20CompositeEditCommand15SplitTreeToNodeEPNS_4NodeES2_b(%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::Node"*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ReplaceSelectionCommand31RemoveUnrenderedTextNodesAtEndsERNS0_13InsertedNodesE(%"class.blink::ReplaceSelectionCommand"*, %"class.blink::ReplaceSelectionCommand::InsertedNodes"* nocapture dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::IgnorableEditingAbortState", align 1
  %6 = alloca %"class.blink::IgnorableEditingAbortState", align 1
  %7 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %8, i32 7) #11
  %9 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand::InsertedNodes", %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %1, i64 0, i32 1
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %85, label %12

12:                                               ; preds = %2
  %13 = tail call dereferenceable(64) %"class.blink::Node"* @_ZN5blink13NodeTraversal16LastWithinOrSelfERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %10) #11
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %85, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 12
  %19 = icmp eq i32 %18, 4
  br i1 %19, label %20, label %85

20:                                               ; preds = %15
  %21 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #11
  %22 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #11
  %23 = and i32 %17, 1
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 6, i32 0, i32 0
  %26 = bitcast %"class.blink::NodeData"** %25 to %"class.blink::NodeRareData"**
  %27 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %27, i64 0, i32 1, i32 0, i32 0
  %29 = bitcast %"class.blink::NodeData"** %25 to %"class.blink::NodeRenderingData"**
  %30 = select i1 %24, %"class.blink::NodeRenderingData"** %29, %"class.blink::NodeRenderingData"** %28
  %31 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %31, i64 0, i32 1
  %33 = bitcast %"class.blink::LayoutObject"** %32 to %"class.blink::LayoutText"**
  %34 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %33, align 8
  %35 = icmp eq %"class.blink::LayoutText"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %20
  %37 = tail call i32 @_ZNK5blink10LayoutText18ResolvedTextLengthEv(%"class.blink::LayoutText"* nonnull %34) #11
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %84

39:                                               ; preds = %36, %20
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::Node"* nonnull dereferenceable(64) %13) #11
  %40 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE to %"class.blink::QualifiedName"**), align 8
  %41 = call %"class.blink::Element"* @_ZN5blink23EnclosingElementWithTagERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_13QualifiedNameE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, %"class.blink::QualifiedName"* dereferenceable(8) %40) #11
  %42 = icmp eq %"class.blink::Element"* %41, null
  br i1 %42, label %43, label %83

43:                                               ; preds = %39
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::Node"* nonnull dereferenceable(64) %13) #11
  %44 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kScriptTagE to %"class.blink::QualifiedName"**), align 8
  %45 = call %"class.blink::Element"* @_ZN5blink23EnclosingElementWithTagERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_13QualifiedNameE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::QualifiedName"* dereferenceable(8) %44) #11
  %46 = icmp eq %"class.blink::Element"* %45, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  br i1 %46, label %47, label %85

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand::InsertedNodes", %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %1, i64 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, %13
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %52 = icmp eq %"class.blink::Node"* %51, %13
  br i1 %50, label %53, label %64

53:                                               ; preds = %47
  br i1 %52, label %54, label %56

54:                                               ; preds = %53
  %55 = bitcast %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #11
  br label %67

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 5, i32 0, i32 0
  %58 = load %"class.blink::Node"*, %"class.blink::Node"** %57, align 8
  %59 = icmp eq %"class.blink::Node"* %58, null
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %13) #11
  br label %62

62:                                               ; preds = %60, %56
  %63 = phi %"class.blink::Node"* [ %61, %60 ], [ %58, %56 ]
  store %"class.blink::Node"* %63, %"class.blink::Node"** %48, align 8
  br label %67

64:                                               ; preds = %47
  br i1 %52, label %65, label %67

65:                                               ; preds = %64
  %66 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal23PreviousAbsoluteSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %13, %"class.blink::Node"* null) #11
  store %"class.blink::Node"* %66, %"class.blink::Node"** %9, align 8
  br label %67

67:                                               ; preds = %65, %64, %62, %54
  %68 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand::InsertedNodes", %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %1, i64 0, i32 2
  %69 = load %"class.blink::Node"*, %"class.blink::Node"** %68, align 8
  %70 = call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* nonnull %13, %"class.blink::Node"* %69) #11
  br i1 %70, label %71, label %79

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %13, i64 0, i32 5, i32 0, i32 0
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %72, align 8
  %74 = icmp eq %"class.blink::Node"* %73, null
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %13) #11
  br label %77

77:                                               ; preds = %75, %71
  %78 = phi %"class.blink::Node"* [ %76, %75 ], [ %73, %71 ]
  store %"class.blink::Node"* %78, %"class.blink::Node"** %68, align 8
  br label %79

79:                                               ; preds = %67, %77
  %80 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %81 = getelementptr inbounds %"class.blink::IgnorableEditingAbortState", %"class.blink::IgnorableEditingAbortState"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %81) #11
  call void @_ZN5blink26IgnorableEditingAbortStateC1Ev(%"class.blink::IgnorableEditingAbortState"* nonnull %5) #11
  %82 = getelementptr inbounds %"class.blink::IgnorableEditingAbortState", %"class.blink::IgnorableEditingAbortState"* %5, i64 0, i32 0
  call void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %80, %"class.blink::Node"* nonnull %13, %"class.blink::EditingState"* nonnull %82, i32 1) #11
  call void @_ZN5blink26IgnorableEditingAbortStateD1Ev(%"class.blink::IgnorableEditingAbortState"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %81) #11
  br label %85

83:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  br label %85

84:                                               ; preds = %36
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  br label %85

85:                                               ; preds = %2, %12, %15, %84, %83, %79, %43
  %86 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand::InsertedNodes", %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %1, i64 0, i32 0
  %87 = load %"class.blink::Node"*, %"class.blink::Node"** %86, align 8
  %88 = icmp eq %"class.blink::Node"* %87, null
  br i1 %88, label %148, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %87, i64 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, 12
  %93 = icmp eq i32 %92, 4
  br i1 %93, label %94, label %148

94:                                               ; preds = %89
  %95 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %95, i32 7) #11
  %96 = load i32, i32* %90, align 8
  %97 = and i32 %96, 1
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %87, i64 0, i32 6, i32 0, i32 0
  %100 = bitcast %"class.blink::NodeData"** %99 to %"class.blink::NodeRareData"**
  %101 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %101, i64 0, i32 1, i32 0, i32 0
  %103 = bitcast %"class.blink::NodeData"** %99 to %"class.blink::NodeRenderingData"**
  %104 = select i1 %98, %"class.blink::NodeRenderingData"** %103, %"class.blink::NodeRenderingData"** %102
  %105 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %105, i64 0, i32 1
  %107 = bitcast %"class.blink::LayoutObject"** %106 to %"class.blink::LayoutText"**
  %108 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %107, align 8
  %109 = icmp eq %"class.blink::LayoutText"* %108, null
  br i1 %109, label %113, label %110

110:                                              ; preds = %94
  %111 = call i32 @_ZNK5blink10LayoutText18ResolvedTextLengthEv(%"class.blink::LayoutText"* nonnull %108) #11
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %148

113:                                              ; preds = %110, %94
  %114 = load %"class.blink::Node"*, %"class.blink::Node"** %86, align 8
  %115 = icmp eq %"class.blink::Node"* %114, %87
  %116 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %117 = icmp eq %"class.blink::Node"* %116, %87
  br i1 %115, label %118, label %129

118:                                              ; preds = %113
  br i1 %117, label %119, label %121

119:                                              ; preds = %118
  %120 = bitcast %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 16, i1 false) #11
  br label %132

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %87, i64 0, i32 5, i32 0, i32 0
  %123 = load %"class.blink::Node"*, %"class.blink::Node"** %122, align 8
  %124 = icmp eq %"class.blink::Node"* %123, null
  br i1 %124, label %125, label %127

125:                                              ; preds = %121
  %126 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %87) #11
  br label %127

127:                                              ; preds = %125, %121
  %128 = phi %"class.blink::Node"* [ %126, %125 ], [ %123, %121 ]
  store %"class.blink::Node"* %128, %"class.blink::Node"** %86, align 8
  br label %132

129:                                              ; preds = %113
  br i1 %117, label %130, label %132

130:                                              ; preds = %129
  %131 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal23PreviousAbsoluteSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %87, %"class.blink::Node"* null) #11
  store %"class.blink::Node"* %131, %"class.blink::Node"** %9, align 8
  br label %132

132:                                              ; preds = %130, %129, %127, %119
  %133 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand::InsertedNodes", %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %1, i64 0, i32 2
  %134 = load %"class.blink::Node"*, %"class.blink::Node"** %133, align 8
  %135 = call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* nonnull %87, %"class.blink::Node"* %134) #11
  br i1 %135, label %136, label %144

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %87, i64 0, i32 5, i32 0, i32 0
  %138 = load %"class.blink::Node"*, %"class.blink::Node"** %137, align 8
  %139 = icmp eq %"class.blink::Node"* %138, null
  br i1 %139, label %140, label %142

140:                                              ; preds = %136
  %141 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %87) #11
  br label %142

142:                                              ; preds = %140, %136
  %143 = phi %"class.blink::Node"* [ %141, %140 ], [ %138, %136 ]
  store %"class.blink::Node"* %143, %"class.blink::Node"** %133, align 8
  br label %144

144:                                              ; preds = %132, %142
  %145 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %146 = getelementptr inbounds %"class.blink::IgnorableEditingAbortState", %"class.blink::IgnorableEditingAbortState"* %6, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %146) #11
  call void @_ZN5blink26IgnorableEditingAbortStateC1Ev(%"class.blink::IgnorableEditingAbortState"* nonnull %6) #11
  %147 = getelementptr inbounds %"class.blink::IgnorableEditingAbortState", %"class.blink::IgnorableEditingAbortState"* %6, i64 0, i32 0
  call void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %145, %"class.blink::Node"* nonnull %87, %"class.blink::EditingState"* nonnull %147, i32 1) #11
  call void @_ZN5blink26IgnorableEditingAbortStateD1Ev(%"class.blink::IgnorableEditingAbortState"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %146) #11
  br label %148

148:                                              ; preds = %110, %89, %85, %144
  ret void
}

declare void @_ZN5blink26IgnorableEditingAbortStateC1Ev(%"class.blink::IgnorableEditingAbortState"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink26IgnorableEditingAbortStateD1Ev(%"class.blink::IgnorableEditingAbortState"*) unnamed_addr #3

declare void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::VisiblePositionTemplate"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ReplaceSelectionCommand16MergeEndIfNeededEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"*, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %4 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %5 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %6 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %12 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %13 = alloca %"class.blink::PositionWithAffinityTemplate", align 8
  %14 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %15 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %16 = alloca %"class.blink::PositionTemplate", align 8
  %17 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %18 = alloca %"class.blink::PositionTemplate", align 8
  %19 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %20 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 12
  %21 = load i8, i8* %20, align 1, !range !5
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %245, label %23

23:                                               ; preds = %2
  %24 = bitcast %"class.blink::VisiblePositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast %"class.blink::VisiblePositionTemplate"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  %27 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8, !noalias !9
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %27, i32 7) #11, !noalias !9
  %28 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 1
  %29 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8, !noalias !9
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %23
  %33 = tail call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* %28) #11
  br i1 %33, label %35, label %34

34:                                               ; preds = %32
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::VisiblePositionTemplate"* nonnull %3) #11
  br label %36

35:                                               ; preds = %32, %23
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %3, %"class.blink::PositionTemplate"* dereferenceable(16) %28, i32 1) #11
  br label %36

36:                                               ; preds = %34, %35
  %37 = bitcast %"class.blink::VisiblePositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %4, i64 0, i32 0, i32 1
  %39 = bitcast %"class.blink::VisiblePositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink23ReplaceSelectionCommand30PositionAtEndOfInsertedContentEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %4, %"class.blink::ReplaceSelectionCommand"* %0)
  %40 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 9
  %41 = load i8, i8* %40, align 1, !range !5
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %242

43:                                               ; preds = %36
  %44 = call zeroext i1 @_ZN5blink15InSameParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_NS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %3, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %4, i32 1) #11
  br i1 %44, label %50, label %45

45:                                               ; preds = %43
  %46 = bitcast %"class.blink::VisiblePositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %5, i64 0, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %5, i64 0, i32 0, i32 1
  %49 = bitcast %"class.blink::VisiblePositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  br label %56

50:                                               ; preds = %43
  %51 = call zeroext i1 @_ZN5blink18IsStartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %3, i32 1) #11
  %52 = bitcast %"class.blink::VisiblePositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #11
  %53 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %5, i64 0, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %5, i64 0, i32 0, i32 1
  %55 = bitcast %"class.blink::VisiblePositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  br i1 %51, label %56, label %64

56:                                               ; preds = %50, %45
  %57 = phi i32* [ %48, %45 ], [ %54, %50 ]
  %58 = phi i32* [ %47, %45 ], [ %53, %50 ]
  %59 = phi i8* [ %46, %45 ], [ %52, %50 ]
  call void @_ZN5blink14NextPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %5, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %4, i32 0) #11
  %60 = bitcast %"class.blink::VisiblePositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #11
  %61 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %6, i64 0, i32 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %6, i64 0, i32 0, i32 1
  %63 = bitcast %"class.blink::VisiblePositionTemplate"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 24, i1 false)
  call void @_ZN5blink16StartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %6, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %4, i32 1) #11
  br label %72

64:                                               ; preds = %50
  %65 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %5, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %4, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %65, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %66) #11
  %67 = load i32, i32* %38, align 8
  store i32 %67, i32* %54, align 8
  %68 = bitcast %"class.blink::VisiblePositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #11
  %69 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %6, i64 0, i32 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %6, i64 0, i32 0, i32 1
  %71 = bitcast %"class.blink::VisiblePositionTemplate"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 24, i1 false)
  call void @_ZN5blink14NextPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %6, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %4, i32 0) #11
  br label %72

72:                                               ; preds = %64, %56
  %73 = phi i32* [ %70, %64 ], [ %62, %56 ]
  %74 = phi i32* [ %69, %64 ], [ %61, %56 ]
  %75 = phi i8* [ %68, %64 ], [ %60, %56 ]
  %76 = phi i1 [ false, %64 ], [ true, %56 ]
  %77 = phi i8* [ %52, %64 ], [ %59, %56 ]
  %78 = phi i32* [ %53, %64 ], [ %58, %56 ]
  %79 = phi i32* [ %54, %64 ], [ %57, %56 ]
  %80 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #11
  %81 = bitcast %"class.blink::VisiblePositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #11
  call void @_ZN5blink14EndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %8, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %6, i32 1) #11
  %82 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %8, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %82) #11
  %83 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #11
  %84 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %5, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %9, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %84) #11
  %85 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %85, align 8
  %87 = icmp eq %"class.blink::Node"* %86, null
  %88 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.blink::Node"*, %"class.blink::Node"** %88, align 8
  br i1 %87, label %90, label %92

90:                                               ; preds = %72
  %91 = icmp eq %"class.blink::Node"* %89, null
  br label %108

92:                                               ; preds = %72
  %93 = icmp eq %"class.blink::Node"* %86, %89
  br i1 %93, label %94, label %167

94:                                               ; preds = %92
  %95 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %96, %98
  br i1 %99, label %100, label %165

100:                                              ; preds = %94
  %101 = icmp eq i32 %96, 0
  br i1 %101, label %102, label %111

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 1
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %104, %106
  br label %108

108:                                              ; preds = %90, %102
  %109 = phi i1 [ %91, %90 ], [ %107, %102 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #11
  %110 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %8, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %110) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #11
  br i1 %109, label %113, label %169

111:                                              ; preds = %100
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #11
  %112 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %8, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %112) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #11
  br label %113

113:                                              ; preds = %111, %108
  %114 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  %115 = call %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %114) #11
  %116 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %117 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %115, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #11
  %119 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %6, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %10, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %119) #11
  %120 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 0, i32 0, i32 0
  %121 = load %"class.blink::Node"*, %"class.blink::Node"** %120, align 8
  call void @_ZN5blink20CompositeEditCommand16InsertNodeBeforeEPNS_4NodeES2_PNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %116, %"class.blink::Node"* %117, %"class.blink::Node"* %121, %"class.blink::EditingState"* %1, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #11
  %122 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %1, i64 0, i32 0
  %123 = load i8, i8* %122, align 1, !range !5
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %239

125:                                              ; preds = %113
  %126 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %126, i32 7) #11
  %127 = bitcast %"class.blink::VisiblePositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #11
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::VisiblePositionTemplate"* nonnull sret %11, %"class.blink::Node"* dereferenceable(64) %117) #11
  %128 = bitcast %"class.blink::VisiblePositionTemplate"* %11 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.blink::VisiblePositionTemplate"* %5 to i64*
  store atomic i64 %129, i64* %130 monotonic, align 8
  %131 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %125
  %134 = inttoptr i64 %129 to i8*
  %135 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %134) #11
  br label %136

136:                                              ; preds = %125, %133
  %137 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %11, i64 0, i32 0, i32 0, i32 1
  %138 = bitcast i32* %137 to i64*
  %139 = bitcast i32* %78 to i64*
  %140 = load i64, i64* %138, align 8
  store i64 %140, i64* %139, align 8
  %141 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %11, i64 0, i32 0, i32 1
  %142 = load i32, i32* %141, align 8
  store i32 %142, i32* %79, align 8
  %143 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %11, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %143) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #11
  %144 = bitcast %"class.blink::VisiblePositionTemplate"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144) #11
  %145 = bitcast %"class.blink::PositionWithAffinityTemplate"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #11
  %146 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %13, i64 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %146, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %119) #11
  %147 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %13, i64 0, i32 1
  %148 = load i32, i32* %73, align 8, !noalias !12
  store i32 %148, i32* %147, align 8, !alias.scope !12
  call void @_ZN5blink21CreateVisiblePositionERKNS_28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* nonnull sret %12, %"class.blink::PositionWithAffinityTemplate"* nonnull dereferenceable(24) %13) #11
  %149 = bitcast %"class.blink::VisiblePositionTemplate"* %12 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::VisiblePositionTemplate"* %6 to i64*
  store atomic i64 %150, i64* %151 monotonic, align 8
  %152 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %157, label %154

154:                                              ; preds = %136
  %155 = inttoptr i64 %150 to i8*
  %156 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %155) #11
  br label %157

157:                                              ; preds = %136, %154
  %158 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %12, i64 0, i32 0, i32 0, i32 1
  %159 = bitcast i32* %158 to i64*
  %160 = bitcast i32* %74 to i64*
  %161 = load i64, i64* %159, align 8
  store i64 %161, i64* %160, align 8
  %162 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %12, i64 0, i32 0, i32 1
  %163 = load i32, i32* %162, align 8
  store i32 %163, i32* %73, align 8
  %164 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %12, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %164) #11
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144) #11
  br label %169

165:                                              ; preds = %94
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #11
  %166 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %8, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %166) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #11
  br label %169

167:                                              ; preds = %92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #11
  %168 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %8, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %168) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #11
  br label %169

169:                                              ; preds = %167, %165, %157, %108
  %170 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %171 = bitcast %"class.blink::VisiblePositionTemplate"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171) #11
  call void @_ZN5blink14EndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %14, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %6, i32 1) #11
  call void @_ZN5blink20CompositeEditCommand13MoveParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_S7_PNS_12EditingStateENS0_23ShouldPreserveSelectionENS0_19ShouldPreserveStyleEPNS_4NodeE(%"class.blink::CompositeEditCommand"* %170, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %6, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %14, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %5, %"class.blink::EditingState"* %1, i32 1, i32 0, %"class.blink::Node"* null) #11
  %172 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %14, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %172) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #11
  %173 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %1, i64 0, i32 0
  %174 = load i8, i8* %173, align 1, !range !5
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %176, label %239

176:                                              ; preds = %169
  %177 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %177, i32 7) #11
  br i1 %76, label %178, label %239

178:                                              ; preds = %176
  %179 = bitcast %"class.blink::VisibleSelectionTemplate"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %179) #11
  call void @_ZNK5blink20CompositeEditCommand22EndingVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %15, %"class.blink::CompositeEditCommand"* %170) #11
  %180 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %181 = icmp eq %"class.blink::Node"* %180, null
  br i1 %181, label %203, label %182

182:                                              ; preds = %178
  %183 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* %28) #11
  br i1 %183, label %203, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.blink::PositionTemplate"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #11
  %186 = bitcast %"class.blink::VisiblePositionTemplate"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %186) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE12VisibleStartEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %17, %"class.blink::VisibleSelectionTemplate"* nonnull %15) #11
  %187 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %17, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %16, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %187) #11
  %188 = bitcast %"class.blink::PositionTemplate"* %16 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = bitcast %"class.blink::PositionTemplate"* %28 to i64*
  store atomic i64 %189, i64* %190 monotonic, align 8
  %191 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %196, label %193

193:                                              ; preds = %184
  %194 = inttoptr i64 %189 to i8*
  %195 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %194) #11
  br label %196

196:                                              ; preds = %184, %193
  %197 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 1, i32 1
  %198 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %16, i64 0, i32 1
  %199 = bitcast i32* %198 to i64*
  %200 = bitcast i32* %197 to i64*
  %201 = load i64, i64* %199, align 8
  store i64 %201, i64* %200, align 8
  %202 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %17, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %202) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %186) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #11
  br label %203

203:                                              ; preds = %182, %178, %196
  %204 = bitcast %"class.blink::PositionTemplate"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %204) #11
  %205 = bitcast %"class.blink::VisiblePositionTemplate"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %205) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10VisibleEndEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %19, %"class.blink::VisibleSelectionTemplate"* nonnull %15) #11
  %206 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %19, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %18, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %206) #11
  %207 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 2
  %208 = bitcast %"class.blink::PositionTemplate"* %18 to i64*
  %209 = load i64, i64* %208, align 8
  %210 = bitcast %"class.blink::PositionTemplate"* %207 to i64*
  store atomic i64 %209, i64* %210 monotonic, align 8
  %211 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %216, label %213

213:                                              ; preds = %203
  %214 = inttoptr i64 %209 to i8*
  %215 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %214) #11
  br label %216

216:                                              ; preds = %203, %213
  %217 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 2, i32 1
  %218 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %18, i64 0, i32 1
  %219 = bitcast i32* %218 to i64*
  %220 = bitcast i32* %217 to i64*
  %221 = load i64, i64* %219, align 8
  store i64 %221, i64* %220, align 8
  %222 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %19, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %222) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %205) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %204) #11
  %223 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %207, i64 0, i32 0, i32 0, i32 0
  %224 = load %"class.blink::Node"*, %"class.blink::Node"** %223, align 8
  %225 = icmp eq %"class.blink::Node"* %224, null
  br i1 %225, label %226, label %238

226:                                              ; preds = %216
  %227 = bitcast %"class.blink::PositionTemplate"* %28 to i64*
  %228 = load i64, i64* %227, align 8
  store atomic i64 %228, i64* %210 monotonic, align 8
  %229 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %234, label %231

231:                                              ; preds = %226
  %232 = inttoptr i64 %228 to i8*
  %233 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %232) #11
  br label %234

234:                                              ; preds = %226, %231
  %235 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 1, i32 1
  %236 = bitcast i32* %235 to i64*
  %237 = load i64, i64* %236, align 8
  store i64 %237, i64* %220, align 8
  br label %238

238:                                              ; preds = %234, %216
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %179) #11
  br label %239

239:                                              ; preds = %113, %169, %176, %238
  %240 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %6, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %240) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #11
  %241 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %5, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %241) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #11
  br label %242

242:                                              ; preds = %36, %239
  %243 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %4, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %243) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  %244 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %3, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %244) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #11
  br label %245

245:                                              ; preds = %2, %242
  ret void
}

declare zeroext i1 @_ZN5blink15InSameParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_NS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* dereferenceable(24), %"class.blink::VisiblePositionTemplate"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZN5blink16StartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::VisiblePositionTemplate"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZN5blink14EndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::VisiblePositionTemplate"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink21CreateVisiblePositionERKNS_28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::PositionWithAffinityTemplate"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"*) unnamed_addr #3

declare void @_ZN5blink20CompositeEditCommand13MoveParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_S7_PNS_12EditingStateENS0_23ShouldPreserveSelectionENS0_19ShouldPreserveStyleEPNS_4NodeE(%"class.blink::CompositeEditCommand"*, %"class.blink::VisiblePositionTemplate"* dereferenceable(24), %"class.blink::VisiblePositionTemplate"* dereferenceable(24), %"class.blink::VisiblePositionTemplate"* dereferenceable(24), %"class.blink::EditingState"*, i32, i32, %"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZNK5blink20CompositeEditCommand22EndingVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* sret, %"class.blink::CompositeEditCommand"*) local_unnamed_addr #2

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE12VisibleStartEv(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10VisibleEndEv(%"class.blink::VisiblePositionTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ReplaceSelectionCommand10SetUpStyleERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ReplaceSelectionCommand"* nocapture, %"class.blink::VisibleSelectionTemplate"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::VisibleSelectionTemplate"* %1) #11
  %9 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 6, i32 0, i32 0
  br i1 %14, label %20, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRareData"**
  %18 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %18, i64 0, i32 1, i32 0, i32 0
  br label %22

20:                                               ; preds = %2
  %21 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRenderingData"**
  br label %22

22:                                               ; preds = %16, %20
  %23 = phi %"class.blink::NodeRenderingData"** [ %19, %16 ], [ %21, %20 ]
  %24 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %24, i64 0, i32 1
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = icmp eq %"class.blink::LayoutObject"* %26, null
  %28 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  %29 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #11
  %30 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #11
  br i1 %27, label %112, label %31

31:                                               ; preds = %22
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::VisibleSelectionTemplate"* %1) #11
  %32 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 6, i32 0, i32 0
  br i1 %37, label %43, label %39

39:                                               ; preds = %31
  %40 = bitcast %"class.blink::NodeData"** %38 to %"class.blink::NodeRareData"**
  %41 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %41, i64 0, i32 1, i32 0, i32 0
  br label %45

43:                                               ; preds = %31
  %44 = bitcast %"class.blink::NodeData"** %38 to %"class.blink::NodeRenderingData"**
  br label %45

45:                                               ; preds = %39, %43
  %46 = phi %"class.blink::NodeRenderingData"** [ %42, %39 ], [ %44, %43 ]
  %47 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %47, i64 0, i32 1
  %49 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %49, i64 0, i32 5, i32 0
  %51 = bitcast %"class.blink::ComputedStyle"** %50 to %"class.blink::ComputedStyleBase"**
  %52 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %52, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %54, i64 0, i32 23
  %56 = bitcast [5 x i8]* %55 to i40*
  %57 = load i40, i40* %56, align 8
  %58 = and i40 %57, 201326592
  %59 = icmp eq i40 %58, 134217728
  br i1 %59, label %60, label %111

60:                                               ; preds = %45
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE3EndEv(%"class.blink::PositionTemplate"* nonnull sret %5, %"class.blink::VisibleSelectionTemplate"* %1) #11
  %61 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %62, i64 0, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, 1
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %62, i64 0, i32 6, i32 0, i32 0
  br i1 %66, label %72, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.blink::NodeData"** %67 to %"class.blink::NodeRareData"**
  %70 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %70, i64 0, i32 1, i32 0, i32 0
  br label %74

72:                                               ; preds = %60
  %73 = bitcast %"class.blink::NodeData"** %67 to %"class.blink::NodeRenderingData"**
  br label %74

74:                                               ; preds = %68, %72
  %75 = phi %"class.blink::NodeRenderingData"** [ %71, %68 ], [ %73, %72 ]
  %76 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %76, i64 0, i32 1
  %78 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutObject"* %78, null
  br i1 %79, label %113, label %80

80:                                               ; preds = %74
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE3EndEv(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::VisibleSelectionTemplate"* %1) #11
  %81 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.blink::Node"*, %"class.blink::Node"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 0, i32 6, i32 0, i32 0
  br i1 %86, label %92, label %88

88:                                               ; preds = %80
  %89 = bitcast %"class.blink::NodeData"** %87 to %"class.blink::NodeRareData"**
  %90 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %90, i64 0, i32 1, i32 0, i32 0
  br label %94

92:                                               ; preds = %80
  %93 = bitcast %"class.blink::NodeData"** %87 to %"class.blink::NodeRenderingData"**
  br label %94

94:                                               ; preds = %88, %92
  %95 = phi %"class.blink::NodeRenderingData"** [ %91, %88 ], [ %93, %92 ]
  %96 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %96, i64 0, i32 1
  %98 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %98, i64 0, i32 5, i32 0
  %100 = bitcast %"class.blink::ComputedStyle"** %99 to %"class.blink::ComputedStyleBase"**
  %101 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %101, i64 0, i32 1, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %103, i64 0, i32 23
  %105 = bitcast [5 x i8]* %104 to i40*
  %106 = load i40, i40* %105, align 8
  %107 = and i40 %106, 201326592
  %108 = icmp eq i40 %107, 134217728
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  br i1 %108, label %109, label %114

109:                                              ; preds = %94
  %110 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 6
  store i8 0, i8* %110, align 2
  br label %114

111:                                              ; preds = %45
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  br label %114

112:                                              ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  br label %114

113:                                              ; preds = %74
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  br label %114

114:                                              ; preds = %113, %112, %111, %109, %94
  %115 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 6
  %116 = load i8, i8* %115, align 2, !range !5
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %140, label %118

118:                                              ; preds = %114
  %119 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::VisibleSelectionTemplate"* %1) #11
  %120 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64 32) #11
  %121 = bitcast i8* %120 to %"class.blink::EditingStyle"*
  call void @_ZN5blink12EditingStyleC1ERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"* %121, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7, i32 1) #11
  %122 = getelementptr inbounds i8, i8* %120, i64 -4
  %123 = bitcast i8* %122 to i16*
  %124 = load atomic i16, i16* %123 monotonic, align 2
  %125 = or i16 %124, 1
  store atomic i16 %125, i16* %123 release, align 2
  %126 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 3
  %127 = ptrtoint i8* %120 to i64
  %128 = bitcast %"class.blink::Member.1445"* %126 to i64*
  store atomic i64 %127, i64* %128 monotonic, align 8
  %129 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %130 = icmp eq i32 %129, 0
  %131 = bitcast i8* %120 to %"class.blink::EditingStyle"*
  br i1 %130, label %136, label %132

132:                                              ; preds = %118
  %133 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %120) #11
  %134 = getelementptr inbounds %"class.blink::Member.1445", %"class.blink::Member.1445"* %126, i64 0, i32 0, i32 0
  %135 = load %"class.blink::EditingStyle"*, %"class.blink::EditingStyle"** %134, align 8
  br label %136

136:                                              ; preds = %118, %132
  %137 = phi %"class.blink::EditingStyle"* [ %131, %118 ], [ %135, %132 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #11
  %138 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %139 = load %"class.blink::Document"*, %"class.blink::Document"** %138, align 8
  call void @_ZN5blink12EditingStyle16MergeTypingStyleEPNS_8DocumentE(%"class.blink::EditingStyle"* %137, %"class.blink::Document"* %139) #11
  br label %140

140:                                              ; preds = %114, %136
  ret void
}

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE3EndEv(%"class.blink::PositionTemplate"* sret, %"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink12EditingStyle16MergeTypingStyleEPNS_8DocumentE(%"class.blink::EditingStyle"*, %"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ReplaceSelectionCommand31InsertParagraphSeparatorIfNeedsERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_19ReplacementFragmentEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"*, %"class.blink::VisibleSelectionTemplate"* dereferenceable(40), %"class.blink::ReplacementFragment"* nocapture readonly dereferenceable(24), %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %6 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::DeleteSelectionOptions", align 1
  %11 = alloca %"class.blink::DeleteSelectionOptions::Builder", align 1
  %12 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %13 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %14 = alloca %"class.blink::SelectionForUndoStep", align 8
  %15 = alloca %"class.blink::SelectionTemplate", align 8
  %16 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %17 = alloca %"class.blink::PositionTemplate", align 8
  %18 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %19 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %20 = alloca %"class.blink::SelectionForUndoStep", align 8
  %21 = alloca %"class.blink::SelectionTemplate", align 8
  %22 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %23 = alloca %"class.blink::PositionTemplate", align 8
  %24 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %25 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %26 = alloca %"class.blink::SelectionForUndoStep", align 8
  %27 = alloca %"class.blink::SelectionTemplate", align 8
  %28 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %29 = alloca %"class.blink::PositionTemplate", align 8
  %30 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %31 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %32 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %33 = bitcast %"class.blink::VisiblePositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  %34 = bitcast %"class.blink::VisiblePositionTemplate"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE12VisibleStartEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %5, %"class.blink::VisibleSelectionTemplate"* %1) #11
  %35 = bitcast %"class.blink::VisiblePositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #11
  %36 = bitcast %"class.blink::VisiblePositionTemplate"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10VisibleEndEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %6, %"class.blink::VisibleSelectionTemplate"* %1) #11
  %37 = call zeroext i1 @_ZN5blink16IsEndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %6, i32 1) #11
  %38 = call zeroext i1 @_ZN5blink18IsStartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %5, i32 1) #11
  %39 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %5, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %40) #11
  %41 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %41, align 8
  %43 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %42, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #11
  %44 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::VisibleSelectionTemplate"* %1) #11
  %45 = call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %8, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink27IsMailHTMLBlockquoteElementEPKNS_4NodeE, i32 0) #11
  %46 = icmp ne %"class.blink::Node"* %45, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #11
  %47 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"class.blink::VisibleSelectionTemplate", %"class.blink::VisibleSelectionTemplate"* %1, i64 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %9, %"class.blink::PositionTemplate"* dereferenceable(16) %48) #11
  %49 = call zeroext i1 @_ZN5blink24IsRichlyEditablePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #11
  %50 = call %"class.blink::Element"* @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19RootEditableElementEv(%"class.blink::VisibleSelectionTemplate"* %1) #11
  %51 = and i1 %37, %38
  %52 = xor i1 %46, true
  %53 = and i1 %51, %52
  %54 = icmp eq %"class.blink::Element"* %43, %50
  %55 = or i1 %53, %54
  br i1 %55, label %61, label %56

56:                                               ; preds = %4
  %57 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %43, i64 0, i32 0, i32 0
  %58 = call zeroext i1 @_ZN5blink10IsListItemEPKNS_4NodeE(%"class.blink::Node"* %57) #11
  %59 = xor i1 %49, true
  %60 = or i1 %58, %59
  br i1 %60, label %61, label %63

61:                                               ; preds = %56, %4
  %62 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 8
  store i8 0, i8* %62, align 8
  br label %63

63:                                               ; preds = %56, %61
  %64 = call zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7IsRangeEv(%"class.blink::VisibleSelectionTemplate"* %1) #11
  br i1 %64, label %65, label %105

65:                                               ; preds = %63
  br i1 %46, label %70, label %66

66:                                               ; preds = %65
  %67 = call zeroext i1 @_ZN5blink16IsEndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %6, i32 1) #11
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = call zeroext i1 @_ZN5blink14IsStartOfBlockERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %5) #11
  br label %70

70:                                               ; preds = %68, %66, %65
  %71 = phi i1 [ true, %66 ], [ true, %65 ], [ %69, %68 ]
  %72 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %73 = getelementptr inbounds %"class.blink::DeleteSelectionOptions", %"class.blink::DeleteSelectionOptions"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %73) #11
  %74 = getelementptr inbounds %"class.blink::DeleteSelectionOptions::Builder", %"class.blink::DeleteSelectionOptions::Builder"* %11, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %74) #11
  call void @_ZN5blink22DeleteSelectionOptions7BuilderC1Ev(%"class.blink::DeleteSelectionOptions::Builder"* nonnull %11) #11
  %75 = call dereferenceable(4) %"class.blink::DeleteSelectionOptions::Builder"* @_ZN5blink22DeleteSelectionOptions7Builder25SetMergeBlocksAfterDeleteEb(%"class.blink::DeleteSelectionOptions::Builder"* nonnull %11, i1 zeroext %71) #11
  %76 = call dereferenceable(4) %"class.blink::DeleteSelectionOptions::Builder"* @_ZN5blink22DeleteSelectionOptions7Builder17SetSanitizeMarkupEb(%"class.blink::DeleteSelectionOptions::Builder"* %75, i1 zeroext true) #11
  call void @_ZNK5blink22DeleteSelectionOptions7Builder5BuildEv(%"class.blink::DeleteSelectionOptions"* nonnull sret %10, %"class.blink::DeleteSelectionOptions::Builder"* %76) #11
  %77 = call zeroext i1 @_ZN5blink20CompositeEditCommand15DeleteSelectionEPNS_12EditingStateERKNS_22DeleteSelectionOptionsE(%"class.blink::CompositeEditCommand"* %72, %"class.blink::EditingState"* %3, %"class.blink::DeleteSelectionOptions"* nonnull dereferenceable(4) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %74) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %73) #11
  br i1 %77, label %78, label %175

78:                                               ; preds = %70
  %79 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %2, i64 0, i32 2
  %80 = load i8, i8* %79, align 8, !range !5
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %175, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %84 = load %"class.blink::Document"*, %"class.blink::Document"** %83, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %84, i32 7) #11
  %85 = bitcast %"class.blink::VisiblePositionTemplate"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #11
  %86 = bitcast %"class.blink::VisibleSelectionTemplate"* %13 to i8*
  %87 = bitcast %"class.blink::VisiblePositionTemplate"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %86) #11
  call void @_ZNK5blink20CompositeEditCommand22EndingVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %13, %"class.blink::CompositeEditCommand"* %72) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE12VisibleStartEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %12, %"class.blink::VisibleSelectionTemplate"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %86) #11
  %88 = call zeroext i1 @_ZN5blink16IsEndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %12, i32 1) #11
  br i1 %88, label %89, label %102

89:                                               ; preds = %82
  %90 = call zeroext i1 @_ZN5blink18IsStartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %12, i32 1) #11
  br i1 %90, label %102, label %91

91:                                               ; preds = %89
  %92 = call zeroext i1 @_ZN5blink35IsEndOfEditableOrNonEditableContentERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %12) #11
  br i1 %92, label %102, label %93

93:                                               ; preds = %91
  %94 = bitcast %"class.blink::SelectionForUndoStep"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %94) #11
  %95 = bitcast %"class.blink::SelectionTemplate"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %95) #11
  %96 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %96) #11
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %16) #11
  %97 = bitcast %"class.blink::PositionTemplate"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #11
  %98 = bitcast %"class.blink::VisiblePositionTemplate"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #11
  call void @_ZN5blink14NextPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %18, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %12, i32 0) #11
  %99 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %18, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %17, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %99) #11
  %100 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %16, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %17) #11
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %15, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %100) #11
  call void @_ZN5blink20SelectionForUndoStep4FromERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::SelectionForUndoStep"* nonnull sret %14, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %15) #11
  call void @_ZN5blink20CompositeEditCommand18SetEndingSelectionERKNS_20SelectionForUndoStepE(%"class.blink::CompositeEditCommand"* %72, %"class.blink::SelectionForUndoStep"* nonnull dereferenceable(48) %14) #11
  %101 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %18, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %101) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %96) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %95) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %94) #11
  br label %103

102:                                              ; preds = %91, %89, %82
  call void @_ZN5blink20CompositeEditCommand24InsertParagraphSeparatorEPNS_12EditingStateEbb(%"class.blink::CompositeEditCommand"* %72, %"class.blink::EditingState"* %3, i1 zeroext false, i1 zeroext false) #11
  br label %103

103:                                              ; preds = %102, %93
  %104 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %12, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %104) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #11
  br label %175

105:                                              ; preds = %63
  %106 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %2, i64 0, i32 2
  %107 = load i8, i8* %106, align 8, !range !5
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %138, label %109

109:                                              ; preds = %105
  %110 = bitcast %"class.blink::VisiblePositionTemplate"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #11
  %111 = bitcast %"class.blink::VisiblePositionTemplate"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 24, i1 false)
  call void @_ZN5blink14NextPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %19, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %5, i32 1) #11
  %112 = call zeroext i1 @_ZN5blink16IsEndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %5, i32 1) #11
  br i1 %112, label %113, label %128

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = call zeroext i1 @_ZN5blink18IsStartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %5, i32 1) #11
  %116 = xor i1 %115, true
  %117 = load %"class.blink::Node"*, %"class.blink::Node"** %114, align 8
  %118 = icmp ne %"class.blink::Node"* %117, null
  %119 = and i1 %118, %116
  br i1 %119, label %120, label %128

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %122 = bitcast %"class.blink::SelectionForUndoStep"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %122) #11
  %123 = bitcast %"class.blink::SelectionTemplate"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %123) #11
  %124 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %124) #11
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %22) #11
  %125 = bitcast %"class.blink::PositionTemplate"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %125) #11
  %126 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %19, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %23, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %126) #11
  %127 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %22, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %23) #11
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %21, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %127) #11
  call void @_ZN5blink20SelectionForUndoStep4FromERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::SelectionForUndoStep"* nonnull sret %20, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %21) #11
  call void @_ZN5blink20CompositeEditCommand18SetEndingSelectionERKNS_20SelectionForUndoStepE(%"class.blink::CompositeEditCommand"* %121, %"class.blink::SelectionForUndoStep"* nonnull dereferenceable(48) %20) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %125) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %124) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %123) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %122) #11
  br label %136

128:                                              ; preds = %113, %109
  %129 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  call void @_ZN5blink20CompositeEditCommand24InsertParagraphSeparatorEPNS_12EditingStateEbb(%"class.blink::CompositeEditCommand"* %129, %"class.blink::EditingState"* %3, i1 zeroext false, i1 zeroext false) #11
  %130 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %3, i64 0, i32 0
  %131 = load i8, i8* %130, align 1, !range !5
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %171

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %135 = load %"class.blink::Document"*, %"class.blink::Document"** %134, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %135, i32 7) #11
  br label %136

136:                                              ; preds = %120, %133
  %137 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %19, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %137) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #11
  br label %138

138:                                              ; preds = %105, %136
  %139 = bitcast %"class.blink::VisiblePositionTemplate"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #11
  %140 = bitcast %"class.blink::VisibleSelectionTemplate"* %25 to i8*
  %141 = bitcast %"class.blink::VisiblePositionTemplate"* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %140) #11
  %142 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  call void @_ZNK5blink20CompositeEditCommand22EndingVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %25, %"class.blink::CompositeEditCommand"* %142) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE12VisibleStartEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %24, %"class.blink::VisibleSelectionTemplate"* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %140) #11
  %143 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 8
  %144 = load i8, i8* %143, align 8, !range !5
  %145 = icmp eq i8 %144, 0
  %146 = or i1 %46, %145
  br i1 %146, label %169, label %147

147:                                              ; preds = %138
  %148 = call zeroext i1 @_ZN5blink16IsEndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %24, i32 1) #11
  br i1 %148, label %169, label %149

149:                                              ; preds = %147
  %150 = call zeroext i1 @_ZN5blink18IsStartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %24, i32 1) #11
  br i1 %150, label %169, label %151

151:                                              ; preds = %149
  call void @_ZN5blink20CompositeEditCommand24InsertParagraphSeparatorEPNS_12EditingStateEbb(%"class.blink::CompositeEditCommand"* %142, %"class.blink::EditingState"* %3, i1 zeroext false, i1 zeroext false) #11
  %152 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %3, i64 0, i32 0
  %153 = load i8, i8* %152, align 1, !range !5
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %155, label %173

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %157 = load %"class.blink::Document"*, %"class.blink::Document"** %156, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %157, i32 7) #11
  %158 = bitcast %"class.blink::SelectionForUndoStep"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %158) #11
  %159 = bitcast %"class.blink::SelectionTemplate"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %159) #11
  %160 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #11
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %28) #11
  %161 = bitcast %"class.blink::PositionTemplate"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %161) #11
  %162 = bitcast %"class.blink::VisiblePositionTemplate"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %162) #11
  %163 = bitcast %"class.blink::VisiblePositionTemplate"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #11
  %164 = bitcast %"class.blink::VisibleSelectionTemplate"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %164) #11
  call void @_ZNK5blink20CompositeEditCommand22EndingVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %32, %"class.blink::CompositeEditCommand"* %142) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE12VisibleStartEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %31, %"class.blink::VisibleSelectionTemplate"* nonnull %32) #11
  call void @_ZN5blink18PreviousPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %30, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %31, i32 0) #11
  %165 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %30, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %29, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %165) #11
  %166 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %28, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %29) #11
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %27, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %166) #11
  call void @_ZN5blink20SelectionForUndoStep4FromERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::SelectionForUndoStep"* nonnull sret %26, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %27) #11
  call void @_ZN5blink20CompositeEditCommand18SetEndingSelectionERKNS_20SelectionForUndoStepE(%"class.blink::CompositeEditCommand"* %142, %"class.blink::SelectionForUndoStep"* nonnull dereferenceable(48) %26) #11
  %167 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %30, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %167) #11
  %168 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %31, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %168) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %164) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %162) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %161) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %159) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %158) #11
  br label %169

169:                                              ; preds = %147, %149, %155, %138
  %170 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %24, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %170) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #11
  br label %175

171:                                              ; preds = %128
  %172 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %19, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %172) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #11
  br label %175

173:                                              ; preds = %151
  %174 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %24, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %174) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #11
  br label %175

175:                                              ; preds = %78, %103, %70, %169, %173, %171
  %176 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %6, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %176) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #11
  %177 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %5, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %177) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  ret void
}

declare zeroext i1 @_ZN5blink24IsRichlyEditablePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink10IsListItemEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7IsRangeEv(%"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14IsStartOfBlockERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink20CompositeEditCommand15DeleteSelectionEPNS_12EditingStateERKNS_22DeleteSelectionOptionsE(%"class.blink::CompositeEditCommand"*, %"class.blink::EditingState"*, %"class.blink::DeleteSelectionOptions"* dereferenceable(4)) local_unnamed_addr #2

declare void @_ZN5blink22DeleteSelectionOptions7BuilderC1Ev(%"class.blink::DeleteSelectionOptions::Builder"*) unnamed_addr #2

declare dereferenceable(4) %"class.blink::DeleteSelectionOptions::Builder"* @_ZN5blink22DeleteSelectionOptions7Builder25SetMergeBlocksAfterDeleteEb(%"class.blink::DeleteSelectionOptions::Builder"*, i1 zeroext) local_unnamed_addr #2

declare dereferenceable(4) %"class.blink::DeleteSelectionOptions::Builder"* @_ZN5blink22DeleteSelectionOptions7Builder17SetSanitizeMarkupEb(%"class.blink::DeleteSelectionOptions::Builder"*, i1 zeroext) local_unnamed_addr #2

declare void @_ZNK5blink22DeleteSelectionOptions7Builder5BuildEv(%"class.blink::DeleteSelectionOptions"* sret, %"class.blink::DeleteSelectionOptions::Builder"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink35IsEndOfEditableOrNonEditableContentERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand18SetEndingSelectionERKNS_20SelectionForUndoStepE(%"class.blink::CompositeEditCommand"*, %"class.blink::SelectionForUndoStep"* dereferenceable(48)) local_unnamed_addr #2

declare void @_ZN5blink20SelectionForUndoStep4FromERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::SelectionForUndoStep"* sret, %"class.blink::SelectionTemplate"* dereferenceable(40)) local_unnamed_addr #2

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand24InsertParagraphSeparatorEPNS_12EditingStateEbb(%"class.blink::CompositeEditCommand"*, %"class.blink::EditingState"*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ReplaceSelectionCommand7DoApplyEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"*, %"class.blink::EditingState"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %13 = alloca %"class.blink::ReplacementFragment", align 8
  %14 = alloca %"class.blink::PositionTemplate", align 8
  %15 = alloca %"class.blink::PositionTemplate", align 8
  %16 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %17 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %18 = alloca %"class.blink::PositionTemplate", align 8
  %19 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %20 = alloca %"class.blink::PositionTemplate", align 8
  %21 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %22 = alloca %"class.blink::PositionTemplate", align 8
  %23 = alloca %"class.blink::PositionTemplate", align 8
  %24 = alloca %"class.blink::PositionTemplate", align 8
  %25 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %26 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %27 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %28 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %29 = alloca %"class.blink::PositionTemplate", align 8
  %30 = alloca %"class.blink::PositionTemplate", align 8
  %31 = alloca %"class.blink::PositionTemplate", align 8
  %32 = alloca %"class.blink::PositionTemplate", align 8
  %33 = alloca %"class.blink::PositionTemplate", align 8
  %34 = alloca %"class.blink::PositionTemplate", align 8
  %35 = alloca %"class.blink::PositionTemplate", align 8
  %36 = alloca %"class.blink::PositionTemplate", align 8
  %37 = alloca %"class.blink::ReplaceSelectionCommand::InsertedNodes", align 8
  %38 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %39 = alloca %"class.blink::PositionTemplate", align 8
  %40 = alloca %"class.blink::PositionTemplate", align 8
  %41 = alloca %"class.blink::PositionTemplate", align 8
  %42 = alloca %"class.blink::PositionTemplate", align 8
  %43 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %44 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %45 = alloca %"class.blink::PositionWithAffinityTemplate", align 8
  %46 = alloca %"class.blink::PositionWithAffinityTemplate", align 8
  %47 = alloca %"class.blink::PositionTemplate", align 8
  %48 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %49 = alloca %"class.blink::PositionTemplate", align 8
  %50 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %51 = alloca %"class.blink::PositionTemplate", align 8
  %52 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %53 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %54 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %55 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %56 = alloca %"class.blink::PositionTemplate", align 8
  %57 = alloca %"class.blink::PositionTemplate", align 8
  %58 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %59 = alloca %"class.blink::PositionTemplate", align 8
  %60 = alloca %"class.blink::PositionTemplate", align 8
  %61 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %62 = alloca %"class.blink::PositionTemplate", align 8
  %63 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %64 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %65 = alloca %"class.blink::SelectionForUndoStep", align 8
  %66 = alloca %"class.blink::SelectionTemplate", align 8
  %67 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %68 = alloca %"class.blink::PositionTemplate", align 8
  %69 = alloca %"class.blink::PositionTemplate", align 8
  %70 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %71 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %72 = alloca %"class.blink::SelectionForUndoStep", align 8
  %73 = alloca %"class.blink::SelectionTemplate", align 8
  %74 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %75 = alloca %"class.blink::PositionTemplate", align 8
  %76 = alloca %"class.blink::PositionTemplate", align 8
  %77 = alloca %"class.blink::SelectionForUndoStep", align 8
  %78 = alloca %"class.blink::SelectionTemplate", align 8
  %79 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %80 = alloca %"class.blink::PositionTemplate", align 8
  %81 = alloca %"class.blink::PositionTemplate", align 8
  %82 = alloca %"class.blink::PositionTemplate", align 8
  %83 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %84 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %85 = alloca %"class.blink::PositionTemplate", align 8
  %86 = alloca %"class.blink::PositionTemplate", align 8
  %87 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %88 = and i8 %87, 25
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %96, label %90, !prof !2

90:                                               ; preds = %2
  %91 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %92 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  %93 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %94 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %94, i64* %93, align 8
  %95 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %91, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  br label %96

96:                                               ; preds = %2, %90
  %97 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %90 ]
  %98 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), %90 ]
  %99 = phi i64 [ -6148914691236517206, %2 ], [ %95, %90 ]
  %100 = bitcast %"class.blink::VisibleSelectionTemplate"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %100) #11
  %101 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  call void @_ZNK5blink20CompositeEditCommand22EndingVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %12, %"class.blink::CompositeEditCommand"* %101) #11
  %102 = call zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE6IsNoneEv(%"class.blink::VisibleSelectionTemplate"* nonnull %12) #11
  br i1 %102, label %103, label %104

103:                                              ; preds = %96
  call void @_ZN5blink12EditingState5AbortEv(%"class.blink::EditingState"* %1) #11
  br label %1632

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %106 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  %107 = call zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10IsValidForERKNS_8DocumentE(%"class.blink::VisibleSelectionTemplate"* nonnull %12, %"class.blink::Document"* dereferenceable(2848) %106) #11
  br i1 %107, label %109, label %108

108:                                              ; preds = %104
  call void @_ZN5blink12EditingState5AbortEv(%"class.blink::EditingState"* %1) #11
  br label %1632

109:                                              ; preds = %104
  %110 = call %"class.blink::Element"* @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19RootEditableElementEv(%"class.blink::VisibleSelectionTemplate"* nonnull %12) #11
  %111 = icmp eq %"class.blink::Element"* %110, null
  br i1 %111, label %1632, label %112

112:                                              ; preds = %109
  %113 = bitcast %"class.blink::ReplacementFragment"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #11
  %114 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %13, i64 0, i32 1
  %115 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %13, i64 0, i32 2
  %116 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %13, i64 0, i32 3
  %117 = bitcast %"class.blink::ReplacementFragment"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 24, i1 false)
  %118 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  %119 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 7, i32 0, i32 0
  %120 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %119, align 8
  call void @_ZN5blink19ReplacementFragmentC2EPNS_8DocumentEPNS_16DocumentFragmentERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ReplacementFragment"* nonnull %13, %"class.blink::Document"* %118, %"class.blink::DocumentFragment"* %120, %"class.blink::VisibleSelectionTemplate"* nonnull dereferenceable(40) %12)
  %121 = call zeroext i1 @_ZN5blink23ReplaceSelectionCommand21PerformTrivialReplaceERKNS_19ReplacementFragmentEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::ReplacementFragment"* nonnull dereferenceable(24) %13, %"class.blink::EditingState"* %1)
  %122 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %1, i64 0, i32 0
  %123 = load i8, i8* %122, align 1, !range !5
  %124 = icmp ne i8 %123, 0
  %125 = or i1 %121, %124
  br i1 %125, label %1631, label %126

126:                                              ; preds = %112
  %127 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %127, i32 7) #11
  call void @_ZN5blink23ReplaceSelectionCommand10SetUpStyleERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::VisibleSelectionTemplate"* nonnull dereferenceable(40) %12)
  %128 = call %"class.blink::Element"* @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19RootEditableElementEv(%"class.blink::VisibleSelectionTemplate"* nonnull %12) #11
  %129 = bitcast %"class.blink::PositionTemplate"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %129) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %14, %"class.blink::VisibleSelectionTemplate"* nonnull %12) #11
  %130 = call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %14, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink27IsMailHTMLBlockquoteElementEPKNS_4NodeE, i32 0) #11
  %131 = icmp ne %"class.blink::Node"* %130, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %129) #11
  %132 = bitcast %"class.blink::PositionTemplate"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %132) #11
  %133 = getelementptr inbounds %"class.blink::VisibleSelectionTemplate", %"class.blink::VisibleSelectionTemplate"* %12, i64 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %15, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %133) #11
  %134 = call zeroext i1 @_ZN5blink24IsRichlyEditablePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #11
  %135 = bitcast %"class.blink::VisiblePositionTemplate"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %135) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10VisibleEndEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %16, %"class.blink::VisibleSelectionTemplate"* nonnull %12) #11
  %136 = call zeroext i1 @_ZN5blink16IsEndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %16, i32 1) #11
  %137 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %16, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %137) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %135) #11
  %138 = bitcast %"class.blink::VisiblePositionTemplate"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE12VisibleStartEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %17, %"class.blink::VisibleSelectionTemplate"* nonnull %12) #11
  %139 = call zeroext i1 @_ZN5blink18IsStartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %17, i32 1) #11
  %140 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %17, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %140) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #11
  call void @_ZN5blink23ReplaceSelectionCommand31InsertParagraphSeparatorIfNeedsERKNS_24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_19ReplacementFragmentEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::VisibleSelectionTemplate"* nonnull dereferenceable(40) %12, %"class.blink::ReplacementFragment"* nonnull dereferenceable(24) %13, %"class.blink::EditingState"* %1)
  %141 = load i8, i8* %122, align 1, !range !5
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %1631

143:                                              ; preds = %126
  %144 = bitcast %"class.blink::PositionTemplate"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #11
  %145 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %18, i64 0, i32 0, i32 0, i32 0
  %146 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %18, i64 0, i32 1
  %147 = bitcast %"class.blink::VisibleSelectionTemplate"* %19 to i8*
  %148 = bitcast %"class.blink::PositionTemplate"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %148, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %147) #11
  call void @_ZNK5blink20CompositeEditCommand22EndingVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %19, %"class.blink::CompositeEditCommand"* %101) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %18, %"class.blink::VisibleSelectionTemplate"* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %147) #11
  %149 = call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink27IsMailHTMLBlockquoteElementEPKNS_4NodeE, i32 0) #11
  %150 = icmp eq %"class.blink::Node"* %149, null
  br i1 %150, label %190, label %151

151:                                              ; preds = %143
  %152 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 8
  %153 = load i8, i8* %152, align 8, !range !5
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %190, label %155

155:                                              ; preds = %151
  %156 = call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink20IsTableStructureNodeEPKNS_4NodeE, i32 1) #11
  %157 = icmp eq %"class.blink::Node"* %156, null
  br i1 %157, label %158, label %190

158:                                              ; preds = %155
  %159 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  %160 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11EditCommandEEEPhm(i64 152) #11
  %161 = bitcast i8* %160 to %"class.blink::BreakBlockquoteCommand"*
  call void @_ZN5blink22BreakBlockquoteCommandC1ERNS_8DocumentE(%"class.blink::BreakBlockquoteCommand"* %161, %"class.blink::Document"* dereferenceable(2848) %159) #11
  %162 = getelementptr inbounds i8, i8* %160, i64 -4
  %163 = bitcast i8* %162 to i16*
  %164 = load atomic i16, i16* %163 monotonic, align 2
  %165 = or i16 %164, 1
  store atomic i16 %165, i16* %163 release, align 2
  %166 = bitcast i8* %160 to %"class.blink::EditCommand"*
  call void @_ZN5blink20CompositeEditCommand23ApplyCommandToCompositeEPNS_11EditCommandEPNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::EditCommand"* %166, %"class.blink::EditingState"* %1) #11
  %167 = load i8, i8* %122, align 1, !range !5
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %1630

169:                                              ; preds = %158
  %170 = bitcast %"class.blink::PositionTemplate"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %170) #11
  %171 = bitcast %"class.blink::VisibleSelectionTemplate"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %171) #11
  call void @_ZNK5blink20CompositeEditCommand22EndingVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %21, %"class.blink::CompositeEditCommand"* %101) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %20, %"class.blink::VisibleSelectionTemplate"* nonnull %21) #11
  %172 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %20, i64 0, i32 0, i32 0, i32 0
  %173 = load %"class.blink::Node"*, %"class.blink::Node"** %172, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %171) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170) #11
  %174 = bitcast %"class.blink::PositionTemplate"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %174) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %22, %"class.blink::Node"* dereferenceable(64) %173) #11
  %175 = bitcast %"class.blink::PositionTemplate"* %22 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %"class.blink::PositionTemplate"* %18 to i64*
  store atomic i64 %176, i64* %177 monotonic, align 8
  %178 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %169
  %181 = inttoptr i64 %176 to i8*
  %182 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %181) #11
  br label %183

183:                                              ; preds = %169, %180
  %184 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %22, i64 0, i32 1
  %185 = bitcast i32* %184 to i64*
  %186 = bitcast i32* %146 to i64*
  %187 = load i64, i64* %185, align 8
  store i64 %187, i64* %186, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %174) #11
  call void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::Node"* %173, %"class.blink::EditingState"* %1, i32 1) #11
  %188 = load i8, i8* %122, align 1, !range !5
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %190, label %1630

190:                                              ; preds = %155, %151, %143, %183
  call void @_ZN5blink20CompositeEditCommand35PrepareWhitespaceAtPositionForSplitERNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18) #11
  %191 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %191, i32 7) #11
  %192 = bitcast %"class.blink::PositionTemplate"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %192) #11
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %23, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18, i32 1) #11
  %193 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %23, i64 0, i32 0, i32 0, i32 0
  %194 = load %"class.blink::Node"*, %"class.blink::Node"** %193, align 8
  %195 = icmp eq %"class.blink::Node"* %194, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %192) #11
  br i1 %195, label %1630, label %196

196:                                              ; preds = %190
  %197 = bitcast %"class.blink::PositionTemplate"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %197) #11
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %24, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18, i32 1) #11
  %198 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %24, i64 0, i32 0, i32 0, i32 0
  %199 = load %"class.blink::Node"*, %"class.blink::Node"** %198, align 8
  %200 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %199, i64 0, i32 1
  %201 = load i32, i32* %200, align 8
  %202 = and i32 %201, 48
  %203 = icmp ne i32 %202, 0
  %204 = icmp eq %"class.blink::Node"* %199, null
  %205 = or i1 %204, %203
  br i1 %205, label %220, label %206

206:                                              ; preds = %196
  %207 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %208 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %207, i64 0, i32 0, i32 0, i32 0
  %209 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %208, align 8
  %210 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %199, i64 1, i32 2
  %211 = bitcast %"class.blink::Member"* %210 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %212 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %211, align 8
  %213 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %212, i64 0, i32 3, i32 0, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  %215 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %209, i64 0, i32 3, i32 0, i32 0, i32 0
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %214, %216
  %218 = bitcast %"class.blink::Node"* %199 to %"class.blink::HTMLBRElement"*
  %219 = select i1 %217, %"class.blink::HTMLBRElement"* %218, %"class.blink::HTMLBRElement"* null
  br label %220

220:                                              ; preds = %206, %196
  %221 = phi %"class.blink::HTMLBRElement"* [ null, %196 ], [ %219, %206 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %197) #11
  %222 = bitcast %"class.blink::VisiblePositionTemplate"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %222) #11
  %223 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %25, i64 0, i32 0, i32 0, i32 1
  %224 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %25, i64 0, i32 0, i32 1
  %225 = bitcast %"class.blink::VisiblePositionTemplate"* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %225, i8 -86, i64 24, i1 false)
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::VisiblePositionTemplate"* nonnull %25) #11
  %226 = icmp ne %"class.blink::HTMLBRElement"* %221, null
  br i1 %226, label %227, label %248

227:                                              ; preds = %220
  %228 = bitcast %"class.blink::VisiblePositionTemplate"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #11
  %229 = bitcast %"class.blink::VisiblePositionTemplate"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #11
  %230 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %221, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::VisiblePositionTemplate"* nonnull sret %27, %"class.blink::Node"* dereferenceable(64) %230) #11
  call void @_ZN5blink18PreviousPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %26, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %27, i32 0) #11
  %231 = bitcast %"class.blink::VisiblePositionTemplate"* %26 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = bitcast %"class.blink::VisiblePositionTemplate"* %25 to i64*
  store atomic i64 %232, i64* %233 monotonic, align 8
  %234 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %239, label %236

236:                                              ; preds = %227
  %237 = inttoptr i64 %232 to i8*
  %238 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %237) #11
  br label %239

239:                                              ; preds = %227, %236
  %240 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %26, i64 0, i32 0, i32 0, i32 1
  %241 = bitcast i32* %240 to i64*
  %242 = bitcast i32* %223 to i64*
  %243 = load i64, i64* %241, align 8
  store i64 %243, i64* %242, align 8
  %244 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %26, i64 0, i32 0, i32 1
  %245 = load i32, i32* %244, align 8
  store i32 %245, i32* %224, align 8
  %246 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %26, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %246) #11
  %247 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %27, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %247) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #11
  br label %248

248:                                              ; preds = %239, %220
  %249 = load %"class.blink::Node"*, %"class.blink::Node"** %145, align 8
  %250 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %249, i32 1) #11
  %251 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 8
  %252 = load i8, i8* %251, align 8, !range !5
  %253 = icmp ne i8 %252, 0
  %254 = icmp ne %"class.blink::Element"* %250, null
  %255 = and i1 %254, %253
  %256 = xor i1 %255, true
  %257 = icmp eq %"class.blink::Element"* %250, %128
  %258 = or i1 %257, %256
  br i1 %258, label %303, label %259

259:                                              ; preds = %248
  %260 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %250, i64 0, i32 0, i32 0
  %261 = call zeroext i1 @_ZN5blink11IsTableCellEPKNS_4NodeE(%"class.blink::Node"* %260) #11
  %262 = or i1 %131, %261
  br i1 %262, label %303, label %263

263:                                              ; preds = %259
  %264 = bitcast %"class.blink::VisiblePositionTemplate"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %264) #11
  %265 = bitcast %"class.blink::VisiblePositionTemplate"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %265, i8 -86, i64 24, i1 false)
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %28, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18, i32 1) #11
  %266 = call zeroext i1 @_ZN5blink12IsEndOfBlockERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %28) #11
  br i1 %266, label %267, label %282

267:                                              ; preds = %263
  %268 = call zeroext i1 @_ZN5blink14IsStartOfBlockERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %28) #11
  %269 = load i8, i8* %116, align 1
  %270 = icmp ne i8 %269, 0
  %271 = and i1 %268, %270
  br i1 %271, label %282, label %272

272:                                              ; preds = %267
  %273 = bitcast %"class.blink::PositionTemplate"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %273) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17InParentAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %29, %"class.blink::Node"* dereferenceable(64) %260) #11
  %274 = bitcast %"class.blink::PositionTemplate"* %29 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = bitcast %"class.blink::PositionTemplate"* %18 to i64*
  store atomic i64 %275, i64* %276 monotonic, align 8
  %277 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %294, label %279

279:                                              ; preds = %272
  %280 = inttoptr i64 %275 to i8*
  %281 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %280) #11
  br label %294

282:                                              ; preds = %267, %263
  %283 = call zeroext i1 @_ZN5blink14IsStartOfBlockERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %28) #11
  br i1 %283, label %284, label %301

284:                                              ; preds = %282
  %285 = bitcast %"class.blink::PositionTemplate"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %285) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %30, %"class.blink::Node"* dereferenceable(64) %260) #11
  %286 = bitcast %"class.blink::PositionTemplate"* %30 to i64*
  %287 = load i64, i64* %286, align 8
  %288 = bitcast %"class.blink::PositionTemplate"* %18 to i64*
  store atomic i64 %287, i64* %288 monotonic, align 8
  %289 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %294, label %291

291:                                              ; preds = %284
  %292 = inttoptr i64 %287 to i8*
  %293 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %292) #11
  br label %294

294:                                              ; preds = %291, %284, %279, %272
  %295 = phi %"class.blink::PositionTemplate"* [ %29, %272 ], [ %29, %279 ], [ %30, %284 ], [ %30, %291 ]
  %296 = phi i8* [ %273, %272 ], [ %273, %279 ], [ %285, %284 ], [ %285, %291 ]
  %297 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %295, i64 0, i32 1
  %298 = bitcast i32* %297 to i64*
  %299 = bitcast i32* %146 to i64*
  %300 = load i64, i64* %298, align 8
  store i64 %300, i64* %299, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %296) #11
  br label %301

301:                                              ; preds = %294, %282
  %302 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %28, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %302) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %264) #11
  br label %303

303:                                              ; preds = %259, %248, %301
  %304 = bitcast %"class.blink::PositionTemplate"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %304) #11
  call void @_ZN5blink20CompositeEditCommand38PositionAvoidingSpecialElementBoundaryERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_12EditingStateE(%"class.blink::PositionTemplate"* nonnull sret %31, %"class.blink::CompositeEditCommand"* %101, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18, %"class.blink::EditingState"* %1) #11
  %305 = bitcast %"class.blink::PositionTemplate"* %31 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = bitcast %"class.blink::PositionTemplate"* %18 to i64*
  store atomic i64 %306, i64* %307 monotonic, align 8
  %308 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %313, label %310

310:                                              ; preds = %303
  %311 = inttoptr i64 %306 to i8*
  %312 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %311) #11
  br label %313

313:                                              ; preds = %303, %310
  %314 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %31, i64 0, i32 1
  %315 = bitcast i32* %314 to i64*
  %316 = bitcast i32* %146 to i64*
  %317 = load i64, i64* %315, align 8
  store i64 %317, i64* %316, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %304) #11
  %318 = load i8, i8* %122, align 1, !range !5
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %320, label %1628

320:                                              ; preds = %313
  %321 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  %322 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %321) #11
  %323 = icmp eq %"class.blink::LocalFrame"* %322, null
  br i1 %323, label %329, label %324

324:                                              ; preds = %320
  %325 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %322, i64 0, i32 13, i32 0, i32 0
  %326 = load %"class.blink::Editor"*, %"class.blink::Editor"** %325, align 8
  %327 = getelementptr inbounds %"class.blink::Editor", %"class.blink::Editor"* %326, i64 0, i32 12, i32 0
  %328 = bitcast %"class.blink::MemberBase.1446"* %327 to i64*
  store atomic i64 0, i64* %328 monotonic, align 8
  br label %329

329:                                              ; preds = %320, %324
  %330 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %114, align 8
  %331 = icmp eq %"class.blink::DocumentFragment"* %330, null
  br i1 %331, label %423, label %332

332:                                              ; preds = %329
  %333 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %330, i64 0, i32 0, i32 1, i32 0, i32 0
  %334 = load %"class.blink::Node"*, %"class.blink::Node"** %333, align 8
  %335 = icmp eq %"class.blink::Node"* %334, null
  br i1 %335, label %423, label %336

336:                                              ; preds = %332
  %337 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names9kStyleTagE, align 8
  %338 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %337, i64 0, i32 0, i32 0, i32 0
  %339 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBaseTagE, align 8
  %340 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %339, i64 0, i32 0, i32 0, i32 0
  %341 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kLinkTagE, align 8
  %342 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %341, i64 0, i32 0, i32 0, i32 0
  %343 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kMetaTagE, align 8
  %344 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %343, i64 0, i32 0, i32 0, i32 0
  %345 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kStyleTagE, align 8
  %346 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %345, i64 0, i32 0, i32 0, i32 0
  %347 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kTitleTagE, align 8
  %348 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %347, i64 0, i32 0, i32 0, i32 0
  br label %349

349:                                              ; preds = %420, %336
  %350 = phi %"class.blink::Node"* [ %334, %336 ], [ %421, %420 ]
  %351 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %350, i64 0, i32 1
  %352 = load i32, i32* %351, align 8
  %353 = and i32 %352, 48
  switch i32 %353, label %406 [
    i32 0, label %354
    i32 32, label %384
  ]

354:                                              ; preds = %349
  %355 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %340, align 8
  %356 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %350, i64 1, i32 2
  %357 = bitcast %"class.blink::Member"* %356 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %358 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %357, align 8
  %359 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %358, i64 0, i32 3, i32 0, i32 0, i32 0
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  %361 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %355, i64 0, i32 3, i32 0, i32 0, i32 0
  %362 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %361, align 8
  %363 = icmp eq %"class.WTF::StringImpl"* %360, %362
  br i1 %363, label %394, label %364

364:                                              ; preds = %354
  %365 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %342, align 8
  %366 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %365, i64 0, i32 3, i32 0, i32 0, i32 0
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %360, %367
  br i1 %368, label %394, label %369

369:                                              ; preds = %364
  %370 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %344, align 8
  %371 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %370, i64 0, i32 3, i32 0, i32 0, i32 0
  %372 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %371, align 8
  %373 = icmp eq %"class.WTF::StringImpl"* %360, %372
  br i1 %373, label %394, label %374

374:                                              ; preds = %369
  %375 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %346, align 8
  %376 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %375, i64 0, i32 3, i32 0, i32 0, i32 0
  %377 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %376, align 8
  %378 = icmp eq %"class.WTF::StringImpl"* %360, %377
  br i1 %378, label %394, label %379

379:                                              ; preds = %374
  %380 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %348, align 8
  %381 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %380, i64 0, i32 3, i32 0, i32 0, i32 0
  %382 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %381, align 8
  %383 = icmp eq %"class.WTF::StringImpl"* %360, %382
  br i1 %383, label %394, label %406

384:                                              ; preds = %349
  %385 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %338, align 8
  %386 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %350, i64 1, i32 2
  %387 = bitcast %"class.blink::Member"* %386 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %388 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %387, align 8
  %389 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %388, i64 0, i32 3, i32 0, i32 0, i32 0
  %390 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %389, align 8
  %391 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %385, i64 0, i32 3, i32 0, i32 0, i32 0
  %392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %391, align 8
  %393 = icmp eq %"class.WTF::StringImpl"* %390, %392
  br i1 %393, label %394, label %406

394:                                              ; preds = %384, %379, %374, %369, %364, %354
  %395 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %350, i64 0, i32 5, i32 0, i32 0
  %396 = load %"class.blink::Node"*, %"class.blink::Node"** %395, align 8
  %397 = icmp eq %"class.blink::Node"* %396, null
  br i1 %397, label %398, label %400

398:                                              ; preds = %394
  %399 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %350) #11
  br label %400

400:                                              ; preds = %398, %394
  %401 = phi %"class.blink::Node"* [ %399, %398 ], [ %396, %394 ]
  %402 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* nonnull %350) #11
  %403 = icmp eq %"class.blink::ContainerNode"* %402, null
  br i1 %403, label %420, label %404

404:                                              ; preds = %400
  %405 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* nonnull %402, %"class.blink::Node"* nonnull %350) #11
  br label %420

406:                                              ; preds = %384, %379, %349
  %407 = and i32 %352, 2
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %414, label %409

409:                                              ; preds = %406
  %410 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %350, i64 1
  %411 = bitcast %"class.blink::Node"* %410 to %"class.blink::Node"**
  %412 = load %"class.blink::Node"*, %"class.blink::Node"** %411, align 8
  %413 = icmp eq %"class.blink::Node"* %412, null
  br i1 %413, label %414, label %420

414:                                              ; preds = %409, %406
  %415 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %350, i64 0, i32 5, i32 0, i32 0
  %416 = load %"class.blink::Node"*, %"class.blink::Node"** %415, align 8
  %417 = icmp eq %"class.blink::Node"* %416, null
  br i1 %417, label %418, label %420

418:                                              ; preds = %414
  %419 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %350) #11
  br label %420

420:                                              ; preds = %418, %414, %409, %404, %400
  %421 = phi %"class.blink::Node"* [ %401, %400 ], [ %401, %404 ], [ %419, %418 ], [ %416, %414 ], [ %412, %409 ]
  %422 = icmp eq %"class.blink::Node"* %421, null
  br i1 %422, label %423, label %349

423:                                              ; preds = %420, %329, %332
  %424 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %424, i32 7) #11
  %425 = bitcast %"class.blink::PositionTemplate"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %425) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %33, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18) #11
  %426 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %33, i64 0, i32 0, i32 0, i32 0
  %427 = load %"class.blink::Node"*, %"class.blink::Node"** %426, align 8, !noalias !15
  %428 = call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %427) #11, !noalias !15
  br i1 %428, label %540, label %429

429:                                              ; preds = %423
  %430 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %33) #11
  %431 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %430, i32 1) #11
  %432 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %432) #11, !noalias !15
  %433 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %434 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 1
  %435 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %432, i8 -86, i64 16, i1 false) #11, !noalias !15
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %33) #11
  %436 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %5) #11
  %437 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %431, i64 0, i32 0, i32 0
  %438 = icmp eq %"class.blink::Node"* %436, %437
  br i1 %438, label %539, label %439

439:                                              ; preds = %429
  %440 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  %441 = bitcast %"class.blink::PositionTemplate"* %6 to i64*
  %442 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  %443 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 1
  %444 = bitcast i32* %443 to i64*
  %445 = bitcast i32* %434 to i64*
  %446 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %33, i64 0, i32 2
  %447 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  %448 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  %449 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %33, i64 0, i32 1
  %450 = bitcast %"class.blink::VisiblePositionTemplate"* %8 to i8*
  %451 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %8, i64 0, i32 0, i32 0
  %452 = bitcast %"class.blink::VisiblePositionTemplate"* %10 to i8*
  %453 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %10, i64 0, i32 0, i32 0
  %454 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %455 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %456 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 2
  %457 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 2
  %458 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 1
  %459 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 1
  %460 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %10, i64 0, i32 0
  %461 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %8, i64 0, i32 0
  %462 = bitcast %"class.blink::PositionTemplate"* %33 to i64*
  %463 = bitcast i32* %449 to i64*
  br label %464

464:                                              ; preds = %533, %439
  %465 = call zeroext i1 @_ZN5blink25LineBreakExistsAtPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %33) #11
  br i1 %465, label %539, label %466

466:                                              ; preds = %464
  %467 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %33) #11
  %468 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* %467) #11
  %469 = icmp eq %"class.blink::ContainerNode"* %468, null
  br i1 %469, label %480, label %470

470:                                              ; preds = %466
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %440) #11, !noalias !15
  %471 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %33) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17InParentAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::Node"* dereferenceable(64) %471) #11
  %472 = load i64, i64* %441, align 8, !noalias !15
  store atomic i64 %472, i64* %442 monotonic, align 8, !noalias !15
  %473 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %474 = icmp eq i32 %473, 0
  br i1 %474, label %478, label %475

475:                                              ; preds = %470
  %476 = inttoptr i64 %472 to i8*
  %477 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %476) #11
  br label %478

478:                                              ; preds = %475, %470
  %479 = load i64, i64* %444, align 8, !noalias !15
  store i64 %479, i64* %445, align 8, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %440) #11, !noalias !15
  br label %480

480:                                              ; preds = %478, %466
  %481 = load %"class.blink::Node"*, %"class.blink::Node"** %433, align 8, !noalias !15
  %482 = icmp eq %"class.blink::Node"* %481, null
  %483 = load %"class.blink::Node"*, %"class.blink::Node"** %426, align 8, !noalias !15
  br i1 %482, label %484, label %486

484:                                              ; preds = %480
  %485 = icmp eq %"class.blink::Node"* %483, null
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %447) #11, !noalias !15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %448) #11, !noalias !15
  br i1 %485, label %522, label %500

486:                                              ; preds = %480
  %487 = icmp eq %"class.blink::Node"* %481, %483
  br i1 %487, label %488, label %495

488:                                              ; preds = %486
  %489 = load i32, i32* %435, align 4, !noalias !15
  %490 = load i32, i32* %446, align 4, !noalias !15
  %491 = icmp eq i32 %489, %490
  br i1 %491, label %492, label %495

492:                                              ; preds = %488
  %493 = icmp eq i32 %489, 0
  br i1 %493, label %496, label %494

494:                                              ; preds = %492
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %447) #11, !noalias !15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %448) #11, !noalias !15
  br label %522

495:                                              ; preds = %488, %486
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %447) #11, !noalias !15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %448) #11, !noalias !15
  br label %500

496:                                              ; preds = %492
  %497 = load i32, i32* %434, align 8, !noalias !15
  %498 = load i32, i32* %449, align 8, !noalias !15
  %499 = icmp eq i32 %497, %498
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %447) #11, !noalias !15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %448) #11, !noalias !15
  br i1 %499, label %522, label %500

500:                                              ; preds = %496, %495, %484
  %501 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %5) #11
  %502 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %501, i32 1) #11
  %503 = icmp eq %"class.blink::Element"* %502, %431
  br i1 %503, label %504, label %522

504:                                              ; preds = %500
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %450) #11, !noalias !15
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %8, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %33, i32 1) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %451) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %452) #11, !noalias !15
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %10, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, i32 1) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %9, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %453) #11
  %505 = load %"class.blink::Node"*, %"class.blink::Node"** %454, align 8, !noalias !15
  %506 = icmp eq %"class.blink::Node"* %505, null
  %507 = load %"class.blink::Node"*, %"class.blink::Node"** %455, align 8, !noalias !15
  br i1 %506, label %508, label %510

508:                                              ; preds = %504
  %509 = icmp eq %"class.blink::Node"* %507, null
  br label %523

510:                                              ; preds = %504
  %511 = icmp eq %"class.blink::Node"* %505, %507
  br i1 %511, label %512, label %538

512:                                              ; preds = %510
  %513 = load i32, i32* %456, align 4, !noalias !15
  %514 = load i32, i32* %457, align 4, !noalias !15
  %515 = icmp eq i32 %513, %514
  br i1 %515, label %516, label %537

516:                                              ; preds = %512
  %517 = icmp eq i32 %513, 0
  br i1 %517, label %518, label %525

518:                                              ; preds = %516
  %519 = load i32, i32* %458, align 8, !noalias !15
  %520 = load i32, i32* %459, align 8, !noalias !15
  %521 = icmp eq i32 %519, %520
  br label %523

522:                                              ; preds = %500, %496, %484, %494
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %448) #11, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %447) #11, !noalias !15
  br label %539

523:                                              ; preds = %518, %508
  %524 = phi i1 [ %509, %508 ], [ %521, %518 ]
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %460) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %452) #11, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %448) #11, !noalias !15
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %461) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %450) #11, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %447) #11, !noalias !15
  br i1 %524, label %526, label %539

525:                                              ; preds = %516
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %460) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %452) #11, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %448) #11, !noalias !15
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %461) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %450) #11, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %447) #11, !noalias !15
  br label %526

526:                                              ; preds = %525, %523
  %527 = load i64, i64* %442, align 8, !noalias !15
  store atomic i64 %527, i64* %462 monotonic, align 8, !noalias !15
  %528 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %533, label %530

530:                                              ; preds = %526
  %531 = inttoptr i64 %527 to i8*
  %532 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %531) #11
  br label %533

533:                                              ; preds = %530, %526
  %534 = load i64, i64* %445, align 8, !noalias !15
  store i64 %534, i64* %463, align 8, !noalias !15
  %535 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %5) #11
  %536 = icmp eq %"class.blink::Node"* %535, %437
  br i1 %536, label %539, label %464

537:                                              ; preds = %512
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %460) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %452) #11, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %448) #11, !noalias !15
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %461) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %450) #11, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %447) #11, !noalias !15
  br label %539

538:                                              ; preds = %510
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %460) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %452) #11, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %448) #11, !noalias !15
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %461) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %450) #11, !noalias !15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %447) #11, !noalias !15
  br label %539

539:                                              ; preds = %533, %523, %464, %538, %537, %522, %429
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %432) #11, !noalias !15
  br label %540

540:                                              ; preds = %423, %539
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %32, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %33) #11
  %541 = bitcast %"class.blink::PositionTemplate"* %32 to i64*
  %542 = load i64, i64* %541, align 8
  store atomic i64 %542, i64* %307 monotonic, align 8
  %543 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %548, label %545

545:                                              ; preds = %540
  %546 = inttoptr i64 %542 to i8*
  %547 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %546) #11
  br label %548

548:                                              ; preds = %540, %545
  %549 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %32, i64 0, i32 1
  %550 = bitcast i32* %549 to i64*
  %551 = load i64, i64* %550, align 8
  store i64 %551, i64* %316, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %425) #11
  %552 = bitcast %"class.blink::PositionTemplate"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %552) #11
  call void @_ZN5blink20CompositeEditCommand22PositionOutsideTabSpanERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull sret %34, %"class.blink::CompositeEditCommand"* %101, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18) #11
  %553 = bitcast %"class.blink::PositionTemplate"* %34 to i64*
  %554 = load i64, i64* %553, align 8
  store atomic i64 %554, i64* %307 monotonic, align 8
  %555 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %560, label %557

557:                                              ; preds = %548
  %558 = inttoptr i64 %554 to i8*
  %559 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %558) #11
  br label %560

560:                                              ; preds = %548, %557
  %561 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %34, i64 0, i32 1
  %562 = bitcast i32* %561 to i64*
  %563 = load i64, i64* %562, align 8
  store i64 %563, i64* %316, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %552) #11
  br i1 %331, label %734, label %564

564:                                              ; preds = %560
  %565 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %330, i64 0, i32 0, i32 1, i32 0, i32 0
  %566 = load %"class.blink::Node"*, %"class.blink::Node"** %565, align 8
  %567 = icmp eq %"class.blink::Node"* %566, null
  br i1 %567, label %727, label %568

568:                                              ; preds = %564
  %569 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %566, i64 0, i32 1
  %570 = load i32, i32* %569, align 8
  %571 = and i32 %570, 48
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %573, label %727

573:                                              ; preds = %568
  %574 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kSpanTagE, align 8
  %575 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %574, i64 0, i32 0, i32 0, i32 0
  %576 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %575, align 8
  %577 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %566, i64 1, i32 2
  %578 = bitcast %"class.blink::Member"* %577 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %579 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %578, align 8
  %580 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %579, i64 0, i32 3, i32 0, i32 0, i32 0
  %581 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %580, align 8
  %582 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %576, i64 0, i32 3, i32 0, i32 0, i32 0
  %583 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %582, align 8
  %584 = icmp eq %"class.WTF::StringImpl"* %581, %583
  br i1 %584, label %585, label %727

585:                                              ; preds = %573
  %586 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %586) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::Node"* nonnull dereferenceable(64) %566) #11
  %587 = call %"class.blink::Node"* @_ZN5blink19EnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %3, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink27IsMailHTMLBlockquoteElementEPKNS_4NodeE, i32 0) #11
  %588 = icmp eq %"class.blink::Node"* %587, null
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %586) #11
  br i1 %588, label %589, label %727

589:                                              ; preds = %585
  %590 = load %"class.blink::Node"*, %"class.blink::Node"** %145, align 8
  %591 = call zeroext i1 @_ZN5blink8IsInlineEPKNS_4NodeE(%"class.blink::Node"* %590) #11
  br i1 %591, label %592, label %597

592:                                              ; preds = %589
  %593 = load %"class.blink::Node"*, %"class.blink::Node"** %145, align 8
  %594 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %593, i32 1) #11
  %595 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %594, i64 0, i32 0, i32 0
  %596 = icmp eq %"class.blink::Element"* %594, null
  br i1 %596, label %727, label %597

597:                                              ; preds = %592, %589
  %598 = phi %"class.blink::Node"* [ %595, %592 ], [ %590, %589 ]
  %599 = icmp eq %"class.blink::Node"* %598, null
  br i1 %599, label %692, label %600

600:                                              ; preds = %597
  %601 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %598, i64 0, i32 1
  %602 = load i32, i32* %601, align 8
  %603 = and i32 %602, 50
  %604 = icmp eq i32 %603, 2
  br i1 %604, label %605, label %692

605:                                              ; preds = %600
  %606 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %598, i64 1
  %607 = bitcast %"class.blink::Node"* %606 to %"class.blink::Node"**
  %608 = load %"class.blink::Node"*, %"class.blink::Node"** %607, align 8
  %609 = icmp eq %"class.blink::Node"* %608, null
  br i1 %609, label %692, label %610

610:                                              ; preds = %605
  %611 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %598, i64 1, i32 0, i32 0, i32 1
  %612 = bitcast %"class.blink::TraceWrapperV8Reference"* %611 to %"class.blink::Node"**
  %613 = load %"class.blink::Node"*, %"class.blink::Node"** %612, align 8
  %614 = icmp eq %"class.blink::Node"* %608, %613
  br i1 %614, label %615, label %632

615:                                              ; preds = %610
  %616 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %608, i64 0, i32 1
  %617 = load i32, i32* %616, align 8
  %618 = and i32 %617, 48
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %620, label %632

620:                                              ; preds = %615
  %621 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %622 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %621, i64 0, i32 0, i32 0, i32 0
  %623 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %622, align 8
  %624 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %608, i64 1, i32 2
  %625 = bitcast %"class.blink::Member"* %624 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %626 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %625, align 8
  %627 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %626, i64 0, i32 3, i32 0, i32 0, i32 0
  %628 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %627, align 8
  %629 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %623, i64 0, i32 3, i32 0, i32 0, i32 0
  %630 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %629, align 8
  %631 = icmp eq %"class.WTF::StringImpl"* %628, %630
  br i1 %631, label %692, label %632

632:                                              ; preds = %620, %615, %610
  %633 = call zeroext i1 @_ZN5blink10IsListItemEPKNS_4NodeE(%"class.blink::Node"* nonnull %598) #11
  br i1 %633, label %690, label %634

634:                                              ; preds = %632
  %635 = call zeroext i1 @_ZN5blink11IsTableCellEPKNS_4NodeE(%"class.blink::Node"* nonnull %598) #11
  br i1 %635, label %690, label %636

636:                                              ; preds = %634
  %637 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kPreTagE, align 8
  %638 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %637, i64 0, i32 0, i32 0, i32 0
  %639 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %638, align 8
  %640 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %598, i64 1, i32 2
  %641 = bitcast %"class.blink::Member"* %640 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %642 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %641, align 8
  %643 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %642, i64 0, i32 3, i32 0, i32 0, i32 0
  %644 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %643, align 8
  %645 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %639, i64 0, i32 3, i32 0, i32 0, i32 0
  %646 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %645, align 8
  %647 = icmp eq %"class.WTF::StringImpl"* %644, %646
  br i1 %647, label %690, label %648

648:                                              ; preds = %636
  %649 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH1TagE, align 8
  %650 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %649, i64 0, i32 0, i32 0, i32 0
  %651 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %650, align 8
  %652 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %651, i64 0, i32 3, i32 0, i32 0, i32 0
  %653 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %652, align 8
  %654 = icmp eq %"class.WTF::StringImpl"* %644, %653
  br i1 %654, label %690, label %655

655:                                              ; preds = %648
  %656 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH2TagE, align 8
  %657 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %656, i64 0, i32 0, i32 0, i32 0
  %658 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %657, align 8
  %659 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %658, i64 0, i32 3, i32 0, i32 0, i32 0
  %660 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %659, align 8
  %661 = icmp eq %"class.WTF::StringImpl"* %644, %660
  br i1 %661, label %690, label %662

662:                                              ; preds = %655
  %663 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH3TagE, align 8
  %664 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %663, i64 0, i32 0, i32 0, i32 0
  %665 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %664, align 8
  %666 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %665, i64 0, i32 3, i32 0, i32 0, i32 0
  %667 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %666, align 8
  %668 = icmp eq %"class.WTF::StringImpl"* %644, %667
  br i1 %668, label %690, label %669

669:                                              ; preds = %662
  %670 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH4TagE, align 8
  %671 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %670, i64 0, i32 0, i32 0, i32 0
  %672 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %671, align 8
  %673 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %672, i64 0, i32 3, i32 0, i32 0, i32 0
  %674 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %673, align 8
  %675 = icmp eq %"class.WTF::StringImpl"* %644, %674
  br i1 %675, label %690, label %676

676:                                              ; preds = %669
  %677 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH5TagE, align 8
  %678 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %677, i64 0, i32 0, i32 0, i32 0
  %679 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %678, align 8
  %680 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %679, i64 0, i32 3, i32 0, i32 0, i32 0
  %681 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %680, align 8
  %682 = icmp eq %"class.WTF::StringImpl"* %644, %681
  br i1 %682, label %690, label %683

683:                                              ; preds = %676
  %684 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kH6TagE, align 8
  %685 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %684, i64 0, i32 0, i32 0, i32 0
  %686 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %685, align 8
  %687 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %686, i64 0, i32 3, i32 0, i32 0, i32 0
  %688 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %687, align 8
  %689 = icmp eq %"class.WTF::StringImpl"* %644, %688
  br i1 %689, label %690, label %692

690:                                              ; preds = %683, %676, %669, %662, %655, %648, %636, %634, %632
  %691 = bitcast %"class.blink::Node"* %566 to %"class.blink::ContainerNode"*
  call void @_ZN5blink19ReplacementFragment28RemoveNodePreservingChildrenEPNS_13ContainerNodeE(%"class.blink::ReplacementFragment"* nonnull %13, %"class.blink::ContainerNode"* nonnull %691) #11
  br label %727

692:                                              ; preds = %683, %620, %605, %600, %597
  %693 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %693) #11
  call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::PositionTemplate"* nonnull %18) #11
  %694 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64 32) #11
  %695 = bitcast i8* %694 to %"class.blink::EditingStyle"*
  call void @_ZN5blink12EditingStyleC1ERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"* %695, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, i32 1) #11
  %696 = getelementptr inbounds i8, i8* %694, i64 -4
  %697 = bitcast i8* %696 to i16*
  %698 = load atomic i16, i16* %697 monotonic, align 2
  %699 = or i16 %698, 1
  store atomic i16 %699, i16* %697 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %693) #11
  %700 = bitcast i8* %694 to %"class.blink::MutableCSSPropertyValueSet"**
  %701 = load %"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::MutableCSSPropertyValueSet"** %700, align 8
  %702 = getelementptr inbounds %"class.blink::MutableCSSPropertyValueSet", %"class.blink::MutableCSSPropertyValueSet"* %701, i64 0, i32 0
  %703 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSPropertyValueSet6AsTextEv(%"class.blink::CSSPropertyValueSet"* %702) #11
  %704 = bitcast %"class.blink::Node"* %566 to %"class.blink::Element"*
  %705 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names10kStyleAttrE, align 8
  %706 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* nonnull %704, %"class.blink::QualifiedName"* dereferenceable(8) %705) #11
  %707 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %706, i64 0, i32 0, i32 0, i32 0
  %708 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %707, align 8
  %709 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %708, %"class.WTF::StringImpl"* %703) #11
  br i1 %709, label %710, label %712

710:                                              ; preds = %692
  %711 = bitcast %"class.blink::Node"* %566 to %"class.blink::ContainerNode"*
  call void @_ZN5blink19ReplacementFragment28RemoveNodePreservingChildrenEPNS_13ContainerNodeE(%"class.blink::ReplacementFragment"* nonnull %13, %"class.blink::ContainerNode"* nonnull %711) #11
  br label %712

712:                                              ; preds = %710, %692
  %713 = icmp eq %"class.WTF::StringImpl"* %703, null
  br i1 %713, label %727, label %714

714:                                              ; preds = %712
  %715 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %703, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %716 = load atomic i32, i32* %715 monotonic, align 4
  %717 = and i32 %716, 2
  %718 = icmp eq i32 %717, 0
  %719 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %703, i64 0, i32 0
  %720 = load i32, i32* %719, align 4
  br i1 %718, label %721, label %723

721:                                              ; preds = %714
  %722 = add i32 %720, -1
  store i32 %722, i32* %719, align 4
  br label %723

723:                                              ; preds = %721, %714
  %724 = phi i32 [ %722, %721 ], [ %720, %714 ]
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %726, label %727

726:                                              ; preds = %723
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %703) #11
  br label %727

727:                                              ; preds = %564, %568, %573, %585, %592, %690, %712, %723, %726
  %728 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %114, align 8
  %729 = icmp eq %"class.blink::DocumentFragment"* %728, null
  br i1 %729, label %734, label %730

730:                                              ; preds = %727
  %731 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %728, i64 0, i32 0, i32 1, i32 0, i32 0
  %732 = load %"class.blink::Node"*, %"class.blink::Node"** %731, align 8
  %733 = icmp eq %"class.blink::Node"* %732, null
  br i1 %733, label %734, label %744

734:                                              ; preds = %560, %730, %727
  %735 = phi %"class.blink::DocumentFragment"* [ %728, %730 ], [ null, %727 ], [ null, %560 ]
  %736 = phi i1 [ false, %730 ], [ true, %727 ], [ true, %560 ]
  %737 = load i8, i8* %115, align 8, !range !5
  %738 = icmp eq i8 %737, 0
  br i1 %738, label %740, label %739

739:                                              ; preds = %734
  br i1 %736, label %1628, label %744

740:                                              ; preds = %734
  %741 = load i8, i8* %116, align 1, !range !5
  %742 = icmp eq i8 %741, 0
  %743 = or i1 %736, %742
  br i1 %743, label %1628, label %744

744:                                              ; preds = %740, %730, %739
  %745 = phi %"class.blink::DocumentFragment"* [ %735, %739 ], [ %728, %730 ], [ %735, %740 ]
  %746 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %745, i64 0, i32 0, i32 1, i32 0, i32 0
  %747 = load %"class.blink::Node"*, %"class.blink::Node"** %746, align 8
  %748 = icmp eq %"class.blink::Node"* %747, null
  br i1 %748, label %1628, label %749

749:                                              ; preds = %744
  %750 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 6
  %751 = load i8, i8* %750, align 2, !range !5
  %752 = icmp eq i8 %751, 0
  br i1 %752, label %753, label %819

753:                                              ; preds = %749
  %754 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %18) #11
  %755 = call %"class.blink::HTMLElement"* @_ZN5blink13EnclosingListEPKNS_4NodeE(%"class.blink::Node"* %754) #11
  %756 = icmp eq %"class.blink::HTMLElement"* %755, null
  br i1 %756, label %757, label %819

757:                                              ; preds = %753
  %758 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %18) #11
  %759 = icmp eq %"class.blink::Node"* %758, null
  br i1 %759, label %786, label %760

760:                                              ; preds = %757
  %761 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %758, i64 0, i32 1
  %762 = load i32, i32* %761, align 8
  %763 = and i32 %762, 12
  %764 = icmp ne i32 %763, 4
  %765 = bitcast %"class.blink::Node"* %758 to %"class.blink::Text"*
  %766 = load i32, i32* %146, align 8
  %767 = icmp eq i32 %766, 0
  %768 = or i1 %764, %767
  br i1 %768, label %786, label %769

769:                                              ; preds = %760
  %770 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28AtLastEditingPositionForNodeEv(%"class.blink::PositionTemplate"* nonnull %18) #11
  br i1 %770, label %786, label %771

771:                                              ; preds = %769
  %772 = load i32, i32* %146, align 8
  call void @_ZN5blink20CompositeEditCommand13SplitTextNodeEPNS_4TextEj(%"class.blink::CompositeEditCommand"* %101, %"class.blink::Text"* nonnull %765, i32 %772) #11
  %773 = bitcast %"class.blink::PositionTemplate"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %773) #11
  %774 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %18) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %35, %"class.blink::Node"* dereferenceable(64) %774) #11
  %775 = bitcast %"class.blink::PositionTemplate"* %35 to i64*
  %776 = load i64, i64* %775, align 8
  store atomic i64 %776, i64* %307 monotonic, align 8
  %777 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %778 = icmp eq i32 %777, 0
  br i1 %778, label %782, label %779

779:                                              ; preds = %771
  %780 = inttoptr i64 %776 to i8*
  %781 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %780) #11
  br label %782

782:                                              ; preds = %771, %779
  %783 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %35, i64 0, i32 1
  %784 = bitcast i32* %783 to i64*
  %785 = load i64, i64* %784, align 8
  store i64 %785, i64* %316, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %773) #11
  br label %786

786:                                              ; preds = %760, %757, %782, %769
  %787 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %18) #11
  %788 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %787, i32 1) #11
  %789 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %788, i64 0, i32 0, i32 0
  %790 = call %"class.blink::Node"* @_ZN5blink26HighestEnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleEPS7_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18, i1 (%"class.blink::Node"*)* nonnull @_ZN5blinkL28IsInlineHTMLElementWithStyleEPKNS_4NodeE, i32 1, %"class.blink::Node"* %789) #11
  %791 = icmp eq %"class.blink::Node"* %790, null
  br i1 %791, label %819, label %792

792:                                              ; preds = %786
  %793 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %18) #11
  %794 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %790) #11
  %795 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %794, i64 0, i32 0
  %796 = icmp eq %"class.blink::Node"* %793, %795
  br i1 %796, label %819, label %797

797:                                              ; preds = %792
  %798 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ComputeNodeAfterPositionEv(%"class.blink::PositionTemplate"* nonnull %18) #11
  %799 = icmp eq %"class.blink::Node"* %798, null
  br i1 %799, label %800, label %802

800:                                              ; preds = %797
  %801 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %18) #11
  br label %802

802:                                              ; preds = %797, %800
  %803 = phi %"class.blink::Node"* [ %798, %797 ], [ %801, %800 ]
  %804 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %790) #11
  %805 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %804, i64 0, i32 0
  %806 = call %"class.blink::Node"* @_ZN5blink20CompositeEditCommand15SplitTreeToNodeEPNS_4NodeES2_b(%"class.blink::CompositeEditCommand"* %101, %"class.blink::Node"* %803, %"class.blink::Node"* %805, i1 zeroext false) #11
  %807 = bitcast %"class.blink::PositionTemplate"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %807) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE18InParentBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %36, %"class.blink::Node"* dereferenceable(64) %806) #11
  %808 = bitcast %"class.blink::PositionTemplate"* %36 to i64*
  %809 = load i64, i64* %808, align 8
  store atomic i64 %809, i64* %307 monotonic, align 8
  %810 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %811 = icmp eq i32 %810, 0
  br i1 %811, label %815, label %812

812:                                              ; preds = %802
  %813 = inttoptr i64 %809 to i8*
  %814 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %813) #11
  br label %815

815:                                              ; preds = %802, %812
  %816 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %36, i64 0, i32 1
  %817 = bitcast i32* %816 to i64*
  %818 = load i64, i64* %817, align 8
  store i64 %818, i64* %316, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %807) #11
  br label %819

819:                                              ; preds = %815, %786, %792, %753, %749
  %820 = bitcast %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %820) #11
  %821 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand::InsertedNodes", %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %37, i64 0, i32 0
  %822 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand::InsertedNodes", %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %37, i64 0, i32 1
  %823 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand::InsertedNodes", %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %37, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %820, i8 0, i64 24, i1 false) #11
  %824 = icmp eq %"class.blink::DocumentFragment"* %745, null
  br i1 %824, label %825, label %827

825:                                              ; preds = %819
  store %"class.blink::Node"* null, %"class.blink::Node"** %823, align 8
  %826 = load %"class.blink::Node"*, %"class.blink::Node"** inttoptr (i64 48 to %"class.blink::Node"**), align 16
  br label %841

827:                                              ; preds = %819
  %828 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %745, i64 0, i32 0, i32 1, i32 0, i32 0
  %829 = load %"class.blink::Node"*, %"class.blink::Node"** %828, align 8
  store %"class.blink::Node"* %829, %"class.blink::Node"** %823, align 8
  %830 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %829, i64 0, i32 5, i32 0, i32 0
  %831 = load %"class.blink::Node"*, %"class.blink::Node"** %830, align 8
  %832 = icmp eq %"class.blink::Node"* %829, null
  %833 = ptrtoint %"class.blink::Node"* %829 to i64
  br i1 %832, label %841, label %834

834:                                              ; preds = %827
  %835 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* nonnull %829) #11
  %836 = icmp eq %"class.blink::ContainerNode"* %835, null
  br i1 %836, label %839, label %837

837:                                              ; preds = %834
  %838 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* nonnull %835, %"class.blink::Node"* nonnull %829) #11
  br label %839

839:                                              ; preds = %837, %834
  %840 = bitcast %"class.blink::Node"* %829 to %"class.blink::HTMLElement"*
  br label %841

841:                                              ; preds = %839, %825, %827
  %842 = phi i64 [ %833, %839 ], [ 0, %825 ], [ %833, %827 ]
  %843 = phi %"class.blink::Node"* [ %829, %839 ], [ null, %825 ], [ null, %827 ]
  %844 = phi %"class.blink::HTMLElement"* [ %840, %839 ], [ null, %825 ], [ null, %827 ]
  %845 = phi %"class.blink::Node"* [ %831, %839 ], [ %826, %825 ], [ %831, %827 ]
  %846 = load %"class.blink::Node"*, %"class.blink::Node"** %145, align 8
  %847 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %846, i32 1) #11
  %848 = call zeroext i1 @_ZN5blink17IsHTMLListElementEPKNS_4NodeE(%"class.blink::Node"* %843) #11
  br i1 %848, label %866, label %849

849:                                              ; preds = %841
  %850 = icmp eq %"class.blink::Node"* %843, null
  br i1 %850, label %860, label %851

851:                                              ; preds = %849
  %852 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %843, i64 0, i32 1
  %853 = load i32, i32* %852, align 8
  %854 = and i32 %853, 2
  %855 = icmp eq i32 %854, 0
  br i1 %855, label %860, label %856

856:                                              ; preds = %851
  %857 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %843, i64 1
  %858 = bitcast %"class.blink::Node"* %857 to %"class.blink::Node"**
  %859 = load %"class.blink::Node"*, %"class.blink::Node"** %858, align 8
  br label %860

860:                                              ; preds = %849, %851, %856
  %861 = phi %"class.blink::Node"* [ %859, %856 ], [ null, %849 ], [ null, %851 ]
  %862 = call zeroext i1 @_ZN5blink17IsHTMLListElementEPKNS_4NodeE(%"class.blink::Node"* %861) #11
  %863 = xor i1 %862, true
  %864 = icmp eq %"class.blink::Element"* %847, null
  %865 = or i1 %864, %863
  br i1 %865, label %904, label %868

866:                                              ; preds = %841
  %867 = icmp eq %"class.blink::Element"* %847, null
  br i1 %867, label %904, label %868

868:                                              ; preds = %860, %866
  %869 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %847, i64 0, i32 0, i32 0
  %870 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %847, i64 0, i32 0, i32 0, i32 1
  %871 = load i32, i32* %870, align 8
  %872 = and i32 %871, 1
  %873 = icmp eq i32 %872, 0
  %874 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %847, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %873, label %879, label %875

875:                                              ; preds = %868
  %876 = bitcast %"class.blink::NodeData"** %874 to %"class.blink::NodeRareData"**
  %877 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %876, align 8
  %878 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %877, i64 0, i32 1, i32 0, i32 0
  br label %881

879:                                              ; preds = %868
  %880 = bitcast %"class.blink::NodeData"** %874 to %"class.blink::NodeRenderingData"**
  br label %881

881:                                              ; preds = %875, %879
  %882 = phi %"class.blink::NodeRenderingData"** [ %878, %875 ], [ %880, %879 ]
  %883 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %882, align 8
  %884 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %883, i64 0, i32 1
  %885 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %884, align 8
  %886 = bitcast %"class.blink::LayoutObject"* %885 to i1 (%"class.blink::LayoutObject"*, i32)***
  %887 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %886, align 8
  %888 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %887, i64 92
  %889 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %888, align 8
  %890 = call zeroext i1 %889(%"class.blink::LayoutObject"* %885, i32 14) #11
  br i1 %890, label %896, label %891

891:                                              ; preds = %881
  %892 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %886, align 8
  %893 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %892, i64 92
  %894 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %893, align 8
  %895 = call zeroext i1 %894(%"class.blink::LayoutObject"* %885, i32 29) #11
  br i1 %895, label %896, label %904

896:                                              ; preds = %881, %891
  %897 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %869) #11
  %898 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %897, i64 0, i32 0
  %899 = call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %898) #11
  br i1 %899, label %900, label %904

900:                                              ; preds = %896
  %901 = call %"class.blink::Node"* @_ZN5blink23ReplaceSelectionCommand17InsertAsListItemsEPNS_11HTMLElementEPNS_7ElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERNS0_13InsertedNodesEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::HTMLElement"* %844, %"class.blink::Element"* nonnull %847, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18, %"class.blink::ReplaceSelectionCommand::InsertedNodes"* nonnull dereferenceable(24) %37, %"class.blink::EditingState"* %1)
  store %"class.blink::Node"* %901, %"class.blink::Node"** %823, align 8
  %902 = load i8, i8* %122, align 1, !range !5
  %903 = icmp eq i8 %902, 0
  br i1 %903, label %910, label %1627

904:                                              ; preds = %860, %866, %896, %891
  call void @_ZN5blink20CompositeEditCommand12InsertNodeAtEPNS_4NodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::Node"* %843, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18, %"class.blink::EditingState"* %1) #11
  %905 = load i8, i8* %122, align 1, !range !5
  %906 = icmp eq i8 %905, 0
  br i1 %906, label %907, label %1627

907:                                              ; preds = %904
  %908 = bitcast %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %37 to i64*
  store i64 %842, i64* %908, align 8
  %909 = bitcast %"class.blink::Node"** %822 to i64*
  store i64 %842, i64* %909, align 8
  br label %910

910:                                              ; preds = %900, %907
  %911 = phi %"class.blink::Node"* [ %901, %900 ], [ %843, %907 ]
  %912 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %911, i64 0, i32 1
  %913 = load i32, i32* %912, align 8
  %914 = and i32 %913, 256
  %915 = icmp eq i32 %914, 0
  br i1 %915, label %1627, label %916

916:                                              ; preds = %910
  %917 = call zeroext i1 @_ZN5blink17IsPlainTextMarkupEPNS_4NodeE(%"class.blink::Node"* %911) #11
  %918 = zext i1 %917 to i8
  %919 = icmp eq %"class.blink::Node"* %845, null
  br i1 %919, label %955, label %920

920:                                              ; preds = %916
  %921 = load %"class.blink::Node"*, %"class.blink::Node"** %821, align 8
  %922 = load %"class.blink::Node"*, %"class.blink::Node"** %822, align 8
  br label %923

923:                                              ; preds = %920, %951
  %924 = phi %"class.blink::Node"* [ %911, %920 ], [ %928, %951 ]
  %925 = phi %"class.blink::Node"* [ %922, %920 ], [ %928, %951 ]
  %926 = phi %"class.blink::Node"* [ %921, %920 ], [ %940, %951 ]
  %927 = phi i8 [ %918, %920 ], [ %952, %951 ]
  %928 = phi %"class.blink::Node"* [ %845, %920 ], [ %930, %951 ]
  %929 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %928, i64 0, i32 5, i32 0, i32 0
  %930 = load %"class.blink::Node"*, %"class.blink::Node"** %929, align 8
  %931 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node27NonShadowBoundaryParentNodeEv(%"class.blink::Node"* nonnull %928) #11
  %932 = icmp eq %"class.blink::ContainerNode"* %931, null
  br i1 %932, label %935, label %933

933:                                              ; preds = %923
  %934 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeE(%"class.blink::ContainerNode"* nonnull %931, %"class.blink::Node"* nonnull %928) #11
  br label %935

935:                                              ; preds = %923, %933
  call void @_ZN5blink20CompositeEditCommand15InsertNodeAfterEPNS_4NodeES2_PNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::Node"* nonnull %928, %"class.blink::Node"* %924, %"class.blink::EditingState"* %1) #11
  %936 = load i8, i8* %122, align 1, !range !5
  %937 = icmp eq i8 %936, 0
  br i1 %937, label %938, label %1624

938:                                              ; preds = %935
  %939 = icmp eq %"class.blink::Node"* %926, null
  %940 = select i1 %939, %"class.blink::Node"* %928, %"class.blink::Node"* %926
  %941 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %928, i64 0, i32 1
  %942 = load i32, i32* %941, align 8
  %943 = and i32 %942, 256
  %944 = icmp eq i32 %943, 0
  br i1 %944, label %1624, label %945

945:                                              ; preds = %938
  store %"class.blink::Node"* %928, %"class.blink::Node"** %823, align 8
  %946 = and i8 %927, 1
  %947 = icmp eq i8 %946, 0
  br i1 %947, label %951, label %948

948:                                              ; preds = %945
  %949 = call zeroext i1 @_ZN5blink17IsPlainTextMarkupEPNS_4NodeE(%"class.blink::Node"* nonnull %928) #11
  %950 = zext i1 %949 to i8
  br label %951

951:                                              ; preds = %948, %945
  %952 = phi i8 [ %950, %948 ], [ %927, %945 ]
  %953 = icmp eq %"class.blink::Node"* %930, null
  br i1 %953, label %954, label %923

954:                                              ; preds = %951
  store %"class.blink::Node"* %940, %"class.blink::Node"** %821, align 8
  store %"class.blink::Node"* %928, %"class.blink::Node"** %822, align 8
  br label %955

955:                                              ; preds = %954, %916
  %956 = phi %"class.blink::Node"* [ %928, %954 ], [ %911, %916 ]
  %957 = phi i8 [ %952, %954 ], [ %918, %916 ]
  %958 = call zeroext i1 @_ZN5blink24IsRichlyEditablePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18) #11
  br i1 %958, label %959, label %963

959:                                              ; preds = %955
  call void @_ZN5blink23ReplaceSelectionCommand31RemoveUnrenderedTextNodesAtEndsERNS0_13InsertedNodesE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::ReplaceSelectionCommand::InsertedNodes"* nonnull dereferenceable(24) %37)
  %960 = load %"class.blink::Node"*, %"class.blink::Node"** %823, align 8
  %961 = icmp eq %"class.blink::Node"* %960, null
  br i1 %961, label %962, label %963

962:                                              ; preds = %959
  call void @_ZN5blink12EditingState5AbortEv(%"class.blink::EditingState"* %1) #11
  br label %1627

963:                                              ; preds = %959, %955
  %964 = phi %"class.blink::Node"* [ %960, %959 ], [ %956, %955 ]
  %965 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %965, i32 7) #11
  %966 = load %"class.blink::Node"*, %"class.blink::Node"** %821, align 8
  %967 = icmp eq %"class.blink::Node"* %966, null
  br i1 %967, label %1627, label %968

968:                                              ; preds = %963
  %969 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %966, i64 0, i32 1
  %970 = load i32, i32* %969, align 8
  %971 = and i32 %970, 256
  %972 = icmp eq i32 %971, 0
  br i1 %972, label %1627, label %973

973:                                              ; preds = %968
  br i1 %254, label %974, label %980

974:                                              ; preds = %973
  %975 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %250, i64 0, i32 0, i32 0, i32 1
  %976 = load i32, i32* %975, align 8
  %977 = and i32 %976, 256
  %978 = icmp eq i32 %977, 0
  %979 = select i1 %978, %"class.blink::Element"* null, %"class.blink::Element"* %250
  br label %980

980:                                              ; preds = %974, %973
  %981 = phi %"class.blink::Element"* [ null, %973 ], [ %979, %974 ]
  %982 = bitcast %"class.blink::VisiblePositionTemplate"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %982) #11
  %983 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %984 = bitcast %"class.blink::PositionTemplate"* %39 to i8*
  %985 = bitcast %"class.blink::VisiblePositionTemplate"* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %985, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %984) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %39, %"class.blink::Node"* nonnull dereferenceable(64) %966) #11
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %38, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %39, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %984) #11
  %986 = load %"class.blink::Node"*, %"class.blink::Node"** %983, align 8
  %987 = icmp ne %"class.blink::Node"* %986, null
  %988 = icmp ne %"class.blink::Element"* %981, null
  %989 = and i1 %988, %987
  br i1 %989, label %990, label %1010

990:                                              ; preds = %980
  %991 = load %"class.blink::Node"*, %"class.blink::Node"** %145, align 8
  %992 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %981, i64 0, i32 0, i32 0
  %993 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %992) #11
  %994 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %993, i64 0, i32 0
  %995 = icmp eq %"class.blink::Node"* %991, %994
  br i1 %995, label %996, label %1010

996:                                              ; preds = %990
  %997 = call i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate"* nonnull %18) #11
  %998 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* %992) #11
  %999 = icmp ult i32 %997, %998
  br i1 %999, label %1000, label %1010

1000:                                             ; preds = %996
  %1001 = call zeroext i1 @_ZN5blink18IsStartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %38, i32 1) #11
  br i1 %1001, label %1010, label %1002

1002:                                             ; preds = %1000
  %1003 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  %1004 = call %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %1003) #11
  %1005 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %1004, i64 0, i32 0, i32 0, i32 0, i32 0
  %1006 = bitcast %"class.blink::PositionTemplate"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1006) #11
  %1007 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %38, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %40, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %1007) #11
  call void @_ZN5blink20CompositeEditCommand12InsertNodeAtEPNS_4NodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::Node"* %1005, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %40, %"class.blink::EditingState"* %1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1006) #11
  %1008 = load i8, i8* %122, align 1, !range !5
  %1009 = icmp eq i8 %1008, 0
  br i1 %1009, label %1010, label %1622

1010:                                             ; preds = %1002, %980, %1000, %996, %990
  %1011 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %1011, i32 7) #11
  br i1 %226, label %1012, label %1093

1012:                                             ; preds = %1010
  %1013 = and i8 %957, 1
  %1014 = icmp eq i8 %1013, 0
  br i1 %1014, label %1015, label %1021

1015:                                             ; preds = %1012
  %1016 = call zeroext i1 @_ZN5blink23ReplaceSelectionCommand17ShouldRemoveEndBREPNS_13HTMLBRElementERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::HTMLBRElement"* nonnull %221, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %25)
  br i1 %1016, label %1017, label %1093

1017:                                             ; preds = %1015
  %1018 = load i8, i8* %116, align 1, !range !5
  %1019 = icmp eq i8 %1018, 0
  %1020 = or i1 %134, %1019
  br i1 %1020, label %1021, label %1093

1021:                                             ; preds = %1017, %1012
  %1022 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %221, i64 0, i32 0, i32 0, i32 0, i32 0
  %1023 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1022) #11
  %1024 = icmp eq %"class.blink::Node"* %966, %1022
  %1025 = load %"class.blink::Node"*, %"class.blink::Node"** %822, align 8
  %1026 = icmp eq %"class.blink::Node"* %1025, %1022
  br i1 %1024, label %1027, label %1037

1027:                                             ; preds = %1021
  br i1 %1026, label %1028, label %1029

1028:                                             ; preds = %1027
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %820, i8 0, i64 16, i1 false) #11
  br label %1040

1029:                                             ; preds = %1027
  %1030 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %221, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %1031 = load %"class.blink::Node"*, %"class.blink::Node"** %1030, align 8
  %1032 = icmp eq %"class.blink::Node"* %1031, null
  br i1 %1032, label %1033, label %1035

1033:                                             ; preds = %1029
  %1034 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1022) #11
  br label %1035

1035:                                             ; preds = %1033, %1029
  %1036 = phi %"class.blink::Node"* [ %1034, %1033 ], [ %1031, %1029 ]
  store %"class.blink::Node"* %1036, %"class.blink::Node"** %821, align 8
  br label %1040

1037:                                             ; preds = %1021
  br i1 %1026, label %1038, label %1040

1038:                                             ; preds = %1037
  %1039 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal23PreviousAbsoluteSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %1022, %"class.blink::Node"* null) #11
  store %"class.blink::Node"* %1039, %"class.blink::Node"** %822, align 8
  br label %1040

1040:                                             ; preds = %1038, %1037, %1035, %1028
  %1041 = phi %"class.blink::Node"* [ %1039, %1038 ], [ %1025, %1037 ], [ %1025, %1035 ], [ null, %1028 ]
  %1042 = phi %"class.blink::Node"* [ %966, %1038 ], [ %966, %1037 ], [ %1036, %1035 ], [ null, %1028 ]
  %1043 = call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* %1022, %"class.blink::Node"* %964) #11
  br i1 %1043, label %1044, label %1052

1044:                                             ; preds = %1040
  %1045 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %221, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 0
  %1046 = load %"class.blink::Node"*, %"class.blink::Node"** %1045, align 8
  %1047 = icmp eq %"class.blink::Node"* %1046, null
  br i1 %1047, label %1048, label %1050

1048:                                             ; preds = %1044
  %1049 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1022) #11
  br label %1050

1050:                                             ; preds = %1048, %1044
  %1051 = phi %"class.blink::Node"* [ %1049, %1048 ], [ %1046, %1044 ]
  store %"class.blink::Node"* %1051, %"class.blink::Node"** %823, align 8
  br label %1052

1052:                                             ; preds = %1040, %1050
  %1053 = phi %"class.blink::Node"* [ %964, %1040 ], [ %1051, %1050 ]
  %1054 = icmp eq %"class.blink::Node"* %1053, null
  br i1 %1054, label %1055, label %1056

1055:                                             ; preds = %1052
  call void @_ZN5blink12EditingState5AbortEv(%"class.blink::EditingState"* %1) #11
  br label %1622

1056:                                             ; preds = %1052
  call void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::Node"* %1022, %"class.blink::EditingState"* %1, i32 1) #11
  %1057 = load i8, i8* %122, align 1, !range !5
  %1058 = icmp eq i8 %1057, 0
  br i1 %1058, label %1059, label %1622

1059:                                             ; preds = %1056
  %1060 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1023, i64 0, i32 0
  %1061 = call %"class.blink::Node"* @_ZN5blink28HighestNodeToRemoveInPruningEPNS_4NodeEPKS0_(%"class.blink::Node"* %1060, %"class.blink::Node"* null) #11
  %1062 = icmp eq %"class.blink::Node"* %1061, null
  br i1 %1062, label %1093, label %1063

1063:                                             ; preds = %1059
  %1064 = icmp eq %"class.blink::Node"* %1042, %1061
  %1065 = icmp eq %"class.blink::Node"* %1041, %1061
  br i1 %1064, label %1066, label %1076

1066:                                             ; preds = %1063
  br i1 %1065, label %1067, label %1068

1067:                                             ; preds = %1066
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %820, i8 0, i64 16, i1 false) #11
  br label %1079

1068:                                             ; preds = %1066
  %1069 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1042, i64 0, i32 5, i32 0, i32 0
  %1070 = load %"class.blink::Node"*, %"class.blink::Node"** %1069, align 8
  %1071 = icmp eq %"class.blink::Node"* %1070, null
  br i1 %1071, label %1072, label %1074

1072:                                             ; preds = %1068
  %1073 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %1042) #11
  br label %1074

1074:                                             ; preds = %1072, %1068
  %1075 = phi %"class.blink::Node"* [ %1073, %1072 ], [ %1070, %1068 ]
  store %"class.blink::Node"* %1075, %"class.blink::Node"** %821, align 8
  br label %1079

1076:                                             ; preds = %1063
  br i1 %1065, label %1077, label %1079

1077:                                             ; preds = %1076
  %1078 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal23PreviousAbsoluteSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %1041, %"class.blink::Node"* null) #11
  store %"class.blink::Node"* %1078, %"class.blink::Node"** %822, align 8
  br label %1079

1079:                                             ; preds = %1077, %1076, %1074, %1067
  %1080 = call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* nonnull %1061, %"class.blink::Node"* nonnull %1053) #11
  br i1 %1080, label %1081, label %1090

1081:                                             ; preds = %1079
  %1082 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1061, i64 0, i32 5, i32 0, i32 0
  %1083 = load %"class.blink::Node"*, %"class.blink::Node"** %1082, align 8
  %1084 = icmp eq %"class.blink::Node"* %1083, null
  br i1 %1084, label %1086, label %1085

1085:                                             ; preds = %1081
  store %"class.blink::Node"* %1083, %"class.blink::Node"** %823, align 8
  br label %1090

1086:                                             ; preds = %1081
  %1087 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %1061) #11
  store %"class.blink::Node"* %1087, %"class.blink::Node"** %823, align 8
  %1088 = icmp eq %"class.blink::Node"* %1087, null
  br i1 %1088, label %1089, label %1090

1089:                                             ; preds = %1086
  call void @_ZN5blink12EditingState5AbortEv(%"class.blink::EditingState"* %1) #11
  br label %1622

1090:                                             ; preds = %1079, %1085, %1086
  call void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::Node"* nonnull %1061, %"class.blink::EditingState"* %1, i32 1) #11
  %1091 = load i8, i8* %122, align 1, !range !5
  %1092 = icmp eq i8 %1091, 0
  br i1 %1092, label %1093, label %1622

1093:                                             ; preds = %1090, %1059, %1017, %1015, %1010
  call void @_ZN5blink23ReplaceSelectionCommand52MakeInsertedContentRoundTrippableWithHTMLTreeBuilderERKNS0_13InsertedNodesEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::ReplaceSelectionCommand::InsertedNodes"* nonnull dereferenceable(24) %37, %"class.blink::EditingState"* %1)
  %1094 = load i8, i8* %122, align 1, !range !5
  %1095 = icmp eq i8 %1094, 0
  br i1 %1095, label %1096, label %1622

1096:                                             ; preds = %1093
  call void @_ZN5blink23ReplaceSelectionCommand43RemoveRedundantStylesAndKeepStyleSpanInlineERNS0_13InsertedNodesEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::ReplaceSelectionCommand::InsertedNodes"* nonnull dereferenceable(24) %37, %"class.blink::EditingState"* %1)
  %1097 = load i8, i8* %122, align 1, !range !5
  %1098 = icmp eq i8 %1097, 0
  br i1 %1098, label %1099, label %1622

1099:                                             ; preds = %1096
  %1100 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 11
  %1101 = load i8, i8* %1100, align 8, !range !5
  %1102 = icmp eq i8 %1101, 0
  br i1 %1102, label %1140, label %1103

1103:                                             ; preds = %1099
  %1104 = load %"class.blink::Node"*, %"class.blink::Node"** %821, align 8
  %1105 = icmp eq %"class.blink::Node"* %1104, null
  br i1 %1105, label %1106, label %1108

1106:                                             ; preds = %1103
  %1107 = bitcast %"class.blink::PositionTemplate"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1107) #11
  br label %1145

1108:                                             ; preds = %1103
  %1109 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  %1110 = load %"class.blink::Node"*, %"class.blink::Node"** %822, align 8
  %1111 = icmp eq %"class.blink::Node"* %1110, null
  br i1 %1111, label %1129, label %1112

1112:                                             ; preds = %1108
  %1113 = call dereferenceable(64) %"class.blink::Node"* @_ZN5blink13NodeTraversal16LastWithinOrSelfERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %1110) #11
  %1114 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1113, i64 0, i32 1
  %1115 = load i32, i32* %1114, align 8
  %1116 = and i32 %1115, 2
  %1117 = icmp eq i32 %1116, 0
  br i1 %1117, label %1123, label %1118

1118:                                             ; preds = %1112
  %1119 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1113, i64 1
  %1120 = bitcast %"class.blink::Node"* %1119 to %"class.blink::Node"**
  %1121 = load %"class.blink::Node"*, %"class.blink::Node"** %1120, align 8
  %1122 = icmp eq %"class.blink::Node"* %1121, null
  br i1 %1122, label %1123, label %1129

1123:                                             ; preds = %1118, %1112
  %1124 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1113, i64 0, i32 5, i32 0, i32 0
  %1125 = load %"class.blink::Node"*, %"class.blink::Node"** %1124, align 8
  %1126 = icmp eq %"class.blink::Node"* %1125, null
  br i1 %1126, label %1127, label %1129

1127:                                             ; preds = %1123
  %1128 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1113) #11
  br label %1129

1129:                                             ; preds = %1108, %1118, %1123, %1127
  %1130 = phi %"class.blink::Node"* [ null, %1108 ], [ %1128, %1127 ], [ %1125, %1123 ], [ %1121, %1118 ]
  %1131 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11EditCommandEEEPhm(i64 168) #11
  %1132 = bitcast i8* %1131 to %"class.blink::SimplifyMarkupCommand"*
  call void @_ZN5blink21SimplifyMarkupCommandC1ERNS_8DocumentEPNS_4NodeES4_(%"class.blink::SimplifyMarkupCommand"* %1132, %"class.blink::Document"* dereferenceable(2848) %1109, %"class.blink::Node"* nonnull %1104, %"class.blink::Node"* %1130) #11
  %1133 = getelementptr inbounds i8, i8* %1131, i64 -4
  %1134 = bitcast i8* %1133 to i16*
  %1135 = load atomic i16, i16* %1134 monotonic, align 2
  %1136 = or i16 %1135, 1
  store atomic i16 %1136, i16* %1134 release, align 2
  %1137 = bitcast i8* %1131 to %"class.blink::EditCommand"*
  call void @_ZN5blink20CompositeEditCommand23ApplyCommandToCompositeEPNS_11EditCommandEPNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::EditCommand"* %1137, %"class.blink::EditingState"* %1) #11
  %1138 = load i8, i8* %122, align 1, !range !5
  %1139 = icmp eq i8 %1138, 0
  br i1 %1139, label %1140, label %1622

1140:                                             ; preds = %1129, %1099
  %1141 = load %"class.blink::Node"*, %"class.blink::Node"** %821, align 8
  %1142 = bitcast %"class.blink::PositionTemplate"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1142) #11
  %1143 = icmp eq %"class.blink::Node"* %1141, null
  br i1 %1143, label %1145, label %1144

1144:                                             ; preds = %1140
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %41, %"class.blink::Node"* nonnull dereferenceable(64) %1141) #11
  br label %1147

1145:                                             ; preds = %1106, %1140
  %1146 = phi i8* [ %1107, %1106 ], [ %1142, %1140 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1146, i8 0, i64 16, i1 false) #11
  br label %1147

1147:                                             ; preds = %1145, %1144
  %1148 = phi %"class.blink::Node"* [ null, %1145 ], [ %1141, %1144 ]
  %1149 = phi i8* [ %1146, %1145 ], [ %1142, %1144 ]
  %1150 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 1
  %1151 = bitcast %"class.blink::PositionTemplate"* %41 to i64*
  %1152 = load i64, i64* %1151, align 8
  %1153 = bitcast %"class.blink::PositionTemplate"* %1150 to i64*
  store atomic i64 %1152, i64* %1153 monotonic, align 8
  %1154 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1155 = icmp eq i32 %1154, 0
  br i1 %1155, label %1159, label %1156

1156:                                             ; preds = %1147
  %1157 = inttoptr i64 %1152 to i8*
  %1158 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1157) #11
  br label %1159

1159:                                             ; preds = %1147, %1156
  %1160 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 1, i32 1
  %1161 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %41, i64 0, i32 1
  %1162 = bitcast i32* %1161 to i64*
  %1163 = bitcast i32* %1160 to i64*
  %1164 = load i64, i64* %1162, align 8
  store i64 %1164, i64* %1163, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1149) #11
  %1165 = bitcast %"class.blink::PositionTemplate"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1165) #11
  %1166 = load %"class.blink::Node"*, %"class.blink::Node"** %822, align 8
  %1167 = icmp eq %"class.blink::Node"* %1166, null
  br i1 %1167, label %1175, label %1168

1168:                                             ; preds = %1159
  %1169 = call dereferenceable(64) %"class.blink::Node"* @_ZN5blink13NodeTraversal16LastWithinOrSelfERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %1166) #11
  %1170 = icmp eq %"class.blink::Node"* %1169, null
  br i1 %1170, label %1175, label %1171

1171:                                             ; preds = %1168
  %1172 = call dereferenceable(64) %"class.blink::Node"* @_ZN5blink13NodeTraversal16LastWithinOrSelfERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %1166) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %42, %"class.blink::Node"* dereferenceable(64) %1172) #11
  %1173 = bitcast %"class.blink::PositionTemplate"* %42 to i64*
  %1174 = load i64, i64* %1173, align 8
  br label %1176

1175:                                             ; preds = %1159, %1168
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1165, i8 0, i64 16, i1 false) #11
  br label %1176

1176:                                             ; preds = %1175, %1171
  %1177 = phi i64 [ 0, %1175 ], [ %1174, %1171 ]
  %1178 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 2
  %1179 = bitcast %"class.blink::PositionTemplate"* %1178 to i64*
  store atomic i64 %1177, i64* %1179 monotonic, align 8
  %1180 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1181 = icmp eq i32 %1180, 0
  br i1 %1181, label %1185, label %1182

1182:                                             ; preds = %1176
  %1183 = inttoptr i64 %1177 to i8*
  %1184 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1183) #11
  br label %1185

1185:                                             ; preds = %1176, %1182
  %1186 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 2, i32 1
  %1187 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %42, i64 0, i32 1
  %1188 = bitcast i32* %1187 to i64*
  %1189 = bitcast i32* %1186 to i64*
  %1190 = load i64, i64* %1188, align 8
  store i64 %1190, i64* %1189, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1165) #11
  %1191 = call zeroext i1 @_ZN5blink23ReplaceSelectionCommand14ShouldMergeEndEb(%"class.blink::ReplaceSelectionCommand"* %0, i1 zeroext %136)
  %1192 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 12
  %1193 = zext i1 %1191 to i8
  store i8 %1193, i8* %1192, align 1
  %1194 = load i8, i8* %115, align 8, !range !5
  %1195 = icmp ne i8 %1194, 0
  %1196 = call zeroext i1 @_ZN5blink23ReplaceSelectionCommand16ShouldMergeStartEbbb(%"class.blink::ReplaceSelectionCommand"* %0, i1 zeroext %139, i1 zeroext %1195, i1 zeroext %131)
  br i1 %1196, label %1197, label %1455

1197:                                             ; preds = %1185
  %1198 = bitcast %"class.blink::VisiblePositionTemplate"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1198) #11
  %1199 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %43, i64 0, i32 0, i32 0, i32 1
  %1200 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %43, i64 0, i32 0, i32 1
  %1201 = bitcast %"class.blink::VisiblePositionTemplate"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1201, i8 -86, i64 24, i1 false)
  %1202 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8, !noalias !18
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %1202, i32 7) #11, !noalias !18
  %1203 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1150, i64 0, i32 0, i32 0, i32 0
  %1204 = load %"class.blink::Node"*, %"class.blink::Node"** %1203, align 8, !noalias !18
  %1205 = icmp eq %"class.blink::Node"* %1204, null
  br i1 %1205, label %1209, label %1206

1206:                                             ; preds = %1197
  %1207 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* %1150) #11
  br i1 %1207, label %1209, label %1208

1208:                                             ; preds = %1206
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::VisiblePositionTemplate"* nonnull %43) #11
  br label %1210

1209:                                             ; preds = %1206, %1197
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %43, %"class.blink::PositionTemplate"* dereferenceable(16) %1150, i32 1) #11
  br label %1210

1210:                                             ; preds = %1208, %1209
  %1211 = bitcast %"class.blink::VisiblePositionTemplate"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1211) #11
  %1212 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %44, i64 0, i32 0, i32 0, i32 1
  %1213 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %44, i64 0, i32 0, i32 1
  %1214 = bitcast %"class.blink::VisiblePositionTemplate"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1214, i8 -86, i64 24, i1 false)
  call void @_ZN5blink18PreviousPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %44, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %43, i32 0) #11
  %1215 = bitcast %"class.blink::PositionWithAffinityTemplate"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1215) #11
  %1216 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %1217 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %45, i64 0, i32 0, i32 1
  %1218 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %45, i64 0, i32 0, i32 2
  %1219 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %45, i64 0, i32 1
  %1220 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %45, i64 0, i32 0
  %1221 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %43, i64 0, i32 0, i32 0
  %1222 = bitcast %"class.blink::PositionWithAffinityTemplate"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1222, i8 -86, i64 24, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %1220, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %1221) #11
  %1223 = load i32, i32* %1200, align 8, !noalias !21
  store i32 %1223, i32* %1219, align 8, !alias.scope !21
  %1224 = bitcast %"class.blink::PositionWithAffinityTemplate"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1224) #11
  %1225 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %46, i64 0, i32 1
  %1226 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %46, i64 0, i32 0
  %1227 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %44, i64 0, i32 0, i32 0
  %1228 = bitcast %"class.blink::PositionWithAffinityTemplate"* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1228, i8 -86, i64 24, i1 false)
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %1226, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %1227) #11
  %1229 = load i32, i32* %1213, align 8, !noalias !24
  store i32 %1229, i32* %1225, align 8, !alias.scope !24
  %1230 = bitcast %"class.blink::PositionTemplate"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1230) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %47, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %1227) #11
  %1231 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %47, i64 0, i32 0, i32 0, i32 0
  %1232 = load %"class.blink::Node"*, %"class.blink::Node"** %1231, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1230) #11
  %1233 = load i8, i8* %1192, align 1, !range !5
  %1234 = icmp eq i8 %1233, 0
  br i1 %1234, label %1320, label %1235

1235:                                             ; preds = %1210
  %1236 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %1237 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1236, i64 0, i32 0, i32 0, i32 0
  %1238 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1232) #11
  %1239 = icmp eq %"class.blink::ContainerNode"* %1238, null
  br i1 %1239, label %1320, label %1243

1240:                                             ; preds = %1264
  %1241 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1246) #11
  %1242 = icmp eq %"class.blink::ContainerNode"* %1241, null
  br i1 %1242, label %1271, label %1243

1243:                                             ; preds = %1235, %1240
  %1244 = phi %"class.blink::ContainerNode"* [ %1241, %1240 ], [ %1238, %1235 ]
  %1245 = phi %"class.blink::Node"* [ %1246, %1240 ], [ %1232, %1235 ]
  %1246 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1244, i64 0, i32 0
  %1247 = call zeroext i1 @_ZN5blink18IsBlockFlowElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1246) #11
  br i1 %1247, label %1271, label %1248

1248:                                             ; preds = %1243
  %1249 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1244, i64 0, i32 0, i32 1
  %1250 = load i32, i32* %1249, align 8
  %1251 = and i32 %1250, 48
  %1252 = icmp eq i32 %1251, 0
  br i1 %1252, label %1253, label %1263

1253:                                             ; preds = %1248
  %1254 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1237, align 8
  %1255 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1246, i64 1, i32 2
  %1256 = bitcast %"class.blink::Member"* %1255 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1257 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1256, align 8
  %1258 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1257, i64 0, i32 3, i32 0, i32 0, i32 0
  %1259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1258, align 8
  %1260 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1254, i64 0, i32 3, i32 0, i32 0, i32 0
  %1261 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1260, align 8
  %1262 = icmp eq %"class.WTF::StringImpl"* %1259, %1261
  br i1 %1262, label %1271, label %1263

1263:                                             ; preds = %1253, %1248
  br label %1264

1264:                                             ; preds = %1263, %1269
  %1265 = phi %"class.blink::Node"* [ %1267, %1269 ], [ %1245, %1263 ]
  %1266 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1265, i64 0, i32 4, i32 0, i32 0
  %1267 = load %"class.blink::Node"*, %"class.blink::Node"** %1266, align 8
  %1268 = icmp eq %"class.blink::Node"* %1267, null
  br i1 %1268, label %1240, label %1269

1269:                                             ; preds = %1264
  %1270 = call zeroext i1 @_ZN5blink18IsBlockFlowElementERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %1267) #11
  br i1 %1270, label %1271, label %1264

1271:                                             ; preds = %1253, %1243, %1240, %1269
  %1272 = phi %"class.blink::Node"* [ %1245, %1269 ], [ %1245, %1253 ], [ %1245, %1243 ], [ %1246, %1240 ]
  %1273 = icmp eq %"class.blink::Node"* %1232, %1272
  br i1 %1273, label %1320, label %1274

1274:                                             ; preds = %1271
  %1275 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1232) #11
  %1276 = icmp eq %"class.blink::ContainerNode"* %1275, null
  br i1 %1276, label %1308, label %1280

1277:                                             ; preds = %1301
  %1278 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1283) #11
  %1279 = icmp eq %"class.blink::ContainerNode"* %1278, null
  br i1 %1279, label %1308, label %1280

1280:                                             ; preds = %1274, %1277
  %1281 = phi %"class.blink::ContainerNode"* [ %1278, %1277 ], [ %1275, %1274 ]
  %1282 = phi %"class.blink::Node"* [ %1283, %1277 ], [ %1232, %1274 ]
  %1283 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1281, i64 0, i32 0
  %1284 = call zeroext i1 @_ZN5blink18IsBlockFlowElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %1283) #11
  br i1 %1284, label %1308, label %1285

1285:                                             ; preds = %1280
  %1286 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1281, i64 0, i32 0, i32 1
  %1287 = load i32, i32* %1286, align 8
  %1288 = and i32 %1287, 48
  %1289 = icmp eq i32 %1288, 0
  br i1 %1289, label %1290, label %1300

1290:                                             ; preds = %1285
  %1291 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1237, align 8
  %1292 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1283, i64 1, i32 2
  %1293 = bitcast %"class.blink::Member"* %1292 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1294 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1293, align 8
  %1295 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1294, i64 0, i32 3, i32 0, i32 0, i32 0
  %1296 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1295, align 8
  %1297 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1291, i64 0, i32 3, i32 0, i32 0, i32 0
  %1298 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1297, align 8
  %1299 = icmp eq %"class.WTF::StringImpl"* %1296, %1298
  br i1 %1299, label %1308, label %1300

1300:                                             ; preds = %1290, %1285
  br label %1301

1301:                                             ; preds = %1300, %1306
  %1302 = phi %"class.blink::Node"* [ %1304, %1306 ], [ %1282, %1300 ]
  %1303 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1302, i64 0, i32 4, i32 0, i32 0
  %1304 = load %"class.blink::Node"*, %"class.blink::Node"** %1303, align 8
  %1305 = icmp eq %"class.blink::Node"* %1304, null
  br i1 %1305, label %1277, label %1306

1306:                                             ; preds = %1301
  %1307 = call zeroext i1 @_ZN5blink18IsBlockFlowElementERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %1304) #11
  br i1 %1307, label %1308, label %1301

1308:                                             ; preds = %1290, %1280, %1277, %1306, %1274
  %1309 = phi %"class.blink::Node"* [ %1232, %1274 ], [ %1282, %1306 ], [ %1282, %1290 ], [ %1282, %1280 ], [ %1283, %1277 ]
  %1310 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1309, i64 0, i32 5, i32 0, i32 0
  %1311 = load %"class.blink::Node"*, %"class.blink::Node"** %1310, align 8
  %1312 = icmp eq %"class.blink::Node"* %1311, null
  br i1 %1312, label %1320, label %1313

1313:                                             ; preds = %1308
  %1314 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  %1315 = call %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %1314) #11
  %1316 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %1315, i64 0, i32 0, i32 0, i32 0, i32 0
  %1317 = load %"class.blink::Node"*, %"class.blink::Node"** %823, align 8
  call void @_ZN5blink20CompositeEditCommand16InsertNodeBeforeEPNS_4NodeES2_PNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::Node"* %1316, %"class.blink::Node"* %1317, %"class.blink::EditingState"* %1, i32 1) #11
  %1318 = load i8, i8* %122, align 1, !range !5
  %1319 = icmp eq i8 %1318, 0
  br i1 %1319, label %1320, label %1450

1320:                                             ; preds = %1235, %1313, %1308, %1271, %1210
  %1321 = bitcast %"class.blink::VisiblePositionTemplate"* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1321) #11
  %1322 = bitcast %"class.blink::VisiblePositionTemplate"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1322, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink23ReplaceSelectionCommand30PositionAtEndOfInsertedContentEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %48, %"class.blink::ReplaceSelectionCommand"* %0)
  %1323 = bitcast %"class.blink::PositionTemplate"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1323) #11
  %1324 = bitcast %"class.blink::VisiblePositionTemplate"* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1324) #11
  call void @_ZN5blink16StartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %50, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %48, i32 1) #11
  %1325 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %50, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %49, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %1325) #11
  %1326 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %49, i64 0, i32 0, i32 0, i32 0
  %1327 = load %"class.blink::Node"*, %"class.blink::Node"** %1326, align 8
  %1328 = icmp eq %"class.blink::Node"* %1327, null
  %1329 = load %"class.blink::Node"*, %"class.blink::Node"** %1216, align 8
  br i1 %1328, label %1330, label %1332

1330:                                             ; preds = %1320
  %1331 = icmp eq %"class.blink::Node"* %1329, null
  br label %1346

1332:                                             ; preds = %1320
  %1333 = icmp eq %"class.blink::Node"* %1327, %1329
  br i1 %1333, label %1334, label %1363

1334:                                             ; preds = %1332
  %1335 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %49, i64 0, i32 2
  %1336 = load i32, i32* %1335, align 4
  %1337 = load i32, i32* %1218, align 4
  %1338 = icmp eq i32 %1336, %1337
  br i1 %1338, label %1339, label %1361

1339:                                             ; preds = %1334
  %1340 = icmp eq i32 %1336, 0
  br i1 %1340, label %1341, label %1349

1341:                                             ; preds = %1339
  %1342 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %49, i64 0, i32 1
  %1343 = load i32, i32* %1342, align 8
  %1344 = load i32, i32* %1217, align 8
  %1345 = icmp eq i32 %1343, %1344
  br label %1346

1346:                                             ; preds = %1330, %1341
  %1347 = phi i1 [ %1331, %1330 ], [ %1345, %1341 ]
  %1348 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %50, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1348) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1324) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1323) #11
  br i1 %1347, label %1351, label %1365

1349:                                             ; preds = %1339
  %1350 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %50, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1350) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1324) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1323) #11
  br label %1351

1351:                                             ; preds = %1349, %1346
  %1352 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  %1353 = call %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %1352) #11
  %1354 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %1353, i64 0, i32 0, i32 0, i32 0, i32 0
  %1355 = bitcast %"class.blink::PositionTemplate"* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1355) #11
  %1356 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %48, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %51, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %1356) #11
  call void @_ZN5blink20CompositeEditCommand12InsertNodeAtEPNS_4NodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::Node"* %1354, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %51, %"class.blink::EditingState"* %1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1355) #11
  %1357 = load i8, i8* %122, align 1, !range !5
  %1358 = icmp eq i8 %1357, 0
  br i1 %1358, label %1359, label %1447

1359:                                             ; preds = %1351
  %1360 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* nonnull %1220) #11
  br i1 %1360, label %1365, label %1447

1361:                                             ; preds = %1334
  %1362 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %50, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1362) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1324) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1323) #11
  br label %1365

1363:                                             ; preds = %1332
  %1364 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %50, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1364) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1324) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1323) #11
  br label %1365

1365:                                             ; preds = %1363, %1361, %1359, %1346
  %1366 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %1366, i32 7) #11
  %1367 = bitcast %"class.blink::VisiblePositionTemplate"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1367) #11
  call void @_ZN5blink21CreateVisiblePositionERKNS_28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* nonnull sret %52, %"class.blink::PositionWithAffinityTemplate"* nonnull dereferenceable(24) %45) #11
  %1368 = bitcast %"class.blink::VisiblePositionTemplate"* %52 to i64*
  %1369 = load i64, i64* %1368, align 8
  %1370 = bitcast %"class.blink::VisiblePositionTemplate"* %43 to i64*
  store atomic i64 %1369, i64* %1370 monotonic, align 8
  %1371 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1372 = icmp eq i32 %1371, 0
  br i1 %1372, label %1376, label %1373

1373:                                             ; preds = %1365
  %1374 = inttoptr i64 %1369 to i8*
  %1375 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1374) #11
  br label %1376

1376:                                             ; preds = %1365, %1373
  %1377 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %52, i64 0, i32 0, i32 0, i32 1
  %1378 = bitcast i32* %1377 to i64*
  %1379 = bitcast i32* %1199 to i64*
  %1380 = load i64, i64* %1378, align 8
  store i64 %1380, i64* %1379, align 8
  %1381 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %52, i64 0, i32 0, i32 1
  %1382 = load i32, i32* %1381, align 8
  store i32 %1382, i32* %1200, align 8
  %1383 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %52, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1383) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1367) #11
  %1384 = bitcast %"class.blink::VisiblePositionTemplate"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1384) #11
  call void @_ZN5blink21CreateVisiblePositionERKNS_28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* nonnull sret %53, %"class.blink::PositionWithAffinityTemplate"* nonnull dereferenceable(24) %46) #11
  %1385 = bitcast %"class.blink::VisiblePositionTemplate"* %53 to i64*
  %1386 = load i64, i64* %1385, align 8
  %1387 = bitcast %"class.blink::VisiblePositionTemplate"* %44 to i64*
  store atomic i64 %1386, i64* %1387 monotonic, align 8
  %1388 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1389 = icmp eq i32 %1388, 0
  br i1 %1389, label %1393, label %1390

1390:                                             ; preds = %1376
  %1391 = inttoptr i64 %1386 to i8*
  %1392 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1391) #11
  br label %1393

1393:                                             ; preds = %1376, %1390
  %1394 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %53, i64 0, i32 0, i32 0, i32 1
  %1395 = bitcast i32* %1394 to i64*
  %1396 = bitcast i32* %1212 to i64*
  %1397 = load i64, i64* %1395, align 8
  store i64 %1397, i64* %1396, align 8
  %1398 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %53, i64 0, i32 0, i32 1
  %1399 = load i32, i32* %1398, align 8
  store i32 %1399, i32* %1213, align 8
  %1400 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %53, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1400) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1384) #11
  %1401 = bitcast %"class.blink::VisiblePositionTemplate"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1401) #11
  call void @_ZN5blink14EndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %54, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %43, i32 1) #11
  call void @_ZN5blink20CompositeEditCommand13MoveParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES7_S7_PNS_12EditingStateENS0_23ShouldPreserveSelectionENS0_19ShouldPreserveStyleEPNS_4NodeE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %43, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %54, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %44, %"class.blink::EditingState"* %1, i32 1, i32 0, %"class.blink::Node"* null) #11
  %1402 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %54, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1402) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1401) #11
  %1403 = load i8, i8* %122, align 1, !range !5
  %1404 = icmp eq i8 %1403, 0
  br i1 %1404, label %1405, label %1447

1405:                                             ; preds = %1393
  %1406 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %1406, i32 7) #11
  %1407 = bitcast %"class.blink::VisibleSelectionTemplate"* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1407) #11
  call void @_ZNK5blink20CompositeEditCommand22EndingVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %55, %"class.blink::CompositeEditCommand"* %101) #11
  %1408 = bitcast %"class.blink::PositionTemplate"* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1408) #11
  %1409 = bitcast %"class.blink::PositionTemplate"* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1409) #11
  %1410 = bitcast %"class.blink::VisiblePositionTemplate"* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1410) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE12VisibleStartEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %58, %"class.blink::VisibleSelectionTemplate"* nonnull %55) #11
  %1411 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %58, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %57, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %1411) #11
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %56, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %57, i32 1) #11
  %1412 = bitcast %"class.blink::PositionTemplate"* %56 to i64*
  %1413 = load i64, i64* %1412, align 8
  store atomic i64 %1413, i64* %1153 monotonic, align 8
  %1414 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1415 = icmp eq i32 %1414, 0
  br i1 %1415, label %1419, label %1416

1416:                                             ; preds = %1405
  %1417 = inttoptr i64 %1413 to i8*
  %1418 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1417) #11
  br label %1419

1419:                                             ; preds = %1405, %1416
  %1420 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %56, i64 0, i32 1
  %1421 = bitcast i32* %1420 to i64*
  %1422 = load i64, i64* %1421, align 8
  store i64 %1422, i64* %1163, align 8
  %1423 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %58, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1423) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1410) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1409) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1408) #11
  %1424 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1178, i64 0, i32 0, i32 0, i32 0
  %1425 = load %"class.blink::Node"*, %"class.blink::Node"** %1424, align 8
  %1426 = icmp eq %"class.blink::Node"* %1425, null
  br i1 %1426, label %1446, label %1427

1427:                                             ; preds = %1419
  %1428 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* %1178) #11
  br i1 %1428, label %1446, label %1429

1429:                                             ; preds = %1427
  %1430 = bitcast %"class.blink::PositionTemplate"* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1430) #11
  %1431 = bitcast %"class.blink::PositionTemplate"* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1431) #11
  %1432 = bitcast %"class.blink::VisiblePositionTemplate"* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1432) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10VisibleEndEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %61, %"class.blink::VisibleSelectionTemplate"* nonnull %55) #11
  %1433 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %61, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %60, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %1433) #11
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %59, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %60, i32 1) #11
  %1434 = bitcast %"class.blink::PositionTemplate"* %59 to i64*
  %1435 = load i64, i64* %1434, align 8
  store atomic i64 %1435, i64* %1179 monotonic, align 8
  %1436 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1437 = icmp eq i32 %1436, 0
  br i1 %1437, label %1441, label %1438

1438:                                             ; preds = %1429
  %1439 = inttoptr i64 %1435 to i8*
  %1440 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1439) #11
  br label %1441

1441:                                             ; preds = %1429, %1438
  %1442 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %59, i64 0, i32 1
  %1443 = bitcast i32* %1442 to i64*
  %1444 = load i64, i64* %1443, align 8
  store i64 %1444, i64* %1189, align 8
  %1445 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %61, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1445) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1432) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1431) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1430) #11
  br label %1446

1446:                                             ; preds = %1427, %1419, %1441
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1407) #11
  br label %1447

1447:                                             ; preds = %1351, %1393, %1359, %1446
  %1448 = phi i32 [ 0, %1446 ], [ 1, %1351 ], [ 1, %1359 ], [ 1, %1393 ]
  %1449 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %48, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1449) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1321) #11
  br label %1450

1450:                                             ; preds = %1313, %1447
  %1451 = phi i32 [ %1448, %1447 ], [ 1, %1313 ]
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1224) #11
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1215) #11
  %1452 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %44, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1452) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1211) #11
  %1453 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %43, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1453) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1198) #11
  %1454 = icmp eq i32 %1451, 0
  br i1 %1454, label %1455, label %1622

1455:                                             ; preds = %1450, %1185
  %1456 = bitcast %"class.blink::PositionTemplate"* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1456) #11
  %1457 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %62, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1456, i8 0, i64 16, i1 false) #11
  %1458 = load i8, i8* %116, align 1, !range !5
  %1459 = icmp eq i8 %1458, 0
  br i1 %1459, label %1596, label %1460

1460:                                             ; preds = %1455
  %1461 = bitcast %"class.blink::VisiblePositionTemplate"* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1461) #11
  %1462 = bitcast %"class.blink::VisiblePositionTemplate"* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1462, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink23ReplaceSelectionCommand30PositionAtEndOfInsertedContentEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %63, %"class.blink::ReplaceSelectionCommand"* %0)
  %1463 = bitcast %"class.blink::VisiblePositionTemplate"* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1463) #11
  %1464 = bitcast %"class.blink::VisiblePositionTemplate"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1464, i8 -86, i64 24, i1 false)
  call void @_ZN5blink14NextPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %64, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %63, i32 1) #11
  br i1 %136, label %1472, label %1465

1465:                                             ; preds = %1460
  %1466 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1467 = call zeroext i1 @_ZN5blink16IsEndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %63, i32 1) #11
  %1468 = xor i1 %1467, true
  %1469 = load %"class.blink::Node"*, %"class.blink::Node"** %1466, align 8
  %1470 = icmp eq %"class.blink::Node"* %1469, null
  %1471 = or i1 %1470, %1468
  br i1 %1471, label %1472, label %1579

1472:                                             ; preds = %1465, %1460
  %1473 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %128, i64 0, i32 0, i32 0
  %1474 = call %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlEPKNS_4NodeE(%"class.blink::Node"* %1473) #11
  %1475 = icmp eq %"class.blink::TextControlElement"* %1474, null
  br i1 %1475, label %1520, label %1476

1476:                                             ; preds = %1472
  br i1 %1167, label %1479, label %1477

1477:                                             ; preds = %1476
  %1478 = call dereferenceable(64) %"class.blink::Node"* @_ZN5blink13NodeTraversal16LastWithinOrSelfERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %1166) #11
  br label %1479

1479:                                             ; preds = %1476, %1477
  %1480 = phi %"class.blink::Node"* [ %1478, %1477 ], [ null, %1476 ]
  %1481 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1480, i64 0, i32 5, i32 0, i32 0
  %1482 = load %"class.blink::Node"*, %"class.blink::Node"** %1481, align 8
  %1483 = icmp eq %"class.blink::Node"* %1482, null
  br i1 %1483, label %1484, label %1492

1484:                                             ; preds = %1479
  %1485 = call %"class.blink::Node"* @_ZNK5blink18TextControlElement29CreatePlaceholderBreakElementEv(%"class.blink::TextControlElement"* nonnull %1474) #11
  br i1 %1167, label %1488, label %1486

1486:                                             ; preds = %1484
  %1487 = call dereferenceable(64) %"class.blink::Node"* @_ZN5blink13NodeTraversal16LastWithinOrSelfERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %1166) #11
  br label %1488

1488:                                             ; preds = %1484, %1486
  %1489 = phi %"class.blink::Node"* [ %1487, %1486 ], [ null, %1484 ]
  call void @_ZN5blink20CompositeEditCommand15InsertNodeAfterEPNS_4NodeES2_PNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::Node"* %1485, %"class.blink::Node"* %1489, %"class.blink::EditingState"* %1) #11
  %1490 = load i8, i8* %122, align 1, !range !5
  %1491 = icmp eq i8 %1490, 0
  br i1 %1491, label %1492, label %1612

1492:                                             ; preds = %1488, %1479
  %1493 = bitcast %"class.blink::SelectionForUndoStep"* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1493) #11
  %1494 = bitcast %"class.blink::SelectionTemplate"* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1494) #11
  %1495 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1495) #11
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %67) #11
  %1496 = bitcast %"class.blink::PositionTemplate"* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1496) #11
  br i1 %1167, label %1499, label %1497

1497:                                             ; preds = %1492
  %1498 = call dereferenceable(64) %"class.blink::Node"* @_ZN5blink13NodeTraversal16LastWithinOrSelfERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %1166) #11
  br label %1499

1499:                                             ; preds = %1492, %1497
  %1500 = phi %"class.blink::Node"* [ %1498, %1497 ], [ null, %1492 ]
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %68, %"class.blink::Node"* dereferenceable(64) %1500) #11
  %1501 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %67, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %68) #11
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %66, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %1501) #11
  call void @_ZN5blink20SelectionForUndoStep4FromERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::SelectionForUndoStep"* nonnull sret %65, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %66) #11
  call void @_ZN5blink20CompositeEditCommand18SetEndingSelectionERKNS_20SelectionForUndoStepE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::SelectionForUndoStep"* nonnull dereferenceable(48) %65) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1496) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1495) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1494) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1493) #11
  %1502 = bitcast %"class.blink::PositionTemplate"* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1502) #11
  %1503 = bitcast %"class.blink::VisiblePositionTemplate"* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1503) #11
  %1504 = bitcast %"class.blink::VisibleSelectionTemplate"* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1504) #11
  call void @_ZNK5blink20CompositeEditCommand22EndingVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %71, %"class.blink::CompositeEditCommand"* %101) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE12VisibleStartEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %70, %"class.blink::VisibleSelectionTemplate"* nonnull %71) #11
  %1505 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %70, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %69, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %1505) #11
  %1506 = bitcast %"class.blink::PositionTemplate"* %69 to i64*
  %1507 = load i64, i64* %1506, align 8
  %1508 = bitcast %"class.blink::PositionTemplate"* %62 to i64*
  store atomic i64 %1507, i64* %1508 monotonic, align 8
  %1509 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1510 = icmp eq i32 %1509, 0
  br i1 %1510, label %1514, label %1511

1511:                                             ; preds = %1499
  %1512 = inttoptr i64 %1507 to i8*
  %1513 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1512) #11
  br label %1514

1514:                                             ; preds = %1499, %1511
  %1515 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %69, i64 0, i32 1
  %1516 = bitcast i32* %1515 to i64*
  %1517 = bitcast i32* %1457 to i64*
  %1518 = load i64, i64* %1516, align 8
  store i64 %1518, i64* %1517, align 8
  %1519 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %70, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1519) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1504) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1503) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1502) #11
  br label %1599

1520:                                             ; preds = %1472
  %1521 = call zeroext i1 @_ZN5blink18IsStartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %63, i32 1) #11
  br i1 %1521, label %1599, label %1522

1522:                                             ; preds = %1520
  %1523 = bitcast %"class.blink::SelectionForUndoStep"* %72 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1523) #11
  %1524 = bitcast %"class.blink::SelectionTemplate"* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1524) #11
  %1525 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %74 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1525) #11
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %74) #11
  %1526 = bitcast %"class.blink::PositionTemplate"* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1526) #11
  %1527 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %63, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %75, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %1527) #11
  %1528 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %74, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %75) #11
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %73, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %1528) #11
  call void @_ZN5blink20SelectionForUndoStep4FromERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::SelectionForUndoStep"* nonnull sret %72, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %73) #11
  call void @_ZN5blink20CompositeEditCommand18SetEndingSelectionERKNS_20SelectionForUndoStepE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::SelectionForUndoStep"* nonnull dereferenceable(48) %72) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1526) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1525) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1524) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1523) #11
  %1529 = bitcast %"class.blink::PositionTemplate"* %76 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1529) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %76, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %1527) #11
  %1530 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %76, i64 0, i32 0, i32 0, i32 0
  %1531 = load %"class.blink::Node"*, %"class.blink::Node"** %1530, align 8
  %1532 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %1531, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1529) #11
  %1533 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1532, i64 0, i32 0, i32 0
  %1534 = call zeroext i1 @_ZN5blink10IsListItemEPKNS_4NodeE(%"class.blink::Node"* %1533) #11
  br i1 %1534, label %1535, label %1547

1535:                                             ; preds = %1522
  %1536 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  %1537 = call %"class.blink::HTMLLIElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLLIElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %1536) #11
  %1538 = getelementptr inbounds %"class.blink::HTMLLIElement", %"class.blink::HTMLLIElement"* %1537, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink20CompositeEditCommand15InsertNodeAfterEPNS_4NodeES2_PNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::Node"* %1538, %"class.blink::Node"* %1533, %"class.blink::EditingState"* %1) #11
  %1539 = load i8, i8* %122, align 1, !range !5
  %1540 = icmp eq i8 %1539, 0
  br i1 %1540, label %1541, label %1618

1541:                                             ; preds = %1535
  %1542 = bitcast %"class.blink::SelectionForUndoStep"* %77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1542) #11
  %1543 = bitcast %"class.blink::SelectionTemplate"* %78 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1543) #11
  %1544 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %79 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1544) #11
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %79) #11
  %1545 = bitcast %"class.blink::PositionTemplate"* %80 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1545) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %80, %"class.blink::Node"* dereferenceable(64) %1538) #11
  %1546 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %79, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %80) #11
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %78, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %1546) #11
  call void @_ZN5blink20SelectionForUndoStep4FromERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::SelectionForUndoStep"* nonnull sret %77, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %78) #11
  call void @_ZN5blink20CompositeEditCommand18SetEndingSelectionERKNS_20SelectionForUndoStepE(%"class.blink::CompositeEditCommand"* %101, %"class.blink::SelectionForUndoStep"* nonnull dereferenceable(48) %77) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1545) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1544) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1543) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1542) #11
  br label %1558

1547:                                             ; preds = %1522
  %1548 = bitcast %"class.blink::PositionTemplate"* %81 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1548) #11
  br i1 %131, label %1554, label %1549

1549:                                             ; preds = %1547
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %81, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %1527) #11
  %1550 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1148) #11
  %1551 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1550, i64 0, i32 0
  %1552 = call %"class.blink::Node"* @_ZN5blink26HighestEnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleEPS7_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %81, i1 (%"class.blink::Node"*)* nonnull @_ZN5blink27IsMailHTMLBlockquoteElementEPKNS_4NodeE, i32 1, %"class.blink::Node"* %1551) #11
  %1553 = icmp ne %"class.blink::Node"* %1552, null
  br label %1554

1554:                                             ; preds = %1549, %1547
  %1555 = phi i1 [ false, %1547 ], [ %1553, %1549 ]
  call void @_ZN5blink20CompositeEditCommand24InsertParagraphSeparatorEPNS_12EditingStateEbb(%"class.blink::CompositeEditCommand"* %101, %"class.blink::EditingState"* %1, i1 zeroext true, i1 zeroext %1555) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1548) #11
  %1556 = load i8, i8* %122, align 1, !range !5
  %1557 = icmp eq i8 %1556, 0
  br i1 %1557, label %1558, label %1615

1558:                                             ; preds = %1554, %1541
  %1559 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %1559, i32 7) #11
  %1560 = bitcast %"class.blink::PositionTemplate"* %82 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1560) #11
  %1561 = bitcast %"class.blink::VisiblePositionTemplate"* %83 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1561) #11
  %1562 = bitcast %"class.blink::VisibleSelectionTemplate"* %84 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1562) #11
  call void @_ZNK5blink20CompositeEditCommand22EndingVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %84, %"class.blink::CompositeEditCommand"* %101) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE12VisibleStartEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %83, %"class.blink::VisibleSelectionTemplate"* nonnull %84) #11
  %1563 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %83, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %82, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %1563) #11
  %1564 = bitcast %"class.blink::PositionTemplate"* %82 to i64*
  %1565 = load i64, i64* %1564, align 8
  %1566 = bitcast %"class.blink::PositionTemplate"* %62 to i64*
  store atomic i64 %1565, i64* %1566 monotonic, align 8
  %1567 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1568 = icmp eq i32 %1567, 0
  %1569 = inttoptr i64 %1565 to %"class.blink::Node"*
  br i1 %1568, label %1573, label %1570

1570:                                             ; preds = %1558
  %1571 = inttoptr i64 %1565 to i8*
  %1572 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1571) #11
  br label %1573

1573:                                             ; preds = %1570, %1558
  %1574 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %82, i64 0, i32 1
  %1575 = bitcast i32* %1574 to i64*
  %1576 = bitcast i32* %1457 to i64*
  %1577 = load i64, i64* %1575, align 8
  store i64 %1577, i64* %1576, align 8
  %1578 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %83, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1578) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1562) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1561) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1560) #11
  call void @_ZN5blink23ReplaceSelectionCommand19UpdateNodesInsertedEPNS_4NodeE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::Node"* %1569)
  br label %1599

1579:                                             ; preds = %1465
  %1580 = bitcast %"class.blink::PositionTemplate"* %85 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1580) #11
  %1581 = bitcast %"class.blink::PositionTemplate"* %86 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1581) #11
  %1582 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %64, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %86, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %1582) #11
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %85, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %86, i32 1) #11
  %1583 = bitcast %"class.blink::PositionTemplate"* %85 to i64*
  %1584 = load i64, i64* %1583, align 8
  %1585 = bitcast %"class.blink::PositionTemplate"* %62 to i64*
  store atomic i64 %1584, i64* %1585 monotonic, align 8
  %1586 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1587 = icmp eq i32 %1586, 0
  br i1 %1587, label %1591, label %1588

1588:                                             ; preds = %1579
  %1589 = inttoptr i64 %1584 to i8*
  %1590 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %1589) #11
  br label %1591

1591:                                             ; preds = %1579, %1588
  %1592 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %85, i64 0, i32 1
  %1593 = bitcast i32* %1592 to i64*
  %1594 = bitcast i32* %1457 to i64*
  %1595 = load i64, i64* %1593, align 8
  store i64 %1595, i64* %1594, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1581) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1580) #11
  br label %1599

1596:                                             ; preds = %1455
  call void @_ZN5blink23ReplaceSelectionCommand16MergeEndIfNeededEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::EditingState"* %1)
  %1597 = load i8, i8* %122, align 1, !range !5
  %1598 = icmp eq i8 %1597, 0
  br i1 %1598, label %1602, label %1621

1599:                                             ; preds = %1573, %1520, %1514, %1591
  %1600 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %64, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1600) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1463) #11
  %1601 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %63, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1601) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1461) #11
  br label %1602

1602:                                             ; preds = %1599, %1596
  %1603 = call zeroext i1 @_ZNK5blink23ReplaceSelectionCommand25ShouldPerformSmartReplaceEv(%"class.blink::ReplaceSelectionCommand"* %0)
  br i1 %1603, label %1604, label %1607

1604:                                             ; preds = %1602
  call void @_ZN5blink23ReplaceSelectionCommand24AddSpacesForSmartReplaceEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::EditingState"* %1)
  %1605 = load i8, i8* %122, align 1, !range !5
  %1606 = icmp eq i8 %1605, 0
  br i1 %1606, label %1607, label %1621

1607:                                             ; preds = %1604, %1602
  %1608 = and i8 %957, 1
  %1609 = icmp eq i8 %1608, 0
  br i1 %1609, label %1611, label %1610

1610:                                             ; preds = %1607
  store i8 0, i8* %750, align 2
  br label %1611

1611:                                             ; preds = %1607, %1610
  call void @_ZN5blink23ReplaceSelectionCommand23CompleteHTMLReplacementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %62, %"class.blink::EditingState"* %1)
  br label %1621

1612:                                             ; preds = %1488
  %1613 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %64, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1613) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1463) #11
  %1614 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %63, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1614) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1461) #11
  br label %1621

1615:                                             ; preds = %1554
  %1616 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %64, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1616) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1463) #11
  %1617 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %63, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1617) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1461) #11
  br label %1621

1618:                                             ; preds = %1535
  %1619 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %64, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1619) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1463) #11
  %1620 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %63, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1620) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1461) #11
  br label %1621

1621:                                             ; preds = %1618, %1615, %1612, %1604, %1596, %1611
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1456) #11
  br label %1622

1622:                                             ; preds = %1002, %1090, %1056, %1129, %1093, %1089, %1055, %1450, %1096, %1621
  %1623 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %38, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1623) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %982) #11
  br label %1627

1624:                                             ; preds = %935, %938
  %1625 = phi %"class.blink::Node"* [ %925, %935 ], [ %928, %938 ]
  %1626 = phi %"class.blink::Node"* [ %926, %935 ], [ %940, %938 ]
  store %"class.blink::Node"* %1626, %"class.blink::Node"** %821, align 8
  store %"class.blink::Node"* %1625, %"class.blink::Node"** %822, align 8
  br label %1627

1627:                                             ; preds = %1624, %900, %968, %910, %904, %962, %1622, %963
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %820) #11
  br label %1628

1628:                                             ; preds = %313, %740, %739, %744, %1627
  %1629 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %25, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %1629) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %222) #11
  br label %1630

1630:                                             ; preds = %158, %190, %183, %1628
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #11
  br label %1631

1631:                                             ; preds = %126, %112, %1630
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #11
  br label %1632

1632:                                             ; preds = %109, %1631, %108, %103
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %100) #11
  %1633 = icmp eq i8* %97, null
  br i1 %1633, label %1638, label %1634

1634:                                             ; preds = %1632
  %1635 = load i8, i8* %97, align 1
  %1636 = icmp eq i8 %1635, 0
  br i1 %1636, label %1638, label %1637

1637:                                             ; preds = %1634
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %97, i8* %98, i64 %99) #11
  br label %1638

1638:                                             ; preds = %1632, %1634, %1637
  ret void
}

declare zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE6IsNoneEv(%"class.blink::VisibleSelectionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink12EditingState5AbortEv(%"class.blink::EditingState"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10IsValidForERKNS_8DocumentE(%"class.blink::VisibleSelectionTemplate"*, %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23ReplaceSelectionCommand21PerformTrivialReplaceERKNS_19ReplacementFragmentEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"*, %"class.blink::ReplacementFragment"* nocapture readonly dereferenceable(24), %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::VisibleSelectionTemplate", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %12 = alloca %"class.blink::SelectionForUndoStep", align 8
  %13 = alloca %"class.blink::SelectionTemplate", align 8
  %14 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %15 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %1, i64 0, i32 1
  %16 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %15, align 8
  %17 = icmp eq %"class.blink::DocumentFragment"* %16, null
  br i1 %17, label %159, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %159, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  %25 = icmp eq %"class.blink::Node"* %20, %24
  br i1 %25, label %26, label %159

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 12
  %30 = icmp eq i32 %29, 4
  br i1 %30, label %31, label %159

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 5
  %33 = load i8, i8* %32, align 1, !range !5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %159

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %1, i64 0, i32 2
  %37 = load i8, i8* %36, align 8, !range !5
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %159

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::ReplacementFragment", %"class.blink::ReplacementFragment"* %1, i64 0, i32 3
  %41 = load i8, i8* %40, align 1, !range !5
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %159

43:                                               ; preds = %39
  %44 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #11
  %45 = bitcast %"class.blink::VisibleSelectionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  call void @_ZNK5blink20CompositeEditCommand22EndingVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %5, %"class.blink::CompositeEditCommand"* %46) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::VisibleSelectionTemplate"* nonnull %5) #11
  %47 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %4) #11
  %48 = call %"class.blink::Element"* @_ZN5blink14EnclosingBlockEPKNS_4NodeENS_27EditingBoundaryCrossingRuleE(%"class.blink::Node"* %47, i32 1) #11
  %49 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %48, i64 0, i32 0, i32 0
  %50 = call %"class.blink::Node"* @_ZN5blink26HighestEnclosingNodeOfTypeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPFbPKNS_4NodeEENS_27EditingBoundaryCrossingRuleEPS7_(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, i1 (%"class.blink::Node"*)* nonnull @_ZN5blinkL28IsInlineHTMLElementWithStyleEPKNS_4NodeE, i32 1, %"class.blink::Node"* %49) #11
  %51 = icmp eq %"class.blink::Node"* %50, null
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #11
  br i1 %51, label %52, label %159

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %54 = load %"class.blink::Document"*, %"class.blink::Document"** %53, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %54, i32 7) #11
  %55 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #11
  %56 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #11
  %57 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 3
  call void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* nonnull sret %7, %"class.blink::SelectionForUndoStep"* %57) #11
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %7, i32 1) #11
  %58 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.blink::Node"*, %"class.blink::Node"** %58, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #11
  %60 = load %"class.blink::DocumentFragment"*, %"class.blink::DocumentFragment"** %15, align 8
  %61 = icmp eq %"class.blink::DocumentFragment"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.blink::DocumentFragment", %"class.blink::DocumentFragment"* %60, i64 0, i32 0, i32 1, i32 0, i32 0
  %64 = bitcast %"class.blink::Node"** %63 to %"class.blink::Text"**
  %65 = load %"class.blink::Text"*, %"class.blink::Text"** %64, align 8
  br label %66

66:                                               ; preds = %52, %62
  %67 = phi %"class.blink::Text"* [ %65, %62 ], [ null, %52 ]
  %68 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #11
  %69 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 1
  %70 = bitcast %"class.blink::VisibleSelectionTemplate"* %9 to i8*
  %71 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #11
  call void @_ZNK5blink20CompositeEditCommand22EndingVisibleSelectionEv(%"class.blink::VisibleSelectionTemplate"* nonnull sret %9, %"class.blink::CompositeEditCommand"* %46) #11
  call void @_ZNK5blink24VisibleSelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5StartEv(%"class.blink::PositionTemplate"* nonnull sret %8, %"class.blink::VisibleSelectionTemplate"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #11
  %72 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #11
  %73 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 1
  %75 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %67, i64 0, i32 0, i32 1
  %76 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 16, i1 false)
  %77 = load i8, i8* %75, align 8, !range !5
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %66
  %80 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %67, i64 0, i32 0, i32 2
  %81 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %80) #11
  br label %84

82:                                               ; preds = %66
  %83 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %67, i64 0, i32 0, i32 3
  br label %84

84:                                               ; preds = %79, %82
  %85 = phi %"class.WTF::String"* [ %81, %79 ], [ %83, %82 ]
  call void @_ZN5blink20CompositeEditCommand25ReplaceSelectedTextInNodeERKN3WTF6StringE(%"class.blink::PositionTemplate"* nonnull sret %10, %"class.blink::CompositeEditCommand"* %46, %"class.WTF::String"* dereferenceable(8) %85) #11
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %87 = icmp eq %"class.blink::Node"* %86, null
  br i1 %87, label %157, label %88

88:                                               ; preds = %84
  %89 = load %"class.blink::Document"*, %"class.blink::Document"** %53, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %89, i32 7) #11
  %90 = icmp eq %"class.blink::Node"* %59, null
  br i1 %90, label %120, label %91

91:                                               ; preds = %88
  %92 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %59) #11
  %93 = icmp eq %"class.blink::ContainerNode"* %92, null
  br i1 %93, label %120, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %59, i64 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = and i32 %96, 48
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %120

99:                                               ; preds = %94
  %100 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kBrTagE, align 8
  %101 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %100, i64 0, i32 0, i32 0, i32 0
  %102 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %59, i64 1, i32 2
  %104 = bitcast %"class.blink::Member"* %103 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %105 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %105, i64 0, i32 3, i32 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %102, i64 0, i32 3, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %107, %109
  br i1 %110, label %111, label %120

111:                                              ; preds = %99
  %112 = bitcast %"class.blink::Node"* %59 to %"class.blink::HTMLBRElement"*
  %113 = bitcast %"class.blink::VisiblePositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #11
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::VisiblePositionTemplate"* nonnull sret %11, %"class.blink::Node"* nonnull dereferenceable(64) %59) #11
  %114 = call zeroext i1 @_ZN5blink23ReplaceSelectionCommand17ShouldRemoveEndBREPNS_13HTMLBRElementERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::HTMLBRElement"* nonnull %112, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %11)
  %115 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %11, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %115) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #11
  br i1 %114, label %116, label %120

116:                                              ; preds = %111
  call void @_ZN5blink20CompositeEditCommand27RemoveNodeAndPruneAncestorsEPNS_4NodeEPNS_12EditingStateES2_(%"class.blink::CompositeEditCommand"* %46, %"class.blink::Node"* nonnull %59, %"class.blink::EditingState"* %2, %"class.blink::Node"* null) #11
  %117 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %2, i64 0, i32 0
  %118 = load i8, i8* %117, align 1, !range !5
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %157

120:                                              ; preds = %116, %94, %99, %91, %88, %111
  %121 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 13
  %122 = bitcast %"class.blink::PositionTemplate"* %8 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.blink::PositionTemplate"* %121 to i64*
  store atomic i64 %123, i64* %124 monotonic, align 8
  %125 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %130, label %127

127:                                              ; preds = %120
  %128 = inttoptr i64 %123 to i8*
  %129 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %128) #11
  br label %130

130:                                              ; preds = %120, %127
  %131 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 13, i32 1
  %132 = bitcast i32* %69 to i64*
  %133 = bitcast i32* %131 to i64*
  %134 = load i64, i64* %132, align 8
  store i64 %134, i64* %133, align 8
  %135 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 14
  %136 = bitcast %"class.blink::PositionTemplate"* %10 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.blink::PositionTemplate"* %135 to i64*
  store atomic i64 %137, i64* %138 monotonic, align 8
  %139 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %144, label %141

141:                                              ; preds = %130
  %142 = inttoptr i64 %137 to i8*
  %143 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %142) #11
  br label %144

144:                                              ; preds = %130, %141
  %145 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 14, i32 1
  %146 = bitcast i32* %74 to i64*
  %147 = bitcast i32* %145 to i64*
  %148 = load i64, i64* %146, align 8
  store i64 %148, i64* %147, align 8
  %149 = bitcast %"class.blink::SelectionForUndoStep"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %149) #11
  %150 = bitcast %"class.blink::SelectionTemplate"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %150) #11
  %151 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %151) #11
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %14) #11
  %152 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 4
  %153 = load i8, i8* %152, align 8, !range !5
  %154 = icmp eq i8 %153, 0
  %155 = select i1 %154, %"class.blink::PositionTemplate"* %10, %"class.blink::PositionTemplate"* %8
  %156 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder26SetBaseAndExtentDeprecatedERKNS_16PositionTemplateIS3_EES9_(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %14, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %155, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %10) #11
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %13, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %156) #11
  call void @_ZN5blink20SelectionForUndoStep4FromERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::SelectionForUndoStep"* nonnull sret %12, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %13) #11
  call void @_ZN5blink20CompositeEditCommand18SetEndingSelectionERKNS_20SelectionForUndoStepE(%"class.blink::CompositeEditCommand"* %46, %"class.blink::SelectionForUndoStep"* nonnull dereferenceable(48) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %151) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %150) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %149) #11
  br label %157

157:                                              ; preds = %116, %84, %144
  %158 = phi i1 [ true, %144 ], [ false, %84 ], [ false, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #11
  br label %159

159:                                              ; preds = %39, %35, %3, %43, %31, %26, %18, %22, %157
  %160 = phi i1 [ %158, %157 ], [ false, %22 ], [ false, %18 ], [ false, %26 ], [ false, %31 ], [ false, %39 ], [ false, %35 ], [ false, %43 ], [ false, %3 ]
  ret i1 %160
}

declare void @_ZN5blink20CompositeEditCommand23ApplyCommandToCompositeEPNS_11EditCommandEPNS_12EditingStateE(%"class.blink::CompositeEditCommand"*, %"class.blink::EditCommand"*, %"class.blink::EditingState"*) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand35PrepareWhitespaceAtPositionForSplitERNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::CompositeEditCommand"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink11IsTableCellEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink12IsEndOfBlockERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17InParentAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand38PositionAvoidingSpecialElementBoundaryERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_12EditingStateE(%"class.blink::PositionTemplate"* sret, %"class.blink::CompositeEditCommand"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::EditingState"*) local_unnamed_addr #2

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand22PositionOutsideTabSpanERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* sret, %"class.blink::CompositeEditCommand"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::HTMLElement"* @_ZN5blink13EnclosingListEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE28AtLastEditingPositionForNodeEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand13SplitTextNodeEPNS_4TextEj(%"class.blink::CompositeEditCommand"*, %"class.blink::Text"*, i32) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ComputeNodeAfterPositionEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink17IsHTMLListElementEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZN5blink23ReplaceSelectionCommand17InsertAsListItemsEPNS_11HTMLElementEPNS_7ElementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERNS0_13InsertedNodesEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"*, %"class.blink::HTMLElement"*, %"class.blink::Element"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::ReplaceSelectionCommand::InsertedNodes"* nocapture dereferenceable(24), %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %8 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %9 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %10 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %34, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 5, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %22, label %34

18:                                               ; preds = %27
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 5, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %22, label %34

22:                                               ; preds = %14, %18
  %23 = phi %"class.blink::ContainerNode"* [ %30, %18 ], [ %10, %14 ]
  %24 = phi %"class.blink::Node"** [ %31, %18 ], [ %11, %14 ]
  %25 = phi %"class.blink::Node"* [ %32, %18 ], [ %12, %14 ]
  %26 = tail call zeroext i1 @_ZN5blink17IsHTMLListElementEPKNS_4NodeE(%"class.blink::Node"* nonnull %25) #11
  br i1 %26, label %27, label %34

27:                                               ; preds = %22
  %28 = bitcast %"class.blink::Node"** %24 to %"class.blink::HTMLElement"**
  %29 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %29, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %29, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %34, label %18

34:                                               ; preds = %27, %18, %22, %14, %6
  %35 = phi %"class.blink::ContainerNode"* [ %10, %6 ], [ %10, %14 ], [ %23, %22 ], [ %30, %18 ], [ %30, %27 ]
  %36 = phi %"class.blink::Node"** [ %11, %6 ], [ %11, %14 ], [ %24, %22 ], [ %31, %18 ], [ %31, %27 ]
  %37 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %38 = load %"class.blink::Document"*, %"class.blink::Document"** %37, align 8
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %38, i32 7) #11
  %39 = bitcast %"class.blink::VisiblePositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #11
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %7, %"class.blink::PositionTemplate"* dereferenceable(16) %3, i32 1) #11
  %40 = call zeroext i1 @_ZN5blink18IsStartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %7, i32 1) #11
  %41 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %7, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11
  %42 = bitcast %"class.blink::VisiblePositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #11
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %8, %"class.blink::PositionTemplate"* dereferenceable(16) %3, i32 1) #11
  %43 = call zeroext i1 @_ZN5blink16IsEndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %8, i32 1) #11
  %44 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %8, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #11
  %45 = or i1 %40, %43
  %46 = xor i1 %45, true
  %47 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  br i1 %45, label %69, label %48

48:                                               ; preds = %34
  %49 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::Node"*, %"class.blink::Node"** %51, align 8
  %53 = icmp eq %"class.blink::Node"* %52, null
  br i1 %53, label %65, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %52, i64 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = and i32 %56, 12
  %58 = icmp eq i32 %57, 4
  %59 = icmp sgt i32 %50, 0
  %60 = and i1 %59, %58
  br i1 %60, label %61, label %65

61:                                               ; preds = %54
  %62 = bitcast %"class.blink::Node"* %52 to %"class.blink::Text"*
  %63 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  call void @_ZN5blink20CompositeEditCommand13SplitTextNodeEPNS_4TextEj(%"class.blink::CompositeEditCommand"* %63, %"class.blink::Text"* nonnull %62, i32 %50) #11
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %51, align 8
  br label %65

65:                                               ; preds = %48, %61, %54
  %66 = phi %"class.blink::Node"* [ null, %48 ], [ %64, %61 ], [ %52, %54 ]
  %67 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %68 = call %"class.blink::Node"* @_ZN5blink20CompositeEditCommand15SplitTreeToNodeEPNS_4NodeES2_b(%"class.blink::CompositeEditCommand"* %67, %"class.blink::Node"* %66, %"class.blink::Node"* %47, i1 zeroext true) #11
  br label %69

69:                                               ; preds = %34, %65
  %70 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %69
  %73 = or i1 %40, %46
  br i1 %73, label %150, label %155

74:                                               ; preds = %69
  %75 = bitcast %"class.blink::DummyExceptionStateForTesting"* %9 to i8*
  %76 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 1
  %79 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 1, i32 2
  %80 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %81 = bitcast %"class.WTF::StringImpl"** %80 to i8*
  %82 = bitcast i8** %79 to i8*
  %83 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0
  %84 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 4
  %85 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %9, i64 0, i32 0, i32 3
  %87 = or i1 %40, %46
  %88 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %89 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %5, i64 0, i32 0
  %90 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand::InsertedNodes", %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %4, i64 0, i32 0
  %91 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand::InsertedNodes", %"class.blink::ReplaceSelectionCommand::InsertedNodes"* %4, i64 0, i32 1
  br label %92

92:                                               ; preds = %74, %145
  %93 = phi %"class.blink::Node"* [ %70, %74 ], [ %147, %145 ]
  %94 = phi %"class.blink::Node"* [ %47, %74 ], [ %146, %145 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %75) #11
  store i16 1, i16* %77, align 8
  store i16 0, i16* %78, align 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %95 = call %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %35, %"class.blink::Node"* nonnull %93, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %83) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %96 = load i32, i32* %84, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %99, label %98

98:                                               ; preds = %92
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %83) #11
  br label %99

99:                                               ; preds = %92, %98
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %76, align 8
  %100 = load i64*, i64** %85, align 8
  %101 = icmp eq i64* %100, null
  br i1 %101, label %111, label %102

102:                                              ; preds = %99
  %103 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %86, align 8
  %104 = bitcast %"class.v8::Isolate"* %103 to %"class.v8::internal::Isolate"*
  %105 = load i64, i64* %100, align 8
  %106 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %104, i64 %105) #11
  %107 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %103) #11
  br i1 %107, label %111, label %108

108:                                              ; preds = %102
  %109 = bitcast i64* %106 to %"class.v8::Value"*
  %110 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %103, %"class.v8::Value"* %109) #11
  br label %111

111:                                              ; preds = %108, %102, %99
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #11
  br label %127

127:                                              ; preds = %111, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %75) #11
  br i1 %87, label %128, label %135

128:                                              ; preds = %127
  call void @_ZN5blink20CompositeEditCommand16InsertNodeBeforeEPNS_4NodeES2_PNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %88, %"class.blink::Node"* nonnull %93, %"class.blink::Node"* %94, %"class.blink::EditingState"* %5, i32 1) #11
  %129 = load i8, i8* %89, align 1, !range !5
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %157

131:                                              ; preds = %128
  %132 = load %"class.blink::Node"*, %"class.blink::Node"** %90, align 8
  %133 = icmp eq %"class.blink::Node"* %132, null
  br i1 %133, label %134, label %143

134:                                              ; preds = %131
  store %"class.blink::Node"* %93, %"class.blink::Node"** %90, align 8
  br label %143

135:                                              ; preds = %127
  br i1 %43, label %136, label %145

136:                                              ; preds = %135
  call void @_ZN5blink20CompositeEditCommand15InsertNodeAfterEPNS_4NodeES2_PNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %88, %"class.blink::Node"* nonnull %93, %"class.blink::Node"* %94, %"class.blink::EditingState"* %5) #11
  %137 = load i8, i8* %89, align 1, !range !5
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %157

139:                                              ; preds = %136
  %140 = load %"class.blink::Node"*, %"class.blink::Node"** %90, align 8
  %141 = icmp eq %"class.blink::Node"* %140, null
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  store %"class.blink::Node"* %93, %"class.blink::Node"** %90, align 8
  br label %143

143:                                              ; preds = %142, %139, %134, %131
  %144 = phi %"class.blink::Node"* [ %94, %131 ], [ %94, %134 ], [ %93, %139 ], [ %93, %142 ]
  store %"class.blink::Node"* %93, %"class.blink::Node"** %91, align 8
  br label %145

145:                                              ; preds = %143, %135
  %146 = phi %"class.blink::Node"* [ %94, %135 ], [ %144, %143 ]
  %147 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %148 = icmp eq %"class.blink::Node"* %147, null
  br i1 %148, label %149, label %92

149:                                              ; preds = %145
  br i1 %87, label %150, label %155

150:                                              ; preds = %72, %149
  %151 = phi %"class.blink::Node"* [ %47, %72 ], [ %146, %149 ]
  %152 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %151, i64 0, i32 4, i32 0, i32 0
  %153 = load %"class.blink::Node"*, %"class.blink::Node"** %152, align 8
  %154 = icmp eq %"class.blink::Node"* %153, null
  br i1 %154, label %155, label %157

155:                                              ; preds = %72, %149, %150
  %156 = phi %"class.blink::Node"* [ %47, %72 ], [ %146, %149 ], [ %151, %150 ]
  br label %157

157:                                              ; preds = %128, %136, %150, %155
  %158 = phi %"class.blink::Node"* [ %156, %155 ], [ %153, %150 ], [ null, %136 ], [ null, %128 ]
  ret %"class.blink::Node"* %158
}

declare void @_ZN5blink20CompositeEditCommand12InsertNodeAtEPNS_4NodeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_12EditingStateE(%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::EditingState"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink17IsPlainTextMarkupEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand15InsertNodeAfterEPNS_4NodeES2_PNS_12EditingStateE(%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::EditingState"*) local_unnamed_addr #2

declare i32 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeEditingOffsetEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink23ReplaceSelectionCommand17ShouldRemoveEndBREPNS_13HTMLBRElementERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::ReplaceSelectionCommand"* nocapture readonly, %"class.blink::HTMLBRElement"*, %"class.blink::VisiblePositionTemplate"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = icmp eq %"class.blink::HTMLBRElement"* %1, null
  br i1 %8, label %70, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 256
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %70, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::HTMLBRElement", %"class.blink::HTMLBRElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.blink::VisiblePositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = bitcast %"class.blink::VisiblePositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE10BeforeNodeERKNS_4NodeE(%"class.blink::VisiblePositionTemplate"* nonnull sret %4, %"class.blink::Node"* dereferenceable(64) %15) #11
  %18 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #11
  %19 = bitcast %"class.blink::VisiblePositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  call void @_ZN5blink18PreviousPositionOfERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull sret %6, %"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %4, i32 0) #11
  %20 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %6, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %20) #11
  %21 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %2, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::PositionTemplate"* dereferenceable(16) %22) #11
  %23 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  %25 = icmp eq %"class.blink::Node"* %24, null
  %26 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  br i1 %25, label %28, label %30

28:                                               ; preds = %14
  %29 = icmp eq %"class.blink::Node"* %27, null
  br label %46

30:                                               ; preds = %14
  %31 = icmp eq %"class.blink::Node"* %24, %27
  br i1 %31, label %32, label %49

32:                                               ; preds = %30
  %33 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %49

38:                                               ; preds = %32
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %40, label %65

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %5, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %42, %44
  br label %46

46:                                               ; preds = %28, %40
  %47 = phi i1 [ %29, %28 ], [ %45, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  %48 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %6, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %48) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11
  br i1 %47, label %67, label %51

49:                                               ; preds = %30, %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  %50 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %6, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11
  br label %51

51:                                               ; preds = %49, %46
  %52 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %53, i64 0, i32 33
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 2
  br i1 %56, label %61, label %57

57:                                               ; preds = %51
  %58 = call zeroext i1 @_ZN5blink12IsEndOfBlockERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %4) #11
  br i1 %58, label %59, label %61

59:                                               ; preds = %57
  %60 = call zeroext i1 @_ZN5blink18IsStartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %4, i32 1) #11
  br i1 %60, label %61, label %67

61:                                               ; preds = %59, %57, %51
  %62 = call zeroext i1 @_ZN5blink18IsStartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %4, i32 1) #11
  br i1 %62, label %63, label %67

63:                                               ; preds = %61
  %64 = call zeroext i1 @_ZN5blink16IsEndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %4, i32 1) #11
  br label %67

65:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  %66 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %6, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %66) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11
  br label %67

67:                                               ; preds = %65, %61, %63, %59, %46
  %68 = phi i1 [ false, %46 ], [ true, %59 ], [ false, %61 ], [ %64, %63 ], [ false, %65 ]
  %69 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %4, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %69) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  br label %70

70:                                               ; preds = %9, %3, %67
  %71 = phi i1 [ %68, %67 ], [ false, %3 ], [ false, %9 ]
  ret i1 %71
}

declare %"class.blink::Node"* @_ZN5blink28HighestNodeToRemoveInPruningEPNS_4NodeEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32) local_unnamed_addr #2

declare %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink18TextControlElement29CreatePlaceholderBreakElementEv(%"class.blink::TextControlElement"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE9AfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ReplaceSelectionCommand19UpdateNodesInsertedEPNS_4NodeE(%"class.blink::ReplaceSelectionCommand"* nocapture, %"class.blink::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::PositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = icmp eq %"class.blink::Node"* %1, null
  br i1 %5, label %45, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %11, label %27

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::PositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %3, %"class.blink::Node"* nonnull dereferenceable(64) %1) #11
  %13 = bitcast %"class.blink::PositionTemplate"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.blink::PositionTemplate"* %7 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %11
  %19 = inttoptr i64 %14 to i8*
  %20 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #11
  br label %21

21:                                               ; preds = %11, %18
  %22 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 1, i32 1
  %23 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %3, i64 0, i32 1
  %24 = bitcast i32* %23 to i64*
  %25 = bitcast i32* %22 to i64*
  %26 = load i64, i64* %24, align 8
  store i64 %26, i64* %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #11
  br label %27

27:                                               ; preds = %21, %6
  %28 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #11
  %29 = call dereferenceable(64) %"class.blink::Node"* @_ZN5blink13NodeTraversal16LastWithinOrSelfERNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %1) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::Node"* dereferenceable(64) %29) #11
  %30 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 2
  %31 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.blink::PositionTemplate"* %30 to i64*
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %27
  %37 = inttoptr i64 %32 to i8*
  %38 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #11
  br label %39

39:                                               ; preds = %27, %36
  %40 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 2, i32 1
  %41 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 1
  %42 = bitcast i32* %41 to i64*
  %43 = bitcast i32* %40 to i64*
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #11
  br label %45

45:                                               ; preds = %2, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink23ReplaceSelectionCommand25ShouldPerformSmartReplaceEv(%"class.blink::ReplaceSelectionCommand"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::PositionTemplate", align 8
  %3 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %4 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 1, !range !5
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %57, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::PositionTemplate"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  %9 = bitcast %"class.blink::VisiblePositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8, !noalias !27
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %11, i32 7) #11, !noalias !27
  %12 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8, !noalias !27
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %7
  %17 = tail call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* %12) #11
  br i1 %17, label %19, label %18

18:                                               ; preds = %16
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::VisiblePositionTemplate"* nonnull %3) #11
  br label %20

19:                                               ; preds = %16, %7
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %3, %"class.blink::PositionTemplate"* dereferenceable(16) %12, i32 1) #11
  br label %20

20:                                               ; preds = %18, %19
  %21 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %3, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %2, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %21) #11
  %22 = call %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* nonnull dereferenceable(16) %2) #11
  %23 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %3, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  %24 = icmp eq %"class.blink::TextControlElement"* %22, null
  br i1 %24, label %56, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 48
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %56

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::TextControlElement", %"class.blink::TextControlElement"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 1, i32 2
  %36 = bitcast %"class.blink::Member"* %35 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %39, %41
  br i1 %42, label %43, label %56

43:                                               ; preds = %30
  %44 = bitcast %"class.blink::TextControlElement"* %22 to %"class.blink::HTMLFormControlElement"*
  %45 = bitcast %"class.blink::TextControlElement"* %22 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %46 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %45, align 8
  %47 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %46, i64 171
  %48 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %47, align 8
  %49 = call dereferenceable(8) %"class.WTF::AtomicString"* %48(%"class.blink::HTMLFormControlElement"* nonnull %44) #11
  %50 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names9kPasswordE, align 8
  %51 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %49, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %50, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %52, %54
  br i1 %55, label %57, label %56

56:                                               ; preds = %30, %20, %25, %43
  br label %57

57:                                               ; preds = %56, %43, %1
  %58 = phi i1 [ false, %1 ], [ true, %56 ], [ false, %43 ]
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ReplaceSelectionCommand24AddSpacesForSmartReplaceEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"*, %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.blink::PositionTemplate", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.blink::PositionTemplate", align 8
  %16 = bitcast %"class.blink::VisiblePositionTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = bitcast %"class.blink::VisiblePositionTemplate"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void @_ZNK5blink23ReplaceSelectionCommand30PositionAtEndOfInsertedContentEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %3, %"class.blink::ReplaceSelectionCommand"* %0)
  %18 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 1
  %20 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 2
  %21 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  %22 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #11
  %23 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %3, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %23) #11
  call void @_ZN5blink25MostBackwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %5, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #11
  %24 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25ComputeNodeBeforePositionEv(%"class.blink::PositionTemplate"* nonnull %4) #11
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %63, label %26

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 12
  %30 = icmp eq i32 %29, 4
  br i1 %30, label %31, label %63

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 1
  %33 = bitcast %"class.blink::Node"* %32 to i8*
  %34 = load i8, i8* %33, align 8, !range !5
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %55, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 1, i32 0, i32 0, i32 1
  %38 = bitcast %"class.blink::TraceWrapperV8Reference"* %37 to %"class.blink::ParkableStringImpl"**
  %39 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %38, align 8
  %40 = icmp eq %"class.blink::ParkableStringImpl"* %39, null
  br i1 %40, label %63, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0
  %43 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %42, align 8
  %44 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %43, null
  br i1 %44, label %45, label %52

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %39, i64 0, i32 1, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %63, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  br label %63

52:                                               ; preds = %41
  %53 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %43, i64 0, i32 8
  %54 = load i32, i32* %53, align 4
  br label %63

55:                                               ; preds = %31
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 1, i32 1
  %57 = bitcast i32* %56 to %"class.WTF::StringImpl"**
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  br label %63

63:                                               ; preds = %26, %2, %60, %55, %52, %49, %45, %36
  %64 = phi i32 [ 0, %36 ], [ %54, %52 ], [ %51, %49 ], [ 0, %45 ], [ %62, %60 ], [ 0, %55 ], [ 0, %26 ], [ 0, %2 ]
  %65 = load i32, i32* %20, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %63
  %68 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %4) #11
  %69 = load i32, i32* %19, align 8
  br label %70

70:                                               ; preds = %67, %63
  %71 = phi %"class.blink::Node"* [ %68, %67 ], [ %24, %63 ]
  %72 = phi i32 [ %69, %67 ], [ %64, %63 ]
  %73 = call zeroext i1 @_ZN5blink16IsEndOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %3, i32 1) #11
  br i1 %73, label %243, label %74

74:                                               ; preds = %70
  %75 = call i32 @_ZN5blink14CharacterAfterERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %3) #11
  %76 = icmp eq i32 %75, 160
  %77 = select i1 %76, i32 32, i32 %75
  %78 = call zeroext i1 @_ZN5blink29IsCharacterSmartReplaceExemptEib(i32 %77, i1 zeroext false) #11
  %79 = xor i1 %78, true
  %80 = icmp ne %"class.blink::Node"* %71, null
  %81 = and i1 %80, %79
  br i1 %81, label %82, label %243

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %71, i64 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, 1
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %71, i64 0, i32 6, i32 0, i32 0
  br i1 %86, label %92, label %88

88:                                               ; preds = %82
  %89 = bitcast %"class.blink::NodeData"** %87 to %"class.blink::NodeRareData"**
  %90 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %90, i64 0, i32 1, i32 0, i32 0
  br label %94

92:                                               ; preds = %82
  %93 = bitcast %"class.blink::NodeData"** %87 to %"class.blink::NodeRenderingData"**
  br label %94

94:                                               ; preds = %88, %92
  %95 = phi %"class.blink::NodeRenderingData"** [ %91, %88 ], [ %93, %92 ]
  %96 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %96, i64 0, i32 1
  %98 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %97, align 8
  %99 = icmp eq %"class.blink::LayoutObject"* %98, null
  br i1 %99, label %119, label %100

100:                                              ; preds = %94
  br i1 %86, label %105, label %101

101:                                              ; preds = %100
  %102 = bitcast %"class.blink::NodeData"** %87 to %"class.blink::NodeRareData"**
  %103 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %103, i64 0, i32 1, i32 0, i32 0
  br label %107

105:                                              ; preds = %100
  %106 = bitcast %"class.blink::NodeData"** %87 to %"class.blink::NodeRenderingData"**
  br label %107

107:                                              ; preds = %101, %105
  %108 = phi %"class.blink::NodeRenderingData"** [ %104, %101 ], [ %106, %105 ]
  %109 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %109, i64 0, i32 1
  %111 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %111, i64 0, i32 5, i32 0
  %113 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %113, i64 0, i32 0, i32 9
  %115 = bitcast [20 x i8]* %114 to i160*
  %116 = load i160, i160* %115, align 8
  %117 = and i160 %116, 286720
  %118 = icmp eq i160 %117, 0
  br label %119

119:                                              ; preds = %94, %107
  %120 = phi i1 [ true, %94 ], [ %118, %107 ]
  %121 = and i32 %84, 12
  %122 = icmp eq i32 %121, 4
  %123 = bitcast %"class.blink::Node"* %71 to %"class.blink::Text"*
  br i1 %122, label %124, label %190

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %126 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #11
  br i1 %120, label %127, label %150

127:                                              ; preds = %124
  %128 = call dereferenceable(8) %"class.WTF::String"* @_ZN5blink22NonBreakingSpaceStringEv() #11
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %128, i64 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %130, %"class.WTF::StringImpl"** %131, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %132, label %151, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %151

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i33
  %142 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %141, i33 1) #11
  %143 = extractvalue { i33, i1 } %142, 1
  %144 = extractvalue { i33, i1 } %142, 0
  %145 = icmp slt i33 %144, 0
  %146 = or i1 %143, %145
  br i1 %146, label %147, label %148, !prof !4

147:                                              ; preds = %138
  call void @llvm.trap() #11
  unreachable

148:                                              ; preds = %138
  %149 = trunc i33 %144 to i32
  store i32 %149, i32* %139, align 4
  br label %151

150:                                              ; preds = %124
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #11
  br label %151

151:                                              ; preds = %148, %133, %127, %150
  call void @_ZN5blink20CompositeEditCommand18InsertTextIntoNodeEPNS_4TextEjRKN3WTF6StringE(%"class.blink::CompositeEditCommand"* %125, %"class.blink::Text"* nonnull %123, i32 %72, %"class.WTF::String"* nonnull dereferenceable(8) %6) #11
  %152 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #11
  br label %168

168:                                              ; preds = %151, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #11
  %169 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 2
  %170 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %169) #11
  %171 = icmp eq %"class.blink::Node"* %170, %71
  br i1 %171, label %172, label %243

172:                                              ; preds = %168
  %173 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %173) #11
  %174 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 2, i32 1
  %175 = load i32, i32* %174, align 8
  %176 = add nsw i32 %175, 1
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::Node"* nonnull %71, i32 %176) #11
  %177 = bitcast %"class.blink::PositionTemplate"* %7 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %"class.blink::PositionTemplate"* %169 to i64*
  store atomic i64 %178, i64* %179 monotonic, align 8
  %180 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %185, label %182

182:                                              ; preds = %172
  %183 = inttoptr i64 %178 to i8*
  %184 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %183) #11
  br label %185

185:                                              ; preds = %172, %182
  %186 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %7, i64 0, i32 1
  %187 = bitcast i32* %186 to i64*
  %188 = bitcast i32* %174 to i64*
  %189 = load i64, i64* %187, align 8
  store i64 %189, i64* %188, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %173) #11
  br label %243

190:                                              ; preds = %119
  %191 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %192 = load %"class.blink::Document"*, %"class.blink::Document"** %191, align 8
  %193 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #11
  br i1 %120, label %194, label %217

194:                                              ; preds = %190
  %195 = call dereferenceable(8) %"class.WTF::String"* @_ZN5blink22NonBreakingSpaceStringEv() #11
  %196 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %195, i64 0, i32 0, i32 0
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %196, align 8
  %198 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %197, %"class.WTF::StringImpl"** %198, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %199, label %218, label %200

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %218

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = zext i32 %207 to i33
  %209 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %208, i33 1) #11
  %210 = extractvalue { i33, i1 } %209, 1
  %211 = extractvalue { i33, i1 } %209, 0
  %212 = icmp slt i33 %211, 0
  %213 = or i1 %210, %212
  br i1 %213, label %214, label %215, !prof !4

214:                                              ; preds = %205
  call void @llvm.trap() #11
  unreachable

215:                                              ; preds = %205
  %216 = trunc i33 %211 to i32
  store i32 %216, i32* %206, align 4
  br label %218

217:                                              ; preds = %190
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #11
  br label %218

218:                                              ; preds = %215, %200, %194, %217
  %219 = call %"class.blink::Text"* @_ZN5blink8Document21CreateEditingTextNodeERKN3WTF6StringE(%"class.blink::Document"* %192, %"class.WTF::String"* nonnull dereferenceable(8) %8) #11
  %220 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #11
  br label %236

236:                                              ; preds = %218, %232, %235
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #11
  %237 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %238 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %219, i64 0, i32 0, i32 0
  call void @_ZN5blink20CompositeEditCommand15InsertNodeAfterEPNS_4NodeES2_PNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %237, %"class.blink::Node"* %238, %"class.blink::Node"* nonnull %71, %"class.blink::EditingState"* %1) #11
  %239 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %1, i64 0, i32 0
  %240 = load i8, i8* %239, align 1, !range !5
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %242, label %461

242:                                              ; preds = %236
  call void @_ZN5blink23ReplaceSelectionCommand19UpdateNodesInsertedEPNS_4NodeE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::Node"* %238)
  br label %243

243:                                              ; preds = %185, %168, %242, %70, %74
  %244 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %245 = load %"class.blink::Document"*, %"class.blink::Document"** %244, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %245, i32 7) #11
  %246 = bitcast %"class.blink::VisiblePositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %246) #11
  %247 = bitcast %"class.blink::VisiblePositionTemplate"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %247, i8 -86, i64 24, i1 false)
  %248 = load %"class.blink::Document"*, %"class.blink::Document"** %244, align 8, !noalias !30
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %248, i32 7) #11, !noalias !30
  %249 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 1
  %250 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %249, i64 0, i32 0, i32 0, i32 0
  %251 = load %"class.blink::Node"*, %"class.blink::Node"** %250, align 8, !noalias !30
  %252 = icmp eq %"class.blink::Node"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* %249) #11
  br i1 %254, label %256, label %255

255:                                              ; preds = %253
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::VisiblePositionTemplate"* nonnull %9) #11
  br label %257

256:                                              ; preds = %253, %243
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %9, %"class.blink::PositionTemplate"* dereferenceable(16) %249, i32 1) #11
  br label %257

257:                                              ; preds = %255, %256
  %258 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %258) #11
  %259 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 2
  %260 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  %261 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %261, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %260) #11
  %262 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %9, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %11, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %262) #11
  call void @_ZN5blink24MostForwardCaretPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::PositionTemplate"* nonnull sret %10, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %11, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %260) #11
  %263 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ComputeNodeAfterPositionEv(%"class.blink::PositionTemplate"* nonnull %10) #11
  %264 = load i32, i32* %259, align 4
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %270

266:                                              ; preds = %257
  %267 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 1
  %268 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* nonnull %10) #11
  %269 = load i32, i32* %267, align 8
  br label %270

270:                                              ; preds = %266, %257
  %271 = phi %"class.blink::Node"* [ %268, %266 ], [ %263, %257 ]
  %272 = phi i32 [ %269, %266 ], [ 0, %257 ]
  %273 = call zeroext i1 @_ZN5blink18IsStartOfParagraphERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_27EditingBoundaryCrossingRuleE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %9, i32 1) #11
  br i1 %273, label %459, label %274

274:                                              ; preds = %270
  %275 = call i32 @_ZN5blink15CharacterBeforeERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* nonnull dereferenceable(24) %9) #11
  %276 = icmp eq i32 %275, 160
  %277 = select i1 %276, i32 32, i32 %275
  %278 = call zeroext i1 @_ZN5blink29IsCharacterSmartReplaceExemptEib(i32 %277, i1 zeroext true) #11
  %279 = xor i1 %278, true
  %280 = icmp ne %"class.blink::Node"* %271, null
  %281 = and i1 %280, %279
  br i1 %281, label %282, label %459

282:                                              ; preds = %274
  %283 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %271, i64 0, i32 1
  %284 = load i32, i32* %283, align 8
  %285 = and i32 %284, 1
  %286 = icmp eq i32 %285, 0
  %287 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %271, i64 0, i32 6, i32 0, i32 0
  br i1 %286, label %292, label %288

288:                                              ; preds = %282
  %289 = bitcast %"class.blink::NodeData"** %287 to %"class.blink::NodeRareData"**
  %290 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %289, align 8
  %291 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %290, i64 0, i32 1, i32 0, i32 0
  br label %294

292:                                              ; preds = %282
  %293 = bitcast %"class.blink::NodeData"** %287 to %"class.blink::NodeRenderingData"**
  br label %294

294:                                              ; preds = %288, %292
  %295 = phi %"class.blink::NodeRenderingData"** [ %291, %288 ], [ %293, %292 ]
  %296 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %295, align 8
  %297 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %296, i64 0, i32 1
  %298 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %297, align 8
  %299 = icmp eq %"class.blink::LayoutObject"* %298, null
  br i1 %299, label %319, label %300

300:                                              ; preds = %294
  br i1 %286, label %305, label %301

301:                                              ; preds = %300
  %302 = bitcast %"class.blink::NodeData"** %287 to %"class.blink::NodeRareData"**
  %303 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %302, align 8
  %304 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %303, i64 0, i32 1, i32 0, i32 0
  br label %307

305:                                              ; preds = %300
  %306 = bitcast %"class.blink::NodeData"** %287 to %"class.blink::NodeRenderingData"**
  br label %307

307:                                              ; preds = %301, %305
  %308 = phi %"class.blink::NodeRenderingData"** [ %304, %301 ], [ %306, %305 ]
  %309 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %308, align 8
  %310 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %309, i64 0, i32 1
  %311 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %310, align 8
  %312 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %311, i64 0, i32 5, i32 0
  %313 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %312, align 8
  %314 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %313, i64 0, i32 0, i32 9
  %315 = bitcast [20 x i8]* %314 to i160*
  %316 = load i160, i160* %315, align 8
  %317 = and i160 %316, 286720
  %318 = icmp eq i160 %317, 0
  br label %319

319:                                              ; preds = %294, %307
  %320 = phi i1 [ true, %294 ], [ %318, %307 ]
  %321 = and i32 %284, 12
  %322 = icmp eq i32 %321, 4
  %323 = bitcast %"class.blink::Node"* %271 to %"class.blink::Text"*
  br i1 %322, label %324, label %392

324:                                              ; preds = %319
  %325 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %326 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %326) #11
  br i1 %320, label %327, label %350

327:                                              ; preds = %324
  %328 = call dereferenceable(8) %"class.WTF::String"* @_ZN5blink22NonBreakingSpaceStringEv() #11
  %329 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %328, i64 0, i32 0, i32 0
  %330 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %329, align 8
  %331 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %330, %"class.WTF::StringImpl"** %331, align 8
  %332 = icmp eq %"class.WTF::StringImpl"* %330, null
  br i1 %332, label %351, label %333

333:                                              ; preds = %327
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = and i32 %335, 2
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %351

338:                                              ; preds = %333
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %330, i64 0, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = zext i32 %340 to i33
  %342 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %341, i33 1) #11
  %343 = extractvalue { i33, i1 } %342, 1
  %344 = extractvalue { i33, i1 } %342, 0
  %345 = icmp slt i33 %344, 0
  %346 = or i1 %343, %345
  br i1 %346, label %347, label %348, !prof !4

347:                                              ; preds = %338
  call void @llvm.trap() #11
  unreachable

348:                                              ; preds = %338
  %349 = trunc i33 %344 to i32
  store i32 %349, i32* %339, align 4
  br label %351

350:                                              ; preds = %324
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #11
  br label %351

351:                                              ; preds = %348, %333, %327, %350
  call void @_ZN5blink20CompositeEditCommand18InsertTextIntoNodeEPNS_4TextEjRKN3WTF6StringE(%"class.blink::CompositeEditCommand"* %325, %"class.blink::Text"* nonnull %323, i32 %272, %"class.WTF::String"* nonnull dereferenceable(8) %12) #11
  %352 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %352, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %353, null
  br i1 %354, label %368, label %355

355:                                              ; preds = %351
  %356 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %357 = load atomic i32, i32* %356 monotonic, align 4
  %358 = and i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %353, i64 0, i32 0
  %361 = load i32, i32* %360, align 4
  br i1 %359, label %362, label %364

362:                                              ; preds = %355
  %363 = add i32 %361, -1
  store i32 %363, i32* %360, align 4
  br label %364

364:                                              ; preds = %362, %355
  %365 = phi i32 [ %363, %362 ], [ %361, %355 ]
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %368

367:                                              ; preds = %364
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %353) #11
  br label %368

368:                                              ; preds = %351, %364, %367
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %326) #11
  %369 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 2
  %370 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %369) #11
  %371 = icmp eq %"class.blink::Node"* %370, %271
  br i1 %371, label %372, label %459

372:                                              ; preds = %368
  %373 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 2, i32 1
  %374 = load i32, i32* %373, align 8
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %459, label %376

376:                                              ; preds = %372
  %377 = bitcast %"class.blink::PositionTemplate"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %377) #11
  %378 = add nsw i32 %374, 1
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %13, %"class.blink::Node"* nonnull %271, i32 %378) #11
  %379 = bitcast %"class.blink::PositionTemplate"* %13 to i64*
  %380 = load i64, i64* %379, align 8
  %381 = bitcast %"class.blink::PositionTemplate"* %369 to i64*
  store atomic i64 %380, i64* %381 monotonic, align 8
  %382 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %387, label %384

384:                                              ; preds = %376
  %385 = inttoptr i64 %380 to i8*
  %386 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %385) #11
  br label %387

387:                                              ; preds = %376, %384
  %388 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %13, i64 0, i32 1
  %389 = bitcast i32* %388 to i64*
  %390 = bitcast i32* %373 to i64*
  %391 = load i64, i64* %389, align 8
  store i64 %391, i64* %390, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %377) #11
  br label %459

392:                                              ; preds = %319
  %393 = load %"class.blink::Document"*, %"class.blink::Document"** %244, align 8
  %394 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %394) #11
  br i1 %320, label %395, label %418

395:                                              ; preds = %392
  %396 = call dereferenceable(8) %"class.WTF::String"* @_ZN5blink22NonBreakingSpaceStringEv() #11
  %397 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %396, i64 0, i32 0, i32 0
  %398 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %397, align 8
  %399 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %398, %"class.WTF::StringImpl"** %399, align 8
  %400 = icmp eq %"class.WTF::StringImpl"* %398, null
  br i1 %400, label %419, label %401

401:                                              ; preds = %395
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %403 = load atomic i32, i32* %402 monotonic, align 4
  %404 = and i32 %403, 2
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %419

406:                                              ; preds = %401
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 0
  %408 = load i32, i32* %407, align 4
  %409 = zext i32 %408 to i33
  %410 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %409, i33 1) #11
  %411 = extractvalue { i33, i1 } %410, 1
  %412 = extractvalue { i33, i1 } %410, 0
  %413 = icmp slt i33 %412, 0
  %414 = or i1 %411, %413
  br i1 %414, label %415, label %416, !prof !4

415:                                              ; preds = %406
  call void @llvm.trap() #11
  unreachable

416:                                              ; preds = %406
  %417 = trunc i33 %412 to i32
  store i32 %417, i32* %407, align 4
  br label %419

418:                                              ; preds = %392
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #11
  br label %419

419:                                              ; preds = %416, %401, %395, %418
  %420 = call %"class.blink::Text"* @_ZN5blink8Document21CreateEditingTextNodeERKN3WTF6StringE(%"class.blink::Document"* %393, %"class.WTF::String"* nonnull dereferenceable(8) %14) #11
  %421 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %422 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %421, align 8
  %423 = icmp eq %"class.WTF::StringImpl"* %422, null
  br i1 %423, label %437, label %424

424:                                              ; preds = %419
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %426 = load atomic i32, i32* %425 monotonic, align 4
  %427 = and i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 0
  %430 = load i32, i32* %429, align 4
  br i1 %428, label %431, label %433

431:                                              ; preds = %424
  %432 = add i32 %430, -1
  store i32 %432, i32* %429, align 4
  br label %433

433:                                              ; preds = %431, %424
  %434 = phi i32 [ %432, %431 ], [ %430, %424 ]
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %437

436:                                              ; preds = %433
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %422) #11
  br label %437

437:                                              ; preds = %419, %433, %436
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %394) #11
  %438 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %439 = getelementptr inbounds %"class.blink::Text", %"class.blink::Text"* %420, i64 0, i32 0, i32 0
  call void @_ZN5blink20CompositeEditCommand16InsertNodeBeforeEPNS_4NodeES2_PNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %438, %"class.blink::Node"* %439, %"class.blink::Node"* nonnull %271, %"class.blink::EditingState"* %1, i32 1) #11
  %440 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %1, i64 0, i32 0
  %441 = load i8, i8* %440, align 1, !range !5
  %442 = icmp eq i8 %441, 0
  br i1 %442, label %443, label %459

443:                                              ; preds = %437
  %444 = bitcast %"class.blink::PositionTemplate"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %444) #11
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE19FirstPositionInNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %15, %"class.blink::Node"* dereferenceable(64) %439) #11
  %445 = bitcast %"class.blink::PositionTemplate"* %15 to i64*
  %446 = load i64, i64* %445, align 8
  %447 = bitcast %"class.blink::PositionTemplate"* %249 to i64*
  store atomic i64 %446, i64* %447 monotonic, align 8
  %448 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %453, label %450

450:                                              ; preds = %443
  %451 = inttoptr i64 %446 to i8*
  %452 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %451) #11
  br label %453

453:                                              ; preds = %443, %450
  %454 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 1, i32 1
  %455 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %15, i64 0, i32 1
  %456 = bitcast i32* %455 to i64*
  %457 = bitcast i32* %454 to i64*
  %458 = load i64, i64* %456, align 8
  store i64 %458, i64* %457, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %444) #11
  br label %459

459:                                              ; preds = %437, %270, %453, %387, %368, %372, %274
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %258) #11
  %460 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %9, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %460) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %246) #11
  br label %461

461:                                              ; preds = %236, %459
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #11
  %462 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %3, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %462) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ReplaceSelectionCommand23CompleteHTMLReplacementERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEEPNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"*, %"class.blink::PositionTemplate"* nocapture readonly dereferenceable(16), %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::PositionTemplate", align 8
  %5 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::VisiblePositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::SelectionForUndoStep", align 8
  %11 = alloca %"class.blink::SelectionTemplate", align 8
  %12 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %13 = alloca %"class.blink::SelectionForUndoStep", align 8
  %14 = alloca %"class.blink::SelectionTemplate", align 8
  %15 = alloca %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder", align 8
  %16 = alloca %"class.blink::SelectionForUndoStep", align 8
  %17 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %4, i64 0, i32 1
  %20 = bitcast %"class.blink::VisiblePositionTemplate"* %5 to i8*
  %21 = bitcast %"class.blink::PositionTemplate"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %22 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8, !noalias !33
  tail call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %23, i32 7) #11, !noalias !33
  %24 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8, !noalias !33
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %3
  %29 = tail call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* %24) #11
  br i1 %29, label %31, label %30

30:                                               ; preds = %28
  call void @_ZN5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::VisiblePositionTemplate"* nonnull %5) #11
  br label %32

31:                                               ; preds = %28, %3
  call void @_ZN5blink21CreateVisiblePositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityE(%"class.blink::VisiblePositionTemplate"* nonnull sret %5, %"class.blink::PositionTemplate"* dereferenceable(16) %24, i32 1) #11
  br label %32

32:                                               ; preds = %30, %31
  %33 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %5, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %33) #11
  %34 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %5, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  %35 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %6, i64 0, i32 1
  %38 = bitcast %"class.blink::VisiblePositionTemplate"* %7 to i8*
  %39 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #11
  call void @_ZNK5blink23ReplaceSelectionCommand30PositionAtEndOfInsertedContentEv(%"class.blink::VisiblePositionTemplate"* nonnull sret %7, %"class.blink::ReplaceSelectionCommand"* %0)
  %40 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %7, i64 0, i32 0, i32 0
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKS4_(%"class.blink::PositionTemplate"* nonnull %6, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %40) #11
  %41 = getelementptr inbounds %"class.blink::VisiblePositionTemplate", %"class.blink::VisiblePositionTemplate"* %7, i64 0, i32 0
  call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #11
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %43 = icmp eq %"class.blink::Node"* %42, null
  br i1 %43, label %214, label %44

44:                                               ; preds = %32
  %45 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* nonnull %4) #11
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %47 = icmp ne %"class.blink::Node"* %46, null
  %48 = and i1 %45, %47
  br i1 %48, label %49, label %214

49:                                               ; preds = %44
  %50 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"* nonnull %6) #11
  br i1 %50, label %51, label %214

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  call void @_ZN5blink20CompositeEditCommand21RebalanceWhitespaceAtERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::CompositeEditCommand"* %52, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4) #11
  call void @_ZN5blink20CompositeEditCommand21RebalanceWhitespaceAtERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::CompositeEditCommand"* %52, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #11
  %53 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 6
  %54 = load i8, i8* %53, align 2, !range !5
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %191, label %56

56:                                               ; preds = %51
  %57 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %58 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 88) #11
  %59 = bitcast i8* %58 to %"class.blink::Range"*
  call void @_ZN5blink5RangeC1ERNS_8DocumentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES9_(%"class.blink::Range"* %59, %"class.blink::Document"* dereferenceable(2848) %57, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #11
  %60 = getelementptr inbounds i8, i8* %58, i64 -4
  %61 = bitcast i8* %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = or i16 %62, 1
  store atomic i16 %63, i16* %61 release, align 2
  %64 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 3, i32 0, i32 0
  %65 = load %"class.blink::EditingStyle"*, %"class.blink::EditingStyle"** %64, align 8
  call void @_ZN5blink20CompositeEditCommand10ApplyStyleEPKNS_12EditingStyleERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEESA_PNS_12EditingStateE(%"class.blink::CompositeEditCommand"* %52, %"class.blink::EditingStyle"* %65, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, %"class.blink::EditingState"* %2) #11
  %66 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #11
  %67 = getelementptr inbounds i8, i8* %58, i64 24
  %68 = getelementptr inbounds i8, i8* %58, i64 48
  %69 = bitcast i8* %68 to i32*
  %70 = load i32, i32* %69, align 8, !noalias !36
  %71 = icmp eq i32 %70, -1
  %72 = bitcast i8* %67 to %"class.blink::Node"**
  br i1 %71, label %93, label %73

73:                                               ; preds = %56
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %72, align 8, !noalias !36
  %75 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %74, i64 0, i32 3, i32 0, i32 0
  %76 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %76, i64 0, i32 2, i32 0, i32 0
  %78 = load %"class.blink::Document"*, %"class.blink::Document"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %78, i64 0, i32 52
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds i8, i8* %58, i64 40
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %82, align 8, !noalias !36
  %84 = icmp eq i64 %80, %83
  br i1 %84, label %111, label %85

85:                                               ; preds = %73
  %86 = bitcast %"class.blink::Node"* %74 to i1 (%"class.blink::Node"*)***
  %87 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %86, align 8
  %88 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %87, i64 41
  %89 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %88, align 8
  %90 = call zeroext i1 %89(%"class.blink::Node"* %74) #11
  br i1 %90, label %91, label %93

91:                                               ; preds = %85
  %92 = load i32, i32* %69, align 8, !noalias !36
  br label %111

93:                                               ; preds = %56, %85
  %94 = load %"class.blink::Node"*, %"class.blink::Node"** %72, align 8, !noalias !36
  %95 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %94, i64 0, i32 3, i32 0, i32 0
  %96 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %96, i64 0, i32 2, i32 0, i32 0
  %98 = load %"class.blink::Document"*, %"class.blink::Document"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %98, i64 0, i32 52
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds i8, i8* %58, i64 40
  %102 = bitcast i8* %101 to i64*
  store i64 %100, i64* %102, align 8, !noalias !36
  %103 = getelementptr inbounds i8, i8* %58, i64 32
  %104 = bitcast i8* %103 to %"class.blink::Node"**
  %105 = load %"class.blink::Node"*, %"class.blink::Node"** %104, align 8, !noalias !36
  %106 = icmp eq %"class.blink::Node"* %105, null
  br i1 %106, label %107, label %108

107:                                              ; preds = %93
  store i32 0, i32* %69, align 8, !noalias !36
  br label %111

108:                                              ; preds = %93
  %109 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %105) #11
  %110 = add i32 %109, 1
  store i32 %110, i32* %69, align 8, !noalias !36
  br label %111

111:                                              ; preds = %73, %91, %107, %108
  %112 = phi i32 [ %70, %73 ], [ %92, %91 ], [ 0, %107 ], [ %110, %108 ]
  %113 = load %"class.blink::Node"*, %"class.blink::Node"** %72, align 8, !noalias !36
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %8, %"class.blink::Node"* %113, i32 %112) #11
  %114 = bitcast %"class.blink::PositionTemplate"* %8 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  store atomic i64 %115, i64* %116 monotonic, align 8
  %117 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %122, label %119

119:                                              ; preds = %111
  %120 = inttoptr i64 %115 to i8*
  %121 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %120) #11
  br label %122

122:                                              ; preds = %111, %119
  %123 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %8, i64 0, i32 1
  %124 = bitcast i32* %123 to i64*
  %125 = bitcast i32* %19 to i64*
  %126 = load i64, i64* %124, align 8
  store i64 %126, i64* %125, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #11
  %127 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #11
  %128 = getelementptr inbounds i8, i8* %58, i64 56
  %129 = getelementptr inbounds i8, i8* %58, i64 80
  %130 = bitcast i8* %129 to i32*
  %131 = load i32, i32* %130, align 8, !noalias !41
  %132 = icmp eq i32 %131, -1
  %133 = bitcast i8* %128 to %"class.blink::Node"**
  br i1 %132, label %154, label %134

134:                                              ; preds = %122
  %135 = load %"class.blink::Node"*, %"class.blink::Node"** %133, align 8, !noalias !41
  %136 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %135, i64 0, i32 3, i32 0, i32 0
  %137 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %137, i64 0, i32 2, i32 0, i32 0
  %139 = load %"class.blink::Document"*, %"class.blink::Document"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %139, i64 0, i32 52
  %141 = load i64, i64* %140, align 8
  %142 = getelementptr inbounds i8, i8* %58, i64 72
  %143 = bitcast i8* %142 to i64*
  %144 = load i64, i64* %143, align 8, !noalias !41
  %145 = icmp eq i64 %141, %144
  br i1 %145, label %172, label %146

146:                                              ; preds = %134
  %147 = bitcast %"class.blink::Node"* %135 to i1 (%"class.blink::Node"*)***
  %148 = load i1 (%"class.blink::Node"*)**, i1 (%"class.blink::Node"*)*** %147, align 8
  %149 = getelementptr inbounds i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %148, i64 41
  %150 = load i1 (%"class.blink::Node"*)*, i1 (%"class.blink::Node"*)** %149, align 8
  %151 = call zeroext i1 %150(%"class.blink::Node"* %135) #11
  br i1 %151, label %152, label %154

152:                                              ; preds = %146
  %153 = load i32, i32* %130, align 8, !noalias !41
  br label %172

154:                                              ; preds = %122, %146
  %155 = load %"class.blink::Node"*, %"class.blink::Node"** %133, align 8, !noalias !41
  %156 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %155, i64 0, i32 3, i32 0, i32 0
  %157 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %157, i64 0, i32 2, i32 0, i32 0
  %159 = load %"class.blink::Document"*, %"class.blink::Document"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %159, i64 0, i32 52
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds i8, i8* %58, i64 72
  %163 = bitcast i8* %162 to i64*
  store i64 %161, i64* %163, align 8, !noalias !41
  %164 = getelementptr inbounds i8, i8* %58, i64 64
  %165 = bitcast i8* %164 to %"class.blink::Node"**
  %166 = load %"class.blink::Node"*, %"class.blink::Node"** %165, align 8, !noalias !41
  %167 = icmp eq %"class.blink::Node"* %166, null
  br i1 %167, label %168, label %169

168:                                              ; preds = %154
  store i32 0, i32* %130, align 8, !noalias !41
  br label %172

169:                                              ; preds = %154
  %170 = call i32 @_ZNK5blink4Node9NodeIndexEv(%"class.blink::Node"* nonnull %166) #11
  %171 = add i32 %170, 1
  store i32 %171, i32* %130, align 8, !noalias !41
  br label %172

172:                                              ; preds = %134, %152, %168, %169
  %173 = phi i32 [ %131, %134 ], [ %153, %152 ], [ 0, %168 ], [ %171, %169 ]
  %174 = load %"class.blink::Node"*, %"class.blink::Node"** %133, align 8, !noalias !41
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %9, %"class.blink::Node"* %174, i32 %173) #11
  %175 = bitcast %"class.blink::PositionTemplate"* %9 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = bitcast %"class.blink::PositionTemplate"* %6 to i64*
  store atomic i64 %176, i64* %177 monotonic, align 8
  %178 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %172
  %181 = inttoptr i64 %176 to i8*
  %182 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %181) #11
  br label %183

183:                                              ; preds = %172, %180
  %184 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 1
  %185 = bitcast i32* %184 to i64*
  %186 = bitcast i32* %37 to i64*
  %187 = load i64, i64* %185, align 8
  store i64 %187, i64* %186, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #11
  call void @_ZN5blink5Range7DisposeEv(%"class.blink::Range"* %59) #11
  %188 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %2, i64 0, i32 0
  %189 = load i8, i8* %188, align 1, !range !5
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %292

191:                                              ; preds = %51, %183
  %192 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %193 = load %"class.blink::Node"*, %"class.blink::Node"** %192, align 8
  %194 = icmp eq %"class.blink::Node"* %193, null
  br i1 %194, label %208, label %195

195:                                              ; preds = %191
  %196 = ptrtoint %"class.blink::Node"* %193 to i64
  %197 = bitcast %"class.blink::PositionTemplate"* %6 to i64*
  store atomic i64 %196, i64* %197 monotonic, align 8
  %198 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %203, label %200

200:                                              ; preds = %195
  %201 = bitcast %"class.blink::Node"* %193 to i8*
  %202 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %201) #11
  br label %203

203:                                              ; preds = %195, %200
  %204 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %205 = bitcast i32* %204 to i64*
  %206 = bitcast i32* %37 to i64*
  %207 = load i64, i64* %205, align 8
  store i64 %207, i64* %206, align 8
  br label %208

208:                                              ; preds = %191, %203
  call void @_ZN5blink23ReplaceSelectionCommand28MergeTextNodesAroundPositionERNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_PNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"* %0, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6, %"class.blink::EditingState"* %2)
  %209 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %2, i64 0, i32 0
  %210 = load i8, i8* %209, align 1, !range !5
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %212, label %292

212:                                              ; preds = %208
  %213 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  br label %243

214:                                              ; preds = %49, %32, %44
  %215 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.blink::Node"*, %"class.blink::Node"** %215, align 8
  %217 = icmp eq %"class.blink::Node"* %216, null
  %218 = ptrtoint %"class.blink::Node"* %216 to i64
  br i1 %217, label %292, label %219

219:                                              ; preds = %214
  %220 = bitcast %"class.blink::PositionTemplate"* %6 to i64*
  store atomic i64 %218, i64* %220 monotonic, align 8
  %221 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %227, label %223

223:                                              ; preds = %219
  %224 = bitcast %"class.blink::Node"* %216 to i8*
  %225 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %224) #11
  %226 = load i64, i64* %220, align 8
  br label %227

227:                                              ; preds = %219, %223
  %228 = phi i64 [ %218, %219 ], [ %226, %223 ]
  %229 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %230 = bitcast i32* %229 to i64*
  %231 = bitcast i32* %37 to i64*
  %232 = load i64, i64* %230, align 8
  store i64 %232, i64* %231, align 8
  %233 = bitcast %"class.blink::PositionTemplate"* %4 to i64*
  store atomic i64 %228, i64* %233 monotonic, align 8
  %234 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %240, label %236

236:                                              ; preds = %227
  %237 = inttoptr i64 %228 to i8*
  %238 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %237) #11
  %239 = load i64, i64* %231, align 8
  br label %240

240:                                              ; preds = %227, %236
  %241 = phi i64 [ %232, %227 ], [ %239, %236 ]
  %242 = bitcast i32* %19 to i64*
  store i64 %241, i64* %242, align 8
  br label %243

243:                                              ; preds = %212, %240
  %244 = phi i64* [ %213, %212 ], [ %233, %240 ]
  %245 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 13
  %246 = load i64, i64* %244, align 8
  %247 = bitcast %"class.blink::PositionTemplate"* %245 to i64*
  store atomic i64 %246, i64* %247 monotonic, align 8
  %248 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %253, label %250

250:                                              ; preds = %243
  %251 = inttoptr i64 %246 to i8*
  %252 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %251) #11
  br label %253

253:                                              ; preds = %243, %250
  %254 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 13, i32 1
  %255 = bitcast i32* %19 to i64*
  %256 = bitcast i32* %254 to i64*
  %257 = load i64, i64* %255, align 8
  store i64 %257, i64* %256, align 8
  %258 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 14
  %259 = bitcast %"class.blink::PositionTemplate"* %6 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.blink::PositionTemplate"* %258 to i64*
  store atomic i64 %260, i64* %261 monotonic, align 8
  %262 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %267, label %264

264:                                              ; preds = %253
  %265 = inttoptr i64 %260 to i8*
  %266 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %265) #11
  br label %267

267:                                              ; preds = %253, %264
  %268 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 14, i32 1
  %269 = bitcast i32* %37 to i64*
  %270 = bitcast i32* %268 to i64*
  %271 = load i64, i64* %269, align 8
  store i64 %271, i64* %270, align 8
  %272 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 4
  %273 = load i8, i8* %272, align 8, !range !5
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %281, label %275

275:                                              ; preds = %267
  %276 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %277 = bitcast %"class.blink::SelectionForUndoStep"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %277) #11
  %278 = bitcast %"class.blink::SelectionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %278) #11
  %279 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %279) #11
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %12) #11
  %280 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder26SetBaseAndExtentDeprecatedERKNS_16PositionTemplateIS3_EES9_(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %12, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %4, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #11
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %11, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %280) #11
  call void @_ZN5blink20SelectionForUndoStep4FromERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::SelectionForUndoStep"* nonnull sret %10, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %11) #11
  call void @_ZN5blink20CompositeEditCommand18SetEndingSelectionERKNS_20SelectionForUndoStepE(%"class.blink::CompositeEditCommand"* %276, %"class.blink::SelectionForUndoStep"* nonnull dereferenceable(48) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %279) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %278) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %277) #11
  br label %292

281:                                              ; preds = %267
  %282 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %283 = icmp eq %"class.blink::Node"* %282, null
  %284 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  br i1 %283, label %290, label %285

285:                                              ; preds = %281
  %286 = bitcast %"class.blink::SelectionForUndoStep"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %286) #11
  %287 = bitcast %"class.blink::SelectionTemplate"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %287) #11
  %288 = bitcast %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %288) #11
  call void @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7BuilderC1Ev(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %15) #11
  %289 = call dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder8CollapseERKNS_16PositionTemplateIS3_EE(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* nonnull %15, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %6) #11
  call void @_ZNK5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder5BuildEv(%"class.blink::SelectionTemplate"* nonnull sret %14, %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* %289) #11
  call void @_ZN5blink20SelectionForUndoStep4FromERKNS_17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::SelectionForUndoStep"* nonnull sret %13, %"class.blink::SelectionTemplate"* nonnull dereferenceable(40) %14) #11
  call void @_ZN5blink20CompositeEditCommand18SetEndingSelectionERKNS_20SelectionForUndoStepE(%"class.blink::CompositeEditCommand"* %284, %"class.blink::SelectionForUndoStep"* nonnull dereferenceable(48) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %288) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %287) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %286) #11
  br label %292

290:                                              ; preds = %281
  %291 = bitcast %"class.blink::SelectionForUndoStep"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %291) #11
  call void @_ZN5blink20SelectionForUndoStepC1Ev(%"class.blink::SelectionForUndoStep"* nonnull %16) #11
  call void @_ZN5blink20CompositeEditCommand18SetEndingSelectionERKNS_20SelectionForUndoStepE(%"class.blink::CompositeEditCommand"* %284, %"class.blink::SelectionForUndoStep"* nonnull dereferenceable(48) %16) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %291) #11
  br label %292

292:                                              ; preds = %208, %214, %183, %290, %285, %275
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  ret void
}

declare %"class.blink::TextControlElement"* @_ZN5blink20EnclosingTextControlERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25ComputeNodeBeforePositionEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare i32 @_ZN5blink14CharacterAfterERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand18InsertTextIntoNodeEPNS_4TextEjRKN3WTF6StringE(%"class.blink::CompositeEditCommand"*, %"class.blink::Text"*, i32, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::String"* @_ZN5blink22NonBreakingSpaceStringEv() local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"*, i32) unnamed_addr #2

declare %"class.blink::Text"* @_ZN5blink8Document21CreateEditingTextNodeERKN3WTF6StringE(%"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare i32 @_ZN5blink15CharacterBeforeERKNS_23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::VisiblePositionTemplate"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand21RebalanceWhitespaceAtERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::CompositeEditCommand"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand10ApplyStyleEPKNS_12EditingStyleERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEESA_PNS_12EditingStateE(%"class.blink::CompositeEditCommand"*, %"class.blink::EditingStyle"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::EditingState"*) local_unnamed_addr #2

declare void @_ZN5blink5Range7DisposeEv(%"class.blink::Range"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink23ReplaceSelectionCommand28MergeTextNodesAroundPositionERNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES6_PNS_12EditingStateE(%"class.blink::ReplaceSelectionCommand"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::EditingState"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::PositionTemplate", align 8
  %6 = alloca %"class.blink::PositionTemplate", align 8
  %7 = alloca %"class.blink::PositionTemplate", align 8
  %8 = alloca %"class.blink::PositionTemplate", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::PositionTemplate", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = alloca %"class.blink::PositionTemplate", align 8
  %13 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  %19 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #11
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 12
  %25 = icmp eq i32 %24, 4
  %26 = and i1 %15, %25
  br i1 %26, label %43, label %27

27:                                               ; preds = %4, %21
  %28 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25ComputeNodeBeforePositionEv(%"class.blink::PositionTemplate"* %1) #11
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 12
  %34 = icmp eq i32 %33, 4
  br i1 %34, label %43, label %35

35:                                               ; preds = %30, %27
  %36 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ComputeNodeAfterPositionEv(%"class.blink::PositionTemplate"* %1) #11
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %493, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %36, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 12
  %42 = icmp eq i32 %41, 4
  br i1 %42, label %43, label %493

43:                                               ; preds = %38, %30, %21
  %44 = phi %"class.blink::Node"* [ %19, %21 ], [ %28, %30 ], [ %36, %38 ]
  %45 = bitcast %"class.blink::Node"* %44 to %"class.blink::Text"*
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1
  %47 = bitcast %"class.blink::Node"* %46 to i8*
  %48 = load i8, i8* %47, align 8, !range !5
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 0, i32 0, i32 1
  %52 = bitcast %"class.blink::TraceWrapperV8Reference"* %51 to %"class.blink::ParkableString"*
  %53 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %52) #11
  br label %57

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 1
  %56 = bitcast i32* %55 to %"class.WTF::String"*
  br label %57

57:                                               ; preds = %50, %54
  %58 = phi %"class.WTF::String"* [ %53, %50 ], [ %56, %54 ]
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %146, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %146, label %66

66:                                               ; preds = %62
  %67 = load i8, i8* %47, align 8, !range !5
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 0, i32 0, i32 1
  %71 = bitcast %"class.blink::TraceWrapperV8Reference"* %70 to %"class.blink::ParkableString"*
  %72 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %71) #11
  br label %76

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 1
  %75 = bitcast i32* %74 to %"class.WTF::String"*
  br label %76

76:                                               ; preds = %69, %73
  %77 = phi %"class.WTF::String"* [ %72, %69 ], [ %75, %73 ]
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %96, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %96, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 1
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %96

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 1
  %92 = bitcast %"class.WTF::StringImpl"* %91 to i16*
  %93 = load i16, i16* %92, align 2
  %94 = and i16 %93, -1024
  %95 = icmp eq i16 %94, -9216
  br i1 %95, label %165, label %96

96:                                               ; preds = %85, %81, %76, %90
  %97 = load i8, i8* %47, align 8, !range !5
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 1
  %101 = bitcast i32* %100 to %"class.WTF::String"*
  br label %110

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 0, i32 0, i32 1
  %104 = bitcast %"class.blink::TraceWrapperV8Reference"* %103 to %"class.blink::ParkableString"*
  %105 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %104) #11
  %106 = load i8, i8* %47, align 8
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %110, label %108

108:                                              ; preds = %102
  %109 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %104) #11
  br label %114

110:                                              ; preds = %102, %99
  %111 = phi %"class.WTF::String"* [ %101, %99 ], [ %105, %102 ]
  %112 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 1
  %113 = bitcast i32* %112 to %"class.WTF::String"*
  br label %114

114:                                              ; preds = %108, %110
  %115 = phi %"class.WTF::String"* [ %105, %108 ], [ %111, %110 ]
  %116 = phi %"class.WTF::String"* [ %109, %108 ], [ %113, %110 ]
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 0, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %123, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 1
  %122 = load i32, i32* %121, align 4
  br label %123

123:                                              ; preds = %114, %120
  %124 = phi i32 [ %122, %120 ], [ 0, %114 ]
  %125 = add i32 %124, -1
  %126 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %115, i64 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %146, label %129

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = icmp ugt i32 %131, %125
  br i1 %132, label %133, label %146

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %146

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 1
  %140 = bitcast %"class.WTF::StringImpl"* %139 to i16*
  %141 = zext i32 %125 to i64
  %142 = getelementptr inbounds i16, i16* %140, i64 %141
  %143 = load i16, i16* %142, align 2
  %144 = and i16 %143, -1024
  %145 = icmp eq i16 %144, -10240
  br i1 %145, label %165, label %146

146:                                              ; preds = %133, %123, %129, %57, %62, %138
  %147 = load i8, i8* %47, align 8, !range !5
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %153, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 0, i32 0, i32 1
  %151 = bitcast %"class.blink::TraceWrapperV8Reference"* %150 to %"class.blink::ParkableString"*
  %152 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %151) #11
  br label %156

153:                                              ; preds = %146
  %154 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 1
  %155 = bitcast i32* %154 to %"class.WTF::String"*
  br label %156

156:                                              ; preds = %149, %153
  %157 = phi %"class.WTF::String"* [ %152, %149 ], [ %155, %153 ]
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %165, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = icmp ugt i32 %163, 1024
  br i1 %164, label %493, label %165

165:                                              ; preds = %156, %90, %161, %138
  %166 = phi i1 [ false, %161 ], [ true, %138 ], [ true, %90 ], [ false, %156 ]
  %167 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 0, i32 4, i32 0, i32 0
  %168 = load %"class.blink::Node"*, %"class.blink::Node"** %167, align 8
  %169 = icmp eq %"class.blink::Node"* %168, null
  br i1 %169, label %363, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 0, i32 1
  %172 = load i32, i32* %171, align 8
  %173 = and i32 %172, 12
  %174 = icmp eq i32 %173, 4
  br i1 %174, label %175, label %363

175:                                              ; preds = %170
  br i1 %166, label %197, label %176

176:                                              ; preds = %175
  %177 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 1
  %178 = bitcast %"class.blink::Node"* %177 to i8*
  %179 = load i8, i8* %178, align 8, !range !5
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 1, i32 0, i32 0, i32 1
  %183 = bitcast %"class.blink::TraceWrapperV8Reference"* %182 to %"class.blink::ParkableString"*
  %184 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %183) #11
  br label %188

185:                                              ; preds = %176
  %186 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 1, i32 1
  %187 = bitcast i32* %186 to %"class.WTF::String"*
  br label %188

188:                                              ; preds = %181, %185
  %189 = phi %"class.WTF::String"* [ %184, %181 ], [ %187, %185 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %192, label %197, label %193

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 1
  %195 = load i32, i32* %194, align 4
  %196 = icmp ult i32 %195, 1025
  br i1 %196, label %197, label %363

197:                                              ; preds = %175, %188, %193
  %198 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %199 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 1
  %200 = bitcast %"class.blink::Node"* %199 to i8*
  %201 = load i8, i8* %200, align 8, !range !5
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %207, label %203

203:                                              ; preds = %197
  %204 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 1, i32 0, i32 0, i32 1
  %205 = bitcast %"class.blink::TraceWrapperV8Reference"* %204 to %"class.blink::ParkableString"*
  %206 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %205) #11
  br label %210

207:                                              ; preds = %197
  %208 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 1, i32 1
  %209 = bitcast i32* %208 to %"class.WTF::String"*
  br label %210

210:                                              ; preds = %203, %207
  %211 = phi %"class.WTF::String"* [ %206, %203 ], [ %209, %207 ]
  tail call void @_ZN5blink20CompositeEditCommand18InsertTextIntoNodeEPNS_4TextEjRKN3WTF6StringE(%"class.blink::CompositeEditCommand"* %198, %"class.blink::Text"* nonnull %45, i32 0, %"class.WTF::String"* dereferenceable(8) %211) #11
  br i1 %15, label %212, label %257

212:                                              ; preds = %210
  %213 = bitcast %"class.blink::PositionTemplate"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %213) #11
  %214 = tail call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %1) #11
  %215 = load i8, i8* %200, align 8, !range !5
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %236, label %217

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 1, i32 0, i32 0, i32 1
  %219 = bitcast %"class.blink::TraceWrapperV8Reference"* %218 to %"class.blink::ParkableStringImpl"**
  %220 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %219, align 8
  %221 = icmp eq %"class.blink::ParkableStringImpl"* %220, null
  br i1 %221, label %244, label %222

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0
  %224 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %223, align 8
  %225 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %224, null
  br i1 %225, label %226, label %233

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %220, i64 0, i32 1, i32 0, i32 0
  %228 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %227, align 8
  %229 = icmp eq %"class.WTF::StringImpl"* %228, null
  br i1 %229, label %244, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %228, i64 0, i32 1
  %232 = load i32, i32* %231, align 4
  br label %244

233:                                              ; preds = %222
  %234 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %224, i64 0, i32 8
  %235 = load i32, i32* %234, align 4
  br label %244

236:                                              ; preds = %212
  %237 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 1, i32 1
  %238 = bitcast i32* %237 to %"class.WTF::StringImpl"**
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %244, label %241

241:                                              ; preds = %236
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 1
  %243 = load i32, i32* %242, align 4
  br label %244

244:                                              ; preds = %217, %226, %230, %233, %236, %241
  %245 = phi i32 [ 0, %217 ], [ %235, %233 ], [ %232, %230 ], [ 0, %226 ], [ %243, %241 ], [ 0, %236 ]
  %246 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %247 = load i32, i32* %246, align 8
  %248 = add i32 %247, %245
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %5, %"class.blink::Node"* %214, i32 %248) #11
  %249 = bitcast %"class.blink::PositionTemplate"* %5 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = bitcast %"class.blink::PositionTemplate"* %1 to i64*
  store atomic i64 %250, i64* %251 monotonic, align 8
  %252 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %269, label %254

254:                                              ; preds = %244
  %255 = inttoptr i64 %250 to i8*
  %256 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %255) #11
  br label %269

257:                                              ; preds = %210
  %258 = bitcast %"class.blink::PositionTemplate"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %258) #11
  call void @_ZN5blink29ComputePositionForNodeRemovalERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %6, %"class.blink::PositionTemplate"* dereferenceable(16) %1, %"class.blink::Node"* nonnull dereferenceable(64) %168) #11
  %259 = bitcast %"class.blink::PositionTemplate"* %6 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.blink::PositionTemplate"* %1 to i64*
  store atomic i64 %260, i64* %261 monotonic, align 8
  %262 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %267, label %264

264:                                              ; preds = %257
  %265 = inttoptr i64 %260 to i8*
  %266 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %265) #11
  br label %267

267:                                              ; preds = %257, %264
  %268 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  br label %269

269:                                              ; preds = %254, %244, %267
  %270 = phi %"class.blink::PositionTemplate"* [ %6, %267 ], [ %5, %244 ], [ %5, %254 ]
  %271 = phi i32* [ %268, %267 ], [ %246, %244 ], [ %246, %254 ]
  %272 = phi i8* [ %258, %267 ], [ %213, %244 ], [ %213, %254 ]
  %273 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %270, i64 0, i32 1
  %274 = bitcast i32* %273 to i64*
  %275 = bitcast i32* %271 to i64*
  %276 = load i64, i64* %274, align 8
  store i64 %276, i64* %275, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %272) #11
  br i1 %18, label %277, label %339

277:                                              ; preds = %269
  %278 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %2) #11
  %279 = icmp eq %"class.blink::Node"* %278, %44
  br i1 %279, label %280, label %324

280:                                              ; preds = %277
  %281 = bitcast %"class.blink::PositionTemplate"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %281) #11
  %282 = load i8, i8* %200, align 8, !range !5
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %303, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 1, i32 0, i32 0, i32 1
  %286 = bitcast %"class.blink::TraceWrapperV8Reference"* %285 to %"class.blink::ParkableStringImpl"**
  %287 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %286, align 8
  %288 = icmp eq %"class.blink::ParkableStringImpl"* %287, null
  br i1 %288, label %311, label %289

289:                                              ; preds = %284
  %290 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %287, i64 0, i32 2, i32 0, i32 0, i32 0
  %291 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %290, align 8
  %292 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %291, null
  br i1 %292, label %293, label %300

293:                                              ; preds = %289
  %294 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %287, i64 0, i32 1, i32 0, i32 0
  %295 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %294, align 8
  %296 = icmp eq %"class.WTF::StringImpl"* %295, null
  br i1 %296, label %311, label %297

297:                                              ; preds = %293
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 1
  %299 = load i32, i32* %298, align 4
  br label %311

300:                                              ; preds = %289
  %301 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %291, i64 0, i32 8
  %302 = load i32, i32* %301, align 4
  br label %311

303:                                              ; preds = %280
  %304 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %168, i64 1, i32 1
  %305 = bitcast i32* %304 to %"class.WTF::StringImpl"**
  %306 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %305, align 8
  %307 = icmp eq %"class.WTF::StringImpl"* %306, null
  br i1 %307, label %311, label %308

308:                                              ; preds = %303
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %306, i64 0, i32 1
  %310 = load i32, i32* %309, align 4
  br label %311

311:                                              ; preds = %284, %293, %297, %300, %303, %308
  %312 = phi i32 [ 0, %284 ], [ %302, %300 ], [ %299, %297 ], [ 0, %293 ], [ %310, %308 ], [ 0, %303 ]
  %313 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  %314 = load i32, i32* %313, align 8
  %315 = add i32 %314, %312
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %7, %"class.blink::Node"* nonnull %44, i32 %315) #11
  %316 = bitcast %"class.blink::PositionTemplate"* %7 to i64*
  %317 = load i64, i64* %316, align 8
  %318 = bitcast %"class.blink::PositionTemplate"* %2 to i64*
  store atomic i64 %317, i64* %318 monotonic, align 8
  %319 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %351, label %321

321:                                              ; preds = %311
  %322 = inttoptr i64 %317 to i8*
  %323 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %322) #11
  br label %351

324:                                              ; preds = %277
  %325 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %2) #11
  %326 = icmp eq %"class.blink::Node"* %325, %168
  br i1 %326, label %327, label %359

327:                                              ; preds = %324
  %328 = bitcast %"class.blink::PositionTemplate"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %328) #11
  %329 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  %330 = load i32, i32* %329, align 8
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %8, %"class.blink::Node"* nonnull %44, i32 %330) #11
  %331 = bitcast %"class.blink::PositionTemplate"* %8 to i64*
  %332 = load i64, i64* %331, align 8
  %333 = bitcast %"class.blink::PositionTemplate"* %2 to i64*
  store atomic i64 %332, i64* %333 monotonic, align 8
  %334 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %351, label %336

336:                                              ; preds = %327
  %337 = inttoptr i64 %332 to i8*
  %338 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %337) #11
  br label %351

339:                                              ; preds = %269
  %340 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %340) #11
  call void @_ZN5blink29ComputePositionForNodeRemovalERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %9, %"class.blink::PositionTemplate"* dereferenceable(16) %2, %"class.blink::Node"* nonnull dereferenceable(64) %168) #11
  %341 = bitcast %"class.blink::PositionTemplate"* %9 to i64*
  %342 = load i64, i64* %341, align 8
  %343 = bitcast %"class.blink::PositionTemplate"* %2 to i64*
  store atomic i64 %342, i64* %343 monotonic, align 8
  %344 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %345 = icmp eq i32 %344, 0
  br i1 %345, label %349, label %346

346:                                              ; preds = %339
  %347 = inttoptr i64 %342 to i8*
  %348 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %347) #11
  br label %349

349:                                              ; preds = %339, %346
  %350 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  br label %351

351:                                              ; preds = %336, %327, %321, %311, %349
  %352 = phi %"class.blink::PositionTemplate"* [ %9, %349 ], [ %7, %311 ], [ %7, %321 ], [ %8, %327 ], [ %8, %336 ]
  %353 = phi i32* [ %350, %349 ], [ %313, %311 ], [ %313, %321 ], [ %329, %327 ], [ %329, %336 ]
  %354 = phi i8* [ %340, %349 ], [ %281, %311 ], [ %281, %321 ], [ %328, %327 ], [ %328, %336 ]
  %355 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %352, i64 0, i32 1
  %356 = bitcast i32* %355 to i64*
  %357 = bitcast i32* %353 to i64*
  %358 = load i64, i64* %356, align 8
  store i64 %358, i64* %357, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %354) #11
  br label %359

359:                                              ; preds = %351, %324
  call void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %198, %"class.blink::Node"* nonnull %168, %"class.blink::EditingState"* %3, i32 1) #11
  %360 = getelementptr inbounds %"class.blink::EditingState", %"class.blink::EditingState"* %3, i64 0, i32 0
  %361 = load i8, i8* %360, align 1, !range !5
  %362 = icmp eq i8 %361, 0
  br i1 %362, label %363, label %493

363:                                              ; preds = %359, %170, %165, %193
  %364 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 0, i32 5, i32 0, i32 0
  %365 = load %"class.blink::Node"*, %"class.blink::Node"** %364, align 8
  %366 = icmp eq %"class.blink::Node"* %365, null
  br i1 %366, label %493, label %367

367:                                              ; preds = %363
  %368 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %365, i64 0, i32 1
  %369 = load i32, i32* %368, align 8
  %370 = and i32 %369, 12
  %371 = icmp eq i32 %370, 4
  br i1 %371, label %372, label %493

372:                                              ; preds = %367
  br i1 %166, label %394, label %373

373:                                              ; preds = %372
  %374 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %365, i64 1
  %375 = bitcast %"class.blink::Node"* %374 to i8*
  %376 = load i8, i8* %375, align 8, !range !5
  %377 = icmp eq i8 %376, 0
  br i1 %377, label %382, label %378

378:                                              ; preds = %373
  %379 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %365, i64 1, i32 0, i32 0, i32 1
  %380 = bitcast %"class.blink::TraceWrapperV8Reference"* %379 to %"class.blink::ParkableString"*
  %381 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %380) #11
  br label %385

382:                                              ; preds = %373
  %383 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %365, i64 1, i32 1
  %384 = bitcast i32* %383 to %"class.WTF::String"*
  br label %385

385:                                              ; preds = %378, %382
  %386 = phi %"class.WTF::String"* [ %381, %378 ], [ %384, %382 ]
  %387 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %386, i64 0, i32 0, i32 0
  %388 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %387, align 8
  %389 = icmp eq %"class.WTF::StringImpl"* %388, null
  br i1 %389, label %394, label %390

390:                                              ; preds = %385
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 1
  %392 = load i32, i32* %391, align 4
  %393 = icmp ugt i32 %392, 1024
  br i1 %393, label %493, label %394

394:                                              ; preds = %385, %390, %372
  %395 = load i8, i8* %47, align 8, !range !5
  %396 = icmp eq i8 %395, 0
  br i1 %396, label %416, label %397

397:                                              ; preds = %394
  %398 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 0, i32 0, i32 1
  %399 = bitcast %"class.blink::TraceWrapperV8Reference"* %398 to %"class.blink::ParkableStringImpl"**
  %400 = load %"class.blink::ParkableStringImpl"*, %"class.blink::ParkableStringImpl"** %399, align 8
  %401 = icmp eq %"class.blink::ParkableStringImpl"* %400, null
  br i1 %401, label %424, label %402

402:                                              ; preds = %397
  %403 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %400, i64 0, i32 2, i32 0, i32 0, i32 0
  %404 = load %"struct.blink::ParkableStringImpl::ParkableMetadata"*, %"struct.blink::ParkableStringImpl::ParkableMetadata"** %403, align 8
  %405 = icmp eq %"struct.blink::ParkableStringImpl::ParkableMetadata"* %404, null
  br i1 %405, label %406, label %413

406:                                              ; preds = %402
  %407 = getelementptr inbounds %"class.blink::ParkableStringImpl", %"class.blink::ParkableStringImpl"* %400, i64 0, i32 1, i32 0, i32 0
  %408 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %407, align 8
  %409 = icmp eq %"class.WTF::StringImpl"* %408, null
  br i1 %409, label %424, label %410

410:                                              ; preds = %406
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 1
  %412 = load i32, i32* %411, align 4
  br label %424

413:                                              ; preds = %402
  %414 = getelementptr inbounds %"struct.blink::ParkableStringImpl::ParkableMetadata", %"struct.blink::ParkableStringImpl::ParkableMetadata"* %404, i64 0, i32 8
  %415 = load i32, i32* %414, align 4
  br label %424

416:                                              ; preds = %394
  %417 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %44, i64 1, i32 1
  %418 = bitcast i32* %417 to %"class.WTF::StringImpl"**
  %419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %418, align 8
  %420 = icmp eq %"class.WTF::StringImpl"* %419, null
  br i1 %420, label %424, label %421

421:                                              ; preds = %416
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 1
  %423 = load i32, i32* %422, align 4
  br label %424

424:                                              ; preds = %397, %406, %410, %413, %416, %421
  %425 = phi i32 [ 0, %397 ], [ %415, %413 ], [ %412, %410 ], [ 0, %406 ], [ %423, %421 ], [ 0, %416 ]
  %426 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  %427 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %365, i64 1
  %428 = bitcast %"class.blink::Node"* %427 to i8*
  %429 = load i8, i8* %428, align 8, !range !5
  %430 = icmp eq i8 %429, 0
  br i1 %430, label %435, label %431

431:                                              ; preds = %424
  %432 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %365, i64 1, i32 0, i32 0, i32 1
  %433 = bitcast %"class.blink::TraceWrapperV8Reference"* %432 to %"class.blink::ParkableString"*
  %434 = call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"* %433) #11
  br label %438

435:                                              ; preds = %424
  %436 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %365, i64 1, i32 1
  %437 = bitcast i32* %436 to %"class.WTF::String"*
  br label %438

438:                                              ; preds = %431, %435
  %439 = phi %"class.WTF::String"* [ %434, %431 ], [ %437, %435 ]
  call void @_ZN5blink20CompositeEditCommand18InsertTextIntoNodeEPNS_4TextEjRKN3WTF6StringE(%"class.blink::CompositeEditCommand"* %426, %"class.blink::Text"* nonnull %45, i32 %425, %"class.WTF::String"* dereferenceable(8) %439) #11
  br i1 %15, label %456, label %440

440:                                              ; preds = %438
  %441 = bitcast %"class.blink::PositionTemplate"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %441) #11
  call void @_ZN5blink29ComputePositionForNodeRemovalERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %10, %"class.blink::PositionTemplate"* dereferenceable(16) %1, %"class.blink::Node"* nonnull dereferenceable(64) %365) #11
  %442 = bitcast %"class.blink::PositionTemplate"* %10 to i64*
  %443 = load i64, i64* %442, align 8
  %444 = bitcast %"class.blink::PositionTemplate"* %1 to i64*
  store atomic i64 %443, i64* %444 monotonic, align 8
  %445 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %450, label %447

447:                                              ; preds = %440
  %448 = inttoptr i64 %443 to i8*
  %449 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %448) #11
  br label %450

450:                                              ; preds = %440, %447
  %451 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %1, i64 0, i32 1
  %452 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %10, i64 0, i32 1
  %453 = bitcast i32* %452 to i64*
  %454 = bitcast i32* %451 to i64*
  %455 = load i64, i64* %453, align 8
  store i64 %455, i64* %454, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %441) #11
  br label %456

456:                                              ; preds = %450, %438
  br i1 %18, label %457, label %473

457:                                              ; preds = %456
  %458 = call %"class.blink::Node"* @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE20ComputeContainerNodeEv(%"class.blink::PositionTemplate"* %2) #11
  %459 = icmp eq %"class.blink::Node"* %458, %365
  br i1 %459, label %460, label %473

460:                                              ; preds = %457
  %461 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %461) #11
  %462 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  %463 = load i32, i32* %462, align 8
  %464 = add i32 %463, %425
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1EPKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %11, %"class.blink::Node"* nonnull %44, i32 %464) #11
  %465 = bitcast %"class.blink::PositionTemplate"* %11 to i64*
  %466 = load i64, i64* %465, align 8
  %467 = bitcast %"class.blink::PositionTemplate"* %2 to i64*
  store atomic i64 %466, i64* %467 monotonic, align 8
  %468 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %485, label %470

470:                                              ; preds = %460
  %471 = inttoptr i64 %466 to i8*
  %472 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %471) #11
  br label %485

473:                                              ; preds = %457, %456
  %474 = bitcast %"class.blink::PositionTemplate"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %474) #11
  call void @_ZN5blink29ComputePositionForNodeRemovalERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_4NodeE(%"class.blink::PositionTemplate"* nonnull sret %12, %"class.blink::PositionTemplate"* dereferenceable(16) %2, %"class.blink::Node"* nonnull dereferenceable(64) %365) #11
  %475 = bitcast %"class.blink::PositionTemplate"* %12 to i64*
  %476 = load i64, i64* %475, align 8
  %477 = bitcast %"class.blink::PositionTemplate"* %2 to i64*
  store atomic i64 %476, i64* %477 monotonic, align 8
  %478 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %483, label %480

480:                                              ; preds = %473
  %481 = inttoptr i64 %476 to i8*
  %482 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %481) #11
  br label %483

483:                                              ; preds = %473, %480
  %484 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %2, i64 0, i32 1
  br label %485

485:                                              ; preds = %470, %460, %483
  %486 = phi %"class.blink::PositionTemplate"* [ %12, %483 ], [ %11, %460 ], [ %11, %470 ]
  %487 = phi i32* [ %484, %483 ], [ %462, %460 ], [ %462, %470 ]
  %488 = phi i8* [ %474, %483 ], [ %461, %460 ], [ %461, %470 ]
  %489 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %486, i64 0, i32 1
  %490 = bitcast i32* %489 to i64*
  %491 = bitcast i32* %487 to i64*
  %492 = load i64, i64* %490, align 8
  store i64 %492, i64* %491, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %488) #11
  call void @_ZN5blink20CompositeEditCommand10RemoveNodeEPNS_4NodeEPNS_12EditingStateENS_35ShouldAssumeContentIsAlwaysEditableE(%"class.blink::CompositeEditCommand"* %426, %"class.blink::Node"* nonnull %365, %"class.blink::EditingState"* %3, i32 1) #11
  ret void

493:                                              ; preds = %359, %367, %161, %38, %35, %363, %390
  ret void
}

declare dereferenceable(40) %"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"* @_ZN5blink17SelectionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE7Builder26SetBaseAndExtentDeprecatedERKNS_16PositionTemplateIS3_EES9_(%"class.blink::SelectionTemplate<blink::EditingAlgorithm<blink::NodeTraversal> >::Builder"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN5blink20SelectionForUndoStepC1Ev(%"class.blink::SelectionForUndoStep"*) unnamed_addr #2

declare void @_ZN5blink29ComputePositionForNodeRemovalERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink23ReplaceSelectionCommand12GetInputTypeEv(%"class.blink::ReplaceSelectionCommand"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare %"class.blink::Node"* @_ZN5blink13ContainerNode11RemoveChildEPNS_4NodeERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.blink::Node"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #2

declare dereferenceable(64) %"class.blink::Node"* @_ZN5blink13NodeTraversal16LastWithinOrSelfERNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare void @_ZNK5blink20SelectionForUndoStep3EndEv(%"class.blink::PositionTemplate"* sret, %"class.blink::SelectionForUndoStep"*) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand25ReplaceSelectedTextInNodeERKN3WTF6StringE(%"class.blink::PositionTemplate"* sret, %"class.blink::CompositeEditCommand"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand27RemoveNodeAndPruneAncestorsEPNS_4NodeEPNS_12EditingStateES2_(%"class.blink::CompositeEditCommand"*, %"class.blink::Node"*, %"class.blink::EditingState"*, %"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink23ReplaceSelectionCommand25IsReplaceSelectionCommandEv(%"class.blink::ReplaceSelectionCommand"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23ReplaceSelectionCommand13InsertedRangeEv(%"class.blink::EphemeralRangeTemplate"* noalias sret, %"class.blink::ReplaceSelectionCommand"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %1, i64 0, i32 13
  %4 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %1, i64 0, i32 14
  tail call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* %0, %"class.blink::PositionTemplate"* dereferenceable(16) %3, %"class.blink::PositionTemplate"* dereferenceable(16) %4) #11
  ret void
}

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink23ReplaceSelectionCommand5TraceEPNS_7VisitorE(%"class.blink::ReplaceSelectionCommand"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 1
  tail call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5TraceEPNS_7VisitorE(%"class.blink::PositionTemplate"* %3, %"class.blink::Visitor"* %1) #11
  %4 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 2
  tail call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5TraceEPNS_7VisitorE(%"class.blink::PositionTemplate"* %4, %"class.blink::Visitor"* %1) #11
  %5 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 3
  %6 = bitcast %"class.blink::Member.1445"* %5 to i64*
  %7 = load atomic i64, i64* %6 monotonic, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %2
  %10 = inttoptr i64 %7 to i8*
  %11 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, i64 5
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %13, align 8
  tail call void %14(%"class.blink::Visitor"* %1, i8* nonnull %10, i8* nonnull %10, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12EditingStyleEE5TraceEPNS_7VisitorEPKv) #11
  br label %15

15:                                               ; preds = %2, %9
  %16 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 7
  %17 = bitcast %"class.blink::Member.1465"* %16 to i64*
  %18 = load atomic i64, i64* %17 monotonic, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = inttoptr i64 %18 to i8*
  %22 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, i64 5
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8* nonnull %21, i8* nonnull %21, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16DocumentFragmentEE5TraceEPNS_7VisitorEPKv) #11
  br label %26

26:                                               ; preds = %15, %20
  %27 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 13
  tail call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5TraceEPNS_7VisitorE(%"class.blink::PositionTemplate"* %27, %"class.blink::Visitor"* %1) #11
  %28 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 14
  tail call void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5TraceEPNS_7VisitorE(%"class.blink::PositionTemplate"* %28, %"class.blink::Visitor"* %1) #11
  %29 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  tail call void @_ZNK5blink20CompositeEditCommand5TraceEPNS_7VisitorE(%"class.blink::CompositeEditCommand"* %29, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink20CompositeEditCommand5TraceEPNS_7VisitorE(%"class.blink::CompositeEditCommand"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink20CompositeEditCommandD2Ev(%"class.blink::CompositeEditCommand"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23ReplaceSelectionCommandD0Ev(%"class.blink::ReplaceSelectionCommand"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ReplaceSelectionCommand", %"class.blink::ReplaceSelectionCommand"* %0, i64 0, i32 0
  tail call void @_ZN5blink20CompositeEditCommandD2Ev(%"class.blink::CompositeEditCommand"* %2) #11
  ret void
}

declare void @_ZN5blink20CompositeEditCommand9SetParentEPS0_(%"class.blink::CompositeEditCommand"*, %"class.blink::CompositeEditCommand"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EditCommand19IsSimpleEditCommandEv(%"class.blink::EditCommand"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20CompositeEditCommand22IsCompositeEditCommandEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.WTF::StringImpl"* @_ZNK5blink11EditCommand21TextDataForInputEventEv(%"class.blink::EditCommand"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink20CompositeEditCommand15IsTypingCommandEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink20CompositeEditCommand21IsCommandGroupWrapperEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink20CompositeEditCommand20IsDragAndDropCommandEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #2

declare zeroext i1 @_ZNK5blink20CompositeEditCommand20PreservesTypingStyleEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand14AppliedEditingEv(%"class.blink::CompositeEditCommand"*) unnamed_addr #2

declare void @_ZN5blink20CompositeEditCommand18DeleteTextFromNodeEPNS_4TextEjj(%"class.blink::CompositeEditCommand"*, %"class.blink::Text"*, i32, i32) unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element12getAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare i32 @_ZN5blink27NumEnclosingMailBlockquotesERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.80"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.80", %"class.WTF::HashTable.80"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0)) #11
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #11
  %30 = bitcast i8* %29 to %"class.WTF::AtomicString"*
  %31 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.80"* %0, %"class.WTF::AtomicString"* %30, i32 %17, %"class.WTF::AtomicString"* null) #11
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.80"*, %"class.WTF::AtomicString"*, i32, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.WTF::AtomicString"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.80", %"class.WTF::HashTable.80"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.80", %"class.WTF::HashTable.80"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.80"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %17 = ptrtoint %"class.WTF::AtomicString"* %16 to i64
  br label %61

18:                                               ; preds = %157
  %19 = bitcast %"class.WTF::HashTable.80"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %158, %18 ]
  %23 = phi %"class.WTF::AtomicString"* [ null, %10 ], [ %161, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %159, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"class.WTF::AtomicString"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %57, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi i64 [ 0, %29 ], [ %53, %52 ]
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %25, i64 %32
  %34 = bitcast %"class.WTF::AtomicString"* %33 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = bitcast i8* %35 to %"class.WTF::StringImpl"*
  %37 = ptrtoint i8* %35 to i64
  switch i64 %37, label %38 [
    i64 -1, label %52
    i64 0, label %52
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i32*
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = bitcast i8* %35 to i32*
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %38
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %38
  %49 = phi i32 [ %47, %46 ], [ %45, %38 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #11
  br label %52

52:                                               ; preds = %51, %48, %31, %31
  %53 = add nuw nsw i64 %32, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %55, label %31

55:                                               ; preds = %52, %27
  %56 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %56) #11
  br label %57

57:                                               ; preds = %20, %55
  %58 = getelementptr inbounds %"class.WTF::HashTable.80", %"class.WTF::HashTable.80"* %0, i64 0, i32 3
  %59 = load i32, i32* %58, align 8
  %60 = and i32 %59, -2147483648
  store i32 %60, i32* %58, align 8
  ret %"class.WTF::AtomicString"* %23

61:                                               ; preds = %13, %157
  %62 = phi i64 [ %17, %13 ], [ %158, %157 ]
  %63 = phi i32 [ %7, %13 ], [ %159, %157 ]
  %64 = phi %"class.WTF::AtomicString"* [ %16, %13 ], [ %160, %157 ]
  %65 = phi %"class.WTF::AtomicString"* [ null, %13 ], [ %161, %157 ]
  %66 = phi i32 [ 0, %13 ], [ %162, %157 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 %67
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  switch i64 %71, label %72 [
    i64 -1, label %157
    i64 0, label %157
  ]

72:                                               ; preds = %61
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = lshr i32 %74, 8
  %76 = and i32 %75, %14
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %77
  %79 = ptrtoint %"class.WTF::AtomicString"* %78 to i64
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %78, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %99, label %83

83:                                               ; preds = %72
  %84 = xor i32 %75, -1
  %85 = lshr i32 %74, 31
  %86 = add nsw i32 %85, %84
  %87 = shl i32 %86, 12
  %88 = xor i32 %87, %86
  %89 = lshr i32 %88, 7
  %90 = xor i32 %89, %88
  %91 = shl i32 %90, 2
  %92 = xor i32 %91, %90
  %93 = lshr i32 %92, 20
  %94 = xor i32 %93, %92
  %95 = or i32 %94, 1
  %96 = zext i32 %95 to i64
  br label %105

97:                                               ; preds = %117
  %98 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  br label %99

99:                                               ; preds = %97, %72
  %100 = phi i64 [ %79, %72 ], [ %98, %97 ]
  %101 = phi %"class.WTF::AtomicString"* [ null, %72 ], [ %118, %97 ]
  %102 = icmp eq %"class.WTF::AtomicString"* %101, null
  %103 = ptrtoint %"class.WTF::AtomicString"* %101 to i64
  %104 = select i1 %102, i64 %100, i64 %103
  br label %128

105:                                              ; preds = %117, %83
  %106 = phi %"class.WTF::AtomicString"* [ null, %83 ], [ %118, %117 ]
  %107 = phi %"class.WTF::StringImpl"* [ %81, %83 ], [ %126, %117 ]
  %108 = phi i64 [ %79, %83 ], [ %124, %117 ]
  %109 = phi %"class.WTF::AtomicString"* [ %78, %83 ], [ %123, %117 ]
  %110 = phi i64 [ %77, %83 ], [ %122, %117 ]
  %111 = phi i64 [ 0, %83 ], [ %120, %117 ]
  %112 = bitcast %"class.WTF::AtomicString"* %109 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %117, label %115

115:                                              ; preds = %105
  %116 = icmp eq %"class.WTF::StringImpl"* %107, %70
  br i1 %116, label %128, label %117

117:                                              ; preds = %115, %105
  %118 = phi %"class.WTF::AtomicString"* [ %106, %115 ], [ %109, %105 ]
  %119 = icmp eq i64 %111, 0
  %120 = select i1 %119, i64 %96, i64 %111
  %121 = add i64 %120, %110
  %122 = and i64 %121, %15
  %123 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 %122
  %124 = ptrtoint %"class.WTF::AtomicString"* %123 to i64
  %125 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %97, label %105

128:                                              ; preds = %115, %99
  %129 = phi i64 [ %104, %99 ], [ %108, %115 ]
  %130 = inttoptr i64 %129 to %"class.WTF::AtomicString"*
  %131 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %131, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #11
  br label %147

147:                                              ; preds = %128, %143, %146
  %148 = bitcast %"class.WTF::AtomicString"* %68 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = inttoptr i64 %129 to i64*
  store i64 %149, i64* %150, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %69, align 8
  %151 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %9, align 8
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %151, i64 %67
  %153 = icmp eq %"class.WTF::AtomicString"* %152, %3
  %154 = select i1 %153, %"class.WTF::AtomicString"* %130, %"class.WTF::AtomicString"* %65
  %155 = load i32, i32* %6, align 8
  %156 = ptrtoint %"class.WTF::AtomicString"* %151 to i64
  br label %157

157:                                              ; preds = %61, %61, %147
  %158 = phi i64 [ %62, %61 ], [ %156, %147 ], [ %62, %61 ]
  %159 = phi i32 [ %63, %61 ], [ %155, %147 ], [ %63, %61 ]
  %160 = phi %"class.WTF::AtomicString"* [ %64, %61 ], [ %151, %147 ], [ %64, %61 ]
  %161 = phi %"class.WTF::AtomicString"* [ %65, %61 ], [ %154, %147 ], [ %65, %61 ]
  %162 = add i32 %66, 1
  %163 = icmp eq i32 %162, %159
  br i1 %163, label %18, label %61
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::AtomicString"*, i8 } @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.80"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.80", %"class.WTF::HashTable.80"* %0, i64 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  %6 = icmp eq %"class.WTF::AtomicString"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.80"* %0, %"class.WTF::AtomicString"* null)
  %9 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::AtomicString"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.80", %"class.WTF::HashTable.80"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = and i32 %20, %14
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %22
  %24 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %10
  %28 = xor i32 %20, -1
  %29 = lshr i32 %19, 31
  %30 = add nsw i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %27, %52
  %42 = phi %"class.WTF::StringImpl"* [ %25, %27 ], [ %60, %52 ]
  %43 = phi %"class.WTF::AtomicString"* [ %23, %27 ], [ %58, %52 ]
  %44 = phi %"class.WTF::AtomicString"* [ null, %27 ], [ %53, %52 ]
  %45 = phi i64 [ %22, %27 ], [ %57, %52 ]
  %46 = phi i64 [ 0, %27 ], [ %55, %52 ]
  %47 = bitcast %"class.WTF::AtomicString"* %43 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, inttoptr (i64 -1 to i8*)
  br i1 %49, label %52, label %50

50:                                               ; preds = %41
  %51 = icmp eq %"class.WTF::StringImpl"* %42, %17
  br i1 %51, label %125, label %52

52:                                               ; preds = %41, %50
  %53 = phi %"class.WTF::AtomicString"* [ %44, %50 ], [ %43, %41 ]
  %54 = icmp eq i64 %46, 0
  %55 = select i1 %54, i64 %40, i64 %46
  %56 = add i64 %55, %45
  %57 = and i64 %56, %15
  %58 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %11, i64 %57
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %62, label %41

62:                                               ; preds = %52
  %63 = icmp eq %"class.WTF::AtomicString"* %53, null
  br i1 %63, label %72, label %64

64:                                               ; preds = %62
  %65 = bitcast %"class.WTF::AtomicString"* %53 to i64*
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"class.WTF::HashTable.80", %"class.WTF::HashTable.80"* %0, i64 0, i32 3
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 2147483647
  %69 = and i32 %68, 2147483647
  %70 = and i32 %67, -2147483648
  %71 = or i32 %69, %70
  store i32 %71, i32* %66, align 8
  br label %72

72:                                               ; preds = %10, %62, %64
  %73 = phi %"class.WTF::AtomicString"* [ %53, %64 ], [ %58, %62 ], [ %23, %10 ]
  %74 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %94, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %94

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #11
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !4

91:                                               ; preds = %82
  tail call void @llvm.trap() #11
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %94

94:                                               ; preds = %92, %77, %72
  %95 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %96 = bitcast %"class.WTF::AtomicString"* %73 to i64*
  %97 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %73, i64 0, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  store i64 %95, i64* %96, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %94, %109, %112
  %114 = getelementptr inbounds %"class.WTF::HashTable.80", %"class.WTF::HashTable.80"* %0, i64 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = add i32 %115, 1
  store i32 %116, i32* %114, align 4
  %117 = getelementptr inbounds %"class.WTF::HashTable.80", %"class.WTF::HashTable.80"* %0, i64 0, i32 3
  %118 = load i32, i32* %117, align 8
  %119 = add i32 %118, %116
  %120 = shl i32 %119, 1
  %121 = load i32, i32* %12, align 8
  %122 = icmp ult i32 %120, %121
  br i1 %122, label %125, label %123

123:                                              ; preds = %113
  %124 = tail call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.80"* %0, %"class.WTF::AtomicString"* %73)
  br label %125

125:                                              ; preds = %50, %113, %123
  %126 = phi i8 [ 1, %113 ], [ 1, %123 ], [ 0, %50 ]
  %127 = phi %"class.WTF::AtomicString"* [ %73, %113 ], [ %124, %123 ], [ %43, %50 ]
  %128 = insertvalue { %"class.WTF::AtomicString"*, i8 } undef, %"class.WTF::AtomicString"* %127, 0
  %129 = insertvalue { %"class.WTF::AtomicString"*, i8 } %128, i8 %126, 1
  ret { %"class.WTF::AtomicString"*, i8 } %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.80"*, %"class.WTF::AtomicString"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.80", %"class.WTF::HashTable.80"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.80", %"class.WTF::HashTable.80"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12AtomicStringEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to %"class.WTF::AtomicString"*
  %37 = call %"class.WTF::AtomicString"* @_ZN3WTF9HashTableINS_12AtomicStringES1_NS_17IdentityExtractorENS_16AtomicStringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.80"* %0, %"class.WTF::AtomicString"* %36, i32 %32, %"class.WTF::AtomicString"* %1) #11
  ret %"class.WTF::AtomicString"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare i32 @_ZNK5blink10LayoutText18ResolvedTextLengthEv(%"class.blink::LayoutText"*) local_unnamed_addr #2

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal23PreviousAbsoluteSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink25LineBreakExistsAtPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink8IsInlineEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #2

declare void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE24ParentAnchoredEquivalentEv(%"class.blink::PositionTemplate"* sret, %"class.blink::PositionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN5blinkL28IsInlineHTMLElementWithStyleEPKNS_4NodeE(%"class.blink::Node"*) #0 {
  %2 = tail call zeroext i1 @_ZN5blink16IsEnclosingBlockEPKNS_4NodeE(%"class.blink::Node"* %0) #11
  %3 = icmp eq %"class.blink::Node"* %0, null
  %4 = or i1 %3, %2
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 48
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::Node"* %0 to %"class.blink::HTMLElement"*
  %12 = tail call zeroext i1 @_ZN5blink12EditingStyle35ElementIsStyledSpanOrHTMLEquivalentEPKNS_11HTMLElementE(%"class.blink::HTMLElement"* nonnull %11) #11
  br label %13

13:                                               ; preds = %5, %10, %1
  %14 = phi i1 [ false, %1 ], [ %12, %10 ], [ false, %5 ]
  ret i1 %14
}

declare zeroext i1 @_ZN5blink12EditingStyle35ElementIsStyledSpanOrHTMLEquivalentEPKNS_11HTMLElementE(%"class.blink::HTMLElement"*) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink18IsBlockFlowElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink29IsCharacterSmartReplaceExemptEib(i32, i1 zeroext) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink14ParkableString8ToStringEv(%"class.blink::ParkableString"*) local_unnamed_addr #2

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN5blink23BeforeTextInsertedEventC1ERKN3WTF6StringE(%"class.blink::BeforeTextInsertedEvent"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.1414"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1414", %"class.WTF::Vector.1414"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1414", %"class.WTF::Vector.1414"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1414"* %0, i32 %14) #11
  %15 = getelementptr inbounds %"class.WTF::Vector.1414", %"class.WTF::Vector.1414"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::Node"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #11
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1414"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1414", %"class.WTF::Vector.1414"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1414", %"class.WTF::Vector.1414"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1414"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !4

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1414"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1414"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1414"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1414", %"class.WTF::Vector.1414"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1414"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1414", %"class.WTF::Vector.1414"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1414", %"class.WTF::Vector.1414"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1414", %"class.WTF::Vector.1414"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1414"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.1414"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.1414"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1414", %"class.WTF::Vector.1414"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.13, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.15, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

declare void @_ZN5blink12EditingStyleC1EPKNS_19CSSPropertyValueSetE(%"class.blink::EditingStyle"*, %"class.blink::CSSPropertyValueSet"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_12EditingStyleEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_12EditingStyleEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12EditingStyleEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12EditingStyleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EditingStyle"*
  tail call void @_ZNK5blink12EditingStyle5TraceEPNS_7VisitorE(%"class.blink::EditingStyle"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_12EditingStyleEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink12EditingStyle5TraceEPNS_7VisitorE(%"class.blink::EditingStyle"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::QualifiedName"* @_ZN3WTF6VectorIN5blink13QualifiedNameELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1468"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1468", %"class.WTF::Vector.1468"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.1468", %"class.WTF::Vector.1468"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 %25
  ret %"class.blink::QualifiedName"* %26
}

declare zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE11IsConnectedEv(%"class.blink::PositionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink12EditingStyleC1ERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS0_19PropertiesToIncludeE(%"class.blink::EditingStyle"*, %"class.blink::PositionTemplate"* dereferenceable(16), i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLBRElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLBRElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !4

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #11
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLBRElement"*
  tail call void @_ZN5blink13HTMLBRElementC1ERNS_8DocumentE(%"class.blink::HTMLBRElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #11
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLBRElement"* %51
}

declare void @_ZN5blink13HTMLBRElementC1ERNS_8DocumentE(%"class.blink::HTMLBRElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

declare void @_ZN5blink22BreakBlockquoteCommandC1ERNS_8DocumentE(%"class.blink::BreakBlockquoteCommand"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11EditCommandEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11EditCommandEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11EditCommandEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11EditCommandEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11EditCommandEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11EditCommandEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::EditCommand"*
  %4 = bitcast i8* %1 to void (%"class.blink::EditCommand"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::EditCommand"*, %"class.blink::Visitor"*)**, void (%"class.blink::EditCommand"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::EditCommand"*, %"class.blink::Visitor"*)*, void (%"class.blink::EditCommand"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::EditCommand"*, %"class.blink::Visitor"*)*, void (%"class.blink::EditCommand"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::EditCommand"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11EditCommandEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::EditCommand"*
  %3 = bitcast i8* %0 to void (%"class.blink::EditCommand"*)***
  %4 = load void (%"class.blink::EditCommand"*)**, void (%"class.blink::EditCommand"*)*** %3, align 8
  %5 = load void (%"class.blink::EditCommand"*)*, void (%"class.blink::EditCommand"*)** %4, align 8
  tail call void %5(%"class.blink::EditCommand"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11EditCommandEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink21SimplifyMarkupCommandC1ERNS_8DocumentEPNS_4NodeES4_(%"class.blink::SimplifyMarkupCommand"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::Node"*, %"class.blink::Node"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HTMLLIElement"* @_ZN5blink25MakeGarbageCollectedTraitINS_13HTMLLIElementEE4CallIJRNS_8DocumentEEEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %3 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %7 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %6, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %3, %1 ], [ %7, %5 ]
  %10 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %2, i64 0, i32 19, i64 6
  %11 = bitcast %"class.blink::BaseArena"** %10 to %"class.blink::NormalPageArena"**
  %12 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 112
  br i1 %15, label %46, label %16, !prof !4

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %12, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 112
  store i8* %19, i8** %17, align 8
  %20 = add i64 %14, -112
  store i64 %20, i64* %13, align 8
  %21 = bitcast i8* %18 to i32*
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to i16*
  %24 = trunc i32 %9 to i16
  %25 = shl i16 %24, 2
  store atomic i16 %25, i16* %23 monotonic, align 2
  %26 = getelementptr inbounds i8, i8* %18, i64 6
  %27 = bitcast i8* %26 to i16*
  store i16 56, i16* %27, align 2
  %28 = ptrtoint i8* %18 to i64
  %29 = and i64 %28, -131072
  %30 = inttoptr i64 %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 4400
  %32 = bitcast i8* %31 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %33 = bitcast i8* %31 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = sub i64 %28, %34
  %36 = lshr i64 %35, 3
  %37 = lshr i64 %35, 6
  %38 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %32, i64 0, i32 0, i32 1, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = trunc i64 %36 to i32
  %41 = and i32 %40, 7
  %42 = shl i32 1, %41
  %43 = trunc i32 %42 to i8
  %44 = or i8 %39, %43
  store atomic i8 %44, i8* %38 release, align 1
  %45 = getelementptr inbounds i8, i8* %18, i64 8
  br label %49

46:                                               ; preds = %8
  %47 = zext i32 %9 to i64
  %48 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %12, i64 112, i64 %47) #11
  br label %49

49:                                               ; preds = %16, %46
  %50 = phi i8* [ %45, %16 ], [ %48, %46 ]
  %51 = bitcast i8* %50 to %"class.blink::HTMLLIElement"*
  tail call void @_ZN5blink13HTMLLIElementC1ERNS_8DocumentE(%"class.blink::HTMLLIElement"* %51, %"class.blink::Document"* dereferenceable(2848) %0) #11
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  ret %"class.blink::HTMLLIElement"* %51
}

declare void @_ZN5blink13HTMLLIElementC1ERNS_8DocumentE(%"class.blink::HTMLLIElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #2

declare void @_ZN5blink5RangeC1ERNS_8DocumentERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEES9_(%"class.blink::Range"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::PositionTemplate"* dereferenceable(16), %"class.blink::PositionTemplate"* dereferenceable(16)) unnamed_addr #2

declare void @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE5TraceEPNS_7VisitorE(%"class.blink::PositionTemplate"*, %"class.blink::Visitor"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16DocumentFragmentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContainerNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::ContainerNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ContainerNode"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 1048575}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink23ReplaceSelectionCommand32PositionAtStartOfInsertedContentEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink23ReplaceSelectionCommand32PositionAtStartOfInsertedContentEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink23ReplaceSelectionCommand32PositionAtStartOfInsertedContentEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink23ReplaceSelectionCommand32PositionAtStartOfInsertedContentEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE22ToPositionWithAffinityEv: argument 0"}
!14 = distinct !{!14, !"_ZNK5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE22ToPositionWithAffinityEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN5blinkL30PositionAvoidingPrecedingNodesENS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE: argument 0"}
!17 = distinct !{!17, !"_ZN5blinkL30PositionAvoidingPrecedingNodesENS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5blink23ReplaceSelectionCommand32PositionAtStartOfInsertedContentEv: argument 0"}
!20 = distinct !{!20, !"_ZNK5blink23ReplaceSelectionCommand32PositionAtStartOfInsertedContentEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE22ToPositionWithAffinityEv: argument 0"}
!23 = distinct !{!23, !"_ZNK5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE22ToPositionWithAffinityEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE22ToPositionWithAffinityEv: argument 0"}
!26 = distinct !{!26, !"_ZNK5blink23VisiblePositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE22ToPositionWithAffinityEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK5blink23ReplaceSelectionCommand32PositionAtStartOfInsertedContentEv: argument 0"}
!29 = distinct !{!29, !"_ZNK5blink23ReplaceSelectionCommand32PositionAtStartOfInsertedContentEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK5blink23ReplaceSelectionCommand32PositionAtStartOfInsertedContentEv: argument 0"}
!32 = distinct !{!32, !"_ZNK5blink23ReplaceSelectionCommand32PositionAtStartOfInsertedContentEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNK5blink23ReplaceSelectionCommand32PositionAtStartOfInsertedContentEv: argument 0"}
!35 = distinct !{!35, !"_ZNK5blink23ReplaceSelectionCommand32PositionAtStartOfInsertedContentEv"}
!36 = !{!37, !39}
!37 = distinct !{!37, !38, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv: argument 0"}
!38 = distinct !{!38, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv"}
!39 = distinct !{!39, !40, !"_ZNK5blink5Range13StartPositionEv: argument 0"}
!40 = distinct !{!40, !"_ZNK5blink5Range13StartPositionEv"}
!41 = !{!42, !44}
!42 = distinct !{!42, !43, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv: argument 0"}
!43 = distinct !{!43, !"_ZNK5blink18RangeBoundaryPoint10ToPositionEv"}
!44 = distinct !{!44, !45, !"_ZNK5blink5Range11EndPositionEv: argument 0"}
!45 = distinct !{!45, !"_ZNK5blink5Range11EndPositionEv"}
