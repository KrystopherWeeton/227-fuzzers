; ModuleID = '../../third_party/pdfium/fxbarcode/qrcode/BC_QRCoderMatrixUtil.cpp'
source_filename = "../../third_party/pdfium/fxbarcode/qrcode/BC_QRCoderMatrixUtil.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CBC_QRCoderBitVector = type { i64, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%class.CBC_QRCoderErrorCorrectionLevel = type { i32, i32 }
%class.CBC_CommonByteMatrix = type { i32, i32, %"class.std::__1::vector" }

@_ZN12_GLOBAL__N_126POSITION_DETECTION_PATTERNE = internal unnamed_addr constant [7 x [7 x i8]] [[7 x i8] c"\01\01\01\01\01\01\01", [7 x i8] c"\01\00\00\00\00\00\01", [7 x i8] c"\01\00\01\01\01\00\01", [7 x i8] c"\01\00\01\01\01\00\01", [7 x i8] c"\01\00\01\01\01\00\01", [7 x i8] c"\01\00\00\00\00\00\01", [7 x i8] c"\01\01\01\01\01\01\01"], align 16
@_ZN12_GLOBAL__N_137kPositionAdjustmentPatternCoordinatesE = internal unnamed_addr constant [39 x [7 x i8]] [[7 x i8] c"\06\12\00\00\00\00\00", [7 x i8] c"\06\16\00\00\00\00\00", [7 x i8] c"\06\1A\00\00\00\00\00", [7 x i8] c"\06\1E\00\00\00\00\00", [7 x i8] c"\06\22\00\00\00\00\00", [7 x i8] c"\06\16&\00\00\00\00", [7 x i8] c"\06\18*\00\00\00\00", [7 x i8] c"\06\1A.\00\00\00\00", [7 x i8] c"\06\1C2\00\00\00\00", [7 x i8] c"\06\1E6\00\00\00\00", [7 x i8] c"\06 :\00\00\00\00", [7 x i8] c"\06\22>\00\00\00\00", [7 x i8] c"\06\1A.B\00\00\00", [7 x i8] c"\06\1A0F\00\00\00", [7 x i8] c"\06\1A2J\00\00\00", [7 x i8] c"\06\1E6N\00\00\00", [7 x i8] c"\06\1E8R\00\00\00", [7 x i8] c"\06\1E:V\00\00\00", [7 x i8] c"\06\22>Z\00\00\00", [7 x i8] c"\06\1C2H^\00\00", [7 x i8] c"\06\1A2Jb\00\00", [7 x i8] c"\06\1E6Nf\00\00", [7 x i8] c"\06\1C6Pj\00\00", [7 x i8] c"\06 :Tn\00\00", [7 x i8] c"\06\1E:Vr\00\00", [7 x i8] c"\06\22>Zv\00\00", [7 x i8] c"\06\1A2Jbz\00", [7 x i8] c"\06\1E6Nf~\00", [7 x i8] c"\06\1A4Nh\82\00", [7 x i8] c"\06\1E8Rl\86\00", [7 x i8] c"\06\22<Vp\8A\00", [7 x i8] c"\06\1E:Vr\8E\00", [7 x i8] c"\06\22>Zv\92\00", [7 x i8] c"\06\1E6Nf~\96", [7 x i8] c"\06\182Lf\80\9A", [7 x i8] c"\06\1C6Pj\84\9E", [7 x i8] c"\06 :Tn\88\A2", [7 x i8] c"\06\1A6Rn\8A\A6", [7 x i8] c"\06\1E:Vr\8E\AA"], align 16
@_ZN12_GLOBAL__N_127POSITION_ADJUSTMENT_PATTERNE = internal unnamed_addr constant [5 x [5 x i8]] [[5 x i8] c"\01\01\01\01\01", [5 x i8] c"\01\00\00\00\01", [5 x i8] c"\01\00\01\00\01", [5 x i8] c"\01\00\00\00\01", [5 x i8] c"\01\01\01\01\01"], align 16
@_ZN12_GLOBAL__N_121TYPE_INFO_COORDINATESE = internal unnamed_addr constant [15 x [2 x i8]] [[2 x i8] c"\08\00", [2 x i8] c"\08\01", [2 x i8] c"\08\02", [2 x i8] c"\08\03", [2 x i8] c"\08\04", [2 x i8] c"\08\05", [2 x i8] c"\08\07", [2 x i8] c"\08\08", [2 x i8] c"\07\08", [2 x i8] c"\05\08", [2 x i8] c"\04\08", [2 x i8] c"\03\08", [2 x i8] c"\02\08", [2 x i8] c"\01\08", [2 x i8] c"\00\08"], align 16

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN21CBC_QRCoderMatrixUtil11BuildMatrixEP20CBC_QRCoderBitVectorPK31CBC_QRCoderErrorCorrectionLeveliiP20CBC_CommonByteMatrix(%class.CBC_QRCoderBitVector*, %class.CBC_QRCoderErrorCorrectionLevel* nocapture readonly, i32, i32, %class.CBC_CommonByteMatrix*) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.CBC_QRCoderBitVector, align 8
  %7 = alloca %class.CBC_QRCoderBitVector, align 8
  %8 = alloca %class.CBC_QRCoderBitVector, align 8
  %9 = icmp ne %class.CBC_QRCoderBitVector* %0, null
  %10 = icmp ne %class.CBC_CommonByteMatrix* %4, null
  %11 = and i1 %9, %10
  br i1 %11, label %12, label %334

12:                                               ; preds = %5
  tail call void @_ZN20CBC_CommonByteMatrix5clearEh(%class.CBC_CommonByteMatrix* nonnull %4, i8 zeroext -1) #4
  %13 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_129EmbedPositionDetectionPatternEiiP20CBC_CommonByteMatrix(i32 0, i32 0, %class.CBC_CommonByteMatrix* nonnull %4) #4
  br i1 %13, label %14, label %334

14:                                               ; preds = %12
  %15 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %4, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, -7
  %18 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_129EmbedPositionDetectionPatternEiiP20CBC_CommonByteMatrix(i32 %17, i32 0, %class.CBC_CommonByteMatrix* nonnull %4) #4
  br i1 %18, label %19, label %334

19:                                               ; preds = %14
  %20 = load i32, i32* %15, align 8
  %21 = add nsw i32 %20, -7
  %22 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_129EmbedPositionDetectionPatternEiiP20CBC_CommonByteMatrix(i32 0, i32 %21, %class.CBC_CommonByteMatrix* nonnull %4) #4
  br i1 %22, label %23, label %334

23:                                               ; preds = %19
  %24 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_132EmbedHorizontalSeparationPatternEiiP20CBC_CommonByteMatrix(i32 0, i32 7, %class.CBC_CommonByteMatrix* nonnull %4) #4
  br i1 %24, label %25, label %334

25:                                               ; preds = %23
  %26 = load i32, i32* %15, align 8
  %27 = add nsw i32 %26, -8
  %28 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_132EmbedHorizontalSeparationPatternEiiP20CBC_CommonByteMatrix(i32 %27, i32 7, %class.CBC_CommonByteMatrix* nonnull %4) #4
  br i1 %28, label %29, label %334

29:                                               ; preds = %25
  %30 = load i32, i32* %15, align 8
  %31 = add nsw i32 %30, -8
  %32 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_132EmbedHorizontalSeparationPatternEiiP20CBC_CommonByteMatrix(i32 0, i32 %31, %class.CBC_CommonByteMatrix* nonnull %4) #4
  br i1 %32, label %33, label %334

33:                                               ; preds = %29
  %34 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_130EmbedVerticalSeparationPatternEiiP20CBC_CommonByteMatrix(i32 7, i32 0, %class.CBC_CommonByteMatrix* nonnull %4) #4
  br i1 %34, label %35, label %334

35:                                               ; preds = %33
  %36 = getelementptr inbounds %class.CBC_CommonByteMatrix, %class.CBC_CommonByteMatrix* %4, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = add nsw i32 %37, -8
  %39 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_130EmbedVerticalSeparationPatternEiiP20CBC_CommonByteMatrix(i32 %38, i32 0, %class.CBC_CommonByteMatrix* nonnull %4) #4
  br i1 %39, label %40, label %334

40:                                               ; preds = %35
  %41 = load i32, i32* %36, align 4
  %42 = add nsw i32 %41, -7
  %43 = tail call fastcc zeroext i1 @_ZN12_GLOBAL__N_130EmbedVerticalSeparationPatternEiiP20CBC_CommonByteMatrix(i32 7, i32 %42, %class.CBC_CommonByteMatrix* nonnull %4) #4
  br i1 %43, label %44, label %334

44:                                               ; preds = %40
  %45 = load i32, i32* %36, align 4
  %46 = add nsw i32 %45, -8
  %47 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* nonnull %4, i32 8, i32 %46) #4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %334, label %49

49:                                               ; preds = %44
  %50 = load i32, i32* %36, align 4
  %51 = add nsw i32 %50, -8
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* nonnull %4, i32 8, i32 %51, i32 1) #4
  %52 = icmp slt i32 %2, 2
  br i1 %52, label %116, label %53

53:                                               ; preds = %49
  %54 = add nsw i32 %2, -2
  %55 = sext i32 %54 to i64
  %56 = icmp ult i32 %54, 39
  br i1 %56, label %57, label %334

57:                                               ; preds = %53, %113
  %58 = phi i64 [ %114, %113 ], [ 0, %53 ]
  %59 = getelementptr inbounds [39 x [7 x i8]], [39 x [7 x i8]]* @_ZN12_GLOBAL__N_137kPositionAdjustmentPatternCoordinatesE, i64 0, i64 %55, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = icmp eq i8 %60, 0
  br i1 %62, label %116, label %63

63:                                               ; preds = %57
  %64 = add nsw i32 %61, -2
  br label %65

65:                                               ; preds = %110, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %110 ]
  %67 = getelementptr inbounds [39 x [7 x i8]], [39 x [7 x i8]]* @_ZN12_GLOBAL__N_137kPositionAdjustmentPatternCoordinatesE, i64 0, i64 %55, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = icmp eq i8 %68, 0
  br i1 %70, label %113, label %71

71:                                               ; preds = %65
  %72 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %4, i32 %69, i32 %61) #4
  %73 = icmp eq i8 %72, -1
  br i1 %73, label %74, label %110

74:                                               ; preds = %71
  %75 = add nsw i32 %69, -2
  %76 = add nsw i32 %69, -1
  %77 = add nuw nsw i32 %69, 1
  %78 = add nuw nsw i32 %69, 2
  br label %79

79:                                               ; preds = %105, %74
  %80 = phi i64 [ 0, %74 ], [ %108, %105 ]
  %81 = trunc i64 %80 to i32
  %82 = add nsw i32 %64, %81
  %83 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %4, i32 %75, i32 %82) #4
  %84 = icmp eq i8 %83, -1
  br i1 %84, label %85, label %334

85:                                               ; preds = %79
  %86 = getelementptr inbounds [5 x [5 x i8]], [5 x [5 x i8]]* @_ZN12_GLOBAL__N_127POSITION_ADJUSTMENT_PATTERNE, i64 0, i64 %80, i64 0
  %87 = load i8, i8* %86, align 1
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiih(%class.CBC_CommonByteMatrix* %4, i32 %75, i32 %82, i8 zeroext %87) #4
  %88 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %4, i32 %76, i32 %82) #4
  %89 = icmp eq i8 %88, -1
  br i1 %89, label %90, label %334

90:                                               ; preds = %85
  %91 = getelementptr inbounds [5 x [5 x i8]], [5 x [5 x i8]]* @_ZN12_GLOBAL__N_127POSITION_ADJUSTMENT_PATTERNE, i64 0, i64 %80, i64 1
  %92 = load i8, i8* %91, align 1
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiih(%class.CBC_CommonByteMatrix* %4, i32 %76, i32 %82, i8 zeroext %92) #4
  %93 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %4, i32 %69, i32 %82) #4
  %94 = icmp eq i8 %93, -1
  br i1 %94, label %95, label %334

95:                                               ; preds = %90
  %96 = getelementptr inbounds [5 x [5 x i8]], [5 x [5 x i8]]* @_ZN12_GLOBAL__N_127POSITION_ADJUSTMENT_PATTERNE, i64 0, i64 %80, i64 2
  %97 = load i8, i8* %96, align 1
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiih(%class.CBC_CommonByteMatrix* %4, i32 %69, i32 %82, i8 zeroext %97) #4
  %98 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %4, i32 %77, i32 %82) #4
  %99 = icmp eq i8 %98, -1
  br i1 %99, label %100, label %334

100:                                              ; preds = %95
  %101 = getelementptr inbounds [5 x [5 x i8]], [5 x [5 x i8]]* @_ZN12_GLOBAL__N_127POSITION_ADJUSTMENT_PATTERNE, i64 0, i64 %80, i64 3
  %102 = load i8, i8* %101, align 1
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiih(%class.CBC_CommonByteMatrix* %4, i32 %77, i32 %82, i8 zeroext %102) #4
  %103 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %4, i32 %78, i32 %82) #4
  %104 = icmp eq i8 %103, -1
  br i1 %104, label %105, label %334

105:                                              ; preds = %100
  %106 = getelementptr inbounds [5 x [5 x i8]], [5 x [5 x i8]]* @_ZN12_GLOBAL__N_127POSITION_ADJUSTMENT_PATTERNE, i64 0, i64 %80, i64 4
  %107 = load i8, i8* %106, align 1
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiih(%class.CBC_CommonByteMatrix* %4, i32 %78, i32 %82, i8 zeroext %107) #4
  %108 = add nuw nsw i64 %80, 1
  %109 = icmp eq i64 %108, 5
  br i1 %109, label %110, label %79

110:                                              ; preds = %105, %71
  %111 = add nuw nsw i64 %66, 1
  %112 = icmp eq i64 %111, 7
  br i1 %112, label %113, label %65

113:                                              ; preds = %110, %65
  %114 = add nuw nsw i64 %58, 1
  %115 = icmp eq i64 %114, 7
  br i1 %115, label %116, label %57

116:                                              ; preds = %113, %57, %49
  %117 = load i32, i32* %15, align 8
  %118 = icmp sgt i32 %117, 16
  br i1 %118, label %119, label %138

119:                                              ; preds = %116, %134
  %120 = phi i32 [ %121, %134 ], [ 8, %116 ]
  %121 = add nuw nsw i32 %120, 1
  %122 = and i32 %121, 1
  %123 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %4, i32 %120, i32 6) #4
  switch i8 %123, label %334 [
    i8 -1, label %124
    i8 0, label %124
    i8 1, label %124
  ]

124:                                              ; preds = %119, %119, %119
  %125 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %4, i32 %120, i32 6) #4
  %126 = icmp eq i8 %125, -1
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %4, i32 %120, i32 6, i32 %122) #4
  br label %128

128:                                              ; preds = %127, %124
  %129 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %4, i32 6, i32 %120) #4
  switch i8 %129, label %334 [
    i8 -1, label %130
    i8 0, label %130
    i8 1, label %130
  ]

130:                                              ; preds = %128, %128, %128
  %131 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %4, i32 6, i32 %120) #4
  %132 = icmp eq i8 %131, -1
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %4, i32 6, i32 %120, i32 %122) #4
  br label %134

134:                                              ; preds = %133, %130
  %135 = load i32, i32* %15, align 8
  %136 = add nsw i32 %135, -8
  %137 = icmp slt i32 %121, %136
  br i1 %137, label %119, label %138

138:                                              ; preds = %134, %116
  %139 = bitcast %class.CBC_QRCoderBitVector* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %139) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %139, i8 -86, i64 32, i1 false) #4
  call void @_ZN20CBC_QRCoderBitVectorC1Ev(%class.CBC_QRCoderBitVector* nonnull %8) #4
  %140 = call zeroext i1 @_ZN11CBC_QRCoder18IsValidMaskPatternEi(i32 %3) #4
  br i1 %140, label %141, label %205

141:                                              ; preds = %138
  %142 = getelementptr inbounds %class.CBC_QRCoderErrorCorrectionLevel, %class.CBC_QRCoderErrorCorrectionLevel* %1, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = shl i32 %143, 3
  %145 = or i32 %144, %3
  call void @_ZN20CBC_QRCoderBitVector10AppendBitsEii(%class.CBC_QRCoderBitVector* nonnull %8, i32 %145, i32 5) #4
  %146 = shl i32 %145, 10
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %169, label %148

148:                                              ; preds = %141, %164
  %149 = phi i32 [ %167, %164 ], [ %146, %141 ]
  br label %150

150:                                              ; preds = %150, %148
  %151 = phi i32 [ %154, %150 ], [ 0, %148 ]
  %152 = phi i32 [ %153, %150 ], [ %149, %148 ]
  %153 = ashr i32 %152, 1
  %154 = add nuw nsw i32 %151, 1
  %155 = icmp eq i32 %153, 0
  br i1 %155, label %156, label %150

156:                                              ; preds = %150
  %157 = icmp ult i32 %151, 10
  br i1 %157, label %169, label %158

158:                                              ; preds = %156, %158
  %159 = phi i32 [ %162, %158 ], [ 0, %156 ]
  %160 = phi i32 [ %161, %158 ], [ %149, %156 ]
  %161 = ashr i32 %160, 1
  %162 = add nuw nsw i32 %159, 1
  %163 = icmp eq i32 %161, 0
  br i1 %163, label %164, label %158

164:                                              ; preds = %158
  %165 = add nsw i32 %159, -10
  %166 = shl i32 1335, %165
  %167 = xor i32 %166, %149
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %148

169:                                              ; preds = %164, %156, %141
  %170 = phi i32 [ 0, %141 ], [ 0, %164 ], [ %149, %156 ]
  call void @_ZN20CBC_QRCoderBitVector10AppendBitsEii(%class.CBC_QRCoderBitVector* nonnull %8, i32 %170, i32 10) #4
  %171 = bitcast %class.CBC_QRCoderBitVector* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %171) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 -86, i64 32, i1 false) #4
  call void @_ZN20CBC_QRCoderBitVectorC1Ev(%class.CBC_QRCoderBitVector* nonnull %7) #4
  call void @_ZN20CBC_QRCoderBitVector10AppendBitsEii(%class.CBC_QRCoderBitVector* nonnull %7, i32 21522, i32 15) #4
  %172 = call zeroext i1 @_ZN20CBC_QRCoderBitVector3XOREPKS_(%class.CBC_QRCoderBitVector* nonnull %8, %class.CBC_QRCoderBitVector* nonnull %7) #4
  call void @_ZN20CBC_QRCoderBitVectorD1Ev(%class.CBC_QRCoderBitVector* nonnull %7) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %171) #4
  br i1 %172, label %173, label %205

173:                                              ; preds = %169
  %174 = call i64 @_ZNK20CBC_QRCoderBitVector4SizeEv(%class.CBC_QRCoderBitVector* nonnull %8) #4
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %206, label %176

176:                                              ; preds = %173, %199
  %177 = phi i64 [ %202, %199 ], [ 0, %173 ]
  %178 = call i64 @_ZNK20CBC_QRCoderBitVector4SizeEv(%class.CBC_QRCoderBitVector* nonnull %8) #4
  %179 = xor i64 %177, -1
  %180 = add i64 %178, %179
  %181 = call i32 @_ZNK20CBC_QRCoderBitVector2AtEm(%class.CBC_QRCoderBitVector* nonnull %8, i64 %180) #4
  %182 = getelementptr inbounds [15 x [2 x i8]], [15 x [2 x i8]]* @_ZN12_GLOBAL__N_121TYPE_INFO_COORDINATESE, i64 0, i64 %177, i64 0
  %183 = load i8, i8* %182, align 2
  %184 = zext i8 %183 to i32
  %185 = getelementptr inbounds [15 x [2 x i8]], [15 x [2 x i8]]* @_ZN12_GLOBAL__N_121TYPE_INFO_COORDINATESE, i64 0, i64 %177, i64 1
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %4, i32 %184, i32 %187, i32 %181) #4
  %188 = icmp ult i64 %177, 8
  br i1 %188, label %189, label %194

189:                                              ; preds = %176
  %190 = load i32, i32* %15, align 8
  %191 = trunc i64 %177 to i32
  %192 = xor i32 %191, -1
  %193 = add i32 %190, %192
  br label %199

194:                                              ; preds = %176
  %195 = load i32, i32* %36, align 4
  %196 = trunc i64 %177 to i32
  %197 = add i32 %196, -15
  %198 = add i32 %197, %195
  br label %199

199:                                              ; preds = %194, %189
  %200 = phi i32 [ %198, %194 ], [ 8, %189 ]
  %201 = phi i32 [ 8, %194 ], [ %193, %189 ]
  call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %4, i32 %201, i32 %200, i32 %181) #4
  %202 = add nuw i64 %177, 1
  %203 = call i64 @_ZNK20CBC_QRCoderBitVector4SizeEv(%class.CBC_QRCoderBitVector* nonnull %8) #4
  %204 = icmp ult i64 %202, %203
  br i1 %204, label %176, label %206

205:                                              ; preds = %138, %169
  call void @_ZN20CBC_QRCoderBitVectorD1Ev(%class.CBC_QRCoderBitVector* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %139) #4
  br label %334

206:                                              ; preds = %199, %173
  call void @_ZN20CBC_QRCoderBitVectorD1Ev(%class.CBC_QRCoderBitVector* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %139) #4
  %207 = icmp slt i32 %2, 7
  br i1 %207, label %259, label %208

208:                                              ; preds = %206
  %209 = bitcast %class.CBC_QRCoderBitVector* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %209) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %209, i8 -86, i64 32, i1 false) #4
  call void @_ZN20CBC_QRCoderBitVectorC1Ev(%class.CBC_QRCoderBitVector* nonnull %6) #4
  call void @_ZN20CBC_QRCoderBitVector10AppendBitsEii(%class.CBC_QRCoderBitVector* nonnull %6, i32 %2, i32 6) #4
  %210 = shl i32 %2, 12
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %233, label %212

212:                                              ; preds = %208, %228
  %213 = phi i32 [ %231, %228 ], [ %210, %208 ]
  br label %214

214:                                              ; preds = %214, %212
  %215 = phi i32 [ %218, %214 ], [ 0, %212 ]
  %216 = phi i32 [ %217, %214 ], [ %213, %212 ]
  %217 = ashr i32 %216, 1
  %218 = add nuw nsw i32 %215, 1
  %219 = icmp eq i32 %217, 0
  br i1 %219, label %220, label %214

220:                                              ; preds = %214
  %221 = icmp ult i32 %215, 12
  br i1 %221, label %233, label %222

222:                                              ; preds = %220, %222
  %223 = phi i32 [ %226, %222 ], [ 0, %220 ]
  %224 = phi i32 [ %225, %222 ], [ %213, %220 ]
  %225 = ashr i32 %224, 1
  %226 = add nuw nsw i32 %223, 1
  %227 = icmp eq i32 %225, 0
  br i1 %227, label %228, label %222

228:                                              ; preds = %222
  %229 = add nsw i32 %223, -12
  %230 = shl i32 7973, %229
  %231 = xor i32 %230, %213
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %212

233:                                              ; preds = %228, %220, %208
  %234 = phi i32 [ 0, %208 ], [ 0, %228 ], [ %213, %220 ]
  call void @_ZN20CBC_QRCoderBitVector10AppendBitsEii(%class.CBC_QRCoderBitVector* nonnull %6, i32 %234, i32 12) #4
  br label %235

235:                                              ; preds = %235, %233
  %236 = phi i64 [ 17, %233 ], [ %256, %235 ]
  %237 = phi i32 [ 0, %233 ], [ %255, %235 ]
  %238 = call i32 @_ZNK20CBC_QRCoderBitVector2AtEm(%class.CBC_QRCoderBitVector* nonnull %6, i64 %236) #4
  %239 = add nsw i64 %236, -1
  %240 = load i32, i32* %36, align 4
  %241 = add i32 %240, -11
  call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %4, i32 %237, i32 %241, i32 %238) #4
  %242 = load i32, i32* %36, align 4
  %243 = add i32 %242, -11
  call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %4, i32 %243, i32 %237, i32 %238) #4
  %244 = call i32 @_ZNK20CBC_QRCoderBitVector2AtEm(%class.CBC_QRCoderBitVector* nonnull %6, i64 %239) #4
  %245 = add nsw i64 %236, -2
  %246 = load i32, i32* %36, align 4
  %247 = add i32 %246, -10
  call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %4, i32 %237, i32 %247, i32 %244) #4
  %248 = load i32, i32* %36, align 4
  %249 = add i32 %248, -10
  call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %4, i32 %249, i32 %237, i32 %244) #4
  %250 = call i32 @_ZNK20CBC_QRCoderBitVector2AtEm(%class.CBC_QRCoderBitVector* nonnull %6, i64 %245) #4
  %251 = load i32, i32* %36, align 4
  %252 = add i32 %251, -9
  call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %4, i32 %237, i32 %252, i32 %250) #4
  %253 = load i32, i32* %36, align 4
  %254 = add i32 %253, -9
  call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %4, i32 %254, i32 %237, i32 %250) #4
  %255 = add nuw nsw i32 %237, 1
  %256 = add nsw i64 %236, -3
  %257 = icmp eq i32 %255, 6
  br i1 %257, label %258, label %235

258:                                              ; preds = %235
  call void @_ZN20CBC_QRCoderBitVectorD1Ev(%class.CBC_QRCoderBitVector* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %209) #4
  br label %259

259:                                              ; preds = %206, %258
  %260 = load i32, i32* %15, align 8
  %261 = add nsw i32 %260, -1
  %262 = icmp sgt i32 %261, 0
  br i1 %262, label %263, label %330

263:                                              ; preds = %259
  %264 = load i32, i32* %36, align 4
  %265 = add nsw i32 %264, -1
  br label %266

266:                                              ; preds = %307, %263
  %267 = phi i32 [ %311, %307 ], [ %265, %263 ]
  %268 = phi i32 [ %312, %307 ], [ %261, %263 ]
  %269 = phi i32 [ %310, %307 ], [ -1, %263 ]
  %270 = phi i64 [ %308, %307 ], [ 0, %263 ]
  %271 = icmp eq i32 %268, 6
  %272 = select i1 %271, i32 5, i32 %268
  %273 = icmp sgt i32 %267, -1
  br i1 %273, label %274, label %307

274:                                              ; preds = %266
  %275 = add nsw i32 %269, 6
  %276 = icmp sgt i32 %275, -1
  %277 = add nsw i32 %272, -1
  br label %278

278:                                              ; preds = %326, %274
  %279 = phi i32 [ %267, %274 ], [ %328, %326 ]
  %280 = phi i64 [ %270, %274 ], [ %327, %326 ]
  %281 = load i32, i32* %36, align 4
  br label %282

282:                                              ; preds = %290, %278
  %283 = phi i32 [ %279, %278 ], [ %275, %290 ]
  %284 = icmp slt i32 %283, %281
  br i1 %284, label %285, label %307

285:                                              ; preds = %282
  %286 = icmp eq i32 %283, 6
  br i1 %286, label %290, label %287

287:                                              ; preds = %285
  %288 = call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %4, i32 %272, i32 %283) #4
  %289 = icmp eq i8 %288, -1
  br i1 %289, label %291, label %303

290:                                              ; preds = %285
  br i1 %276, label %282, label %307

291:                                              ; preds = %287
  %292 = call i64 @_ZNK20CBC_QRCoderBitVector4SizeEv(%class.CBC_QRCoderBitVector* nonnull %0) #4
  %293 = icmp ult i64 %280, %292
  br i1 %293, label %294, label %297

294:                                              ; preds = %291
  %295 = call i32 @_ZNK20CBC_QRCoderBitVector2AtEm(%class.CBC_QRCoderBitVector* nonnull %0, i64 %280) #4
  %296 = add nuw i64 %280, 1
  br label %297

297:                                              ; preds = %294, %291
  %298 = phi i64 [ %296, %294 ], [ %280, %291 ]
  %299 = phi i32 [ %295, %294 ], [ 0, %291 ]
  %300 = call zeroext i1 @_ZN19CBC_QRCoderMaskUtil14GetDataMaskBitEiii(i32 %3, i32 %272, i32 %283) #4
  %301 = zext i1 %300 to i32
  %302 = xor i32 %299, %301
  call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %4, i32 %272, i32 %283, i32 %302) #4
  br label %303

303:                                              ; preds = %297, %287
  %304 = phi i64 [ %298, %297 ], [ %280, %287 ]
  %305 = call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %4, i32 %277, i32 %283) #4
  %306 = icmp eq i8 %305, -1
  br i1 %306, label %314, label %326

307:                                              ; preds = %326, %290, %282, %266
  %308 = phi i64 [ %270, %266 ], [ %280, %282 ], [ %280, %290 ], [ %327, %326 ]
  %309 = phi i32 [ %267, %266 ], [ %275, %290 ], [ %283, %282 ], [ %328, %326 ]
  %310 = sub nsw i32 0, %269
  %311 = sub i32 %309, %269
  %312 = add nsw i32 %272, -2
  %313 = icmp sgt i32 %312, 0
  br i1 %313, label %266, label %330

314:                                              ; preds = %303
  %315 = call i64 @_ZNK20CBC_QRCoderBitVector4SizeEv(%class.CBC_QRCoderBitVector* nonnull %0) #4
  %316 = icmp ult i64 %304, %315
  br i1 %316, label %317, label %320

317:                                              ; preds = %314
  %318 = call i32 @_ZNK20CBC_QRCoderBitVector2AtEm(%class.CBC_QRCoderBitVector* nonnull %0, i64 %304) #4
  %319 = add nuw i64 %304, 1
  br label %320

320:                                              ; preds = %317, %314
  %321 = phi i64 [ %319, %317 ], [ %304, %314 ]
  %322 = phi i32 [ %318, %317 ], [ 0, %314 ]
  %323 = call zeroext i1 @_ZN19CBC_QRCoderMaskUtil14GetDataMaskBitEiii(i32 %3, i32 %277, i32 %283) #4
  %324 = zext i1 %323 to i32
  %325 = xor i32 %322, %324
  call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %4, i32 %277, i32 %283, i32 %325) #4
  br label %326

326:                                              ; preds = %320, %303
  %327 = phi i64 [ %321, %320 ], [ %304, %303 ]
  %328 = add nsw i32 %283, %269
  %329 = icmp sgt i32 %328, -1
  br i1 %329, label %278, label %307

330:                                              ; preds = %307, %259
  %331 = phi i64 [ 0, %259 ], [ %308, %307 ]
  %332 = call i64 @_ZNK20CBC_QRCoderBitVector4SizeEv(%class.CBC_QRCoderBitVector* nonnull %0) #4
  %333 = icmp eq i64 %331, %332
  br label %334

334:                                              ; preds = %100, %95, %90, %85, %79, %119, %128, %53, %35, %33, %29, %25, %23, %19, %14, %12, %44, %40, %205, %5, %330
  %335 = phi i1 [ %333, %330 ], [ false, %5 ], [ false, %205 ], [ false, %40 ], [ false, %44 ], [ false, %12 ], [ false, %14 ], [ false, %19 ], [ false, %23 ], [ false, %25 ], [ false, %29 ], [ false, %33 ], [ false, %35 ], [ false, %53 ], [ false, %128 ], [ false, %119 ], [ false, %79 ], [ false, %85 ], [ false, %90 ], [ false, %95 ], [ false, %100 ]
  ret i1 %335
}

declare void @_ZN20CBC_CommonByteMatrix5clearEh(%class.CBC_CommonByteMatrix*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_129EmbedPositionDetectionPatternEiiP20CBC_CommonByteMatrix(i32, i32, %class.CBC_CommonByteMatrix*) unnamed_addr #0 {
  %4 = add nsw i32 %0, 1
  %5 = add nsw i32 %0, 2
  %6 = add nsw i32 %0, 3
  %7 = add nsw i32 %0, 4
  %8 = add nsw i32 %0, 5
  %9 = add nsw i32 %0, 6
  br label %10

10:                                               ; preds = %48, %3
  %11 = phi i64 [ 0, %3 ], [ %51, %48 ]
  %12 = trunc i64 %11 to i32
  %13 = add nsw i32 %12, %1
  %14 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %13) #4
  %15 = icmp eq i8 %14, -1
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = getelementptr inbounds [7 x [7 x i8]], [7 x [7 x i8]]* @_ZN12_GLOBAL__N_126POSITION_DETECTION_PATTERNE, i64 0, i64 %11, i64 0
  %18 = load i8, i8* %17, align 1
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiih(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %13, i8 zeroext %18) #4
  %19 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %4, i32 %13) #4
  %20 = icmp eq i8 %19, -1
  br i1 %20, label %23, label %21

21:                                               ; preds = %48, %10, %16, %23, %28, %33, %38, %43
  %22 = phi i1 [ false, %43 ], [ false, %38 ], [ false, %33 ], [ false, %28 ], [ false, %23 ], [ false, %16 ], [ false, %10 ], [ true, %48 ]
  ret i1 %22

23:                                               ; preds = %16
  %24 = getelementptr inbounds [7 x [7 x i8]], [7 x [7 x i8]]* @_ZN12_GLOBAL__N_126POSITION_DETECTION_PATTERNE, i64 0, i64 %11, i64 1
  %25 = load i8, i8* %24, align 1
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiih(%class.CBC_CommonByteMatrix* %2, i32 %4, i32 %13, i8 zeroext %25) #4
  %26 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %5, i32 %13) #4
  %27 = icmp eq i8 %26, -1
  br i1 %27, label %28, label %21

28:                                               ; preds = %23
  %29 = getelementptr inbounds [7 x [7 x i8]], [7 x [7 x i8]]* @_ZN12_GLOBAL__N_126POSITION_DETECTION_PATTERNE, i64 0, i64 %11, i64 2
  %30 = load i8, i8* %29, align 1
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiih(%class.CBC_CommonByteMatrix* %2, i32 %5, i32 %13, i8 zeroext %30) #4
  %31 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %6, i32 %13) #4
  %32 = icmp eq i8 %31, -1
  br i1 %32, label %33, label %21

33:                                               ; preds = %28
  %34 = getelementptr inbounds [7 x [7 x i8]], [7 x [7 x i8]]* @_ZN12_GLOBAL__N_126POSITION_DETECTION_PATTERNE, i64 0, i64 %11, i64 3
  %35 = load i8, i8* %34, align 1
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiih(%class.CBC_CommonByteMatrix* %2, i32 %6, i32 %13, i8 zeroext %35) #4
  %36 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %7, i32 %13) #4
  %37 = icmp eq i8 %36, -1
  br i1 %37, label %38, label %21

38:                                               ; preds = %33
  %39 = getelementptr inbounds [7 x [7 x i8]], [7 x [7 x i8]]* @_ZN12_GLOBAL__N_126POSITION_DETECTION_PATTERNE, i64 0, i64 %11, i64 4
  %40 = load i8, i8* %39, align 1
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiih(%class.CBC_CommonByteMatrix* %2, i32 %7, i32 %13, i8 zeroext %40) #4
  %41 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %8, i32 %13) #4
  %42 = icmp eq i8 %41, -1
  br i1 %42, label %43, label %21

43:                                               ; preds = %38
  %44 = getelementptr inbounds [7 x [7 x i8]], [7 x [7 x i8]]* @_ZN12_GLOBAL__N_126POSITION_DETECTION_PATTERNE, i64 0, i64 %11, i64 5
  %45 = load i8, i8* %44, align 1
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiih(%class.CBC_CommonByteMatrix* %2, i32 %8, i32 %13, i8 zeroext %45) #4
  %46 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %9, i32 %13) #4
  %47 = icmp eq i8 %46, -1
  br i1 %47, label %48, label %21

48:                                               ; preds = %43
  %49 = getelementptr inbounds [7 x [7 x i8]], [7 x [7 x i8]]* @_ZN12_GLOBAL__N_126POSITION_DETECTION_PATTERNE, i64 0, i64 %11, i64 6
  %50 = load i8, i8* %49, align 1
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiih(%class.CBC_CommonByteMatrix* %2, i32 %9, i32 %13, i8 zeroext %50) #4
  %51 = add nuw nsw i64 %11, 1
  %52 = icmp eq i64 %51, 7
  br i1 %52, label %21, label %10
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_132EmbedHorizontalSeparationPatternEiiP20CBC_CommonByteMatrix(i32, i32, %class.CBC_CommonByteMatrix*) unnamed_addr #0 {
  %4 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %1) #4
  %5 = icmp eq i8 %4, -1
  br i1 %5, label %6, label %10

6:                                                ; preds = %3
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %1, i32 0) #4
  %7 = add nsw i32 %0, 1
  %8 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %7, i32 %1) #4
  %9 = icmp eq i8 %8, -1
  br i1 %9, label %12, label %10

10:                                               ; preds = %36, %32, %28, %24, %20, %16, %12, %6, %3
  %11 = phi i1 [ false, %3 ], [ false, %6 ], [ false, %12 ], [ false, %16 ], [ false, %20 ], [ false, %24 ], [ false, %28 ], [ false, %32 ], [ true, %36 ]
  ret i1 %11

12:                                               ; preds = %6
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %2, i32 %7, i32 %1, i32 0) #4
  %13 = add nsw i32 %0, 2
  %14 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %13, i32 %1) #4
  %15 = icmp eq i8 %14, -1
  br i1 %15, label %16, label %10

16:                                               ; preds = %12
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %2, i32 %13, i32 %1, i32 0) #4
  %17 = add nsw i32 %0, 3
  %18 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %17, i32 %1) #4
  %19 = icmp eq i8 %18, -1
  br i1 %19, label %20, label %10

20:                                               ; preds = %16
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %2, i32 %17, i32 %1, i32 0) #4
  %21 = add nsw i32 %0, 4
  %22 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %21, i32 %1) #4
  %23 = icmp eq i8 %22, -1
  br i1 %23, label %24, label %10

24:                                               ; preds = %20
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %2, i32 %21, i32 %1, i32 0) #4
  %25 = add nsw i32 %0, 5
  %26 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %25, i32 %1) #4
  %27 = icmp eq i8 %26, -1
  br i1 %27, label %28, label %10

28:                                               ; preds = %24
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %2, i32 %25, i32 %1, i32 0) #4
  %29 = add nsw i32 %0, 6
  %30 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %29, i32 %1) #4
  %31 = icmp eq i8 %30, -1
  br i1 %31, label %32, label %10

32:                                               ; preds = %28
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %2, i32 %29, i32 %1, i32 0) #4
  %33 = add nsw i32 %0, 7
  %34 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %33, i32 %1) #4
  %35 = icmp eq i8 %34, -1
  br i1 %35, label %36, label %10

36:                                               ; preds = %32
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %2, i32 %33, i32 %1, i32 0) #4
  br label %10
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN12_GLOBAL__N_130EmbedVerticalSeparationPatternEiiP20CBC_CommonByteMatrix(i32, i32, %class.CBC_CommonByteMatrix*) unnamed_addr #0 {
  %4 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %1) #4
  %5 = icmp eq i8 %4, -1
  br i1 %5, label %6, label %10

6:                                                ; preds = %3
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %1, i32 0) #4
  %7 = add nsw i32 %1, 1
  %8 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %7) #4
  %9 = icmp eq i8 %8, -1
  br i1 %9, label %12, label %10

10:                                               ; preds = %32, %28, %24, %20, %16, %12, %6, %3
  %11 = phi i1 [ false, %3 ], [ false, %6 ], [ false, %12 ], [ false, %16 ], [ false, %20 ], [ false, %24 ], [ false, %28 ], [ true, %32 ]
  ret i1 %11

12:                                               ; preds = %6
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %7, i32 0) #4
  %13 = add nsw i32 %1, 2
  %14 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %13) #4
  %15 = icmp eq i8 %14, -1
  br i1 %15, label %16, label %10

16:                                               ; preds = %12
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %13, i32 0) #4
  %17 = add nsw i32 %1, 3
  %18 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %17) #4
  %19 = icmp eq i8 %18, -1
  br i1 %19, label %20, label %10

20:                                               ; preds = %16
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %17, i32 0) #4
  %21 = add nsw i32 %1, 4
  %22 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %21) #4
  %23 = icmp eq i8 %22, -1
  br i1 %23, label %24, label %10

24:                                               ; preds = %20
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %21, i32 0) #4
  %25 = add nsw i32 %1, 5
  %26 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %25) #4
  %27 = icmp eq i8 %26, -1
  br i1 %27, label %28, label %10

28:                                               ; preds = %24
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %25, i32 0) #4
  %29 = add nsw i32 %1, 6
  %30 = tail call zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %29) #4
  %31 = icmp eq i8 %30, -1
  br i1 %31, label %32, label %10

32:                                               ; preds = %28
  tail call void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix* %2, i32 %0, i32 %29, i32 0) #4
  br label %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i8 @_ZNK20CBC_CommonByteMatrix3GetEii(%class.CBC_CommonByteMatrix*, i32, i32) local_unnamed_addr #1

declare void @_ZN20CBC_CommonByteMatrix3SetEiih(%class.CBC_CommonByteMatrix*, i32, i32, i8 zeroext) local_unnamed_addr #1

declare void @_ZN20CBC_CommonByteMatrix3SetEiii(%class.CBC_CommonByteMatrix*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN20CBC_QRCoderBitVectorC1Ev(%class.CBC_QRCoderBitVector*) unnamed_addr #1

declare i64 @_ZNK20CBC_QRCoderBitVector4SizeEv(%class.CBC_QRCoderBitVector*) local_unnamed_addr #1

declare i32 @_ZNK20CBC_QRCoderBitVector2AtEm(%class.CBC_QRCoderBitVector*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN20CBC_QRCoderBitVectorD1Ev(%class.CBC_QRCoderBitVector*) unnamed_addr #3

declare zeroext i1 @_ZN11CBC_QRCoder18IsValidMaskPatternEi(i32) local_unnamed_addr #1

declare void @_ZN20CBC_QRCoderBitVector10AppendBitsEii(%class.CBC_QRCoderBitVector*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN20CBC_QRCoderBitVector3XOREPKS_(%class.CBC_QRCoderBitVector*, %class.CBC_QRCoderBitVector*) local_unnamed_addr #1

declare zeroext i1 @_ZN19CBC_QRCoderMaskUtil14GetDataMaskBitEiii(i32, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
