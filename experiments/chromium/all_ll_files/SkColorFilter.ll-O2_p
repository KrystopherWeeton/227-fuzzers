; ModuleID = '../../third_party/skia/src/core/SkColorFilter.cpp'
source_filename = "../../third_party/skia/src/core/SkColorFilter.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPaint = type <{ %class.sk_sp.62, %class.sk_sp.63, %class.sk_sp.64, %class.sk_sp.65, %class.sk_sp.66, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.62 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.63 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.64 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.65 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.66 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkSimpleMatrixProvider = type { %class.SkMatrixProvider }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkM44 = type { [16 x float] }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkColorFilterBase = type { %class.SkColorFilter.base, [4 x i8] }
%class.SkColorFilter.base = type { %class.SkFlattenable.base }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.3", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.6, %class.SkTHashMap, %class.SkTHashMap.14, %class.SkTArray.23, %class.SkTArray.25, i32, i8, [3 x i8] }>
%class.SkTArray.6 = type { %"class.std::__1::unique_ptr.7"*, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.25, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.26 }
%class.sk_sp.26 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRect = type { float, float, float, float }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.8" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.161" }
%"struct.std::__1::pair.161" = type { i32, i32 }
%class.SkTHashMap.14 = type { %class.SkTHashTable.15 }
%class.SkTHashTable.15 = type { i32, i32, %class.SkAutoTArray.16 }
%class.SkAutoTArray.16 = type { %"class.std::__1::unique_ptr.17" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.162" }
%"struct.std::__1::pair.162" = type { i32, %class.SkTArray.163* }
%class.SkTArray.163 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.23 = type { %"class.std::__1::unique_ptr.24"*, i64 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.163, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.25 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.39 }
%class.SkFibBlockSizes.39 = type { i32 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.GrColorInfo = type { %class.sk_sp.55, %class.sk_sp.61, i32, i32 }
%class.sk_sp.55 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.56" }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i8 }
%class.sk_sp.61 = type { %class.GrColorSpaceXform* }
%class.GrColorSpaceXform = type { %class.SkRefCnt.base, %struct.SkColorSpaceXformSteps }
%struct.SkColorSpaceXformSteps = type { %"struct.SkColorSpaceXformSteps::Flags", %struct.skcms_TransferFunction, %struct.skcms_TransferFunction, [9 x float] }
%"struct.SkColorSpaceXformSteps::Flags" = type { i8, i8, i8, i8, i8 }
%struct.SkStageRec = type { %class.SkRasterPipeline*, %class.SkArenaAlloc*, i32, %class.SkColorSpace*, %class.SkPaint*, %class.SkMatrix*, %class.SkMatrixProvider* }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%"class.skvm::Builder" = type <{ %class.SkTHashMap.67, %"class.std::__1::vector", %"class.std::__1::vector.79", %"struct.skvm::Features", [6 x i8] }>
%class.SkTHashMap.67 = type { %class.SkTHashTable.68 }
%class.SkTHashTable.68 = type { i32, i32, %class.SkAutoTArray.69 }
%class.SkAutoTArray.69 = type { %"class.std::__1::unique_ptr.70" }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot" = type { %"struct.SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair", i32 }
%"struct.SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair" = type { %"struct.std::__1::pair.169" }
%"struct.std::__1::pair.169" = type { %"struct.skvm::Instruction", i32 }
%"struct.skvm::Instruction" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"*, %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.skvm::Instruction"* }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { i32*, i32*, %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { i32* }
%"struct.skvm::Features" = type { i8, i8 }
%"struct.skvm::Color" = type { %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::F32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"struct.skvm::Uniforms" = type { %"struct.skvm::Ptr", %"class.std::__1::vector.79" }
%"struct.skvm::Ptr" = type { i32 }
%struct.SkRGBA4f.86 = type { float, float, float, float }
%class.SkSTArenaAlloc = type { %"struct.std::__1::array", %class.SkArenaAlloc.base, [4 x i8] }
%"struct.std::__1::array" = type { [512 x i8] }
%class.SkArenaAlloc.base = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes }>
%struct.SkRasterPipeline_MemoryCtx = type { i8*, i32 }
%"struct.skvm::PixelFormat" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.skvm::Program" = type { %"class.std::__1::unique_ptr.87" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.skvm::Program::Impl"* }
%"struct.skvm::Program::Impl" = type opaque
%class.sk_sp.105 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap.93, i32, [4 x i8], %class.sk_sp.102*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap.93 = type { %class.SkTHashTable.94 }
%class.SkTHashTable.94 = type { i32, i32, %class.SkAutoTArray.95 }
%class.SkAutoTArray.95 = type { %"class.std::__1::unique_ptr.96" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.105*, %class.SkReadBuffer*)* }
%class.sk_sp.102 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkDeserialProcs = type { {}*, i8*, {}*, i8*, void (%class.sk_sp.102*, i8*, i64, i8*)*, i8* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.108 = type { %class.SkRuntimeEffect* }
%class.SkRuntimeEffect = type <{ %class.SkRefCnt.base, i32, %class.SkString, %"class.std::__1::unique_ptr.109", %"class.SkSL::FunctionDefinition"*, %"class.std::__1::vector.115", %"class.std::__1::vector.122", %"class.std::__1::vector.129", %"class.std::__1::unique_ptr.136", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.SkSL::Program"* }
%"struct.SkSL::Program" = type opaque
%"class.SkSL::FunctionDefinition" = type opaque
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { %"struct.SkRuntimeEffect::Uniform"*, %"struct.SkRuntimeEffect::Uniform"*, %"class.std::__1::__compressed_pair.117" }
%"struct.SkRuntimeEffect::Uniform" = type <{ %class.SkString, i64, i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.SkRuntimeEffect::Uniform"* }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.SkRuntimeEffect::Child"*, %"struct.SkRuntimeEffect::Child"*, %"class.std::__1::__compressed_pair.124" }
%"struct.SkRuntimeEffect::Child" = type { %class.SkString, i32, i32 }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"struct.SkRuntimeEffect::Child"* }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { %"struct.SkSL::SampleUsage"*, %"struct.SkSL::SampleUsage"*, %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.SkSL::SampleUsage"* }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %class.SkFilterColorProgram* }
%class.SkFilterColorProgram = type <{ %"class.skvm::Program", %"class.std::__1::vector.139", i8, [7 x i8] }>
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.SkFilterColorProgram::SampleCall"*, %"struct.SkFilterColorProgram::SampleCall"*, %"class.std::__1::__compressed_pair.142" }
%"struct.SkFilterColorProgram::SampleCall" = type { i32, i32, %union.anon.141 }
%union.anon.141 = type { %struct.SkRGBA4f.86 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.SkFilterColorProgram::SampleCall"* }
%class.sk_sp.150 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.151, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.151 = type { %"struct.std::__1::atomic" }
%"struct.SkRuntimeEffect::Result" = type { %class.sk_sp.108, %class.SkString }
%"struct.SkRuntimeEffect::Options" = type { i8, i8 }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.150*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.150*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.150*, %class.SkTypeface*, i8*)*, i8* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.55, i32, i32 }
%struct.SkISize = type { i32, i32 }
%class.SkComposeColorFilter = type { %class.SkColorFilterBase.base, %class.sk_sp.106, %class.sk_sp.106 }
%class.SkColorFilterBase.base = type { %class.SkColorFilter.base }
%class.sk_sp.106 = type { %class.SkColorFilterBase* }
%class.SkSRGBGammaColorFilter = type { %class.SkColorFilterBase.base, i32, %struct.SkColorSpaceXformSteps, [4 x i8] }
%struct.SkWorkingFormatColorFilter = type <{ %class.SkColorFilterBase.base, [4 x i8], %class.sk_sp.65, %struct.skcms_TransferFunction, i8, [3 x i8], %struct.skcms_Matrix3x3, i8, [3 x i8], i32, i8, [3 x i8] }>

$_ZN16SkMatrixProviderD2Ev = comdat any

$_Z15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE0EE5sk_spI13SkColorFilterEv = comdat any

$_Z15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE1EE5sk_spI13SkColorFilterEv = comdat any

$_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN17SkColorFilterBaseD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK13SkFlattenable7flattenER13SkWriteBuffer = comdat any

$_ZNK17SkColorFilterBase18getFlattenableTypeEv = comdat any

$_ZNK17SkColorFilterBase18onIsAlphaUnchangedEv = comdat any

$_ZN22SkSimpleMatrixProviderD0Ev = comdat any

$_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44 = comdat any

$_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv = comdat any

$_ZN16SkMatrixProviderD0Ev = comdat any

$_ZN20SkComposeColorFilterD2Ev = comdat any

$_ZN20SkComposeColorFilterD0Ev = comdat any

$_ZNK20SkComposeColorFilter10getFactoryEv = comdat any

$_ZNK20SkComposeColorFilter11getTypeNameEv = comdat any

$_ZNK20SkComposeColorFilter7flattenER13SkWriteBuffer = comdat any

$_ZNK20SkComposeColorFilter18onIsAlphaUnchangedEv = comdat any

$_ZNK20SkComposeColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo = comdat any

$_ZNK20SkComposeColorFilter14onAppendStagesERK10SkStageRecb = comdat any

$_ZNK20SkComposeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc = comdat any

$_ZN22SkSRGBGammaColorFilterD0Ev = comdat any

$_ZNK22SkSRGBGammaColorFilter10getFactoryEv = comdat any

$_ZNK22SkSRGBGammaColorFilter11getTypeNameEv = comdat any

$_ZNK22SkSRGBGammaColorFilter7flattenER13SkWriteBuffer = comdat any

$_ZNK22SkSRGBGammaColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo = comdat any

$_ZNK22SkSRGBGammaColorFilter14onAppendStagesERK10SkStageRecb = comdat any

$_ZNK22SkSRGBGammaColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc = comdat any

$_ZN26SkWorkingFormatColorFilterD2Ev = comdat any

$_ZN26SkWorkingFormatColorFilterD0Ev = comdat any

$_ZNK26SkWorkingFormatColorFilter10getFactoryEv = comdat any

$_ZNK26SkWorkingFormatColorFilter11getTypeNameEv = comdat any

$_ZNK26SkWorkingFormatColorFilter7flattenER13SkWriteBuffer = comdat any

$_ZNK26SkWorkingFormatColorFilter18onIsAlphaUnchangedEv = comdat any

$_ZNK26SkWorkingFormatColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo = comdat any

$_ZNK26SkWorkingFormatColorFilter15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace = comdat any

$_ZNK26SkWorkingFormatColorFilter14onAppendStagesERK10SkStageRecb = comdat any

$_ZNK26SkWorkingFormatColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc = comdat any

$_ZTV22SkSimpleMatrixProvider = comdat any

$_ZTV16SkMatrixProvider = comdat any

$_ZTV20SkComposeColorFilter = comdat any

$_ZTV22SkSRGBGammaColorFilter = comdat any

$_ZZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE0EE5sk_spI13SkColorFilterEvE10gSingleton = comdat any

$_ZGVZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE0EE5sk_spI13SkColorFilterEvE10gSingleton = comdat any

$_ZZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE1EE5sk_spI13SkColorFilterEvE10gSingleton = comdat any

$_ZGVZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE1EE5sk_spI13SkColorFilterEvE10gSingleton = comdat any

$_ZTV26SkWorkingFormatColorFilter = comdat any

@__const._ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace.dummyPaint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.62 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.63 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.64 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.65 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.66 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace.matrixProvider = private unnamed_addr constant %class.SkSimpleMatrixProvider { %class.SkMatrixProvider { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), %class.SkM44 { [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000] }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } } }, align 8
@.str = private unnamed_addr constant [14 x i8] c"filterColor4f\00", align 1
@.str.1 = private unnamed_addr constant [156 x i8] c"uniform colorFilter cf0;uniform colorFilter cf1;uniform half   weight;half4 main(half4 color) {return mix(sample(cf0, color), sample(cf1, color), weight);}\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"SkComposeColorFilter\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"SkModeColorFilter\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"SkSRGBGammaColorFilter\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"SkWorkingFormatColorFilter\00", align 1
@_ZTV17SkColorFilterBase = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkColorFilterBase*)* @_ZN17SkColorFilterBaseD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkFlattenable*, %class.SkWriteBuffer*)* @_ZNK13SkFlattenable7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkColorFilterBase*)* @_ZNK17SkColorFilterBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*)* @_ZNK17SkColorFilterBase18onIsAlphaUnchangedEv to i8*), i8* bitcast ({ i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)* @_ZNK17SkColorFilterBase19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)* @_ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, float*)* @_ZNK17SkColorFilterBase16onAsAColorMatrixEPf to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, i32*, i32*)* @_ZNK17SkColorFilterBase14onAsAColorModeEPjP11SkBlendMode to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTV22SkSimpleMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkSimpleMatrixProvider*)* @_ZN22SkSimpleMatrixProviderD0Ev to i8*), i8* bitcast (i1 (%class.SkSimpleMatrixProvider*, i32, %class.SkM44*)* @_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkSimpleMatrixProvider*)* @_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv to i8*)] }, comdat, align 8
@_ZTV16SkMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTV20SkComposeColorFilter = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkComposeColorFilter*)* @_ZN20SkComposeColorFilterD2Ev to i8*), i8* bitcast (void (%class.SkComposeColorFilter*)* @_ZN20SkComposeColorFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.105*, %class.SkReadBuffer*)* (%class.SkComposeColorFilter*)* @_ZNK20SkComposeColorFilter10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkComposeColorFilter*)* @_ZNK20SkComposeColorFilter11getTypeNameEv to i8*), i8* bitcast (void (%class.SkComposeColorFilter*, %class.SkWriteBuffer*)* @_ZNK20SkComposeColorFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkColorFilterBase*)* @_ZNK17SkColorFilterBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkComposeColorFilter*)* @_ZNK20SkComposeColorFilter18onIsAlphaUnchangedEv to i8*), i8* bitcast ({ i8, %class.GrFragmentProcessor* } (%class.SkComposeColorFilter*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)* @_ZNK20SkComposeColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)* @_ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, float*)* @_ZNK17SkColorFilterBase16onAsAColorMatrixEPf to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, i32*, i32*)* @_ZNK17SkColorFilterBase14onAsAColorModeEPjP11SkBlendMode to i8*), i8* bitcast (i1 (%class.SkComposeColorFilter*, %struct.SkStageRec*, i1)* @_ZNK20SkComposeColorFilter14onAppendStagesERK10SkStageRecb to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %class.SkComposeColorFilter*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK20SkComposeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc to i8*)] }, comdat, align 8
@_ZTV22SkSRGBGammaColorFilter = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkSRGBGammaColorFilter*)* @_ZN22SkSRGBGammaColorFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.105*, %class.SkReadBuffer*)* (%class.SkSRGBGammaColorFilter*)* @_ZNK22SkSRGBGammaColorFilter10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkSRGBGammaColorFilter*)* @_ZNK22SkSRGBGammaColorFilter11getTypeNameEv to i8*), i8* bitcast (void (%class.SkSRGBGammaColorFilter*, %class.SkWriteBuffer*)* @_ZNK22SkSRGBGammaColorFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkColorFilterBase*)* @_ZNK17SkColorFilterBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*)* @_ZNK17SkColorFilterBase18onIsAlphaUnchangedEv to i8*), i8* bitcast ({ i8, %class.GrFragmentProcessor* } (%class.SkSRGBGammaColorFilter*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)* @_ZNK22SkSRGBGammaColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)* @_ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, float*)* @_ZNK17SkColorFilterBase16onAsAColorMatrixEPf to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, i32*, i32*)* @_ZNK17SkColorFilterBase14onAsAColorModeEPjP11SkBlendMode to i8*), i8* bitcast (i1 (%class.SkSRGBGammaColorFilter*, %struct.SkStageRec*, i1)* @_ZNK22SkSRGBGammaColorFilter14onAppendStagesERK10SkStageRecb to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %class.SkSRGBGammaColorFilter*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK22SkSRGBGammaColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc to i8*)] }, comdat, align 8
@_ZZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE0EE5sk_spI13SkColorFilterEvE10gSingleton = linkonce_odr hidden local_unnamed_addr global %class.SkColorFilter* null, comdat, align 8
@_ZGVZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE0EE5sk_spI13SkColorFilterEvE10gSingleton = linkonce_odr hidden global i64 0, comdat, align 8
@_ZZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE1EE5sk_spI13SkColorFilterEvE10gSingleton = linkonce_odr hidden local_unnamed_addr global %class.SkColorFilter* null, comdat, align 8
@_ZGVZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE1EE5sk_spI13SkColorFilterEvE10gSingleton = linkonce_odr hidden global i64 0, comdat, align 8
@_ZTV26SkWorkingFormatColorFilter = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%struct.SkWorkingFormatColorFilter*)* @_ZN26SkWorkingFormatColorFilterD2Ev to i8*), i8* bitcast (void (%struct.SkWorkingFormatColorFilter*)* @_ZN26SkWorkingFormatColorFilterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.105*, %class.SkReadBuffer*)* (%struct.SkWorkingFormatColorFilter*)* @_ZNK26SkWorkingFormatColorFilter10getFactoryEv to i8*), i8* bitcast (i8* (%struct.SkWorkingFormatColorFilter*)* @_ZNK26SkWorkingFormatColorFilter11getTypeNameEv to i8*), i8* bitcast (void (%struct.SkWorkingFormatColorFilter*, %class.SkWriteBuffer*)* @_ZNK26SkWorkingFormatColorFilter7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkColorFilterBase*)* @_ZNK17SkColorFilterBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%struct.SkWorkingFormatColorFilter*)* @_ZNK26SkWorkingFormatColorFilter18onIsAlphaUnchangedEv to i8*), i8* bitcast ({ i8, %class.GrFragmentProcessor* } (%struct.SkWorkingFormatColorFilter*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)* @_ZNK26SkWorkingFormatColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%struct.SkWorkingFormatColorFilter*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)* @_ZNK26SkWorkingFormatColorFilter15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, float*)* @_ZNK17SkColorFilterBase16onAsAColorMatrixEPf to i8*), i8* bitcast (i1 (%class.SkColorFilterBase*, i32*, i32*)* @_ZNK17SkColorFilterBase14onAsAColorModeEPjP11SkBlendMode to i8*), i8* bitcast (i1 (%struct.SkWorkingFormatColorFilter*, %struct.SkStageRec*, i1)* @_ZNK26SkWorkingFormatColorFilter14onAppendStagesERK10SkStageRecb to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %struct.SkWorkingFormatColorFilter*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK26SkWorkingFormatColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13SkColorFilter12asAColorModeEPjP11SkBlendMode(%class.SkColorFilter*, i32*, i32*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkColorFilter* %0 to %class.SkColorFilterBase*
  %5 = bitcast %class.SkColorFilter* %0 to i1 (%class.SkColorFilterBase*, i32*, i32*)***
  %6 = load i1 (%class.SkColorFilterBase*, i32*, i32*)**, i1 (%class.SkColorFilterBase*, i32*, i32*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkColorFilterBase*, i32*, i32*)*, i1 (%class.SkColorFilterBase*, i32*, i32*)** %6, i64 11
  %8 = load i1 (%class.SkColorFilterBase*, i32*, i32*)*, i1 (%class.SkColorFilterBase*, i32*, i32*)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkColorFilterBase* %4, i32* %1, i32* %2) #11
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13SkColorFilter14asAColorMatrixEPf(%class.SkColorFilter*, float*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkColorFilter* %0 to %class.SkColorFilterBase*
  %4 = bitcast %class.SkColorFilter* %0 to i1 (%class.SkColorFilterBase*, float*)***
  %5 = load i1 (%class.SkColorFilterBase*, float*)**, i1 (%class.SkColorFilterBase*, float*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkColorFilterBase*, float*)*, i1 (%class.SkColorFilterBase*, float*)** %5, i64 10
  %7 = load i1 (%class.SkColorFilterBase*, float*)*, i1 (%class.SkColorFilterBase*, float*)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkColorFilterBase* %3, float* %1) #11
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13SkColorFilter16isAlphaUnchangedEv(%class.SkColorFilter*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkColorFilter* %0 to %class.SkColorFilterBase*
  %3 = bitcast %class.SkColorFilter* %0 to i1 (%class.SkColorFilterBase*)***
  %4 = load i1 (%class.SkColorFilterBase*)**, i1 (%class.SkColorFilterBase*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %4, i64 7
  %6 = load i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %5, align 8
  %7 = tail call zeroext i1 %6(%class.SkColorFilterBase* %2) #11
  ret i1 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK17SkColorFilterBase14onAsAColorModeEPjP11SkBlendMode(%class.SkColorFilterBase* nocapture readnone, i32* nocapture readnone, i32* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK17SkColorFilterBase16onAsAColorMatrixEPf(%class.SkColorFilterBase* nocapture readnone, float* nocapture readnone) unnamed_addr #1 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8, %class.GrFragmentProcessor* } @_ZNK17SkColorFilterBase19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo(%class.SkColorFilterBase* nocapture readnone, %class.GrFragmentProcessor*, %class.GrRecordingContext* nocapture readnone, %class.GrColorInfo* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  %5 = insertvalue { i8, %class.GrFragmentProcessor* } { i8 0, %class.GrFragmentProcessor* undef }, %class.GrFragmentProcessor* %1, 1
  ret { i8, %class.GrFragmentProcessor* } %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17SkColorFilterBase12appendStagesERK10SkStageRecb(%class.SkColorFilterBase*, %struct.SkStageRec* dereferenceable(56), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkColorFilterBase* %0 to i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)***
  %5 = load i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)**, i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)*, i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)** %5, i64 12
  %7 = load i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)*, i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkColorFilterBase* %0, %struct.SkStageRec* dereferenceable(56) %1, i1 zeroext %2) #11
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17SkColorFilterBase7programEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias nocapture sret, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"* nocapture byval(%"struct.skvm::Color") align 8, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"struct.skvm::Color", align 8
  %9 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 3, i32 0
  %10 = bitcast %"class.skvm::Builder"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 3, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"struct.skvm::Color"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %14) #11
  %15 = bitcast %"struct.skvm::Color"* %3 to i8*
  %16 = bitcast %class.SkColorFilterBase* %1 to void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)***
  %17 = load void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)**, void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)*** %16, align 8
  %18 = getelementptr inbounds void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)*, void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)** %17, i64 13
  %19 = load void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)*, void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)** %18, align 8
  call void %19(%"struct.skvm::Color"* nonnull sret %8, %class.SkColorFilterBase* %1, %"class.skvm::Builder"* %2, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %3, %class.SkColorSpace* %4, %"struct.skvm::Uniforms"* %5, %class.SkArenaAlloc* %6) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %14, i64 64, i1 false)
  %20 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %31, label %23

23:                                               ; preds = %7
  %24 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 1, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 2, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %31, label %32

31:                                               ; preds = %27, %23, %7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %14) #11
  br label %44

32:                                               ; preds = %27
  %33 = load i32, i32* %12, align 8
  %34 = icmp eq i32 %33, -1
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %14) #11
  br i1 %34, label %44, label %35

35:                                               ; preds = %32
  %36 = bitcast %class.SkColorFilterBase* %1 to i1 (%class.SkColorFilterBase*)***
  %37 = load i1 (%class.SkColorFilterBase*)**, i1 (%class.SkColorFilterBase*)*** %36, align 8
  %38 = getelementptr inbounds i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %37, i64 7
  %39 = load i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %38, align 8
  %40 = call zeroext i1 %39(%class.SkColorFilterBase* %1) #11
  br i1 %40, label %41, label %42

41:                                               ; preds = %35
  store i64 %11, i64* %10, align 8
  store i32 %13, i32* %12, align 8
  br label %42

42:                                               ; preds = %41, %35
  %43 = bitcast %"struct.skvm::Color"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* nonnull align 8 %15, i64 64, i1 false)
  br label %53

44:                                               ; preds = %32, %31
  %45 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %45, align 8
  %46 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 1
  store i32 -1, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %47, align 8
  %48 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 1
  store i32 -1, i32* %48, align 8
  %49 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %49, align 8
  %50 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 1
  store i32 -1, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %51, align 8
  %52 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 1
  store i32 -1, i32* %52, align 8
  br label %53

53:                                               ; preds = %44, %42
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13SkColorFilter11filterColorEj(%class.SkColorFilter*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.SkRGBA4f.86, align 4
  %4 = alloca %struct.SkColorSpaceXformSteps, align 4
  %5 = alloca { <2 x float>, <2 x float> }, align 8
  %6 = bitcast { <2 x float>, <2 x float> }* %5 to %struct.SkRGBA4f*
  %7 = bitcast { <2 x float>, <2 x float> }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = tail call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 %1) #11
  %9 = extractvalue { <2 x float>, <2 x float> } %8, 0
  %10 = extractvalue { <2 x float>, <2 x float> } %8, 1
  %11 = bitcast %struct.SkRGBA4f.86* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %struct.SkRGBA4f.86, %struct.SkRGBA4f.86* %3, i64 0, i32 0
  %13 = getelementptr inbounds %struct.SkRGBA4f.86, %struct.SkRGBA4f.86* %3, i64 0, i32 1
  %14 = getelementptr inbounds %struct.SkRGBA4f.86, %struct.SkRGBA4f.86* %3, i64 0, i32 2
  %15 = getelementptr inbounds %struct.SkRGBA4f.86, %struct.SkRGBA4f.86* %3, i64 0, i32 3
  %16 = bitcast <2 x float> %9 to <2 x i32>
  %17 = extractelement <2 x i32> %16, i32 0
  %18 = bitcast %struct.SkRGBA4f.86* %3 to i32*
  store i32 %17, i32* %18, align 4
  %19 = extractelement <2 x i32> %16, i32 1
  %20 = bitcast float* %13 to i32*
  store i32 %19, i32* %20, align 4
  %21 = bitcast <2 x float> %10 to <2 x i32>
  %22 = extractelement <2 x i32> %21, i32 0
  %23 = bitcast float* %14 to i32*
  store i32 %22, i32* %23, align 4
  %24 = extractelement <2 x i32> %21, i32 1
  %25 = bitcast float* %15 to i32*
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %26) #11
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %4, %class.SkColorSpace* null, i32 3, %class.SkColorSpace* null, i32 2) #11
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %4, float* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %26) #11
  %27 = bitcast %class.SkColorFilter* %0 to %class.SkColorFilterBase*
  %28 = bitcast %class.SkColorFilter* %0 to { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)***
  %29 = load { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)**, { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)*** %28, align 8
  %30 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)*, { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)** %29, i64 9
  %31 = load { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)*, { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)** %30, align 8
  %32 = call { <2 x float>, <2 x float> } %31(%class.SkColorFilterBase* %27, %struct.SkRGBA4f.86* nonnull dereferenceable(16) %3, %class.SkColorSpace* null) #11
  %33 = extractvalue { <2 x float>, <2 x float> } %32, 1
  %34 = extractelement <2 x float> %33, i32 1
  %35 = fcmp oeq float %34, 0.000000e+00
  br i1 %35, label %45, label %36

36:                                               ; preds = %2
  %37 = extractvalue { <2 x float>, <2 x float> } %32, 0
  %38 = fdiv float 1.000000e+00, %34
  %39 = insertelement <2 x float> undef, float %38, i32 0
  %40 = shufflevector <2 x float> %39, <2 x float> undef, <2 x i32> zeroinitializer
  %41 = fmul <2 x float> %37, %40
  %42 = extractelement <2 x float> %33, i32 0
  %43 = fmul float %42, %38
  %44 = insertelement <2 x float> %33, float %43, i32 0
  br label %45

45:                                               ; preds = %2, %36
  %46 = phi <2 x float> [ %41, %36 ], [ zeroinitializer, %2 ]
  %47 = phi <2 x float> [ %44, %36 ], [ zeroinitializer, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %48 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 0
  store <2 x float> %46, <2 x float>* %48, align 8
  %49 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %5, i64 0, i32 1
  store <2 x float> %47, <2 x float>* %49, align 8
  %50 = call i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE9toSkColorEv(%struct.SkRGBA4f* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK13SkColorFilter13filterColor4fERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpaceS6_(%class.SkColorFilter*, %struct.SkRGBA4f* nocapture readonly dereferenceable(16), %class.SkColorSpace*, %class.SkColorSpace*) local_unnamed_addr #0 align 2 {
  %5 = alloca <4 x i32>, align 16
  %6 = bitcast <4 x i32>* %5 to %struct.SkRGBA4f.86*
  %7 = alloca %struct.SkColorSpaceXformSteps, align 4
  %8 = bitcast <4 x i32>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  %9 = bitcast <4 x i32>* %5 to float*
  %10 = bitcast %struct.SkRGBA4f* %1 to <4 x i32>*
  %11 = load <4 x i32>, <4 x i32>* %10, align 4
  store <4 x i32> %11, <4 x i32>* %5, align 16
  %12 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %7, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %12) #11
  call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %7, %class.SkColorSpace* %2, i32 3, %class.SkColorSpace* %3, i32 2) #11
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %7, float* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %12) #11
  %13 = bitcast %class.SkColorFilter* %0 to %class.SkColorFilterBase*
  %14 = bitcast %class.SkColorFilter* %0 to { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)***
  %15 = load { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)**, { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)*** %14, align 8
  %16 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)*, { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)** %15, i64 9
  %17 = load { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)*, { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)** %16, align 8
  %18 = call { <2 x float>, <2 x float> } %17(%class.SkColorFilterBase* %13, %struct.SkRGBA4f.86* nonnull dereferenceable(16) %6, %class.SkColorSpace* %3) #11
  %19 = extractvalue { <2 x float>, <2 x float> } %18, 1
  %20 = extractelement <2 x float> %19, i32 1
  %21 = fcmp oeq float %20, 0.000000e+00
  br i1 %21, label %31, label %22

22:                                               ; preds = %4
  %23 = extractvalue { <2 x float>, <2 x float> } %18, 0
  %24 = fdiv float 1.000000e+00, %20
  %25 = insertelement <2 x float> undef, float %24, i32 0
  %26 = shufflevector <2 x float> %25, <2 x float> undef, <2 x i32> zeroinitializer
  %27 = fmul <2 x float> %23, %26
  %28 = extractelement <2 x float> %19, i32 0
  %29 = fmul float %28, %24
  %30 = insertelement <2 x float> %19, float %29, i32 0
  br label %31

31:                                               ; preds = %4, %22
  %32 = phi <2 x float> [ %27, %22 ], [ zeroinitializer, %4 ]
  %33 = phi <2 x float> [ %30, %22 ], [ zeroinitializer, %4 ]
  %34 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %32, 0
  %35 = insertvalue { <2 x float>, <2 x float> } %34, <2 x float> %33, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  ret { <2 x float>, <2 x float> } %35
}

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #3

declare i32 @_ZNK8SkRGBA4fIL11SkAlphaType3EE9toSkColorEv(%struct.SkRGBA4f*) local_unnamed_addr #3

declare void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) unnamed_addr #3

declare void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps*, float*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace(%class.SkColorFilterBase*, %struct.SkRGBA4f.86* dereferenceable(16), %class.SkColorSpace*) unnamed_addr #4 align 2 {
  %4 = alloca [3 x i8*], align 16
  %5 = alloca %"struct.skvm::Color", align 8
  %6 = alloca %"struct.skvm::Color", align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca %class.SkSTArenaAlloc, align 8
  %9 = alloca %class.SkRasterPipeline, align 8
  %10 = alloca %class.SkPaint, align 8
  %11 = alloca %class.SkSimpleMatrixProvider, align 8
  %12 = alloca %struct.SkStageRec, align 8
  %13 = alloca %struct.SkRasterPipeline_MemoryCtx, align 8
  %14 = alloca %"class.skvm::Builder", align 8
  %15 = alloca %"struct.skvm::Uniforms", align 8
  %16 = alloca %"struct.skvm::Color", align 8
  %17 = alloca %"struct.skvm::PixelFormat", align 16
  %18 = alloca %"struct.skvm::Color", align 8
  %19 = alloca %"class.skvm::Program", align 8
  %20 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %8, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 544, i8* nonnull %20) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 544, i1 false)
  %21 = getelementptr inbounds %class.SkSTArenaAlloc, %class.SkSTArenaAlloc* %8, i64 0, i32 0, i32 0, i64 512
  %22 = bitcast i8* %21 to %class.SkArenaAlloc*
  call void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc* %22, i8* nonnull %20, i64 512, i64 512) #11
  %23 = bitcast %class.SkRasterPipeline* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  %24 = bitcast %class.SkRasterPipeline* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  call void @_ZN16SkRasterPipelineC1EP12SkArenaAlloc(%class.SkRasterPipeline* nonnull %9, %class.SkArenaAlloc* %22) #11
  %25 = getelementptr inbounds %struct.SkRGBA4f.86, %struct.SkRGBA4f.86* %1, i64 0, i32 0
  call void @_ZN16SkRasterPipeline21append_constant_colorEP12SkArenaAllocPKf(%class.SkRasterPipeline* nonnull %9, %class.SkArenaAlloc* %22, float* %25) #11
  %26 = bitcast %class.SkPaint* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %26) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace.dummyPaint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %10) #11
  %27 = bitcast %class.SkSimpleMatrixProvider* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %27) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* align 8 bitcast (%class.SkSimpleMatrixProvider* @__const._ZNK17SkColorFilterBase15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace.matrixProvider to i8*), i64 112, i1 false)
  %28 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #11
  %29 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV16SkMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %30 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0, i32 1
  %31 = bitcast %class.SkMatrix* %28 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %28, i64 0, i32 0, i64 1
  %34 = bitcast float* %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %28, i64 0, i32 0, i64 2
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %28, i64 0, i32 0, i64 3
  %40 = bitcast float* %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %28, i64 0, i32 0, i64 4
  %43 = bitcast float* %42 to i32*
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %28, i64 0, i32 0, i64 5
  %46 = bitcast float* %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %28, i64 0, i32 0, i64 6
  %49 = bitcast float* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %28, i64 0, i32 0, i64 7
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %28, i64 0, i32 0, i64 8
  %55 = bitcast float* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = bitcast %class.SkM44* %30 to i32*
  store i32 %32, i32* %57, align 8
  %58 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0, i32 1, i32 0, i64 1
  %59 = bitcast float* %58 to i32*
  store i32 %41, i32* %59, align 4
  %60 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %60, align 8
  %61 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0, i32 1, i32 0, i64 3
  %62 = bitcast float* %61 to i32*
  store i32 %50, i32* %62, align 4
  %63 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0, i32 1, i32 0, i64 4
  %64 = bitcast float* %63 to i32*
  store i32 %35, i32* %64, align 8
  %65 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0, i32 1, i32 0, i64 5
  %66 = bitcast float* %65 to i32*
  store i32 %44, i32* %66, align 4
  %67 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %67, align 8
  %68 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0, i32 1, i32 0, i64 7
  %69 = bitcast float* %68 to i32*
  store i32 %53, i32* %69, align 4
  %70 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0, i32 1, i32 0, i64 8
  %71 = bitcast float* %70 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %71, align 8
  %72 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0, i32 1, i32 0, i64 12
  %73 = bitcast float* %72 to i32*
  store i32 %38, i32* %73, align 8
  %74 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0, i32 1, i32 0, i64 13
  %75 = bitcast float* %74 to i32*
  store i32 %47, i32* %75, align 4
  %76 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %76, align 8
  %77 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0, i32 1, i32 0, i64 15
  %78 = bitcast float* %77 to i32*
  store i32 %56, i32* %78, align 4
  %79 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0, i32 2
  %80 = bitcast %class.SkMatrix* %79 to i8*
  %81 = bitcast %class.SkMatrix* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 4 %81, i64 40, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV22SkSimpleMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %82 = bitcast %struct.SkStageRec* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %82) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 24, i1 false)
  %83 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %12, i64 0, i32 0
  store %class.SkRasterPipeline* %9, %class.SkRasterPipeline** %83, align 8
  %84 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %12, i64 0, i32 1
  %85 = bitcast %class.SkArenaAlloc** %84 to i8**
  store i8* %21, i8** %85, align 8
  %86 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %12, i64 0, i32 2
  store i32 14, i32* %86, align 8
  %87 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %12, i64 0, i32 3
  store %class.SkColorSpace* %2, %class.SkColorSpace** %87, align 8
  %88 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %12, i64 0, i32 4
  store %class.SkPaint* %10, %class.SkPaint** %88, align 8
  %89 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %12, i64 0, i32 5
  store %class.SkMatrix* null, %class.SkMatrix** %89, align 8
  %90 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %12, i64 0, i32 6
  %91 = getelementptr inbounds %class.SkSimpleMatrixProvider, %class.SkSimpleMatrixProvider* %11, i64 0, i32 0
  store %class.SkMatrixProvider* %91, %class.SkMatrixProvider** %90, align 8
  %92 = getelementptr inbounds %struct.SkRGBA4f.86, %struct.SkRGBA4f.86* %1, i64 0, i32 3
  %93 = load float, float* %92, align 4
  %94 = fcmp oeq float %93, 1.000000e+00
  %95 = bitcast %class.SkColorFilterBase* %0 to i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)***
  %96 = load i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)**, i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)*** %95, align 8
  %97 = getelementptr inbounds i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)*, i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)** %96, i64 12
  %98 = load i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)*, i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)** %97, align 8
  %99 = call zeroext i1 %98(%class.SkColorFilterBase* %0, %struct.SkStageRec* nonnull dereferenceable(56) %12, i1 zeroext %94) #11
  br i1 %99, label %100, label %105

100:                                              ; preds = %3
  %101 = bitcast %struct.SkRasterPipeline_MemoryCtx* %13 to i8*
  %102 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %102, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %101) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 -86, i64 16, i1 false)
  %103 = bitcast %struct.SkRasterPipeline_MemoryCtx* %13 to { <2 x float>, <2 x float> }**
  store { <2 x float>, <2 x float> }* %7, { <2 x float>, <2 x float> }** %103, align 8
  %104 = getelementptr inbounds %struct.SkRasterPipeline_MemoryCtx, %struct.SkRasterPipeline_MemoryCtx* %13, i64 0, i32 1
  store i32 0, i32* %104, align 8
  call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* nonnull %9, i32 49, i8* nonnull %101) #11
  call void @_ZNK16SkRasterPipeline3runEmmmm(%class.SkRasterPipeline* nonnull %9, i64 0, i64 0, i64 1, i64 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %101) #11
  br label %273

105:                                              ; preds = %3
  %106 = bitcast %"class.skvm::Builder"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %106) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 72, i1 false)
  call void @_ZN4skvm7BuilderC1Ev(%"class.skvm::Builder"* nonnull %14) #11
  %107 = bitcast %"struct.skvm::Uniforms"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %107) #11
  %108 = bitcast %"struct.skvm::Uniforms"* %15 to i64*
  store i64 -6148914691236517206, i64* %108, align 8
  %109 = call i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"* nonnull %14, i32 0) #11
  %110 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %15, i64 0, i32 0, i32 0
  store i32 %109, i32* %110, align 8
  %111 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %15, i64 0, i32 1
  %112 = call i8* @_Znwm(i64 16) #12
  %113 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %15, i64 0, i32 1, i32 0, i32 1
  %114 = bitcast %"class.std::__1::vector.79"* %111 to i8**
  store i8* %112, i8** %114, align 8
  %115 = getelementptr inbounds i8, i8* %112, i64 16
  %116 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %15, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %117 = bitcast i32** %116 to i8**
  store i8* %115, i8** %117, align 8
  %118 = bitcast i32** %113 to i64*
  %119 = ptrtoint i8* %112 to i64
  %120 = getelementptr i8, i8* %112, i64 12
  %121 = ptrtoint i8* %120 to i64
  %122 = sub i64 4, %119
  %123 = add i64 %122, %121
  %124 = and i64 %123, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %112, i8 0, i64 %124, i1 false) #11
  %125 = ptrtoint i8* %115 to i64
  store i64 %125, i64* %118, align 8
  %126 = bitcast %struct.SkRGBA4f.86* %1 to <2 x float>*
  %127 = load <2 x float>, <2 x float>* %126, align 4
  %128 = getelementptr inbounds %struct.SkRGBA4f.86, %struct.SkRGBA4f.86* %1, i64 0, i32 2
  %129 = bitcast float* %128 to <2 x float>*
  %130 = load <2 x float>, <2 x float>* %129, align 4
  call void @_ZN4skvm7Builder12uniformColorE8SkRGBA4fIL11SkAlphaType3EEPNS_8UniformsE(%"struct.skvm::Color"* nonnull sret %16, %"class.skvm::Builder"* nonnull %14, <2 x float> %127, <2 x float> %130, %"struct.skvm::Uniforms"* nonnull %15) #11
  %131 = bitcast %"struct.skvm::Color"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %131)
  %132 = bitcast %"struct.skvm::Color"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %131, i8* nonnull align 8 %132, i64 64, i1 false) #11
  %133 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 3, i32 0
  %134 = bitcast %"class.skvm::Builder"** %133 to i64*
  %135 = load i64, i64* %134, align 8, !noalias !2
  %136 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 3, i32 1
  %137 = load i32, i32* %136, align 8, !noalias !2
  %138 = bitcast %"struct.skvm::Color"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %138) #11, !noalias !2
  %139 = bitcast %class.SkColorFilterBase* %0 to void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)***
  %140 = load void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)**, void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)*** %139, align 8, !noalias !2
  %141 = getelementptr inbounds void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)*, void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)** %140, i64 13
  %142 = load void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)*, void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)** %141, align 8, !noalias !2
  call void %142(%"struct.skvm::Color"* nonnull sret %5, %class.SkColorFilterBase* %0, %"class.skvm::Builder"* nonnull %14, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %16, %class.SkColorSpace* %2, %"struct.skvm::Uniforms"* nonnull %15, %class.SkArenaAlloc* %22) #11, !noalias !2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %131, i8* nonnull align 8 %138, i64 64, i1 false) #11, !noalias !2
  %143 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 0, i32 1
  %144 = load i32, i32* %143, align 8, !noalias !2
  %145 = icmp eq i32 %144, -1
  br i1 %145, label %154, label %146

146:                                              ; preds = %105
  %147 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 1, i32 1
  %148 = load i32, i32* %147, align 8, !noalias !2
  %149 = icmp eq i32 %148, -1
  br i1 %149, label %154, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 2, i32 1
  %152 = load i32, i32* %151, align 8, !noalias !2
  %153 = icmp eq i32 %152, -1
  br i1 %153, label %154, label %155

154:                                              ; preds = %150, %146, %105
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %138) #11, !noalias !2
  br label %168

155:                                              ; preds = %150
  %156 = load i32, i32* %136, align 8, !noalias !2
  %157 = icmp eq i32 %156, -1
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %138) #11, !noalias !2
  br i1 %157, label %168, label %158

158:                                              ; preds = %155
  %159 = bitcast %class.SkColorFilterBase* %0 to i1 (%class.SkColorFilterBase*)***
  %160 = load i1 (%class.SkColorFilterBase*)**, i1 (%class.SkColorFilterBase*)*** %159, align 8, !noalias !2
  %161 = getelementptr inbounds i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %160, i64 7
  %162 = load i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %161, align 8, !noalias !2
  %163 = call zeroext i1 %162(%class.SkColorFilterBase* %0) #11, !noalias !2
  br i1 %163, label %167, label %164

164:                                              ; preds = %158
  %165 = load i64, i64* %134, align 8
  %166 = load i32, i32* %136, align 8
  br label %169

167:                                              ; preds = %158
  store i64 %135, i64* %134, align 8, !noalias !2
  store i32 %137, i32* %136, align 8, !noalias !2
  br label %169

168:                                              ; preds = %155, %154
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %131)
  br label %239

169:                                              ; preds = %164, %167
  %170 = phi i32 [ %166, %164 ], [ %137, %167 ]
  %171 = phi i64 [ %165, %164 ], [ %135, %167 ]
  %172 = bitcast %"struct.skvm::Color"* %6 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = load i32, i32* %143, align 8
  %175 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 0, i32 2
  %176 = bitcast [4 x i8]* %175 to i32*
  %177 = load i32, i32* %176, align 4
  %178 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 1, i32 0
  %179 = bitcast %"class.skvm::Builder"** %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = load i32, i32* %147, align 8
  %182 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 1, i32 2
  %183 = bitcast [4 x i8]* %182 to i32*
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 2, i32 0
  %186 = bitcast %"class.skvm::Builder"** %185 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = load i32, i32* %151, align 8
  %189 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 2, i32 2
  %190 = bitcast [4 x i8]* %189 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %6, i64 0, i32 3, i32 2
  %193 = bitcast [4 x i8]* %192 to i32*
  %194 = load i32, i32* %193, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %131)
  %195 = icmp eq i32 %174, -1
  %196 = icmp eq i32 %181, -1
  %197 = or i1 %195, %196
  %198 = icmp eq i32 %188, -1
  %199 = or i1 %197, %198
  %200 = xor i1 %199, true
  %201 = icmp ne i32 %170, -1
  %202 = and i1 %201, %200
  br i1 %202, label %203, label %239

203:                                              ; preds = %169
  %204 = bitcast %"struct.skvm::PixelFormat"* %17 to <4 x i32>*
  store <4 x i32> <i32 1, i32 32, i32 32, i32 32>, <4 x i32>* %204, align 16
  %205 = getelementptr inbounds %"struct.skvm::PixelFormat", %"struct.skvm::PixelFormat"* %17, i64 0, i32 4
  %206 = bitcast i32* %205 to <4 x i32>*
  store <4 x i32> <i32 32, i32 0, i32 32, i32 64>, <4 x i32>* %206, align 16
  %207 = getelementptr inbounds %"struct.skvm::PixelFormat", %"struct.skvm::PixelFormat"* %17, i64 0, i32 8
  store i32 96, i32* %207, align 16
  %208 = call i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"* nonnull %14, i32 16) #11
  %209 = bitcast %"struct.skvm::Color"* %18 to i64*
  store i64 %173, i64* %209, align 8
  %210 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %18, i64 0, i32 0, i32 1
  store i32 %174, i32* %210, align 8
  %211 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %18, i64 0, i32 0, i32 2
  %212 = bitcast [4 x i8]* %211 to i32*
  store i32 %177, i32* %212, align 4
  %213 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %18, i64 0, i32 1, i32 0
  %214 = bitcast %"class.skvm::Builder"** %213 to i64*
  store i64 %180, i64* %214, align 8
  %215 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %18, i64 0, i32 1, i32 1
  store i32 %181, i32* %215, align 8
  %216 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %18, i64 0, i32 1, i32 2
  %217 = bitcast [4 x i8]* %216 to i32*
  store i32 %184, i32* %217, align 4
  %218 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %18, i64 0, i32 2, i32 0
  %219 = bitcast %"class.skvm::Builder"** %218 to i64*
  store i64 %187, i64* %219, align 8
  %220 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %18, i64 0, i32 2, i32 1
  store i32 %188, i32* %220, align 8
  %221 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %18, i64 0, i32 2, i32 2
  %222 = bitcast [4 x i8]* %221 to i32*
  store i32 %191, i32* %222, align 4
  %223 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %18, i64 0, i32 3, i32 0
  %224 = bitcast %"class.skvm::Builder"** %223 to i64*
  store i64 %171, i64* %224, align 8
  %225 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %18, i64 0, i32 3, i32 1
  store i32 %170, i32* %225, align 8
  %226 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %18, i64 0, i32 3, i32 2
  %227 = bitcast [4 x i8]* %226 to i32*
  store i32 %194, i32* %227, align 4
  call void @_ZN4skvm7Builder5storeENS_11PixelFormatENS_3PtrENS_5ColorE(%"class.skvm::Builder"* nonnull %14, %"struct.skvm::PixelFormat"* nonnull byval(%"struct.skvm::PixelFormat") align 8 %17, i32 %208, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %18) #11
  %228 = bitcast %"class.skvm::Program"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #11
  call void @_ZNK4skvm7Builder4doneEPKcb(%"class.skvm::Program"* nonnull sret %19, %"class.skvm::Builder"* nonnull %14, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i1 zeroext false) #11
  %229 = bitcast %"class.std::__1::vector.79"* %111 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast [3 x i8*]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %231) #11
  %232 = getelementptr inbounds [3 x i8*], [3 x i8*]* %4, i64 0, i64 0
  %233 = getelementptr inbounds [3 x i8*], [3 x i8*]* %4, i64 0, i64 1
  %234 = getelementptr inbounds [3 x i8*], [3 x i8*]* %4, i64 0, i64 2
  %235 = bitcast [3 x i8*]* %4 to i64*
  store i64 %230, i64* %235, align 16
  %236 = bitcast i8** %233 to %struct.SkRGBA4f.86**
  store %struct.SkRGBA4f.86* %1, %struct.SkRGBA4f.86** %236, align 8
  store i8* null, i8** %234, align 16
  call void @_ZNK4skvm7Program4evalEiPPv(%"class.skvm::Program"* nonnull %19, i32 1, i8** nonnull %232) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %231) #11
  call void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #11
  %237 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  %238 = bitcast %struct.SkRGBA4f.86* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %237, i8* align 4 %238, i64 16, i1 false)
  br label %241

239:                                              ; preds = %169, %168
  %240 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %240, i8 0, i64 16, i1 false)
  br label %241

241:                                              ; preds = %203, %239
  %242 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %15, i64 0, i32 1, i32 0, i32 0
  %243 = load i32*, i32** %242, align 8
  %244 = icmp eq i32* %243, null
  br i1 %244, label %248, label %245

245:                                              ; preds = %241
  %246 = ptrtoint i32* %243 to i64
  store i64 %246, i64* %118, align 8
  %247 = bitcast i32* %243 to i8*
  call void @_ZdlPv(i8* %247) #12
  br label %248

248:                                              ; preds = %241, %245
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %107) #11
  %249 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %14, i64 0, i32 2, i32 0, i32 0
  %250 = load i32*, i32** %249, align 8
  %251 = icmp eq i32* %250, null
  br i1 %251, label %257, label %252

252:                                              ; preds = %248
  %253 = ptrtoint i32* %250 to i64
  %254 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %14, i64 0, i32 2, i32 0, i32 1
  %255 = bitcast i32** %254 to i64*
  store i64 %253, i64* %255, align 8
  %256 = bitcast i32* %250 to i8*
  call void @_ZdlPv(i8* %256) #12
  br label %257

257:                                              ; preds = %252, %248
  %258 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %14, i64 0, i32 1, i32 0, i32 0
  %259 = load %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"** %258, align 8
  %260 = icmp eq %"struct.skvm::Instruction"* %259, null
  br i1 %260, label %266, label %261

261:                                              ; preds = %257
  %262 = ptrtoint %"struct.skvm::Instruction"* %259 to i64
  %263 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %14, i64 0, i32 1, i32 0, i32 1
  %264 = bitcast %"struct.skvm::Instruction"** %263 to i64*
  store i64 %262, i64* %264, align 8
  %265 = bitcast %"struct.skvm::Instruction"* %259 to i8*
  call void @_ZdlPv(i8* %265) #12
  br label %266

266:                                              ; preds = %261, %257
  %267 = getelementptr inbounds %"class.skvm::Builder", %"class.skvm::Builder"* %14, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %268 = load %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"** %267, align 8
  store %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"** %267, align 8
  %269 = icmp eq %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* %268, null
  br i1 %269, label %272, label %270

270:                                              ; preds = %266
  %271 = bitcast %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* %268 to i8*
  call void @_ZdaPv(i8* %271) #12
  br label %272

272:                                              ; preds = %266, %270
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %106) #11
  br label %273

273:                                              ; preds = %272, %100
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %82) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %27) #11
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %26) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  call void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc* %22) #11
  call void @llvm.lifetime.end.p0i8(i64 544, i8* nonnull %20) #11
  %274 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %275 = load <2 x float>, <2 x float>* %274, align 8
  %276 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %275, 0
  %277 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %278 = load <2 x float>, <2 x float>* %277, align 8
  %279 = insertvalue { <2 x float>, <2 x float> } %276, <2 x float> %278, 1
  ret { <2 x float>, <2 x float> } %279
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN16SkRasterPipelineC1EP12SkArenaAlloc(%class.SkRasterPipeline*, %class.SkArenaAlloc*) unnamed_addr #3

declare void @_ZN16SkRasterPipeline21append_constant_colorEP12SkArenaAllocPKf(%class.SkRasterPipeline*, %class.SkArenaAlloc*, float*) local_unnamed_addr #3

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #3

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline*, i32, i8*) local_unnamed_addr #3

declare void @_ZNK16SkRasterPipeline3runEmmmm(%class.SkRasterPipeline*, i64, i64, i64, i64) local_unnamed_addr #3

declare void @_ZN4skvm7BuilderC1Ev(%"class.skvm::Builder"*) unnamed_addr #3

declare void @_ZN4skvm7Builder12uniformColorE8SkRGBA4fIL11SkAlphaType3EEPNS_8UniformsE(%"struct.skvm::Color"* sret, %"class.skvm::Builder"*, <2 x float>, <2 x float>, %"struct.skvm::Uniforms"*) local_unnamed_addr #3

declare void @_ZN4skvm7Builder5storeENS_11PixelFormatENS_3PtrENS_5ColorE(%"class.skvm::Builder"*, %"struct.skvm::PixelFormat"* byval(%"struct.skvm::PixelFormat") align 8, i32, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8) local_unnamed_addr #3

declare void @_ZNK4skvm7Builder4doneEPKcb(%"class.skvm::Program"* sret, %"class.skvm::Builder"*, i8*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4skvm7ProgramD1Ev(%"class.skvm::Program"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMatrixProviderD2Ev(%class.SkMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN20SkComposeColorFilter10CreateProcER12SkReadBuffer(%class.sk_sp.105* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = tail call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 0) #11, !noalias !5
  %4 = ptrtoint %class.SkFlattenable* %3 to i64
  %5 = tail call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 0) #11, !noalias !10
  %6 = ptrtoint %class.SkFlattenable* %5 to i64
  %7 = icmp eq %class.SkFlattenable* %3, null
  %8 = icmp eq %class.SkFlattenable* %5, null
  br i1 %7, label %25, label %9

9:                                                ; preds = %2
  br i1 %8, label %22, label %10

10:                                               ; preds = %9
  %11 = tail call i8* @_Znwm(i64 32) #12, !noalias !15
  %12 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 monotonic, !noalias !18
  %14 = getelementptr inbounds i8, i8* %11, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 1, i32* %15, align 4, !noalias !15
  %16 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV20SkComposeColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8, !noalias !15
  %17 = getelementptr inbounds i8, i8* %11, i64 16
  %18 = bitcast i8* %17 to i64*
  store i64 %4, i64* %18, align 8, !alias.scope !21, !noalias !15
  %19 = getelementptr inbounds i8, i8* %11, i64 24
  %20 = bitcast i8* %19 to i64*
  store i64 %6, i64* %20, align 8, !alias.scope !24, !noalias !15
  %21 = ptrtoint i8* %11 to i64
  br label %41

22:                                               ; preds = %9
  %23 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic, !noalias !27
  br label %41

25:                                               ; preds = %2
  br i1 %8, label %26, label %28

26:                                               ; preds = %25
  %27 = bitcast %class.sk_sp.105* %0 to i64*
  store i64 %6, i64* %27, align 8
  br label %53

28:                                               ; preds = %25
  %29 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 monotonic
  %31 = bitcast %class.sk_sp.105* %0 to i64*
  store i64 %6, i64* %31, align 8
  %32 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %53

35:                                               ; preds = %28
  %36 = bitcast %class.SkFlattenable* %5 to %class.SkRefCntBase*
  %37 = bitcast %class.SkFlattenable* %5 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  tail call void %40(%class.SkRefCntBase* nonnull %36) #11
  br label %53

41:                                               ; preds = %22, %10
  %42 = phi i64 [ %4, %22 ], [ %21, %10 ]
  %43 = bitcast %class.sk_sp.105* %0 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %41
  %48 = bitcast %class.SkFlattenable* %3 to %class.SkRefCntBase*
  %49 = bitcast %class.SkFlattenable* %3 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  tail call void %52(%class.SkRefCntBase* nonnull %48) #11
  br label %53

53:                                               ; preds = %26, %35, %28, %41, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13SkColorFilter12makeComposedE5sk_spIS_E(%class.sk_sp.65* noalias nocapture sret, %class.SkColorFilter*, %class.sk_sp.65* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.sk_sp.65, %class.sk_sp.65* %2, i64 0, i32 0
  %5 = load %class.SkColorFilter*, %class.SkColorFilter** %4, align 8
  %6 = icmp eq %class.SkColorFilter* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %3
  %8 = icmp eq %class.SkColorFilter* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic, !noalias !30
  br label %12

12:                                               ; preds = %7, %9
  %13 = getelementptr inbounds %class.sk_sp.65, %class.sk_sp.65* %0, i64 0, i32 0
  store %class.SkColorFilter* %1, %class.SkColorFilter** %13, align 8, !alias.scope !30
  br label %34

14:                                               ; preds = %3
  %15 = ptrtoint %class.SkColorFilter* %5 to i64
  %16 = tail call i8* @_Znwm(i64 32) #12
  %17 = icmp eq %class.SkColorFilter* %1, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !33
  %21 = bitcast %class.sk_sp.65* %2 to i64*
  %22 = load i64, i64* %21, align 8
  br label %23

23:                                               ; preds = %14, %18
  %24 = phi i64 [ %22, %18 ], [ %15, %14 ]
  %25 = ptrtoint %class.SkColorFilter* %1 to i64
  store %class.SkColorFilter* null, %class.SkColorFilter** %4, align 8
  %26 = getelementptr inbounds i8, i8* %16, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 1, i32* %27, align 4
  %28 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV20SkComposeColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %16, i64 16
  %30 = bitcast i8* %29 to i64*
  store i64 %25, i64* %30, align 8, !alias.scope !36
  %31 = getelementptr inbounds i8, i8* %16, i64 24
  %32 = bitcast i8* %31 to i64*
  store i64 %24, i64* %32, align 8, !alias.scope !39
  %33 = bitcast %class.sk_sp.65* %0 to i8**
  store i8* %16, i8** %33, align 8
  br label %34

34:                                               ; preds = %23, %12
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22SkSRGBGammaColorFilter10CreateProcER12SkReadBuffer(%class.sk_sp.105* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = tail call i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* %1) #11
  %4 = icmp ult i32 %3, 2
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #11
  br label %6

6:                                                ; preds = %2, %5
  %7 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %8 = load i8, i8* %7, align 8, !range !42
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.sk_sp.105, %class.sk_sp.105* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %11, align 8
  br label %30

12:                                               ; preds = %6
  %13 = tail call i8* @_Znwm(i64 120) #12
  %14 = getelementptr inbounds i8, i8* %13, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 1, i32* %15, align 4
  %16 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV22SkSRGBGammaColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 12
  %18 = bitcast i8* %17 to i32*
  store i32 %3, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %13, i64 16
  %20 = bitcast i8* %19 to %struct.SkColorSpaceXformSteps*
  %21 = icmp eq i32 %3, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %12
  %23 = tail call %class.SkColorSpace* @_Z24sk_srgb_linear_singletonv() #11
  %24 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #11
  tail call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* %20, %class.SkColorSpace* %23, i32 3, %class.SkColorSpace* %24, i32 3) #11
  br label %28

25:                                               ; preds = %12
  %26 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #11
  %27 = tail call %class.SkColorSpace* @_Z24sk_srgb_linear_singletonv() #11
  tail call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* %20, %class.SkColorSpace* %26, i32 3, %class.SkColorSpace* %27, i32 3) #11
  br label %28

28:                                               ; preds = %22, %25
  %29 = bitcast %class.sk_sp.105* %0 to i8**
  store i8* %13, i8** %29, align 8
  br label %30

30:                                               ; preds = %28, %10
  ret void
}

declare i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkColorFilters17LinearToSRGBGammaEv(%class.sk_sp.65* noalias sret) local_unnamed_addr #0 align 2 {
  tail call void @_Z15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE0EE5sk_spI13SkColorFilterEv(%class.sk_sp.65* sret %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE0EE5sk_spI13SkColorFilterEv(%class.sk_sp.65* noalias sret) local_unnamed_addr #0 comdat {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE0EE5sk_spI13SkColorFilterEvE10gSingleton to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %18, !prof !43

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE0EE5sk_spI13SkColorFilterEvE10gSingleton) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 120) #12
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV22SkSRGBGammaColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %8, i64 16
  %15 = bitcast i8* %14 to %struct.SkColorSpaceXformSteps*
  %16 = tail call %class.SkColorSpace* @_Z24sk_srgb_linear_singletonv() #11
  %17 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #11
  tail call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* %15, %class.SkColorSpace* %16, i32 3, %class.SkColorSpace* %17, i32 3) #11
  store i8* %8, i8** bitcast (%class.SkColorFilter** @_ZZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE0EE5sk_spI13SkColorFilterEvE10gSingleton to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE0EE5sk_spI13SkColorFilterEvE10gSingleton) #11
  br label %18

18:                                               ; preds = %4, %7, %1
  %19 = load %class.SkColorFilter*, %class.SkColorFilter** @_ZZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE0EE5sk_spI13SkColorFilterEvE10gSingleton, align 8
  %20 = icmp eq %class.SkColorFilter* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic, !noalias !44
  br label %24

24:                                               ; preds = %18, %21
  %25 = getelementptr inbounds %class.sk_sp.65, %class.sk_sp.65* %0, i64 0, i32 0
  store %class.SkColorFilter* %19, %class.SkColorFilter** %25, align 8, !alias.scope !44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkColorFilters17SRGBToLinearGammaEv(%class.sk_sp.65* noalias sret) local_unnamed_addr #0 align 2 {
  tail call void @_Z15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE1EE5sk_spI13SkColorFilterEv(%class.sk_sp.65* sret %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE1EE5sk_spI13SkColorFilterEv(%class.sk_sp.65* noalias sret) local_unnamed_addr #0 comdat {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE1EE5sk_spI13SkColorFilterEvE10gSingleton to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %18, !prof !43

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE1EE5sk_spI13SkColorFilterEvE10gSingleton) #11
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 120) #12
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV22SkSRGBGammaColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 1, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %8, i64 16
  %15 = bitcast i8* %14 to %struct.SkColorSpaceXformSteps*
  %16 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #11
  %17 = tail call %class.SkColorSpace* @_Z24sk_srgb_linear_singletonv() #11
  tail call void @_ZN22SkColorSpaceXformStepsC1EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* %15, %class.SkColorSpace* %16, i32 3, %class.SkColorSpace* %17, i32 3) #11
  store i8* %8, i8** bitcast (%class.SkColorFilter** @_ZZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE1EE5sk_spI13SkColorFilterEvE10gSingleton to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE1EE5sk_spI13SkColorFilterEvE10gSingleton) #11
  br label %18

18:                                               ; preds = %4, %7, %1
  %19 = load %class.SkColorFilter*, %class.SkColorFilter** @_ZZ15MakeSRGBGammaCFILN22SkSRGBGammaColorFilter9DirectionE1EE5sk_spI13SkColorFilterEvE10gSingleton, align 8
  %20 = icmp eq %class.SkColorFilter* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 monotonic, !noalias !47
  br label %24

24:                                               ; preds = %18, %21
  %25 = getelementptr inbounds %class.sk_sp.65, %class.sk_sp.65* %0, i64 0, i32 0
  store %class.SkColorFilter* %19, %class.SkColorFilter** %25, align 8, !alias.scope !47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26SkWorkingFormatColorFilter10CreateProcER12SkReadBuffer(%class.sk_sp.105* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #0 align 2 {
  %3 = alloca %struct.skcms_TransferFunction, align 4
  %4 = alloca %struct.skcms_Matrix3x3, align 4
  %5 = alloca i32, align 4
  %6 = tail call %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer* %1, i32 0) #11, !noalias !50
  %7 = ptrtoint %class.SkFlattenable* %6 to i64
  %8 = tail call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %1) #11
  %9 = tail call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %1) #11
  %10 = tail call zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* %1) #11
  %11 = bitcast %struct.skcms_TransferFunction* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %11) #11
  %12 = bitcast %struct.skcms_Matrix3x3* %4 to i8*
  %13 = bitcast %struct.skcms_TransferFunction* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 -1, i64 28, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 -1, i64 36, i1 false)
  %14 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14)
  store i32 -1431655766, i32* %5, align 4
  br i1 %8, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.skcms_TransferFunction, %struct.skcms_TransferFunction* %3, i64 0, i32 0
  %17 = call zeroext i1 @_ZN12SkReadBuffer15readScalarArrayEPfm(%class.SkReadBuffer* %1, float* nonnull %16, i64 7) #11
  br label %18

18:                                               ; preds = %15, %2
  br i1 %9, label %22, label %19

19:                                               ; preds = %18
  %20 = getelementptr inbounds %struct.skcms_Matrix3x3, %struct.skcms_Matrix3x3* %4, i64 0, i32 0, i64 0, i64 0
  %21 = call zeroext i1 @_ZN12SkReadBuffer15readScalarArrayEPfm(%class.SkReadBuffer* %1, float* nonnull %20, i64 9) #11
  br label %22

22:                                               ; preds = %19, %18
  br i1 %10, label %32, label %23

23:                                               ; preds = %22
  %24 = call i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* %1) #11
  %25 = icmp ugt i32 %24, 3
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* %1) #11
  br label %27

27:                                               ; preds = %23, %26
  %28 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %29 = load i8, i8* %28, align 8, !range !42
  %30 = icmp eq i8 %29, 0
  %31 = select i1 %30, i32 %24, i32 0
  store i32 %31, i32* %5, align 4
  br label %32

32:                                               ; preds = %27, %22
  %33 = select i1 %10, i32* null, i32* %5
  %34 = call i8* @_Znwm(i64 104) #12, !noalias !55
  %35 = getelementptr inbounds i8, i8* %34, i64 8
  %36 = bitcast i8* %35 to i32*
  store i32 1, i32* %36, align 4, !noalias !55
  %37 = bitcast i8* %34 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV26SkWorkingFormatColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8, !noalias !55
  %38 = getelementptr inbounds i8, i8* %34, i64 16
  %39 = getelementptr inbounds i8, i8* %34, i64 52
  store i8 1, i8* %39, align 4, !noalias !55
  %40 = getelementptr inbounds i8, i8* %34, i64 92
  store i8 1, i8* %40, align 4, !noalias !55
  %41 = getelementptr inbounds i8, i8* %34, i64 100
  store i8 1, i8* %41, align 4, !noalias !55
  %42 = bitcast i8* %38 to i64*
  store i64 %7, i64* %42, align 8, !noalias !55
  br i1 %8, label %45, label %43

43:                                               ; preds = %32
  %44 = getelementptr inbounds i8, i8* %34, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 4 %11, i64 28, i1 false) #11, !noalias !55
  store i8 0, i8* %39, align 4, !noalias !55
  br label %45

45:                                               ; preds = %43, %32
  br i1 %9, label %48, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds i8, i8* %34, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 4 %12, i64 36, i1 false) #11, !noalias !55
  store i8 0, i8* %40, align 4, !noalias !55
  br label %48

48:                                               ; preds = %46, %45
  br i1 %10, label %53, label %49

49:                                               ; preds = %48
  %50 = load i32, i32* %33, align 4, !noalias !55
  %51 = getelementptr inbounds i8, i8* %34, i64 96
  %52 = bitcast i8* %51 to i32*
  store i32 %50, i32* %52, align 8, !noalias !55
  store i8 0, i8* %41, align 4, !noalias !55
  br label %53

53:                                               ; preds = %49, %48
  %54 = ptrtoint i8* %34 to i64
  %55 = bitcast %class.sk_sp.105* %0 to i64*
  store i64 %54, i64* %55, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %11) #11
  ret void
}

declare zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer*) local_unnamed_addr #3

declare zeroext i1 @_ZN12SkReadBuffer15readScalarArrayEPfm(%class.SkReadBuffer*, float*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkColorFilters17WithWorkingFormatE5sk_spI13SkColorFilterEPK22skcms_TransferFunctionPK15skcms_Matrix3x3PK11SkAlphaType(%class.sk_sp.65* noalias nocapture sret, %class.sk_sp.65* nocapture, %struct.skcms_TransferFunction*, %struct.skcms_Matrix3x3*, i32*) local_unnamed_addr #0 align 2 {
  %6 = tail call i8* @_Znwm(i64 104) #12, !noalias !60
  %7 = getelementptr inbounds %class.sk_sp.65, %class.sk_sp.65* %1, i64 0, i32 0
  %8 = bitcast %class.sk_sp.65* %1 to i64*
  %9 = load i64, i64* %8, align 8, !noalias !60
  store %class.SkColorFilter* null, %class.SkColorFilter** %7, align 8, !noalias !60
  %10 = getelementptr inbounds i8, i8* %6, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4, !noalias !60
  %12 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV26SkWorkingFormatColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8, !noalias !60
  %13 = getelementptr inbounds i8, i8* %6, i64 16
  %14 = getelementptr inbounds i8, i8* %6, i64 52
  store i8 1, i8* %14, align 4, !noalias !60
  %15 = getelementptr inbounds i8, i8* %6, i64 92
  store i8 1, i8* %15, align 4, !noalias !60
  %16 = getelementptr inbounds i8, i8* %6, i64 100
  store i8 1, i8* %16, align 4, !noalias !60
  %17 = bitcast i8* %13 to i64*
  store i64 %9, i64* %17, align 8, !noalias !60
  %18 = icmp eq %struct.skcms_TransferFunction* %2, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds i8, i8* %6, i64 24
  %21 = bitcast %struct.skcms_TransferFunction* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* nonnull align 4 %21, i64 28, i1 false) #11, !noalias !60
  store i8 0, i8* %14, align 4, !noalias !60
  br label %22

22:                                               ; preds = %19, %5
  %23 = icmp eq %struct.skcms_Matrix3x3* %3, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds i8, i8* %6, i64 56
  %26 = bitcast %struct.skcms_Matrix3x3* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* nonnull align 4 %26, i64 36, i1 false) #11, !noalias !60
  store i8 0, i8* %15, align 4, !noalias !60
  br label %27

27:                                               ; preds = %24, %22
  %28 = icmp eq i32* %4, null
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = load i32, i32* %4, align 4, !noalias !60
  %31 = getelementptr inbounds i8, i8* %6, i64 96
  %32 = bitcast i8* %31 to i32*
  store i32 %30, i32* %32, align 8, !noalias !60
  store i8 0, i8* %16, align 4, !noalias !60
  br label %33

33:                                               ; preds = %29, %27
  %34 = ptrtoint i8* %6 to i64
  %35 = bitcast %class.sk_sp.65* %0 to i64*
  store i64 %34, i64* %35, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14SkColorFilters4LerpEf5sk_spI13SkColorFilterES2_(%class.sk_sp.65* noalias sret, float, %class.sk_sp.65* nocapture, %class.sk_sp.65* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkString, align 8
  %6 = alloca float, align 4
  %7 = alloca %class.sk_sp.108, align 8
  %8 = alloca [2 x %class.sk_sp.65], align 16
  %9 = alloca %class.sk_sp.150, align 8
  store float %1, float* %6, align 4
  %10 = getelementptr inbounds %class.sk_sp.65, %class.sk_sp.65* %2, i64 0, i32 0
  %11 = load %class.SkColorFilter*, %class.SkColorFilter** %10, align 8
  %12 = icmp eq %class.SkColorFilter* %11, null
  %13 = ptrtoint %class.SkColorFilter* %11 to i64
  br i1 %12, label %14, label %20

14:                                               ; preds = %4
  %15 = getelementptr inbounds %class.sk_sp.65, %class.sk_sp.65* %3, i64 0, i32 0
  %16 = load %class.SkColorFilter*, %class.SkColorFilter** %15, align 8
  %17 = icmp eq %class.SkColorFilter* %16, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.sk_sp.65, %class.sk_sp.65* %0, i64 0, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %19, align 8
  br label %100

20:                                               ; preds = %14, %4
  %21 = fcmp uno float %1, 0.000000e+00
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = getelementptr inbounds %class.sk_sp.65, %class.sk_sp.65* %0, i64 0, i32 0
  store %class.SkColorFilter* null, %class.SkColorFilter** %23, align 8
  br label %100

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.sk_sp.65, %class.sk_sp.65* %3, i64 0, i32 0
  %26 = load %class.SkColorFilter*, %class.SkColorFilter** %25, align 8
  %27 = icmp eq %class.SkColorFilter* %11, %26
  %28 = ptrtoint %class.SkColorFilter* %26 to i64
  br i1 %27, label %29, label %31

29:                                               ; preds = %24
  store %class.SkColorFilter* null, %class.SkColorFilter** %10, align 8
  %30 = bitcast %class.sk_sp.65* %0 to i64*
  store i64 %13, i64* %30, align 8
  br label %100

31:                                               ; preds = %24
  %32 = fcmp ugt float %1, 0.000000e+00
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  store %class.SkColorFilter* null, %class.SkColorFilter** %10, align 8
  %34 = bitcast %class.sk_sp.65* %0 to i64*
  store i64 %13, i64* %34, align 8
  br label %100

35:                                               ; preds = %31
  %36 = fcmp ult float %1, 1.000000e+00
  br i1 %36, label %39, label %37

37:                                               ; preds = %35
  store %class.SkColorFilter* null, %class.SkColorFilter** %25, align 8
  %38 = bitcast %class.sk_sp.65* %0 to i64*
  store i64 %28, i64* %38, align 8
  br label %100

39:                                               ; preds = %35
  %40 = bitcast %class.sk_sp.108* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  %41 = getelementptr inbounds %class.sk_sp.108, %class.sk_sp.108* %7, i64 0, i32 0
  store %class.SkRuntimeEffect* inttoptr (i64 -6148914691236517206 to %class.SkRuntimeEffect*), %class.SkRuntimeEffect** %41, align 8
  %42 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %5, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @.str.1, i64 0, i64 0)) #11, !noalias !63
  call void @_Z25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_(%class.sk_sp.108* nonnull sret %7, void (%"struct.SkRuntimeEffect::Result"*, %class.SkString*)* nonnull @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString, %class.SkString* nonnull %5) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  %43 = bitcast [2 x %class.sk_sp.65]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #11
  %44 = getelementptr inbounds [2 x %class.sk_sp.65], [2 x %class.sk_sp.65]* %8, i64 0, i64 0
  %45 = getelementptr inbounds [2 x %class.sk_sp.65], [2 x %class.sk_sp.65]* %8, i64 0, i64 0, i32 0
  %46 = getelementptr inbounds [2 x %class.sk_sp.65], [2 x %class.sk_sp.65]* %8, i64 0, i64 1, i32 0
  %47 = bitcast [2 x %class.sk_sp.65]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %47, i8 -86, i64 16, i1 false)
  %48 = load %class.SkColorFilter*, %class.SkColorFilter** %10, align 8
  %49 = icmp eq %class.SkColorFilter* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %39
  %51 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %48, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 1 monotonic
  br label %53

53:                                               ; preds = %39, %50
  store %class.SkColorFilter* %48, %class.SkColorFilter** %45, align 16
  %54 = load %class.SkColorFilter*, %class.SkColorFilter** %25, align 8
  %55 = icmp eq %class.SkColorFilter* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %54, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 1 monotonic
  br label %59

59:                                               ; preds = %53, %56
  store %class.SkColorFilter* %54, %class.SkColorFilter** %46, align 8
  %60 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %41, align 8
  %61 = bitcast float* %6 to i8*
  call void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.150* nonnull sret %9, i8* nonnull %61, i64 4) #11
  call void @_ZNK15SkRuntimeEffect15makeColorFilterE5sk_spI6SkDataEPS0_I13SkColorFilterEm(%class.sk_sp.65* sret %0, %class.SkRuntimeEffect* %60, %class.sk_sp.150* nonnull %9, %class.sk_sp.65* nonnull %44, i64 2) #11
  %62 = getelementptr inbounds %class.sk_sp.150, %class.sk_sp.150* %9, i64 0, i32 0
  %63 = load %class.SkData*, %class.SkData** %62, align 8
  %64 = icmp eq %class.SkData* %63, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %class.SkData, %class.SkData* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 -1 acq_rel
  %68 = icmp eq i32 %67, 1
  br i1 %68, label %69, label %71

69:                                               ; preds = %65
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %63) #11
  %70 = bitcast %class.SkData* %63 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %70) #11
  br label %71

71:                                               ; preds = %59, %65, %69
  %72 = getelementptr inbounds [2 x %class.sk_sp.65], [2 x %class.sk_sp.65]* %8, i64 0, i64 1, i32 0
  %73 = load %class.SkColorFilter*, %class.SkColorFilter** %72, align 8
  %74 = icmp eq %class.SkColorFilter* %73, null
  br i1 %74, label %85, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %73, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = bitcast %class.SkColorFilter* %73 to %class.SkRefCntBase*
  %81 = bitcast %class.SkColorFilter* %73 to void (%class.SkRefCntBase*)***
  %82 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %82, i64 2
  %84 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %83, align 8
  call void %84(%class.SkRefCntBase* nonnull %80) #11
  br label %85

85:                                               ; preds = %71, %75, %79
  %86 = getelementptr inbounds [2 x %class.sk_sp.65], [2 x %class.sk_sp.65]* %8, i64 0, i64 0, i32 0
  %87 = load %class.SkColorFilter*, %class.SkColorFilter** %86, align 16
  %88 = icmp eq %class.SkColorFilter* %87, null
  br i1 %88, label %111, label %101

89:                                               ; preds = %111
  %90 = getelementptr inbounds %class.SkRuntimeEffect, %class.SkRuntimeEffect* %112, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = atomicrmw add i32* %90, i32 -1 acq_rel
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %93, label %99

93:                                               ; preds = %89
  %94 = bitcast %class.SkRuntimeEffect* %112 to %class.SkRefCntBase*
  %95 = bitcast %class.SkRuntimeEffect* %112 to void (%class.SkRefCntBase*)***
  %96 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %95, align 8
  %97 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %96, i64 2
  %98 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %97, align 8
  call void %98(%class.SkRefCntBase* nonnull %94) #11
  br label %99

99:                                               ; preds = %111, %89, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11
  br label %100

100:                                              ; preds = %99, %37, %33, %29, %22, %18
  ret void

101:                                              ; preds = %85
  %102 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %87, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 -1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %111

105:                                              ; preds = %101
  %106 = bitcast %class.SkColorFilter* %87 to %class.SkRefCntBase*
  %107 = bitcast %class.SkColorFilter* %87 to void (%class.SkRefCntBase*)***
  %108 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %107, align 8
  %109 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, i64 2
  %110 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, align 8
  call void %110(%class.SkRefCntBase* nonnull %106) #11
  br label %111

111:                                              ; preds = %105, %101, %85
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #11
  %112 = load %class.SkRuntimeEffect*, %class.SkRuntimeEffect** %41, align 8
  %113 = icmp eq %class.SkRuntimeEffect* %112, null
  br i1 %113, label %99, label %89
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkString(%"struct.SkRuntimeEffect::Result"* noalias sret, %class.SkString*) #0 comdat align 2 {
  %3 = alloca %class.SkString, align 8
  %4 = alloca %"struct.SkRuntimeEffect::Options", align 1
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %3, %class.SkString* dereferenceable(8) %1) #11
  %5 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %5) #11
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"struct.SkRuntimeEffect::Options", %"struct.SkRuntimeEffect::Options"* %4, i64 0, i32 1
  store i8 1, i8* %6, align 1
  call void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* sret %0, %class.SkString* nonnull %3, %"struct.SkRuntimeEffect::Options"* nonnull dereferenceable(2) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %5) #11
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #11
  ret void
}

declare void @_ZNK15SkRuntimeEffect15makeColorFilterE5sk_spI6SkDataEPS0_I13SkColorFilterEm(%class.sk_sp.65* sret, %class.SkRuntimeEffect*, %class.sk_sp.150*, %class.sk_sp.65*, i64) local_unnamed_addr #3

declare void @_ZN6SkData12MakeWithCopyEPKvm(%class.sk_sp.150* sret, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN17SkColorFilterBase20RegisterFlattenablesEv() local_unnamed_addr #0 align 2 {
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), void (%class.sk_sp.105*, %class.SkReadBuffer*)* nonnull @_ZN20SkComposeColorFilter10CreateProcER12SkReadBuffer) #11
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), void (%class.sk_sp.105*, %class.SkReadBuffer*)* nonnull @_ZN17SkModeColorFilter10CreateProcER12SkReadBuffer) #11
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), void (%class.sk_sp.105*, %class.SkReadBuffer*)* nonnull @_ZN22SkSRGBGammaColorFilter10CreateProcER12SkReadBuffer) #11
  tail call void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), void (%class.sk_sp.105*, %class.SkReadBuffer*)* nonnull @_ZN26SkWorkingFormatColorFilter10CreateProcER12SkReadBuffer) #11
  ret void
}

declare void @_ZN13SkFlattenable8RegisterEPKcPF5sk_spIS_ER12SkReadBufferE(i8*, void (%class.sk_sp.105*, %class.SkReadBuffer*)*) local_unnamed_addr #3

declare void @_ZN17SkModeColorFilter10CreateProcER12SkReadBuffer(%class.sk_sp.105* sret, %class.SkReadBuffer* dereferenceable(136)) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17SkColorFilterBaseD0Ev(%class.SkColorFilterBase*) unnamed_addr #7 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #11
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK13SkFlattenable7flattenER13SkWriteBuffer(%class.SkFlattenable*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK17SkColorFilterBase18getFlattenableTypeEv(%class.SkColorFilterBase*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK17SkColorFilterBase18onIsAlphaUnchangedEv(%class.SkColorFilterBase*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkSimpleMatrixProviderD0Ev(%class.SkSimpleMatrixProvider*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %class.SkSimpleMatrixProvider* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkSimpleMatrixProvider16getLocalToMarkerEjP5SkM44(%class.SkSimpleMatrixProvider*, i32, %class.SkM44*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkSimpleMatrixProvider29localToDeviceHitsPixelCentersEv(%class.SkSimpleMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMatrixProviderD0Ev(%class.SkMatrixProvider*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare i32 @_ZN4skvm7Builder3argEi(%"class.skvm::Builder"*, i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN12SkArenaAllocD2Ev(%class.SkArenaAlloc*) unnamed_addr #5

declare %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer*, i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20SkComposeColorFilterD2Ev(%class.SkComposeColorFilter*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV20SkComposeColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %3, align 8
  %5 = icmp eq %class.SkColorFilterBase* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorFilterBase, %class.SkColorFilterBase* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorFilterBase* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkColorFilterBase* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %0, i64 0, i32 1, i32 0
  %18 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %17, align 8
  %19 = icmp eq %class.SkColorFilterBase* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkColorFilterBase, %class.SkColorFilterBase* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkColorFilterBase* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkColorFilterBase* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #11
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20SkComposeColorFilterD0Ev(%class.SkComposeColorFilter*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV20SkComposeColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %3, align 8
  %5 = icmp eq %class.SkColorFilterBase* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorFilterBase, %class.SkColorFilterBase* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorFilterBase* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkColorFilterBase* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %0, i64 0, i32 1, i32 0
  %18 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %17, align 8
  %19 = icmp eq %class.SkColorFilterBase* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkColorFilterBase, %class.SkColorFilterBase* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %class.SkColorFilterBase* %18 to %class.SkRefCntBase*
  %26 = bitcast %class.SkColorFilterBase* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #11
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %class.SkComposeColorFilter* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.105*, %class.SkReadBuffer*)* @_ZNK20SkComposeColorFilter10getFactoryEv(%class.SkComposeColorFilter*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.105*, %class.SkReadBuffer*)* @_ZN20SkComposeColorFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK20SkComposeColorFilter11getTypeNameEv(%class.SkComposeColorFilter*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK20SkComposeColorFilter7flattenER13SkWriteBuffer(%class.SkComposeColorFilter*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %0, i64 0, i32 1, i32 0
  %4 = bitcast %class.SkColorFilterBase** %3 to %class.SkFlattenable**
  %5 = load %class.SkFlattenable*, %class.SkFlattenable** %4, align 8
  %6 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkFlattenable*)***
  %7 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %7, i64 11
  %9 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %8, align 8
  tail call void %9(%class.SkWriteBuffer* %1, %class.SkFlattenable* %5) #11
  %10 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %0, i64 0, i32 2, i32 0
  %11 = bitcast %class.SkColorFilterBase** %10 to %class.SkFlattenable**
  %12 = load %class.SkFlattenable*, %class.SkFlattenable** %11, align 8
  %13 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %6, align 8
  %14 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %13, i64 11
  %15 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %14, align 8
  tail call void %15(%class.SkWriteBuffer* %1, %class.SkFlattenable* %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK20SkComposeColorFilter18onIsAlphaUnchangedEv(%class.SkComposeColorFilter*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %0, i64 0, i32 1, i32 0
  %3 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %2, align 8
  %4 = bitcast %class.SkColorFilterBase* %3 to i1 (%class.SkColorFilterBase*)***
  %5 = load i1 (%class.SkColorFilterBase*)**, i1 (%class.SkColorFilterBase*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %5, i64 7
  %7 = load i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %6, align 8
  %8 = tail call zeroext i1 %7(%class.SkColorFilterBase* %3) #11
  %9 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %0, i64 0, i32 2, i32 0
  %10 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %9, align 8
  %11 = bitcast %class.SkColorFilterBase* %10 to i1 (%class.SkColorFilterBase*)***
  %12 = load i1 (%class.SkColorFilterBase*)**, i1 (%class.SkColorFilterBase*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %12, i64 7
  %14 = load i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %13, align 8
  %15 = tail call zeroext i1 %14(%class.SkColorFilterBase* %10) #11
  %16 = and i1 %8, %15
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8, %class.GrFragmentProcessor* } @_ZNK20SkComposeColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo(%class.SkComposeColorFilter*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %0, i64 0, i32 2, i32 0
  %6 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %5, align 8
  %7 = bitcast %class.SkColorFilterBase* %6 to { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)***
  %8 = load { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)**, { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)*** %7, align 8
  %9 = getelementptr inbounds { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)*, { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)** %8, i64 8
  %10 = load { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)*, { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)** %9, align 8
  %11 = tail call { i8, %class.GrFragmentProcessor* } %10(%class.SkColorFilterBase* %6, %class.GrFragmentProcessor* %1, %class.GrRecordingContext* %2, %class.GrColorInfo* dereferenceable(24) %3) #11
  %12 = extractvalue { i8, %class.GrFragmentProcessor* } %11, 0
  %13 = extractvalue { i8, %class.GrFragmentProcessor* } %11, 1
  %14 = icmp eq i8 %12, 0
  br i1 %14, label %38, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %0, i64 0, i32 1, i32 0
  %17 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %16, align 8
  %18 = bitcast %class.SkColorFilterBase* %17 to { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)***
  %19 = load { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)**, { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)*** %18, align 8
  %20 = getelementptr inbounds { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)*, { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)** %19, i64 8
  %21 = load { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)*, { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)** %20, align 8
  %22 = tail call { i8, %class.GrFragmentProcessor* } %21(%class.SkColorFilterBase* %17, %class.GrFragmentProcessor* %13, %class.GrRecordingContext* %2, %class.GrColorInfo* dereferenceable(24) %3) #11
  %23 = extractvalue { i8, %class.GrFragmentProcessor* } %22, 0
  %24 = extractvalue { i8, %class.GrFragmentProcessor* } %22, 1
  %25 = icmp eq i8 %23, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %15
  %27 = bitcast %class.GrFragmentProcessor* %1 to %class.GrFragmentProcessor* (%class.GrFragmentProcessor*)***
  %28 = load %class.GrFragmentProcessor* (%class.GrFragmentProcessor*)**, %class.GrFragmentProcessor* (%class.GrFragmentProcessor*)*** %27, align 8
  %29 = getelementptr inbounds %class.GrFragmentProcessor* (%class.GrFragmentProcessor*)*, %class.GrFragmentProcessor* (%class.GrFragmentProcessor*)** %28, i64 3
  %30 = load %class.GrFragmentProcessor* (%class.GrFragmentProcessor*)*, %class.GrFragmentProcessor* (%class.GrFragmentProcessor*)** %29, align 8
  %31 = tail call %class.GrFragmentProcessor* %30(%class.GrFragmentProcessor* %1) #11
  %32 = icmp eq %class.GrFragmentProcessor* %24, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %26
  %34 = bitcast %class.GrFragmentProcessor* %24 to void (%class.GrFragmentProcessor*)***
  %35 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %34, align 8
  %36 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %35, i64 1
  %37 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %36, align 8
  tail call void %37(%class.GrFragmentProcessor* nonnull %24) #11
  br label %38

38:                                               ; preds = %33, %26, %15, %4
  %39 = phi i8 [ 0, %4 ], [ 0, %26 ], [ 0, %33 ], [ 1, %15 ]
  %40 = phi %class.GrFragmentProcessor* [ %13, %4 ], [ %31, %26 ], [ %31, %33 ], [ %24, %15 ]
  %41 = insertvalue { i8, %class.GrFragmentProcessor* } undef, i8 %39, 0
  %42 = insertvalue { i8, %class.GrFragmentProcessor* } %41, %class.GrFragmentProcessor* %40, 1
  ret { i8, %class.GrFragmentProcessor* } %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK20SkComposeColorFilter14onAppendStagesERK10SkStageRecb(%class.SkComposeColorFilter*, %struct.SkStageRec* dereferenceable(56), i1 zeroext) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %0, i64 0, i32 2, i32 0
  %5 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %4, align 8
  %6 = bitcast %class.SkColorFilterBase* %5 to i1 (%class.SkColorFilterBase*)***
  %7 = load i1 (%class.SkColorFilterBase*)**, i1 (%class.SkColorFilterBase*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %7, i64 7
  %9 = load i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %8, align 8
  %10 = tail call zeroext i1 %9(%class.SkColorFilterBase* %5) #11
  %11 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %4, align 8
  %12 = bitcast %class.SkColorFilterBase* %11 to i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)***
  %13 = load i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)**, i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)*** %12, align 8
  %14 = getelementptr inbounds i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)*, i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)** %13, i64 12
  %15 = load i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)*, i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)** %14, align 8
  %16 = tail call zeroext i1 %15(%class.SkColorFilterBase* %11, %struct.SkStageRec* dereferenceable(56) %1, i1 zeroext %2) #11
  br i1 %16, label %17, label %26

17:                                               ; preds = %3
  %18 = and i1 %10, %2
  %19 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %0, i64 0, i32 1, i32 0
  %20 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %19, align 8
  %21 = bitcast %class.SkColorFilterBase* %20 to i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)***
  %22 = load i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)**, i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)*** %21, align 8
  %23 = getelementptr inbounds i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)*, i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)** %22, i64 12
  %24 = load i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)*, i1 (%class.SkColorFilterBase*, %struct.SkStageRec*, i1)** %23, align 8
  %25 = tail call zeroext i1 %24(%class.SkColorFilterBase* %20, %struct.SkStageRec* dereferenceable(56) %1, i1 zeroext %18) #11
  br label %26

26:                                               ; preds = %17, %3
  %27 = phi i1 [ false, %3 ], [ %25, %17 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK20SkComposeColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias sret, %class.SkComposeColorFilter*, %"class.skvm::Builder"*, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.skvm::Color", align 8
  %9 = alloca %"struct.skvm::Color", align 8
  %10 = alloca %"struct.skvm::Color", align 8
  %11 = alloca %"struct.skvm::Color", align 8
  %12 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %1, i64 0, i32 2, i32 0
  %13 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %12, align 8
  %14 = bitcast %"struct.skvm::Color"* %3 to i8*
  %15 = bitcast %"struct.skvm::Color"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %15)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %14, i64 64, i1 false)
  %16 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 3, i32 0
  %17 = bitcast %"class.skvm::Builder"** %16 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !66
  %19 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 3, i32 1
  %20 = load i32, i32* %19, align 8, !noalias !66
  %21 = bitcast %"struct.skvm::Color"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %21) #11, !noalias !66
  %22 = bitcast %class.SkColorFilterBase* %13 to void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)***
  %23 = load void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)**, void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)*** %22, align 8, !noalias !66
  %24 = getelementptr inbounds void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)*, void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)** %23, i64 13
  %25 = load void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)*, void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)** %24, align 8, !noalias !66
  call void %25(%"struct.skvm::Color"* nonnull sret %8, %class.SkColorFilterBase* %13, %"class.skvm::Builder"* %2, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %3, %class.SkColorSpace* %4, %"struct.skvm::Uniforms"* %5, %class.SkArenaAlloc* %6) #11, !noalias !66
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* nonnull align 8 %21, i64 64, i1 false) #11, !noalias !66
  %26 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8, !noalias !66
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %37, label %29

29:                                               ; preds = %7
  %30 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 1, i32 1
  %31 = load i32, i32* %30, align 8, !noalias !66
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %37, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 2, i32 1
  %35 = load i32, i32* %34, align 8, !noalias !66
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %38

37:                                               ; preds = %33, %29, %7
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %21) #11, !noalias !66
  br label %76

38:                                               ; preds = %33
  %39 = load i32, i32* %19, align 8, !noalias !66
  %40 = icmp eq i32 %39, -1
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %21) #11, !noalias !66
  br i1 %40, label %76, label %41

41:                                               ; preds = %38
  %42 = bitcast %class.SkColorFilterBase* %13 to i1 (%class.SkColorFilterBase*)***
  %43 = load i1 (%class.SkColorFilterBase*)**, i1 (%class.SkColorFilterBase*)*** %42, align 8, !noalias !66
  %44 = getelementptr inbounds i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %43, i64 7
  %45 = load i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %44, align 8, !noalias !66
  %46 = call zeroext i1 %45(%class.SkColorFilterBase* %13) #11, !noalias !66
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %16, align 8
  %49 = load i32, i32* %19, align 8
  br label %52

50:                                               ; preds = %41
  store i64 %18, i64* %17, align 8, !noalias !66
  store i32 %20, i32* %19, align 8, !noalias !66
  %51 = inttoptr i64 %18 to %"class.skvm::Builder"*
  br label %52

52:                                               ; preds = %47, %50
  %53 = phi i32 [ %49, %47 ], [ %20, %50 ]
  %54 = phi %"class.skvm::Builder"* [ %48, %47 ], [ %51, %50 ]
  %55 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 0, i32 0
  %56 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %55, align 8
  %57 = load i32, i32* %26, align 8
  %58 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 0, i32 2
  %59 = bitcast [4 x i8]* %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 1, i32 0
  %62 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %61, align 8
  %63 = load i32, i32* %30, align 8
  %64 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 1, i32 2
  %65 = bitcast [4 x i8]* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 2, i32 0
  %68 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %67, align 8
  %69 = load i32, i32* %34, align 8
  %70 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 2, i32 2
  %71 = bitcast [4 x i8]* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 3, i32 2
  %74 = bitcast [4 x i8]* %73 to i32*
  %75 = load i32, i32* %74, align 4
  br label %76

76:                                               ; preds = %37, %38, %52
  %77 = phi i32 [ %75, %52 ], [ undef, %38 ], [ undef, %37 ]
  %78 = phi i32 [ %53, %52 ], [ -1, %38 ], [ -1, %37 ]
  %79 = phi %"class.skvm::Builder"* [ %54, %52 ], [ null, %38 ], [ null, %37 ]
  %80 = phi i32 [ %72, %52 ], [ undef, %38 ], [ undef, %37 ]
  %81 = phi i32 [ %69, %52 ], [ -1, %38 ], [ -1, %37 ]
  %82 = phi %"class.skvm::Builder"* [ %68, %52 ], [ null, %38 ], [ null, %37 ]
  %83 = phi i32 [ %66, %52 ], [ undef, %38 ], [ undef, %37 ]
  %84 = phi i32 [ %63, %52 ], [ -1, %38 ], [ -1, %37 ]
  %85 = phi %"class.skvm::Builder"* [ %62, %52 ], [ null, %38 ], [ null, %37 ]
  %86 = phi i32 [ %60, %52 ], [ undef, %38 ], [ undef, %37 ]
  %87 = phi i32 [ %57, %52 ], [ -1, %38 ], [ -1, %37 ]
  %88 = phi %"class.skvm::Builder"* [ %56, %52 ], [ null, %38 ], [ null, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %15)
  %89 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 0, i32 0
  store %"class.skvm::Builder"* %88, %"class.skvm::Builder"** %89, align 8
  %90 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 0, i32 1
  store i32 %87, i32* %90, align 8
  %91 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 0, i32 2
  %92 = bitcast [4 x i8]* %91 to i32*
  store i32 %86, i32* %92, align 4
  %93 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 1, i32 0
  store %"class.skvm::Builder"* %85, %"class.skvm::Builder"** %93, align 8
  %94 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 1, i32 1
  store i32 %84, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 1, i32 2
  %96 = bitcast [4 x i8]* %95 to i32*
  store i32 %83, i32* %96, align 4
  %97 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 2, i32 0
  store %"class.skvm::Builder"* %82, %"class.skvm::Builder"** %97, align 8
  %98 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 2, i32 1
  store i32 %81, i32* %98, align 8
  %99 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 2, i32 2
  %100 = bitcast [4 x i8]* %99 to i32*
  store i32 %80, i32* %100, align 4
  %101 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %79, %"class.skvm::Builder"** %101, align 8
  %102 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 3, i32 1
  store i32 %78, i32* %102, align 8
  %103 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 3, i32 2
  %104 = bitcast [4 x i8]* %103 to i32*
  store i32 %77, i32* %104, align 4
  %105 = icmp eq i32 %87, -1
  %106 = icmp eq i32 %84, -1
  %107 = or i1 %106, %105
  %108 = icmp eq i32 %81, -1
  %109 = or i1 %108, %107
  %110 = xor i1 %109, true
  %111 = icmp ne i32 %78, -1
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %161

113:                                              ; preds = %76
  %114 = getelementptr inbounds %class.SkComposeColorFilter, %class.SkComposeColorFilter* %1, i64 0, i32 1, i32 0
  %115 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %114, align 8
  %116 = bitcast %"struct.skvm::Color"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %116)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %116, i8* nonnull align 8 %14, i64 64, i1 false)
  %117 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %11, i64 0, i32 3, i32 0
  %118 = bitcast %"class.skvm::Builder"** %117 to i64*
  %119 = load i64, i64* %118, align 8, !noalias !69
  %120 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %11, i64 0, i32 3, i32 1
  %121 = load i32, i32* %120, align 8, !noalias !69
  %122 = bitcast %"struct.skvm::Color"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %122) #11, !noalias !69
  %123 = bitcast %class.SkColorFilterBase* %115 to void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)***
  %124 = load void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)**, void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)*** %123, align 8, !noalias !69
  %125 = getelementptr inbounds void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)*, void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)** %124, i64 13
  %126 = load void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)*, void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)** %125, align 8, !noalias !69
  call void %126(%"struct.skvm::Color"* nonnull sret %10, %class.SkColorFilterBase* %115, %"class.skvm::Builder"* %2, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %11, %class.SkColorSpace* %4, %"struct.skvm::Uniforms"* %5, %class.SkArenaAlloc* %6) #11, !noalias !69
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %116, i8* nonnull align 8 %122, i64 64, i1 false) #11, !noalias !69
  %127 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %11, i64 0, i32 0, i32 1
  %128 = load i32, i32* %127, align 8, !noalias !69
  %129 = icmp eq i32 %128, -1
  br i1 %129, label %138, label %130

130:                                              ; preds = %113
  %131 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %11, i64 0, i32 1, i32 1
  %132 = load i32, i32* %131, align 8, !noalias !69
  %133 = icmp eq i32 %132, -1
  br i1 %133, label %138, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %11, i64 0, i32 2, i32 1
  %136 = load i32, i32* %135, align 8, !noalias !69
  %137 = icmp eq i32 %136, -1
  br i1 %137, label %138, label %139

138:                                              ; preds = %134, %130, %113
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %122) #11, !noalias !69
  br label %151

139:                                              ; preds = %134
  %140 = load i32, i32* %120, align 8, !noalias !69
  %141 = icmp eq i32 %140, -1
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %122) #11, !noalias !69
  br i1 %141, label %151, label %142

142:                                              ; preds = %139
  %143 = bitcast %class.SkColorFilterBase* %115 to i1 (%class.SkColorFilterBase*)***
  %144 = load i1 (%class.SkColorFilterBase*)**, i1 (%class.SkColorFilterBase*)*** %143, align 8, !noalias !69
  %145 = getelementptr inbounds i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %144, i64 7
  %146 = load i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %145, align 8, !noalias !69
  %147 = call zeroext i1 %146(%class.SkColorFilterBase* %115) #11, !noalias !69
  br i1 %147, label %148, label %149

148:                                              ; preds = %142
  store i64 %119, i64* %118, align 8, !noalias !69
  store i32 %121, i32* %120, align 8, !noalias !69
  br label %149

149:                                              ; preds = %148, %142
  %150 = bitcast %"struct.skvm::Color"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* nonnull align 8 %116, i64 64, i1 false) #11
  br label %160

151:                                              ; preds = %139, %138
  %152 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %152, align 8, !alias.scope !69
  %153 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 1
  store i32 -1, i32* %153, align 8, !alias.scope !69
  %154 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %154, align 8, !alias.scope !69
  %155 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 1
  store i32 -1, i32* %155, align 8, !alias.scope !69
  %156 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %156, align 8, !alias.scope !69
  %157 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 1
  store i32 -1, i32* %157, align 8, !alias.scope !69
  %158 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %158, align 8, !alias.scope !69
  %159 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 1
  store i32 -1, i32* %159, align 8, !alias.scope !69
  br label %160

160:                                              ; preds = %149, %151
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %116)
  br label %170

161:                                              ; preds = %76
  %162 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %162, align 8
  %163 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 0, i32 1
  store i32 -1, i32* %163, align 8
  %164 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %164, align 8
  %165 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 1, i32 1
  store i32 -1, i32* %165, align 8
  %166 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %166, align 8
  %167 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 2, i32 1
  store i32 -1, i32* %167, align 8
  %168 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* null, %"class.skvm::Builder"** %168, align 8
  %169 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %0, i64 0, i32 3, i32 1
  store i32 -1, i32* %169, align 8
  br label %170

170:                                              ; preds = %161, %160
  ret void
}

declare void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkSRGBGammaColorFilterD0Ev(%class.SkSRGBGammaColorFilter*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %class.SkSRGBGammaColorFilter* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.105*, %class.SkReadBuffer*)* @_ZNK22SkSRGBGammaColorFilter10getFactoryEv(%class.SkSRGBGammaColorFilter*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.105*, %class.SkReadBuffer*)* @_ZN22SkSRGBGammaColorFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK22SkSRGBGammaColorFilter11getTypeNameEv(%class.SkSRGBGammaColorFilter*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK22SkSRGBGammaColorFilter7flattenER13SkWriteBuffer(%class.SkSRGBGammaColorFilter*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkSRGBGammaColorFilter, %class.SkSRGBGammaColorFilter* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %6 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %6, i64 7
  %8 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, i32 %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8, %class.GrFragmentProcessor* } @_ZNK22SkSRGBGammaColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo(%class.SkSRGBGammaColorFilter*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %class.SkSRGBGammaColorFilter, %class.SkSRGBGammaColorFilter* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %15 [
    i32 0, label %7
    i32 1, label %11
  ]

7:                                                ; preds = %4
  %8 = tail call %class.SkColorSpace* @_Z24sk_srgb_linear_singletonv() #11
  %9 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #11
  %10 = tail call %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor* %1, %class.SkColorSpace* %8, i32 2, %class.SkColorSpace* %9, i32 2) #11
  br label %16

11:                                               ; preds = %4
  %12 = tail call %class.SkColorSpace* @_Z17sk_srgb_singletonv() #11
  %13 = tail call %class.SkColorSpace* @_Z24sk_srgb_linear_singletonv() #11
  %14 = tail call %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor* %1, %class.SkColorSpace* %12, i32 2, %class.SkColorSpace* %13, i32 2) #11
  br label %16

15:                                               ; preds = %4
  tail call void @llvm.trap()
  unreachable

16:                                               ; preds = %7, %11
  %17 = phi %class.GrFragmentProcessor* [ %14, %11 ], [ %10, %7 ]
  %18 = insertvalue { i8, %class.GrFragmentProcessor* } { i8 1, %class.GrFragmentProcessor* undef }, %class.GrFragmentProcessor* %17, 1
  ret { i8, %class.GrFragmentProcessor* } %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK22SkSRGBGammaColorFilter14onAppendStagesERK10SkStageRecb(%class.SkSRGBGammaColorFilter*, %struct.SkStageRec* dereferenceable(56), i1 zeroext) unnamed_addr #0 comdat align 2 {
  br i1 %2, label %7, label %4

4:                                                ; preds = %3
  %5 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 0
  %6 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %5, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %6, i32 7, i8* null) #11
  br label %7

7:                                                ; preds = %4, %3
  %8 = getelementptr inbounds %class.SkSRGBGammaColorFilter, %class.SkSRGBGammaColorFilter* %0, i64 0, i32 2
  %9 = getelementptr inbounds %struct.SkStageRec, %struct.SkStageRec* %1, i64 0, i32 0
  %10 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %9, align 8
  tail call void @_ZNK22SkColorSpaceXformSteps5applyEP16SkRasterPipeline(%struct.SkColorSpaceXformSteps* %8, %class.SkRasterPipeline* %10) #11
  br i1 %2, label %13, label %11

11:                                               ; preds = %7
  %12 = load %class.SkRasterPipeline*, %class.SkRasterPipeline** %9, align 8
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %12, i32 8, i8* null) #11
  br label %13

13:                                               ; preds = %11, %7
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK22SkSRGBGammaColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias sret, %class.SkSRGBGammaColorFilter*, %"class.skvm::Builder"*, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.skvm::Color", align 8
  %9 = alloca %"struct.skvm::Color", align 8
  %10 = alloca %"struct.skvm::Color", align 8
  %11 = alloca %"struct.skvm::Color", align 8
  %12 = getelementptr inbounds %class.SkSRGBGammaColorFilter, %class.SkSRGBGammaColorFilter* %1, i64 0, i32 2
  %13 = bitcast %"struct.skvm::Color"* %3 to i8*
  %14 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 3, i32 0
  %15 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %14, align 8
  %16 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 3, i32 1
  %17 = bitcast i32* %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"struct.skvm::Color"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %19) #11, !noalias !72
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %13, i64 48, i1 false)
  %20 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %15, %"class.skvm::Builder"** %20, align 8, !noalias !72
  %21 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 3, i32 1
  %22 = bitcast i32* %21 to i64*
  store i64 %18, i64* %22, align 8
  %23 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 2
  %26 = trunc i64 %18 to i32
  call void @_ZN4skvm7Builder8unpremulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"* %15, %"struct.skvm::F32"* nonnull %23, %"struct.skvm::F32"* %24, %"struct.skvm::F32"* %25, %"class.skvm::Builder"* %15, i32 %26) #11, !noalias !75
  %27 = bitcast %"struct.skvm::Color"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %19, i64 64, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %19) #11, !noalias !72
  call void @_ZNK22SkColorSpaceXformSteps7programEPN4skvm7BuilderEPNS0_8UniformsENS0_5ColorE(%"struct.skvm::Color"* nonnull sret %10, %struct.SkColorSpaceXformSteps* %12, %"class.skvm::Builder"* %2, %"struct.skvm::Uniforms"* %5, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %11) #11
  %28 = bitcast %"struct.skvm::Color"* %10 to i8*
  %29 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %10, i64 0, i32 3, i32 0
  %30 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %29, align 8
  %31 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %10, i64 0, i32 3, i32 1
  %32 = bitcast i32* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"struct.skvm::Color"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %34) #11, !noalias !78
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* nonnull align 8 %28, i64 48, i1 false)
  %35 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %8, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %30, %"class.skvm::Builder"** %35, align 8, !noalias !78
  %36 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %8, i64 0, i32 3, i32 1
  %37 = bitcast i32* %36 to i64*
  store i64 %33, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %8, i64 0, i32 0
  %39 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %8, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %8, i64 0, i32 2
  %41 = trunc i64 %33 to i32
  call void @_ZN4skvm7Builder6premulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"* %30, %"struct.skvm::F32"* nonnull %38, %"struct.skvm::F32"* %39, %"struct.skvm::F32"* %40, %"class.skvm::Builder"* %30, i32 %41) #11, !noalias !81
  %42 = bitcast %"struct.skvm::Color"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %34, i64 64, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %34) #11, !noalias !78
  ret void
}

declare %class.SkColorSpace* @_Z24sk_srgb_linear_singletonv() local_unnamed_addr #3

declare %class.SkColorSpace* @_Z17sk_srgb_singletonv() local_unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP12SkColorSpace11SkAlphaTypeS7_S8_(%class.GrFragmentProcessor*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) local_unnamed_addr #3

declare void @_ZNK22SkColorSpaceXformSteps5applyEP16SkRasterPipeline(%struct.SkColorSpaceXformSteps*, %class.SkRasterPipeline*) local_unnamed_addr #3

declare void @_ZNK22SkColorSpaceXformSteps7programEPN4skvm7BuilderEPNS0_8UniformsENS0_5ColorE(%"struct.skvm::Color"* sret, %struct.SkColorSpaceXformSteps*, %"class.skvm::Builder"*, %"struct.skvm::Uniforms"*, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8) local_unnamed_addr #3

declare void @_ZN4skvm7Builder6premulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"class.skvm::Builder"*, i32) local_unnamed_addr #3

declare void @_ZN4skvm7Builder8unpremulEPNS_3F32ES2_S2_S1_(%"class.skvm::Builder"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"struct.skvm::F32"*, %"class.skvm::Builder"*, i32) local_unnamed_addr #3

declare void @_Z25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringES1_(%class.sk_sp.108* sret, void (%"struct.SkRuntimeEffect::Result"*, %class.SkString*)*, %class.SkString*) local_unnamed_addr #3

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #5

declare void @_ZN15SkRuntimeEffect18MakeForColorFilterE8SkStringRKNS_7OptionsE(%"struct.SkRuntimeEffect::Result"* sret, %class.SkString*, %"struct.SkRuntimeEffect::Options"* dereferenceable(2)) local_unnamed_addr #3

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #5

declare void @_ZN12SkArenaAllocC2EPcmm(%class.SkArenaAlloc*, i8*, i64, i64) unnamed_addr #3

declare void @_ZNK4skvm7Program4evalEiPPv(%"class.skvm::Program"*, i32, i8**) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

declare i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26SkWorkingFormatColorFilterD2Ev(%struct.SkWorkingFormatColorFilter*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV26SkWorkingFormatColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkColorFilter*, %class.SkColorFilter** %3, align 8
  %5 = icmp eq %class.SkColorFilter* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorFilter* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkColorFilter* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26SkWorkingFormatColorFilterD0Ev(%struct.SkWorkingFormatColorFilter*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV26SkWorkingFormatColorFilter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 2, i32 0
  %4 = load %class.SkColorFilter*, %class.SkColorFilter** %3, align 8
  %5 = icmp eq %class.SkColorFilter* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorFilter* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.SkColorFilter* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = bitcast %struct.SkWorkingFormatColorFilter* %0 to i8*
  tail call void @_ZdlPv(i8* %17) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.105*, %class.SkReadBuffer*)* @_ZNK26SkWorkingFormatColorFilter10getFactoryEv(%struct.SkWorkingFormatColorFilter*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.105*, %class.SkReadBuffer*)* @_ZN26SkWorkingFormatColorFilter10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK26SkWorkingFormatColorFilter11getTypeNameEv(%struct.SkWorkingFormatColorFilter*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK26SkWorkingFormatColorFilter7flattenER13SkWriteBuffer(%struct.SkWorkingFormatColorFilter*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 2, i32 0
  %4 = bitcast %class.SkColorFilter** %3 to %class.SkFlattenable**
  %5 = load %class.SkFlattenable*, %class.SkFlattenable** %4, align 8
  %6 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %class.SkFlattenable*)***
  %7 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)**, void (%class.SkWriteBuffer*, %class.SkFlattenable*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %7, i64 11
  %9 = load void (%class.SkWriteBuffer*, %class.SkFlattenable*)*, void (%class.SkWriteBuffer*, %class.SkFlattenable*)** %8, align 8
  tail call void %9(%class.SkWriteBuffer* %1, %class.SkFlattenable* %5) #11
  %10 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 4
  %11 = load i8, i8* %10, align 4, !range !42
  %12 = icmp ne i8 %11, 0
  %13 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i1)***
  %14 = load void (%class.SkWriteBuffer*, i1)**, void (%class.SkWriteBuffer*, i1)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %14, i64 4
  %16 = load void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %15, align 8
  tail call void %16(%class.SkWriteBuffer* %1, i1 zeroext %12) #11
  %17 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 7
  %18 = load i8, i8* %17, align 4, !range !42
  %19 = icmp ne i8 %18, 0
  %20 = load void (%class.SkWriteBuffer*, i1)**, void (%class.SkWriteBuffer*, i1)*** %13, align 8
  %21 = getelementptr inbounds void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %20, i64 4
  %22 = load void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %21, align 8
  tail call void %22(%class.SkWriteBuffer* %1, i1 zeroext %19) #11
  %23 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 10
  %24 = load i8, i8* %23, align 4, !range !42
  %25 = icmp ne i8 %24, 0
  %26 = load void (%class.SkWriteBuffer*, i1)**, void (%class.SkWriteBuffer*, i1)*** %13, align 8
  %27 = getelementptr inbounds void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %26, i64 4
  %28 = load void (%class.SkWriteBuffer*, i1)*, void (%class.SkWriteBuffer*, i1)** %27, align 8
  tail call void %28(%class.SkWriteBuffer* %1, i1 zeroext %25) #11
  %29 = load i8, i8* %10, align 4, !range !42
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %2
  %32 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 3, i32 0
  %33 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float*, i32)***
  %34 = load void (%class.SkWriteBuffer*, float*, i32)**, void (%class.SkWriteBuffer*, float*, i32)*** %33, align 8
  %35 = getelementptr inbounds void (%class.SkWriteBuffer*, float*, i32)*, void (%class.SkWriteBuffer*, float*, i32)** %34, i64 6
  %36 = load void (%class.SkWriteBuffer*, float*, i32)*, void (%class.SkWriteBuffer*, float*, i32)** %35, align 8
  tail call void %36(%class.SkWriteBuffer* %1, float* %32, i32 7) #11
  br label %37

37:                                               ; preds = %2, %31
  %38 = load i8, i8* %17, align 4, !range !42
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %46

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 6, i32 0, i64 0, i64 0
  %42 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float*, i32)***
  %43 = load void (%class.SkWriteBuffer*, float*, i32)**, void (%class.SkWriteBuffer*, float*, i32)*** %42, align 8
  %44 = getelementptr inbounds void (%class.SkWriteBuffer*, float*, i32)*, void (%class.SkWriteBuffer*, float*, i32)** %43, i64 6
  %45 = load void (%class.SkWriteBuffer*, float*, i32)*, void (%class.SkWriteBuffer*, float*, i32)** %44, align 8
  tail call void %45(%class.SkWriteBuffer* %1, float* %41, i32 9) #11
  br label %46

46:                                               ; preds = %37, %40
  %47 = load i8, i8* %23, align 4, !range !42
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %56

49:                                               ; preds = %46
  %50 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 9
  %51 = load i32, i32* %50, align 8
  %52 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, i32)***
  %53 = load void (%class.SkWriteBuffer*, i32)**, void (%class.SkWriteBuffer*, i32)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %53, i64 7
  %55 = load void (%class.SkWriteBuffer*, i32)*, void (%class.SkWriteBuffer*, i32)** %54, align 8
  tail call void %55(%class.SkWriteBuffer* %1, i32 %51) #11
  br label %56

56:                                               ; preds = %46, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK26SkWorkingFormatColorFilter18onIsAlphaUnchangedEv(%struct.SkWorkingFormatColorFilter*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 2, i32 0
  %3 = load %class.SkColorFilter*, %class.SkColorFilter** %2, align 8
  %4 = bitcast %class.SkColorFilter* %3 to %class.SkColorFilterBase*
  %5 = bitcast %class.SkColorFilter* %3 to i1 (%class.SkColorFilterBase*)***
  %6 = load i1 (%class.SkColorFilterBase*)**, i1 (%class.SkColorFilterBase*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %6, i64 7
  %8 = load i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkColorFilterBase* %4) #11
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8, %class.GrFragmentProcessor* } @_ZNK26SkWorkingFormatColorFilter19asFragmentProcessorENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEEP18GrRecordingContextRK11GrColorInfo(%struct.SkWorkingFormatColorFilter*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %struct.skcms_TransferFunction, align 4
  %6 = alloca %struct.skcms_Matrix3x3, align 4
  %7 = alloca %class.sk_sp.55, align 8
  %8 = alloca %class.sk_sp.55, align 8
  %9 = alloca %class.GrColorInfo, align 8
  %10 = alloca %class.sk_sp.55, align 8
  %11 = alloca %class.GrColorInfo, align 8
  %12 = alloca %class.sk_sp.55, align 8
  %13 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %3, i64 0, i32 0, i32 0
  %14 = load %class.SkColorSpace*, %class.SkColorSpace** %13, align 8, !noalias !84
  %15 = icmp eq %class.SkColorSpace* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic, !noalias !84
  %19 = ptrtoint %class.SkColorSpace* %14 to i64
  br label %24

20:                                               ; preds = %4
  %21 = bitcast %class.sk_sp.55* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.55* nonnull sret %7) #11
  %22 = bitcast %class.sk_sp.55* %7 to i64*
  %23 = load i64, i64* %22, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %24

24:                                               ; preds = %16, %20
  %25 = phi i64 [ %23, %20 ], [ %19, %16 ]
  %26 = bitcast %class.sk_sp.55* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %27 = getelementptr inbounds %class.sk_sp.55, %class.sk_sp.55* %8, i64 0, i32 0
  store %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %class.SkColorSpace** %27, align 8
  %28 = bitcast %struct.skcms_TransferFunction* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %28) #11, !noalias !87
  %29 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 3
  %30 = bitcast %struct.skcms_TransferFunction* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* align 8 %30, i64 28, i1 false) #11, !noalias !87
  %31 = bitcast %struct.skcms_Matrix3x3* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %31) #11, !noalias !87
  %32 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 6
  %33 = bitcast %struct.skcms_Matrix3x3* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 8 %33, i64 36, i1 false) #11, !noalias !87
  %34 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 4
  %35 = load i8, i8* %34, align 4, !range !42, !noalias !87
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %24
  %38 = inttoptr i64 %25 to %class.SkColorSpace*
  %39 = call zeroext i1 @_ZNK12SkColorSpace21isNumericalTransferFnEP22skcms_TransferFunction(%class.SkColorSpace* %38, %struct.skcms_TransferFunction* nonnull %5) #11
  br label %40

40:                                               ; preds = %37, %24
  %41 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 7
  %42 = load i8, i8* %41, align 4, !range !42, !noalias !87
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = inttoptr i64 %25 to %class.SkColorSpace*
  %46 = call zeroext i1 @_ZNK12SkColorSpace8toXYZD50EP15skcms_Matrix3x3(%class.SkColorSpace* %45, %struct.skcms_Matrix3x3* nonnull %6) #11
  br label %47

47:                                               ; preds = %44, %40
  %48 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 10
  %49 = load i8, i8* %48, align 4, !range !42, !noalias !87
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 9
  %53 = load i32, i32* %52, align 8, !noalias !87
  br label %54

54:                                               ; preds = %47, %51
  %55 = phi i32 [ %53, %51 ], [ 2, %47 ]
  call void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp.55* nonnull sret %8, %struct.skcms_TransferFunction* nonnull dereferenceable(28) %5, %struct.skcms_Matrix3x3* nonnull dereferenceable(36) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %31) #11, !noalias !87
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %28) #11, !noalias !87
  %56 = bitcast %class.GrColorInfo* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #11
  %57 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %9, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %9, i64 0, i32 1, i32 0
  %59 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %3, i64 0, i32 2
  %60 = bitcast %class.GrColorInfo* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 24, i1 false)
  %61 = load i32, i32* %59, align 8
  %62 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %3, i64 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %class.sk_sp.55, %class.sk_sp.55* %10, i64 0, i32 0
  %65 = inttoptr i64 %25 to %class.SkColorSpace*
  %66 = icmp eq i64 %25, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %54
  %68 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 1 monotonic
  br label %70

70:                                               ; preds = %54, %67
  store %class.SkColorSpace* %65, %class.SkColorSpace** %64, align 8
  call void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo* nonnull %9, i32 %61, i32 %63, %class.sk_sp.55* nonnull %10) #11
  %71 = load %class.SkColorSpace*, %class.SkColorSpace** %64, align 8
  %72 = icmp eq %class.SkColorSpace* %71, null
  br i1 %72, label %79, label %73

73:                                               ; preds = %70
  %74 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = bitcast %class.SkColorSpace* %71 to i8*
  call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %70, %73, %77
  %80 = bitcast %class.GrColorInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #11
  %81 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %11, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds %class.GrColorInfo, %class.GrColorInfo* %11, i64 0, i32 1, i32 0
  %83 = bitcast %class.GrColorInfo* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 24, i1 false)
  %84 = load i32, i32* %59, align 8
  %85 = getelementptr inbounds %class.sk_sp.55, %class.sk_sp.55* %12, i64 0, i32 0
  %86 = load %class.SkColorSpace*, %class.SkColorSpace** %27, align 8
  %87 = icmp eq %class.SkColorSpace* %86, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %79
  %89 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = atomicrmw add i32* %89, i32 1 monotonic
  br label %91

91:                                               ; preds = %79, %88
  store %class.SkColorSpace* %86, %class.SkColorSpace** %85, align 8
  call void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo* nonnull %11, i32 %84, i32 %55, %class.sk_sp.55* nonnull %12) #11
  %92 = load %class.SkColorSpace*, %class.SkColorSpace** %85, align 8
  %93 = icmp eq %class.SkColorSpace* %92, null
  br i1 %93, label %100, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw add i32* %95, i32 -1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  %99 = bitcast %class.SkColorSpace* %92 to i8*
  call void @_ZdlPv(i8* %99) #12
  br label %100

100:                                              ; preds = %91, %94, %98
  %101 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 2
  %102 = bitcast %class.sk_sp.65* %101 to %class.SkColorFilterBase**
  %103 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %102, align 8
  %104 = call %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEERK11GrColorInfoS8_(%class.GrFragmentProcessor* %1, %class.GrColorInfo* nonnull dereferenceable(24) %9, %class.GrColorInfo* nonnull dereferenceable(24) %11) #11
  %105 = bitcast %class.SkColorFilterBase* %103 to { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)***
  %106 = load { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)**, { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)*** %105, align 8
  %107 = getelementptr inbounds { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)*, { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)** %106, i64 8
  %108 = load { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)*, { i8, %class.GrFragmentProcessor* } (%class.SkColorFilterBase*, %class.GrFragmentProcessor*, %class.GrRecordingContext*, %class.GrColorInfo*)** %107, align 8
  %109 = call { i8, %class.GrFragmentProcessor* } %108(%class.SkColorFilterBase* %103, %class.GrFragmentProcessor* %104, %class.GrRecordingContext* %2, %class.GrColorInfo* nonnull dereferenceable(24) %11) #11
  %110 = extractvalue { i8, %class.GrFragmentProcessor* } %109, 0
  %111 = extractvalue { i8, %class.GrFragmentProcessor* } %109, 1
  %112 = icmp eq i8 %110, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %100
  %114 = call %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEERK11GrColorInfoS8_(%class.GrFragmentProcessor* %111, %class.GrColorInfo* nonnull dereferenceable(24) %11, %class.GrColorInfo* nonnull dereferenceable(24) %9) #11
  br label %115

115:                                              ; preds = %100, %113
  %116 = phi i8 [ 1, %113 ], [ 0, %100 ]
  %117 = phi %class.GrFragmentProcessor* [ %114, %113 ], [ %111, %100 ]
  %118 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %82, align 8
  %119 = icmp eq %class.GrColorSpaceXform* %118, null
  br i1 %119, label %130, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %118, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = atomicrmw add i32* %121, i32 -1 acq_rel
  %123 = icmp eq i32 %122, 1
  br i1 %123, label %124, label %130

124:                                              ; preds = %120
  %125 = bitcast %class.GrColorSpaceXform* %118 to %class.SkRefCntBase*
  %126 = bitcast %class.GrColorSpaceXform* %118 to void (%class.SkRefCntBase*)***
  %127 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %126, align 8
  %128 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %127, i64 2
  %129 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %128, align 8
  call void %129(%class.SkRefCntBase* nonnull %125) #11
  br label %130

130:                                              ; preds = %124, %120, %115
  %131 = load %class.SkColorSpace*, %class.SkColorSpace** %81, align 8
  %132 = icmp eq %class.SkColorSpace* %131, null
  br i1 %132, label %139, label %133

133:                                              ; preds = %130
  %134 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = atomicrmw add i32* %134, i32 -1 acq_rel
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %137, label %139

137:                                              ; preds = %133
  %138 = bitcast %class.SkColorSpace* %131 to i8*
  call void @_ZdlPv(i8* %138) #12
  br label %139

139:                                              ; preds = %130, %133, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #11
  %140 = load %class.GrColorSpaceXform*, %class.GrColorSpaceXform** %58, align 8
  %141 = icmp eq %class.GrColorSpaceXform* %140, null
  br i1 %141, label %152, label %142

142:                                              ; preds = %139
  %143 = getelementptr inbounds %class.GrColorSpaceXform, %class.GrColorSpaceXform* %140, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = atomicrmw add i32* %143, i32 -1 acq_rel
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %146, label %152

146:                                              ; preds = %142
  %147 = bitcast %class.GrColorSpaceXform* %140 to %class.SkRefCntBase*
  %148 = bitcast %class.GrColorSpaceXform* %140 to void (%class.SkRefCntBase*)***
  %149 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %148, align 8
  %150 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %149, i64 2
  %151 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %150, align 8
  call void %151(%class.SkRefCntBase* nonnull %147) #11
  br label %152

152:                                              ; preds = %146, %142, %139
  %153 = load %class.SkColorSpace*, %class.SkColorSpace** %57, align 8
  %154 = icmp eq %class.SkColorSpace* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %153, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = atomicrmw add i32* %156, i32 -1 acq_rel
  %158 = icmp eq i32 %157, 1
  br i1 %158, label %159, label %161

159:                                              ; preds = %155
  %160 = bitcast %class.SkColorSpace* %153 to i8*
  call void @_ZdlPv(i8* %160) #12
  br label %161

161:                                              ; preds = %152, %155, %159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #11
  %162 = load %class.SkColorSpace*, %class.SkColorSpace** %27, align 8
  %163 = icmp eq %class.SkColorSpace* %162, null
  br i1 %163, label %170, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = atomicrmw add i32* %165, i32 -1 acq_rel
  %167 = icmp eq i32 %166, 1
  br i1 %167, label %168, label %170

168:                                              ; preds = %164
  %169 = bitcast %class.SkColorSpace* %162 to i8*
  call void @_ZdlPv(i8* %169) #12
  br label %170

170:                                              ; preds = %161, %164, %168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  br i1 %66, label %177, label %171

171:                                              ; preds = %170
  %172 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = atomicrmw add i32* %172, i32 -1 acq_rel
  %174 = icmp eq i32 %173, 1
  br i1 %174, label %175, label %177

175:                                              ; preds = %171
  %176 = inttoptr i64 %25 to i8*
  call void @_ZdlPv(i8* %176) #12
  br label %177

177:                                              ; preds = %175, %171, %170
  %178 = insertvalue { i8, %class.GrFragmentProcessor* } undef, i8 %116, 0
  %179 = insertvalue { i8, %class.GrFragmentProcessor* } %178, %class.GrFragmentProcessor* %117, 1
  ret { i8, %class.GrFragmentProcessor* } %179
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK26SkWorkingFormatColorFilter15onFilterColor4fERK8SkRGBA4fIL11SkAlphaType2EEP12SkColorSpace(%struct.SkWorkingFormatColorFilter*, %struct.SkRGBA4f.86* dereferenceable(16), %class.SkColorSpace*) unnamed_addr #0 comdat align 2 {
  %4 = alloca %struct.skcms_TransferFunction, align 4
  %5 = alloca %struct.skcms_Matrix3x3, align 4
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRGBA4f.86*
  %8 = alloca %class.sk_sp.55, align 8
  %9 = alloca %class.sk_sp.55, align 8
  %10 = alloca %struct.SkColorSpaceXformSteps, align 4
  %11 = alloca %struct.SkColorSpaceXformSteps, align 4
  %12 = icmp eq %class.SkColorSpace* %2, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic, !noalias !90
  %16 = ptrtoint %class.SkColorSpace* %2 to i64
  br label %21

17:                                               ; preds = %3
  %18 = bitcast %class.sk_sp.55* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.55* nonnull sret %8) #11
  %19 = bitcast %class.sk_sp.55* %8 to i64*
  %20 = load i64, i64* %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %21

21:                                               ; preds = %13, %17
  %22 = phi i64 [ %20, %17 ], [ %16, %13 ]
  %23 = bitcast %class.sk_sp.55* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  %24 = getelementptr inbounds %class.sk_sp.55, %class.sk_sp.55* %9, i64 0, i32 0
  store %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %class.SkColorSpace** %24, align 8
  %25 = bitcast %struct.skcms_TransferFunction* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %25) #11, !noalias !93
  %26 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 3
  %27 = bitcast %struct.skcms_TransferFunction* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %25, i8* align 8 %27, i64 28, i1 false) #11, !noalias !93
  %28 = bitcast %struct.skcms_Matrix3x3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %28) #11, !noalias !93
  %29 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 6
  %30 = bitcast %struct.skcms_Matrix3x3* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* align 8 %30, i64 36, i1 false) #11, !noalias !93
  %31 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 4
  %32 = load i8, i8* %31, align 4, !range !42, !noalias !93
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %21
  %35 = inttoptr i64 %22 to %class.SkColorSpace*
  %36 = call zeroext i1 @_ZNK12SkColorSpace21isNumericalTransferFnEP22skcms_TransferFunction(%class.SkColorSpace* %35, %struct.skcms_TransferFunction* nonnull %4) #11
  br label %37

37:                                               ; preds = %34, %21
  %38 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 7
  %39 = load i8, i8* %38, align 4, !range !42, !noalias !93
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = inttoptr i64 %22 to %class.SkColorSpace*
  %43 = call zeroext i1 @_ZNK12SkColorSpace8toXYZD50EP15skcms_Matrix3x3(%class.SkColorSpace* %42, %struct.skcms_Matrix3x3* nonnull %5) #11
  br label %44

44:                                               ; preds = %41, %37
  %45 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 10
  %46 = load i8, i8* %45, align 4, !range !42, !noalias !93
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 9
  %50 = load i32, i32* %49, align 8, !noalias !93
  br label %51

51:                                               ; preds = %44, %48
  %52 = phi i32 [ %50, %48 ], [ 2, %44 ]
  call void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp.55* nonnull sret %9, %struct.skcms_TransferFunction* nonnull dereferenceable(28) %4, %struct.skcms_Matrix3x3* nonnull dereferenceable(36) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %28) #11, !noalias !93
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %25) #11, !noalias !93
  %53 = inttoptr i64 %22 to %class.SkColorSpace*
  %54 = icmp eq i64 %22, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 1 monotonic
  br label %58

58:                                               ; preds = %55, %51
  %59 = load %class.SkColorSpace*, %class.SkColorSpace** %24, align 8
  %60 = icmp eq %class.SkColorSpace* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = atomicrmw add i32* %62, i32 1 monotonic
  br label %64

64:                                               ; preds = %61, %58
  %65 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0, i64 0
  %66 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1, i64 0
  %67 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  %68 = bitcast %struct.SkRGBA4f.86* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %67, i8* align 4 %68, i64 16, i1 false)
  %69 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %10, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %69) #11
  call void @_ZN22SkColorSpaceXformStepsC2EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %10, %class.SkColorSpace* %53, i32 2, %class.SkColorSpace* %59, i32 %52) #11
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %10, float* nonnull %65) #11
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %69) #11
  %70 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %0, i64 0, i32 2
  %71 = bitcast %class.sk_sp.65* %70 to %class.SkColorFilterBase**
  %72 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %71, align 8
  %73 = bitcast %class.SkColorFilterBase* %72 to { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)***
  %74 = load { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)**, { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)*** %73, align 8
  %75 = getelementptr inbounds { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)*, { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)** %74, i64 9
  %76 = load { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)*, { <2 x float>, <2 x float> } (%class.SkColorFilterBase*, %struct.SkRGBA4f.86*, %class.SkColorSpace*)** %75, align 8
  %77 = call { <2 x float>, <2 x float> } %76(%class.SkColorFilterBase* %72, %struct.SkRGBA4f.86* nonnull dereferenceable(16) %7, %class.SkColorSpace* %59) #11
  %78 = extractvalue { <2 x float>, <2 x float> } %77, 0
  %79 = extractvalue { <2 x float>, <2 x float> } %77, 1
  %80 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %78, <2 x float>* %80, align 8
  %81 = bitcast float* %66 to <2 x float>*
  store <2 x float> %79, <2 x float>* %81, align 8
  %82 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %11, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %82) #11
  call void @_ZN22SkColorSpaceXformStepsC2EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %11, %class.SkColorSpace* %59, i32 %52, %class.SkColorSpace* %53, i32 2) #11
  call void @_ZNK22SkColorSpaceXformSteps5applyEPf(%struct.SkColorSpaceXformSteps* nonnull %11, float* nonnull %65) #11
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %82) #11
  br i1 %60, label %89, label %83

83:                                               ; preds = %64
  %84 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = atomicrmw add i32* %84, i32 -1 acq_rel
  %86 = icmp eq i32 %85, 1
  br i1 %86, label %87, label %89

87:                                               ; preds = %83
  %88 = bitcast %class.SkColorSpace* %59 to i8*
  call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %64, %83, %87
  br i1 %54, label %96, label %90

90:                                               ; preds = %89
  %91 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw add i32* %91, i32 -1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  %95 = inttoptr i64 %22 to i8*
  call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %89, %90, %94
  %97 = load %class.SkColorSpace*, %class.SkColorSpace** %24, align 8
  %98 = icmp eq %class.SkColorSpace* %97, null
  br i1 %98, label %105, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = bitcast %class.SkColorSpace* %97 to i8*
  call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %96, %99, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br i1 %54, label %112, label %106

106:                                              ; preds = %105
  %107 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %112

110:                                              ; preds = %106
  %111 = inttoptr i64 %22 to i8*
  call void @_ZdlPv(i8* %111) #12
  br label %112

112:                                              ; preds = %105, %106, %110
  %113 = load <2 x float>, <2 x float>* %80, align 8
  %114 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %113, 0
  %115 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %116 = load <2 x float>, <2 x float>* %115, align 8
  %117 = insertvalue { <2 x float>, <2 x float> } %114, <2 x float> %116, 1
  ret { <2 x float>, <2 x float> } %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK26SkWorkingFormatColorFilter14onAppendStagesERK10SkStageRecb(%struct.SkWorkingFormatColorFilter*, %struct.SkStageRec* dereferenceable(56), i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK26SkWorkingFormatColorFilter9onProgramEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* noalias sret, %struct.SkWorkingFormatColorFilter*, %"class.skvm::Builder"*, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) unnamed_addr #0 comdat align 2 {
  %8 = alloca %"struct.skvm::Color", align 8
  %9 = alloca %"struct.skvm::Color", align 8
  %10 = alloca %struct.skcms_TransferFunction, align 4
  %11 = alloca %struct.skcms_Matrix3x3, align 4
  %12 = alloca %class.sk_sp.55, align 8
  %13 = alloca %class.sk_sp.55, align 8
  %14 = alloca %"struct.skvm::Color", align 8
  %15 = alloca %struct.SkColorSpaceXformSteps, align 4
  %16 = alloca %struct.SkColorSpaceXformSteps, align 4
  %17 = icmp eq %class.SkColorSpace* %4, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic, !noalias !96
  %21 = ptrtoint %class.SkColorSpace* %4 to i64
  br label %26

22:                                               ; preds = %7
  %23 = bitcast %class.sk_sp.55* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  call void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.55* nonnull sret %12) #11
  %24 = bitcast %class.sk_sp.55* %12 to i64*
  %25 = load i64, i64* %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  br label %26

26:                                               ; preds = %18, %22
  %27 = phi i64 [ %25, %22 ], [ %21, %18 ]
  %28 = bitcast %class.sk_sp.55* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  %29 = getelementptr inbounds %class.sk_sp.55, %class.sk_sp.55* %13, i64 0, i32 0
  store %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %class.SkColorSpace** %29, align 8
  %30 = bitcast %struct.skcms_TransferFunction* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %30) #11, !noalias !99
  %31 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %1, i64 0, i32 3
  %32 = bitcast %struct.skcms_TransferFunction* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %30, i8* align 8 %32, i64 28, i1 false) #11, !noalias !99
  %33 = bitcast %struct.skcms_Matrix3x3* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %33) #11, !noalias !99
  %34 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %1, i64 0, i32 6
  %35 = bitcast %struct.skcms_Matrix3x3* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 8 %35, i64 36, i1 false) #11, !noalias !99
  %36 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %1, i64 0, i32 4
  %37 = load i8, i8* %36, align 4, !range !42, !noalias !99
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %26
  %40 = inttoptr i64 %27 to %class.SkColorSpace*
  %41 = call zeroext i1 @_ZNK12SkColorSpace21isNumericalTransferFnEP22skcms_TransferFunction(%class.SkColorSpace* %40, %struct.skcms_TransferFunction* nonnull %10) #11
  br label %42

42:                                               ; preds = %39, %26
  %43 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %1, i64 0, i32 7
  %44 = load i8, i8* %43, align 4, !range !42, !noalias !99
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %42
  %47 = inttoptr i64 %27 to %class.SkColorSpace*
  %48 = call zeroext i1 @_ZNK12SkColorSpace8toXYZD50EP15skcms_Matrix3x3(%class.SkColorSpace* %47, %struct.skcms_Matrix3x3* nonnull %11) #11
  br label %49

49:                                               ; preds = %46, %42
  %50 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %1, i64 0, i32 10
  %51 = load i8, i8* %50, align 4, !range !42, !noalias !99
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %1, i64 0, i32 9
  %55 = load i32, i32* %54, align 8, !noalias !99
  br label %56

56:                                               ; preds = %49, %53
  %57 = phi i32 [ %55, %53 ], [ 2, %49 ]
  call void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp.55* nonnull sret %13, %struct.skcms_TransferFunction* nonnull dereferenceable(28) %10, %struct.skcms_Matrix3x3* nonnull dereferenceable(36) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %33) #11, !noalias !99
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %30) #11, !noalias !99
  %58 = inttoptr i64 %27 to %class.SkColorSpace*
  %59 = icmp eq i64 %27, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw add i32* %61, i32 1 monotonic
  br label %63

63:                                               ; preds = %60, %56
  %64 = load %class.SkColorSpace*, %class.SkColorSpace** %29, align 8
  %65 = icmp eq %class.SkColorSpace* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = atomicrmw add i32* %67, i32 1 monotonic
  br label %69

69:                                               ; preds = %66, %63
  %70 = bitcast %"struct.skvm::Color"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %70) #11
  %71 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %15, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %71) #11
  call void @_ZN22SkColorSpaceXformStepsC2EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %15, %class.SkColorSpace* %58, i32 2, %class.SkColorSpace* %64, i32 %57) #11
  %72 = bitcast %"struct.skvm::Color"* %3 to i8*
  call void @_ZNK22SkColorSpaceXformSteps7programEPN4skvm7BuilderEPNS0_8UniformsENS0_5ColorE(%"struct.skvm::Color"* nonnull sret %14, %struct.SkColorSpaceXformSteps* nonnull %15, %"class.skvm::Builder"* %2, %"struct.skvm::Uniforms"* %5, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %3) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %72, i8* nonnull align 8 %70, i64 64, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %71) #11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %70) #11
  %73 = getelementptr inbounds %struct.SkWorkingFormatColorFilter, %struct.SkWorkingFormatColorFilter* %1, i64 0, i32 2
  %74 = bitcast %class.sk_sp.65* %73 to %class.SkColorFilterBase**
  %75 = load %class.SkColorFilterBase*, %class.SkColorFilterBase** %74, align 8
  %76 = bitcast %"struct.skvm::Color"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %76)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* nonnull align 8 %72, i64 64, i1 false)
  %77 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 3, i32 0
  %78 = bitcast %"class.skvm::Builder"** %77 to i64*
  %79 = load i64, i64* %78, align 8, !noalias !102
  %80 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 3, i32 1
  %81 = load i32, i32* %80, align 8, !noalias !102
  %82 = bitcast %"struct.skvm::Color"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %82) #11, !noalias !102
  %83 = bitcast %class.SkColorFilterBase* %75 to void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)***
  %84 = load void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)**, void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)*** %83, align 8, !noalias !102
  %85 = getelementptr inbounds void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)*, void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)** %84, i64 13
  %86 = load void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)*, void (%"struct.skvm::Color"*, %class.SkColorFilterBase*, %"class.skvm::Builder"*, %"struct.skvm::Color"*, %class.SkColorSpace*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)** %85, align 8, !noalias !102
  call void %86(%"struct.skvm::Color"* nonnull sret %8, %class.SkColorFilterBase* %75, %"class.skvm::Builder"* %2, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %9, %class.SkColorSpace* %64, %"struct.skvm::Uniforms"* %5, %class.SkArenaAlloc* %6) #11, !noalias !102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* nonnull align 8 %82, i64 64, i1 false) #11, !noalias !102
  %87 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 0, i32 1
  %88 = load i32, i32* %87, align 8, !noalias !102
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %98, label %90

90:                                               ; preds = %69
  %91 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 1, i32 1
  %92 = load i32, i32* %91, align 8, !noalias !102
  %93 = icmp eq i32 %92, -1
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 2, i32 1
  %96 = load i32, i32* %95, align 8, !noalias !102
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %98, label %99

98:                                               ; preds = %94, %90, %69
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %82) #11, !noalias !102
  br label %137

99:                                               ; preds = %94
  %100 = load i32, i32* %80, align 8, !noalias !102
  %101 = icmp eq i32 %100, -1
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %82) #11, !noalias !102
  br i1 %101, label %137, label %102

102:                                              ; preds = %99
  %103 = bitcast %class.SkColorFilterBase* %75 to i1 (%class.SkColorFilterBase*)***
  %104 = load i1 (%class.SkColorFilterBase*)**, i1 (%class.SkColorFilterBase*)*** %103, align 8, !noalias !102
  %105 = getelementptr inbounds i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %104, i64 7
  %106 = load i1 (%class.SkColorFilterBase*)*, i1 (%class.SkColorFilterBase*)** %105, align 8, !noalias !102
  %107 = call zeroext i1 %106(%class.SkColorFilterBase* %75) #11, !noalias !102
  br i1 %107, label %111, label %108

108:                                              ; preds = %102
  %109 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %77, align 8
  %110 = load i32, i32* %80, align 8
  br label %113

111:                                              ; preds = %102
  store i64 %79, i64* %78, align 8, !noalias !102
  store i32 %81, i32* %80, align 8, !noalias !102
  %112 = inttoptr i64 %79 to %"class.skvm::Builder"*
  br label %113

113:                                              ; preds = %108, %111
  %114 = phi i32 [ %110, %108 ], [ %81, %111 ]
  %115 = phi %"class.skvm::Builder"* [ %109, %108 ], [ %112, %111 ]
  %116 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 0, i32 0
  %117 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %116, align 8
  %118 = load i32, i32* %87, align 8
  %119 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 0, i32 2
  %120 = bitcast [4 x i8]* %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 1, i32 0
  %123 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %122, align 8
  %124 = load i32, i32* %91, align 8
  %125 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 1, i32 2
  %126 = bitcast [4 x i8]* %125 to i32*
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 2, i32 0
  %129 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %128, align 8
  %130 = load i32, i32* %95, align 8
  %131 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 2, i32 2
  %132 = bitcast [4 x i8]* %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %9, i64 0, i32 3, i32 2
  %135 = bitcast [4 x i8]* %134 to i32*
  %136 = load i32, i32* %135, align 4
  br label %137

137:                                              ; preds = %98, %99, %113
  %138 = phi i32 [ %136, %113 ], [ undef, %99 ], [ undef, %98 ]
  %139 = phi i32 [ %114, %113 ], [ -1, %99 ], [ -1, %98 ]
  %140 = phi %"class.skvm::Builder"* [ %115, %113 ], [ null, %99 ], [ null, %98 ]
  %141 = phi i32 [ %133, %113 ], [ undef, %99 ], [ undef, %98 ]
  %142 = phi i32 [ %130, %113 ], [ -1, %99 ], [ -1, %98 ]
  %143 = phi %"class.skvm::Builder"* [ %129, %113 ], [ null, %99 ], [ null, %98 ]
  %144 = phi i32 [ %127, %113 ], [ undef, %99 ], [ undef, %98 ]
  %145 = phi i32 [ %124, %113 ], [ -1, %99 ], [ -1, %98 ]
  %146 = phi %"class.skvm::Builder"* [ %123, %113 ], [ null, %99 ], [ null, %98 ]
  %147 = phi i32 [ %121, %113 ], [ undef, %99 ], [ undef, %98 ]
  %148 = phi i32 [ %118, %113 ], [ -1, %99 ], [ -1, %98 ]
  %149 = phi %"class.skvm::Builder"* [ %117, %113 ], [ null, %99 ], [ null, %98 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %76)
  %150 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 0, i32 0
  store %"class.skvm::Builder"* %149, %"class.skvm::Builder"** %150, align 8
  %151 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 0, i32 1
  store i32 %148, i32* %151, align 8
  %152 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 0, i32 2
  %153 = bitcast [4 x i8]* %152 to i32*
  store i32 %147, i32* %153, align 4
  %154 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 1, i32 0
  store %"class.skvm::Builder"* %146, %"class.skvm::Builder"** %154, align 8
  %155 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 1, i32 1
  store i32 %145, i32* %155, align 8
  %156 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 1, i32 2
  %157 = bitcast [4 x i8]* %156 to i32*
  store i32 %144, i32* %157, align 4
  %158 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 2, i32 0
  store %"class.skvm::Builder"* %143, %"class.skvm::Builder"** %158, align 8
  %159 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 2, i32 1
  store i32 %142, i32* %159, align 8
  %160 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 2, i32 2
  %161 = bitcast [4 x i8]* %160 to i32*
  store i32 %141, i32* %161, align 4
  %162 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 3, i32 0
  store %"class.skvm::Builder"* %140, %"class.skvm::Builder"** %162, align 8
  %163 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 3, i32 1
  store i32 %139, i32* %163, align 8
  %164 = getelementptr inbounds %"struct.skvm::Color", %"struct.skvm::Color"* %3, i64 0, i32 3, i32 2
  %165 = bitcast [4 x i8]* %164 to i32*
  store i32 %138, i32* %165, align 4
  %166 = icmp eq i32 %148, -1
  %167 = icmp eq i32 %145, -1
  %168 = or i1 %167, %166
  %169 = icmp eq i32 %142, -1
  %170 = or i1 %169, %168
  br i1 %170, label %171, label %173

171:                                              ; preds = %137
  %172 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %16, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %172) #11
  br label %177

173:                                              ; preds = %137
  %174 = icmp eq i32 %139, -1
  %175 = getelementptr inbounds %struct.SkColorSpaceXformSteps, %struct.SkColorSpaceXformSteps* %16, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %175) #11
  br i1 %174, label %177, label %176

176:                                              ; preds = %173
  call void @_ZN22SkColorSpaceXformStepsC2EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps* nonnull %16, %class.SkColorSpace* %64, i32 %57, %class.SkColorSpace* %58, i32 2) #11
  call void @_ZNK22SkColorSpaceXformSteps7programEPN4skvm7BuilderEPNS0_8UniformsENS0_5ColorE(%"struct.skvm::Color"* sret %0, %struct.SkColorSpaceXformSteps* nonnull %16, %"class.skvm::Builder"* %2, %"struct.skvm::Uniforms"* %5, %"struct.skvm::Color"* nonnull byval(%"struct.skvm::Color") align 8 %3) #11
  br label %180

177:                                              ; preds = %173, %171
  %178 = phi i8* [ %172, %171 ], [ %175, %173 ]
  %179 = bitcast %"struct.skvm::Color"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %179, i8* nonnull align 8 %72, i64 64, i1 false)
  br label %180

180:                                              ; preds = %177, %176
  %181 = phi i8* [ %178, %177 ], [ %175, %176 ]
  call void @llvm.lifetime.end.p0i8(i64 100, i8* %181) #11
  br i1 %65, label %188, label %182

182:                                              ; preds = %180
  %183 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %64, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = atomicrmw add i32* %183, i32 -1 acq_rel
  %185 = icmp eq i32 %184, 1
  br i1 %185, label %186, label %188

186:                                              ; preds = %182
  %187 = bitcast %class.SkColorSpace* %64 to i8*
  call void @_ZdlPv(i8* %187) #12
  br label %188

188:                                              ; preds = %180, %182, %186
  br i1 %59, label %195, label %189

189:                                              ; preds = %188
  %190 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = atomicrmw add i32* %190, i32 -1 acq_rel
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %193, label %195

193:                                              ; preds = %189
  %194 = inttoptr i64 %27 to i8*
  call void @_ZdlPv(i8* %194) #12
  br label %195

195:                                              ; preds = %188, %189, %193
  %196 = load %class.SkColorSpace*, %class.SkColorSpace** %29, align 8
  %197 = icmp eq %class.SkColorSpace* %196, null
  br i1 %197, label %204, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %196, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = atomicrmw add i32* %199, i32 -1 acq_rel
  %201 = icmp eq i32 %200, 1
  br i1 %201, label %202, label %204

202:                                              ; preds = %198
  %203 = bitcast %class.SkColorSpace* %196 to i8*
  call void @_ZdlPv(i8* %203) #12
  br label %204

204:                                              ; preds = %195, %198, %202
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br i1 %59, label %211, label %205

205:                                              ; preds = %204
  %206 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = atomicrmw add i32* %206, i32 -1 acq_rel
  %208 = icmp eq i32 %207, 1
  br i1 %208, label %209, label %211

209:                                              ; preds = %205
  %210 = inttoptr i64 %27 to i8*
  call void @_ZdlPv(i8* %210) #12
  br label %211

211:                                              ; preds = %204, %205, %209
  ret void
}

declare void @_ZN12SkColorSpace8MakeSRGBEv(%class.sk_sp.55* sret) local_unnamed_addr #3

declare void @_ZN11GrColorInfoC1E11GrColorType11SkAlphaType5sk_spI12SkColorSpaceE(%class.GrColorInfo*, i32, i32, %class.sk_sp.55*) unnamed_addr #3

declare %class.GrFragmentProcessor* @_ZN23GrColorSpaceXformEffect4MakeENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEERK11GrColorInfoS8_(%class.GrFragmentProcessor*, %class.GrColorInfo* dereferenceable(24), %class.GrColorInfo* dereferenceable(24)) local_unnamed_addr #3

declare zeroext i1 @_ZNK12SkColorSpace21isNumericalTransferFnEP22skcms_TransferFunction(%class.SkColorSpace*, %struct.skcms_TransferFunction*) local_unnamed_addr #3

declare zeroext i1 @_ZNK12SkColorSpace8toXYZD50EP15skcms_Matrix3x3(%class.SkColorSpace*, %struct.skcms_Matrix3x3*) local_unnamed_addr #3

declare void @_ZN12SkColorSpace7MakeRGBERK22skcms_TransferFunctionRK15skcms_Matrix3x3(%class.sk_sp.55* sret, %struct.skcms_TransferFunction* dereferenceable(28), %struct.skcms_Matrix3x3* dereferenceable(36)) local_unnamed_addr #3

declare void @_ZN22SkColorSpaceXformStepsC2EPK12SkColorSpace11SkAlphaTypeS2_S3_(%struct.SkColorSpaceXformSteps*, %class.SkColorSpace*, i32, %class.SkColorSpace*, i32) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK17SkColorFilterBase7programEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc: argument 0"}
!4 = distinct !{!4, !"_ZNK17SkColorFilterBase7programEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN12SkReadBuffer15readFlattenableI17SkColorFilterBaseEE5sk_spIT_Ev: argument 0"}
!7 = distinct !{!7, !"_ZN12SkReadBuffer15readFlattenableI17SkColorFilterBaseEE5sk_spIT_Ev"}
!8 = distinct !{!8, !9, !"_ZN12SkReadBuffer15readColorFilterEv: argument 0"}
!9 = distinct !{!9, !"_ZN12SkReadBuffer15readColorFilterEv"}
!10 = !{!11, !13}
!11 = distinct !{!11, !12, !"_ZN12SkReadBuffer15readFlattenableI17SkColorFilterBaseEE5sk_spIT_Ev: argument 0"}
!12 = distinct !{!12, !"_ZN12SkReadBuffer15readFlattenableI17SkColorFilterBaseEE5sk_spIT_Ev"}
!13 = distinct !{!13, !14, !"_ZN12SkReadBuffer15readColorFilterEv: argument 0"}
!14 = distinct !{!14, !"_ZN12SkReadBuffer15readColorFilterEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK13SkColorFilter12makeComposedE5sk_spIS_E: argument 0"}
!17 = distinct !{!17, !"_ZNK13SkColorFilter12makeComposedE5sk_spIS_E"}
!18 = !{!19, !16}
!19 = distinct !{!19, !20, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPKS2_: argument 0"}
!20 = distinct !{!20, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPKS2_"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZL9as_CFB_sp5sk_spI13SkColorFilterE: argument 0"}
!23 = distinct !{!23, !"_ZL9as_CFB_sp5sk_spI13SkColorFilterE"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZL9as_CFB_sp5sk_spI13SkColorFilterE: argument 0"}
!26 = distinct !{!26, !"_ZL9as_CFB_sp5sk_spI13SkColorFilterE"}
!27 = !{!28, !16}
!28 = distinct !{!28, !29, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPKS2_: argument 0"}
!29 = distinct !{!29, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPKS2_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPKS2_: argument 0"}
!32 = distinct !{!32, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPKS2_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPKS2_: argument 0"}
!35 = distinct !{!35, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPKS2_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZL9as_CFB_sp5sk_spI13SkColorFilterE: argument 0"}
!38 = distinct !{!38, !"_ZL9as_CFB_sp5sk_spI13SkColorFilterE"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZL9as_CFB_sp5sk_spI13SkColorFilterE: argument 0"}
!41 = distinct !{!41, !"_ZL9as_CFB_sp5sk_spI13SkColorFilterE"}
!42 = !{i8 0, i8 2}
!43 = !{!"branch_weights", i32 1, i32 1048575}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPS2_: argument 0"}
!46 = distinct !{!46, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPS2_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPS2_: argument 0"}
!49 = distinct !{!49, !"_Z9sk_ref_spI13SkColorFilterE5sk_spIT_EPS2_"}
!50 = !{!51, !53}
!51 = distinct !{!51, !52, !"_ZN12SkReadBuffer15readFlattenableI17SkColorFilterBaseEE5sk_spIT_Ev: argument 0"}
!52 = distinct !{!52, !"_ZN12SkReadBuffer15readFlattenableI17SkColorFilterBaseEE5sk_spIT_Ev"}
!53 = distinct !{!53, !54, !"_ZN12SkReadBuffer15readColorFilterEv: argument 0"}
!54 = distinct !{!54, !"_ZN12SkReadBuffer15readColorFilterEv"}
!55 = !{!56, !58}
!56 = distinct !{!56, !57, !"_Z10sk_make_spI26SkWorkingFormatColorFilterJ5sk_spI13SkColorFilterERPK22skcms_TransferFunctionRPK15skcms_Matrix3x3RPK11SkAlphaTypeEES1_IT_EDpOT0_: argument 0"}
!57 = distinct !{!57, !"_Z10sk_make_spI26SkWorkingFormatColorFilterJ5sk_spI13SkColorFilterERPK22skcms_TransferFunctionRPK15skcms_Matrix3x3RPK11SkAlphaTypeEES1_IT_EDpOT0_"}
!58 = distinct !{!58, !59, !"_ZN14SkColorFilters17WithWorkingFormatE5sk_spI13SkColorFilterEPK22skcms_TransferFunctionPK15skcms_Matrix3x3PK11SkAlphaType: argument 0"}
!59 = distinct !{!59, !"_ZN14SkColorFilters17WithWorkingFormatE5sk_spI13SkColorFilterEPK22skcms_TransferFunctionPK15skcms_Matrix3x3PK11SkAlphaType"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_Z10sk_make_spI26SkWorkingFormatColorFilterJ5sk_spI13SkColorFilterERPK22skcms_TransferFunctionRPK15skcms_Matrix3x3RPK11SkAlphaTypeEES1_IT_EDpOT0_: argument 0"}
!62 = distinct !{!62, !"_Z10sk_make_spI26SkWorkingFormatColorFilterJ5sk_spI13SkColorFilterERPK22skcms_TransferFunctionRPK15skcms_Matrix3x3RPK11SkAlphaTypeEES1_IT_EDpOT0_"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_Z25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringEPKc: argument 0"}
!65 = distinct !{!65, !"_Z25SkMakeCachedRuntimeEffectPFN15SkRuntimeEffect6ResultE8SkStringEPKc"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNK17SkColorFilterBase7programEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc: argument 0"}
!68 = distinct !{!68, !"_ZNK17SkColorFilterBase7programEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNK17SkColorFilterBase7programEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc: argument 0"}
!71 = distinct !{!71, !"_ZNK17SkColorFilterBase7programEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZN4skvmL8unpremulENS_5ColorE: argument 0"}
!74 = distinct !{!74, !"_ZN4skvmL8unpremulENS_5ColorE"}
!75 = !{!76, !73}
!76 = distinct !{!76, !77, !"_ZN4skvm7Builder8unpremulENS_5ColorE: argument 0"}
!77 = distinct !{!77, !"_ZN4skvm7Builder8unpremulENS_5ColorE"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN4skvmL6premulENS_5ColorE: argument 0"}
!80 = distinct !{!80, !"_ZN4skvmL6premulENS_5ColorE"}
!81 = !{!82, !79}
!82 = distinct !{!82, !83, !"_ZN4skvm7Builder6premulENS_5ColorE: argument 0"}
!83 = distinct !{!83, !"_ZN4skvm7Builder6premulENS_5ColorE"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZNK11GrColorInfo13refColorSpaceEv: argument 0"}
!86 = distinct !{!86, !"_ZNK11GrColorInfo13refColorSpaceEv"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZNK26SkWorkingFormatColorFilter13workingFormatERK5sk_spI12SkColorSpaceEP11SkAlphaType: argument 0"}
!89 = distinct !{!89, !"_ZNK26SkWorkingFormatColorFilter13workingFormatERK5sk_spI12SkColorSpaceEP11SkAlphaType"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!92 = distinct !{!92, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZNK26SkWorkingFormatColorFilter13workingFormatERK5sk_spI12SkColorSpaceEP11SkAlphaType: argument 0"}
!95 = distinct !{!95, !"_ZNK26SkWorkingFormatColorFilter13workingFormatERK5sk_spI12SkColorSpaceEP11SkAlphaType"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_: argument 0"}
!98 = distinct !{!98, !"_Z9sk_ref_spI12SkColorSpaceE5sk_spIT_EPS2_"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNK26SkWorkingFormatColorFilter13workingFormatERK5sk_spI12SkColorSpaceEP11SkAlphaType: argument 0"}
!101 = distinct !{!101, !"_ZNK26SkWorkingFormatColorFilter13workingFormatERK5sk_spI12SkColorSpaceEP11SkAlphaType"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZNK17SkColorFilterBase7programEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc: argument 0"}
!104 = distinct !{!104, !"_ZNK17SkColorFilterBase7programEPN4skvm7BuilderENS0_5ColorEP12SkColorSpacePNS0_8UniformsEP12SkArenaAlloc"}
