; ModuleID = '../../third_party/blink/renderer/core/css/cssom/css_math_product.cc'
source_filename = "../../third_party/blink/renderer/core/css/cssom/css_math_product.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.226" }
%"class.WTF::HashMap.226" = type { %"class.WTF::HashTable.227" }
%"class.WTF::HashTable.227" = type <{ %"struct.WTF::KeyValuePair.229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.229" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.230" }
%"class.blink::MemberBase.230" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.172", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.188", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.206", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.213", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.152", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.72" = type { %"struct.std::__1::__atomic_base.73" }
%"struct.std::__1::__atomic_base.73" = type { %"struct.std::__1::__atomic_base.74" }
%"struct.std::__1::__atomic_base.74" = type { %"struct.std::__1::__cxx_atomic_impl.75" }
%"struct.std::__1::__cxx_atomic_impl.75" = type { %"struct.std::__1::__cxx_atomic_base_impl.76" }
%"struct.std::__1::__cxx_atomic_base_impl.76" = type { i64 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist.97"* }
%"class.blink::Worklist.97" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::Worklist.104"* }
%"class.blink::Worklist.104" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::Worklist.111"* }
%"class.blink::Worklist.111" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::Worklist.118"* }
%"class.blink::Worklist.118" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::Worklist.125"* }
%"class.blink::Worklist.125" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.72" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.132", %"class.std::__1::__compressed_pair.139", %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.146", [4 x i8] }>
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134", %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { i64 }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { float }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.155", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.164" }
%"class.WTF::Vector.164" = type { %"class.WTF::VectorBuffer.165" }
%"class.WTF::VectorBuffer.165" = type { %"class.WTF::VectorBufferBase.166" }
%"class.WTF::VectorBufferBase.166" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.180" }
%"class.WTF::VectorBuffer.180" = type { %"class.WTF::VectorBufferBase.181" }
%"class.WTF::VectorBufferBase.181" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.194" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.83"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.90"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.97"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.104"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.111"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.217" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.212 }
%class.scoped_refptr.212 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.213" = type { %"struct.std::__1::__atomic_base.214" }
%"struct.std::__1::__atomic_base.214" = type { %"struct.std::__1::__cxx_atomic_impl.215" }
%"struct.std::__1::__cxx_atomic_impl.215" = type { %"struct.std::__1::__cxx_atomic_base_impl.216" }
%"struct.std::__1::__cxx_atomic_base_impl.216" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.299" }
%"struct.std::__1::atomic.299" = type { %"struct.std::__1::__atomic_base.300" }
%"struct.std::__1::__atomic_base.300" = type { %"struct.std::__1::__atomic_base.301" }
%"struct.std::__1::__atomic_base.301" = type { %"struct.std::__1::__cxx_atomic_impl.302" }
%"struct.std::__1::__cxx_atomic_impl.302" = type { %"struct.std::__1::__cxx_atomic_base_impl.303" }
%"struct.std::__1::__cxx_atomic_base_impl.303" = type { i32 }
%"class.blink::CSSMathProduct" = type { %"class.blink::CSSMathVariadic" }
%"class.blink::CSSMathVariadic" = type { %"class.blink::CSSMathValue", %"class.blink::Member" }
%"class.blink::CSSMathValue" = type { %"class.blink::CSSNumericValue" }
%"class.blink::CSSNumericValue" = type { %"class.blink::CSSStyleValue", %"class.blink::CSSNumericValueType" }
%"class.blink::CSSStyleValue" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::CSSNumericValueType" = type { %"class.WTF::Vector", i32, i8, i32, [4 x i8] }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase", [28 x i8] }>
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSNumericArray"* }
%"class.blink::CSSNumericArray" = type { %"class.blink::ScriptWrappable", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.3" }
%"class.WTF::Vector.3" = type { %"class.WTF::VectorBuffer.4" }
%"class.WTF::VectorBuffer.4" = type { %"class.WTF::VectorBufferBase.5" }
%"class.WTF::VectorBufferBase.5" = type { %"class.blink::Member.6"*, i32, i32 }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::CSSNumericValue"* }
%"class.blink::HeapVector.9" = type { %"class.WTF::Vector.12" }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { %"class.blink::Member.15"*, i32, i32 }
%"class.blink::Member.15" = type { %"class.blink::MemberBase.16" }
%"class.blink::MemberBase.16" = type { %"class.blink::V8UnionCSSNumericValueOrDouble"* }
%"class.blink::V8UnionCSSNumericValueOrDouble" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.18" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.18" = type { %"class.v8::TracedReference.19" }
%"class.v8::TracedReference.19" = type { %"class.v8::BasicTracedReference.20" }
%"class.v8::BasicTracedReference.20" = type { %"class.v8::TracedReferenceBase" }
%"class.WTF::VectorBuffer" = type <{ %"class.WTF::VectorBufferBase", [28 x i8], [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::CSSNumericSumValue" }
%"struct.blink::CSSNumericSumValue" = type { %"class.WTF::Vector.21" }
%"class.WTF::Vector.21" = type { %"class.WTF::VectorBuffer.22" }
%"class.WTF::VectorBuffer.22" = type { %"class.WTF::VectorBufferBase.23" }
%"class.WTF::VectorBufferBase.23" = type { %"struct.blink::CSSNumericSumValue::Term"*, i32, i32 }
%"struct.blink::CSSNumericSumValue::Term" = type { double, %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, i32 }
%"class.blink::CSSMathExpressionNode" = type <{ i32 (...)**, i32, i8, i8, i8, i8 }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.30, i32, i8, i8, [2 x i8] }>
%union.anon.30 = type { %"class.WTF::Vector.31" }
%"class.WTF::Vector.31" = type { %"class.WTF::VectorBuffer.32" }
%"class.WTF::VectorBuffer.32" = type { %"class.WTF::VectorBufferBase.33", [16 x i8] }
%"class.WTF::VectorBufferBase.33" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.235, %"class.blink::Member.236", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.235 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.236" = type { %"class.blink::MemberBase.237" }
%"class.blink::MemberBase.237" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.238" }
%"class.blink::Persistent.238" = type { %"class.blink::PersistentBase.239" }
%"class.blink::PersistentBase.239" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.249 }
%union.anon.249 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink15CSSMathVariadic9TypeCheckIPFNS_19CSSNumericValueTypeES2_S2_RbEEES2_RKNS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEET_S3_ = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN5blink15CSSNumericValueD2Ev = comdat any

$_ZN5blink14CSSMathProductD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink15CSSMathVariadic5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink14CSSMathProduct18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink14CSSMathProduct7GetTypeEv = comdat any

$_ZNK5blink13CSSStyleValue22ToCSSValueWithPropertyENS_13CSSPropertyIDE = comdat any

$_ZNK5blink12CSSMathValue11IsUnitValueEv = comdat any

$_ZNK5blink15CSSMathVariadic6EqualsERKNS_15CSSNumericValueE = comdat any

$_ZNK5blink14CSSMathProduct11getOperatorEv = comdat any

$_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi = comdat any

$_ZN3WTF7HashMapIN5blink17CSSPrimitiveValue8UnitTypeEiNS_7IntHashIS3_EENS_10HashTraitsIS3_EENS6_IiEENS_18PartitionAllocatorEE5eraseERKS3_ = comdat any

$_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_ = comdat any

$_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKS3_iEENS_18HashTableAddResultISF_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_ = comdat any

$_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SD_SE_EERKS3_RKS5_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_ = comdat any

$_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEEaSERKS5_ = comdat any

$_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSNumericSumValue4TermEEEmm = comdat any

$_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEEaSERKSF_ = comdat any

$_ZN5blink10TraceTraitINS_15CSSNumericArrayEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK5blink15CSSNumericArray5TraceEPNS_7VisitorE = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15CSSNumericValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm = comdat any

$_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIiS1_E11OffsetRangeES6_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_15CSSNumericArrayEE4CallIJNS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink15CSSNumericArrayD0Ev = comdat any

$_ZNK5blink15CSSNumericArray18GetWrapperTypeInfoEv = comdat any

$_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink15CSSNumericArrayE = comdat any

@.str = private unnamed_addr constant [25 x i8] c"Arguments can't be empty\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"Incompatible types\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"calc(\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c" / \00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c" * \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c")\00", align 1
@_ZTVN5blink14CSSMathProductE = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::CSSNumericValue"*)* @_ZN5blink15CSSNumericValueD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSMathProduct"*)* @_ZN5blink14CSSMathProductD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::CSSMathVariadic"*, %"class.blink::Visitor"*)* @_ZNK5blink15CSSMathVariadic5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::CSSMathProduct"*)* @_ZNK5blink14CSSMathProduct18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i32 (%"class.blink::CSSMathProduct"*)* @_ZNK5blink14CSSMathProduct7GetTypeEv to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSMathValue"*)* @_ZNK5blink12CSSMathValue10ToCSSValueEv to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*, i32)* @_ZNK5blink13CSSStyleValue22ToCSSValueWithPropertyENS_13CSSPropertyIDE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSNumericValue"*)* @_ZNK5blink15CSSNumericValue8toStringEv to i8*), i8* bitcast (%"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)* @_ZN5blink15CSSNumericValue6NegateEv to i8*), i8* bitcast (%"class.blink::CSSNumericValue"* (%"class.blink::CSSNumericValue"*)* @_ZN5blink15CSSNumericValue6InvertEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathValue"*)* @_ZNK5blink12CSSMathValue11IsUnitValueEv to i8*), i8* bitcast (void (%"class.absl::optional"*, %"class.blink::CSSMathProduct"*)* @_ZNK5blink14CSSMathProduct8SumValueEv to i8*), i8* bitcast (i1 (%"class.blink::CSSMathVariadic"*, %"class.blink::CSSNumericValue"*)* @_ZNK5blink15CSSMathVariadic6EqualsERKNS_15CSSNumericValueE to i8*), i8* bitcast (%"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSMathProduct"*)* @_ZNK5blink14CSSMathProduct20ToCalcExpressionNodeEv to i8*), i8* bitcast (void (%"class.blink::CSSMathProduct"*, i1, i1, %"class.WTF::StringBuilder"*)* @_ZNK5blink14CSSMathProduct12BuildCSSTextENS_15CSSNumericValue6NestedENS1_9ParenLessERN3WTF13StringBuilderE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CSSMathProduct"*)* @_ZNK5blink14CSSMathProduct11getOperatorEv to i8*)] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink17CSSPrimitiveValue8UnitTypeEiEEEEPKcv = private unnamed_addr constant [106 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<blink::CSSPrimitiveValue::UnitType, int>]\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.9 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@.str.10 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.11 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSNumericSumValue4TermEEEPKcv = private unnamed_addr constant [79 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSNumericSumValue::Term]\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink15CSSNumericValueE = external unnamed_addr constant { [22 x i8*] }, align 8
@_ZTVN5blink13CSSStyleValueE = external unnamed_addr constant { [15 x i8*] }, align 8
@_ZN5blink14CSSMathProduct18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.14 = private unnamed_addr constant [8 x i8] c"product\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.17 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZTVN5blink15CSSNumericArrayE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSNumericArray"*)* @_ZN5blink15CSSNumericArrayD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::CSSNumericArray"*, %"class.blink::Visitor"*)* @_ZNK5blink15CSSNumericArray5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::CSSNumericArray"*)* @_ZNK5blink15CSSNumericArray18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@_ZN5blink15CSSNumericArray18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathProduct"* @_ZN5blink14CSSMathProduct6CreateERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEERNS_14ExceptionStateE(%"class.blink::HeapVector.9"* dereferenceable(16), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector", align 8
  %4 = getelementptr inbounds %"class.blink::HeapVector.9", %"class.blink::HeapVector.9"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %2
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %1, i32 12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #8
  br label %12

8:                                                ; preds = %2
  call void @_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE(%"class.blink::HeapVector"* nonnull sret %3, %"class.blink::HeapVector.9"* dereferenceable(16) %0) #8
  %9 = call %"class.blink::CSSMathProduct"* @_ZN5blink14CSSMathProduct6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEE(%"class.blink::HeapVector"* nonnull %3)
  %10 = icmp eq %"class.blink::CSSMathProduct"* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #8
  br label %12

12:                                               ; preds = %11, %8, %7
  %13 = phi %"class.blink::CSSMathProduct"* [ null, %7 ], [ null, %11 ], [ %9, %8 ]
  ret %"class.blink::CSSMathProduct"* %13
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathProduct"* @_ZN5blink14CSSMathProduct6CreateENS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEE(%"class.blink::HeapVector"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca %"class.blink::CSSNumericValueType", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #8
  store i8 0, i8* %2, align 1
  %4 = bitcast %"class.blink::CSSNumericValueType"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 64, i1 false)
  call void @_ZN5blink15CSSMathVariadic9TypeCheckIPFNS_19CSSNumericValueTypeES2_S2_RbEEES2_RKNS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEET_S3_(%"class.blink::CSSNumericValueType"* nonnull sret %3, %"class.blink::HeapVector"* dereferenceable(16) %0, void (%"class.blink::CSSNumericValueType"*, %"class.blink::CSSNumericValueType"*, %"class.blink::CSSNumericValueType"*, i8*)* nonnull @_ZN5blink19CSSNumericValueType8MultiplyES0_S0_Rb, i8* nonnull dereferenceable(1) %2)
  %5 = load i8, i8* %2, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %55

7:                                                ; preds = %1
  %8 = call %"class.blink::CSSNumericArray"* @_ZN5blink25MakeGarbageCollectedTraitINS_15CSSNumericArrayEE4CallIJNS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEEEEEPS1_DpOT_(%"class.blink::HeapVector"* dereferenceable(16) %0) #8
  %9 = ptrtoint %"class.blink::CSSNumericArray"* %8 to i64
  %10 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 96) #8
  %11 = bitcast i8* %10 to %"class.blink::CSSMathProduct"*
  %12 = bitcast i8* %10 to i32 (...)***
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink15CSSNumericValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 24
  %15 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds i8, i8* %10, i64 40
  %18 = bitcast i8* %14 to i8**
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %10, i64 32
  %20 = bitcast i8* %19 to i32*
  store i32 7, i32* %20, align 8
  %21 = icmp ugt i32 %16, 7
  br i1 %21, label %22, label %30

22:                                               ; preds = %7
  %23 = zext i32 %16 to i64
  %24 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %23) #8
  %25 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #8
  %26 = ptrtoint i8* %25 to i64
  %27 = bitcast i8* %14 to i64*
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = lshr i64 %24, 2
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* %20, align 8
  br label %30

30:                                               ; preds = %22, %7
  %31 = phi i8* [ %17, %7 ], [ %25, %22 ]
  %32 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds i8, i8* %10, i64 36
  %35 = bitcast i8* %34 to i32*
  store i32 %33, i32* %35, align 4
  %36 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = icmp ne i8* %31, null
  %39 = icmp ne i32* %37, null
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %45, !prof !3

41:                                               ; preds = %30
  %42 = zext i32 %33 to i64
  %43 = bitcast i32* %37 to i8*
  %44 = shl nuw nsw i64 %42, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* nonnull align 4 %43, i64 %44, i1 false) #8
  br label %45

45:                                               ; preds = %30, %41
  %46 = getelementptr inbounds i8, i8* %10, i64 72
  %47 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 1
  %48 = bitcast i32* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %48, i64 12, i1 false) #8
  %49 = getelementptr inbounds i8, i8* %10, i64 88
  %50 = bitcast i8* %49 to i64*
  store i64 %9, i64* %50, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTVN5blink14CSSMathProductE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %51 = getelementptr inbounds i8, i8* %10, i64 -4
  %52 = bitcast i8* %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = or i16 %53, 1
  store atomic i16 %54, i16* %52 release, align 2
  br label %55

55:                                               ; preds = %1, %45
  %56 = phi %"class.blink::CSSMathProduct"* [ %11, %45 ], [ null, %1 ]
  %57 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %61, label %60, !prof !4

60:                                               ; preds = %55
  store i32 0, i32* %57, align 4
  br label %61

61:                                               ; preds = %60, %55
  %62 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32*, i32** %62, align 8
  %64 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %65 = bitcast i8* %64 to i32*
  %66 = icmp eq i32* %63, %65
  br i1 %66, label %69, label %67, !prof !3

67:                                               ; preds = %61
  %68 = bitcast %"class.blink::CSSNumericValueType"* %3 to %"class.WTF::VectorBuffer"*
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %68, i32* %63) #8
  br label %69

69:                                               ; preds = %61, %67
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #8
  ret %"class.blink::CSSMathProduct"* %56
}

declare void @_ZN5blink29CSSNumberishesToNumericValuesERKNS_10HeapVectorINS_6MemberINS_30V8UnionCSSNumericValueOrDoubleEEELj0EEE(%"class.blink::HeapVector"* sret, %"class.blink::HeapVector.9"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSMathVariadic9TypeCheckIPFNS_19CSSNumericValueTypeES2_S2_RbEEES2_RKNS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEET_S3_(%"class.blink::CSSNumericValueType"* noalias sret, %"class.blink::HeapVector"* dereferenceable(16), void (%"class.blink::CSSNumericValueType"*, %"class.blink::CSSNumericValueType"*, %"class.blink::CSSNumericValueType"*, i8*)*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::CSSNumericValueType", align 8
  %6 = alloca %"class.blink::CSSNumericValueType", align 8
  %7 = alloca %"class.blink::CSSNumericValueType", align 8
  store i8 0, i8* %3, align 1
  %8 = bitcast %"class.blink::CSSNumericValueType"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 64, i1 false)
  %9 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0
  %10 = tail call dereferenceable(8) %"class.blink::Member.6"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"* %9, i32 0) #8
  %11 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %0, i64 0, i32 0, i32 0, i32 1, i64 0
  %16 = bitcast %"class.blink::CSSNumericValueType"* %0 to i8**
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  store i32 7, i32* %17, align 8
  %18 = icmp ugt i32 %14, 7
  br i1 %18, label %19, label %27

19:                                               ; preds = %4
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %20) #8
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #8
  %23 = ptrtoint i8* %22 to i64
  %24 = bitcast %"class.blink::CSSNumericValueType"* %0 to i64*
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = lshr i64 %21, 2
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %17, align 8
  br label %27

27:                                               ; preds = %19, %4
  %28 = phi i8* [ %15, %4 ], [ %22, %19 ]
  %29 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = icmp ne i8* %28, null
  %35 = icmp ne i32* %33, null
  %36 = and i1 %34, %35
  br i1 %36, label %37, label %42, !prof !3

37:                                               ; preds = %27
  %38 = load i32, i32* %29, align 4
  %39 = zext i32 %38 to i64
  %40 = bitcast i32* %33 to i8*
  %41 = shl nuw nsw i64 %39, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %40, i64 %41, i1 false) #8
  br label %42

42:                                               ; preds = %27, %37
  %43 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %12, i64 0, i32 1, i32 1
  %45 = bitcast i32* %43 to i8*
  %46 = bitcast i32* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 12, i1 false) #8
  %47 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp ugt i32 %48, 1
  br i1 %49, label %50, label %163

50:                                               ; preds = %42
  %51 = bitcast %"class.blink::CSSNumericValueType"* %5 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 0, i32 0, i32 1, i64 0
  %53 = bitcast %"class.blink::CSSNumericValueType"* %6 to i8**
  %54 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %55 = bitcast %"class.blink::CSSNumericValueType"* %6 to i64*
  %56 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 1
  %59 = bitcast i32* %58 to i8*
  %60 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 0, i32 0, i32 1, i64 0
  %61 = bitcast %"class.blink::CSSNumericValueType"* %7 to i8**
  %62 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %"class.blink::CSSNumericValueType"* %7 to i64*
  %64 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %65 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 1
  %66 = bitcast i32* %65 to i8*
  %67 = bitcast %"class.blink::CSSNumericValueType"* %0 to %"class.WTF::VectorBuffer"*
  %68 = bitcast %"class.blink::CSSNumericValueType"* %5 to %"class.WTF::VectorBuffer"*
  %69 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 1
  %70 = bitcast i32* %69 to i8*
  %71 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %72 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %5, i64 0, i32 0, i32 0, i32 1, i64 0
  %74 = bitcast i8* %73 to i32*
  %75 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = bitcast i8* %60 to i32*
  %77 = bitcast %"class.blink::CSSNumericValueType"* %7 to %"class.WTF::VectorBuffer"*
  %78 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = bitcast i8* %52 to i32*
  %80 = bitcast %"class.blink::CSSNumericValueType"* %6 to %"class.WTF::VectorBuffer"*
  br label %81

81:                                               ; preds = %156, %50
  %82 = phi i32 [ 1, %50 ], [ %159, %156 ]
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %51) #8
  %83 = load i32, i32* %17, align 8
  store i8* %52, i8** %53, align 8
  store i32 7, i32* %54, align 8
  %84 = icmp ugt i32 %83, 7
  br i1 %84, label %85, label %92

85:                                               ; preds = %81
  %86 = zext i32 %83 to i64
  %87 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %86) #8
  %88 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %87, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #8
  %89 = ptrtoint i8* %88 to i64
  store atomic i64 %89, i64* %55 monotonic, align 8
  %90 = lshr i64 %87, 2
  %91 = trunc i64 %90 to i32
  store i32 %91, i32* %54, align 8
  br label %92

92:                                               ; preds = %85, %81
  %93 = phi i8* [ %52, %81 ], [ %88, %85 ]
  %94 = load i32, i32* %31, align 4
  store i32 %94, i32* %56, align 4
  %95 = load i32*, i32** %57, align 8
  %96 = icmp ne i8* %93, null
  %97 = icmp ne i32* %95, null
  %98 = and i1 %96, %97
  br i1 %98, label %99, label %103, !prof !3

99:                                               ; preds = %92
  %100 = zext i32 %94 to i64
  %101 = bitcast i32* %95 to i8*
  %102 = shl nuw nsw i64 %100, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %93, i8* nonnull align 4 %101, i64 %102, i1 false) #8
  br label %103

103:                                              ; preds = %92, %99
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %45, i64 12, i1 false) #8
  %104 = call dereferenceable(8) %"class.blink::Member.6"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"* %9, i32 %82) #8
  %105 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %106, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %108 = load i32, i32* %107, align 8
  store i8* %60, i8** %61, align 8
  store i32 7, i32* %62, align 8
  %109 = icmp ugt i32 %108, 7
  br i1 %109, label %110, label %117

110:                                              ; preds = %103
  %111 = zext i32 %108 to i64
  %112 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %111) #8
  %113 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %112, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #8
  %114 = ptrtoint i8* %113 to i64
  store atomic i64 %114, i64* %63 monotonic, align 8
  %115 = lshr i64 %112, 2
  %116 = trunc i64 %115 to i32
  store i32 %116, i32* %62, align 8
  br label %117

117:                                              ; preds = %110, %103
  %118 = phi i8* [ %60, %103 ], [ %113, %110 ]
  %119 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %106, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  store i32 %120, i32* %64, align 4
  %121 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %106, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = icmp ne i8* %118, null
  %124 = icmp ne i32* %122, null
  %125 = and i1 %123, %124
  br i1 %125, label %126, label %130, !prof !3

126:                                              ; preds = %117
  %127 = zext i32 %120 to i64
  %128 = bitcast i32* %122 to i8*
  %129 = shl nuw nsw i64 %127, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %118, i8* nonnull align 4 %128, i64 %129, i1 false) #8
  br label %130

130:                                              ; preds = %117, %126
  %131 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %106, i64 0, i32 1, i32 1
  %132 = bitcast i32* %131 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %132, i64 12, i1 false) #8
  call void %2(%"class.blink::CSSNumericValueType"* nonnull sret %5, %"class.blink::CSSNumericValueType"* nonnull %6, %"class.blink::CSSNumericValueType"* nonnull %7, i8* dereferenceable(1) %3) #8
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIiS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"* %67, %"class.WTF::VectorBuffer"* nonnull dereferenceable(48) %68, i64 0, i64 0) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %70, i64 12, i1 false) #8
  %133 = load i32, i32* %71, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %136, label %135, !prof !4

135:                                              ; preds = %130
  store i32 0, i32* %71, align 4
  br label %136

136:                                              ; preds = %135, %130
  %137 = load i32*, i32** %72, align 8
  %138 = icmp eq i32* %137, %74
  br i1 %138, label %140, label %139, !prof !3

139:                                              ; preds = %136
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %68, i32* %137) #8
  br label %140

140:                                              ; preds = %136, %139
  store i32* null, i32** %72, align 8
  %141 = load i32, i32* %64, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %144, label %143, !prof !4

143:                                              ; preds = %140
  store i32 0, i32* %64, align 4
  br label %144

144:                                              ; preds = %143, %140
  %145 = load i32*, i32** %75, align 8
  %146 = icmp eq i32* %145, %76
  br i1 %146, label %148, label %147, !prof !3

147:                                              ; preds = %144
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %77, i32* %145) #8
  br label %148

148:                                              ; preds = %144, %147
  store i32* null, i32** %75, align 8
  %149 = load i32, i32* %56, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %152, label %151, !prof !4

151:                                              ; preds = %148
  store i32 0, i32* %56, align 4
  br label %152

152:                                              ; preds = %151, %148
  %153 = load i32*, i32** %78, align 8
  %154 = icmp eq i32* %153, %79
  br i1 %154, label %156, label %155, !prof !3

155:                                              ; preds = %152
  call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* nonnull %80, i32* %153) #8
  br label %156

156:                                              ; preds = %152, %155
  store i32* null, i32** %78, align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %51) #8
  %157 = load i8, i8* %3, align 1, !range !2
  %158 = icmp eq i8 %157, 0
  %159 = add nuw i32 %82, 1
  %160 = load i32, i32* %47, align 4
  %161 = icmp ult i32 %159, %160
  %162 = and i1 %158, %161
  br i1 %162, label %81, label %163

163:                                              ; preds = %156, %42
  ret void
}

declare void @_ZN5blink19CSSNumericValueType8MultiplyES0_S0_Rb(%"class.blink::CSSNumericValueType"* sret, %"class.blink::CSSNumericValueType"*, %"class.blink::CSSNumericValueType"*, i8* dereferenceable(1)) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14CSSMathProduct8SumValueEv(%"class.absl::optional"* noalias nocapture sret, %"class.blink::CSSMathProduct"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"struct.blink::CSSNumericSumValue", align 8
  %5 = alloca %"struct.blink::CSSNumericSumValue::Term", align 8
  %6 = alloca %"class.absl::optional", align 8
  %7 = alloca %"struct.blink::CSSNumericSumValue", align 8
  %8 = alloca %"class.WTF::HashMap", align 8
  %9 = bitcast %"struct.blink::CSSNumericSumValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %4, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #8
  %14 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %5, i64 0, i32 0
  store double 1.000000e+00, double* %15, align 8
  %16 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %5, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %5, i64 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %5, i64 0, i32 1, i32 0, i32 2
  %19 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %5, i64 0, i32 1, i32 0, i32 3
  %20 = bitcast %"class.WTF::HashMap"* %16 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store i32 0, i32* %17, align 8
  store i32 0, i32* %18, align 4
  store i32 0, i32* %19, align 8
  call void @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.21"* nonnull %10, %"struct.blink::CSSNumericSumValue::Term"* nonnull dereferenceable(32) %5) #8
  %21 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %5, i64 0, i32 1, i32 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %21, align 8
  %23 = icmp eq %"struct.WTF::KeyValuePair"* %22, null
  br i1 %23, label %27, label %24, !prof !3

24:                                               ; preds = %2
  %25 = bitcast %"struct.WTF::KeyValuePair"* %22 to i8*
  %26 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %5, i64 0, i32 1, i32 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %25) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %26, align 8
  br label %27

27:                                               ; preds = %24, %2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8
  %28 = getelementptr inbounds %"class.blink::CSSMathProduct", %"class.blink::CSSMathProduct"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %29 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %31, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %397, label %37

37:                                               ; preds = %27
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = bitcast %"struct.blink::CSSNumericSumValue"* %7 to i8*
  %40 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %7, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %44 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %8, i64 0, i32 0
  %47 = bitcast %"class.WTF::HashMap"* %8 to i8*
  %48 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %8, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %8, i64 0, i32 0, i32 1
  %50 = bitcast i32* %3 to i8*
  %51 = bitcast %"class.WTF::HashMap"* %8 to i64*
  %52 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %8, i64 0, i32 0, i32 2
  %53 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %8, i64 0, i32 0, i32 3
  %54 = bitcast %"struct.blink::CSSNumericSumValue"* %7 to i64*
  %55 = bitcast %"struct.blink::CSSNumericSumValue"* %7 to i8**
  %56 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %58 = getelementptr inbounds %"struct.blink::CSSNumericSumValue", %"struct.blink::CSSNumericSumValue"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = bitcast %"struct.blink::CSSNumericSumValue"* %57 to i8**
  br label %63

60:                                               ; preds = %369, %396
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #8
  %61 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %64, i64 1
  %62 = icmp eq %"class.blink::Member.6"* %61, %35
  br i1 %62, label %397, label %63

63:                                               ; preds = %37, %60
  %64 = phi %"class.blink::Member.6"* [ %31, %37 ], [ %61, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  %65 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %65, align 8
  %67 = bitcast %"class.blink::CSSNumericValue"* %66 to void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)***
  %68 = load void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)**, void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)*, void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)** %68, i64 16
  %70 = load void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)*, void (%"class.absl::optional"*, %"class.blink::CSSNumericValue"*)** %69, align 8
  call void %70(%"class.absl::optional"* nonnull sret %6, %"class.blink::CSSNumericValue"* %66) #8
  %71 = load i8, i8* %38, align 8, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %408, label %73

73:                                               ; preds = %63
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 16, i1 false) #8
  %74 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %11, align 8
  %75 = load i32, i32* %13, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %74, i64 %76
  %78 = icmp eq i32 %75, 0
  br i1 %78, label %79, label %105

79:                                               ; preds = %117, %73
  %80 = call dereferenceable(16) %"class.WTF::Vector.21"* @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEEaSERKS5_(%"class.WTF::Vector.21"* nonnull %10, %"class.WTF::Vector.21"* nonnull dereferenceable(16) %40) #8
  %81 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %41, align 8
  %82 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %81, null
  br i1 %82, label %369, label %83, !prof !3

83:                                               ; preds = %79
  %84 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %81 to i8*
  %85 = load i32, i32* %43, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %102, label %87, !prof !4

87:                                               ; preds = %83
  %88 = zext i32 %85 to i64
  %89 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %81, i64 %88
  br label %90

90:                                               ; preds = %97, %87
  %91 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %98, %97 ], [ %81, %87 ]
  %92 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %91, i64 0, i32 1, i32 0, i32 0
  %93 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %92, align 8
  %94 = icmp eq %"struct.WTF::KeyValuePair"* %93, null
  br i1 %94, label %97, label %95, !prof !3

95:                                               ; preds = %90
  %96 = bitcast %"struct.WTF::KeyValuePair"* %93 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %96) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %92, align 8
  br label %97

97:                                               ; preds = %95, %90
  %98 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %91, i64 1
  %99 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %98, %89
  br i1 %99, label %100, label %90

100:                                              ; preds = %97
  store i32 0, i32* %43, align 4
  %101 = load i8*, i8** %55, align 8
  br label %102

102:                                              ; preds = %100, %83
  %103 = phi i8* [ %101, %100 ], [ %84, %83 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %103) #8
  store %"struct.blink::CSSNumericSumValue::Term"* null, %"struct.blink::CSSNumericSumValue::Term"** %41, align 8
  br label %369

104:                                              ; preds = %120
  call void @llvm.trap() #8
  unreachable

105:                                              ; preds = %73, %120
  %106 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %118, %120 ], [ %74, %73 ]
  %107 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %44, align 8
  %108 = load i32, i32* %45, align 4
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %107, i64 %109
  %111 = icmp eq i32 %108, 0
  br i1 %111, label %117, label %112

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %106, i64 0, i32 0
  %114 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %106, i64 0, i32 1, i32 0, i32 2
  %115 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %106, i64 0, i32 1, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %106, i64 0, i32 1, i32 0, i32 1
  br label %123

117:                                              ; preds = %366, %105
  %118 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %106, i64 1
  %119 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %118, %77
  br i1 %119, label %79, label %120

120:                                              ; preds = %117
  %121 = load i8, i8* %38, align 8, !range !2
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %104, label %105, !prof !4

123:                                              ; preds = %112, %366
  %124 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %107, %112 ], [ %367, %366 ]
  %125 = load double, double* %113, align 8
  %126 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %124, i64 0, i32 0
  %127 = load double, double* %126, align 8
  %128 = fmul double %125, %127
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 20, i1 false) #8
  %129 = load i32, i32* %114, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %169, label %131

131:                                              ; preds = %123
  call void @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* nonnull %46, i32 %129) #8
  %132 = load i32, i32* %114, align 4
  %133 = icmp eq i32 %132, 0
  %134 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %115, align 8
  %135 = load i32, i32* %116, align 8
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %134, i64 %136
  br i1 %133, label %169, label %138

138:                                              ; preds = %131
  %139 = icmp eq i32 %135, 0
  br i1 %139, label %149, label %140

140:                                              ; preds = %138, %146
  %141 = phi %"struct.WTF::KeyValuePair"* [ %147, %146 ], [ %134, %138 ]
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %141, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = or i32 %143, 1
  %145 = icmp eq i32 %144, -127
  br i1 %145, label %146, label %149

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %141, i64 1
  %148 = icmp eq %"struct.WTF::KeyValuePair"* %147, %137
  br i1 %148, label %169, label %140

149:                                              ; preds = %140, %138
  %150 = phi %"struct.WTF::KeyValuePair"* [ %134, %138 ], [ %141, %140 ]
  %151 = icmp eq %"struct.WTF::KeyValuePair"* %150, %137
  br i1 %151, label %169, label %152

152:                                              ; preds = %149, %167
  %153 = phi %"struct.WTF::KeyValuePair"* [ %159, %167 ], [ %150, %149 ]
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %153, i64 0, i32 0
  %155 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SD_SE_EERKS3_RKS5_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %46, i32* dereferenceable(4) %154, %"struct.WTF::KeyValuePair"* dereferenceable(8) %153) #8
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %153, i64 1
  %157 = icmp eq %"struct.WTF::KeyValuePair"* %156, %137
  br i1 %157, label %169, label %158

158:                                              ; preds = %152, %164
  %159 = phi %"struct.WTF::KeyValuePair"* [ %165, %164 ], [ %156, %152 ]
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %159, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = or i32 %161, 1
  %163 = icmp eq i32 %162, -127
  br i1 %163, label %164, label %167

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %159, i64 1
  %166 = icmp eq %"struct.WTF::KeyValuePair"* %165, %137
  br i1 %166, label %169, label %158

167:                                              ; preds = %158
  %168 = icmp eq %"struct.WTF::KeyValuePair"* %159, %137
  br i1 %168, label %169, label %152

169:                                              ; preds = %146, %152, %167, %164, %123, %131, %149
  %170 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %124, i64 0, i32 1, i32 0, i32 2
  %171 = load i32, i32* %170, align 4, !noalias !5
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %124, i64 0, i32 1, i32 0, i32 0
  %174 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %173, align 8, !noalias !5
  %175 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %124, i64 0, i32 1, i32 0, i32 1
  %176 = load i32, i32* %175, align 8, !noalias !5
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %174, i64 %177
  br i1 %172, label %320, label %179

179:                                              ; preds = %169
  %180 = icmp eq i32 %176, 0
  br i1 %180, label %190, label %181

181:                                              ; preds = %179, %187
  %182 = phi %"struct.WTF::KeyValuePair"* [ %188, %187 ], [ %174, %179 ]
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %182, i64 0, i32 0
  %184 = load i32, i32* %183, align 4, !noalias !5
  %185 = or i32 %184, 1
  %186 = icmp eq i32 %185, -127
  br i1 %186, label %187, label %190

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %182, i64 1
  %189 = icmp eq %"struct.WTF::KeyValuePair"* %188, %178
  br i1 %189, label %320, label %181

190:                                              ; preds = %181, %179
  %191 = phi %"struct.WTF::KeyValuePair"* [ %174, %179 ], [ %182, %181 ]
  %192 = icmp eq %"struct.WTF::KeyValuePair"* %191, %178
  br i1 %192, label %320, label %193

193:                                              ; preds = %190, %318
  %194 = phi %"struct.WTF::KeyValuePair"* [ %310, %318 ], [ %191, %190 ]
  %195 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %194, i64 0, i32 0
  %196 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %48, align 8, !noalias !5
  %197 = icmp eq %"struct.WTF::KeyValuePair"* %196, null
  br i1 %197, label %288, label %198

198:                                              ; preds = %193
  %199 = load i32, i32* %49, align 8, !noalias !5
  %200 = add i32 %199, -1
  %201 = zext i32 %200 to i64
  %202 = load i32, i32* %195, align 4, !noalias !5
  %203 = shl i32 %202, 15
  %204 = xor i32 %203, -1
  %205 = add i32 %202, %204
  %206 = lshr i32 %205, 10
  %207 = xor i32 %206, %205
  %208 = mul i32 %207, 9
  %209 = lshr i32 %208, 6
  %210 = xor i32 %209, %208
  %211 = shl i32 %210, 11
  %212 = xor i32 %211, -1
  %213 = add i32 %210, %212
  %214 = lshr i32 %213, 16
  %215 = xor i32 %214, %213
  %216 = and i32 %215, %200
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %196, i64 %217
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %218, i64 0, i32 0
  %220 = load i32, i32* %219, align 4, !noalias !5
  %221 = icmp eq i32 %220, %202
  br i1 %221, label %250, label %222

222:                                              ; preds = %198
  %223 = xor i32 %215, -1
  %224 = lshr i32 %213, 23
  %225 = add i32 %224, %223
  %226 = shl i32 %225, 12
  %227 = xor i32 %226, %225
  %228 = lshr i32 %227, 7
  %229 = xor i32 %228, %227
  %230 = shl i32 %229, 2
  %231 = xor i32 %230, %229
  %232 = lshr i32 %231, 20
  %233 = xor i32 %232, %231
  %234 = or i32 %233, 1
  %235 = zext i32 %234 to i64
  br label %236

236:                                              ; preds = %241, %222
  %237 = phi i32 [ %220, %222 ], [ %248, %241 ]
  %238 = phi i64 [ %217, %222 ], [ %245, %241 ]
  %239 = phi i64 [ 0, %222 ], [ %243, %241 ]
  %240 = icmp eq i32 %237, -128
  br i1 %240, label %288, label %241

241:                                              ; preds = %236
  %242 = icmp eq i64 %239, 0
  %243 = select i1 %242, i64 %235, i64 %239
  %244 = add i64 %243, %238
  %245 = and i64 %244, %201
  %246 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %196, i64 %245
  %247 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %246, i64 0, i32 0
  %248 = load i32, i32* %247, align 4, !noalias !5
  %249 = icmp eq i32 %248, %202
  br i1 %249, label %250, label %236

250:                                              ; preds = %241, %198
  %251 = phi %"struct.WTF::KeyValuePair"* [ %218, %198 ], [ %246, %241 ]
  %252 = icmp eq %"struct.WTF::KeyValuePair"* %251, null
  br i1 %252, label %288, label %253

253:                                              ; preds = %250
  br i1 %221, label %282, label %254

254:                                              ; preds = %253
  %255 = xor i32 %215, -1
  %256 = lshr i32 %213, 23
  %257 = add i32 %256, %255
  %258 = shl i32 %257, 12
  %259 = xor i32 %258, %257
  %260 = lshr i32 %259, 7
  %261 = xor i32 %260, %259
  %262 = shl i32 %261, 2
  %263 = xor i32 %262, %261
  %264 = lshr i32 %263, 20
  %265 = xor i32 %264, %263
  %266 = or i32 %265, 1
  %267 = zext i32 %266 to i64
  br label %268

268:                                              ; preds = %273, %254
  %269 = phi i32 [ %220, %254 ], [ %280, %273 ]
  %270 = phi i64 [ %217, %254 ], [ %277, %273 ]
  %271 = phi i64 [ 0, %254 ], [ %275, %273 ]
  %272 = icmp eq i32 %269, -128
  br i1 %272, label %288, label %273

273:                                              ; preds = %268
  %274 = icmp eq i64 %271, 0
  %275 = select i1 %274, i64 %267, i64 %271
  %276 = add i64 %275, %270
  %277 = and i64 %276, %201
  %278 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %196, i64 %277
  %279 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %278, i64 0, i32 0
  %280 = load i32, i32* %279, align 4, !noalias !5
  %281 = icmp eq i32 %280, %202
  br i1 %281, label %282, label %268

282:                                              ; preds = %273, %253
  %283 = phi %"struct.WTF::KeyValuePair"* [ %218, %253 ], [ %278, %273 ]
  %284 = icmp eq %"struct.WTF::KeyValuePair"* %283, null
  br i1 %284, label %288, label %285

285:                                              ; preds = %282
  %286 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %283, i64 0, i32 1
  %287 = load i32, i32* %286, align 4, !noalias !5
  br label %288

288:                                              ; preds = %236, %268, %285, %282, %250, %193
  %289 = phi i32 [ 0, %250 ], [ %287, %285 ], [ 0, %282 ], [ 0, %193 ], [ 0, %268 ], [ 0, %236 ]
  %290 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %194, i64 0, i32 1
  %291 = load i32, i32* %290, align 4, !noalias !5
  %292 = sub i32 0, %291
  %293 = icmp eq i32 %289, %292
  br i1 %293, label %294, label %295

294:                                              ; preds = %288
  call void @_ZN3WTF7HashMapIN5blink17CSSPrimitiveValue8UnitTypeEiNS_7IntHashIS3_EENS_10HashTraitsIS3_EENS6_IiEENS_18PartitionAllocatorEE5eraseERKS3_(%"class.WTF::HashMap"* nonnull %8, i32* dereferenceable(4) %195) #8, !noalias !5
  br label %306

295:                                              ; preds = %288
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50) #8, !noalias !5
  %296 = add nsw i32 %291, %289
  store i32 %296, i32* %3, align 4, !noalias !5
  %297 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKS3_iEENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %46, i32* dereferenceable(4) %195, i32* nonnull dereferenceable(4) %3) #8, !noalias !5
  %298 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %297, 1
  %299 = and i8 %298, 1
  %300 = icmp eq i8 %299, 0
  br i1 %300, label %301, label %305

301:                                              ; preds = %295
  %302 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %297, 0
  %303 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %302, i64 0, i32 1
  %304 = load i32, i32* %3, align 4, !noalias !5
  store i32 %304, i32* %303, align 4, !noalias !5
  br label %305

305:                                              ; preds = %301, %295
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50) #8, !noalias !5
  br label %306

306:                                              ; preds = %305, %294
  %307 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %194, i64 1
  %308 = icmp eq %"struct.WTF::KeyValuePair"* %307, %178
  br i1 %308, label %320, label %309

309:                                              ; preds = %306, %315
  %310 = phi %"struct.WTF::KeyValuePair"* [ %316, %315 ], [ %307, %306 ]
  %311 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %310, i64 0, i32 0
  %312 = load i32, i32* %311, align 4, !noalias !5
  %313 = or i32 %312, 1
  %314 = icmp eq i32 %313, -127
  br i1 %314, label %315, label %318

315:                                              ; preds = %309
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %310, i64 1
  %317 = icmp eq %"struct.WTF::KeyValuePair"* %316, %178
  br i1 %317, label %320, label %309

318:                                              ; preds = %309
  %319 = icmp eq %"struct.WTF::KeyValuePair"* %310, %178
  br i1 %319, label %320, label %193

320:                                              ; preds = %187, %306, %318, %315, %169, %190
  %321 = load i64, i64* %51, align 8, !noalias !5
  store atomic i64 0, i64* %51 monotonic, align 8, !noalias !5
  %322 = load i32, i32* %49, align 8, !noalias !5
  store i32 0, i32* %49, align 8, !noalias !5
  %323 = load i32, i32* %52, align 4, !noalias !5
  store i32 0, i32* %52, align 4, !noalias !5
  %324 = load i32, i32* %53, align 8, !noalias !5
  %325 = and i32 %324, 2147483647
  %326 = and i32 %324, -2147483648
  store i32 %326, i32* %53, align 8, !noalias !5
  %327 = load i32, i32* %43, align 4
  %328 = load i32, i32* %42, align 8
  %329 = icmp eq i32 %327, %328
  br i1 %329, label %330, label %350, !prof !4

330:                                              ; preds = %320
  %331 = add i32 %327, 1
  %332 = lshr i32 %327, 2
  %333 = add i32 %331, %332
  %334 = icmp ugt i32 %333, 4
  %335 = select i1 %334, i32 %333, i32 4
  %336 = icmp ugt i32 %335, %331
  %337 = select i1 %336, i32 %335, i32 %331
  %338 = icmp ult i32 %327, %337
  br i1 %338, label %339, label %350, !prof !3

339:                                              ; preds = %330
  %340 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %41, align 8
  %341 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %340, null
  br i1 %341, label %342, label %349

342:                                              ; preds = %339
  %343 = zext i32 %337 to i64
  %344 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSNumericSumValue4TermEEEmm(i64 %343) #8
  %345 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %344, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSNumericSumValue4TermEEEPKcv, i64 0, i64 0)) #8
  %346 = ptrtoint i8* %345 to i64
  store atomic i64 %346, i64* %54 monotonic, align 8
  %347 = lshr i64 %344, 5
  %348 = trunc i64 %347 to i32
  store i32 %348, i32* %42, align 8
  br label %350

349:                                              ; preds = %339
  call void @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.21"* nonnull %40, i32 %337) #8
  br label %350

350:                                              ; preds = %349, %342, %330, %320
  %351 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %41, align 8
  %352 = load i32, i32* %43, align 4
  %353 = zext i32 %352 to i64
  %354 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %351, i64 %353, i32 0
  store double %128, double* %354, align 8
  %355 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %351, i64 %353, i32 1
  %356 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %351, i64 %353, i32 1, i32 0, i32 1
  %357 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %351, i64 %353, i32 1, i32 0, i32 2
  %358 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %351, i64 %353, i32 1, i32 0, i32 3
  %359 = bitcast %"class.WTF::HashMap"* %355 to i64*
  store atomic i64 %321, i64* %359 monotonic, align 8
  store i32 %322, i32* %356, align 4
  store i32 %323, i32* %357, align 4
  store i32 %325, i32* %358, align 8
  %360 = load i32, i32* %43, align 4
  %361 = add i32 %360, 1
  store i32 %361, i32* %43, align 4
  %362 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %48, align 8
  %363 = icmp eq %"struct.WTF::KeyValuePair"* %362, null
  br i1 %363, label %366, label %364, !prof !3

364:                                              ; preds = %350
  %365 = bitcast %"struct.WTF::KeyValuePair"* %362 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %365) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %48, align 8
  br label %366

366:                                              ; preds = %350, %364
  %367 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %124, i64 1
  %368 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %367, %110
  br i1 %368, label %117, label %123

369:                                              ; preds = %102, %79
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #8
  %370 = load i8, i8* %38, align 8, !range !2
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %60, label %372

372:                                              ; preds = %369
  %373 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %58, align 8
  %374 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %373, null
  br i1 %374, label %396, label %375, !prof !3

375:                                              ; preds = %372
  %376 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %373 to i8*
  %377 = load i32, i32* %45, align 4
  %378 = icmp eq i32 %377, 0
  br i1 %378, label %394, label %379, !prof !4

379:                                              ; preds = %375
  %380 = zext i32 %377 to i64
  %381 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %373, i64 %380
  br label %382

382:                                              ; preds = %389, %379
  %383 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %390, %389 ], [ %373, %379 ]
  %384 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %383, i64 0, i32 1, i32 0, i32 0
  %385 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %384, align 8
  %386 = icmp eq %"struct.WTF::KeyValuePair"* %385, null
  br i1 %386, label %389, label %387, !prof !3

387:                                              ; preds = %382
  %388 = bitcast %"struct.WTF::KeyValuePair"* %385 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %388) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %384, align 8
  br label %389

389:                                              ; preds = %387, %382
  %390 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %383, i64 1
  %391 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %390, %381
  br i1 %391, label %392, label %382

392:                                              ; preds = %389
  store i32 0, i32* %45, align 4
  %393 = load i8*, i8** %59, align 8
  br label %394

394:                                              ; preds = %392, %375
  %395 = phi i8* [ %393, %392 ], [ %376, %375 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %395) #8
  store %"struct.blink::CSSNumericSumValue::Term"* null, %"struct.blink::CSSNumericSumValue::Term"** %58, align 8
  br label %396

396:                                              ; preds = %394, %372
  store i8 0, i8* %38, align 8
  br label %60

397:                                              ; preds = %60, %27
  %398 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %398, align 8
  %399 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %400 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 1
  %401 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %402 = bitcast %"struct.blink::CSSNumericSumValue"* %4 to i64*
  %403 = bitcast %"struct.blink::CSSNumericSumValue"* %399 to i64*
  store i64 0, i64* %403, align 8
  %404 = load i64, i64* %402, align 8
  %405 = bitcast %"struct.blink::CSSNumericSumValue"* %399 to i64*
  store atomic i64 0, i64* %402 monotonic, align 8
  store atomic i64 %404, i64* %405 monotonic, align 8
  %406 = load i32, i32* %12, align 8
  store i32 %406, i32* %400, align 8
  store i32 0, i32* %12, align 8
  %407 = load i32, i32* %13, align 4
  store i32 %407, i32* %401, align 4
  store i32 0, i32* %13, align 4
  br label %433

408:                                              ; preds = %63
  store i8 0, i8* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #8
  %409 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %11, align 8
  %410 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %409, null
  br i1 %410, label %433, label %411, !prof !3

411:                                              ; preds = %408
  %412 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %409 to i8*
  %413 = load i32, i32* %13, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %431, label %415, !prof !4

415:                                              ; preds = %411
  %416 = zext i32 %413 to i64
  %417 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %409, i64 %416
  br label %418

418:                                              ; preds = %425, %415
  %419 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %426, %425 ], [ %409, %415 ]
  %420 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %419, i64 0, i32 1, i32 0, i32 0
  %421 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %420, align 8
  %422 = icmp eq %"struct.WTF::KeyValuePair"* %421, null
  br i1 %422, label %425, label %423, !prof !3

423:                                              ; preds = %418
  %424 = bitcast %"struct.WTF::KeyValuePair"* %421 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %424) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %420, align 8
  br label %425

425:                                              ; preds = %423, %418
  %426 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %419, i64 1
  %427 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %426, %417
  br i1 %427, label %428, label %418

428:                                              ; preds = %425
  store i32 0, i32* %13, align 4
  %429 = bitcast %"struct.blink::CSSNumericSumValue"* %4 to i8**
  %430 = load i8*, i8** %429, align 8
  br label %431

431:                                              ; preds = %428, %411
  %432 = phi i8* [ %430, %428 ], [ %412, %411 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %432) #8
  store %"struct.blink::CSSNumericSumValue::Term"* null, %"struct.blink::CSSNumericSumValue::Term"** %11, align 8
  br label %433

433:                                              ; preds = %397, %408, %431
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMathExpressionNode"* @_ZNK5blink14CSSMathProduct20ToCalcExpressionNodeEv(%"class.blink::CSSMathProduct"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSMathProduct", %"class.blink::CSSMathProduct"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %3, i64 0, i32 1, i32 0
  %5 = tail call dereferenceable(8) %"class.blink::Member.6"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"* %4, i32 0) #8
  %6 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %6, align 8
  %8 = bitcast %"class.blink::CSSNumericValue"* %7 to %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)***
  %9 = load %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)**, %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)*, %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)** %9, i64 18
  %11 = load %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)*, %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)** %10, align 8
  %12 = tail call %"class.blink::CSSMathExpressionNode"* %11(%"class.blink::CSSNumericValue"* %7) #8
  %13 = icmp eq %"class.blink::CSSMathExpressionNode"* %12, null
  br i1 %13, label %40, label %14

14:                                               ; preds = %1
  %15 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %2, align 8
  %16 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp ugt i32 %17, 1
  br i1 %18, label %19, label %40

19:                                               ; preds = %14, %33
  %20 = phi %"class.blink::CSSNumericArray"* [ %36, %33 ], [ %15, %14 ]
  %21 = phi i32 [ %35, %33 ], [ 1, %14 ]
  %22 = phi %"class.blink::CSSMathExpressionNode"* [ %34, %33 ], [ %12, %14 ]
  %23 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %20, i64 0, i32 1, i32 0
  %24 = tail call dereferenceable(8) %"class.blink::Member.6"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"* %23, i32 %21) #8
  %25 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %25, align 8
  %27 = bitcast %"class.blink::CSSNumericValue"* %26 to %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)***
  %28 = load %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)**, %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)*, %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)** %28, i64 18
  %30 = load %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)*, %"class.blink::CSSMathExpressionNode"* (%"class.blink::CSSNumericValue"*)** %29, align 8
  %31 = tail call %"class.blink::CSSMathExpressionNode"* %30(%"class.blink::CSSNumericValue"* %26) #8
  %32 = icmp eq %"class.blink::CSSMathExpressionNode"* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %19
  %34 = tail call %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation6CreateEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"* %22, %"class.blink::CSSMathExpressionNode"* nonnull %31, i32 2) #8
  %35 = add nuw i32 %21, 1
  %36 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %2, align 8
  %37 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %36, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp ult i32 %35, %38
  br i1 %39, label %19, label %40

40:                                               ; preds = %19, %33, %1, %14
  %41 = phi %"class.blink::CSSMathExpressionNode"* [ null, %1 ], [ %12, %14 ], [ %34, %33 ], [ null, %19 ]
  ret %"class.blink::CSSMathExpressionNode"* %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14CSSMathProduct12BuildCSSTextENS_15CSSNumericValue6NestedENS1_9ParenLessERN3WTF13StringBuilderE(%"class.blink::CSSMathProduct"* nocapture readonly, i1 zeroext, i1 zeroext, %"class.WTF::StringBuilder"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  br i1 %2, label %9, label %17

9:                                                ; preds = %4
  %10 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8
  %11 = select i1 %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)
  %12 = select i1 %1, i32 5, i32 1
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* %11, i8** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %12, i32* %16, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8
  br label %17

17:                                               ; preds = %9, %4
  %18 = getelementptr inbounds %"class.blink::CSSMathProduct", %"class.blink::CSSMathProduct"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %19, i64 0, i32 1, i32 0
  %21 = call dereferenceable(8) %"class.blink::Member.6"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"* %20, i32 0) #8
  %22 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %22, align 8
  %24 = bitcast %"class.blink::CSSNumericValue"* %23 to void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)***
  %25 = load void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)**, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)** %25, i64 19
  %27 = load void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)** %26, align 8
  call void %27(%"class.blink::CSSNumericValue"* %23, i1 zeroext false, i1 zeroext true, %"class.WTF::StringBuilder"* dereferenceable(48) %3) #8
  %28 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp ugt i32 %29, 1
  br i1 %30, label %31, label %40

31:                                               ; preds = %17
  %32 = bitcast %"class.WTF::StringView"* %7 to i8*
  %33 = bitcast %"class.WTF::StringView"* %7 to i64*
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %36 = bitcast %"class.WTF::StringView"* %6 to i8*
  %37 = bitcast %"class.WTF::StringView"* %6 to i64*
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  br label %41

40:                                               ; preds = %68, %17
  br i1 %2, label %72, label %78

41:                                               ; preds = %31, %68
  %42 = phi i32 [ 1, %31 ], [ %69, %68 ]
  %43 = call dereferenceable(8) %"class.blink::Member.6"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"* %20, i32 %42) #8
  %44 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %45, i64 0, i32 0
  %47 = bitcast %"class.blink::CSSNumericValue"* %45 to i32 (%"class.blink::CSSStyleValue"*)***
  %48 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %47, align 8
  %49 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %48, i64 9
  %50 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %49, align 8
  %51 = call i32 %50(%"class.blink::CSSStyleValue"* %46) #8
  %52 = icmp eq i32 %51, 7
  br i1 %52, label %53, label %62

53:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #8
  %54 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %54, i64* %37, align 8
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8** %38, align 8
  store i32 3, i32* %39, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #8
  %55 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %45, i64 1
  %56 = bitcast %"class.blink::CSSNumericValue"* %55 to %"class.blink::CSSNumericValue"**
  %57 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %56, align 8
  %58 = bitcast %"class.blink::CSSNumericValue"* %57 to void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)***
  %59 = load void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)**, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)** %59, i64 19
  %61 = load void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)** %60, align 8
  call void %61(%"class.blink::CSSNumericValue"* %57, i1 zeroext false, i1 zeroext true, %"class.WTF::StringBuilder"* dereferenceable(48) %3) #8
  br label %68

62:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #8
  %63 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %63, i64* %33, align 8
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8** %34, align 8
  store i32 3, i32* %35, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #8
  %64 = bitcast %"class.blink::CSSNumericValue"* %45 to void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)***
  %65 = load void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)**, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)** %65, i64 19
  %67 = load void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)*, void (%"class.blink::CSSNumericValue"*, i1, i1, %"class.WTF::StringBuilder"*)** %66, align 8
  call void %67(%"class.blink::CSSNumericValue"* %45, i1 zeroext false, i1 zeroext true, %"class.WTF::StringBuilder"* dereferenceable(48) %3) #8
  br label %68

68:                                               ; preds = %62, %53
  %69 = add nuw i32 %42, 1
  %70 = load i32, i32* %28, align 4
  %71 = icmp ult i32 %69, %70
  br i1 %71, label %41, label %40

72:                                               ; preds = %40
  %73 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #8
  %74 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %75 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i8** %76, align 8
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 1, i32* %77, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #8
  br label %78

78:                                               ; preds = %72, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #8
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #8
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #8
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #8
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #8
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSNumericValueD2Ev(%"class.blink::CSSNumericValue"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink15CSSNumericValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7, !prof !4

7:                                                ; preds = %1
  store i32 0, i32* %4, align 4
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %12 = bitcast i8* %11 to i32*
  %13 = icmp eq i32* %10, %12
  br i1 %13, label %16, label %14, !prof !3

14:                                               ; preds = %8
  %15 = bitcast %"class.blink::CSSNumericValueType"* %3 to %"class.WTF::VectorBuffer"*
  tail call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* %15, i32* %10) #8
  br label %16

16:                                               ; preds = %8, %14
  store i32* null, i32** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink13CSSStyleValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #8
  br label %33

33:                                               ; preds = %16, %29, %32
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14CSSMathProductD0Ev(%"class.blink::CSSMathProduct"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSMathProduct", %"class.blink::CSSMathProduct"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [22 x i8*] }, { [22 x i8*] }* @_ZTVN5blink15CSSNumericValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CSSMathProduct", %"class.blink::CSSMathProduct"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.blink::CSSMathProduct", %"class.blink::CSSMathProduct"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7, !prof !4

7:                                                ; preds = %1
  store i32 0, i32* %4, align 4
  br label %8

8:                                                ; preds = %7, %1
  %9 = getelementptr inbounds %"class.blink::CSSNumericValueType", %"class.blink::CSSNumericValueType"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds %"class.blink::CSSMathProduct", %"class.blink::CSSMathProduct"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i64 0
  %12 = bitcast i8* %11 to i32*
  %13 = icmp eq i32* %10, %12
  br i1 %13, label %16, label %14, !prof !3

14:                                               ; preds = %8
  %15 = bitcast %"class.blink::CSSNumericValueType"* %3 to %"class.WTF::VectorBuffer"*
  tail call void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"* %15, i32* %10) #8
  br label %16

16:                                               ; preds = %14, %8
  store i32* null, i32** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink13CSSStyleValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %17 = getelementptr inbounds %"class.blink::CSSMathProduct", %"class.blink::CSSMathProduct"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #8
  br label %33

33:                                               ; preds = %16, %29, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15CSSMathVariadic5TraceEPNS_7VisitorE(%"class.blink::CSSMathVariadic"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathVariadic", %"class.blink::CSSMathVariadic"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15CSSNumericArrayEE5TraceEPNS_7VisitorEPKv) #8
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::CSSMathVariadic", %"class.blink::CSSMathVariadic"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink14CSSMathProduct18GetWrapperTypeInfoEv(%"class.blink::CSSMathProduct"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink14CSSMathProduct18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink14CSSMathProduct7GetTypeEv(%"class.blink::CSSMathProduct"*) unnamed_addr #0 comdat align 2 {
  ret i32 5
}

declare %"class.blink::CSSValue"* @_ZNK5blink12CSSMathValue10ToCSSValueEv(%"class.blink::CSSMathValue"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSValue"* @_ZNK5blink13CSSStyleValue22ToCSSValueWithPropertyENS_13CSSPropertyIDE(%"class.blink::CSSStyleValue"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::CSSStyleValue"* %0 to %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)***
  %4 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)**, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %4, i64 10
  %6 = load %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)*, %"class.blink::CSSValue"* (%"class.blink::CSSStyleValue"*)** %5, align 8
  %7 = tail call %"class.blink::CSSValue"* %6(%"class.blink::CSSStyleValue"* %0) #8
  ret %"class.blink::CSSValue"* %7
}

declare %"class.WTF::StringImpl"* @_ZNK5blink15CSSNumericValue8toStringEv(%"class.blink::CSSNumericValue"*) unnamed_addr #1

declare %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue6NegateEv(%"class.blink::CSSNumericValue"*) unnamed_addr #1

declare %"class.blink::CSSNumericValue"* @_ZN5blink15CSSNumericValue6InvertEv(%"class.blink::CSSNumericValue"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12CSSMathValue11IsUnitValueEv(%"class.blink::CSSMathValue"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15CSSMathVariadic6EqualsERKNS_15CSSNumericValueE(%"class.blink::CSSMathVariadic"*, %"class.blink::CSSNumericValue"* dereferenceable(88)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSMathVariadic", %"class.blink::CSSMathVariadic"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.blink::CSSMathVariadic"* %0 to i32 (%"class.blink::CSSStyleValue"*)***
  %5 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %5, i64 9
  %7 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::CSSStyleValue"* %3) #8
  %9 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %1, i64 0, i32 0
  %10 = bitcast %"class.blink::CSSNumericValue"* %1 to i32 (%"class.blink::CSSStyleValue"*)***
  %11 = load i32 (%"class.blink::CSSStyleValue"*)**, i32 (%"class.blink::CSSStyleValue"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %11, i64 9
  %13 = load i32 (%"class.blink::CSSStyleValue"*)*, i32 (%"class.blink::CSSStyleValue"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::CSSStyleValue"* %9) #8
  %15 = icmp eq i32 %8, %14
  br i1 %15, label %16, label %52

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::CSSMathVariadic", %"class.blink::CSSMathVariadic"* %0, i64 0, i32 1, i32 0, i32 0
  %18 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %18, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %18, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %20, i64 %23
  %25 = getelementptr inbounds %"class.blink::CSSNumericValue", %"class.blink::CSSNumericValue"* %1, i64 1
  %26 = bitcast %"class.blink::CSSNumericValue"* %25 to %"class.blink::CSSNumericArray"**
  %27 = load %"class.blink::CSSNumericArray"*, %"class.blink::CSSNumericArray"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %22, %29
  br i1 %30, label %31, label %52

31:                                               ; preds = %16
  %32 = icmp eq i32 %22, 0
  br i1 %32, label %52, label %33

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %27, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %34, align 8
  br label %36

36:                                               ; preds = %33, %48
  %37 = phi %"class.blink::Member.6"* [ %50, %48 ], [ %35, %33 ]
  %38 = phi %"class.blink::Member.6"* [ %49, %48 ], [ %20, %33 ]
  %39 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %37, i64 0, i32 0, i32 0
  %42 = load %"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"** %41, align 8
  %43 = bitcast %"class.blink::CSSNumericValue"* %40 to i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)***
  %44 = load i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)**, i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)*** %43, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)*, i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)** %44, i64 17
  %46 = load i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)*, i1 (%"class.blink::CSSNumericValue"*, %"class.blink::CSSNumericValue"*)** %45, align 8
  %47 = tail call zeroext i1 %46(%"class.blink::CSSNumericValue"* %40, %"class.blink::CSSNumericValue"* dereferenceable(88) %42) #8
  br i1 %47, label %48, label %52

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %38, i64 1
  %50 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %37, i64 1
  %51 = icmp eq %"class.blink::Member.6"* %49, %24
  br i1 %51, label %52, label %36

52:                                               ; preds = %48, %36, %31, %16, %2
  %53 = phi i1 [ false, %2 ], [ false, %16 ], [ true, %31 ], [ false, %36 ], [ true, %48 ]
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink14CSSMathProduct11getOperatorEv(%"class.blink::CSSMathProduct"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i64 7) #8
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPi(%"class.WTF::VectorBuffer"*, i32*) local_unnamed_addr #4 comdat align 2 {
  %3 = bitcast i32* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashMapIN5blink17CSSPrimitiveValue8UnitTypeEiNS_7IntHashIS3_EENS_10HashTraitsIS3_EENS6_IiEENS_18PartitionAllocatorEE5eraseERKS3_(%"class.WTF::HashMap"*, i32* dereferenceable(4)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %64, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %1, align 4
  %12 = shl i32 %11, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %11, %13
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %11
  br i1 %30, label %59, label %31

31:                                               ; preds = %8
  %32 = xor i32 %24, -1
  %33 = lshr i32 %22, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %50, %31
  %46 = phi i32 [ %29, %31 ], [ %57, %50 ]
  %47 = phi i64 [ %26, %31 ], [ %54, %50 ]
  %48 = phi i64 [ 0, %31 ], [ %52, %50 ]
  %49 = icmp eq i32 %46, -128
  br i1 %49, label %64, label %50

50:                                               ; preds = %45
  %51 = icmp eq i64 %48, 0
  %52 = select i1 %51, i64 %44, i64 %48
  %53 = add i64 %52, %47
  %54 = and i64 %53, %10
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %11
  br i1 %58, label %59, label %45

59:                                               ; preds = %50, %8
  %60 = phi %"struct.WTF::KeyValuePair"* [ %27, %8 ], [ %55, %50 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = zext i32 %7 to i64
  br label %67

64:                                               ; preds = %45, %59, %2
  %65 = zext i32 %7 to i64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %65
  br label %67

67:                                               ; preds = %62, %64
  %68 = phi i64 [ %63, %62 ], [ %65, %64 ]
  %69 = phi %"struct.WTF::KeyValuePair"* [ %60, %62 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %68
  %72 = icmp eq %"struct.WTF::KeyValuePair"* %71, %69
  br i1 %72, label %177, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %69, i64 0, i32 0
  store i32 -127, i32* %74, align 4
  %75 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 1
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  %81 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %82, -1
  store i32 %83, i32* %81, align 4
  %84 = mul i32 %83, 6
  %85 = load i32, i32* %6, align 8
  %86 = icmp ult i32 %84, %85
  %87 = icmp ugt i32 %85, 8
  %88 = and i1 %86, %87
  br i1 %88, label %89, label %177

89:                                               ; preds = %73
  %90 = lshr i32 %85, 1
  %91 = zext i32 %90 to i64
  %92 = shl nuw nsw i64 %91, 3
  %93 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %92, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink17CSSPrimitiveValue8UnitTypeEiEEEEPKcv, i64 0, i64 0)) #8
  %94 = bitcast i8* %93 to %"struct.WTF::KeyValuePair"*
  %95 = icmp eq i32 %90, 0
  br i1 %95, label %175, label %96

96:                                               ; preds = %89
  %97 = icmp ult i32 %85, 8
  br i1 %97, label %167, label %98

98:                                               ; preds = %96
  %99 = and i64 %91, 2147483644
  %100 = add nsw i64 %99, -4
  %101 = lshr exact i64 %100, 2
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 7
  %104 = icmp ult i64 %100, 28
  br i1 %104, label %152, label %105

105:                                              ; preds = %98
  %106 = sub nsw i64 %102, %103
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ 0, %105 ], [ %149, %107 ]
  %109 = phi i64 [ %106, %105 ], [ %150, %107 ]
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %108
  %111 = bitcast %"struct.WTF::KeyValuePair"* %110 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %111, align 4
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %110, i64 2
  %113 = bitcast %"struct.WTF::KeyValuePair"* %112 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %113, align 4
  %114 = or i64 %108, 4
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %114
  %116 = bitcast %"struct.WTF::KeyValuePair"* %115 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %116, align 4
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %115, i64 2
  %118 = bitcast %"struct.WTF::KeyValuePair"* %117 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %118, align 4
  %119 = or i64 %108, 8
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %119
  %121 = bitcast %"struct.WTF::KeyValuePair"* %120 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %121, align 4
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %120, i64 2
  %123 = bitcast %"struct.WTF::KeyValuePair"* %122 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %123, align 4
  %124 = or i64 %108, 12
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %124
  %126 = bitcast %"struct.WTF::KeyValuePair"* %125 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %126, align 4
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %125, i64 2
  %128 = bitcast %"struct.WTF::KeyValuePair"* %127 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %128, align 4
  %129 = or i64 %108, 16
  %130 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %129
  %131 = bitcast %"struct.WTF::KeyValuePair"* %130 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %131, align 4
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %130, i64 2
  %133 = bitcast %"struct.WTF::KeyValuePair"* %132 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %133, align 4
  %134 = or i64 %108, 20
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %134
  %136 = bitcast %"struct.WTF::KeyValuePair"* %135 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %136, align 4
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %135, i64 2
  %138 = bitcast %"struct.WTF::KeyValuePair"* %137 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %138, align 4
  %139 = or i64 %108, 24
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %139
  %141 = bitcast %"struct.WTF::KeyValuePair"* %140 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %141, align 4
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %140, i64 2
  %143 = bitcast %"struct.WTF::KeyValuePair"* %142 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %143, align 4
  %144 = or i64 %108, 28
  %145 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %144
  %146 = bitcast %"struct.WTF::KeyValuePair"* %145 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %146, align 4
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %145, i64 2
  %148 = bitcast %"struct.WTF::KeyValuePair"* %147 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %148, align 4
  %149 = add i64 %108, 32
  %150 = add i64 %109, -8
  %151 = icmp eq i64 %150, 0
  br i1 %151, label %152, label %107, !llvm.loop !8

152:                                              ; preds = %107, %98
  %153 = phi i64 [ 0, %98 ], [ %149, %107 ]
  %154 = icmp eq i64 %103, 0
  br i1 %154, label %165, label %155

155:                                              ; preds = %152, %155
  %156 = phi i64 [ %162, %155 ], [ %153, %152 ]
  %157 = phi i64 [ %163, %155 ], [ %103, %152 ]
  %158 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %156
  %159 = bitcast %"struct.WTF::KeyValuePair"* %158 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %159, align 4
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %158, i64 2
  %161 = bitcast %"struct.WTF::KeyValuePair"* %160 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %161, align 4
  %162 = add i64 %156, 4
  %163 = add i64 %157, -1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %155, !llvm.loop !10

165:                                              ; preds = %155, %152
  %166 = icmp eq i64 %99, %91
  br i1 %166, label %175, label %167

167:                                              ; preds = %165, %96
  %168 = phi i64 [ 0, %96 ], [ %99, %165 ]
  br label %169

169:                                              ; preds = %167, %169
  %170 = phi i64 [ %173, %169 ], [ %168, %167 ]
  %171 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 %170
  %172 = bitcast %"struct.WTF::KeyValuePair"* %171 to i64*
  store i64 4294967168, i64* %172, align 4
  %173 = add nuw nsw i64 %170, 1
  %174 = icmp eq i64 %173, %91
  br i1 %174, label %175, label %169, !llvm.loop !12

175:                                              ; preds = %169, %165, %89
  %176 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %70, %"struct.WTF::KeyValuePair"* %94, i32 %90, %"struct.WTF::KeyValuePair"* null) #8
  br label %177

177:                                              ; preds = %67, %73, %175
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %16 to i64
  br label %31

18:                                               ; preds = %118
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %119, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair"* [ null, %10 ], [ %122, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #8
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair"* %23

31:                                               ; preds = %13, %118
  %32 = phi i64 [ %17, %13 ], [ %119, %118 ]
  %33 = phi i32 [ %7, %13 ], [ %120, %118 ]
  %34 = phi %"struct.WTF::KeyValuePair"* [ %16, %13 ], [ %121, %118 ]
  %35 = phi %"struct.WTF::KeyValuePair"* [ null, %13 ], [ %122, %118 ]
  %36 = phi i32 [ 0, %13 ], [ %123, %118 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = or i32 %40, 1
  %42 = icmp eq i32 %41, -127
  br i1 %42, label %118, label %43

43:                                               ; preds = %31
  %44 = shl i32 %40, 15
  %45 = xor i32 %44, -1
  %46 = add i32 %40, %45
  %47 = lshr i32 %46, 10
  %48 = xor i32 %47, %46
  %49 = mul i32 %48, 9
  %50 = lshr i32 %49, 6
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 11
  %53 = xor i32 %52, -1
  %54 = add i32 %51, %53
  %55 = lshr i32 %54, 16
  %56 = xor i32 %55, %54
  %57 = and i32 %56, %14
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %58
  %60 = ptrtoint %"struct.WTF::KeyValuePair"* %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, -128
  br i1 %63, label %81, label %64

64:                                               ; preds = %43
  %65 = xor i32 %56, -1
  %66 = lshr i32 %54, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %87

78:                                               ; preds = %94
  %79 = ptrtoint %"struct.WTF::KeyValuePair"* %101 to i64
  %80 = inttoptr i64 %96 to %"struct.WTF::KeyValuePair"*
  br label %81

81:                                               ; preds = %78, %43
  %82 = phi i64 [ %79, %78 ], [ %60, %43 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %80, %78 ], [ null, %43 ]
  %84 = icmp eq %"struct.WTF::KeyValuePair"* %83, null
  %85 = ptrtoint %"struct.WTF::KeyValuePair"* %83 to i64
  %86 = select i1 %84, i64 %82, i64 %85
  br label %106

87:                                               ; preds = %94, %64
  %88 = phi i64 [ 0, %64 ], [ %96, %94 ]
  %89 = phi i32 [ %62, %64 ], [ %104, %94 ]
  %90 = phi i64 [ %60, %64 ], [ %102, %94 ]
  %91 = phi i64 [ %58, %64 ], [ %100, %94 ]
  %92 = phi i64 [ 0, %64 ], [ %98, %94 ]
  %93 = icmp eq i32 %89, %40
  br i1 %93, label %106, label %94

94:                                               ; preds = %87
  %95 = icmp eq i32 %89, -127
  %96 = select i1 %95, i64 %90, i64 %88
  %97 = icmp eq i64 %92, 0
  %98 = select i1 %97, i64 %77, i64 %92
  %99 = add i64 %98, %91
  %100 = and i64 %99, %15
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 %100
  %102 = ptrtoint %"struct.WTF::KeyValuePair"* %101 to i64
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, -128
  br i1 %105, label %78, label %87

106:                                              ; preds = %87, %81
  %107 = phi i64 [ %86, %81 ], [ %90, %87 ]
  %108 = inttoptr i64 %107 to %"struct.WTF::KeyValuePair"*
  %109 = bitcast %"struct.WTF::KeyValuePair"* %38 to i64*
  %110 = inttoptr i64 %107 to i64*
  %111 = load i64, i64* %109, align 4
  store i64 %111, i64* %110, align 4
  %112 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %9, align 8
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %112, i64 %37
  %114 = icmp eq %"struct.WTF::KeyValuePair"* %113, %3
  %115 = select i1 %114, %"struct.WTF::KeyValuePair"* %108, %"struct.WTF::KeyValuePair"* %35
  %116 = load i32, i32* %6, align 8
  %117 = ptrtoint %"struct.WTF::KeyValuePair"* %112 to i64
  br label %118

118:                                              ; preds = %31, %106
  %119 = phi i64 [ %32, %31 ], [ %117, %106 ]
  %120 = phi i32 [ %33, %31 ], [ %116, %106 ]
  %121 = phi %"struct.WTF::KeyValuePair"* [ %34, %31 ], [ %112, %106 ]
  %122 = phi %"struct.WTF::KeyValuePair"* [ %35, %31 ], [ %115, %106 ]
  %123 = add i32 %36, 1
  %124 = icmp eq i32 %123, %120
  br i1 %124, label %18, label %31
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISD_S8_SE_EERKS3_iEENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -128
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %96, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -127
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, -128
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i64*
  store i64 4294967168, i64* %71, align 4
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %81, i64 0, i32 1
  %84 = load i32, i32* %2, align 4
  store i32 %84, i32* %83, align 4
  %85 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, %87
  %91 = shl i32 %90, 1
  %92 = load i32, i32* %12, align 8
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %79
  %95 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %81)
  br label %96

96:                                               ; preds = %50, %79, %94
  %97 = phi i8 [ 1, %79 ], [ 1, %94 ], [ 0, %50 ]
  %98 = phi %"struct.WTF::KeyValuePair"* [ %81, %79 ], [ %95, %94 ], [ %52, %50 ]
  %99 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %98, 0
  %100 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %99, i8 %97, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %100
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink17CSSPrimitiveValue8UnitTypeEiEEEEPKcv, i64 0, i64 0)) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %117, label %38

38:                                               ; preds = %31
  %39 = icmp ult i32 %32, 4
  br i1 %39, label %109, label %40

40:                                               ; preds = %38
  %41 = and i64 %33, 4294967292
  %42 = add nsw i64 %41, -4
  %43 = lshr exact i64 %42, 2
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 7
  %46 = icmp ult i64 %42, 28
  br i1 %46, label %94, label %47

47:                                               ; preds = %40
  %48 = sub nsw i64 %44, %45
  br label %49

49:                                               ; preds = %49, %47
  %50 = phi i64 [ 0, %47 ], [ %91, %49 ]
  %51 = phi i64 [ %48, %47 ], [ %92, %49 ]
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50
  %53 = bitcast %"struct.WTF::KeyValuePair"* %52 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %53, align 4
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 2
  %55 = bitcast %"struct.WTF::KeyValuePair"* %54 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %55, align 4
  %56 = or i64 %50, 4
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %56
  %58 = bitcast %"struct.WTF::KeyValuePair"* %57 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %58, align 4
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 2
  %60 = bitcast %"struct.WTF::KeyValuePair"* %59 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %60, align 4
  %61 = or i64 %50, 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %61
  %63 = bitcast %"struct.WTF::KeyValuePair"* %62 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %63, align 4
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 2
  %65 = bitcast %"struct.WTF::KeyValuePair"* %64 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %65, align 4
  %66 = or i64 %50, 12
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %66
  %68 = bitcast %"struct.WTF::KeyValuePair"* %67 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %68, align 4
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 2
  %70 = bitcast %"struct.WTF::KeyValuePair"* %69 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %70, align 4
  %71 = or i64 %50, 16
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %71
  %73 = bitcast %"struct.WTF::KeyValuePair"* %72 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %73, align 4
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 2
  %75 = bitcast %"struct.WTF::KeyValuePair"* %74 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %75, align 4
  %76 = or i64 %50, 20
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %76
  %78 = bitcast %"struct.WTF::KeyValuePair"* %77 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %78, align 4
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 2
  %80 = bitcast %"struct.WTF::KeyValuePair"* %79 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %80, align 4
  %81 = or i64 %50, 24
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %81
  %83 = bitcast %"struct.WTF::KeyValuePair"* %82 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %83, align 4
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %82, i64 2
  %85 = bitcast %"struct.WTF::KeyValuePair"* %84 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %85, align 4
  %86 = or i64 %50, 28
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %86
  %88 = bitcast %"struct.WTF::KeyValuePair"* %87 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %88, align 4
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %87, i64 2
  %90 = bitcast %"struct.WTF::KeyValuePair"* %89 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %90, align 4
  %91 = add i64 %50, 32
  %92 = add i64 %51, -8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %49, !llvm.loop !14

94:                                               ; preds = %49, %40
  %95 = phi i64 [ 0, %40 ], [ %91, %49 ]
  %96 = icmp eq i64 %45, 0
  br i1 %96, label %107, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %104, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %105, %97 ], [ %45, %94 ]
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %98
  %101 = bitcast %"struct.WTF::KeyValuePair"* %100 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %101, align 4
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %100, i64 2
  %103 = bitcast %"struct.WTF::KeyValuePair"* %102 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %103, align 4
  %104 = add i64 %98, 4
  %105 = add i64 %99, -1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %97, !llvm.loop !15

107:                                              ; preds = %97, %94
  %108 = icmp eq i64 %41, %33
  br i1 %108, label %117, label %109

109:                                              ; preds = %107, %38
  %110 = phi i64 [ 0, %38 ], [ %41, %107 ]
  br label %111

111:                                              ; preds = %109, %111
  %112 = phi i64 [ %115, %111 ], [ %110, %109 ]
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %112
  %114 = bitcast %"struct.WTF::KeyValuePair"* %113 to i64*
  store i64 4294967168, i64* %114, align 4
  %115 = add nuw nsw i64 %112, 1
  %116 = icmp eq i64 %115, %33
  br i1 %116, label %117, label %111, !llvm.loop !16

117:                                              ; preds = %111, %107, %31
  %118 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #8
  ret %"struct.WTF::KeyValuePair"* %118
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %107

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.9, i64 0, i64 0)) #8
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN5blink17CSSPrimitiveValue8UnitTypeEiEEEEPKcv, i64 0, i64 0)) #8
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair"*
  %31 = and i64 %27, 4294967292
  %32 = add nsw i64 %31, -4
  %33 = lshr exact i64 %32, 2
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp ult i64 %32, 28
  br i1 %36, label %84, label %37

37:                                               ; preds = %26
  %38 = sub nsw i64 %34, %35
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi i64 [ 0, %37 ], [ %81, %39 ]
  %41 = phi i64 [ %38, %37 ], [ %82, %39 ]
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %40
  %43 = bitcast %"struct.WTF::KeyValuePair"* %42 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %43, align 4
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 2
  %45 = bitcast %"struct.WTF::KeyValuePair"* %44 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %45, align 4
  %46 = or i64 %40, 4
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %46
  %48 = bitcast %"struct.WTF::KeyValuePair"* %47 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %48, align 4
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %47, i64 2
  %50 = bitcast %"struct.WTF::KeyValuePair"* %49 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %50, align 4
  %51 = or i64 %40, 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %51
  %53 = bitcast %"struct.WTF::KeyValuePair"* %52 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %53, align 4
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %52, i64 2
  %55 = bitcast %"struct.WTF::KeyValuePair"* %54 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %55, align 4
  %56 = or i64 %40, 12
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %56
  %58 = bitcast %"struct.WTF::KeyValuePair"* %57 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %58, align 4
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 2
  %60 = bitcast %"struct.WTF::KeyValuePair"* %59 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %60, align 4
  %61 = or i64 %40, 16
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %61
  %63 = bitcast %"struct.WTF::KeyValuePair"* %62 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %63, align 4
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 2
  %65 = bitcast %"struct.WTF::KeyValuePair"* %64 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %65, align 4
  %66 = or i64 %40, 20
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %66
  %68 = bitcast %"struct.WTF::KeyValuePair"* %67 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %68, align 4
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 2
  %70 = bitcast %"struct.WTF::KeyValuePair"* %69 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %70, align 4
  %71 = or i64 %40, 24
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %71
  %73 = bitcast %"struct.WTF::KeyValuePair"* %72 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %73, align 4
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %72, i64 2
  %75 = bitcast %"struct.WTF::KeyValuePair"* %74 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %75, align 4
  %76 = or i64 %40, 28
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %76
  %78 = bitcast %"struct.WTF::KeyValuePair"* %77 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %78, align 4
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %77, i64 2
  %80 = bitcast %"struct.WTF::KeyValuePair"* %79 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %80, align 4
  %81 = add i64 %40, 32
  %82 = add i64 %41, -8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %84, label %39, !llvm.loop !17

84:                                               ; preds = %39, %26
  %85 = phi i64 [ 0, %26 ], [ %81, %39 ]
  %86 = icmp eq i64 %35, 0
  br i1 %86, label %97, label %87

87:                                               ; preds = %84, %87
  %88 = phi i64 [ %94, %87 ], [ %85, %84 ]
  %89 = phi i64 [ %95, %87 ], [ %35, %84 ]
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %88
  %91 = bitcast %"struct.WTF::KeyValuePair"* %90 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %91, align 4
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 2
  %93 = bitcast %"struct.WTF::KeyValuePair"* %92 to <2 x i64>*
  store <2 x i64> <i64 4294967168, i64 4294967168>, <2 x i64>* %93, align 4
  %94 = add i64 %88, 4
  %95 = add i64 %89, -1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %87, !llvm.loop !18

97:                                               ; preds = %87, %84
  %98 = icmp eq i64 %31, %27
  br i1 %98, label %105, label %99

99:                                               ; preds = %97, %99
  %100 = phi i64 [ %103, %99 ], [ %31, %97 ]
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %30, i64 %100
  %102 = bitcast %"struct.WTF::KeyValuePair"* %101 to i64*
  store i64 4294967168, i64* %102, align 4
  %103 = add nuw nsw i64 %100, 1
  %104 = icmp eq i64 %103, %27
  br i1 %104, label %105, label %99, !llvm.loop !19

105:                                              ; preds = %99, %97
  %106 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE8RehashToEPS5_jSG_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %30, i32 %17, %"struct.WTF::KeyValuePair"* null) #8
  br label %107

107:                                              ; preds = %105, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SD_SE_EERKS3_RKS5_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), %"struct.WTF::KeyValuePair"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -128
  br i1 %35, label %70, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %97, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -127
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, -128
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %10, %68
  %71 = phi %"struct.WTF::KeyValuePair"* [ %64, %68 ], [ %32, %10 ]
  %72 = bitcast %"struct.WTF::KeyValuePair"* %71 to i64*
  br label %81

73:                                               ; preds = %68
  %74 = bitcast %"struct.WTF::KeyValuePair"* %59 to i64*
  store i64 4294967168, i64* %74, align 4
  %75 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 2147483647
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  br label %81

81:                                               ; preds = %70, %73
  %82 = phi i64* [ %72, %70 ], [ %74, %73 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %71, %70 ], [ %59, %73 ]
  %84 = bitcast %"struct.WTF::KeyValuePair"* %2 to i64*
  %85 = load i64, i64* %84, align 4
  store i64 %85, i64* %82, align 4
  %86 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %86, align 4
  %89 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %90 = load i32, i32* %89, align 8
  %91 = add i32 %90, %88
  %92 = shl i32 %91, 1
  %93 = load i32, i32* %12, align 8
  %94 = icmp ult i32 %92, %93
  br i1 %94, label %97, label %95

95:                                               ; preds = %81
  %96 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6ExpandEPS5_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %83)
  br label %97

97:                                               ; preds = %50, %81, %95
  %98 = phi i8 [ 1, %81 ], [ 1, %95 ], [ 0, %50 ]
  %99 = phi %"struct.WTF::KeyValuePair"* [ %83, %81 ], [ %96, %95 ], [ %52, %50 ]
  %100 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %99, 0
  %101 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %100, i8 %98, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.21"* @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEEaSERKS5_(%"class.WTF::Vector.21"*, %"class.WTF::Vector.21"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.21"* %1, %0
  br i1 %3, label %174, label %4, !prof !4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %28

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %12, i64 %15
  br label %17

17:                                               ; preds = %24, %10
  %18 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %25, %24 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %18, i64 0, i32 1, i32 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %21 = icmp eq %"struct.WTF::KeyValuePair"* %20, null
  br i1 %21, label %24, label %22, !prof !3

22:                                               ; preds = %17
  %23 = bitcast %"struct.WTF::KeyValuePair"* %20 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %23) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %19, align 8
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %18, i64 1
  %26 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %25, %14
  br i1 %26, label %27, label %17

27:                                               ; preds = %24
  store i32 %8, i32* %5, align 4
  br label %77

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp ugt i32 %8, %30
  br i1 %31, label %32, label %75

32:                                               ; preds = %28
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %58, label %34

34:                                               ; preds = %32
  %35 = icmp eq i32 %6, 0
  br i1 %35, label %52, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %38 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %37, align 8
  %39 = zext i32 %6 to i64
  %40 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %38, i64 %39
  br label %41

41:                                               ; preds = %48, %36
  %42 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %49, %48 ], [ %38, %36 ]
  %43 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %42, i64 0, i32 1, i32 0, i32 0
  %44 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %43, align 8
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, null
  br i1 %45, label %48, label %46, !prof !3

46:                                               ; preds = %41
  %47 = bitcast %"struct.WTF::KeyValuePair"* %44 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %47) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %43, align 8
  br label %48

48:                                               ; preds = %46, %41
  %49 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %42, i64 1
  %50 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %49, %40
  br i1 %50, label %51, label %41

51:                                               ; preds = %48
  store i32 0, i32* %5, align 4
  br label %52

52:                                               ; preds = %51, %34
  %53 = bitcast %"class.WTF::Vector.21"* %0 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 0, i64* %55 monotonic, align 8
  store i32 0, i32* %29, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %54) #8
  %56 = load i32, i32* %7, align 4
  %57 = load i32, i32* %29, align 8
  br label %58

58:                                               ; preds = %32, %52
  %59 = phi i32 [ 0, %32 ], [ %57, %52 ]
  %60 = phi i32 [ %8, %32 ], [ %56, %52 ]
  %61 = icmp ult i32 %59, %60
  br i1 %61, label %62, label %75, !prof !3

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %64 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %63, align 8
  %65 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %64, null
  br i1 %65, label %66, label %74

66:                                               ; preds = %62
  %67 = zext i32 %60 to i64
  %68 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSNumericSumValue4TermEEEmm(i64 %67) #8
  %69 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %68, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSNumericSumValue4TermEEEPKcv, i64 0, i64 0)) #8
  %70 = ptrtoint i8* %69 to i64
  %71 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %70, i64* %71 monotonic, align 8
  %72 = lshr i64 %68, 5
  %73 = trunc i64 %72 to i32
  store i32 %73, i32* %29, align 8
  br label %75

74:                                               ; preds = %62
  tail call void @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.21"* %0, i32 %60) #8
  br label %75

75:                                               ; preds = %28, %58, %66, %74
  %76 = load i32, i32* %5, align 4
  br label %77

77:                                               ; preds = %75, %27
  %78 = phi i32 [ %76, %75 ], [ %8, %27 ]
  %79 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %1, i64 0, i32 0, i32 0, i32 0
  %80 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %79, align 8
  %81 = zext i32 %78 to i64
  %82 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %80, i64 %81
  %83 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %84 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %83, align 8
  %85 = icmp eq i32 %78, 0
  br i1 %85, label %102, label %86

86:                                               ; preds = %77, %86
  %87 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %96, %86 ], [ %84, %77 ]
  %88 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %95, %86 ], [ %80, %77 ]
  %89 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %87 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %87, i64 0, i32 1, i32 0
  %93 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %88, i64 0, i32 1, i32 0
  %94 = tail call dereferenceable(24) %"class.WTF::HashTable"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEEaSERKSF_(%"class.WTF::HashTable"* %92, %"class.WTF::HashTable"* dereferenceable(24) %93) #8
  %95 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %88, i64 1
  %96 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %87, i64 1
  %97 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %95, %82
  br i1 %97, label %98, label %86

98:                                               ; preds = %86
  %99 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %79, align 8
  %100 = load i32, i32* %5, align 4
  %101 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %83, align 8
  br label %102

102:                                              ; preds = %98, %77
  %103 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %101, %98 ], [ %84, %77 ]
  %104 = phi i32 [ %100, %98 ], [ 0, %77 ]
  %105 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %99, %98 ], [ %80, %77 ]
  %106 = zext i32 %104 to i64
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %105, i64 %108
  %110 = icmp eq i32 %104, %107
  br i1 %110, label %172, label %111

111:                                              ; preds = %102
  %112 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %103, i64 %106
  %113 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %105, i64 %106
  br label %114

114:                                              ; preds = %111, %166
  %115 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %167, %166 ], [ %112, %111 ]
  %116 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %168, %166 ], [ %113, %111 ]
  %117 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %115, i64 0, i32 1
  %121 = bitcast %"class.WTF::HashMap"* %120 to i8*
  %122 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %120, i64 0, i32 0
  %123 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %116, i64 0, i32 1, i32 0, i32 2
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 20, i1 false) #8
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %166, label %126

126:                                              ; preds = %114
  tail call void @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* %122, i32 %124) #8
  %127 = load i32, i32* %123, align 4
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %116, i64 0, i32 1, i32 0, i32 0
  %130 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %129, align 8
  %131 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %116, i64 0, i32 1, i32 0, i32 1
  %132 = load i32, i32* %131, align 8
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %130, i64 %133
  br i1 %128, label %166, label %135

135:                                              ; preds = %126
  %136 = icmp eq i32 %132, 0
  br i1 %136, label %146, label %137

137:                                              ; preds = %135, %143
  %138 = phi %"struct.WTF::KeyValuePair"* [ %144, %143 ], [ %130, %135 ]
  %139 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %138, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = or i32 %140, 1
  %142 = icmp eq i32 %141, -127
  br i1 %142, label %143, label %146

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %138, i64 1
  %145 = icmp eq %"struct.WTF::KeyValuePair"* %144, %134
  br i1 %145, label %166, label %137

146:                                              ; preds = %137, %135
  %147 = phi %"struct.WTF::KeyValuePair"* [ %130, %135 ], [ %138, %137 ]
  %148 = icmp eq %"struct.WTF::KeyValuePair"* %147, %134
  br i1 %148, label %166, label %149

149:                                              ; preds = %146, %164
  %150 = phi %"struct.WTF::KeyValuePair"* [ %156, %164 ], [ %147, %146 ]
  %151 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %150, i64 0, i32 0
  %152 = tail call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SD_SE_EERKS3_RKS5_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"* %122, i32* dereferenceable(4) %151, %"struct.WTF::KeyValuePair"* dereferenceable(8) %150) #8
  %153 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %150, i64 1
  %154 = icmp eq %"struct.WTF::KeyValuePair"* %153, %134
  br i1 %154, label %166, label %155

155:                                              ; preds = %149, %161
  %156 = phi %"struct.WTF::KeyValuePair"* [ %162, %161 ], [ %153, %149 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %156, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = or i32 %158, 1
  %160 = icmp eq i32 %159, -127
  br i1 %160, label %161, label %164

161:                                              ; preds = %155
  %162 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %156, i64 1
  %163 = icmp eq %"struct.WTF::KeyValuePair"* %162, %134
  br i1 %163, label %166, label %155

164:                                              ; preds = %155
  %165 = icmp eq %"struct.WTF::KeyValuePair"* %156, %134
  br i1 %165, label %166, label %149

166:                                              ; preds = %143, %164, %149, %161, %146, %126, %114
  %167 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %115, i64 1
  %168 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %116, i64 1
  %169 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %168, %109
  br i1 %169, label %170, label %114

170:                                              ; preds = %166
  %171 = load i32, i32* %7, align 4
  br label %172

172:                                              ; preds = %170, %102
  %173 = phi i32 [ %171, %170 ], [ %104, %102 ]
  store i32 %173, i32* %5, align 4
  br label %174

174:                                              ; preds = %2, %172
  ret %"class.WTF::Vector.21"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.21"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %56

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %54, label %14

14:                                               ; preds = %4, %50
  %15 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %52, %50 ], [ %6, %4 ]
  %16 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %51, %50 ], [ null, %4 ]
  %17 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %16 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %16, i64 0, i32 1
  %21 = bitcast %"class.WTF::HashMap"* %20 to i8*
  %22 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %15, i64 0, i32 1
  %23 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %16, i64 0, i32 1, i32 0, i32 1
  %24 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %16, i64 0, i32 1, i32 0, i32 2
  %25 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %16, i64 0, i32 1, i32 0, i32 3
  %26 = bitcast %"class.WTF::HashMap"* %22 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 20, i1 false) #8
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.WTF::HashMap"* %20 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %15, i64 0, i32 1, i32 0, i32 1
  %30 = load i32, i32* %23, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %23, align 4
  store i32 %30, i32* %29, align 4
  %32 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %15, i64 0, i32 1, i32 0, i32 2
  %33 = load i32, i32* %24, align 4
  %34 = load i32, i32* %32, align 4
  store i32 %34, i32* %24, align 4
  store i32 %33, i32* %32, align 4
  %35 = load i32, i32* %25, align 8
  %36 = and i32 %35, 2147483647
  %37 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %15, i64 0, i32 1, i32 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 2147483647
  %40 = and i32 %35, -2147483648
  %41 = or i32 %39, %40
  store i32 %41, i32* %25, align 8
  %42 = load i32, i32* %37, align 8
  %43 = and i32 %42, -2147483648
  %44 = or i32 %43, %36
  store i32 %44, i32* %37, align 8
  %45 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %15, i64 0, i32 1, i32 0, i32 0
  %46 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %45, align 8
  %47 = icmp eq %"struct.WTF::KeyValuePair"* %46, null
  br i1 %47, label %50, label %48, !prof !3

48:                                               ; preds = %14
  %49 = bitcast %"struct.WTF::KeyValuePair"* %46 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %49) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %45, align 8
  br label %50

50:                                               ; preds = %48, %14
  %51 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %16, i64 1
  %52 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %15, i64 1
  %53 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %52, %10
  br i1 %53, label %54, label %14

54:                                               ; preds = %50, %4
  %55 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %55) #8
  br label %121

56:                                               ; preds = %2
  %57 = zext i32 %1 to i64
  %58 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSNumericSumValue4TermEEEmm(i64 %57) #8
  %59 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %58, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSNumericSumValue4TermEEEPKcv, i64 0, i64 0)) #8
  %60 = lshr i64 %58, 5
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %63 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %62, align 8
  %64 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %63, i64 %66
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %56
  %70 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %63 to i8*
  br label %116

71:                                               ; preds = %56
  %72 = bitcast i8* %59 to %"struct.blink::CSSNumericSumValue::Term"*
  br label %73

73:                                               ; preds = %71, %109
  %74 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %111, %109 ], [ %63, %71 ]
  %75 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %110, %109 ], [ %72, %71 ]
  %76 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %74 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %75 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %75, i64 0, i32 1
  %80 = bitcast %"class.WTF::HashMap"* %79 to i8*
  %81 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %74, i64 0, i32 1
  %82 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %75, i64 0, i32 1, i32 0, i32 1
  %83 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %75, i64 0, i32 1, i32 0, i32 2
  %84 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %75, i64 0, i32 1, i32 0, i32 3
  %85 = bitcast %"class.WTF::HashMap"* %81 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 20, i1 false) #8
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.WTF::HashMap"* %79 to i64*
  store atomic i64 0, i64* %85 monotonic, align 8
  store atomic i64 %86, i64* %87 monotonic, align 8
  %88 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %74, i64 0, i32 1, i32 0, i32 1
  %89 = load i32, i32* %82, align 4
  %90 = load i32, i32* %88, align 4
  store i32 %90, i32* %82, align 4
  store i32 %89, i32* %88, align 4
  %91 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %74, i64 0, i32 1, i32 0, i32 2
  %92 = load i32, i32* %83, align 4
  %93 = load i32, i32* %91, align 4
  store i32 %93, i32* %83, align 4
  store i32 %92, i32* %91, align 4
  %94 = load i32, i32* %84, align 8
  %95 = and i32 %94, 2147483647
  %96 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %74, i64 0, i32 1, i32 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 2147483647
  %99 = and i32 %94, -2147483648
  %100 = or i32 %98, %99
  store i32 %100, i32* %84, align 8
  %101 = load i32, i32* %96, align 8
  %102 = and i32 %101, -2147483648
  %103 = or i32 %102, %95
  store i32 %103, i32* %96, align 8
  %104 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %74, i64 0, i32 1, i32 0, i32 0
  %105 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %104, align 8
  %106 = icmp eq %"struct.WTF::KeyValuePair"* %105, null
  br i1 %106, label %109, label %107, !prof !3

107:                                              ; preds = %73
  %108 = bitcast %"struct.WTF::KeyValuePair"* %105 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %108) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %104, align 8
  br label %109

109:                                              ; preds = %107, %73
  %110 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %75, i64 1
  %111 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %74, i64 1
  %112 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %111, %67
  br i1 %112, label %113, label %73

113:                                              ; preds = %109
  %114 = bitcast %"class.WTF::Vector.21"* %0 to i8**
  %115 = load i8*, i8** %114, align 8
  br label %116

116:                                              ; preds = %69, %113
  %117 = phi i8* [ %115, %113 ], [ %70, %69 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %117) #8
  %118 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %61, i64* %118 monotonic, align 8
  %119 = trunc i64 %60 to i32
  %120 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %119, i32* %120, align 8
  br label %121

121:                                              ; preds = %116, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSNumericSumValue4TermEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.WTF::HashTable"* @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEEaSERKSF_(%"class.WTF::HashTable"*, %"class.WTF::HashTable"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::HashTable", align 8
  %4 = bitcast %"class.WTF::HashTable"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %3, i64 0, i32 3
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 2
  %10 = bitcast %"class.WTF::HashTable"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 20, i1 false) #8
  %11 = load i32, i32* %9, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %53, label %13

13:                                               ; preds = %2
  call void @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable"* nonnull %3, i32 %11) #8
  %14 = load i32, i32* %9, align 4
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 0
  %17 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %17, i64 %20
  br i1 %15, label %53, label %22

22:                                               ; preds = %13
  %23 = icmp eq i32 %19, 0
  br i1 %23, label %33, label %24

24:                                               ; preds = %22, %30
  %25 = phi %"struct.WTF::KeyValuePair"* [ %31, %30 ], [ %17, %22 ]
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = or i32 %27, 1
  %29 = icmp eq i32 %28, -127
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %25, i64 1
  %32 = icmp eq %"struct.WTF::KeyValuePair"* %31, %21
  br i1 %32, label %53, label %24

33:                                               ; preds = %24, %22
  %34 = phi %"struct.WTF::KeyValuePair"* [ %17, %22 ], [ %25, %24 ]
  %35 = icmp eq %"struct.WTF::KeyValuePair"* %34, %21
  br i1 %35, label %53, label %36

36:                                               ; preds = %33, %51
  %37 = phi %"struct.WTF::KeyValuePair"* [ %43, %51 ], [ %34, %33 ]
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 0, i32 0
  %39 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIN5blink17CSSPrimitiveValue8UnitTypeENS_12KeyValuePairIS3_iEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSA_IiEEEESB_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS8_SD_SE_EERKS3_RKS5_EENS_18HashTableAddResultISF_S5_EEOT0_OT1_(%"class.WTF::HashTable"* nonnull %3, i32* dereferenceable(4) %38, %"struct.WTF::KeyValuePair"* dereferenceable(8) %37) #8
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 1
  %41 = icmp eq %"struct.WTF::KeyValuePair"* %40, %21
  br i1 %41, label %53, label %42

42:                                               ; preds = %36, %48
  %43 = phi %"struct.WTF::KeyValuePair"* [ %49, %48 ], [ %40, %36 ]
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = or i32 %45, 1
  %47 = icmp eq i32 %46, -127
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 1
  %50 = icmp eq %"struct.WTF::KeyValuePair"* %49, %21
  br i1 %50, label %53, label %42

51:                                               ; preds = %42
  %52 = icmp eq %"struct.WTF::KeyValuePair"* %43, %21
  br i1 %52, label %53, label %36

53:                                               ; preds = %30, %36, %51, %48, %2, %13, %33
  %54 = bitcast %"class.WTF::HashTable"* %3 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %57 = load i64, i64* %56, align 8
  store atomic i64 %57, i64* %54 monotonic, align 8
  store atomic i64 %55, i64* %56 monotonic, align 8
  %58 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = load i32, i32* %6, align 8
  store i32 %60, i32* %58, align 4
  store i32 %59, i32* %6, align 8
  %61 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = load i32, i32* %7, align 4
  store i32 %63, i32* %61, align 4
  store i32 %62, i32* %7, align 4
  %64 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 2147483647
  %67 = load i32, i32* %8, align 8
  %68 = and i32 %67, 2147483647
  %69 = and i32 %65, -2147483648
  %70 = or i32 %68, %69
  store i32 %70, i32* %64, align 8
  %71 = and i32 %67, -2147483648
  %72 = or i32 %71, %66
  store i32 %72, i32* %8, align 8
  %73 = icmp eq i64 %57, 0
  br i1 %73, label %76, label %74, !prof !3

74:                                               ; preds = %53
  %75 = inttoptr i64 %57 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %75) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %5, align 8
  br label %76

76:                                               ; preds = %53, %74
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret %"class.WTF::HashTable"* %0
}

declare %"class.blink::CSSMathExpressionNode"* @_ZN5blink32CSSMathExpressionBinaryOperation6CreateEPKNS_21CSSMathExpressionNodeES3_NS_15CSSMathOperatorE(%"class.blink::CSSMathExpressionNode"*, %"class.blink::CSSMathExpressionNode"*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15CSSNumericArrayEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 16
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast i8* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #8
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %18

18:                                               ; preds = %2, %12
  %19 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %19, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15CSSNumericArray5TraceEPNS_7VisitorE(%"class.blink::CSSNumericArray"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #8
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #8
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::CSSNumericArray", %"class.blink::CSSNumericArray"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %19, %"class.blink::Visitor"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15CSSNumericValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.6"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.6"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15CSSNumericValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15CSSNumericValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.6"* @_ZNK3WTF6VectorIN5blink6MemberINS1_15CSSNumericValueEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.3"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector.3", %"class.WTF::Vector.3"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.6"*, %"class.blink::Member.6"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.6", %"class.blink::Member.6"* %24, i64 %25
  ret %"class.blink::Member.6"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.11, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIiLj7ENS_18PartitionAllocatorEE16SwapVectorBufferERS2_NS_16VectorBufferBaseIiS1_E11OffsetRangeES6_(%"class.WTF::VectorBuffer"*, %"class.WTF::VectorBuffer"* dereferenceable(48), i64, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = trunc i64 %3 to i32
  %6 = lshr i64 %3, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 1, i64 0
  %11 = bitcast i8* %10 to i32*
  %12 = icmp eq i32* %9, %11
  %13 = ptrtoint i32* %9 to i64
  br i1 %12, label %32, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %18 = bitcast i8* %17 to i32*
  %19 = icmp eq i32* %16, %18
  br i1 %19, label %42, label %20

20:                                               ; preds = %14
  %21 = ptrtoint i32* %16 to i64
  %22 = bitcast %"class.WTF::VectorBuffer"* %1 to i64*
  %23 = bitcast %"class.WTF::VectorBuffer"* %0 to i64*
  store atomic i64 %13, i64* %22 monotonic, align 8
  store atomic i64 %21, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 1
  %26 = load i32, i32* %24, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %24, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %30 = load i32, i32* %28, align 4
  %31 = load i32, i32* %29, align 4
  store i32 %31, i32* %28, align 4
  store i32 %30, i32* %29, align 4
  br label %274

32:                                               ; preds = %4
  %33 = lshr i64 %2, 32
  %34 = trunc i64 %33 to i32
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %39 = bitcast i8* %38 to i32*
  %40 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  br label %42

42:                                               ; preds = %14, %32
  %43 = phi i32* [ %18, %14 ], [ %39, %32 ]
  %44 = phi i32* [ %16, %14 ], [ %41, %32 ]
  %45 = phi i32 [ 0, %14 ], [ %34, %32 ]
  %46 = phi i32 [ 0, %14 ], [ %35, %32 ]
  %47 = phi i32 [ 0, %14 ], [ %37, %32 ]
  %48 = phi i32* [ null, %14 ], [ %9, %32 ]
  %49 = phi i32* [ null, %14 ], [ %39, %32 ]
  %50 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 1, i64 0
  %51 = icmp eq i32* %44, %43
  br i1 %51, label %52, label %55

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %42, %52
  %56 = phi i32 [ %7, %52 ], [ 0, %42 ]
  %57 = phi i32 [ %5, %52 ], [ 0, %42 ]
  %58 = phi i32 [ %54, %52 ], [ 0, %42 ]
  %59 = phi i32* [ %43, %52 ], [ null, %42 ]
  %60 = phi i32* [ %11, %52 ], [ null, %42 ]
  %61 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 1
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %61, align 4
  store i32 %63, i32* %62, align 4
  %65 = icmp eq i32* %48, null
  %66 = icmp ne i32* %59, null
  %67 = or i1 %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %55
  %69 = and i1 %65, %66
  br i1 %69, label %70, label %78

70:                                               ; preds = %68, %55
  %71 = phi %"class.WTF::VectorBuffer"* [ %1, %55 ], [ %0, %68 ]
  %72 = phi %"class.WTF::VectorBuffer"* [ %0, %55 ], [ %1, %68 ]
  %73 = phi i8* [ %50, %55 ], [ %10, %68 ]
  %74 = bitcast %"class.WTF::VectorBuffer"* %71 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.WTF::VectorBuffer"* %72 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = ptrtoint i8* %73 to i64
  store atomic i64 %77, i64* %74 monotonic, align 8
  br label %78

78:                                               ; preds = %70, %68
  %79 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %0, i64 0, i32 0, i32 2
  %80 = getelementptr inbounds %"class.WTF::VectorBuffer", %"class.WTF::VectorBuffer"* %1, i64 0, i32 0, i32 2
  %81 = load i32, i32* %79, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %79, align 4
  store i32 %81, i32* %80, align 4
  %83 = icmp ne i32* %48, null
  %84 = icmp ult i32 %47, 7
  %85 = icmp eq i32 %46, %45
  %86 = icmp eq i32 %57, %56
  br label %87

87:                                               ; preds = %78, %272
  %88 = phi i32 [ 0, %78 ], [ %119, %272 ]
  %89 = icmp ult i32 %88, %47
  %90 = and i1 %83, %89
  %91 = and i1 %84, %90
  %92 = select i1 %91, i32 %47, i32 7
  br i1 %85, label %102, label %93

93:                                               ; preds = %87
  %94 = icmp ult i32 %88, %46
  %95 = icmp ult i32 %46, %92
  %96 = and i1 %94, %95
  %97 = select i1 %96, i32 %46, i32 %92
  %98 = icmp ult i32 %88, %45
  br i1 %98, label %99, label %102

99:                                               ; preds = %93
  %100 = icmp ult i32 %45, %97
  %101 = select i1 %100, i32 %45, i32 %97
  br label %102

102:                                              ; preds = %87, %99, %93
  %103 = phi i32 [ %101, %99 ], [ %97, %93 ], [ %92, %87 ]
  %104 = icmp ult i32 %88, %58
  %105 = and i1 %66, %104
  %106 = icmp ult i32 %58, %103
  %107 = and i1 %105, %106
  %108 = select i1 %107, i32 %58, i32 %103
  br i1 %86, label %118, label %109

109:                                              ; preds = %102
  %110 = icmp ult i32 %88, %57
  %111 = icmp ult i32 %57, %108
  %112 = and i1 %110, %111
  %113 = select i1 %112, i32 %57, i32 %108
  %114 = icmp ult i32 %88, %56
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = icmp ult i32 %56, %113
  %117 = select i1 %116, i32 %56, i32 %113
  br label %118

118:                                              ; preds = %102, %115, %109
  %119 = phi i32 [ %117, %115 ], [ %113, %109 ], [ %108, %102 ]
  br i1 %90, label %120, label %125

120:                                              ; preds = %118
  %121 = icmp ult i32 %88, %46
  %122 = or i1 %85, %121
  %123 = icmp uge i32 %88, %45
  %124 = or i1 %123, %122
  br label %125

125:                                              ; preds = %120, %118
  %126 = phi i1 [ false, %118 ], [ %124, %120 ]
  br i1 %105, label %127, label %239

127:                                              ; preds = %125
  %128 = icmp ult i32 %88, %57
  %129 = or i1 %86, %128
  %130 = xor i1 %129, true
  %131 = icmp ult i32 %88, %56
  %132 = and i1 %131, %130
  %133 = xor i1 %126, true
  %134 = or i1 %132, %133
  %135 = xor i1 %131, true
  %136 = or i1 %129, %135
  br i1 %134, label %239, label %137

137:                                              ; preds = %127
  %138 = zext i32 %88 to i64
  %139 = zext i32 %119 to i64
  %140 = getelementptr inbounds i32, i32* %48, i64 %139
  %141 = bitcast i32* %140 to i8*
  %142 = icmp eq i32 %88, %119
  br i1 %142, label %272, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds i32, i32* %48, i64 %138
  %145 = bitcast i32* %144 to i8*
  %146 = getelementptr inbounds i32, i32* %59, i64 %138
  %147 = bitcast i32* %146 to i8*
  %148 = sub nsw i64 %139, %138
  %149 = shl nsw i64 %148, 2
  %150 = icmp ult i64 %149, 32
  br i1 %150, label %228, label %151

151:                                              ; preds = %143
  %152 = getelementptr i32, i32* %59, i64 %139
  %153 = icmp ult i32* %144, %152
  %154 = icmp ult i32* %146, %140
  %155 = and i1 %153, %154
  br i1 %155, label %228, label %156

156:                                              ; preds = %151
  %157 = and i64 %149, -32
  %158 = getelementptr i8, i8* %147, i64 %157
  %159 = getelementptr i8, i8* %145, i64 %157
  %160 = add nsw i64 %157, -32
  %161 = lshr exact i64 %160, 5
  %162 = add nuw nsw i64 %161, 1
  %163 = and i64 %162, 1
  %164 = icmp eq i64 %160, 0
  br i1 %164, label %206, label %165

165:                                              ; preds = %156
  %166 = sub nuw nsw i64 %162, %163
  br label %167

167:                                              ; preds = %167, %165
  %168 = phi i64 [ 0, %165 ], [ %203, %167 ]
  %169 = phi i64 [ %166, %165 ], [ %204, %167 ]
  %170 = getelementptr i8, i8* %147, i64 %168
  %171 = getelementptr i8, i8* %145, i64 %168
  %172 = bitcast i8* %171 to <16 x i8>*
  %173 = load <16 x i8>, <16 x i8>* %172, align 1, !alias.scope !20, !noalias !23
  %174 = getelementptr i8, i8* %171, i64 16
  %175 = bitcast i8* %174 to <16 x i8>*
  %176 = load <16 x i8>, <16 x i8>* %175, align 1, !alias.scope !20, !noalias !23
  %177 = bitcast i8* %170 to <16 x i8>*
  %178 = load <16 x i8>, <16 x i8>* %177, align 1, !alias.scope !23
  %179 = getelementptr i8, i8* %170, i64 16
  %180 = bitcast i8* %179 to <16 x i8>*
  %181 = load <16 x i8>, <16 x i8>* %180, align 1, !alias.scope !23
  %182 = bitcast i8* %171 to <16 x i8>*
  store <16 x i8> %178, <16 x i8>* %182, align 1, !alias.scope !20, !noalias !23
  %183 = bitcast i8* %174 to <16 x i8>*
  store <16 x i8> %181, <16 x i8>* %183, align 1, !alias.scope !20, !noalias !23
  %184 = bitcast i8* %170 to <16 x i8>*
  store <16 x i8> %173, <16 x i8>* %184, align 1, !alias.scope !23
  %185 = bitcast i8* %179 to <16 x i8>*
  store <16 x i8> %176, <16 x i8>* %185, align 1, !alias.scope !23
  %186 = or i64 %168, 32
  %187 = getelementptr i8, i8* %147, i64 %186
  %188 = getelementptr i8, i8* %145, i64 %186
  %189 = bitcast i8* %188 to <16 x i8>*
  %190 = load <16 x i8>, <16 x i8>* %189, align 1, !alias.scope !20, !noalias !23
  %191 = getelementptr i8, i8* %188, i64 16
  %192 = bitcast i8* %191 to <16 x i8>*
  %193 = load <16 x i8>, <16 x i8>* %192, align 1, !alias.scope !20, !noalias !23
  %194 = bitcast i8* %187 to <16 x i8>*
  %195 = load <16 x i8>, <16 x i8>* %194, align 1, !alias.scope !23
  %196 = getelementptr i8, i8* %187, i64 16
  %197 = bitcast i8* %196 to <16 x i8>*
  %198 = load <16 x i8>, <16 x i8>* %197, align 1, !alias.scope !23
  %199 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %195, <16 x i8>* %199, align 1, !alias.scope !20, !noalias !23
  %200 = bitcast i8* %191 to <16 x i8>*
  store <16 x i8> %198, <16 x i8>* %200, align 1, !alias.scope !20, !noalias !23
  %201 = bitcast i8* %187 to <16 x i8>*
  store <16 x i8> %190, <16 x i8>* %201, align 1, !alias.scope !23
  %202 = bitcast i8* %196 to <16 x i8>*
  store <16 x i8> %193, <16 x i8>* %202, align 1, !alias.scope !23
  %203 = add i64 %168, 64
  %204 = add i64 %169, -2
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %206, label %167, !llvm.loop !25

206:                                              ; preds = %167, %156
  %207 = phi i64 [ 0, %156 ], [ %203, %167 ]
  %208 = icmp eq i64 %163, 0
  br i1 %208, label %226, label %209

209:                                              ; preds = %206
  %210 = getelementptr i8, i8* %147, i64 %207
  %211 = getelementptr i8, i8* %145, i64 %207
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !20, !noalias !23
  %214 = getelementptr i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !20, !noalias !23
  %217 = bitcast i8* %210 to <16 x i8>*
  %218 = load <16 x i8>, <16 x i8>* %217, align 1, !alias.scope !23
  %219 = getelementptr i8, i8* %210, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  %221 = load <16 x i8>, <16 x i8>* %220, align 1, !alias.scope !23
  %222 = bitcast i8* %211 to <16 x i8>*
  store <16 x i8> %218, <16 x i8>* %222, align 1, !alias.scope !20, !noalias !23
  %223 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %221, <16 x i8>* %223, align 1, !alias.scope !20, !noalias !23
  %224 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %224, align 1, !alias.scope !23
  %225 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %225, align 1, !alias.scope !23
  br label %226

226:                                              ; preds = %206, %209
  %227 = icmp eq i64 %149, %157
  br i1 %227, label %272, label %228

228:                                              ; preds = %226, %151, %143
  %229 = phi i8* [ %147, %151 ], [ %147, %143 ], [ %158, %226 ]
  %230 = phi i8* [ %145, %151 ], [ %145, %143 ], [ %159, %226 ]
  br label %231

231:                                              ; preds = %228, %231
  %232 = phi i8* [ %237, %231 ], [ %229, %228 ]
  %233 = phi i8* [ %236, %231 ], [ %230, %228 ]
  %234 = load i8, i8* %233, align 1
  %235 = load i8, i8* %232, align 1
  store i8 %235, i8* %233, align 1
  store i8 %234, i8* %232, align 1
  %236 = getelementptr inbounds i8, i8* %233, i64 1
  %237 = getelementptr inbounds i8, i8* %232, i64 1
  %238 = icmp eq i8* %236, %141
  br i1 %238, label %272, label %231, !llvm.loop !26

239:                                              ; preds = %127, %125
  %240 = phi i1 [ false, %125 ], [ %136, %127 ]
  br i1 %126, label %241, label %256

241:                                              ; preds = %239
  %242 = zext i32 %88 to i64
  %243 = getelementptr inbounds i32, i32* %48, i64 %242
  %244 = getelementptr inbounds i32, i32* %49, i64 %242
  %245 = icmp ne i32* %244, null
  %246 = icmp ne i32* %243, null
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %272, !prof !3

248:                                              ; preds = %241
  %249 = zext i32 %119 to i64
  %250 = getelementptr inbounds i32, i32* %48, i64 %249
  %251 = bitcast i32* %243 to i8*
  %252 = ptrtoint i32* %250 to i64
  %253 = ptrtoint i32* %243 to i64
  %254 = sub i64 %252, %253
  %255 = bitcast i32* %244 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %255, i8* nonnull align 4 %251, i64 %254, i1 false) #8
  br label %272

256:                                              ; preds = %239
  br i1 %240, label %257, label %272

257:                                              ; preds = %256
  %258 = zext i32 %88 to i64
  %259 = getelementptr inbounds i32, i32* %59, i64 %258
  %260 = getelementptr inbounds i32, i32* %60, i64 %258
  %261 = icmp ne i32* %260, null
  %262 = icmp ne i32* %259, null
  %263 = and i1 %262, %261
  br i1 %263, label %264, label %272, !prof !3

264:                                              ; preds = %257
  %265 = zext i32 %119 to i64
  %266 = getelementptr inbounds i32, i32* %59, i64 %265
  %267 = bitcast i32* %259 to i8*
  %268 = ptrtoint i32* %266 to i64
  %269 = ptrtoint i32* %259 to i64
  %270 = sub i64 %268, %269
  %271 = bitcast i32* %260 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %271, i8* nonnull align 4 %267, i64 %270, i1 false) #8
  br label %272

272:                                              ; preds = %231, %226, %264, %257, %248, %241, %137, %256
  %273 = icmp ult i32 %119, 7
  br i1 %273, label %87, label %274

274:                                              ; preds = %272, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSNumericArray"* @_ZN5blink25MakeGarbageCollectedTraitINS_15CSSNumericArrayEE4CallIJNS_10HeapVectorINS_6MemberINS_15CSSNumericValueEEELj0EEEEEEPS1_DpOT_(%"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #8
  %3 = bitcast i8* %2 to %"class.blink::CSSNumericArray"*
  %4 = bitcast %"class.blink::HeapVector"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  store atomic i64 0, i64* %4 monotonic, align 8
  %6 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  store i32 0, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  store i32 0, i32* %8, align 4
  %10 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = inttoptr i64 %5 to i8*
  %14 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %13) #8
  br label %15

15:                                               ; preds = %12, %1
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %22, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.blink::HeapVector"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #8
  br label %22

22:                                               ; preds = %15, %18
  %23 = bitcast i8* %2 to i32 (...)***
  %24 = getelementptr inbounds i8, i8* %2, i64 8
  %25 = bitcast i8* %24 to i64**
  store i64* null, i64** %25, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15CSSNumericArrayE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %26 = getelementptr inbounds i8, i8* %2, i64 16
  %27 = getelementptr inbounds i8, i8* %2, i64 24
  %28 = bitcast i8* %27 to i32*
  %29 = getelementptr inbounds i8, i8* %2, i64 28
  %30 = bitcast i8* %29 to i32*
  %31 = bitcast i8* %26 to i64*
  store atomic i64 %5, i64* %31 monotonic, align 8
  store i32 %7, i32* %28, align 4
  store i32 %9, i32* %30, align 4
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %22
  %35 = inttoptr i64 %5 to i8*
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #8
  br label %37

37:                                               ; preds = %34, %22
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %37
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #8
  br label %42

42:                                               ; preds = %37, %40
  %43 = getelementptr inbounds i8, i8* %2, i64 -4
  %44 = bitcast i8* %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = or i16 %45, 1
  store atomic i16 %46, i16* %44 release, align 2
  ret %"class.blink::CSSNumericArray"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #8
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* %40, i8* %41) #8
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #8
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !4

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #8
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #8
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSNumericArrayD0Ev(%"class.blink::CSSNumericArray"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink15CSSNumericArray18GetWrapperTypeInfoEv(%"class.blink::CSSNumericArray"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink15CSSNumericArray18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.21"*, %"struct.blink::CSSNumericSumValue::Term"* dereferenceable(32)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %6, align 8
  %8 = icmp ugt %"struct.blink::CSSNumericSumValue::Term"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::CSSNumericSumValue::Term"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSNumericSumValue4TermEEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSNumericSumValue4TermEEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.blink::CSSNumericSumValue::Term"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.21"* %0, i32 %22) #8
  %36 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.blink::CSSNumericSumValue::Term"* %1 to i64
  %39 = ptrtoint %"struct.blink::CSSNumericSumValue::Term"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 5
  %42 = getelementptr inbounds %"class.WTF::Vector.21", %"class.WTF::Vector.21"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"struct.blink::CSSNumericSumValue::Term"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink18CSSNumericSumValue4TermEEEmm(i64 %55) #8
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18CSSNumericSumValue4TermEEEPKcv, i64 0, i64 0)) #8
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.21"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 5
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.blink::CSSNumericSumValue::Term"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink18CSSNumericSumValue4TermELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.21"* %0, i32 %50) #8
  %64 = load %"struct.blink::CSSNumericSumValue::Term"*, %"struct.blink::CSSNumericSumValue::Term"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.blink::CSSNumericSumValue::Term"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %69, i64 %72
  %74 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %70 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"struct.blink::CSSNumericSumValue::Term"* %73 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %69, i64 %72, i32 1
  %78 = bitcast %"class.WTF::HashMap"* %77 to i8*
  %79 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %70, i64 0, i32 1
  %80 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %69, i64 %72, i32 1, i32 0, i32 1
  %81 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %69, i64 %72, i32 1, i32 0, i32 2
  %82 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %69, i64 %72, i32 1, i32 0, i32 3
  %83 = bitcast %"class.WTF::HashMap"* %79 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 20, i1 false) #8
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.WTF::HashMap"* %77 to i64*
  store atomic i64 0, i64* %83 monotonic, align 8
  store atomic i64 %84, i64* %85 monotonic, align 8
  %86 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %70, i64 0, i32 1, i32 0, i32 1
  %87 = load i32, i32* %80, align 4
  %88 = load i32, i32* %86, align 4
  store i32 %88, i32* %80, align 4
  store i32 %87, i32* %86, align 4
  %89 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %70, i64 0, i32 1, i32 0, i32 2
  %90 = load i32, i32* %81, align 4
  %91 = load i32, i32* %89, align 4
  store i32 %91, i32* %81, align 4
  store i32 %90, i32* %89, align 4
  %92 = load i32, i32* %82, align 8
  %93 = and i32 %92, 2147483647
  %94 = getelementptr inbounds %"struct.blink::CSSNumericSumValue::Term", %"struct.blink::CSSNumericSumValue::Term"* %70, i64 0, i32 1, i32 0, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = and i32 %95, 2147483647
  %97 = and i32 %92, -2147483648
  %98 = or i32 %96, %97
  store i32 %98, i32* %82, align 8
  %99 = load i32, i32* %94, align 8
  %100 = and i32 %99, -2147483648
  %101 = or i32 %100, %93
  store i32 %101, i32* %94, align 8
  %102 = load i32, i32* %3, align 4
  %103 = add i32 %102, 1
  store i32 %103, i32* %3, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink12_GLOBAL__N_116MultiplyUnitMapsEN3WTF7HashMapINS_17CSSPrimitiveValue8UnitTypeEiNS1_7IntHashIS4_EENS1_10HashTraitsIS4_EENS7_IiEENS1_18PartitionAllocatorEEERKSB_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink12_GLOBAL__N_116MultiplyUnitMapsEN3WTF7HashMapINS_17CSSPrimitiveValue8UnitTypeEiNS1_7IntHashIS4_EENS1_10HashTraitsIS4_EENS7_IiEENS1_18PartitionAllocatorEEERKSB_"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !13, !9}
!13 = !{!"llvm.loop.unroll.runtime.disable"}
!14 = distinct !{!14, !9}
!15 = distinct !{!15, !11}
!16 = distinct !{!16, !13, !9}
!17 = distinct !{!17, !9}
!18 = distinct !{!18, !11}
!19 = distinct !{!19, !13, !9}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !9}
!26 = distinct !{!26, !9}
