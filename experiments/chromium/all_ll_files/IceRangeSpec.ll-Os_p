; ModuleID = '../../third_party/swiftshader/third_party/subzero/src/IceRangeSpec.cpp'
source_filename = "../../third_party/swiftshader/third_party/subzero/src/IceRangeSpec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.2", %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::allocator.4"* }
%"class.std::__1::allocator.4" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.Ice::RangeSpec" = type { %"struct.Ice::RangeSpec::Desc", %"struct.Ice::RangeSpec::Desc" }
%"struct.Ice::RangeSpec::Desc" = type <{ %"class.std::__1::unordered_set", %"class.llvm::BitVector", i32, i8, [3 x i8] }>
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19", %"class.std::__1::__compressed_pair.21", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { float }
%"class.llvm::BitVector" = type { i64*, i32, i32 }
%"struct.std::__1::__murmur2_or_cityhash" = type { i8 }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28", %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"class.std::__1::basic_string" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.17"*, i8, [7 x i8] }>
%"class.std::__1::allocator.17" = type { i8 }

$_ZN4llvm9BitVector6resizeEjb = comdat any

$_ZN4llvm9BitVector3setEjj = comdat any

$_ZN4llvm9BitVector4growEj = comdat any

$_ZN4llvm9BitVector15set_unused_bitsEb = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_17_to_32EPKcm = comdat any

$_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_33_to_64EPKcm = comdat any

$_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm = comdat any

$_ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev = comdat any

$_ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE5clearEv = comdat any

$_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEEC2EmmS8_ = comdat any

$_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEED2Ev = comdat any

$_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE17__destruct_at_endEPS6_ = comdat any

$_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_ = comdat any

@_ZN3Ice9RangeSpec8HasNamesE = hidden local_unnamed_addr global i8 0, align 1
@.str = private unnamed_addr constant [15 x i8] c"Invalid range \00", align 1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice9RangeSpec8tokenizeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEc(%"class.std::__1::vector"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i8 signext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::__split_buffer", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #11
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %111, label %19

19:                                               ; preds = %3
  %20 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::allocator"*
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %23 = bitcast %"class.std::__1::__compressed_pair.1"* %22 to %"class.std::__1::allocator.4"*
  %24 = bitcast %"struct.std::__1::__split_buffer"* %4 to i8*
  %25 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %4, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %4, i64 0, i32 2
  %27 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %4, i64 0, i32 3, i32 0, i32 0
  %28 = bitcast %"class.std::__1::basic_string"** %7 to i64*
  %29 = bitcast %"class.std::__1::vector"* %0 to i64*
  %30 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %31 = bitcast %"class.std::__1::basic_string"** %26 to i8**
  %32 = bitcast %"class.std::__1::basic_string"** %25 to i64*
  %33 = bitcast %"class.std::__1::basic_string"** %26 to i64*
  %34 = bitcast %"class.std::__1::basic_string"** %27 to i64*
  %35 = bitcast %"struct.std::__1::__split_buffer"* %4 to i64*
  %36 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %19, %108
  %40 = phi i64 [ 0, %19 ], [ %109, %108 ]
  %41 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %1, i8 signext %2, i64 %40) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %42 = sub i64 %41, %40
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %1, i64 %40, i64 %42, %"class.std::__1::allocator"* dereferenceable(1) %21) #12
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %44 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %45 = icmp ult %"class.std::__1::basic_string"* %43, %44
  %46 = ptrtoint %"class.std::__1::basic_string"* %44 to i64
  br i1 %45, label %47, label %51

47:                                               ; preds = %39
  %48 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* nonnull align 8 %20, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #11
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 1
  %50 = ptrtoint %"class.std::__1::basic_string"* %49 to i64
  store i64 %50, i64* %28, align 8
  br label %108

51:                                               ; preds = %39
  %52 = ptrtoint %"class.std::__1::basic_string"* %43 to i64
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 40, i1 false) #11
  %53 = load i64, i64* %29, align 8
  %54 = sub i64 %52, %53
  %55 = sdiv exact i64 %54, 24
  %56 = add nsw i64 %55, 1
  %57 = icmp ugt i64 %56, 768614336404564650
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #13
  unreachable

60:                                               ; preds = %51
  %61 = sub i64 %46, %53
  %62 = sdiv exact i64 %61, 24
  %63 = icmp ult i64 %62, 384307168202282325
  br i1 %63, label %64, label %68

64:                                               ; preds = %60
  %65 = shl nsw i64 %62, 1
  %66 = icmp ult i64 %65, %56
  %67 = select i1 %66, i64 %56, i64 %65
  br label %68

68:                                               ; preds = %64, %60
  %69 = phi i64 [ %67, %64 ], [ 768614336404564650, %60 ]
  call void @_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEEC2EmmS8_(%"struct.std::__1::__split_buffer"* nonnull %4, i64 %69, i64 %55, %"class.std::__1::allocator.4"* dereferenceable(1) %23) #12
  %70 = load i8*, i8** %31, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* nonnull align 8 %20, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #11
  %71 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %26, align 8
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 1
  store %"class.std::__1::basic_string"* %72, %"class.std::__1::basic_string"** %26, align 8
  %73 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %74 = ptrtoint %"class.std::__1::basic_string"* %73 to i64
  %75 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %76 = icmp eq %"class.std::__1::basic_string"* %75, %73
  br i1 %76, label %77, label %80

77:                                               ; preds = %68
  %78 = ptrtoint %"class.std::__1::basic_string"* %72 to i64
  %79 = load i64, i64* %32, align 8
  br label %97

80:                                               ; preds = %68
  %81 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  br label %82

82:                                               ; preds = %82, %80
  %83 = phi %"class.std::__1::basic_string"* [ %90, %82 ], [ %81, %80 ]
  %84 = phi %"class.std::__1::basic_string"* [ %86, %82 ], [ %75, %80 ]
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 -1
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 -1
  %87 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  %88 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #11
  %89 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %25, align 8
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 -1
  store %"class.std::__1::basic_string"* %90, %"class.std::__1::basic_string"** %25, align 8
  %91 = icmp eq %"class.std::__1::basic_string"* %86, %73
  br i1 %91, label %92, label %82

92:                                               ; preds = %82
  %93 = ptrtoint %"class.std::__1::basic_string"* %90 to i64
  %94 = load i64, i64* %29, align 8
  %95 = load i64, i64* %28, align 8
  %96 = load i64, i64* %33, align 8
  br label %97

97:                                               ; preds = %92, %77
  %98 = phi i64 [ %78, %77 ], [ %96, %92 ]
  %99 = phi i64 [ %74, %77 ], [ %95, %92 ]
  %100 = phi i64 [ %79, %77 ], [ %93, %92 ]
  %101 = phi i64 [ %74, %77 ], [ %94, %92 ]
  store i64 %100, i64* %29, align 8
  store i64 %101, i64* %32, align 8
  store i64 %98, i64* %28, align 8
  store i64 %99, i64* %33, align 8
  %102 = load i64, i64* %30, align 8
  %103 = load i64, i64* %34, align 8
  store i64 %103, i64* %30, align 8
  store i64 %102, i64* %34, align 8
  store i64 %101, i64* %35, align 8
  call void @_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEED2Ev(%"struct.std::__1::__split_buffer"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #11
  %104 = load i8, i8* %37, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %97
  %107 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %107) #14
  br label %108

108:                                              ; preds = %47, %97, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  %109 = add i64 %41, 1
  %110 = icmp eq i64 %41, -1
  br i1 %110, label %111, label %39

111:                                              ; preds = %108, %3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice9RangeSpec4initERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::RangeSpec"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZN3Ice9RangeSpec8tokenizeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEc(%"class.std::__1::vector"* nonnull sret %3, %"class.std::__1::basic_string"* dereferenceable(24) %1, i8 signext 44) #15
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %9, %10
  br i1 %11, label %19, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 0
  %14 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %15 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %23

19:                                               ; preds = %46, %2
  %20 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %49, label %53

23:                                               ; preds = %12, %46
  %24 = phi %"class.std::__1::basic_string"* [ %9, %12 ], [ %47, %46 ]
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  br label %34

32:                                               ; preds = %23
  %33 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  br label %34

34:                                               ; preds = %29, %32
  %35 = phi i8* [ %31, %29 ], [ %33, %32 ]
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 45
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %39 = bitcast %"class.std::__1::basic_string"* %24 to %"class.std::__1::allocator"*
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %24, i64 1, i64 -1, %"class.std::__1::allocator"* dereferenceable(1) %39) #12
  call fastcc void @_ZN3Ice12_GLOBAL__N_16recordERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_9RangeSpec4DescE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"struct.Ice::RangeSpec::Desc"* %15) #12
  %40 = load i8, i8* %17, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  %43 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %43) #14
  br label %44

44:                                               ; preds = %38, %42
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  br label %46

45:                                               ; preds = %34
  call fastcc void @_ZN3Ice12_GLOBAL__N_16recordERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_9RangeSpec4DescE(%"class.std::__1::basic_string"* dereferenceable(24) %24, %"struct.Ice::RangeSpec::Desc"* %13) #12
  br label %46

46:                                               ; preds = %45, %44
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 1
  %48 = icmp eq %"class.std::__1::basic_string"* %47, %10
  br i1 %48, label %19, label %23

49:                                               ; preds = %19
  %50 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %54, label %53

53:                                               ; preds = %49, %19
  store i8 1, i8* @_ZN3Ice9RangeSpec8HasNamesE, align 1
  br label %54

54:                                               ; preds = %53, %49
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0
  call void @_ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev(%"class.std::__1::__vector_base"* nonnull %55) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice9RangeSpec7excludeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::RangeSpec"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 1
  tail call fastcc void @_ZN3Ice12_GLOBAL__N_16recordERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_9RangeSpec4DescE(%"class.std::__1::basic_string"* dereferenceable(24) %1, %"struct.Ice::RangeSpec::Desc"* %3) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3Ice9RangeSpec7includeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.Ice::RangeSpec"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 0
  tail call fastcc void @_ZN3Ice12_GLOBAL__N_16recordERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_9RangeSpec4DescE(%"class.std::__1::basic_string"* dereferenceable(24) %1, %"struct.Ice::RangeSpec::Desc"* %3) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK3Ice9RangeSpec5matchERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEj(%"class.Ice::RangeSpec"*, %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  %6 = icmp eq %"struct.std::__1::__hash_node_base"* %5, null
  br i1 %6, label %7, label %59

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 1, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp ugt i32 %9, %2
  br i1 %10, label %11, label %59

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 1, i32 1, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %13, %2
  br i1 %14, label %15, label %27

15:                                               ; preds = %11
  %16 = and i32 %2, 63
  %17 = zext i32 %16 to i64
  %18 = shl i64 1, %17
  %19 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 1, i32 1, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = lshr i32 %2, 6
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i64, i64* %20, i64 %22
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, %18
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %59

27:                                               ; preds = %15, %11
  %28 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = tail call %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table"* %28, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  %30 = icmp eq %"struct.std::__1::__hash_node_base"* %29, null
  br i1 %30, label %31, label %59

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp ugt i32 %33, %2
  br i1 %34, label %35, label %59

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 0, i32 1, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp ugt i32 %37, %2
  br i1 %38, label %39, label %51

39:                                               ; preds = %35
  %40 = and i32 %2, 63
  %41 = zext i32 %40 to i64
  %42 = shl i64 1, %41
  %43 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 0, i32 1, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = lshr i32 %2, 6
  %46 = zext i32 %45 to i64
  %47 = getelementptr inbounds i64, i64* %44, i64 %46
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, %42
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %59

51:                                               ; preds = %39, %35
  %52 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 1, i32 3
  %53 = load i8, i8* %52, align 4, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %59, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.Ice::RangeSpec", %"class.Ice::RangeSpec"* %0, i64 0, i32 0, i32 3
  %57 = load i8, i8* %56, align 4, !range !2
  %58 = icmp eq i8 %57, 0
  br label %59

59:                                               ; preds = %15, %39, %27, %3, %55, %51, %31, %7
  %60 = phi i1 [ false, %3 ], [ false, %7 ], [ false, %15 ], [ true, %27 ], [ true, %31 ], [ true, %39 ], [ false, %51 ], [ %58, %55 ]
  ret i1 %60
}

; Function Attrs: nounwind optsize ssp uwtable
define internal fastcc void @_ZN3Ice12_GLOBAL__N_16recordERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_9RangeSpec4DescE(%"class.std::__1::basic_string"* dereferenceable(24), %"struct.Ice::RangeSpec::Desc"*) unnamed_addr #0 {
  %3 = alloca %"class.std::__1::vector", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = zext i8 %7 to i64
  %12 = select i1 %8, i64 %10, i64 %11
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %105, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"struct.Ice::RangeSpec::Desc", %"struct.Ice::RangeSpec::Desc"* %1, i64 0, i32 3
  store i8 1, i8* %15, align 4
  %16 = load i8, i8* %6, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %21 = select i1 %17, i8* %19, i8* %20
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 58
  br i1 %23, label %28, label %24

24:                                               ; preds = %14
  %25 = sext i8 %22 to i32
  %26 = add nsw i32 %25, -48
  %27 = icmp ult i32 %26, 10
  br i1 %27, label %28, label %102

28:                                               ; preds = %24, %14
  %29 = bitcast %"class.std::__1::vector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #11
  call void @_ZN3Ice9RangeSpec8tokenizeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEc(%"class.std::__1::vector"* nonnull sret %3, %"class.std::__1::basic_string"* dereferenceable(24) %0, i8 signext 58) #12
  %32 = bitcast %"class.std::__1::basic_string"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector"* %3 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = sdiv exact i64 %36, 24
  %38 = inttoptr i64 %35 to %"class.std::__1::basic_string"*
  switch i64 %37, label %83 [
    i64 1, label %39
    i64 2, label %43
  ]

39:                                               ; preds = %28
  %40 = call i64 @_ZNSt3__15stoulERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPmi(%"class.std::__1::basic_string"* dereferenceable(24) %38, i64* null, i32 10) #12
  %41 = trunc i64 %40 to i32
  %42 = add i32 %41, 1
  br label %79

43:                                               ; preds = %28
  %44 = inttoptr i64 %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  br label %53

51:                                               ; preds = %43
  %52 = zext i8 %46 to i64
  br label %53

53:                                               ; preds = %51, %48
  %54 = phi i64 [ %50, %48 ], [ %52, %51 ]
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %53
  %57 = call i64 @_ZNSt3__15stoulERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPmi(%"class.std::__1::basic_string"* dereferenceable(24) %38, i64* null, i32 10) #12
  %58 = trunc i64 %57 to i32
  %59 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %30, align 8
  br label %60

60:                                               ; preds = %56, %53
  %61 = phi %"class.std::__1::basic_string"* [ %59, %56 ], [ %38, %53 ]
  %62 = phi i32 [ %58, %56 ], [ 0, %53 ]
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 1
  %64 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  br label %73

71:                                               ; preds = %60
  %72 = zext i8 %66 to i64
  br label %73

73:                                               ; preds = %71, %68
  %74 = phi i64 [ %70, %68 ], [ %72, %71 ]
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %73
  %77 = call i64 @_ZNSt3__15stoulERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPmi(%"class.std::__1::basic_string"* dereferenceable(24) %63, i64* null, i32 10) #12
  %78 = trunc i64 %77 to i32
  br label %79

79:                                               ; preds = %73, %76, %39
  %80 = phi i32 [ %41, %39 ], [ %62, %76 ], [ %62, %73 ]
  %81 = phi i32 [ %42, %39 ], [ %78, %76 ], [ -1, %73 ]
  %82 = icmp ult i32 %80, %81
  br i1 %82, label %85, label %83

83:                                               ; preds = %79, %28
  %84 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #11
  call void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), %"class.std::__1::basic_string"* dereferenceable(24) %0) #12
  call void @_ZN4llvm18report_fatal_errorERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i1 zeroext true) #13
  unreachable

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0
  call void @_ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev(%"class.std::__1::__vector_base"* nonnull %86) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  %87 = icmp eq i32 %81, -1
  br i1 %87, label %88, label %93

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"struct.Ice::RangeSpec::Desc", %"struct.Ice::RangeSpec::Desc"* %1, i64 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp ult i32 %80, %90
  %92 = select i1 %91, i32 %80, i32 %90
  store i32 %92, i32* %89, align 8
  br label %105

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"struct.Ice::RangeSpec::Desc", %"struct.Ice::RangeSpec::Desc"* %1, i64 0, i32 1
  %95 = getelementptr inbounds %"struct.Ice::RangeSpec::Desc", %"struct.Ice::RangeSpec::Desc"* %1, i64 0, i32 1, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = icmp ult i32 %81, %96
  br i1 %97, label %100, label %98

98:                                               ; preds = %93
  %99 = add nuw i32 %81, 1
  call void @_ZN4llvm9BitVector6resizeEjb(%"class.llvm::BitVector"* %94, i32 %99, i1 zeroext false) #15
  br label %100

100:                                              ; preds = %93, %98
  %101 = call dereferenceable(16) %"class.llvm::BitVector"* @_ZN4llvm9BitVector3setEjj(%"class.llvm::BitVector"* %94, i32 %80, i32 %81) #15
  br label %105

102:                                              ; preds = %24
  %103 = getelementptr inbounds %"struct.Ice::RangeSpec::Desc", %"struct.Ice::RangeSpec::Desc"* %1, i64 0, i32 0, i32 0
  %104 = tail call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %103, %"class.std::__1::basic_string"* dereferenceable(24) %0, %"class.std::__1::basic_string"* dereferenceable(24) %0) #12
  br label %105

105:                                              ; preds = %88, %100, %2, %102
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm9BitVector6resizeEjb(%"class.llvm::BitVector"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.llvm::BitVector", %"class.llvm::BitVector"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = shl i32 %5, 6
  %7 = icmp ult i32 %6, %1
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  tail call void @_ZN4llvm9BitVector4growEj(%"class.llvm::BitVector"* %0, i32 %1) #15
  %9 = getelementptr inbounds %"class.llvm::BitVector", %"class.llvm::BitVector"* %0, i64 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = zext i32 %5 to i64
  %12 = getelementptr inbounds i64, i64* %10, i64 %11
  %13 = load i32, i32* %4, align 4
  %14 = sub i32 %13, %5
  %15 = bitcast i64* %12 to i8*
  %16 = sext i1 %2 to i8
  %17 = zext i32 %14 to i64
  %18 = shl nuw nsw i64 %17, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 %16, i64 %18, i1 false) #11
  br label %19

19:                                               ; preds = %8, %3
  %20 = getelementptr inbounds %"class.llvm::BitVector", %"class.llvm::BitVector"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp ult i32 %21, %1
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  tail call void @_ZN4llvm9BitVector15set_unused_bitsEb(%"class.llvm::BitVector"* %0, i1 zeroext %2) #15
  %24 = load i32, i32* %20, align 8
  br label %25

25:                                               ; preds = %23, %19
  %26 = phi i32 [ %24, %23 ], [ %21, %19 ]
  store i32 %1, i32* %20, align 8
  %27 = icmp ugt i32 %26, %1
  %28 = or i1 %27, %2
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @_ZN4llvm9BitVector15set_unused_bitsEb(%"class.llvm::BitVector"* %0, i1 zeroext false) #12
  br label %30

30:                                               ; preds = %25, %29
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.llvm::BitVector"* @_ZN4llvm9BitVector3setEjj(%"class.llvm::BitVector"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i32 %1, %2
  br i1 %4, label %60, label %5

5:                                                ; preds = %3
  %6 = lshr i32 %1, 6
  %7 = lshr i32 %2, 6
  %8 = icmp eq i32 %6, %7
  br i1 %8, label %9, label %23

9:                                                ; preds = %5
  %10 = and i32 %2, 63
  %11 = zext i32 %10 to i64
  %12 = shl i64 1, %11
  %13 = and i32 %1, 63
  %14 = zext i32 %13 to i64
  %15 = shl i64 1, %14
  %16 = sub i64 %12, %15
  %17 = getelementptr inbounds %"class.llvm::BitVector", %"class.llvm::BitVector"* %0, i64 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = zext i32 %6 to i64
  %20 = getelementptr inbounds i64, i64* %18, i64 %19
  %21 = load i64, i64* %20, align 8
  %22 = or i64 %21, %16
  store i64 %22, i64* %20, align 8
  br label %60

23:                                               ; preds = %5
  %24 = and i32 %1, 63
  %25 = zext i32 %24 to i64
  %26 = shl i64 -1, %25
  %27 = getelementptr inbounds %"class.llvm::BitVector", %"class.llvm::BitVector"* %0, i64 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = zext i32 %6 to i64
  %30 = getelementptr inbounds i64, i64* %28, i64 %29
  %31 = load i64, i64* %30, align 8
  %32 = or i64 %31, %26
  store i64 %32, i64* %30, align 8
  %33 = add i32 %1, 63
  %34 = and i32 %33, -64
  %35 = add i32 %34, 64
  %36 = icmp ugt i32 %35, %2
  br i1 %36, label %46, label %37

37:                                               ; preds = %23, %37
  %38 = phi i32 [ %44, %37 ], [ %35, %23 ]
  %39 = phi i32 [ %38, %37 ], [ %34, %23 ]
  %40 = load i64*, i64** %27, align 8
  %41 = lshr i32 %39, 6
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i64, i64* %40, i64 %42
  store i64 -1, i64* %43, align 8
  %44 = add i32 %38, 64
  %45 = icmp ugt i32 %44, %2
  br i1 %45, label %46, label %37

46:                                               ; preds = %37, %23
  %47 = phi i32 [ %34, %23 ], [ %38, %37 ]
  %48 = icmp ult i32 %47, %2
  br i1 %48, label %49, label %60

49:                                               ; preds = %46
  %50 = and i32 %2, 63
  %51 = zext i32 %50 to i64
  %52 = shl nsw i64 -1, %51
  %53 = xor i64 %52, -1
  %54 = load i64*, i64** %27, align 8
  %55 = lshr i32 %47, 6
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds i64, i64* %54, i64 %56
  %58 = load i64, i64* %57, align 8
  %59 = or i64 %58, %53
  store i64 %59, i64* %57, align 8
  br label %60

60:                                               ; preds = %46, %49, %3, %9
  ret %"class.llvm::BitVector"* %0
}

; Function Attrs: optsize
declare i64 @_ZNSt3__15stoulERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPmi(%"class.std::__1::basic_string"* dereferenceable(24), i64*, i32) local_unnamed_addr #3

; Function Attrs: noreturn optsize
declare void @_ZN4llvm18report_fatal_errorERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb(%"class.std::__1::basic_string"* dereferenceable(24), i1 zeroext) local_unnamed_addr #4

; Function Attrs: optsize
declare void @_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEPKS6_RKS9_(%"class.std::__1::basic_string"* sret, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm9BitVector4growEj(%"class.llvm::BitVector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = add i32 %1, 63
  %4 = lshr i32 %3, 6
  %5 = getelementptr inbounds %"class.llvm::BitVector", %"class.llvm::BitVector"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = shl i32 %6, 1
  %8 = icmp ult i32 %4, %7
  %9 = select i1 %8, i32 %7, i32 %4
  store i32 %9, i32* %5, align 4
  %10 = bitcast %"class.llvm::BitVector"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = zext i32 %9 to i64
  %13 = shl nuw nsw i64 %12, 3
  %14 = tail call i8* @realloc(i8* %11, i64 %13) #12
  store i8* %14, i8** %10, align 8
  tail call void @_ZN4llvm9BitVector15set_unused_bitsEb(%"class.llvm::BitVector"* %0, i1 zeroext false) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm9BitVector15set_unused_bitsEb(%"class.llvm::BitVector"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::BitVector", %"class.llvm::BitVector"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = add i32 %4, 63
  %6 = lshr i32 %5, 6
  %7 = getelementptr inbounds %"class.llvm::BitVector", %"class.llvm::BitVector"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %6
  br i1 %9, label %10, label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.llvm::BitVector", %"class.llvm::BitVector"* %0, i64 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds i64, i64* %12, i64 %13
  %15 = sub i32 %8, %6
  %16 = bitcast i64* %14 to i8*
  %17 = sext i1 %1 to i8
  %18 = zext i32 %15 to i64
  %19 = shl nuw nsw i64 %18, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 %17, i64 %19, i1 false) #11
  %20 = load i32, i32* %3, align 8
  br label %21

21:                                               ; preds = %10, %2
  %22 = phi i32 [ %20, %10 ], [ %4, %2 ]
  %23 = and i32 %22, 63
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %45, label %25

25:                                               ; preds = %21
  %26 = zext i32 %23 to i64
  %27 = shl i64 -1, %26
  br i1 %1, label %28, label %36

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.llvm::BitVector", %"class.llvm::BitVector"* %0, i64 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = add nsw i32 %6, -1
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i64, i64* %30, i64 %32
  %34 = load i64, i64* %33, align 8
  %35 = or i64 %34, %27
  store i64 %35, i64* %33, align 8
  br label %45

36:                                               ; preds = %25
  %37 = xor i64 %27, -1
  %38 = getelementptr inbounds %"class.llvm::BitVector", %"class.llvm::BitVector"* %0, i64 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = add nsw i32 %6, -1
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i64, i64* %39, i64 %41
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, %37
  store i64 %44, i64* %42, align 8
  br label %45

45:                                               ; preds = %28, %36, %21
  ret void
}

; Function Attrs: nounwind optsize
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %5 = alloca %"class.std::__1::unique_ptr.26", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = zext i8 %8 to i64
  %16 = select i1 %9, i8* %11, i8* %14
  %17 = select i1 %9, i64 %13, i64 %15
  %18 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #11
  %19 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %4, i8* %16, i64 %17) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #11
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %113, label %23

23:                                               ; preds = %3
  %24 = call i64 @llvm.ctpop.i64(i64 %21) #11, !range !3
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %21, -1
  %28 = and i64 %27, %19
  br label %33

29:                                               ; preds = %23
  %30 = icmp ult i64 %19, %21
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %19, %21
  br label %33

33:                                               ; preds = %26, %29, %31
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %19, %29 ]
  %35 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %113, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %42, null
  br i1 %43, label %113, label %44

44:                                               ; preds = %40
  %45 = add i64 %21, -1
  %46 = load i8, i8* %7, align 1
  %47 = icmp slt i8 %46, 0
  %48 = load i64, i64* %12, align 8
  %49 = zext i8 %46 to i64
  %50 = select i1 %47, i64 %48, i64 %49
  %51 = load i8*, i8** %10, align 8
  %52 = select i1 %47, i8* %51, i8* %14
  %53 = icmp eq i64 %50, 0
  br label %54

54:                                               ; preds = %44, %97
  %55 = phi %"struct.std::__1::__hash_node_base"* [ %42, %44 ], [ %99, %97 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %19
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  br i1 %25, label %63, label %61

61:                                               ; preds = %60
  %62 = and i64 %58, %45
  br label %67

63:                                               ; preds = %60
  %64 = icmp ult i64 %58, %21
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = urem i64 %58, %21
  br label %67

67:                                               ; preds = %61, %63, %65
  %68 = phi i64 [ %62, %61 ], [ %66, %65 ], [ %58, %63 ]
  %69 = icmp eq i64 %68, %34
  br i1 %69, label %70, label %113

70:                                               ; preds = %54, %67
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 2
  %72 = bitcast %"struct.std::__1::__hash_node_base"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 3
  %77 = bitcast %"struct.std::__1::__hash_node_base"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %74 to i64
  %80 = select i1 %75, i64 %78, i64 %79
  %81 = icmp eq i64 %80, %50
  br i1 %81, label %82, label %97

82:                                               ; preds = %70
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %71 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = bitcast %"struct.std::__1::__hash_node_base"* %71 to i8*
  %86 = select i1 %75, i8* %84, i8* %85
  br i1 %75, label %93, label %87

87:                                               ; preds = %82
  br i1 %53, label %205, label %88

88:                                               ; preds = %87
  %89 = ptrtoint i8* %84 to i64
  %90 = trunc i64 %89 to i8
  %91 = load i8, i8* %52, align 1
  %92 = icmp eq i8 %91, %90
  br i1 %92, label %101, label %97

93:                                               ; preds = %82
  br i1 %53, label %205, label %94

94:                                               ; preds = %93
  %95 = call i32 @bcmp(i8* %86, i8* %52, i64 %50) #11
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %205, label %97

97:                                               ; preds = %108, %88, %70, %94
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %55, i64 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base"* %99, null
  br i1 %100, label %113, label %54

101:                                              ; preds = %88, %108
  %102 = phi i64 [ %105, %108 ], [ %79, %88 ]
  %103 = phi i8* [ %106, %108 ], [ %85, %88 ]
  %104 = phi i8* [ %109, %108 ], [ %52, %88 ]
  %105 = add i64 %102, -1
  %106 = getelementptr inbounds i8, i8* %103, i64 1
  %107 = icmp eq i64 %105, 0
  br i1 %107, label %205, label %108

108:                                              ; preds = %101
  %109 = getelementptr inbounds i8, i8* %104, i64 1
  %110 = load i8, i8* %106, align 1
  %111 = load i8, i8* %109, align 1
  %112 = icmp eq i8 %110, %111
  br i1 %112, label %101, label %97

113:                                              ; preds = %67, %97, %40, %33, %3
  %114 = phi i64 [ %34, %33 ], [ -6148914691236517206, %3 ], [ %34, %40 ], [ %34, %97 ], [ %34, %67 ]
  %115 = bitcast %"class.std::__1::unique_ptr.26"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #11
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26"* %5, i64 0, i32 0, i32 0, i32 0
  %117 = bitcast %"class.std::__1::unique_ptr.26"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %117, i8 -86, i64 24, i1 false)
  call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_(%"class.std::__1::unique_ptr.26"* nonnull sret %5, %"class.std::__1::__hash_table"* %0, i64 %19, %"class.std::__1::basic_string"* dereferenceable(24) %2) #15
  %118 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, 1
  %121 = uitofp i64 %120 to float
  %122 = uitofp i64 %21 to float
  %123 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %124 = load float, float* %123, align 4
  %125 = fmul float %124, %122
  %126 = fcmp olt float %125, %121
  %127 = or i1 %22, %126
  br i1 %127, label %128, label %151

128:                                              ; preds = %113
  %129 = shl i64 %21, 1
  %130 = icmp ult i64 %21, 3
  %131 = call i64 @llvm.ctpop.i64(i64 %21) #11, !range !3
  %132 = icmp ugt i64 %131, 1
  %133 = or i1 %130, %132
  %134 = zext i1 %133 to i64
  %135 = or i64 %129, %134
  %136 = fdiv float %121, %124
  %137 = call float @llvm.ceil.f32(float %136) #11
  %138 = fptoui float %137 to i64
  %139 = icmp ult i64 %135, %138
  %140 = select i1 %139, i64 %138, i64 %135
  call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %140) #15
  %141 = load i64, i64* %20, align 8
  %142 = call i64 @llvm.ctpop.i64(i64 %141) #11, !range !3
  %143 = icmp ugt i64 %142, 1
  br i1 %143, label %147, label %144

144:                                              ; preds = %128
  %145 = add i64 %141, -1
  %146 = and i64 %145, %19
  br label %151

147:                                              ; preds = %128
  %148 = icmp ult i64 %19, %141
  br i1 %148, label %151, label %149

149:                                              ; preds = %147
  %150 = urem i64 %19, %141
  br label %151

151:                                              ; preds = %149, %147, %144, %113
  %152 = phi i64 [ %21, %113 ], [ %141, %144 ], [ %141, %147 ], [ %141, %149 ]
  %153 = phi i64 [ %114, %113 ], [ %146, %144 ], [ %19, %147 ], [ %150, %149 ]
  %154 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %155 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %154, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %155, i64 %153
  %157 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %156, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base"* %157, null
  br i1 %158, label %159, label %192

159:                                              ; preds = %151
  %160 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %160, i64 0, i32 0
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %160 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %"class.std::__1::unique_ptr.26"* %5 to i64**
  %165 = load i64*, i64** %164, align 8
  store i64 %163, i64* %165, align 8
  %166 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %116, align 8
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %166, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %167, %"struct.std::__1::__hash_node_base"** %161, align 8
  %168 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %154, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %168, i64 %153
  store %"struct.std::__1::__hash_node_base"* %160, %"struct.std::__1::__hash_node_base"** %169, align 8
  %170 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %116, align 8
  %171 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %170, i64 0, i32 0, i32 0
  %172 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %171, align 8
  %173 = icmp eq %"struct.std::__1::__hash_node_base"* %172, null
  br i1 %173, label %200, label %174

174:                                              ; preds = %159
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %170, i64 0, i32 0
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %172, i64 1
  %177 = bitcast %"struct.std::__1::__hash_node_base"* %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = call i64 @llvm.ctpop.i64(i64 %152) #11, !range !3
  %180 = icmp ugt i64 %179, 1
  br i1 %180, label %184, label %181

181:                                              ; preds = %174
  %182 = add i64 %152, -1
  %183 = and i64 %178, %182
  br label %188

184:                                              ; preds = %174
  %185 = icmp ult i64 %178, %152
  br i1 %185, label %188, label %186

186:                                              ; preds = %184
  %187 = urem i64 %178, %152
  br label %188

188:                                              ; preds = %181, %184, %186
  %189 = phi i64 [ %183, %181 ], [ %187, %186 ], [ %178, %184 ]
  %190 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %154, align 8
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %190, i64 %189
  store %"struct.std::__1::__hash_node_base"* %175, %"struct.std::__1::__hash_node_base"** %191, align 8
  br label %200

192:                                              ; preds = %151
  %193 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %157, i64 0, i32 0
  %194 = bitcast %"struct.std::__1::__hash_node_base"* %157 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.std::__1::unique_ptr.26"* %5 to i64**
  %197 = load i64*, i64** %196, align 8
  store i64 %195, i64* %197, align 8
  %198 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %116, align 8
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %198, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %199, %"struct.std::__1::__hash_node_base"** %193, align 8
  br label %200

200:                                              ; preds = %192, %188, %159
  %201 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %116, align 8
  %202 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %201, i64 0, i32 0
  %203 = load i64, i64* %118, align 8
  %204 = add i64 %203, 1
  store i64 %204, i64* %118, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #11
  br label %205

205:                                              ; preds = %87, %93, %94, %101, %200
  %206 = phi i8 [ 1, %200 ], [ 0, %101 ], [ 0, %94 ], [ 0, %93 ], [ 0, %87 ]
  %207 = phi %"struct.std::__1::__hash_node_base"* [ %202, %200 ], [ %55, %101 ], [ %55, %94 ], [ %55, %93 ], [ %55, %87 ]
  %208 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %207, 0
  %209 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %208, i8 %206, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %209
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE21__construct_node_hashIRKS6_JEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS4_ISJ_EEEEEEmOT_DpOT0_(%"class.std::__1::unique_ptr.26"* noalias sret, %"class.std::__1::__hash_table"*, i64, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr.26"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -86, i64 24, i1 false)
  %9 = tail call i8* @_Znwm(i64 40) #14
  %10 = ptrtoint i8* %9 to i64
  %11 = bitcast %"class.std::__1::unique_ptr.26"* %0 to i64*
  store i64 %10, i64* %11, align 8
  %12 = bitcast %"class.std::__1::allocator.17"** %6 to %"class.std::__1::__compressed_pair.14"**
  store %"class.std::__1::__compressed_pair.14"* %5, %"class.std::__1::__compressed_pair.14"** %12, align 8
  store i8 0, i8* %7, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 16
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %4
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %19, i64 24, i1 false) #11
  br label %26

20:                                               ; preds = %4
  %21 = bitcast i8* %13 to %"class.std::__1::basic_string"*
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %21, i8* %23, i64 %25) #12
  br label %26

26:                                               ; preds = %18, %20
  store i8 1, i8* %7, align 8
  %27 = getelementptr inbounds i8, i8* %9, i64 8
  %28 = bitcast i8* %27 to i64*
  store i64 %2, i64* %28, align 8
  %29 = bitcast i8* %9 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %29, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10) #15
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42) #15
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: inlinehint nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"*, i8*, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = icmp ult i64 %2, 33
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 17
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8* %1, i64 %2) #15
  br label %212

9:                                                ; preds = %5
  %10 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_17_to_32EPKcm(i8* %1, i64 %2) #15
  br label %212

11:                                               ; preds = %3
  %12 = icmp ult i64 %2, 65
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = tail call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_33_to_64EPKcm(i8* %1, i64 %2) #15
  br label %212

15:                                               ; preds = %11
  %16 = getelementptr inbounds i8, i8* %1, i64 %2
  %17 = getelementptr inbounds i8, i8* %16, i64 -40
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 1
  %20 = getelementptr inbounds i8, i8* %16, i64 -16
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 1
  %23 = getelementptr inbounds i8, i8* %16, i64 -56
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 1
  %26 = add i64 %25, %22
  %27 = getelementptr inbounds i8, i8* %16, i64 -48
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 1
  %30 = add i64 %29, %2
  %31 = getelementptr inbounds i8, i8* %16, i64 -24
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 1
  %34 = xor i64 %33, %30
  %35 = mul i64 %34, -7070675565921424023
  %36 = lshr i64 %35, 47
  %37 = xor i64 %35, %33
  %38 = xor i64 %37, %36
  %39 = mul i64 %38, -7070675565921424023
  %40 = lshr i64 %39, 47
  %41 = xor i64 %40, %39
  %42 = mul i64 %41, -7070675565921424023
  %43 = getelementptr inbounds i8, i8* %16, i64 -64
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 1
  %46 = add i64 %45, %2
  %47 = add i64 %19, %46
  %48 = add i64 %47, %42
  %49 = lshr i64 %48, 21
  %50 = shl i64 %48, 43
  %51 = or i64 %50, %49
  %52 = add i64 %46, %25
  %53 = add i64 %52, %29
  %54 = lshr i64 %53, 44
  %55 = shl i64 %53, 20
  %56 = or i64 %55, %54
  %57 = add i64 %53, %19
  %58 = add i64 %56, %46
  %59 = add i64 %58, %51
  %60 = getelementptr inbounds i8, i8* %16, i64 -32
  %61 = add i64 %26, -5435081209227447693
  %62 = bitcast i8* %60 to i64*
  %63 = load i64, i64* %62, align 1
  %64 = getelementptr inbounds i8, i8* %60, i64 24
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 1
  %67 = add i64 %61, %63
  %68 = add i64 %67, %19
  %69 = add i64 %68, %66
  %70 = lshr i64 %69, 21
  %71 = shl i64 %69, 43
  %72 = or i64 %71, %70
  %73 = add i64 %67, %33
  %74 = add i64 %73, %22
  %75 = lshr i64 %74, 44
  %76 = shl i64 %74, 20
  %77 = or i64 %76, %75
  %78 = add i64 %74, %66
  %79 = add i64 %77, %67
  %80 = add i64 %79, %72
  %81 = mul i64 %19, -5435081209227447693
  %82 = bitcast i8* %1 to i64*
  %83 = load i64, i64* %82, align 1
  %84 = add i64 %83, %81
  %85 = add i64 %2, -1
  %86 = and i64 %85, -64
  br label %87

87:                                               ; preds = %175, %15
  %88 = phi i64 [ %83, %15 ], [ %177, %175 ]
  %89 = phi i64 [ %80, %15 ], [ %171, %175 ]
  %90 = phi i64 [ %78, %15 ], [ %169, %175 ]
  %91 = phi i64 [ %57, %15 ], [ %147, %175 ]
  %92 = phi i64 [ %59, %15 ], [ %149, %175 ]
  %93 = phi i64 [ %42, %15 ], [ %117, %175 ]
  %94 = phi i64 [ %84, %15 ], [ %127, %175 ]
  %95 = phi i64 [ %86, %15 ], [ %173, %175 ]
  %96 = phi i8* [ %1, %15 ], [ %172, %175 ]
  %97 = phi i64 [ %26, %15 ], [ %122, %175 ]
  %98 = getelementptr inbounds i8, i8* %96, i64 8
  %99 = bitcast i8* %98 to i64*
  %100 = load i64, i64* %99, align 1
  %101 = add i64 %94, %91
  %102 = add i64 %101, %97
  %103 = add i64 %102, %100
  %104 = lshr i64 %103, 37
  %105 = shl i64 %103, 27
  %106 = or i64 %105, %104
  %107 = mul i64 %106, -5435081209227447693
  %108 = add i64 %97, %92
  %109 = getelementptr inbounds i8, i8* %96, i64 48
  %110 = bitcast i8* %109 to i64*
  %111 = load i64, i64* %110, align 1
  %112 = add i64 %108, %111
  %113 = lshr i64 %112, 42
  %114 = shl i64 %112, 22
  %115 = or i64 %114, %113
  %116 = mul i64 %115, -5435081209227447693
  %117 = xor i64 %107, %89
  %118 = getelementptr inbounds i8, i8* %96, i64 40
  %119 = bitcast i8* %118 to i64*
  %120 = load i64, i64* %119, align 1
  %121 = add i64 %120, %91
  %122 = add i64 %121, %116
  %123 = add i64 %93, %90
  %124 = lshr i64 %123, 33
  %125 = shl i64 %123, 31
  %126 = or i64 %125, %124
  %127 = mul i64 %126, -5435081209227447693
  %128 = mul i64 %92, -5435081209227447693
  %129 = getelementptr inbounds i8, i8* %96, i64 16
  %130 = bitcast i8* %129 to i64*
  %131 = load i64, i64* %130, align 1
  %132 = getelementptr inbounds i8, i8* %96, i64 24
  %133 = bitcast i8* %132 to i64*
  %134 = load i64, i64* %133, align 1
  %135 = add i64 %88, %128
  %136 = add i64 %135, %90
  %137 = add i64 %136, %134
  %138 = add i64 %137, %117
  %139 = lshr i64 %138, 21
  %140 = shl i64 %138, 43
  %141 = or i64 %140, %139
  %142 = add i64 %135, %100
  %143 = add i64 %142, %131
  %144 = lshr i64 %143, 44
  %145 = shl i64 %143, 20
  %146 = or i64 %145, %144
  %147 = add i64 %143, %134
  %148 = add i64 %146, %135
  %149 = add i64 %148, %141
  %150 = getelementptr inbounds i8, i8* %96, i64 32
  %151 = add i64 %127, %89
  %152 = add i64 %122, %131
  %153 = bitcast i8* %150 to i64*
  %154 = load i64, i64* %153, align 1
  %155 = getelementptr inbounds i8, i8* %96, i64 56
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 1
  %158 = add i64 %151, %154
  %159 = add i64 %152, %158
  %160 = add i64 %159, %157
  %161 = lshr i64 %160, 21
  %162 = shl i64 %160, 43
  %163 = or i64 %162, %161
  %164 = add i64 %158, %120
  %165 = add i64 %164, %111
  %166 = lshr i64 %165, 44
  %167 = shl i64 %165, 20
  %168 = or i64 %167, %166
  %169 = add i64 %165, %157
  %170 = add i64 %168, %158
  %171 = add i64 %170, %163
  %172 = getelementptr inbounds i8, i8* %96, i64 64
  %173 = add i64 %95, -64
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %178, label %175

175:                                              ; preds = %87
  %176 = bitcast i8* %172 to i64*
  %177 = load i64, i64* %176, align 1
  br label %87

178:                                              ; preds = %87
  %179 = xor i64 %169, %147
  %180 = mul i64 %179, -7070675565921424023
  %181 = lshr i64 %180, 47
  %182 = xor i64 %180, %169
  %183 = xor i64 %182, %181
  %184 = mul i64 %183, -7070675565921424023
  %185 = lshr i64 %184, 47
  %186 = xor i64 %185, %184
  %187 = mul i64 %186, -7070675565921424023
  %188 = lshr i64 %122, 47
  %189 = xor i64 %188, %122
  %190 = mul i64 %189, -5435081209227447693
  %191 = add i64 %190, %117
  %192 = add i64 %191, %187
  %193 = xor i64 %171, %149
  %194 = mul i64 %193, -7070675565921424023
  %195 = lshr i64 %194, 47
  %196 = xor i64 %194, %171
  %197 = xor i64 %196, %195
  %198 = mul i64 %197, -7070675565921424023
  %199 = lshr i64 %198, 47
  %200 = xor i64 %199, %198
  %201 = mul i64 %200, -7070675565921424023
  %202 = add i64 %201, %127
  %203 = xor i64 %202, %192
  %204 = mul i64 %203, -7070675565921424023
  %205 = lshr i64 %204, 47
  %206 = xor i64 %204, %202
  %207 = xor i64 %206, %205
  %208 = mul i64 %207, -7070675565921424023
  %209 = lshr i64 %208, 47
  %210 = xor i64 %209, %208
  %211 = mul i64 %210, -7070675565921424023
  br label %212

212:                                              ; preds = %178, %13, %9, %7
  %213 = phi i64 [ %8, %7 ], [ %10, %9 ], [ %14, %13 ], [ %211, %178 ]
  ret i64 %213
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE18__hash_len_0_to_16EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 8
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = bitcast i8* %0 to i64*
  %6 = load i64, i64* %5, align 1
  %7 = getelementptr inbounds i8, i8* %0, i64 %1
  %8 = getelementptr inbounds i8, i8* %7, i64 -8
  %9 = bitcast i8* %8 to i64*
  %10 = load i64, i64* %9, align 1
  %11 = add i64 %10, %1
  %12 = and i64 %1, 4294967295
  %13 = lshr i64 %11, %12
  %14 = sub i64 64, %1
  %15 = and i64 %14, 4294967295
  %16 = shl i64 %11, %15
  %17 = or i64 %16, %13
  %18 = xor i64 %17, %6
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %19, %17
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, -7070675565921424023
  %24 = lshr i64 %23, 47
  %25 = xor i64 %24, %23
  %26 = mul i64 %25, -7070675565921424023
  %27 = xor i64 %26, %10
  br label %74

28:                                               ; preds = %2
  %29 = icmp ugt i64 %1, 3
  br i1 %29, label %30, label %50

30:                                               ; preds = %28
  %31 = bitcast i8* %0 to i32*
  %32 = load i32, i32* %31, align 1
  %33 = getelementptr inbounds i8, i8* %0, i64 %1
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i32*
  %36 = load i32, i32* %35, align 1
  %37 = shl i32 %32, 3
  %38 = zext i32 %37 to i64
  %39 = add nuw nsw i64 %38, %1
  %40 = zext i32 %36 to i64
  %41 = xor i64 %39, %40
  %42 = mul i64 %41, -7070675565921424023
  %43 = lshr i64 %42, 47
  %44 = xor i64 %42, %40
  %45 = xor i64 %44, %43
  %46 = mul i64 %45, -7070675565921424023
  %47 = lshr i64 %46, 47
  %48 = xor i64 %47, %46
  %49 = mul i64 %48, -7070675565921424023
  br label %74

50:                                               ; preds = %28
  %51 = icmp eq i64 %1, 0
  br i1 %51, label %74, label %52

52:                                               ; preds = %50
  %53 = load i8, i8* %0, align 1
  %54 = lshr i64 %1, 1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = add nsw i64 %1, -1
  %58 = getelementptr inbounds i8, i8* %0, i64 %57
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %53 to i64
  %61 = zext i8 %56 to i64
  %62 = shl nuw nsw i64 %61, 8
  %63 = or i64 %62, %60
  %64 = zext i8 %59 to i64
  %65 = shl nuw nsw i64 %64, 2
  %66 = add nuw nsw i64 %65, %1
  %67 = mul i64 %63, -7286425919675154353
  %68 = and i64 %66, 4294967295
  %69 = mul i64 %68, -3942382747735136937
  %70 = xor i64 %69, %67
  %71 = lshr i64 %70, 47
  %72 = xor i64 %71, %70
  %73 = mul i64 %72, -7286425919675154353
  br label %74

74:                                               ; preds = %50, %52, %30, %4
  %75 = phi i64 [ %27, %4 ], [ %49, %30 ], [ %73, %52 ], [ -7286425919675154353, %50 ]
  ret i64 %75
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_17_to_32EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %0 to i64*
  %4 = load i64, i64* %3, align 1
  %5 = mul i64 %4, -5435081209227447693
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 1
  %9 = getelementptr inbounds i8, i8* %0, i64 %1
  %10 = getelementptr inbounds i8, i8* %9, i64 -8
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 1
  %13 = mul i64 %12, -7286425919675154353
  %14 = getelementptr inbounds i8, i8* %9, i64 -16
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 1
  %17 = mul i64 %16, -4348849565147123417
  %18 = sub i64 %5, %8
  %19 = lshr i64 %18, 43
  %20 = shl i64 %18, 21
  %21 = or i64 %20, %19
  %22 = lshr i64 %13, 30
  %23 = mul i64 %12, -4737503975807385600
  %24 = or i64 %22, %23
  %25 = add i64 %17, %21
  %26 = add i64 %25, %24
  %27 = xor i64 %8, -3942382747735136937
  %28 = lshr i64 %27, 20
  %29 = shl i64 %27, 44
  %30 = or i64 %29, %28
  %31 = add i64 %5, %1
  %32 = sub i64 %31, %13
  %33 = add i64 %32, %30
  %34 = xor i64 %33, %26
  %35 = mul i64 %34, -7070675565921424023
  %36 = lshr i64 %35, 47
  %37 = xor i64 %35, %33
  %38 = xor i64 %37, %36
  %39 = mul i64 %38, -7070675565921424023
  %40 = lshr i64 %39, 47
  %41 = xor i64 %40, %39
  %42 = mul i64 %41, -7070675565921424023
  ret i64 %42
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EE19__hash_len_33_to_64EPKcm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %0, i64 24
  %4 = bitcast i8* %3 to i64*
  %5 = load i64, i64* %4, align 1
  %6 = bitcast i8* %0 to i64*
  %7 = load i64, i64* %6, align 1
  %8 = getelementptr inbounds i8, i8* %0, i64 %1
  %9 = getelementptr inbounds i8, i8* %8, i64 -16
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 1
  %12 = add i64 %11, %1
  %13 = mul i64 %12, -4348849565147123417
  %14 = add i64 %13, %7
  %15 = add i64 %14, %5
  %16 = lshr i64 %15, 52
  %17 = shl i64 %15, 12
  %18 = or i64 %17, %16
  %19 = lshr i64 %14, 37
  %20 = shl i64 %14, 27
  %21 = or i64 %20, %19
  %22 = getelementptr inbounds i8, i8* %0, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 1
  %25 = add i64 %14, %24
  %26 = lshr i64 %25, 7
  %27 = shl i64 %25, 57
  %28 = or i64 %27, %26
  %29 = getelementptr inbounds i8, i8* %0, i64 16
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 1
  %32 = add i64 %25, %31
  %33 = lshr i64 %32, 31
  %34 = shl i64 %32, 33
  %35 = or i64 %34, %33
  %36 = add i64 %28, %21
  %37 = add i64 %36, %18
  %38 = add i64 %37, %35
  %39 = getelementptr inbounds i8, i8* %8, i64 -32
  %40 = bitcast i8* %39 to i64*
  %41 = load i64, i64* %40, align 1
  %42 = add i64 %41, %31
  %43 = getelementptr inbounds i8, i8* %8, i64 -8
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 1
  %46 = add i64 %45, %5
  %47 = add i64 %46, %42
  %48 = lshr i64 %47, 52
  %49 = shl i64 %47, 12
  %50 = or i64 %49, %48
  %51 = lshr i64 %42, 37
  %52 = shl i64 %42, 27
  %53 = or i64 %52, %51
  %54 = getelementptr inbounds i8, i8* %8, i64 -24
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 1
  %57 = add i64 %56, %42
  %58 = lshr i64 %57, 7
  %59 = shl i64 %57, 57
  %60 = or i64 %59, %58
  %61 = add i64 %57, %11
  %62 = add i64 %61, %46
  %63 = lshr i64 %61, 31
  %64 = shl i64 %61, 33
  %65 = or i64 %64, %63
  %66 = add i64 %32, %5
  %67 = add i64 %66, %53
  %68 = add i64 %67, %60
  %69 = add i64 %68, %50
  %70 = add i64 %69, %65
  %71 = mul i64 %70, -7286425919675154353
  %72 = add i64 %62, %38
  %73 = mul i64 %72, -4348849565147123417
  %74 = add i64 %71, %73
  %75 = lshr i64 %74, 47
  %76 = xor i64 %75, %74
  %77 = mul i64 %76, -4348849565147123417
  %78 = add i64 %77, %38
  %79 = lshr i64 %78, 47
  %80 = xor i64 %79, %78
  %81 = mul i64 %80, -7286425919675154353
  ret i64 %81
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind optsize
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: optsize
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #3

; Function Attrs: optsize
declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %159, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #13
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #14
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  br label %24

19:                                               ; preds = %24
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %20, i64 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %23, label %167, label %30

24:                                               ; preds = %24, %17
  %25 = phi i64 [ %28, %24 ], [ 0, %17 ]
  %26 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, i64 %25
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %27, align 8
  %28 = add nuw i64 %25, 1
  %29 = icmp eq i64 %28, %1
  br i1 %29, label %19, label %24

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 1
  %32 = bitcast %"struct.std::__1::__hash_node_base"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !3
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = add i64 %1, -1
  %38 = and i64 %33, %37
  br label %43

39:                                               ; preds = %30
  %40 = icmp ult i64 %33, %1
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %33, %1
  br label %43

43:                                               ; preds = %36, %39, %41
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %33, %39 ]
  %45 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %45, i64 %44
  store %"struct.std::__1::__hash_node_base"* %20, %"struct.std::__1::__hash_node_base"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base"* %48, null
  br i1 %49, label %167, label %50

50:                                               ; preds = %43
  %51 = add i64 %1, -1
  br label %52

52:                                               ; preds = %50, %153
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %48, %50 ], [ %157, %153 ]
  %54 = phi i64 [ %44, %50 ], [ %155, %153 ]
  %55 = phi %"struct.std::__1::__hash_node_base"* [ %22, %50 ], [ %154, %153 ]
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  br i1 %35, label %61, label %59

59:                                               ; preds = %52
  %60 = and i64 %58, %51
  br label %65

61:                                               ; preds = %52
  %62 = icmp ult i64 %58, %1
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %58, %1
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %58, %61 ]
  %67 = icmp eq i64 %66, %54
  br i1 %67, label %153, label %68

68:                                               ; preds = %65
  %69 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %69, i64 %66
  %71 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %70, align 8
  %72 = icmp eq %"struct.std::__1::__hash_node_base"* %71, null
  br i1 %72, label %91, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %139, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %79 = bitcast %"struct.std::__1::__hash_node_base"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 3
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = zext i8 %81 to i64
  %87 = select i1 %82, i64 %85, i64 %86
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %78 to i8**
  %89 = bitcast %"struct.std::__1::__hash_node_base"* %78 to i8*
  %90 = icmp eq i64 %87, 0
  br label %92

91:                                               ; preds = %68
  store %"struct.std::__1::__hash_node_base"* %55, %"struct.std::__1::__hash_node_base"** %70, align 8
  br label %153

92:                                               ; preds = %77, %135
  %93 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %137, %135 ]
  %94 = phi %"struct.std::__1::__hash_node_base"* [ %53, %77 ], [ %93, %135 ]
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 2
  %96 = bitcast %"struct.std::__1::__hash_node_base"* %95 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 3
  %101 = bitcast %"struct.std::__1::__hash_node_base"* %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = zext i8 %98 to i64
  %104 = select i1 %99, i64 %102, i64 %103
  %105 = icmp eq i64 %87, %104
  br i1 %105, label %106, label %139

106:                                              ; preds = %92
  %107 = load i8*, i8** %88, align 8
  %108 = select i1 %82, i8* %107, i8* %89
  %109 = bitcast %"struct.std::__1::__hash_node_base"* %95 to i8**
  %110 = load i8*, i8** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %95 to i8*
  %112 = select i1 %99, i8* %110, i8* %111
  br i1 %82, label %119, label %113

113:                                              ; preds = %106
  br i1 %90, label %135, label %114

114:                                              ; preds = %113
  %115 = ptrtoint i8* %107 to i64
  %116 = trunc i64 %115 to i8
  %117 = load i8, i8* %112, align 1
  %118 = icmp eq i8 %117, %116
  br i1 %118, label %120, label %139

119:                                              ; preds = %106
  br i1 %90, label %135, label %132

120:                                              ; preds = %114, %127
  %121 = phi i64 [ %124, %127 ], [ %86, %114 ]
  %122 = phi i8* [ %125, %127 ], [ %89, %114 ]
  %123 = phi i8* [ %128, %127 ], [ %112, %114 ]
  %124 = add i64 %121, -1
  %125 = getelementptr inbounds i8, i8* %122, i64 1
  %126 = icmp eq i64 %124, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %120
  %128 = getelementptr inbounds i8, i8* %123, i64 1
  %129 = load i8, i8* %125, align 1
  %130 = load i8, i8* %128, align 1
  %131 = icmp eq i8 %129, %130
  br i1 %131, label %120, label %139

132:                                              ; preds = %119
  %133 = tail call i32 @bcmp(i8* %108, i8* %112, i64 %87) #11
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %139

135:                                              ; preds = %120, %113, %119, %132
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 0, i32 0
  %137 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base"* %137, null
  br i1 %138, label %139, label %92

139:                                              ; preds = %132, %135, %92, %114, %127, %73
  %140 = phi %"struct.std::__1::__hash_node_base"* [ %53, %73 ], [ %94, %127 ], [ %94, %132 ], [ %93, %135 ], [ %94, %92 ], [ %94, %114 ]
  %141 = bitcast %"struct.std::__1::__hash_node_base"* %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"struct.std::__1::__hash_node_base"* %55 to i64*
  store i64 %142, i64* %143, align 8
  %144 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %144, i64 %66
  %146 = bitcast %"struct.std::__1::__hash_node_base"** %145 to i64**
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* %141, align 8
  %149 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %149, i64 %66
  %151 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %150, align 8
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %151, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %53, %"struct.std::__1::__hash_node_base"** %152, align 8
  br label %153

153:                                              ; preds = %65, %139, %91
  %154 = phi %"struct.std::__1::__hash_node_base"* [ %53, %91 ], [ %55, %139 ], [ %53, %65 ]
  %155 = phi i64 [ %66, %91 ], [ %54, %139 ], [ %54, %65 ]
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %154, i64 0, i32 0
  %157 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %156, align 8
  %158 = icmp eq %"struct.std::__1::__hash_node_base"* %157, null
  br i1 %158, label %167, label %52

159:                                              ; preds = %2
  %160 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %160, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %160, align 8
  %162 = icmp eq %"struct.std::__1::__hash_node_base"** %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.std::__1::__hash_node_base"** %161 to i8*
  tail call void @_ZdlPv(i8* %164) #14
  br label %165

165:                                              ; preds = %159, %163
  %166 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %166, align 8
  br label %167

167:                                              ; preds = %153, %43, %19, %165
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEED2Ev(%"class.std::__1::__vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base", %"class.std::__1::__vector_base"* %0, i64 0, i32 0
  %3 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %2, align 8
  %4 = icmp eq %"class.std::__1::basic_string"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  tail call void @_ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE5clearEv(%"class.std::__1::__vector_base"* %0) #12
  %6 = bitcast %"class.std::__1::__vector_base"* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  tail call void @_ZdlPv(i8* %7) #14
  br label %8

8:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE5clearEv(%"class.std::__1::__vector_base"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base", %"class.std::__1::__vector_base"* %0, i64 0, i32 0
  %3 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__vector_base", %"class.std::__1::__vector_base"* %0, i64 0, i32 1
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, %3
  br i1 %6, label %19, label %7

7:                                                ; preds = %1, %17
  %8 = phi %"class.std::__1::basic_string"* [ %9, %17 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 -1
  %10 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  tail call void @_ZdlPv(i8* %16) #14
  br label %17

17:                                               ; preds = %14, %7
  %18 = icmp eq %"class.std::__1::basic_string"* %9, %3
  br i1 %18, label %19, label %7

19:                                               ; preds = %17, %1
  store %"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"** %4, align 8
  ret void
}

; Function Attrs: optsize
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEEC2EmmS8_(%"struct.std::__1::__split_buffer"*, i64, i64, %"class.std::__1::allocator.4"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0
  store %"class.std::__1::allocator.4"* %3, %"class.std::__1::allocator.4"** %6, align 8
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = icmp ugt i64 %1, 768614336404564650
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  tail call void @abort() #13
  unreachable

11:                                               ; preds = %8
  %12 = mul i64 %1, 24
  %13 = tail call i8* @_Znwm(i64 %12) #14
  %14 = bitcast i8* %13 to %"class.std::__1::basic_string"*
  br label %15

15:                                               ; preds = %4, %11
  %16 = phi %"class.std::__1::basic_string"* [ %14, %11 ], [ null, %4 ]
  %17 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %17, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 %2
  %19 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  store %"class.std::__1::basic_string"* %18, %"class.std::__1::basic_string"** %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  store %"class.std::__1::basic_string"* %18, %"class.std::__1::basic_string"** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 %1
  store %"class.std::__1::basic_string"* %21, %"class.std::__1::basic_string"** %5, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEED2Ev(%"struct.std::__1::__split_buffer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %2, align 8
  tail call void @_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE17__destruct_at_endEPS6_(%"struct.std::__1::__split_buffer"* %0, %"class.std::__1::basic_string"* %3) #12
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #14
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE17__destruct_at_endEPS6_(%"struct.std::__1::__split_buffer"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, %1
  br i1 %5, label %20, label %6

6:                                                ; preds = %2, %17
  %7 = phi %"class.std::__1::basic_string"* [ %18, %17 ], [ %4, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 -1
  store %"class.std::__1::basic_string"* %8, %"class.std::__1::basic_string"** %3, align 8
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %17

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #14
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %17

17:                                               ; preds = %13, %6
  %18 = phi %"class.std::__1::basic_string"* [ %8, %6 ], [ %16, %13 ]
  %19 = icmp eq %"class.std::__1::basic_string"* %18, %1
  br i1 %19, label %20, label %6

20:                                               ; preds = %17, %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base"* @_ZNKSt3__112__hash_tableINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4hashIS6_EENS_8equal_toIS6_EENS4_IS6_EEE4findIS6_EENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEERKT_(%"class.std::__1::__hash_table"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::__murmur2_or_cityhash", align 1
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i8* %9, i8* %12
  %15 = select i1 %7, i64 %11, i64 %13
  %16 = getelementptr inbounds %"struct.std::__1::__murmur2_or_cityhash", %"struct.std::__1::__murmur2_or_cityhash"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #11
  %17 = call i64 @_ZNSt3__121__murmur2_or_cityhashImLm64EEclEPKvm(%"struct.std::__1::__murmur2_or_cityhash"* nonnull %3, i8* %14, i64 %15) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #11
  %18 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %111, label %21

21:                                               ; preds = %2
  %22 = call i64 @llvm.ctpop.i64(i64 %19) #11, !range !3
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %25, %17
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %111, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %111, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  %44 = load i8, i8* %5, align 1
  %45 = icmp slt i8 %44, 0
  %46 = load i64, i64* %10, align 8
  %47 = zext i8 %44 to i64
  %48 = select i1 %45, i64 %46, i64 %47
  %49 = load i8*, i8** %8, align 8
  %50 = select i1 %45, i8* %49, i8* %12
  %51 = icmp eq i64 %48, 0
  br label %52

52:                                               ; preds = %42, %107
  %53 = phi %"struct.std::__1::__hash_node_base"* [ %40, %42 ], [ %109, %107 ]
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 1
  %55 = bitcast %"struct.std::__1::__hash_node_base"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %17, %56
  br i1 %57, label %68, label %58

58:                                               ; preds = %52
  br i1 %23, label %61, label %59

59:                                               ; preds = %58
  %60 = and i64 %56, %43
  br label %65

61:                                               ; preds = %58
  %62 = icmp ult i64 %56, %19
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %56, %19
  br label %65

65:                                               ; preds = %59, %61, %63
  %66 = phi i64 [ %60, %59 ], [ %64, %63 ], [ %56, %61 ]
  %67 = icmp eq i64 %66, %32
  br i1 %67, label %107, label %111

68:                                               ; preds = %52
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 3
  %75 = bitcast %"struct.std::__1::__hash_node_base"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %72 to i64
  %78 = select i1 %73, i64 %76, i64 %77
  %79 = icmp eq i64 %78, %48
  br i1 %79, label %80, label %107

80:                                               ; preds = %68
  %81 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i8*
  %84 = select i1 %73, i8* %82, i8* %83
  br i1 %73, label %91, label %85

85:                                               ; preds = %80
  br i1 %51, label %111, label %86

86:                                               ; preds = %85
  %87 = ptrtoint i8* %82 to i64
  %88 = trunc i64 %87 to i8
  %89 = load i8, i8* %50, align 1
  %90 = icmp eq i8 %89, %88
  br i1 %90, label %92, label %107

91:                                               ; preds = %80
  br i1 %51, label %111, label %104

92:                                               ; preds = %86, %99
  %93 = phi i64 [ %96, %99 ], [ %77, %86 ]
  %94 = phi i8* [ %97, %99 ], [ %83, %86 ]
  %95 = phi i8* [ %100, %99 ], [ %50, %86 ]
  %96 = add i64 %93, -1
  %97 = getelementptr inbounds i8, i8* %94, i64 1
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %111, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds i8, i8* %95, i64 1
  %101 = load i8, i8* %97, align 1
  %102 = load i8, i8* %100, align 1
  %103 = icmp eq i8 %101, %102
  br i1 %103, label %92, label %107

104:                                              ; preds = %91
  %105 = call i32 @bcmp(i8* %84, i8* %50, i64 %48) #11
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %99, %86, %68, %65, %104
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %53, i64 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %108, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base"* %109, null
  br i1 %110, label %111, label %52

111:                                              ; preds = %104, %107, %65, %91, %85, %92, %38, %2, %31
  %112 = phi %"struct.std::__1::__hash_node_base"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %53, %92 ], [ %53, %104 ], [ null, %107 ], [ null, %65 ], [ %53, %91 ], [ %53, %85 ]
  ret %"struct.std::__1::__hash_node_base"* %112
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { nounwind }
attributes #12 = { nounwind optsize }
attributes #13 = { noreturn nounwind optsize }
attributes #14 = { builtin nounwind optsize }
attributes #15 = { optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
