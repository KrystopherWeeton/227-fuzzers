; ModuleID = '../../net/third_party/quiche/src/quic/core/quic_control_frame_manager.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/quic_control_frame_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.quic::QuicControlFrameManager" = type { %"class.quiche::QuicheCircularDeque", i32, i32, i32, %"class.quiche::QuicheLinkedHashMap", %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.absl::flat_hash_map" }
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData" = type { %"struct.quic::QuicFrame"*, i64 }
%"struct.quic::QuicFrame" = type { %union.anon }
%union.anon = type { %"struct.quic::QuicStreamFrame" }
%"struct.quic::QuicStreamFrame" = type { i8, i8, i16, i32, i8*, i64 }
%"class.quiche::QuicheLinkedHashMap" = type { %"class.absl::node_hash_map", %"class.std::__1::list" }
%"class.absl::node_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"struct.std::__1::pair.41"**, i64, i64, %"class.absl::container_internal::CompressedTuple.42" }
%"struct.std::__1::pair.41" = type { i32, %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.absl::container_internal::CompressedTuple.42" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.43" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.43" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.44" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.44" = type { i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i64 }
%"class.quic::QuicControlFrameManager::DelegateInterface" = type { i32 (...)** }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map.56" }
%"class.absl::container_internal::raw_hash_map.56" = type { %"class.absl::container_internal::raw_hash_set.57" }
%"class.absl::container_internal::raw_hash_set.57" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple.58" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair.421" }
%"struct.std::__1::pair.421" = type { i32, i32 }
%"class.absl::container_internal::CompressedTuple.58" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.59" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.59" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.44" }
%"class.quic::QuicSession" = type <{ %"class.quic::QuicConnectionVisitorInterface", %"class.quic::SessionNotifierInterface", %"class.quic::QuicStreamFrameDataProducer", %"class.quic::QuicStreamIdManager::DelegateInterface", %"class.quic::HandshakerDelegateInterface", %"class.quic::StreamDelegateInterface", %"class.quic::QuicControlFrameManager::DelegateInterface", %"class.absl::flat_hash_map.63", %"class.quic::QuicConnection"*, i8, [7 x i8], %"class.quic::QuicSession::Visitor"*, %"class.quic::QuicWriteBlockedList", %"class.std::__1::vector.321", %"class.quic::QuicConfig", %"class.absl::flat_hash_map.384", %"class.absl::flat_hash_map.393", %"class.quic::LegacyQuicStreamIdManager", %"class.quic::UberQuicStreamIdManager", i64, i64, i64, i64, %"struct.quic::QuicConnectionCloseFrame", %"class.quic::QuicFlowController", i32, i8, i8, [2 x i8], %"class.quic::QuicControlFrameManager", i32, [4 x i8], %"class.quic::QuicDatagramQueue", %"class.quiche::QuicheLinkedHashMap", %"class.std::__1::unique_ptr.177", %"class.std::__1::vector.72", %"class.absl::optional.415", i8, i8, i8, i8, [4 x i8] }>
%"class.quic::QuicConnectionVisitorInterface" = type { i32 (...)** }
%"class.quic::SessionNotifierInterface" = type { i32 (...)** }
%"class.quic::QuicStreamFrameDataProducer" = type { i32 (...)** }
%"class.quic::QuicStreamIdManager::DelegateInterface" = type { i32 (...)** }
%"class.quic::HandshakerDelegateInterface" = type { i32 (...)** }
%"class.quic::StreamDelegateInterface" = type { i32 (...)** }
%"class.absl::flat_hash_map.63" = type { %"class.absl::container_internal::raw_hash_map.64" }
%"class.absl::container_internal::raw_hash_map.64" = type { %"class.absl::container_internal::raw_hash_set.65" }
%"class.absl::container_internal::raw_hash_set.65" = type { i8*, %"union.absl::container_internal::map_slot_type.66"*, i64, i64, %"class.absl::container_internal::CompressedTuple.67" }
%"union.absl::container_internal::map_slot_type.66" = type opaque
%"class.absl::container_internal::CompressedTuple.67" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.68" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.68" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.44" }
%"class.quic::QuicConnection" = type <{ %"class.quic::QuicFramerVisitorInterface", %"class.quic::QuicBlockedWriterInterface", %"class.quic::QuicPacketCreator::DelegateInterface", %"class.quic::QuicSentPacketManager::NetworkChangeVisitor", %"class.quic::QuicNetworkBlackholeDetector::Delegate", %"class.quic::QuicIdleNetworkDetector::Delegate", %"class.quic::QuicPathValidator::SendDelegate", %"class.quic::QuicConnectionIdManagerVisitorInterface", %"class.quic::QuicFramer", i8, i8, i8, i8, [4 x i8], %"class.quic::QuicConnectionHelperInterface"*, %"class.quic::QuicAlarmFactory"*, %"struct.quic::PerPacketOptions"*, %"class.quic::QuicPacketWriter"*, i8, i8, [6 x i8], %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", i8, i8, [2 x i8], %"class.quic::QuicSocketAddress", [4 x i8], %"struct.quic::QuicConnection::PathState", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8], i64, i8*, i8, [7 x i8], %"struct.quic::QuicPacketHeader", i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.std::__1::deque", %"class.quiche::QuicheCircularDeque.113", i64, i64, %"class.std::__1::unique_ptr.116", i32, [4 x i8], i64, %"struct.quic::QuicConnectionStats", %"class.quic::UberReceivedPacketManager", i32, i8, i8, [2 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i32, i32, %"class.quic::QuicOneBlockArena", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicArenaScopedPtr", %"class.quic::QuicConnectionVisitorInterface"*, %"class.quic::QuicConnectionDebugVisitor"*, %"class.quic::QuicPacketCreator", %"class.quic::QuicTime", %"class.quic::QuicSentPacketManager", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", [4 x i8], %"class.quic::QuicConnectionId", i8, [7 x i8], %"class.std::__1::vector.72", i64, i16, [6 x i8], i64, i64, i64, i8, i8, [6 x i8], i64, i64, i8, i8, i8, i8, %"struct.std::__1::array", i32, i8, i8, i8, [5 x i8], %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.208", %"class.quic::QuicTime::Delta", %"class.std::__1::unique_ptr.230", %"class.quiche::QuicheCircularDeque.236", %"class.quiche::QuicheCircularDeque.239", %"class.std::__1::vector.242", %"class.absl::optional.249", %"class.quic::QuicConnectionId", %"class.absl::optional.249", %"class.std::__1::list.254", %"class.quic::QuicCoalescedPacket", %"class.quic::QuicConnectionMtuDiscoverer", %"class.quic::QuicNetworkBlackholeDetector", %"class.quic::QuicIdleNetworkDetector", i8, i8, i8, i8, [4 x i8], %"class.std::__1::basic_string", i8, [7 x i8], i64, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPathValidator", %"struct.quic::QuicConnection::PathState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8] }>
%"class.quic::QuicFramerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicBlockedWriterInterface" = type { i32 (...)** }
%"class.quic::QuicPacketCreator::DelegateInterface" = type { i32 (...)** }
%"class.quic::QuicSentPacketManager::NetworkChangeVisitor" = type { i32 (...)** }
%"class.quic::QuicNetworkBlackholeDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicIdleNetworkDetector::Delegate" = type { i32 (...)** }
%"class.quic::QuicPathValidator::SendDelegate" = type { i32 (...)** }
%"class.quic::QuicConnectionIdManagerVisitorInterface" = type { i32 (...)** }
%"class.quic::QuicFramer" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.quic::QuicFramerVisitorInterface"*, i32, %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::ParsedQuicVersion", %"class.std::__1::vector.72", [4 x %"class.std::__1::unique_ptr"], i8, i8, i8, [4 x %"class.std::__1::unique_ptr.82"], i8, i8, %"struct.std::__1::array.88", i8, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", i8, i8, i8, %"class.quic::QuicPacketNumber", i64, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.quic::QuicPacketNumber", %"class.quic::QuicStreamFrameDataProducer"*, i8, i8, i8, i8, i8, i8, i64, i32, i32, i64 }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.quic::QuicEncrypter"* }
%"class.quic::QuicEncrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicCrypter" = type { i32 (...)** }
%"struct.std::__1::array.88" = type { [32 x i8] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.quic::QuicDecrypter"* }
%"class.quic::QuicDecrypter" = type { %"class.quic::QuicCrypter" }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"class.quic::QuicAlarmFactory" = type { i32 (...)** }
%"struct.quic::PerPacketOptions" = type <{ i32 (...)**, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicPacketWriter" = type { i32 (...)** }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicRandom" = type { i32 (...)** }
%"struct.quic::QuicPacketHeader" = type { %"class.quic::QuicConnectionId", i8, %"class.quic::QuicConnectionId", i8, i8, i8, i8, i8, i8, %"struct.quic::ParsedQuicVersion", %"struct.std::__1::array.88"*, %"class.quic::QuicPacketNumber", i8, i8, %"struct.std::__1::array", i8, %"class.absl::string_view", i8, i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.quic::QuicPacketNumber" = type { i64 }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.109" }
%"struct.std::__1::__split_buffer" = type { %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"struct.quic::QuicConnection::UndecryptablePacket"**, %"class.std::__1::__compressed_pair.104" }
%"struct.quic::QuicConnection::UndecryptablePacket" = type <{ %"class.std::__1::unique_ptr.98", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.quic::QuicEncryptedPacket"* }
%"class.quic::QuicEncryptedPacket" = type { %"class.quic::QuicData.base", [7 x i8] }
%"class.quic::QuicData.base" = type <{ i32 (...)**, i8*, i64, i8 }>
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.quic::QuicConnection::UndecryptablePacket"** }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.quiche::QuicheCircularDeque.113" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> >, 3, std::__1::allocator<std::__1::unique_ptr<quic::QuicEncryptedPacket, std::__1::default_delete<quic::QuicEncryptedPacket> > > >::AllocatorAndData" = type { %"class.std::__1::unique_ptr.98"*, i64 }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.std::__1::vector.119"* }
%"class.std::__1::vector.119" = type opaque
%"struct.quic::QuicConnectionStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, float, i32, i32, i64, i64, i64, i64, %"class.quic::QuicTimeAccumulator", i32, i32, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.quic::QuicBandwidth", i64, i64, i64, i64, i64, i32, %"class.quic::QuicTime", %"class.quic::QuicTime", i64, i64, i64, i8, i64, i64, i64, i8, i8, %"class.quic::QuicPacketNumber", i64, i64, i64, i32, i64, i64, i8, i8, i64, i64, i64, i64, i64, i64, i64, i64, %"class.absl::optional.123", %"class.absl::optional.123", %"class.absl::optional.123" }
%"class.quic::QuicTimeAccumulator" = type { %"class.quic::QuicTime::Delta", %"class.quic::QuicTime" }
%"class.quic::QuicBandwidth" = type { i64 }
%"class.absl::optional.123" = type { %"class.absl::optional_internal::optional_data.124" }
%"class.absl::optional_internal::optional_data.124" = type { %"class.absl::optional_internal::optional_data_base.125" }
%"class.absl::optional_internal::optional_data_base.125" = type { %"class.absl::optional_internal::optional_data_dtor_base.126" }
%"class.absl::optional_internal::optional_data_dtor_base.126" = type { i8, %union.anon.127 }
%union.anon.127 = type { %"struct.quic::QuicConnectionStats::TlsServerOperationStats" }
%"struct.quic::QuicConnectionStats::TlsServerOperationStats" = type { i8, %"class.quic::QuicTime::Delta" }
%"class.quic::UberReceivedPacketManager" = type <{ i32 (...)**, [3 x %"class.quic::QuicReceivedPacketManager"], i8, [7 x i8] }>
%"class.quic::QuicReceivedPacketManager" = type { i32 (...)**, %"class.quic::QuicPacketNumber", %"struct.quic::QuicAckFrame", i8, i64, %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", %"struct.quic::QuicConnectionStats"*, i64, i64, i64, float, i8, i8, i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", i8, %"class.quic::QuicPacketNumber", i64 }
%"struct.quic::QuicAckFrame" = type { %"class.quic::QuicPacketNumber", %"class.quic::QuicTime::Delta", %"class.std::__1::vector", %"class.quic::PacketNumberQueue", i8, i64, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.quic::PacketNumberQueue" = type { %"class.quic::QuicIntervalSet" }
%"class.quic::QuicIntervalSet" = type { %"class.absl::btree_set" }
%"class.absl::btree_set" = type { %"class.absl::container_internal::btree_set_container" }
%"class.absl::container_internal::btree_set_container" = type { %"class.absl::container_internal::btree_container" }
%"class.absl::container_internal::btree_container" = type { %"class.absl::container_internal::btree" }
%"class.absl::container_internal::btree" = type { %"class.absl::container_internal::CompressedTuple", %"class.absl::container_internal::btree_node"*, i64 }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.21" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.21" = type { %"class.absl::container_internal::btree_node"* }
%"class.absl::container_internal::btree_node" = type { i8 }
%"class.quic::QuicOneBlockArena" = type { [1056 x i8], i32, [4 x i8] }
%"class.quic::QuicArenaScopedPtr" = type { i8* }
%"class.quic::QuicConnectionDebugVisitor" = type { %"class.quic::QuicSentPacketManager::DebugDelegate" }
%"class.quic::QuicSentPacketManager::DebugDelegate" = type { i32 (...)** }
%"class.quic::QuicPacketCreator" = type <{ %"class.quic::QuicPacketCreator::DelegateInterface"*, %"class.quic::QuicPacketCreator::DebugDelegate"*, %"class.quic::QuicFramer"*, %"class.quic::QuicRandom"*, i8, i8, %"struct.std::__1::array.88", [6 x i8], i64, i64, i8, [7 x i8], %"class.std::__1::vector.132", i64, %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.quic::SerializedPacket", %"class.std::__1::basic_string", i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicPacketNumber", i64, i64, i8, [7 x i8] }>
%"class.quic::QuicPacketCreator::DebugDelegate" = type { i32 (...)** }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"*, %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.quic::QuicFrame"* }
%"struct.quic::SerializedPacket" = type <{ i8*, i16, [6 x i8], %"class.std::__1::function", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, i8, [3 x i8], %"class.quic::QuicPacketNumber", i8, i8, i8, i8, %"class.quic::QuicSocketAddress", [4 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i8*)* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.quic::QuicTime" = type { i64 }
%"class.quic::QuicSentPacketManager" = type <{ i32 (...)**, %"class.quic::QuicUnackedPacketMap", %"class.quic::QuicClock"*, %"class.quic::QuicRandom"*, %"struct.quic::QuicConnectionStats"*, %"class.quic::QuicSentPacketManager::DebugDelegate"*, %"class.quic::QuicSentPacketManager::NetworkChangeVisitor"*, i64, %"class.quic::RttStats", %"class.std::__1::unique_ptr.91", %"class.quic::LossDetectionInterface"*, %"class.quic::UberLossAlgorithm", %"class.quic::QuicPacketNumber", i64, i64, i64, i64, i64, i64, i8, i8, i8, i8, [4 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.std::__1::vector.156", %"class.std::__1::vector.163", %"class.quic::QuicPacketNumber", i16, [6 x i8], %"class.quic::PacingSender", i8, [7 x i8], %"class.quic::QuicSustainedBandwidthRecorder", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i8, [7 x i8], %"class.quiche::QuicheCircularDeque.170", %"struct.quic::QuicAckFrame", i8, [7 x i8], %"class.std::__1::reverse_iterator", i8, [7 x i8], i64, i64, i8, i8, i8, [5 x i8], i64, i32, [4 x i8], i64, i8, i8, i8, i8, float, i8, [3 x i8], float, i32, i8, [3 x i8] }>
%"class.quic::QuicUnackedPacketMap" = type <{ i8, [7 x i8], %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber", [3 x %"class.quic::QuicPacketNumber"], %"class.quiche::QuicheCircularDeque.137", %"class.quic::QuicPacketNumber", i64, [3 x i64], i64, %"class.quic::QuicTime", [3 x %"class.quic::QuicTime"], %"class.quic::QuicTime", %"struct.quic::QuicStreamFrame", %"class.quic::SessionNotifierInterface"*, i8, i8, [6 x i8] }>
%"class.quiche::QuicheCircularDeque.137" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicTransmissionInfo, 3, std::__1::allocator<quic::QuicTransmissionInfo> >::AllocatorAndData" = type { %"struct.quic::QuicTransmissionInfo"*, i64 }
%"struct.quic::QuicTransmissionInfo" = type { %"class.std::__1::vector.132", %"class.quic::QuicTime", i16, i8, i8, i8, i8, i8, i8, %"class.quic::QuicPacketNumber", %"class.quic::QuicPacketNumber" }
%"class.quic::RttStats" = type <{ %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", %"struct.quic::RttStats::StandardDeviationCaculator", i8, [7 x i8], %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", i8, [7 x i8] }>
%"struct.quic::RttStats::StandardDeviationCaculator" = type { i8, double }
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.quic::SendAlgorithmInterface"* }
%"class.quic::SendAlgorithmInterface" = type { i32 (...)** }
%"class.quic::LossDetectionInterface" = type { i32 (...)** }
%"class.quic::UberLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", [3 x %"class.quic::GeneralLossAlgorithm"], %"class.std::__1::unique_ptr.140", %"struct.quic::LossDetectionParameters", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.quic::GeneralLossAlgorithm" = type <{ %"class.quic::LossDetectionInterface", %"class.quic::LossDetectionInterface"*, %"class.quic::QuicTime", i32, [4 x i8], i64, i8, i8, i8, [5 x i8], %"class.quic::QuicPacketNumber", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.quic::LossDetectionTunerInterface"* }
%"class.quic::LossDetectionTunerInterface" = type { i32 (...)** }
%"struct.quic::LossDetectionParameters" = type { %"class.absl::optional.146", %"class.absl::optional.151" }
%"class.absl::optional.146" = type { %"class.absl::optional_internal::optional_data.147" }
%"class.absl::optional_internal::optional_data.147" = type { %"class.absl::optional_internal::optional_data_base.148" }
%"class.absl::optional_internal::optional_data_base.148" = type { %"class.absl::optional_internal::optional_data_dtor_base.149" }
%"class.absl::optional_internal::optional_data_dtor_base.149" = type { i8, %union.anon.150 }
%union.anon.150 = type { i32 }
%"class.absl::optional.151" = type { %"class.absl::optional_internal::optional_data.152" }
%"class.absl::optional_internal::optional_data.152" = type { %"class.absl::optional_internal::optional_data_base.153" }
%"class.absl::optional_internal::optional_data_base.153" = type { %"class.absl::optional_internal::optional_data_dtor_base.154" }
%"class.absl::optional_internal::optional_data_dtor_base.154" = type { i8, %union.anon.155 }
%union.anon.155 = type { i64 }
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { %"struct.quic::AckedPacket"*, %"struct.quic::AckedPacket"*, %"class.std::__1::__compressed_pair.158" }
%"struct.quic::AckedPacket" = type { %"class.quic::QuicPacketNumber", i16, %"class.quic::QuicTime" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.quic::AckedPacket"* }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"struct.quic::LostPacket"*, %"struct.quic::LostPacket"*, %"class.std::__1::__compressed_pair.165" }
%"struct.quic::LostPacket" = type <{ %"class.quic::QuicPacketNumber", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.quic::LostPacket"* }
%"class.quic::PacingSender" = type <{ %"class.quic::SendAlgorithmInterface"*, %"class.quic::QuicBandwidth", i32, [4 x i8], %"class.quic::QuicTime", i32, i32, %"class.quic::QuicTime::Delta", i8, [7 x i8] }>
%"class.quic::QuicSustainedBandwidthRecorder" = type { i8, i8, i8, %"class.quic::QuicBandwidth", %"class.quic::QuicBandwidth", i64, %"class.quic::QuicTime" }
%"class.quiche::QuicheCircularDeque.170" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<quic::QuicTime::Delta, unsigned long>, 3, std::__1::allocator<std::__1::pair<quic::QuicTime::Delta, unsigned long> > >::AllocatorAndData" = type { %"struct.std::__1::pair.173"*, i64 }
%"struct.std::__1::pair.173" = type opaque
%"class.std::__1::reverse_iterator" = type { %"struct.absl::container_internal::btree_iterator", %"struct.absl::container_internal::btree_iterator" }
%"struct.absl::container_internal::btree_iterator" = type <{ %"class.absl::container_internal::btree_node"*, i32, [4 x i8] }>
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon.89, i32 }
%union.anon.89 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.90 }
%union.anon.90 = type { [4 x i32] }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.quic::QuicPeerIssuedConnectionIdManager"* }
%"class.quic::QuicPeerIssuedConnectionIdManager" = type { i64, %"class.quic::QuicClock"*, %"class.std::__1::unique_ptr.177", %"class.std::__1::vector.184", %"class.std::__1::vector.184", %"class.std::__1::vector.184", %"class.quic::QuicIntervalSet.191", i64 }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.quic::QuicConnectionIdData"*, %"struct.quic::QuicConnectionIdData"*, %"class.std::__1::__compressed_pair.186" }
%"struct.quic::QuicConnectionIdData" = type { %"class.quic::QuicConnectionId", i64, %"struct.std::__1::array" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.quic::QuicConnectionIdData"* }
%"class.quic::QuicIntervalSet.191" = type { %"class.absl::btree_set.192" }
%"class.absl::btree_set.192" = type { %"class.absl::container_internal::btree_set_container.193" }
%"class.absl::container_internal::btree_set_container.193" = type { %"class.absl::container_internal::btree_container.194" }
%"class.absl::container_internal::btree_container.194" = type { %"class.absl::container_internal::btree.195" }
%"class.absl::container_internal::btree.195" = type { %"class.absl::container_internal::CompressedTuple.196", %"class.absl::container_internal::btree_node.203"*, i64 }
%"class.absl::container_internal::CompressedTuple.196" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.197" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.197" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.202" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.202" = type { %"class.absl::container_internal::btree_node.203"* }
%"class.absl::container_internal::btree_node.203" = type { i8 }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.quic::QuicSelfIssuedConnectionIdManager"* }
%"class.quic::QuicSelfIssuedConnectionIdManager" = type { i32 (...)**, i64, %"class.quic::QuicClock"*, %"class.quic::QuicConnectionIdManagerVisitorInterface"*, %"class.std::__1::vector.211", %"class.std::__1::vector.219", %"class.std::__1::unique_ptr.177", %"class.quic::QuicConnectionId", i64, i64 }
%"class.std::__1::vector.211" = type { %"class.std::__1::__vector_base.212" }
%"class.std::__1::__vector_base.212" = type { %"struct.std::__1::pair.213"*, %"struct.std::__1::pair.213"*, %"class.std::__1::__compressed_pair.214" }
%"struct.std::__1::pair.213" = type opaque
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"struct.std::__1::pair.213"* }
%"class.std::__1::vector.219" = type { %"class.std::__1::__vector_base.220" }
%"class.std::__1::__vector_base.220" = type { %"struct.std::__1::pair.221"*, %"struct.std::__1::pair.221"*, %"class.std::__1::__compressed_pair.222" }
%"struct.std::__1::pair.221" = type opaque
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.std::__1::pair.221"* }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"struct.std::__1::array.32"* }
%"struct.std::__1::array.32" = type { [8 x i8] }
%"class.quiche::QuicheCircularDeque.236" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::array<unsigned char, 8>, 3, std::__1::allocator<std::__1::array<unsigned char, 8> > >::AllocatorAndData" = type { %"struct.std::__1::array.32"*, i64 }
%"class.quiche::QuicheCircularDeque.239" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicConnection::PendingPathChallenge, 3, std::__1::allocator<quic::QuicConnection::PendingPathChallenge> >::AllocatorAndData" = type { %"struct.quic::QuicConnection::PendingPathChallenge"*, i64 }
%"struct.quic::QuicConnection::PendingPathChallenge" = type { %"struct.std::__1::array.32", %"class.quic::QuicSocketAddress" }
%"class.std::__1::vector.242" = type { %"class.std::__1::__vector_base.243" }
%"class.std::__1::__vector_base.243" = type { %"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"*, %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.quic::QuicConnectionId"* }
%"class.quic::QuicConnectionId" = type { %union.anon.29 }
%union.anon.29 = type { %struct.anon.31 }
%struct.anon.31 = type { i8, i8* }
%"class.absl::optional.249" = type { %"class.absl::optional_internal::optional_data.250" }
%"class.absl::optional_internal::optional_data.250" = type { %"class.absl::optional_internal::optional_data_base.251" }
%"class.absl::optional_internal::optional_data_base.251" = type { %"class.absl::optional_internal::optional_data_dtor_base.252" }
%"class.absl::optional_internal::optional_data_dtor_base.252" = type { i8, %union.anon.253 }
%union.anon.253 = type { %"class.quic::QuicConnectionId" }
%"class.std::__1::list.254" = type { %"class.std::__1::__list_imp.255" }
%"class.std::__1::__list_imp.255" = type { %"struct.std::__1::__list_node_base.256", %"class.std::__1::__compressed_pair.257" }
%"struct.std::__1::__list_node_base.256" = type { %"struct.std::__1::__list_node_base.256"*, %"struct.std::__1::__list_node_base.256"* }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.quic::QuicCoalescedPacket" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", i16, i16, [4 x %"class.std::__1::basic_string"], [4 x i8], %"class.std::__1::unique_ptr.261" }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.quic::SerializedPacket"* }
%"class.quic::QuicConnectionMtuDiscoverer" = type { i16, i16, i16, i16, i64, %"class.quic::QuicPacketNumber" }
%"class.quic::QuicNetworkBlackholeDetector" = type { %"class.quic::QuicNetworkBlackholeDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicArenaScopedPtr" }
%"class.quic::QuicIdleNetworkDetector" = type <{ %"class.quic::QuicIdleNetworkDetector::Delegate"*, %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %"class.quic::QuicTime", %"class.quic::QuicTime::Delta", %"class.quic::QuicArenaScopedPtr", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.24 }
%union.anon.24 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.quic::QuicPathValidator" = type { %"class.std::__1::vector.267", %"class.quic::QuicPathValidator::SendDelegate"*, %"class.quic::QuicRandom"*, %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.277", %"class.quic::QuicArenaScopedPtr", i64 }
%"class.std::__1::vector.267" = type { %"class.std::__1::__vector_base.268" }
%"class.std::__1::__vector_base.268" = type { %"struct.std::__1::array.32"*, %"struct.std::__1::array.32"*, %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.quic::QuicPathValidationContext"* }
%"class.quic::QuicPathValidationContext" = type { i32 (...)**, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.quic::QuicPathValidator::ResultDelegate"* }
%"class.quic::QuicPathValidator::ResultDelegate" = type { i32 (...)** }
%"struct.quic::QuicConnection::PathState" = type { %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress", %"class.quic::QuicConnectionId", %"class.quic::QuicConnectionId", %"struct.std::__1::array", i8, i8, i64, i64, %"class.std::__1::unique_ptr.91", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, [7 x i8], %union.anon.97 }
%union.anon.97 = type { %"class.quic::RttStats" }
%"class.quic::QuicSession::Visitor" = type { i32 (...)** }
%"class.quic::QuicWriteBlockedList" = type { %"class.http2::PriorityWriteScheduler", [8 x i32], [8 x i64], i8, %"class.quic::QuicWriteBlockedList::StaticStreamCollection" }
%"class.http2::PriorityWriteScheduler" = type <{ %"class.http2::WriteScheduler", i64, [8 x %"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo"], %"class.std::__1::unordered_map", i32, [4 x i8] }>
%"class.http2::WriteScheduler" = type { i32 (...)** }
%"struct.http2::PriorityWriteScheduler<unsigned int>::PriorityInfo" = type { %"class.std::__1::deque.283", i64 }
%"class.std::__1::deque.283" = type { %"class.std::__1::__deque_base.284" }
%"class.std::__1::__deque_base.284" = type { %"struct.std::__1::__split_buffer.285", i64, %"class.std::__1::__compressed_pair.291" }
%"struct.std::__1::__split_buffer.285" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"***, %"class.std::__1::__compressed_pair.286" }
%"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo" = type { i8, i32, i8 }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"struct.http2::PriorityWriteScheduler<unsigned int>::StreamInfo"*** }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.295", %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.308", %"class.std::__1::__compressed_pair.311", [4 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297", %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { float }
%"class.quic::QuicWriteBlockedList::StaticStreamCollection" = type { i64, %"class.std::__1::vector.314" }
%"class.std::__1::vector.314" = type { %"class.std::__1::__vector_base.315" }
%"class.std::__1::__vector_base.315" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"*, %"class.std::__1::__compressed_pair.316" }
%"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair" = type { i32, i8 }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.quic::QuicWriteBlockedList::StaticStreamCollection::StreamIdBlockedPair"* }
%"class.std::__1::vector.321" = type { %"class.std::__1::__vector_base.322" }
%"class.std::__1::__vector_base.322" = type { %"class.std::__1::unique_ptr.323"*, %"class.std::__1::unique_ptr.323"*, %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.quic::QuicStream"* }
%"class.quic::QuicStream" = type <{ %"class.quic::QuicStreamSequencer::StreamInterface", %"class.quic::QuicStreamSequencer", i32, [4 x i8], %"class.quic::QuicSession"*, %"class.quic::StreamDelegateInterface"*, %"class.spdy::StreamPrecedence", i64, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.absl::optional.333", %"class.quic::QuicFlowController"*, i8, [7 x i8], i64, i8, [7 x i8], %"class.quic::QuicStreamSendBuffer", i64, i8, [7 x i8], %"class.quic::QuicTime", i8, [3 x i8], i32, %"class.quic::QuicTime", i8, [7 x i8] }>
%"class.quic::QuicStreamSequencer::StreamInterface" = type { i32 (...)** }
%"class.quic::QuicStreamSequencer" = type <{ i32 (...)**, %"class.quic::QuicStreamSequencer::StreamInterface"*, %"class.quic::QuicStreamSequencerBuffer", i64, i64, i8, [3 x i8], i32, i32, i8, i8, [2 x i8] }>
%"class.quic::QuicStreamSequencerBuffer" = type { i64, i64, i64, i64, i8, %"class.std::__1::unique_ptr.326", i64, %"class.quic::QuicIntervalSet.191" }
%"class.std::__1::unique_ptr.326" = type { %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"struct.quic::QuicStreamSequencerBuffer::BufferBlock"** }
%"struct.quic::QuicStreamSequencerBuffer::BufferBlock" = type { [8192 x i8] }
%"class.spdy::StreamPrecedence" = type { i8, %union.anon.332 }
%union.anon.332 = type { %"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" }
%"struct.spdy::StreamPrecedence<unsigned int>::Http2StreamDependency" = type { i32, i32, i8 }
%"class.absl::optional.333" = type { %"class.absl::optional_internal::optional_data.334" }
%"class.absl::optional_internal::optional_data.334" = type { %"class.absl::optional_internal::optional_data_base.335" }
%"class.absl::optional_internal::optional_data_base.335" = type { %"class.absl::optional_internal::optional_data_dtor_base.336" }
%"class.absl::optional_internal::optional_data_dtor_base.336" = type { i8, %union.anon.337 }
%union.anon.337 = type { %"class.quic::QuicFlowController" }
%"class.quic::QuicStreamSendBuffer" = type <{ i64, %"class.quic::QuicIntervalDeque", i64, %"class.quic::QuicBufferAllocator"*, i64, i64, %"class.quic::QuicIntervalSet.191", %"class.quic::QuicIntervalSet.191", i32, [4 x i8] }>
%"class.quic::QuicIntervalDeque" = type { %"class.quiche::QuicheCircularDeque.340", %"class.absl::optional.151" }
%"class.quiche::QuicheCircularDeque.340" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::BufferedSlice, 3, std::__1::allocator<quic::BufferedSlice> >::AllocatorAndData" = type { %"struct.quic::BufferedSlice"*, i64 }
%"struct.quic::BufferedSlice" = type { %"class.quic::QuicMemSlice", i64 }
%"class.quic::QuicMemSlice" = type { %"class.quic::QuicMemSliceImpl" }
%"class.quic::QuicMemSliceImpl" = type { %class.scoped_refptr, i64 }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.quic::QuicBufferAllocator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.std::__1::unique_ptr.323"* }
%"class.quic::QuicConfig" = type { i8, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime::Delta", i64, %"class.quic::QuicFixedTagVector", %"class.quic::QuicFixedTagVector", %"class.quic::QuicTime::Delta", %"class.absl::optional.358", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint32", i8, i8, [6 x i8], %"class.quic::QuicFixedSocketAddress", %"class.quic::QuicFixedSocketAddress", %"class.absl::optional.363", %"class.quic::QuicFixedStatelessResetToken", %"class.std::__1::vector.351", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint32", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.quic::QuicFixedUint62", %"class.absl::optional.249", %"class.absl::optional.249", %"class.absl::optional.249", %"class.absl::optional.249", %"class.absl::optional.249", %"class.absl::optional.249", %"class.absl::flat_hash_map.369", %"class.absl::flat_hash_map.369" }
%"class.quic::QuicFixedTagVector" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"class.std::__1::vector.351", %"class.std::__1::vector.351" }
%"class.quic::QuicConfigValue.base" = type <{ i32 (...)**, i32, i8 }>
%"class.absl::optional.358" = type { %"class.absl::optional_internal::optional_data.359" }
%"class.absl::optional_internal::optional_data.359" = type { %"class.absl::optional_internal::optional_data_base.360" }
%"class.absl::optional_internal::optional_data_base.360" = type { %"class.absl::optional_internal::optional_data_dtor_base.361" }
%"class.absl::optional_internal::optional_data_dtor_base.361" = type { i8, %union.anon.362 }
%union.anon.362 = type { %"class.quic::QuicTime::Delta" }
%"class.quic::QuicFixedSocketAddress" = type { %"class.quic::QuicConfigValue.base", i8, i8, i8, %"class.quic::QuicSocketAddress", %"class.quic::QuicSocketAddress" }
%"class.absl::optional.363" = type { %"class.absl::optional_internal::optional_data.364" }
%"class.absl::optional_internal::optional_data.364" = type { %"class.absl::optional_internal::optional_data_base.365" }
%"class.absl::optional_internal::optional_data_base.365" = type { %"class.absl::optional_internal::optional_data_dtor_base.366" }
%"class.absl::optional_internal::optional_data_dtor_base.366" = type { i8, %union.anon.367 }
%union.anon.367 = type { %"struct.std::__1::pair.368" }
%"struct.std::__1::pair.368" = type { %"class.quic::QuicConnectionId", %"struct.std::__1::array" }
%"class.quic::QuicFixedStatelessResetToken" = type { %"class.quic::QuicConfigValue.base", i8, i8, %"struct.std::__1::array", %"struct.std::__1::array", i8 }
%"class.std::__1::vector.351" = type { %"class.std::__1::__vector_base.352" }
%"class.std::__1::__vector_base.352" = type { i32*, i32*, %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { i32* }
%"class.quic::QuicFixedUint32" = type { %"class.quic::QuicConfigValue.base", i8, i8, i32, i32 }
%"class.quic::QuicFixedUint62" = type { %"class.quic::QuicConfigValue.base", i8, i8, i64, i64 }
%"class.absl::flat_hash_map.369" = type { %"class.absl::container_internal::raw_hash_map.370" }
%"class.absl::container_internal::raw_hash_map.370" = type { %"class.absl::container_internal::raw_hash_set.371" }
%"class.absl::container_internal::raw_hash_set.371" = type { i8*, %"union.absl::container_internal::map_slot_type.372"*, i64, i64, %"class.absl::container_internal::CompressedTuple.373" }
%"union.absl::container_internal::map_slot_type.372" = type opaque
%"class.absl::container_internal::CompressedTuple.373" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.374" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.374" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.44" }
%"class.absl::flat_hash_map.384" = type { %"class.absl::container_internal::raw_hash_map.385" }
%"class.absl::container_internal::raw_hash_map.385" = type { %"class.absl::container_internal::raw_hash_set.386" }
%"class.absl::container_internal::raw_hash_set.386" = type { i8*, %"union.absl::container_internal::map_slot_type.387"*, i64, i64, %"class.absl::container_internal::CompressedTuple.388" }
%"union.absl::container_internal::map_slot_type.387" = type opaque
%"class.absl::container_internal::CompressedTuple.388" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.389" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.389" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.44" }
%"class.absl::flat_hash_map.393" = type { %"class.absl::container_internal::raw_hash_map.394" }
%"class.absl::container_internal::raw_hash_map.394" = type { %"class.absl::container_internal::raw_hash_set.395" }
%"class.absl::container_internal::raw_hash_set.395" = type { i8*, %"union.absl::container_internal::map_slot_type.396"*, i64, i64, %"class.absl::container_internal::CompressedTuple.397" }
%"union.absl::container_internal::map_slot_type.396" = type opaque
%"class.absl::container_internal::CompressedTuple.397" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.398" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.398" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.44" }
%"class.quic::LegacyQuicStreamIdManager" = type { i8, i32, i64, i64, i32, %"class.absl::flat_hash_set", i32, i64, i64 }
%"class.absl::flat_hash_set" = type { %"class.absl::container_internal::raw_hash_set.402" }
%"class.absl::container_internal::raw_hash_set.402" = type { i8*, i32*, i64, i64, %"class.absl::container_internal::CompressedTuple.403" }
%"class.absl::container_internal::CompressedTuple.403" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.404" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.404" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.44" }
%"class.quic::UberQuicStreamIdManager" = type { %"struct.quic::ParsedQuicVersion", %"class.quic::QuicStreamIdManager", %"class.quic::QuicStreamIdManager" }
%"class.quic::QuicStreamIdManager" = type <{ %"class.quic::QuicStreamIdManager::DelegateInterface"*, i8, i8, [2 x i8], %"struct.quic::ParsedQuicVersion", i32, i32, i32, i32, i32, i32, i32, %"class.absl::flat_hash_set", i32, [4 x i8] }>
%"struct.quic::QuicConnectionCloseFrame" = type { i32, i64, i32, %"class.std::__1::basic_string", i64 }
%"class.quic::QuicFlowController" = type { %"class.quic::QuicFlowControllerInterface", %"class.quic::QuicSession"*, %"class.quic::QuicConnection"*, i32, i8, i8, i64, i64, i64, i64, i64, i64, i64, i8, %"class.quic::QuicFlowControllerInterface"*, i64, %"class.quic::QuicTime" }
%"class.quic::QuicFlowControllerInterface" = type { i32 (...)** }
%"class.quic::QuicDatagramQueue" = type { %"class.quic::QuicSession"*, %"class.quic::QuicClock"*, %"class.quic::QuicTime::Delta", %"class.quiche::QuicheCircularDeque.406", %"class.std::__1::unique_ptr.409" }
%"class.quiche::QuicheCircularDeque.406" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<quic::QuicDatagramQueue::Datagram, 3, std::__1::allocator<quic::QuicDatagramQueue::Datagram> >::AllocatorAndData" = type { %"struct.quic::QuicDatagramQueue::Datagram"*, i64 }
%"struct.quic::QuicDatagramQueue::Datagram" = type { %"class.quic::QuicMemSlice", %"class.quic::QuicTime" }
%"class.std::__1::unique_ptr.409" = type { %"class.std::__1::__compressed_pair.410" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"class.quic::QuicDatagramQueue::Observer"* }
%"class.quic::QuicDatagramQueue::Observer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.quic::QuicAlarm"* }
%"class.quic::QuicAlarm" = type { i32 (...)**, %"class.quic::QuicArenaScopedPtr.180", %"class.quic::QuicTime" }
%"class.quic::QuicArenaScopedPtr.180" = type { i8* }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.absl::optional.415" = type { %"class.absl::optional_internal::optional_data.416" }
%"class.absl::optional_internal::optional_data.416" = type { %"class.absl::optional_internal::optional_data_base.417" }
%"class.absl::optional_internal::optional_data_base.417" = type { %"class.absl::optional_internal::optional_data_dtor_base.418" }
%"class.absl::optional_internal::optional_data_dtor_base.418" = type { i8, %union.anon.419 }
%union.anon.419 = type { %"class.std::__1::basic_string" }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.25 }
%struct.anon.25 = type { i8 }
%"struct.quic::QuicRstStreamFrame" = type { i32, i32, i32, i64, i64 }
%"struct.quic::QuicGoAwayFrame" = type { i32, i32, i32, %"class.std::__1::basic_string" }
%"struct.quic::QuicWindowUpdateFrame" = type { i32, i32, i64 }
%"struct.quic::QuicBlockedFrame" = type { i32, i32, i64 }
%"struct.quic::QuicStreamsBlockedFrame" = type <{ i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%"struct.quic::QuicMaxStreamsFrame" = type <{ i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%"struct.quic::QuicStopSendingFrame" = type { i32, i32, i32, i64 }
%"struct.quic::QuicHandshakeDoneFrame" = type { i8, i32 }
%"struct.quic::QuicAckFrequencyFrame" = type { i32, i8, i64, i64, %"class.quic::QuicTime::Delta" }
%"struct.quic::QuicNewConnectionIdFrame" = type { i32, %"class.quic::QuicConnectionId", i64, %"struct.std::__1::array", i64 }
%"struct.quic::QuicRetireConnectionIdFrame" = type { i32, i64 }
%"struct.quic::QuicNewTokenFrame" = type { i32, %"class.std::__1::basic_string" }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::pair.455" = type <{ %"class.absl::container_internal::raw_hash_set<absl::container_internal::NodeHashMapPolicy<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, bool>, void *> >, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, bool>, void *> > > >::iterator", i8, [7 x i8] }>
%"class.absl::container_internal::raw_hash_set<absl::container_internal::NodeHashMapPolicy<unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, bool>, void *> >, absl::hash_internal::Hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::__list_iterator<std::__1::pair<unsigned int, bool>, void *> > > >::iterator" = type { i8*, %union.anon.447 }
%union.anon.447 = type { %"struct.std::__1::pair.41"** }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.std::__1::pair.420" }
%"struct.std::__1::pair.420" = type <{ i32, i8, [3 x i8] }>
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEEixIjS3_EEDTclsrT0_5valueclL_ZNS7_9addressofISD_EEPT_RSJ_EclL_ZNS7_7declvalIRSD_EEDTclsr3std3__1E9__declvalISJ_ELi0EEEvEEEEERSC_ = comdat any

$_ZN6quiche19QuicheLinkedHashMapIjbN4absl13hash_internal4HashIjEENSt3__18equal_toIjEEE5eraseERKj = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEE5eraseIjEEmRSC_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN6quiche19QuicheCircularDequeIN4quic9QuicFrameELm3ENSt3__19allocatorIS2_EEE8RelocateEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEE27drop_deletes_without_resizeEv = comdat any

$_ZN4absl18container_internal12raw_hash_mapINS0_17NodeHashMapPolicyIjNSt3__115__list_iteratorINS3_4pairIjbEEPvEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS5_IKjS8_EEEEE16try_emplace_implIRSG_JEEENS5_INS0_12raw_hash_setIS9_SC_SE_SI_E8iteratorEbEEOT_DpOT0_ = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIjNSt3__115__list_iteratorINS3_4pairIjbEEPvEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS5_IKjS8_EEEEE14prepare_insertEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIjNSt3__115__list_iteratorINS3_4pairIjbEEPvEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS5_IKjS8_EEEEE6resizeEm = comdat any

$_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIjNSt3__115__list_iteratorINS3_4pairIjbEEPvEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS5_IKjS8_EEEEE27drop_deletes_without_resizeEv = comdat any

$_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = comdat any

@.str = private unnamed_addr constant [11 x i8] c"More than \00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"buffered control frames, least_unacked: \00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c", least_unsent_: \00", align 1
@.str.3 = private unnamed_addr constant [73 x i8] c"../../net/third_party/quiche/src/quic/core/quic_control_frame_manager.cc\00", align 1
@.str.4 = private unnamed_addr constant [65 x i8] c"Send or retransmit a control frame with invalid control frame id\00", align 1
@.str.5 = private unnamed_addr constant [46 x i8] c"Try to send control frames out of order, id: \00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c" least_unsent: \00", align 1
@.str.7 = private unnamed_addr constant [40 x i8] c"Try to send control frames out of order\00", align 1
@.str.8 = private unnamed_addr constant [41 x i8] c"Try to mark unsent control frame as lost\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"least_unacked_: \00", align 1
@.str.10 = private unnamed_addr constant [67 x i8] c"Unexpected call to NextPendingRetransmission() with empty pending \00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"retransmission list.\00", align 1
@.str.12 = private unnamed_addr constant [39 x i8] c"Try to retransmit unsent control frame\00", align 1
@.str.13 = private unnamed_addr constant [32 x i8] c"Try to ack unsent control frame\00", align 1
@_ZZN4absl18container_internal10EmptyGroupEvE11empty_group = linkonce_odr hidden constant [16 x i8] c"\FF\80\80\80\80\80\80\80\80\80\80\80\80\80\80\80", comdat, align 16
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN4absl13hash_internal15MixingHashState5kSeedE = external local_unnamed_addr constant i8*, align 8

@_ZN4quic23QuicControlFrameManagerC1EPNS_11QuicSessionE = hidden unnamed_addr alias void (%"class.quic::QuicControlFrameManager"*, %"class.quic::QuicSession"*), void (%"class.quic::QuicControlFrameManager"*, %"class.quic::QuicSession"*)* @_ZN4quic23QuicControlFrameManagerC2EPNS_11QuicSessionE
@_ZN4quic23QuicControlFrameManagerD1Ev = hidden unnamed_addr alias void (%"class.quic::QuicControlFrameManager"*), void (%"class.quic::QuicControlFrameManager"*)* @_ZN4quic23QuicControlFrameManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManagerC2EPNS_11QuicSessionE(%"class.quic::QuicControlFrameManager"*, %"class.quic::QuicSession"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 2
  %4 = bitcast %"class.quic::QuicControlFrameManager"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 36, i1 false)
  store i32 1, i32* %3, align 4
  %5 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 3
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %6, align 8
  %7 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair.41"*** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #10
  %9 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %9, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %9, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %10, %"struct.std::__1::__list_node_base"** %11, align 8
  %12 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %10, %"struct.std::__1::__list_node_base"** %12, align 8
  %13 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 5
  %15 = icmp eq %"class.quic::QuicSession"* %1, null
  %16 = getelementptr inbounds %"class.quic::QuicSession", %"class.quic::QuicSession"* %1, i64 0, i32 6
  %17 = select i1 %15, %"class.quic::QuicControlFrameManager::DelegateInterface"* null, %"class.quic::QuicControlFrameManager::DelegateInterface"* %16
  store %"class.quic::QuicControlFrameManager::DelegateInterface"* %17, %"class.quic::QuicControlFrameManager::DelegateInterface"** %14, align 8
  %18 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %18, align 8
  %19 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %20 = bitcast %"union.absl::container_internal::map_slot_type"** %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManagerD2Ev(%"class.quic::QuicControlFrameManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %3, %5
  br i1 %6, label %22, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 0
  %9 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 1
  br label %10

10:                                               ; preds = %7, %10
  %11 = phi i64 [ %3, %7 ], [ %19, %10 ]
  %12 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %8, align 8
  %13 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %12, i64 %11
  tail call void @_ZN4quic11DeleteFrameEPNS_9QuicFrameE(%"struct.quic::QuicFrame"* %13) #10
  %14 = load i64, i64* %2, align 8
  %15 = load i64, i64* %9, align 8
  %16 = add i64 %15, -1
  %17 = icmp eq i64 %16, %14
  %18 = add i64 %14, 1
  %19 = select i1 %17, i64 0, i64 %18
  store i64 %19, i64* %2, align 8
  %20 = load i64, i64* %4, align 8
  %21 = icmp eq i64 %19, %20
  br i1 %21, label %22, label %10

22:                                               ; preds = %10, %1
  %23 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void @_ZdlPv(i8* %29) #13
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %28, align 8
  %30 = bitcast %"union.absl::container_internal::map_slot_type"** %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false) #10
  br label %31

31:                                               ; preds = %22, %26
  %32 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1, i32 0
  %33 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %60, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  %38 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %32, i64 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %32, i64 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %41, i64 0, i32 1
  %43 = bitcast %"struct.std::__1::__list_node_base"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %38, i64 0, i32 0
  %46 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %46, i64 0, i32 1
  %48 = bitcast %"struct.std::__1::__list_node_base"** %47 to i64*
  store i64 %44, i64* %48, align 8
  %49 = bitcast %"struct.std::__1::__list_node_base"* %38 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"struct.std::__1::__list_node_base"** %42 to i64**
  %52 = load i64*, i64** %51, align 8
  store i64 %50, i64* %52, align 8
  store i64 0, i64* %33, align 8
  %53 = icmp eq %"struct.std::__1::__list_node_base"* %38, %39
  br i1 %53, label %60, label %54

54:                                               ; preds = %36, %54
  %55 = phi %"struct.std::__1::__list_node_base"* [ %57, %54 ], [ %38, %36 ]
  %56 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %55, i64 0, i32 1
  %57 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %56, align 8
  %58 = bitcast %"struct.std::__1::__list_node_base"* %55 to i8*
  tail call void @_ZdlPv(i8* %58) #13
  %59 = icmp eq %"struct.std::__1::__list_node_base"* %57, %39
  br i1 %59, label %60, label %54

60:                                               ; preds = %54, %36, %31
  %61 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %87, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  br label %70

67:                                               ; preds = %83
  %68 = load i8*, i8** %65, align 8
  tail call void @_ZdlPv(i8* %68) #13
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZZN4absl18container_internal10EmptyGroupEvE11empty_group, i64 0, i64 0), i8** %65, align 8
  %69 = bitcast %"struct.std::__1::pair.41"*** %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 32, i1 false) #10
  br label %87

70:                                               ; preds = %83, %64
  %71 = phi i64 [ %62, %64 ], [ %84, %83 ]
  %72 = phi i64 [ 0, %64 ], [ %85, %83 ]
  %73 = load i8*, i8** %65, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 %72
  %75 = load i8, i8* %74, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %77, label %83

77:                                               ; preds = %70
  %78 = load %"struct.std::__1::pair.41"**, %"struct.std::__1::pair.41"*** %66, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %78, i64 %72
  %80 = bitcast %"struct.std::__1::pair.41"** %79 to i8**
  %81 = load i8*, i8** %80, align 8
  tail call void @_ZdlPv(i8* %81) #13
  %82 = load i64, i64* %61, align 8
  br label %83

83:                                               ; preds = %77, %70
  %84 = phi i64 [ %71, %70 ], [ %82, %77 ]
  %85 = add i64 %72, 1
  %86 = icmp eq i64 %85, %84
  br i1 %86, label %67, label %70

87:                                               ; preds = %60, %67
  %88 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %95, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 0
  %93 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %92, align 8
  %94 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %94) #13
  br label %95

95:                                               ; preds = %87, %91
  ret void
}

declare void @_ZN4quic11DeleteFrameEPNS_9QuicFrameE(%"struct.quic::QuicFrame"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager22WriteOrBufferQuicFrameENS_9QuicFrameE(%"class.quic::QuicControlFrameManager"*, %"struct.quic::QuicFrame"* nocapture readonly byval(%"struct.quic::QuicFrame") align 8) local_unnamed_addr #0 align 2 {
  %3 = alloca [6 x %"class.absl::string_view"], align 16
  %4 = alloca %"class.absl::AlphaNum", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.absl::AlphaNum", align 16
  %7 = alloca %"class.absl::AlphaNum", align 8
  %8 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, %15
  %19 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = select i1 %18, i64 %20, i64 0
  %22 = add i64 %17, %21
  %23 = sub i64 %13, %15
  %24 = add i64 %23, %22
  %25 = icmp ugt i64 %24, %10
  %26 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 1
  %27 = select i1 %18, i64 %20, i64 0
  %28 = sub i64 1, %15
  %29 = add i64 %28, %17
  %30 = add i64 %29, %27
  %31 = icmp eq i64 %20, 0
  %32 = add i64 %20, -1
  %33 = select i1 %31, i64 0, i64 %32
  %34 = icmp ult i64 %33, %30
  br i1 %34, label %35, label %44

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0
  %37 = lshr i64 %33, 2
  %38 = icmp ugt i64 %37, 3
  %39 = select i1 %38, i64 %37, i64 3
  %40 = add i64 %39, %33
  %41 = icmp ult i64 %30, %40
  %42 = select i1 %41, i64 %40, i64 %30
  tail call void @_ZN6quiche19QuicheCircularDequeIN4quic9QuicFrameELm3ENSt3__19allocatorIS2_EEE8RelocateEm(%"class.quiche::QuicheCircularDeque"* %36, i64 %42) #10
  %43 = load i64, i64* %16, align 8
  br label %44

44:                                               ; preds = %2, %35
  %45 = phi i64 [ %17, %2 ], [ %43, %35 ]
  %46 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 0
  %47 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %46, align 8
  %48 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %47, i64 %45, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %1, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* nonnull align 8 %49, i64 24, i1 false) #10
  %50 = load i64, i64* %16, align 8
  %51 = load i64, i64* %26, align 8
  %52 = add i64 %51, -1
  %53 = icmp eq i64 %52, %50
  %54 = add i64 %50, 1
  %55 = select i1 %53, i64 0, i64 %54
  store i64 %55, i64* %16, align 8
  %56 = load i64, i64* %14, align 8
  %57 = icmp ult i64 %55, %56
  %58 = select i1 %57, i64 %51, i64 0
  %59 = sub i64 %55, %56
  %60 = add i64 %59, %58
  %61 = icmp ugt i64 %60, 1000
  br i1 %61, label %62, label %128

62:                                               ; preds = %44
  %63 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 5
  %64 = load %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.quic::QuicControlFrameManager::DelegateInterface"** %63, align 8
  %65 = bitcast %"class.absl::AlphaNum"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %65) #10
  %66 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 1, i64 0
  %67 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 1000, i8* %66) #10
  %68 = ptrtoint i8* %67 to i64
  %69 = ptrtoint i8* %66 to i64
  %70 = sub i64 %68, %69
  %71 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 0
  store i8* %66, i8** %71, align 16
  %72 = icmp sgt i64 %70, -1
  br i1 %72, label %74, label %73, !prof !2

73:                                               ; preds = %62
  call void @llvm.trap() #10
  unreachable

74:                                               ; preds = %62
  %75 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %6, i64 0, i32 0, i32 1
  store i64 %70, i64* %75, align 8
  %76 = bitcast %"class.absl::AlphaNum"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %76) #10
  %77 = load i32, i32* %11, align 4
  %78 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 1, i64 0
  %79 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %77, i8* %78) #10
  %80 = ptrtoint i8* %79 to i64
  %81 = ptrtoint i8* %78 to i64
  %82 = sub i64 %80, %81
  %83 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 0
  store i8* %78, i8** %83, align 8
  %84 = icmp sgt i64 %82, -1
  br i1 %84, label %86, label %85, !prof !2

85:                                               ; preds = %74
  call void @llvm.trap() #10
  unreachable

86:                                               ; preds = %74
  %87 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %7, i64 0, i32 0, i32 1
  store i64 %82, i64* %87, align 8
  %88 = bitcast [6 x %"class.absl::string_view"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %88) #10, !noalias !3
  %89 = bitcast [6 x %"class.absl::string_view"]* %3 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([11 x i8]* @.str to i64), i64 10>, <2 x i64>* %89, align 16, !noalias !3
  %90 = bitcast %"class.absl::AlphaNum"* %6 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 16, !noalias !3
  %92 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 1, i32 0
  %93 = bitcast i8** %92 to <2 x i64>*
  store <2 x i64> %91, <2 x i64>* %93, align 16, !noalias !3
  %94 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 2, i32 0
  %95 = bitcast i8** %94 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([41 x i8]* @.str.1 to i64), i64 40>, <2 x i64>* %95, align 16, !noalias !3
  %96 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 3, i32 0
  %97 = bitcast i8** %96 to i64*
  store i64 %81, i64* %97, align 16, !noalias !3
  %98 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 3, i32 1
  store i64 %82, i64* %98, align 8, !noalias !3
  %99 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 4, i32 0
  %100 = bitcast i8** %99 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([18 x i8]* @.str.2 to i64), i64 17>, <2 x i64>* %100, align 16, !noalias !3
  %101 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %101) #10, !noalias !3
  %102 = load i32, i32* %8, align 4, !noalias !3
  %103 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 1, i64 0
  %104 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32 %102, i8* %103) #10, !noalias !3
  %105 = ptrtoint i8* %104 to i64
  %106 = ptrtoint i8* %103 to i64
  %107 = sub i64 %105, %106
  %108 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* %103, i8** %108, align 8, !noalias !3
  %109 = icmp sgt i64 %107, -1
  br i1 %109, label %111, label %110, !prof !2

110:                                              ; preds = %86
  call void @llvm.trap() #10
  unreachable

111:                                              ; preds = %86
  %112 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 0
  %113 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 %107, i64* %113, align 8, !noalias !3
  %114 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 5, i32 0
  store i8* %103, i8** %114, align 16, !noalias !3
  %115 = getelementptr inbounds [6 x %"class.absl::string_view"], [6 x %"class.absl::string_view"]* %3, i64 0, i64 5, i32 1
  store i64 %107, i64* %115, align 8, !noalias !3
  call void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.absl::string_view"* nonnull %112, i64 6) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %101) #10, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %88) #10, !noalias !3
  %116 = bitcast %"class.quic::QuicControlFrameManager::DelegateInterface"* %64 to void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)***
  %117 = load void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %117, i64 2
  %119 = load void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %118, align 8
  call void %119(%"class.quic::QuicControlFrameManager::DelegateInterface"* %64, i32 124, %"class.std::__1::basic_string"* nonnull %5) #10
  %120 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %111
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %126) #13
  br label %127

127:                                              ; preds = %111, %124
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %76) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %65) #10
  br label %130

128:                                              ; preds = %44
  br i1 %25, label %130, label %129

129:                                              ; preds = %128
  tail call void @_ZN4quic23QuicControlFrameManager19WriteBufferedFramesEv(%"class.quic::QuicControlFrameManager"* %0)
  br label %130

130:                                              ; preds = %128, %129, %127
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic23QuicControlFrameManager17HasBufferedFramesEv(%"class.quic::QuicControlFrameManager"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = zext i32 %3 to i64
  %5 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, %9
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, %11
  br label %17

17:                                               ; preds = %1, %13
  %18 = phi i64 [ %16, %13 ], [ %11, %1 ]
  %19 = sub i64 %7, %9
  %20 = add i64 %19, %18
  %21 = icmp ugt i64 %20, %4
  ret i1 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager19WriteBufferedFramesEv(%"class.quic::QuicControlFrameManager"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.quic::QuicFrame", align 8
  %3 = alloca %"struct.quic::QuicFrame", align 8
  %4 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 1
  %9 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %2, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 0
  %11 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 5
  br label %13

13:                                               ; preds = %46, %1
  %14 = load i32, i32* %4, align 8
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %5, align 4
  %17 = zext i32 %16 to i64
  %18 = load i64, i64* %6, align 8
  %19 = load i64, i64* %7, align 8
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %21, label %24

21:                                               ; preds = %13
  %22 = load i64, i64* %8, align 8
  %23 = add i64 %22, %19
  br label %24

24:                                               ; preds = %13, %21
  %25 = phi i64 [ %23, %21 ], [ %19, %13 ]
  %26 = sub i64 %17, %18
  %27 = add i64 %26, %25
  %28 = icmp ugt i64 %27, %15
  br i1 %28, label %29, label %47

29:                                               ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %30 = sub i32 %14, %16
  %31 = zext i32 %30 to i64
  %32 = add i64 %18, %31
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %33 = load i64, i64* %8, align 8
  %34 = icmp ult i64 %32, %33
  %35 = select i1 %34, i64 0, i64 %33
  %36 = sub i64 %32, %35
  %37 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %10, align 8
  %38 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %37, i64 %36, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %38, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  call void @_ZN4quic31CopyRetransmittableControlFrameERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* nonnull sret %3, %"struct.quic::QuicFrame"* nonnull dereferenceable(24) %2) #10
  %39 = load %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.quic::QuicControlFrameManager::DelegateInterface"** %12, align 8
  %40 = bitcast %"class.quic::QuicControlFrameManager::DelegateInterface"* %39 to i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)***
  %41 = load i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)**, i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)*, i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)** %41, i64 3
  %43 = load i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)*, i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)** %42, align 8
  %44 = call zeroext i1 %43(%"class.quic::QuicControlFrameManager::DelegateInterface"* %39, %"struct.quic::QuicFrame"* nonnull dereferenceable(24) %3, i8 signext 0) #10
  br i1 %44, label %46, label %45

45:                                               ; preds = %29
  call void @_ZN4quic11DeleteFrameEPNS_9QuicFrameE(%"struct.quic::QuicFrame"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  br label %47

46:                                               ; preds = %29
  call void @_ZN4quic23QuicControlFrameManager18OnControlFrameSentERKNS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* %0, %"struct.quic::QuicFrame"* nonnull dereferenceable(24) %2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  br label %13

47:                                               ; preds = %24, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager22WriteOrBufferRstStreamEjNS_22QuicRstStreamErrorCodeEm(%"class.quic::QuicControlFrameManager"*, i32, i32, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.quic::QuicFrame", align 8
  %6 = tail call i8* @_Znwm(i64 32) #13
  %7 = bitcast i8* %6 to %"struct.quic::QuicRstStreamFrame"*
  %8 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, 1
  store i32 %10, i32* %8, align 8
  tail call void @_ZN4quic18QuicRstStreamFrameC1EjjNS_22QuicRstStreamErrorCodeEm(%"struct.quic::QuicRstStreamFrame"* nonnull %7, i32 %10, i32 %1, i32 %2, i64 %3) #10
  call void @_ZN4quic9QuicFrameC1EPNS_18QuicRstStreamFrameE(%"struct.quic::QuicFrame"* nonnull %5, %"struct.quic::QuicRstStreamFrame"* nonnull %7) #10
  call void @_ZN4quic23QuicControlFrameManager22WriteOrBufferQuicFrameENS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* %0, %"struct.quic::QuicFrame"* nonnull byval(%"struct.quic::QuicFrame") align 8 %5)
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN4quic18QuicRstStreamFrameC1EjjNS_22QuicRstStreamErrorCodeEm(%"struct.quic::QuicRstStreamFrame"*, i32, i32, i32, i64) unnamed_addr #1

declare void @_ZN4quic9QuicFrameC1EPNS_18QuicRstStreamFrameE(%"struct.quic::QuicFrame"*, %"struct.quic::QuicRstStreamFrame"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager19WriteOrBufferGoAwayENS_13QuicErrorCodeEjRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.quic::QuicControlFrameManager"*, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"struct.quic::QuicFrame", align 8
  %6 = tail call i8* @_Znwm(i64 40) #13
  %7 = bitcast i8* %6 to %"struct.quic::QuicGoAwayFrame"*
  %8 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = add i32 %9, 1
  store i32 %10, i32* %8, align 8
  tail call void @_ZN4quic15QuicGoAwayFrameC1EjNS_13QuicErrorCodeEjRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.quic::QuicGoAwayFrame"* nonnull %7, i32 %10, i32 %1, i32 %2, %"class.std::__1::basic_string"* dereferenceable(24) %3) #10
  call void @_ZN4quic9QuicFrameC1EPNS_15QuicGoAwayFrameE(%"struct.quic::QuicFrame"* nonnull %5, %"struct.quic::QuicGoAwayFrame"* nonnull %7) #10
  call void @_ZN4quic23QuicControlFrameManager22WriteOrBufferQuicFrameENS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* %0, %"struct.quic::QuicFrame"* nonnull byval(%"struct.quic::QuicFrame") align 8 %5)
  ret void
}

declare void @_ZN4quic15QuicGoAwayFrameC1EjNS_13QuicErrorCodeEjRKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.quic::QuicGoAwayFrame"*, i32, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN4quic9QuicFrameC1EPNS_15QuicGoAwayFrameE(%"struct.quic::QuicFrame"*, %"struct.quic::QuicGoAwayFrame"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager25WriteOrBufferWindowUpdateEjm(%"class.quic::QuicControlFrameManager"*, i32, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.quic::QuicFrame", align 8
  %5 = tail call i8* @_Znwm(i64 16) #13
  %6 = bitcast i8* %5 to %"struct.quic::QuicWindowUpdateFrame"*
  %7 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, 1
  store i32 %9, i32* %7, align 8
  tail call void @_ZN4quic21QuicWindowUpdateFrameC1Ejjm(%"struct.quic::QuicWindowUpdateFrame"* nonnull %6, i32 %9, i32 %1, i64 %2) #10
  call void @_ZN4quic9QuicFrameC1EPNS_21QuicWindowUpdateFrameE(%"struct.quic::QuicFrame"* nonnull %4, %"struct.quic::QuicWindowUpdateFrame"* nonnull %6) #10
  call void @_ZN4quic23QuicControlFrameManager22WriteOrBufferQuicFrameENS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* %0, %"struct.quic::QuicFrame"* nonnull byval(%"struct.quic::QuicFrame") align 8 %4)
  ret void
}

declare void @_ZN4quic21QuicWindowUpdateFrameC1Ejjm(%"struct.quic::QuicWindowUpdateFrame"*, i32, i32, i64) unnamed_addr #1

declare void @_ZN4quic9QuicFrameC1EPNS_21QuicWindowUpdateFrameE(%"struct.quic::QuicFrame"*, %"struct.quic::QuicWindowUpdateFrame"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager20WriteOrBufferBlockedEj(%"class.quic::QuicControlFrameManager"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.quic::QuicFrame", align 8
  %4 = tail call i8* @_Znwm(i64 16) #13
  %5 = bitcast i8* %4 to %"struct.quic::QuicBlockedFrame"*
  %6 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  store i32 %8, i32* %6, align 8
  tail call void @_ZN4quic16QuicBlockedFrameC1Ejj(%"struct.quic::QuicBlockedFrame"* nonnull %5, i32 %8, i32 %1) #10
  call void @_ZN4quic9QuicFrameC1EPNS_16QuicBlockedFrameE(%"struct.quic::QuicFrame"* nonnull %3, %"struct.quic::QuicBlockedFrame"* nonnull %5) #10
  call void @_ZN4quic23QuicControlFrameManager22WriteOrBufferQuicFrameENS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* %0, %"struct.quic::QuicFrame"* nonnull byval(%"struct.quic::QuicFrame") align 8 %3)
  ret void
}

declare void @_ZN4quic16QuicBlockedFrameC1Ejj(%"struct.quic::QuicBlockedFrame"*, i32, i32) unnamed_addr #1

declare void @_ZN4quic9QuicFrameC1EPNS_16QuicBlockedFrameE(%"struct.quic::QuicFrame"*, %"struct.quic::QuicBlockedFrame"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager27WriteOrBufferStreamsBlockedEjb(%"class.quic::QuicControlFrameManager"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.quic::QuicFrame", align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"struct.quic::QuicStreamsBlockedFrame"*
  %7 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, 1
  store i32 %9, i32* %7, align 8
  call void @_ZN4quic23QuicStreamsBlockedFrameC1Ejjb(%"struct.quic::QuicStreamsBlockedFrame"* nonnull %6, i32 %9, i32 %1, i1 zeroext %2) #10
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  call void @_ZN4quic9QuicFrameC1ENS_23QuicStreamsBlockedFrameE(%"struct.quic::QuicFrame"* nonnull %4, i64 %11, i64 %13) #10
  call void @_ZN4quic23QuicControlFrameManager22WriteOrBufferQuicFrameENS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* %0, %"struct.quic::QuicFrame"* nonnull byval(%"struct.quic::QuicFrame") align 8 %4)
  ret void
}

declare void @_ZN4quic23QuicStreamsBlockedFrameC1Ejjb(%"struct.quic::QuicStreamsBlockedFrame"*, i32, i32, i1 zeroext) unnamed_addr #1

declare void @_ZN4quic9QuicFrameC1ENS_23QuicStreamsBlockedFrameE(%"struct.quic::QuicFrame"*, i64, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager23WriteOrBufferMaxStreamsEjb(%"class.quic::QuicControlFrameManager"*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.quic::QuicFrame", align 8
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"struct.quic::QuicMaxStreamsFrame"*
  %7 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, 1
  store i32 %9, i32* %7, align 8
  call void @_ZN4quic19QuicMaxStreamsFrameC1Ejjb(%"struct.quic::QuicMaxStreamsFrame"* nonnull %6, i32 %9, i32 %1, i1 zeroext %2) #10
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  call void @_ZN4quic9QuicFrameC1ENS_19QuicMaxStreamsFrameE(%"struct.quic::QuicFrame"* nonnull %4, i64 %11, i64 %13) #10
  call void @_ZN4quic23QuicControlFrameManager22WriteOrBufferQuicFrameENS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* %0, %"struct.quic::QuicFrame"* nonnull byval(%"struct.quic::QuicFrame") align 8 %4)
  ret void
}

declare void @_ZN4quic19QuicMaxStreamsFrameC1Ejjb(%"struct.quic::QuicMaxStreamsFrame"*, i32, i32, i1 zeroext) unnamed_addr #1

declare void @_ZN4quic9QuicFrameC1ENS_19QuicMaxStreamsFrameE(%"struct.quic::QuicFrame"*, i64, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager24WriteOrBufferStopSendingENS_22QuicRstStreamErrorCodeEj(%"class.quic::QuicControlFrameManager"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.quic::QuicFrame", align 8
  %5 = tail call i8* @_Znwm(i64 24) #13
  %6 = bitcast i8* %5 to %"struct.quic::QuicStopSendingFrame"*
  %7 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, 1
  store i32 %9, i32* %7, align 8
  tail call void @_ZN4quic20QuicStopSendingFrameC1EjjNS_22QuicRstStreamErrorCodeE(%"struct.quic::QuicStopSendingFrame"* nonnull %6, i32 %9, i32 %2, i32 %1) #10
  call void @_ZN4quic9QuicFrameC1EPNS_20QuicStopSendingFrameE(%"struct.quic::QuicFrame"* nonnull %4, %"struct.quic::QuicStopSendingFrame"* nonnull %6) #10
  call void @_ZN4quic23QuicControlFrameManager22WriteOrBufferQuicFrameENS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* %0, %"struct.quic::QuicFrame"* nonnull byval(%"struct.quic::QuicFrame") align 8 %4)
  ret void
}

declare void @_ZN4quic20QuicStopSendingFrameC1EjjNS_22QuicRstStreamErrorCodeE(%"struct.quic::QuicStopSendingFrame"*, i32, i32, i32) unnamed_addr #1

declare void @_ZN4quic9QuicFrameC1EPNS_20QuicStopSendingFrameE(%"struct.quic::QuicFrame"*, %"struct.quic::QuicStopSendingFrame"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager26WriteOrBufferHandshakeDoneEv(%"class.quic::QuicControlFrameManager"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.quic::QuicFrame", align 8
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"struct.quic::QuicHandshakeDoneFrame"*
  %5 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, 1
  store i32 %7, i32* %5, align 8
  call void @_ZN4quic22QuicHandshakeDoneFrameC1Ej(%"struct.quic::QuicHandshakeDoneFrame"* nonnull %4, i32 %7) #10
  %8 = load i64, i64* %3, align 8
  call void @_ZN4quic9QuicFrameC1ENS_22QuicHandshakeDoneFrameE(%"struct.quic::QuicFrame"* nonnull %2, i64 %8) #10
  call void @_ZN4quic23QuicControlFrameManager22WriteOrBufferQuicFrameENS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* %0, %"struct.quic::QuicFrame"* nonnull byval(%"struct.quic::QuicFrame") align 8 %2)
  ret void
}

declare void @_ZN4quic22QuicHandshakeDoneFrameC1Ej(%"struct.quic::QuicHandshakeDoneFrame"*, i32) unnamed_addr #1

declare void @_ZN4quic9QuicFrameC1ENS_22QuicHandshakeDoneFrameE(%"struct.quic::QuicFrame"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager25WriteOrBufferAckFrequencyERKNS_21QuicAckFrequencyFrameE(%"class.quic::QuicControlFrameManager"*, %"struct.quic::QuicAckFrequencyFrame"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.quic::QuicFrame", align 8
  %4 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = tail call i8* @_Znwm(i64 32) #13
  %8 = bitcast i8* %7 to %"struct.quic::QuicAckFrequencyFrame"*
  %9 = zext i32 %6 to i64
  %10 = getelementptr inbounds %"struct.quic::QuicAckFrequencyFrame", %"struct.quic::QuicAckFrequencyFrame"* %1, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"struct.quic::QuicAckFrequencyFrame", %"struct.quic::QuicAckFrequencyFrame"* %1, i64 0, i32 4, i32 0
  %13 = load i64, i64* %12, align 8
  tail call void @_ZN4quic21QuicAckFrequencyFrameC1EjmmNS_8QuicTime5DeltaE(%"struct.quic::QuicAckFrequencyFrame"* nonnull %8, i32 %6, i64 %9, i64 %11, i64 %13) #10
  call void @_ZN4quic9QuicFrameC1EPNS_21QuicAckFrequencyFrameE(%"struct.quic::QuicFrame"* nonnull %3, %"struct.quic::QuicAckFrequencyFrame"* nonnull %8) #10
  call void @_ZN4quic23QuicControlFrameManager22WriteOrBufferQuicFrameENS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* %0, %"struct.quic::QuicFrame"* nonnull byval(%"struct.quic::QuicFrame") align 8 %3)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN4quic21QuicAckFrequencyFrameC1EjmmNS_8QuicTime5DeltaE(%"struct.quic::QuicAckFrequencyFrame"*, i32, i64, i64, i64) unnamed_addr #1

declare void @_ZN4quic9QuicFrameC1EPNS_21QuicAckFrequencyFrameE(%"struct.quic::QuicFrame"*, %"struct.quic::QuicAckFrequencyFrame"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager28WriteOrBufferNewConnectionIdERKNS_16QuicConnectionIdEmmRKNSt3__15arrayIcLm16EEE(%"class.quic::QuicControlFrameManager"*, %"class.quic::QuicConnectionId"* dereferenceable(16), i64, i64, %"struct.std::__1::array"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"struct.quic::QuicFrame", align 8
  %7 = alloca %"class.quic::QuicConnectionId", align 8
  %8 = tail call i8* @_Znwm(i64 56) #13
  %9 = bitcast i8* %8 to %"struct.quic::QuicNewConnectionIdFrame"*
  %10 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, 1
  store i32 %12, i32* %10, align 8
  call void @_ZN4quic16QuicConnectionIdC1ERKS0_(%"class.quic::QuicConnectionId"* nonnull %7, %"class.quic::QuicConnectionId"* dereferenceable(16) %1) #10
  %13 = bitcast %"struct.std::__1::array"* %4 to i64*
  %14 = load i64, i64* %13, align 1
  %15 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %4, i64 0, i32 0, i64 8
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 1
  call void @_ZN4quic24QuicNewConnectionIdFrameC1EjNS_16QuicConnectionIdEmNSt3__15arrayIcLm16EEEm(%"struct.quic::QuicNewConnectionIdFrame"* nonnull %9, i32 %12, %"class.quic::QuicConnectionId"* nonnull %7, i64 %2, i64 %14, i64 %17, i64 %3) #10
  call void @_ZN4quic9QuicFrameC1EPNS_24QuicNewConnectionIdFrameE(%"struct.quic::QuicFrame"* nonnull %6, %"struct.quic::QuicNewConnectionIdFrame"* nonnull %9) #10
  call void @_ZN4quic23QuicControlFrameManager22WriteOrBufferQuicFrameENS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* %0, %"struct.quic::QuicFrame"* nonnull byval(%"struct.quic::QuicFrame") align 8 %6)
  call void @_ZN4quic16QuicConnectionIdD1Ev(%"class.quic::QuicConnectionId"* nonnull %7) #10
  ret void
}

declare void @_ZN4quic16QuicConnectionIdC1ERKS0_(%"class.quic::QuicConnectionId"*, %"class.quic::QuicConnectionId"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN4quic24QuicNewConnectionIdFrameC1EjNS_16QuicConnectionIdEmNSt3__15arrayIcLm16EEEm(%"struct.quic::QuicNewConnectionIdFrame"*, i32, %"class.quic::QuicConnectionId"*, i64, i64, i64, i64) unnamed_addr #1

declare void @_ZN4quic9QuicFrameC1EPNS_24QuicNewConnectionIdFrameE(%"struct.quic::QuicFrame"*, %"struct.quic::QuicNewConnectionIdFrame"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4quic16QuicConnectionIdD1Ev(%"class.quic::QuicConnectionId"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager31WriteOrBufferRetireConnectionIdEm(%"class.quic::QuicControlFrameManager"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.quic::QuicFrame", align 8
  %4 = tail call i8* @_Znwm(i64 16) #13
  %5 = bitcast i8* %4 to %"struct.quic::QuicRetireConnectionIdFrame"*
  %6 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  store i32 %8, i32* %6, align 8
  tail call void @_ZN4quic27QuicRetireConnectionIdFrameC1Ejm(%"struct.quic::QuicRetireConnectionIdFrame"* nonnull %5, i32 %8, i64 %1) #10
  call void @_ZN4quic9QuicFrameC1EPNS_27QuicRetireConnectionIdFrameE(%"struct.quic::QuicFrame"* nonnull %3, %"struct.quic::QuicRetireConnectionIdFrame"* nonnull %5) #10
  call void @_ZN4quic23QuicControlFrameManager22WriteOrBufferQuicFrameENS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* %0, %"struct.quic::QuicFrame"* nonnull byval(%"struct.quic::QuicFrame") align 8 %3)
  ret void
}

declare void @_ZN4quic27QuicRetireConnectionIdFrameC1Ejm(%"struct.quic::QuicRetireConnectionIdFrame"*, i32, i64) unnamed_addr #1

declare void @_ZN4quic9QuicFrameC1EPNS_27QuicRetireConnectionIdFrameE(%"struct.quic::QuicFrame"*, %"struct.quic::QuicRetireConnectionIdFrame"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager21WriteOrBufferNewTokenEN4absl11string_viewE(%"class.quic::QuicControlFrameManager"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.quic::QuicFrame", align 8
  %5 = tail call i8* @_Znwm(i64 32) #13
  %6 = bitcast i8* %5 to %"struct.quic::QuicNewTokenFrame"*
  %7 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, 1
  store i32 %9, i32* %7, align 8
  tail call void @_ZN4quic17QuicNewTokenFrameC1EjN4absl11string_viewE(%"struct.quic::QuicNewTokenFrame"* nonnull %6, i32 %9, i8* %1, i64 %2) #10
  call void @_ZN4quic9QuicFrameC1EPNS_17QuicNewTokenFrameE(%"struct.quic::QuicFrame"* nonnull %4, %"struct.quic::QuicNewTokenFrame"* nonnull %6) #10
  call void @_ZN4quic23QuicControlFrameManager22WriteOrBufferQuicFrameENS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* %0, %"struct.quic::QuicFrame"* nonnull byval(%"struct.quic::QuicFrame") align 8 %4)
  ret void
}

declare void @_ZN4quic17QuicNewTokenFrameC1EjN4absl11string_viewE(%"struct.quic::QuicNewTokenFrame"*, i32, i8*, i64) unnamed_addr #1

declare void @_ZN4quic9QuicFrameC1EPNS_17QuicNewTokenFrameE(%"struct.quic::QuicFrame"*, %"struct.quic::QuicNewTokenFrame"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager18OnControlFrameSentERKNS_9QuicFrameE(%"class.quic::QuicControlFrameManager"*, %"struct.quic::QuicFrame"* dereferenceable(24)) local_unnamed_addr #6 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #10
  %9 = tail call i32 @_ZN4quic17GetControlFrameIdERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* dereferenceable(24) %1) #10
  store i32 %9, i32* %3, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %2
  %12 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %12, label %13, label %221

13:                                               ; preds = %11
  %14 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %14) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.3, i64 0, i64 0), i32 164, i32 2) #10
  %15 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %15 to %"class.std::__1::basic_ostream"*
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.4, i64 0, i64 0), i64 64) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %14) #10
  br label %221

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %1, i64 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, 4
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %106

24:                                               ; preds = %18
  %25 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #10
  %26 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %1, i64 0, i32 0, i32 0, i32 4
  %27 = bitcast i8** %26 to %"struct.quic::QuicWindowUpdateFrame"**
  %28 = load %"struct.quic::QuicWindowUpdateFrame"*, %"struct.quic::QuicWindowUpdateFrame"** %27, align 8
  %29 = getelementptr inbounds %"struct.quic::QuicWindowUpdateFrame", %"struct.quic::QuicWindowUpdateFrame"* %28, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %5, align 4
  %31 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 6
  %32 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %33 = zext i32 %30 to i64
  %34 = add i64 %32, %33
  %35 = zext i64 %34 to i128
  %36 = mul nuw i128 %35, 11376068507788127593
  %37 = lshr i128 %36, 64
  %38 = xor i128 %37, %36
  %39 = trunc i128 %38 to i64
  %40 = getelementptr inbounds %"class.absl::flat_hash_map", %"class.absl::flat_hash_map"* %31, i64 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 3
  %43 = load i64, i64* %42, align 8
  %44 = lshr i64 %39, 7
  %45 = ptrtoint i8* %41 to i64
  %46 = lshr i64 %45, 12
  %47 = xor i64 %44, %46
  %48 = trunc i128 %38 to i8
  %49 = and i8 %48, 127
  %50 = insertelement <16 x i8> undef, i8 %49, i32 0
  %51 = shufflevector <16 x i8> %50, <16 x i8> undef, <16 x i32> zeroinitializer
  %52 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %53 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %52, align 8
  br label %54

54:                                               ; preds = %83, %24
  %55 = phi i64 [ %47, %24 ], [ %85, %83 ]
  %56 = phi i64 [ 0, %24 ], [ %84, %83 ]
  %57 = and i64 %55, %43
  %58 = getelementptr inbounds i8, i8* %41, i64 %57
  %59 = bitcast i8* %58 to <16 x i8>*
  %60 = load <16 x i8>, <16 x i8>* %59, align 1
  %61 = icmp eq <16 x i8> %51, %60
  %62 = bitcast <16 x i1> %61 to i16
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %79, label %64

64:                                               ; preds = %54
  %65 = zext i16 %62 to i32
  br label %66

66:                                               ; preds = %75, %64
  %67 = phi i32 [ %65, %64 ], [ %77, %75 ]
  %68 = tail call i32 @llvm.cttz.i32(i32 %67, i1 false) #10, !range !6
  %69 = zext i32 %68 to i64
  %70 = add i64 %57, %69
  %71 = and i64 %70, %43
  %72 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %53, i64 %71, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, %30
  br i1 %74, label %86, label %75, !prof !2

75:                                               ; preds = %66
  %76 = add i32 %67, -1
  %77 = and i32 %76, %67
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %66

79:                                               ; preds = %75, %54
  %80 = icmp eq <16 x i8> %60, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %81 = bitcast <16 x i1> %80 to i16
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %83, label %101, !prof !7

83:                                               ; preds = %79
  %84 = add i64 %56, 16
  %85 = add i64 %84, %57
  br label %54

86:                                               ; preds = %66
  %87 = getelementptr inbounds i8, i8* %41, i64 %71
  %88 = icmp ne i8* %87, null
  tail call void @llvm.assume(i1 %88) #10
  %89 = load i8, i8* %87, align 1
  %90 = icmp sgt i8 %89, -1
  br i1 %90, label %92, label %91, !prof !2

91:                                               ; preds = %86
  tail call void @llvm.trap() #10
  unreachable

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.absl::flat_hash_map", %"class.absl::flat_hash_map"* %31, i64 0, i32 0
  %94 = call dereferenceable(4) i32* @_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEEixIjS3_EEDTclsrT0_5valueclL_ZNS7_9addressofISD_EEPT_RSJ_EclL_ZNS7_7declvalIRSD_EEDTclsr3std3__1E9__declvalISJ_ELi0EEEvEEEEERSC_(%"class.absl::container_internal::raw_hash_map.56"* %93, i32* nonnull dereferenceable(4) %5)
  %95 = load i32, i32* %94, align 4
  %96 = icmp ugt i32 %9, %95
  br i1 %96, label %97, label %101

97:                                               ; preds = %92
  %98 = call dereferenceable(4) i32* @_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEEixIjS3_EEDTclsrT0_5valueclL_ZNS7_9addressofISD_EEPT_RSJ_EclL_ZNS7_7declvalIRSD_EEDTclsr3std3__1E9__declvalISJ_ELi0EEEvEEEEERSC_(%"class.absl::container_internal::raw_hash_map.56"* %93, i32* nonnull dereferenceable(4) %5)
  %99 = load i32, i32* %98, align 4
  %100 = call zeroext i1 @_ZN4quic23QuicControlFrameManager21OnControlFrameIdAckedEj(%"class.quic::QuicControlFrameManager"* %0, i32 %99)
  br label %101

101:                                              ; preds = %79, %97, %92
  %102 = load i32, i32* %3, align 4
  %103 = getelementptr inbounds %"class.absl::flat_hash_map", %"class.absl::flat_hash_map"* %31, i64 0, i32 0
  %104 = call dereferenceable(4) i32* @_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEEixIjS3_EEDTclsrT0_5valueclL_ZNS7_9addressofISD_EEPT_RSJ_EclL_ZNS7_7declvalIRSD_EEDTclsr3std3__1E9__declvalISJ_ELi0EEEvEEEEERSC_(%"class.absl::container_internal::raw_hash_map.56"* %103, i32* nonnull dereferenceable(4) %5)
  store i32 %102, i32* %104, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #10
  %105 = load i32, i32* %3, align 4
  br label %106

106:                                              ; preds = %22, %101
  %107 = phi i64 [ %32, %101 ], [ %23, %22 ]
  %108 = phi i32 [ %105, %101 ], [ %9, %22 ]
  %109 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4
  %110 = zext i32 %108 to i64
  %111 = add i64 %107, %110
  %112 = zext i64 %111 to i128
  %113 = mul nuw i128 %112, 11376068507788127593
  %114 = lshr i128 %113, 64
  %115 = xor i128 %114, %113
  %116 = trunc i128 %115 to i64
  %117 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %109, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 3
  %120 = load i64, i64* %119, align 8
  %121 = lshr i64 %116, 7
  %122 = ptrtoint i8* %118 to i64
  %123 = lshr i64 %122, 12
  %124 = xor i64 %121, %123
  %125 = trunc i128 %115 to i8
  %126 = and i8 %125, 127
  %127 = insertelement <16 x i8> undef, i8 %126, i32 0
  %128 = shufflevector <16 x i8> %127, <16 x i8> undef, <16 x i32> zeroinitializer
  %129 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %130 = load %"struct.std::__1::pair.41"**, %"struct.std::__1::pair.41"*** %129, align 8
  br label %131

131:                                              ; preds = %162, %106
  %132 = phi i64 [ %124, %106 ], [ %164, %162 ]
  %133 = phi i64 [ 0, %106 ], [ %163, %162 ]
  %134 = and i64 %132, %120
  %135 = getelementptr inbounds i8, i8* %118, i64 %134
  %136 = bitcast i8* %135 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1
  %138 = icmp eq <16 x i8> %128, %137
  %139 = bitcast <16 x i1> %138 to i16
  %140 = icmp eq i16 %139, 0
  br i1 %140, label %158, label %141

141:                                              ; preds = %131
  %142 = zext i16 %139 to i32
  br label %143

143:                                              ; preds = %154, %141
  %144 = phi i32 [ %142, %141 ], [ %156, %154 ]
  %145 = call i32 @llvm.cttz.i32(i32 %144, i1 false) #10, !range !6
  %146 = zext i32 %145 to i64
  %147 = add i64 %134, %146
  %148 = and i64 %147, %120
  %149 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %130, i64 %148
  %150 = load %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %149, align 8
  %151 = getelementptr inbounds %"struct.std::__1::pair.41", %"struct.std::__1::pair.41"* %150, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, %108
  br i1 %153, label %165, label %154, !prof !2

154:                                              ; preds = %143
  %155 = add i32 %144, -1
  %156 = and i32 %155, %144
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %143

158:                                              ; preds = %154, %131
  %159 = icmp eq <16 x i8> %137, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %160 = bitcast <16 x i1> %159 to i16
  %161 = icmp eq i16 %160, 0
  br i1 %161, label %162, label %171, !prof !7

162:                                              ; preds = %158
  %163 = add i64 %133, 16
  %164 = add i64 %163, %134
  br label %131

165:                                              ; preds = %143
  %166 = getelementptr inbounds i8, i8* %118, i64 %148
  %167 = icmp ne i8* %166, null
  call void @llvm.assume(i1 %167) #10
  %168 = load i8, i8* %166, align 1
  %169 = icmp sgt i8 %168, -1
  br i1 %169, label %174, label %170, !prof !2

170:                                              ; preds = %165
  call void @llvm.trap() #10
  unreachable

171:                                              ; preds = %158
  %172 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %173 = ptrtoint %"struct.std::__1::__list_node_base"* %172 to i64
  br label %178

174:                                              ; preds = %165
  %175 = getelementptr inbounds %"struct.std::__1::pair.41", %"struct.std::__1::pair.41"* %150, i64 0, i32 1
  %176 = bitcast %"class.std::__1::__list_iterator"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  br label %178

178:                                              ; preds = %171, %174
  %179 = phi i64 [ %173, %171 ], [ %177, %174 ]
  %180 = inttoptr i64 %179 to %"struct.std::__1::__list_node_base"*
  %181 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %182 = icmp eq %"struct.std::__1::__list_node_base"* %181, %180
  br i1 %182, label %185, label %183

183:                                              ; preds = %178
  %184 = call i64 @_ZN6quiche19QuicheLinkedHashMapIjbN4absl13hash_internal4HashIjEENSt3__18equal_toIjEEE5eraseERKj(%"class.quiche::QuicheLinkedHashMap"* %109, i32* nonnull dereferenceable(4) %3)
  br label %221

185:                                              ; preds = %178
  %186 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 3
  %187 = load i32, i32* %186, align 8
  %188 = icmp ugt i32 %108, %187
  br i1 %188, label %189, label %219

189:                                              ; preds = %185
  %190 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %190, label %191, label %201

191:                                              ; preds = %189
  %192 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %192) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.3, i64 0, i64 0), i32 183, i32 2) #10
  %193 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %194 = bitcast %"class.std::__1::basic_ostringstream"* %193 to %"class.std::__1::basic_ostream"*
  %195 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %194, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.5, i64 0, i64 0), i64 45) #10
  %196 = load i32, i32* %3, align 4
  %197 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %195, i32 %196) #10
  %198 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %197, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 15) #10
  %199 = load i32, i32* %186, align 8
  %200 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %198, i32 %199) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %192) #10
  br label %201

201:                                              ; preds = %189, %191
  %202 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 5
  %203 = load %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.quic::QuicControlFrameManager::DelegateInterface"** %202, align 8
  %204 = call i8* @_Znwm(i64 48) #13
  %205 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %204, i8** %205, align 8
  %206 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %207 = bitcast i64* %206 to <2 x i64>*
  store <2 x i64> <i64 39, i64 -9223372036854775760>, <2 x i64>* %207, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %204, i8* align 1 getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0), i64 39, i1 false) #10
  %208 = getelementptr inbounds i8, i8* %204, i64 39
  store i8 0, i8* %208, align 1
  %209 = bitcast %"class.quic::QuicControlFrameManager::DelegateInterface"* %203 to void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)***
  %210 = load void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)*** %209, align 8
  %211 = getelementptr inbounds void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %210, i64 2
  %212 = load void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %211, align 8
  call void %212(%"class.quic::QuicControlFrameManager::DelegateInterface"* %203, i32 1, %"class.std::__1::basic_string"* nonnull %7) #10
  %213 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %213, i64 0, i32 1, i32 0
  %215 = load i8, i8* %214, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %216, label %217, label %221

217:                                              ; preds = %201
  %218 = load i8*, i8** %205, align 8
  call void @_ZdlPv(i8* %218) #13
  br label %221

219:                                              ; preds = %185
  %220 = add i32 %187, 1
  store i32 %220, i32* %186, align 8
  br label %221

221:                                              ; preds = %217, %201, %13, %11, %219, %183
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #10
  ret void
}

declare i32 @_ZN4quic17GetControlFrameIdERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEEixIjS3_EEDTclsrT0_5valueclL_ZNS7_9addressofISD_EEPT_RSJ_EclL_ZNS7_7declvalIRSD_EEDTclsr3std3__1E9__declvalISJ_ELi0EEEvEEEEERSC_(%"class.absl::container_internal::raw_hash_map.56"*, i32* dereferenceable(4)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.56", %"class.absl::container_internal::raw_hash_map.56"* %0, i64 0, i32 0
  %4 = load i32, i32* %1, align 4, !noalias !8
  %5 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8, !noalias !8
  %6 = zext i32 %4 to i64
  %7 = add i64 %5, %6
  %8 = zext i64 %7 to i128
  %9 = mul nuw i128 %8, 11376068507788127593
  %10 = lshr i128 %9, 64
  %11 = xor i128 %10, %9
  %12 = trunc i128 %11 to i64
  %13 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.56", %"class.absl::container_internal::raw_hash_map.56"* %0, i64 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8, !noalias !8
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.56", %"class.absl::container_internal::raw_hash_map.56"* %0, i64 0, i32 0, i32 3
  %16 = load i64, i64* %15, align 8, !noalias !8
  %17 = lshr i64 %12, 7
  %18 = ptrtoint i8* %14 to i64
  %19 = lshr i64 %18, 12
  %20 = xor i64 %17, %19
  %21 = trunc i128 %11 to i8
  %22 = and i8 %21, 127
  %23 = insertelement <16 x i8> undef, i8 %22, i32 0
  %24 = shufflevector <16 x i8> %23, <16 x i8> undef, <16 x i32> zeroinitializer
  %25 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map.56", %"class.absl::container_internal::raw_hash_map.56"* %0, i64 0, i32 0, i32 1
  br label %26

26:                                               ; preds = %56, %2
  %27 = phi i64 [ %20, %2 ], [ %58, %56 ]
  %28 = phi i64 [ 0, %2 ], [ %57, %56 ]
  %29 = and i64 %27, %16
  %30 = getelementptr inbounds i8, i8* %14, i64 %29
  %31 = bitcast i8* %30 to <16 x i8>*
  %32 = load <16 x i8>, <16 x i8>* %31, align 1, !noalias !8
  %33 = icmp eq <16 x i8> %24, %32
  %34 = bitcast <16 x i1> %33 to i16
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %52, label %36

36:                                               ; preds = %26
  %37 = zext i16 %34 to i32
  %38 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %25, align 8, !noalias !8
  br label %39

39:                                               ; preds = %48, %36
  %40 = phi i32 [ %37, %36 ], [ %50, %48 ]
  %41 = tail call i32 @llvm.cttz.i32(i32 %40, i1 false) #10, !range !6
  %42 = zext i32 %41 to i64
  %43 = add i64 %29, %42
  %44 = and i64 %43, %16
  %45 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %38, i64 %44, i32 0, i32 0
  %46 = load i32, i32* %45, align 4, !noalias !8
  %47 = icmp eq i32 %46, %4
  br i1 %47, label %67, label %48, !prof !2

48:                                               ; preds = %39
  %49 = add i32 %40, -1
  %50 = and i32 %49, %40
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %39

52:                                               ; preds = %48, %26
  %53 = icmp eq <16 x i8> %32, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %54 = bitcast <16 x i1> %53 to i16
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %56, label %59, !prof !7

56:                                               ; preds = %52
  %57 = add i64 %28, 16
  %58 = add i64 %57, %29
  br label %26

59:                                               ; preds = %52
  %60 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.57"* %3, i64 %12) #10, !noalias !8
  %61 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %25, align 8, !noalias !8
  %62 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %61, i64 %60, i32 0, i32 0
  %63 = load i32, i32* %1, align 4, !noalias !8
  store i32 %63, i32* %62, align 4, !noalias !8
  %64 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %61, i64 %60, i32 0, i32 1
  store i32 0, i32* %64, align 4, !noalias !8
  %65 = load i8*, i8** %13, align 8, !noalias !8
  %66 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %25, align 8, !noalias !8
  br label %67

67:                                               ; preds = %39, %59
  %68 = phi %"union.absl::container_internal::map_slot_type"* [ %66, %59 ], [ %38, %39 ]
  %69 = phi i8* [ %65, %59 ], [ %14, %39 ]
  %70 = phi i64 [ %60, %59 ], [ %44, %39 ]
  %71 = getelementptr inbounds i8, i8* %69, i64 %70
  %72 = icmp ne i8* %71, null
  tail call void @llvm.assume(i1 %72) #10, !noalias !8
  %73 = load i8, i8* %71, align 1
  %74 = icmp sgt i8 %73, -1
  br i1 %74, label %76, label %75, !prof !2

75:                                               ; preds = %67
  tail call void @llvm.trap() #10
  unreachable

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %68, i64 %70, i32 0, i32 1
  ret i32* %77
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic23QuicControlFrameManager21OnControlFrameIdAckedEj(%"class.quic::QuicControlFrameManager"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  store i32 %1, i32* %3, align 4
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %96, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp ugt i32 %9, %1
  br i1 %10, label %36, label %11

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %12, label %13, label %18

13:                                               ; preds = %11
  %14 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %14) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.3, i64 0, i64 0), i32 338, i32 2) #10
  %15 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %15 to %"class.std::__1::basic_ostream"*
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0), i64 31) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %14) #10
  br label %18

18:                                               ; preds = %11, %13
  %19 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 5
  %20 = load %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.quic::QuicControlFrameManager::DelegateInterface"** %19, align 8
  %21 = call i8* @_Znwm(i64 32) #13
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 31, i64 -9223372036854775776>, <2 x i64>* %24, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0), i64 31, i1 false) #10
  %25 = getelementptr inbounds i8, i8* %21, i64 31
  store i8 0, i8* %25, align 1
  %26 = bitcast %"class.quic::QuicControlFrameManager::DelegateInterface"* %20 to void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)***
  %27 = load void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %27, i64 2
  %29 = load void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %28, align 8
  call void %29(%"class.quic::QuicControlFrameManager::DelegateInterface"* %20, i32 1, %"class.std::__1::basic_string"* nonnull %5) #10
  %30 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %96

34:                                               ; preds = %18
  %35 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %35) #13
  br label %96

36:                                               ; preds = %7
  %37 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp ugt i32 %38, %1
  br i1 %39, label %96, label %40

40:                                               ; preds = %36
  %41 = sub i32 %1, %38
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, %42
  %46 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = icmp ult i64 %45, %47
  %49 = select i1 %48, i64 0, i64 %47
  %50 = sub i64 %45, %49
  %51 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 0
  %52 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %51, align 8
  %53 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %52, i64 %50
  %54 = tail call i32 @_ZN4quic17GetControlFrameIdERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* dereferenceable(24) %53) #10
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %96, label %56

56:                                               ; preds = %40
  %57 = load i32, i32* %37, align 4
  %58 = sub i32 %1, %57
  %59 = zext i32 %58 to i64
  %60 = load i64, i64* %43, align 8
  %61 = add i64 %60, %59
  %62 = load i64, i64* %46, align 8
  %63 = icmp ult i64 %61, %62
  %64 = select i1 %63, i64 0, i64 %62
  %65 = sub i64 %61, %64
  %66 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 0
  %67 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %66, align 8
  %68 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %67, i64 %65
  tail call void @_ZN4quic17SetControlFrameIdEjPNS_9QuicFrameE(i32 0, %"struct.quic::QuicFrame"* %68) #10
  %69 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4
  %70 = call i64 @_ZN6quiche19QuicheLinkedHashMapIjbN4absl13hash_internal4HashIjEENSt3__18equal_toIjEEE5eraseERKj(%"class.quiche::QuicheLinkedHashMap"* %69, i32* nonnull dereferenceable(4) %3)
  %71 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 0
  %72 = load i64, i64* %43, align 8
  %73 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %72, %74
  br i1 %75, label %96, label %76

76:                                               ; preds = %56, %82
  %77 = phi i64 [ %91, %82 ], [ %72, %56 ]
  %78 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %71, align 8
  %79 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %78, i64 %77
  %80 = call i32 @_ZN4quic17GetControlFrameIdERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* dereferenceable(24) %79) #10
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %96

82:                                               ; preds = %76
  %83 = load i64, i64* %43, align 8
  %84 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %71, align 8
  %85 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %84, i64 %83
  call void @_ZN4quic11DeleteFrameEPNS_9QuicFrameE(%"struct.quic::QuicFrame"* %85) #10
  %86 = load i64, i64* %43, align 8
  %87 = load i64, i64* %46, align 8
  %88 = add i64 %87, -1
  %89 = icmp eq i64 %88, %86
  %90 = add i64 %86, 1
  %91 = select i1 %89, i64 0, i64 %90
  store i64 %91, i64* %43, align 8
  %92 = load i32, i32* %37, align 4
  %93 = add i32 %92, 1
  store i32 %93, i32* %37, align 4
  %94 = load i64, i64* %73, align 8
  %95 = icmp eq i64 %91, %94
  br i1 %95, label %96, label %76

96:                                               ; preds = %82, %76, %56, %34, %18, %36, %40, %2
  %97 = phi i1 [ false, %2 ], [ false, %40 ], [ false, %36 ], [ false, %18 ], [ false, %34 ], [ true, %56 ], [ true, %76 ], [ true, %82 ]
  ret i1 %97
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN6quiche19QuicheLinkedHashMapIjbN4absl13hash_internal4HashIjEENSt3__18equal_toIjEEE5eraseERKj(%"class.quiche::QuicheLinkedHashMap"*, i32* dereferenceable(4)) local_unnamed_addr #6 comdat align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %5 = zext i32 %3 to i64
  %6 = add i64 %4, %5
  %7 = zext i64 %6 to i128
  %8 = mul nuw i128 %7, 11376068507788127593
  %9 = lshr i128 %8, 64
  %10 = xor i128 %9, %8
  %11 = trunc i128 %10 to i64
  %12 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %11, 7
  %17 = ptrtoint i8* %13 to i64
  %18 = lshr i64 %17, 12
  %19 = xor i64 %16, %18
  %20 = trunc i128 %10 to i8
  %21 = and i8 %20, 127
  %22 = insertelement <16 x i8> undef, i8 %21, i32 0
  %23 = shufflevector <16 x i8> %22, <16 x i8> undef, <16 x i32> zeroinitializer
  %24 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  br label %25

25:                                               ; preds = %57, %2
  %26 = phi i64 [ %19, %2 ], [ %59, %57 ]
  %27 = phi i64 [ 0, %2 ], [ %58, %57 ]
  %28 = and i64 %26, %15
  %29 = getelementptr inbounds i8, i8* %13, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %23, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %53, label %35

35:                                               ; preds = %25
  %36 = zext i16 %33 to i32
  %37 = load %"struct.std::__1::pair.41"**, %"struct.std::__1::pair.41"*** %24, align 8
  br label %38

38:                                               ; preds = %49, %35
  %39 = phi i32 [ %36, %35 ], [ %51, %49 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #10, !range !6
  %41 = zext i32 %40 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %15
  %44 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %37, i64 %43
  %45 = load %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::pair.41", %"struct.std::__1::pair.41"* %45, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, %3
  br i1 %48, label %60, label %49, !prof !2

49:                                               ; preds = %38
  %50 = add i32 %39, -1
  %51 = and i32 %50, %39
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %38

53:                                               ; preds = %49, %25
  %54 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %138, !prof !7

57:                                               ; preds = %53
  %58 = add i64 %27, 16
  %59 = add i64 %58, %28
  br label %25

60:                                               ; preds = %38
  %61 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %37, i64 %43
  %62 = getelementptr inbounds i8, i8* %13, i64 %43
  %63 = icmp ne i8* %62, null
  tail call void @llvm.assume(i1 %63) #10
  %64 = load i8, i8* %62, align 1
  %65 = icmp sgt i8 %64, -1
  br i1 %65, label %67, label %66, !prof !2

66:                                               ; preds = %60
  tail call void @llvm.trap() #10
  unreachable

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"struct.std::__1::pair.41", %"struct.std::__1::pair.41"* %45, i64 0, i32 1, i32 0
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = bitcast %"struct.std::__1::__list_node_base"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 0
  %74 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %74, i64 0, i32 1
  %76 = bitcast %"struct.std::__1::__list_node_base"** %75 to i64*
  store i64 %72, i64* %76, align 8
  %77 = bitcast %"struct.std::__1::__list_node_base"* %69 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"struct.std::__1::__list_node_base"** %70 to i64**
  %80 = load i64*, i64** %79, align 8
  store i64 %78, i64* %80, align 8
  %81 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, -1
  store i64 %83, i64* %81, align 8
  %84 = bitcast %"struct.std::__1::__list_node_base"* %69 to i8*
  tail call void @_ZdlPv(i8* %84) #13
  %85 = load i8, i8* %62, align 1
  %86 = icmp sgt i8 %85, -1
  br i1 %86, label %88, label %87, !prof !2

87:                                               ; preds = %67
  tail call void @llvm.trap() #10
  unreachable

88:                                               ; preds = %67
  %89 = bitcast %"struct.std::__1::pair.41"** %61 to i8**
  %90 = load i8*, i8** %89, align 8
  tail call void @_ZdlPv(i8* %90) #13
  %91 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, -1
  store i64 %93, i64* %91, align 8
  %94 = bitcast %"class.quiche::QuicheLinkedHashMap"* %0 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = ptrtoint i8* %62 to i64
  %97 = sub i64 %96, %95
  %98 = add i64 %97, -16
  %99 = load i64, i64* %14, align 8
  %100 = and i64 %98, %99
  %101 = bitcast i8* %62 to <16 x i8>*
  %102 = load <16 x i8>, <16 x i8>* %101, align 1
  %103 = icmp eq <16 x i8> %102, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %104 = bitcast <16 x i1> %103 to i16
  %105 = inttoptr i64 %95 to i8*
  %106 = getelementptr inbounds i8, i8* %105, i64 %100
  %107 = bitcast i8* %106 to <16 x i8>*
  %108 = load <16 x i8>, <16 x i8>* %107, align 1
  %109 = icmp eq <16 x i8> %108, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %110 = bitcast <16 x i1> %109 to i16
  %111 = icmp ne i16 %110, 0
  %112 = icmp ne i16 %104, 0
  %113 = and i1 %112, %111
  br i1 %113, label %114, label %124

114:                                              ; preds = %88
  %115 = zext i16 %104 to i32
  %116 = zext i16 %110 to i32
  %117 = tail call i32 @llvm.cttz.i32(i32 %115, i1 false) #10, !range !6
  %118 = shl nuw i32 %116, 16
  %119 = tail call i32 @llvm.ctlz.i32(i32 %118, i1 false) #10, !range !6
  %120 = add nuw nsw i32 %119, %117
  %121 = icmp ult i32 %120, 16
  %122 = zext i1 %121 to i64
  %123 = select i1 %121, i8 -128, i8 -2
  br label %124

124:                                              ; preds = %88, %114
  %125 = phi i64 [ 0, %88 ], [ %122, %114 ]
  %126 = phi i8 [ -2, %88 ], [ %123, %114 ]
  %127 = getelementptr inbounds i8, i8* %105, i64 %97
  store i8 %126, i8* %127, align 1
  %128 = load i8*, i8** %12, align 8
  %129 = add i64 %97, -15
  %130 = load i64, i64* %14, align 8
  %131 = and i64 %130, %129
  %132 = and i64 %130, 15
  %133 = add i64 %131, %132
  %134 = getelementptr inbounds i8, i8* %128, i64 %133
  store i8 %126, i8* %134, align 1
  %135 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, %125
  store i64 %137, i64* %135, align 8
  br label %138

138:                                              ; preds = %53, %124
  %139 = phi i64 [ 1, %124 ], [ 0, %53 ]
  ret i64 %139
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic23QuicControlFrameManager19OnControlFrameAckedERKNS_9QuicFrameE(%"class.quic::QuicControlFrameManager"*, %"struct.quic::QuicFrame"* dereferenceable(24)) local_unnamed_addr #6 align 2 {
  %3 = alloca i32, align 4
  %4 = tail call i32 @_ZN4quic17GetControlFrameIdERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* dereferenceable(24) %1) #10
  %5 = tail call zeroext i1 @_ZN4quic23QuicControlFrameManager21OnControlFrameIdAckedEj(%"class.quic::QuicControlFrameManager"* %0, i32 %4)
  br i1 %5, label %6, label %87

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8
  %9 = icmp eq i8 %8, 4
  br i1 %9, label %10, label %87

10:                                               ; preds = %6
  %11 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %1, i64 0, i32 0, i32 0, i32 4
  %13 = bitcast i8** %12 to %"struct.quic::QuicWindowUpdateFrame"**
  %14 = load %"struct.quic::QuicWindowUpdateFrame"*, %"struct.quic::QuicWindowUpdateFrame"** %13, align 8
  %15 = getelementptr inbounds %"struct.quic::QuicWindowUpdateFrame", %"struct.quic::QuicWindowUpdateFrame"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %3, align 4
  %17 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 6
  %18 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %19 = zext i32 %16 to i64
  %20 = add i64 %18, %19
  %21 = zext i64 %20 to i128
  %22 = mul nuw i128 %21, 11376068507788127593
  %23 = lshr i128 %22, 64
  %24 = xor i128 %23, %22
  %25 = trunc i128 %24 to i64
  %26 = getelementptr inbounds %"class.absl::flat_hash_map", %"class.absl::flat_hash_map"* %17, i64 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 3
  %29 = load i64, i64* %28, align 8
  %30 = lshr i64 %25, 7
  %31 = ptrtoint i8* %27 to i64
  %32 = lshr i64 %31, 12
  %33 = xor i64 %30, %32
  %34 = trunc i128 %24 to i8
  %35 = and i8 %34, 127
  %36 = insertelement <16 x i8> undef, i8 %35, i32 0
  %37 = shufflevector <16 x i8> %36, <16 x i8> undef, <16 x i32> zeroinitializer
  %38 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %39 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %38, align 8
  br label %40

40:                                               ; preds = %69, %10
  %41 = phi i64 [ %33, %10 ], [ %71, %69 ]
  %42 = phi i64 [ 0, %10 ], [ %70, %69 ]
  %43 = and i64 %41, %29
  %44 = getelementptr inbounds i8, i8* %27, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp eq <16 x i8> %37, %46
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %65, label %50

50:                                               ; preds = %40
  %51 = zext i16 %48 to i32
  br label %52

52:                                               ; preds = %61, %50
  %53 = phi i32 [ %51, %50 ], [ %63, %61 ]
  %54 = tail call i32 @llvm.cttz.i32(i32 %53, i1 false) #10, !range !6
  %55 = zext i32 %54 to i64
  %56 = add i64 %43, %55
  %57 = and i64 %56, %29
  %58 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %39, i64 %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %16
  br i1 %60, label %72, label %61, !prof !2

61:                                               ; preds = %52
  %62 = add i32 %53, -1
  %63 = and i32 %62, %53
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %52

65:                                               ; preds = %61, %40
  %66 = icmp eq <16 x i8> %46, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %69, label %86, !prof !7

69:                                               ; preds = %65
  %70 = add i64 %42, 16
  %71 = add i64 %70, %43
  br label %40

72:                                               ; preds = %52
  %73 = getelementptr inbounds i8, i8* %27, i64 %57
  %74 = icmp ne i8* %73, null
  tail call void @llvm.assume(i1 %74) #10
  %75 = load i8, i8* %73, align 1
  %76 = icmp sgt i8 %75, -1
  br i1 %76, label %78, label %77, !prof !2

77:                                               ; preds = %72
  tail call void @llvm.trap() #10
  unreachable

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.absl::flat_hash_map", %"class.absl::flat_hash_map"* %17, i64 0, i32 0
  %80 = call dereferenceable(4) i32* @_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEEixIjS3_EEDTclsrT0_5valueclL_ZNS7_9addressofISD_EEPT_RSJ_EclL_ZNS7_7declvalIRSD_EEDTclsr3std3__1E9__declvalISJ_ELi0EEEvEEEEERSC_(%"class.absl::container_internal::raw_hash_map.56"* %79, i32* nonnull dereferenceable(4) %3)
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, %4
  br i1 %82, label %83, label %86

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.absl::flat_hash_map", %"class.absl::flat_hash_map"* %17, i64 0, i32 0, i32 0
  %85 = call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEE5eraseIjEEmRSC_(%"class.absl::container_internal::raw_hash_set.57"* %84, i32* nonnull dereferenceable(4) %3)
  br label %86

86:                                               ; preds = %65, %83, %78
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #10
  br label %87

87:                                               ; preds = %6, %86, %2
  %88 = phi i1 [ false, %2 ], [ true, %86 ], [ true, %6 ]
  ret i1 %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEE5eraseIjEEmRSC_(%"class.absl::container_internal::raw_hash_set.57"*, i32* dereferenceable(4)) local_unnamed_addr #6 comdat align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %5 = zext i32 %3 to i64
  %6 = add i64 %4, %5
  %7 = zext i64 %6 to i128
  %8 = mul nuw i128 %7, 11376068507788127593
  %9 = lshr i128 %8, 64
  %10 = xor i128 %9, %8
  %11 = trunc i128 %10 to i64
  %12 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 3
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %11, 7
  %17 = ptrtoint i8* %13 to i64
  %18 = lshr i64 %17, 12
  %19 = xor i64 %16, %18
  %20 = trunc i128 %10 to i8
  %21 = and i8 %20, 127
  %22 = insertelement <16 x i8> undef, i8 %21, i32 0
  %23 = shufflevector <16 x i8> %22, <16 x i8> undef, <16 x i32> zeroinitializer
  %24 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 1
  br label %25

25:                                               ; preds = %55, %2
  %26 = phi i64 [ %19, %2 ], [ %57, %55 ]
  %27 = phi i64 [ 0, %2 ], [ %56, %55 ]
  %28 = and i64 %26, %15
  %29 = getelementptr inbounds i8, i8* %13, i64 %28
  %30 = bitcast i8* %29 to <16 x i8>*
  %31 = load <16 x i8>, <16 x i8>* %30, align 1
  %32 = icmp eq <16 x i8> %23, %31
  %33 = bitcast <16 x i1> %32 to i16
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %51, label %35

35:                                               ; preds = %25
  %36 = zext i16 %33 to i32
  %37 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %24, align 8
  br label %38

38:                                               ; preds = %47, %35
  %39 = phi i32 [ %36, %35 ], [ %49, %47 ]
  %40 = tail call i32 @llvm.cttz.i32(i32 %39, i1 false) #10, !range !6
  %41 = zext i32 %40 to i64
  %42 = add i64 %28, %41
  %43 = and i64 %42, %15
  %44 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %37, i64 %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, %3
  br i1 %46, label %58, label %47, !prof !2

47:                                               ; preds = %38
  %48 = add i32 %39, -1
  %49 = and i32 %48, %39
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %38

51:                                               ; preds = %47, %25
  %52 = icmp eq <16 x i8> %31, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %53 = bitcast <16 x i1> %52 to i16
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %55, label %105, !prof !7

55:                                               ; preds = %51
  %56 = add i64 %27, 16
  %57 = add i64 %56, %28
  br label %25

58:                                               ; preds = %38
  %59 = getelementptr inbounds i8, i8* %13, i64 %43
  %60 = icmp ne i8* %59, null
  tail call void @llvm.assume(i1 %60) #10
  %61 = load i8, i8* %59, align 1
  %62 = icmp sgt i8 %61, -1
  br i1 %62, label %64, label %63, !prof !2

63:                                               ; preds = %58
  tail call void @llvm.trap() #10
  unreachable

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 2
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, -1
  store i64 %67, i64* %65, align 8
  %68 = add i64 %43, -16
  %69 = and i64 %68, %15
  %70 = bitcast i8* %59 to <16 x i8>*
  %71 = load <16 x i8>, <16 x i8>* %70, align 1
  %72 = icmp eq <16 x i8> %71, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %73 = bitcast <16 x i1> %72 to i16
  %74 = getelementptr inbounds i8, i8* %13, i64 %69
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1
  %77 = icmp eq <16 x i8> %76, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %78 = bitcast <16 x i1> %77 to i16
  %79 = icmp ne i16 %78, 0
  %80 = icmp ne i16 %73, 0
  %81 = and i1 %80, %79
  br i1 %81, label %82, label %92

82:                                               ; preds = %64
  %83 = zext i16 %73 to i32
  %84 = zext i16 %78 to i32
  %85 = tail call i32 @llvm.cttz.i32(i32 %83, i1 false) #10, !range !6
  %86 = shl nuw i32 %84, 16
  %87 = tail call i32 @llvm.ctlz.i32(i32 %86, i1 false) #10, !range !6
  %88 = add nuw nsw i32 %87, %85
  %89 = icmp ult i32 %88, 16
  %90 = zext i1 %89 to i64
  %91 = select i1 %89, i8 -128, i8 -2
  br label %92

92:                                               ; preds = %64, %82
  %93 = phi i64 [ 0, %64 ], [ %90, %82 ]
  %94 = phi i8 [ -2, %64 ], [ %91, %82 ]
  store i8 %94, i8* %59, align 1
  %95 = load i8*, i8** %12, align 8
  %96 = add i64 %43, -15
  %97 = load i64, i64* %14, align 8
  %98 = and i64 %97, %96
  %99 = and i64 %97, 15
  %100 = add i64 %98, %99
  %101 = getelementptr inbounds i8, i8* %95, i64 %100
  store i8 %94, i8* %101, align 1
  %102 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %103, %93
  store i64 %104, i64* %102, align 8
  br label %105

105:                                              ; preds = %51, %92
  %106 = phi i64 [ 1, %92 ], [ 0, %51 ]
  ret i64 %106
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager18OnControlFrameLostERKNS_9QuicFrameE(%"class.quic::QuicControlFrameManager"*, %"struct.quic::QuicFrame"* dereferenceable(24)) local_unnamed_addr #6 align 2 {
  %3 = alloca %"struct.std::__1::pair.455", align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.logging::LogMessage", align 8
  %8 = tail call i32 @_ZN4quic17GetControlFrameIdERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* dereferenceable(24) %1) #10
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %217, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i32 %8, %12
  br i1 %13, label %39, label %14

14:                                               ; preds = %10
  %15 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %15, label %16, label %21

16:                                               ; preds = %14
  %17 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %17) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.3, i64 0, i64 0), i32 215, i32 2) #10
  %18 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %19 = bitcast %"class.std::__1::basic_ostringstream"* %18 to %"class.std::__1::basic_ostream"*
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0), i64 40) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %17) #10
  br label %21

21:                                               ; preds = %14, %16
  %22 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 5
  %23 = load %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.quic::QuicControlFrameManager::DelegateInterface"** %22, align 8
  %24 = call i8* @_Znwm(i64 48) #13
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast i64* %26 to <2 x i64>*
  store <2 x i64> <i64 40, i64 -9223372036854775760>, <2 x i64>* %27, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %24, i8* align 1 getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0), i64 40, i1 false) #10
  %28 = getelementptr inbounds i8, i8* %24, i64 40
  store i8 0, i8* %28, align 1
  %29 = bitcast %"class.quic::QuicControlFrameManager::DelegateInterface"* %23 to void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)***
  %30 = load void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %30, i64 2
  %32 = load void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %31, align 8
  call void %32(%"class.quic::QuicControlFrameManager::DelegateInterface"* %23, i32 1, %"class.std::__1::basic_string"* nonnull %6) #10
  %33 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %217

37:                                               ; preds = %21
  %38 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %38) #13
  br label %217

39:                                               ; preds = %10
  %40 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp ult i32 %8, %41
  br i1 %42, label %217, label %43

43:                                               ; preds = %39
  %44 = sub i32 %8, %41
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, %45
  %49 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %48, %50
  %52 = select i1 %51, i64 0, i64 %50
  %53 = sub i64 %48, %52
  %54 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 0
  %55 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %54, align 8
  %56 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %55, i64 %53
  %57 = tail call i32 @_ZN4quic17GetControlFrameIdERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* dereferenceable(24) %56) #10
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %217, label %59

59:                                               ; preds = %43
  %60 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4
  %61 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %62 = zext i32 %8 to i64
  %63 = add i64 %61, %62
  %64 = zext i64 %63 to i128
  %65 = mul nuw i128 %64, 11376068507788127593
  %66 = lshr i128 %65, 64
  %67 = xor i128 %66, %65
  %68 = trunc i128 %67 to i64
  %69 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 3
  %72 = load i64, i64* %71, align 8
  %73 = lshr i64 %68, 7
  %74 = ptrtoint i8* %70 to i64
  %75 = lshr i64 %74, 12
  %76 = xor i64 %73, %75
  %77 = trunc i128 %67 to i8
  %78 = and i8 %77, 127
  %79 = insertelement <16 x i8> undef, i8 %78, i32 0
  %80 = shufflevector <16 x i8> %79, <16 x i8> undef, <16 x i32> zeroinitializer
  %81 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1
  %82 = load %"struct.std::__1::pair.41"**, %"struct.std::__1::pair.41"*** %81, align 8
  br label %83

83:                                               ; preds = %114, %59
  %84 = phi i64 [ %76, %59 ], [ %116, %114 ]
  %85 = phi i64 [ 0, %59 ], [ %115, %114 ]
  %86 = and i64 %84, %72
  %87 = getelementptr inbounds i8, i8* %70, i64 %86
  %88 = bitcast i8* %87 to <16 x i8>*
  %89 = load <16 x i8>, <16 x i8>* %88, align 1
  %90 = icmp eq <16 x i8> %80, %89
  %91 = bitcast <16 x i1> %90 to i16
  %92 = icmp eq i16 %91, 0
  br i1 %92, label %110, label %93

93:                                               ; preds = %83
  %94 = zext i16 %91 to i32
  br label %95

95:                                               ; preds = %106, %93
  %96 = phi i32 [ %94, %93 ], [ %108, %106 ]
  %97 = tail call i32 @llvm.cttz.i32(i32 %96, i1 false) #10, !range !6
  %98 = zext i32 %97 to i64
  %99 = add i64 %86, %98
  %100 = and i64 %99, %72
  %101 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %82, i64 %100
  %102 = load %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %101, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.41", %"struct.std::__1::pair.41"* %102, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, %8
  br i1 %105, label %117, label %106, !prof !2

106:                                              ; preds = %95
  %107 = add i32 %96, -1
  %108 = and i32 %107, %96
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %95

110:                                              ; preds = %106, %83
  %111 = icmp eq <16 x i8> %89, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %112 = bitcast <16 x i1> %111 to i16
  %113 = icmp eq i16 %112, 0
  br i1 %113, label %114, label %123, !prof !7

114:                                              ; preds = %110
  %115 = add i64 %85, 16
  %116 = add i64 %115, %86
  br label %83

117:                                              ; preds = %95
  %118 = getelementptr inbounds i8, i8* %70, i64 %100
  %119 = icmp ne i8* %118, null
  tail call void @llvm.assume(i1 %119) #10
  %120 = load i8, i8* %118, align 1
  %121 = icmp sgt i8 %120, -1
  br i1 %121, label %126, label %122, !prof !2

122:                                              ; preds = %117
  tail call void @llvm.trap() #10
  unreachable

123:                                              ; preds = %110
  %124 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %125 = ptrtoint %"struct.std::__1::__list_node_base"* %124 to i64
  br label %130

126:                                              ; preds = %117
  %127 = getelementptr inbounds %"struct.std::__1::pair.41", %"struct.std::__1::pair.41"* %102, i64 0, i32 1
  %128 = bitcast %"class.std::__1::__list_iterator"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  br label %130

130:                                              ; preds = %123, %126
  %131 = phi i64 [ %125, %123 ], [ %129, %126 ]
  %132 = inttoptr i64 %131 to %"struct.std::__1::__list_node_base"*
  %133 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1, i32 0, i32 0
  %134 = icmp eq %"struct.std::__1::__list_node_base"* %133, %132
  br i1 %134, label %135, label %217

135:                                              ; preds = %130
  %136 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #10
  store i64 %62, i64* %4, align 8
  %137 = bitcast %"struct.std::__1::pair.455"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #10
  %138 = getelementptr inbounds %"struct.std::__1::pair.455", %"struct.std::__1::pair.455"* %3, i64 0, i32 0, i32 0
  %139 = getelementptr inbounds %"struct.std::__1::pair.455", %"struct.std::__1::pair.455"* %3, i64 0, i32 0, i32 1, i32 0
  %140 = getelementptr inbounds %"struct.std::__1::pair.455", %"struct.std::__1::pair.455"* %3, i64 0, i32 1
  %141 = getelementptr inbounds %"class.quiche::QuicheLinkedHashMap", %"class.quiche::QuicheLinkedHashMap"* %60, i64 0, i32 0, i32 0
  %142 = bitcast i64* %4 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 24, i1 false) #10
  call void @_ZN4absl18container_internal12raw_hash_mapINS0_17NodeHashMapPolicyIjNSt3__115__list_iteratorINS3_4pairIjbEEPvEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS5_IKjS8_EEEEE16try_emplace_implIRSG_JEEENS5_INS0_12raw_hash_setIS9_SC_SE_SI_E8iteratorEbEEOT_DpOT0_(%"struct.std::__1::pair.455"* nonnull sret %3, %"class.absl::container_internal::raw_hash_map"* %141, i32* nonnull dereferenceable(4) %142) #10
  %143 = load i8*, i8** %138, align 8
  %144 = load %"struct.std::__1::pair.41"**, %"struct.std::__1::pair.41"*** %139, align 8
  %145 = load i8, i8* %140, align 8, !range !11
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %158

147:                                              ; preds = %135
  %148 = icmp eq i8* %143, null
  br i1 %148, label %152, label %149, !prof !7

149:                                              ; preds = %147
  %150 = load i8, i8* %143, align 1
  %151 = icmp sgt i8 %150, -1
  br i1 %151, label %153, label %152, !prof !2

152:                                              ; preds = %149, %147
  call void @llvm.trap() #10
  unreachable

153:                                              ; preds = %149
  %154 = load %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %144, align 8
  %155 = getelementptr inbounds %"struct.std::__1::pair.41", %"struct.std::__1::pair.41"* %154, i64 0, i32 1
  %156 = bitcast %"class.std::__1::__list_iterator"* %155 to i64*
  %157 = load i64, i64* %156, align 8
  br label %188

158:                                              ; preds = %135
  %159 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1
  %160 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %159, i64 0, i32 0, i32 0
  %161 = call i8* @_Znwm(i64 24) #13, !noalias !12
  %162 = getelementptr inbounds i8, i8* %161, i64 16
  %163 = bitcast i8* %162 to i64*
  %164 = load i64, i64* %4, align 8
  store i64 %164, i64* %163, align 4
  %165 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %159, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %165, align 8
  %167 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %166, i64 0, i32 1
  %168 = bitcast %"struct.std::__1::__list_node_base"** %167 to i8**
  store i8* %161, i8** %168, align 8
  %169 = bitcast %"class.std::__1::list"* %159 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = bitcast i8* %161 to i64*
  store i64 %170, i64* %171, align 8
  %172 = bitcast %"class.std::__1::list"* %159 to i8**
  store i8* %161, i8** %172, align 8
  %173 = getelementptr inbounds i8, i8* %161, i64 8
  %174 = bitcast i8* %173 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %160, %"struct.std::__1::__list_node_base"** %174, align 8
  %175 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %176 = load i64, i64* %175, align 8
  %177 = add i64 %176, 1
  store i64 %177, i64* %175, align 8
  %178 = ptrtoint i8* %161 to i64
  %179 = icmp eq i8* %143, null
  br i1 %179, label %183, label %180, !prof !7

180:                                              ; preds = %158
  %181 = load i8, i8* %143, align 1
  %182 = icmp sgt i8 %181, -1
  br i1 %182, label %184, label %183, !prof !2

183:                                              ; preds = %180, %158
  call void @llvm.trap() #10
  unreachable

184:                                              ; preds = %180
  %185 = load %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %144, align 8
  %186 = getelementptr inbounds %"struct.std::__1::pair.41", %"struct.std::__1::pair.41"* %185, i64 0, i32 1
  %187 = bitcast %"class.std::__1::__list_iterator"* %186 to i64*
  store i64 %178, i64* %187, align 8
  br label %188

188:                                              ; preds = %153, %184
  %189 = phi i64 [ %157, %153 ], [ %178, %184 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #10
  %190 = inttoptr i64 %189 to %"struct.std::__1::__list_node"*
  %191 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %190, i64 0, i32 1, i32 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #10
  store i8 1, i8* %191, align 1
  %192 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %192, label %193, label %217

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %195 = load i64, i64* %194, align 8
  %196 = load i64, i64* %46, align 8
  %197 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = icmp ult i64 %198, %196
  br i1 %199, label %200, label %203

200:                                              ; preds = %193
  %201 = load i64, i64* %49, align 8
  %202 = add i64 %201, %198
  br label %203

203:                                              ; preds = %193, %200
  %204 = phi i64 [ %202, %200 ], [ %198, %193 ]
  %205 = sub i64 %204, %196
  %206 = icmp ugt i64 %195, %205
  br i1 %206, label %207, label %217

207:                                              ; preds = %203
  %208 = bitcast %"class.logging::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %208) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %7, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.3, i64 0, i64 0), i32 229, i32 2) #10
  %209 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %7, i64 0, i32 2
  %210 = bitcast %"class.std::__1::basic_ostringstream"* %209 to %"class.std::__1::basic_ostream"*
  %211 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %210, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i64 16) #10
  %212 = load i32, i32* %40, align 4
  %213 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %211, i32 %212) #10
  %214 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %213, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i64 17) #10
  %215 = load i32, i32* %11, align 8
  %216 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %214, i32 %215) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %208) #10
  br label %217

217:                                              ; preds = %130, %207, %188, %203, %37, %21, %39, %43, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4quic23QuicControlFrameManager25IsControlFrameOutstandingERKNS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* nocapture readonly, %"struct.quic::QuicFrame"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZN4quic17GetControlFrameIdERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* dereferenceable(24) %1) #10
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %40, label %5

5:                                                ; preds = %2
  %6 = zext i32 %3 to i64
  %7 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp ult i64 %13, %11
  br i1 %14, label %15, label %19

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %17, %13
  br label %19

19:                                               ; preds = %5, %15
  %20 = phi i64 [ %18, %15 ], [ %13, %5 ]
  %21 = sub i64 %9, %11
  %22 = add i64 %21, %20
  %23 = icmp ule i64 %22, %6
  %24 = icmp ult i32 %3, %8
  %25 = or i1 %24, %23
  br i1 %25, label %40, label %26

26:                                               ; preds = %19
  %27 = sub i32 %3, %8
  %28 = zext i32 %27 to i64
  %29 = add i64 %11, %28
  %30 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 0, i64 %31
  %34 = sub i64 %29, %33
  %35 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 0
  %36 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %35, align 8
  %37 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %36, i64 %34
  %38 = tail call i32 @_ZN4quic17GetControlFrameIdERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* dereferenceable(24) %37) #10
  %39 = icmp ne i32 %38, 0
  br label %40

40:                                               ; preds = %19, %26, %2
  %41 = phi i1 [ false, %2 ], [ false, %19 ], [ %39, %26 ]
  ret i1 %41
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic23QuicControlFrameManager24HasPendingRetransmissionEv(%"class.quic::QuicControlFrameManager"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp ne i64 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK4quic23QuicControlFrameManager14WillingToWriteEv(%"class.quic::QuicControlFrameManager"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %26

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, %13
  br i1 %16, label %17, label %21

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, %15
  br label %21

21:                                               ; preds = %5, %17
  %22 = phi i64 [ %20, %17 ], [ %15, %5 ]
  %23 = sub i64 %11, %13
  %24 = add i64 %23, %22
  %25 = icmp ugt i64 %24, %8
  br label %26

26:                                               ; preds = %1, %21
  %27 = phi i1 [ true, %1 ], [ %25, %21 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4quic23QuicControlFrameManager25NextPendingRetransmissionEv(%"struct.quic::QuicFrame"* noalias nocapture sret, %"class.quic::QuicControlFrameManager"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %4, label %5, label %15

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %1, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %10) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.3, i64 0, i64 0), i32 257, i32 2) #10
  %11 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %11 to %"class.std::__1::basic_ostream"*
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.10, i64 0, i64 0), i64 66) #10
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i64 20) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %10) #10
  br label %15

15:                                               ; preds = %5, %2, %9
  %16 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %1, i64 0, i32 4, i32 1, i32 0, i32 0, i32 1
  %17 = bitcast %"struct.std::__1::__list_node_base"** %16 to %"struct.std::__1::__list_node"**
  %18 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %18, i64 0, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %1, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = sub i32 %20, %22
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %1, i64 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, %24
  %28 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %1, i64 0, i32 0, i32 2, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %27, %29
  %31 = select i1 %30, i64 0, i64 %29
  %32 = sub i64 %27, %31
  %33 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %1, i64 0, i32 0, i32 2, i32 0
  %34 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %33, align 8
  %35 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %34, i64 %32, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager10OnCanWriteEv(%"class.quic::QuicControlFrameManager"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.quic::QuicFrame", align 8
  %3 = alloca %"struct.quic::QuicFrame", align 8
  %4 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %22, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 5
  br label %11

11:                                               ; preds = %19, %7
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false) #10
  call void @_ZNK4quic23QuicControlFrameManager25NextPendingRetransmissionEv(%"struct.quic::QuicFrame"* nonnull sret %2, %"class.quic::QuicControlFrameManager"* %0) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false) #10
  call void @_ZN4quic31CopyRetransmittableControlFrameERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* nonnull sret %3, %"struct.quic::QuicFrame"* nonnull dereferenceable(24) %2) #10
  %12 = load %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.quic::QuicControlFrameManager::DelegateInterface"** %10, align 8
  %13 = bitcast %"class.quic::QuicControlFrameManager::DelegateInterface"* %12 to i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)***
  %14 = load i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)**, i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)*, i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)** %14, i64 3
  %16 = load i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)*, i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)** %15, align 8
  %17 = call zeroext i1 %16(%"class.quic::QuicControlFrameManager::DelegateInterface"* %12, %"struct.quic::QuicFrame"* nonnull dereferenceable(24) %3, i8 signext 3) #10
  br i1 %17, label %19, label %18

18:                                               ; preds = %11
  call void @_ZN4quic11DeleteFrameEPNS_9QuicFrameE(%"struct.quic::QuicFrame"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  br label %23

19:                                               ; preds = %11
  call void @_ZN4quic23QuicControlFrameManager18OnControlFrameSentERKNS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* %0, %"struct.quic::QuicFrame"* nonnull dereferenceable(24) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  %20 = load i64, i64* %4, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %23, label %11

22:                                               ; preds = %1
  tail call void @_ZN4quic23QuicControlFrameManager19WriteBufferedFramesEv(%"class.quic::QuicControlFrameManager"* %0)
  br label %23

23:                                               ; preds = %19, %18, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QuicControlFrameManager26WritePendingRetransmissionEv(%"class.quic::QuicControlFrameManager"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.quic::QuicFrame", align 8
  %3 = alloca %"struct.quic::QuicFrame", align 8
  %4 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 4, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %22, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 5
  br label %11

11:                                               ; preds = %7, %19
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false)
  call void @_ZNK4quic23QuicControlFrameManager25NextPendingRetransmissionEv(%"struct.quic::QuicFrame"* nonnull sret %2, %"class.quic::QuicControlFrameManager"* %0)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  call void @_ZN4quic31CopyRetransmittableControlFrameERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* nonnull sret %3, %"struct.quic::QuicFrame"* nonnull dereferenceable(24) %2) #10
  %12 = load %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.quic::QuicControlFrameManager::DelegateInterface"** %10, align 8
  %13 = bitcast %"class.quic::QuicControlFrameManager::DelegateInterface"* %12 to i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)***
  %14 = load i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)**, i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)*** %13, align 8
  %15 = getelementptr inbounds i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)*, i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)** %14, i64 3
  %16 = load i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)*, i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)** %15, align 8
  %17 = call zeroext i1 %16(%"class.quic::QuicControlFrameManager::DelegateInterface"* %12, %"struct.quic::QuicFrame"* nonnull dereferenceable(24) %3, i8 signext 3) #10
  br i1 %17, label %19, label %18

18:                                               ; preds = %11
  call void @_ZN4quic11DeleteFrameEPNS_9QuicFrameE(%"struct.quic::QuicFrame"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  br label %22

19:                                               ; preds = %11
  call void @_ZN4quic23QuicControlFrameManager18OnControlFrameSentERKNS_9QuicFrameE(%"class.quic::QuicControlFrameManager"* %0, %"struct.quic::QuicFrame"* nonnull dereferenceable(24) %2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  %20 = load i64, i64* %4, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %11

22:                                               ; preds = %19, %1, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4quic23QuicControlFrameManager22RetransmitControlFrameERKNS_9QuicFrameENS_16TransmissionTypeE(%"class.quic::QuicControlFrameManager"* nocapture readonly, %"struct.quic::QuicFrame"* dereferenceable(24), i8 signext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"struct.quic::QuicFrame", align 8
  %7 = tail call i32 @_ZN4quic17GetControlFrameIdERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* dereferenceable(24) %1) #10
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %70, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %7, %11
  br i1 %12, label %38, label %13

13:                                               ; preds = %9
  %14 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %14, label %15, label %20

15:                                               ; preds = %13
  %16 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %16) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.3, i64 0, i64 0), i32 284, i32 2) #10
  %17 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %17 to %"class.std::__1::basic_ostream"*
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0), i64 38) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %16) #10
  br label %20

20:                                               ; preds = %13, %15
  %21 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 5
  %22 = load %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.quic::QuicControlFrameManager::DelegateInterface"** %21, align 8
  %23 = call i8* @_Znwm(i64 48) #13
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %26 = bitcast i64* %25 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %26, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %23, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0), i64 38, i1 false) #10
  %27 = getelementptr inbounds i8, i8* %23, i64 38
  store i8 0, i8* %27, align 1
  %28 = bitcast %"class.quic::QuicControlFrameManager::DelegateInterface"* %22 to void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)***
  %29 = load void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)**, void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %29, i64 2
  %31 = load void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)*, void (%"class.quic::QuicControlFrameManager::DelegateInterface"*, i32, %"class.std::__1::basic_string"*)** %30, align 8
  call void %31(%"class.quic::QuicControlFrameManager::DelegateInterface"* %22, i32 1, %"class.std::__1::basic_string"* nonnull %5) #10
  %32 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %70

36:                                               ; preds = %20
  %37 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %37) #13
  br label %70

38:                                               ; preds = %9
  %39 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = icmp ult i32 %7, %40
  br i1 %41, label %70, label %42

42:                                               ; preds = %38
  %43 = sub i32 %7, %40
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = add i64 %46, %44
  %48 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %47, %49
  %51 = select i1 %50, i64 0, i64 %49
  %52 = sub i64 %47, %51
  %53 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 0, i32 2, i32 0
  %54 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %53, align 8
  %55 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %54, i64 %52
  %56 = tail call i32 @_ZN4quic17GetControlFrameIdERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* dereferenceable(24) %55) #10
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %70, label %58

58:                                               ; preds = %42
  %59 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %6, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 24, i1 false)
  call void @_ZN4quic31CopyRetransmittableControlFrameERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* nonnull sret %6, %"struct.quic::QuicFrame"* dereferenceable(24) %1) #10
  %60 = getelementptr inbounds %"class.quic::QuicControlFrameManager", %"class.quic::QuicControlFrameManager"* %0, i64 0, i32 5
  %61 = load %"class.quic::QuicControlFrameManager::DelegateInterface"*, %"class.quic::QuicControlFrameManager::DelegateInterface"** %60, align 8
  %62 = bitcast %"class.quic::QuicControlFrameManager::DelegateInterface"* %61 to i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)***
  %63 = load i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)**, i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)*** %62, align 8
  %64 = getelementptr inbounds i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)*, i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)** %63, i64 3
  %65 = load i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)*, i1 (%"class.quic::QuicControlFrameManager::DelegateInterface"*, %"struct.quic::QuicFrame"*, i8)** %64, align 8
  %66 = call zeroext i1 %65(%"class.quic::QuicControlFrameManager::DelegateInterface"* %61, %"struct.quic::QuicFrame"* nonnull dereferenceable(24) %6, i8 signext %2) #10
  br i1 %66, label %68, label %67

67:                                               ; preds = %58
  call void @_ZN4quic11DeleteFrameEPNS_9QuicFrameE(%"struct.quic::QuicFrame"* nonnull %6) #10
  br label %68

68:                                               ; preds = %58, %67
  %69 = phi i1 [ false, %67 ], [ true, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #10
  br label %70

70:                                               ; preds = %36, %20, %38, %42, %3, %68
  %71 = phi i1 [ %69, %68 ], [ true, %3 ], [ true, %42 ], [ true, %38 ], [ false, %20 ], [ false, %36 ]
  ret i1 %71
}

declare void @_ZN4quic31CopyRetransmittableControlFrameERKNS_9QuicFrameE(%"struct.quic::QuicFrame"* sret, %"struct.quic::QuicFrame"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4quic17SetControlFrameIdEjPNS_9QuicFrameE(i32, %"struct.quic::QuicFrame"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEjPc(i32, i8*) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !11
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6quiche19QuicheCircularDequeIN4quic9QuicFrameELm3ENSt3__19allocatorIS2_EEE8RelocateEm(%"class.quiche::QuicheCircularDeque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %4
  br i1 %7, label %8, label %12

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %6
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i64 [ %11, %8 ], [ %6, %2 ]
  %14 = sub i64 %13, %4
  %15 = add i64 %1, 1
  %16 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2
  %17 = icmp ugt i64 %15, 768614336404564650
  br i1 %17, label %18, label %19

18:                                               ; preds = %12
  tail call void @abort() #14
  unreachable

19:                                               ; preds = %12
  %20 = mul i64 %15, 24
  %21 = tail call i8* @_Znwm(i64 %20) #13
  %22 = bitcast i8* %21 to %"struct.quic::QuicFrame"*
  %23 = icmp ugt i64 %6, %4
  br i1 %23, label %24, label %30

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 0
  %26 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %25, align 8
  %27 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %26, i64 %4, i32 0, i32 0, i32 0
  %28 = sub i64 %6, %4
  %29 = mul i64 %28, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %27, i64 %29, i1 false) #10
  br label %42

30:                                               ; preds = %19
  br i1 %7, label %31, label %42

31:                                               ; preds = %30
  %32 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %33, %4
  %35 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 0
  %36 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %35, align 8
  %37 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %36, i64 %4, i32 0, i32 0, i32 0
  %38 = mul i64 %34, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* align 8 %37, i64 %38, i1 false) #10
  %39 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %22, i64 %34, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %36, i64 0, i32 0, i32 0, i32 0
  %41 = mul i64 %6, 24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %41, i1 false) #10
  br label %42

42:                                               ; preds = %30, %31, %24
  %43 = getelementptr inbounds %"class.quiche::QuicheCircularDeque", %"class.quiche::QuicheCircularDeque"* %0, i64 0, i32 2, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData", %"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData"* %16, i64 0, i32 0
  %48 = load %"struct.quic::QuicFrame"*, %"struct.quic::QuicFrame"** %47, align 8
  %49 = getelementptr inbounds %"struct.quic::QuicFrame", %"struct.quic::QuicFrame"* %48, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %49) #13
  br label %50

50:                                               ; preds = %42, %46
  %51 = bitcast %"struct.quiche::QuicheCircularDeque<quic::QuicFrame, 3, std::__1::allocator<quic::QuicFrame> >::AllocatorAndData"* %16 to i8**
  store i8* %21, i8** %51, align 8
  store i64 %15, i64* %43, align 8
  store i64 0, i64* %3, align 8
  store i64 %14, i64* %5, align 8
  ret void
}

declare void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* sret, %"class.absl::string_view"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.assume(i1) #10

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #11

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set.57"*, i64) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #10, !range !6
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !2

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.57"* %0, i64 1) #10
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.57"* %0) #10
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.57"* %0, i64 %58) #10
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #10, !range !6
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set.57"*, i64) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 1
  %6 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 19
  %11 = and i64 %10, -4
  %12 = shl i64 %1, 3
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #13
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"union.absl::container_internal::map_slot_type"** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #10
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %96, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %92
  br i1 %24, label %96, label %95

28:                                               ; preds = %25, %92
  %29 = phi i64 [ 0, %25 ], [ %93, %92 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %92

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %6, i64 %29
  %35 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %34, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = add i64 %26, %37
  %39 = zext i64 %38 to i128
  %40 = mul nuw i128 %39, 11376068507788127593
  %41 = lshr i128 %40, 64
  %42 = xor i128 %41, %40
  %43 = trunc i128 %42 to i64
  %44 = load i8*, i8** %3, align 8
  %45 = load i64, i64* %7, align 8
  %46 = lshr i64 %43, 7
  %47 = ptrtoint i8* %44 to i64
  %48 = lshr i64 %47, 12
  %49 = xor i64 %46, %48
  %50 = and i64 %49, %45
  %51 = getelementptr inbounds i8, i8* %44, i64 %50
  %52 = bitcast i8* %51 to <16 x i8>*
  %53 = load <16 x i8>, <16 x i8>* %52, align 1
  %54 = icmp slt <16 x i8> %53, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %55 = bitcast <16 x i1> %54 to i16
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %57, label %69

57:                                               ; preds = %33, %57
  %58 = phi i64 [ %62, %57 ], [ %50, %33 ]
  %59 = phi i64 [ %60, %57 ], [ 0, %33 ]
  %60 = add i64 %59, 16
  %61 = add i64 %60, %58
  %62 = and i64 %61, %45
  %63 = getelementptr inbounds i8, i8* %44, i64 %62
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1
  %66 = icmp slt <16 x i8> %65, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %67 = bitcast <16 x i1> %66 to i16
  %68 = icmp eq i16 %67, 0
  br i1 %68, label %57, label %69

69:                                               ; preds = %57, %33
  %70 = phi i64 [ %50, %33 ], [ %62, %57 ]
  %71 = phi i16 [ %55, %33 ], [ %67, %57 ]
  %72 = zext i16 %71 to i32
  %73 = tail call i32 @llvm.cttz.i32(i32 %72, i1 false) #10, !range !6
  %74 = zext i32 %73 to i64
  %75 = add i64 %70, %74
  %76 = and i64 %75, %45
  %77 = trunc i128 %42 to i8
  %78 = and i8 %77, 127
  %79 = getelementptr inbounds i8, i8* %44, i64 %76
  store i8 %78, i8* %79, align 1
  %80 = load i8*, i8** %3, align 8
  %81 = add i64 %76, -15
  %82 = load i64, i64* %7, align 8
  %83 = and i64 %81, %82
  %84 = and i64 %82, 15
  %85 = add i64 %83, %84
  %86 = getelementptr inbounds i8, i8* %80, i64 %85
  store i8 %78, i8* %86, align 1
  %87 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %5, align 8
  %88 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %87, i64 %76
  %89 = bitcast %"union.absl::container_internal::map_slot_type"* %88 to i64*
  %90 = bitcast %"union.absl::container_internal::map_slot_type"* %34 to i64*
  %91 = load i64, i64* %90, align 4
  store i64 %91, i64* %89, align 4
  br label %92

92:                                               ; preds = %28, %69
  %93 = add nuw i64 %29, 1
  %94 = icmp eq i64 %93, %8
  br i1 %94, label %27, label %28

95:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #13
  br label %96

96:                                               ; preds = %2, %27, %95
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set.57"*) local_unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #10
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %123, %1
  %12 = phi i64 [ 0, %1 ], [ %125, %123 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set.57", %"class.absl::container_internal::raw_hash_set.57"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %123
  %20 = phi i64 [ %6, %8 ], [ %126, %123 ]
  %21 = phi i64 [ 0, %8 ], [ %125, %123 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %123

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  %29 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %28, i64 %21, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = add i64 %10, %31
  %33 = zext i64 %32 to i128
  %34 = mul nuw i128 %33, 11376068507788127593
  %35 = lshr i128 %34, 64
  %36 = xor i128 %35, %34
  %37 = trunc i128 %36 to i64
  %38 = lshr i64 %37, 7
  %39 = lshr i64 %27, 12
  %40 = xor i64 %38, %39
  %41 = and i64 %40, %20
  %42 = getelementptr inbounds i8, i8* %22, i64 %41
  %43 = bitcast i8* %42 to <16 x i8>*
  %44 = load <16 x i8>, <16 x i8>* %43, align 1
  %45 = icmp slt <16 x i8> %44, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %46 = bitcast <16 x i1> %45 to i16
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %26, %48
  %49 = phi i64 [ %53, %48 ], [ %41, %26 ]
  %50 = phi i64 [ %51, %48 ], [ 0, %26 ]
  %51 = add i64 %50, 16
  %52 = add i64 %51, %49
  %53 = and i64 %52, %20
  %54 = getelementptr inbounds i8, i8* %22, i64 %53
  %55 = bitcast i8* %54 to <16 x i8>*
  %56 = load <16 x i8>, <16 x i8>* %55, align 1
  %57 = icmp slt <16 x i8> %56, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %58 = bitcast <16 x i1> %57 to i16
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %48, label %60

60:                                               ; preds = %48, %26
  %61 = phi i64 [ %41, %26 ], [ %53, %48 ]
  %62 = phi i16 [ %46, %26 ], [ %58, %48 ]
  %63 = zext i16 %62 to i32
  %64 = tail call i32 @llvm.cttz.i32(i32 %63, i1 false) #10, !range !6
  %65 = zext i32 %64 to i64
  %66 = add i64 %61, %65
  %67 = and i64 %66, %20
  %68 = sub i64 %67, %41
  %69 = sub i64 %21, %41
  %70 = xor i64 %68, %69
  %71 = and i64 %70, %20
  %72 = icmp ult i64 %71, 16
  br i1 %72, label %73, label %83, !prof !2

73:                                               ; preds = %60
  %74 = trunc i128 %36 to i8
  %75 = and i8 %74, 127
  store i8 %75, i8* %23, align 1
  %76 = load i8*, i8** %2, align 8
  %77 = add i64 %21, -15
  %78 = load i64, i64* %4, align 8
  %79 = and i64 %78, %77
  %80 = and i64 %78, 15
  %81 = add i64 %79, %80
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  store i8 %75, i8* %82, align 1
  br label %123

83:                                               ; preds = %60
  %84 = getelementptr inbounds i8, i8* %22, i64 %67
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, -128
  %87 = trunc i128 %36 to i8
  %88 = and i8 %87, 127
  store i8 %88, i8* %84, align 1
  %89 = load i8*, i8** %2, align 8
  %90 = add i64 %67, -15
  %91 = load i64, i64* %4, align 8
  %92 = and i64 %91, %90
  %93 = and i64 %91, 15
  %94 = add i64 %92, %93
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  store i8 %88, i8* %95, align 1
  %96 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  br i1 %86, label %97, label %112

97:                                               ; preds = %83
  %98 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %96, i64 %67
  %99 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %96, i64 %21
  %100 = bitcast %"union.absl::container_internal::map_slot_type"* %98 to i64*
  %101 = bitcast %"union.absl::container_internal::map_slot_type"* %99 to i64*
  %102 = load i64, i64* %101, align 4
  store i64 %102, i64* %100, align 4
  %103 = load i8*, i8** %2, align 8
  %104 = getelementptr inbounds i8, i8* %103, i64 %21
  store i8 -128, i8* %104, align 1
  %105 = load i8*, i8** %2, align 8
  %106 = add i64 %21, -15
  %107 = load i64, i64* %4, align 8
  %108 = and i64 %107, %106
  %109 = and i64 %107, 15
  %110 = add i64 %108, %109
  %111 = getelementptr inbounds i8, i8* %105, i64 %110
  store i8 -128, i8* %111, align 1
  br label %123

112:                                              ; preds = %83
  %113 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %96, i64 %21
  %114 = bitcast %"union.absl::container_internal::map_slot_type"* %113 to i64*
  %115 = load i64, i64* %114, align 4
  %116 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %96, i64 %67
  %117 = bitcast %"union.absl::container_internal::map_slot_type"* %116 to i64*
  %118 = load i64, i64* %117, align 4
  store i64 %118, i64* %114, align 4
  %119 = load %"union.absl::container_internal::map_slot_type"*, %"union.absl::container_internal::map_slot_type"** %9, align 8
  %120 = getelementptr inbounds %"union.absl::container_internal::map_slot_type", %"union.absl::container_internal::map_slot_type"* %119, i64 %67
  %121 = bitcast %"union.absl::container_internal::map_slot_type"* %120 to i64*
  store i64 %115, i64* %121, align 4
  %122 = add i64 %21, -1
  br label %123

123:                                              ; preds = %73, %112, %97, %19
  %124 = phi i64 [ %21, %19 ], [ %21, %73 ], [ %21, %97 ], [ %122, %112 ]
  %125 = add i64 %124, 1
  %126 = load i64, i64* %4, align 8
  %127 = icmp eq i64 %125, %126
  br i1 %127, label %11, label %19
}

declare void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_mapINS0_17NodeHashMapPolicyIjNSt3__115__list_iteratorINS3_4pairIjbEEPvEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS5_IKjS8_EEEEE16try_emplace_implIRSG_JEEENS5_INS0_12raw_hash_setIS9_SC_SE_SI_E8iteratorEbEEOT_DpOT0_(%"struct.std::__1::pair.455"* noalias sret, %"class.absl::container_internal::raw_hash_map"*, i32* dereferenceable(4)) local_unnamed_addr #6 comdat align 2 {
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %1, i64 0, i32 0
  %5 = load i32, i32* %2, align 4
  %6 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  %7 = zext i32 %5 to i64
  %8 = add i64 %6, %7
  %9 = zext i64 %8 to i128
  %10 = mul nuw i128 %9, 11376068507788127593
  %11 = lshr i128 %10, 64
  %12 = xor i128 %11, %10
  %13 = trunc i128 %12 to i64
  %14 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %1, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %1, i64 0, i32 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = lshr i64 %13, 7
  %19 = ptrtoint i8* %15 to i64
  %20 = lshr i64 %19, 12
  %21 = xor i64 %18, %20
  %22 = trunc i128 %12 to i8
  %23 = and i8 %22, 127
  %24 = insertelement <16 x i8> undef, i8 %23, i32 0
  %25 = shufflevector <16 x i8> %24, <16 x i8> undef, <16 x i32> zeroinitializer
  %26 = getelementptr inbounds %"class.absl::container_internal::raw_hash_map", %"class.absl::container_internal::raw_hash_map"* %1, i64 0, i32 0, i32 1
  br label %27

27:                                               ; preds = %59, %3
  %28 = phi i64 [ %21, %3 ], [ %61, %59 ]
  %29 = phi i64 [ 0, %3 ], [ %60, %59 ]
  %30 = and i64 %28, %17
  %31 = getelementptr inbounds i8, i8* %15, i64 %30
  %32 = bitcast i8* %31 to <16 x i8>*
  %33 = load <16 x i8>, <16 x i8>* %32, align 1
  %34 = icmp eq <16 x i8> %25, %33
  %35 = bitcast <16 x i1> %34 to i16
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %55, label %37

37:                                               ; preds = %27
  %38 = zext i16 %35 to i32
  %39 = load %"struct.std::__1::pair.41"**, %"struct.std::__1::pair.41"*** %26, align 8
  br label %40

40:                                               ; preds = %51, %37
  %41 = phi i32 [ %38, %37 ], [ %53, %51 ]
  %42 = tail call i32 @llvm.cttz.i32(i32 %41, i1 false) #10, !range !6
  %43 = zext i32 %42 to i64
  %44 = add i64 %30, %43
  %45 = and i64 %44, %17
  %46 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %39, i64 %45
  %47 = load %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %46, align 8
  %48 = getelementptr inbounds %"struct.std::__1::pair.41", %"struct.std::__1::pair.41"* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %5
  br i1 %50, label %74, label %51, !prof !2

51:                                               ; preds = %40
  %52 = add i32 %41, -1
  %53 = and i32 %52, %41
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %40

55:                                               ; preds = %51, %27
  %56 = icmp eq <16 x i8> %33, <i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128, i8 -128>
  %57 = bitcast <16 x i1> %56 to i16
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %59, label %62, !prof !7

59:                                               ; preds = %55
  %60 = add i64 %29, 16
  %61 = add i64 %60, %30
  br label %27

62:                                               ; preds = %55
  %63 = tail call i64 @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIjNSt3__115__list_iteratorINS3_4pairIjbEEPvEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS5_IKjS8_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"* %4, i64 %13) #10
  %64 = load %"struct.std::__1::pair.41"**, %"struct.std::__1::pair.41"*** %26, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %64, i64 %63
  %66 = tail call i8* @_Znwm(i64 16) #13
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %2, align 4
  store i32 %68, i32* %67, align 8
  %69 = getelementptr inbounds i8, i8* %66, i64 8
  %70 = bitcast i8* %69 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %70, align 8
  %71 = bitcast %"struct.std::__1::pair.41"** %65 to i8**
  store i8* %66, i8** %71, align 8
  %72 = load i8*, i8** %14, align 8
  %73 = load %"struct.std::__1::pair.41"**, %"struct.std::__1::pair.41"*** %26, align 8
  br label %74

74:                                               ; preds = %40, %62
  %75 = phi %"struct.std::__1::pair.41"** [ %73, %62 ], [ %39, %40 ]
  %76 = phi i8* [ %72, %62 ], [ %15, %40 ]
  %77 = phi i8 [ 1, %62 ], [ 0, %40 ]
  %78 = phi i64 [ %63, %62 ], [ %45, %40 ]
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %75, i64 %78
  %81 = icmp ne i8* %79, null
  tail call void @llvm.assume(i1 %81) #10
  %82 = getelementptr inbounds %"struct.std::__1::pair.455", %"struct.std::__1::pair.455"* %0, i64 0, i32 0, i32 0
  store i8* %79, i8** %82, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair.455", %"struct.std::__1::pair.455"* %0, i64 0, i32 0, i32 1, i32 0
  store %"struct.std::__1::pair.41"** %80, %"struct.std::__1::pair.41"*** %83, align 8
  %84 = getelementptr inbounds %"struct.std::__1::pair.455", %"struct.std::__1::pair.455"* %0, i64 0, i32 1
  store i8 %77, i8* %84, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIjNSt3__115__list_iteratorINS3_4pairIjbEEPvEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS5_IKjS8_EEEEE14prepare_insertEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %1, 7
  %8 = ptrtoint i8* %4 to i64
  %9 = lshr i64 %8, 12
  %10 = xor i64 %9, %7
  %11 = and i64 %10, %6
  %12 = getelementptr inbounds i8, i8* %4, i64 %11
  %13 = bitcast i8* %12 to <16 x i8>*
  %14 = load <16 x i8>, <16 x i8>* %13, align 1
  %15 = icmp slt <16 x i8> %14, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %16 = bitcast <16 x i1> %15 to i16
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %2, %18
  %19 = phi i64 [ %23, %18 ], [ %11, %2 ]
  %20 = phi i64 [ %21, %18 ], [ 0, %2 ]
  %21 = add i64 %20, 16
  %22 = add i64 %21, %19
  %23 = and i64 %22, %6
  %24 = getelementptr inbounds i8, i8* %4, i64 %23
  %25 = bitcast i8* %24 to <16 x i8>*
  %26 = load <16 x i8>, <16 x i8>* %25, align 1
  %27 = icmp slt <16 x i8> %26, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %28 = bitcast <16 x i1> %27 to i16
  %29 = icmp eq i16 %28, 0
  br i1 %29, label %18, label %30

30:                                               ; preds = %18, %2
  %31 = phi i64 [ %11, %2 ], [ %23, %18 ]
  %32 = phi i16 [ %16, %2 ], [ %28, %18 ]
  %33 = zext i16 %32 to i32
  %34 = tail call i32 @llvm.cttz.i32(i32 %33, i1 false) #10, !range !6
  %35 = zext i32 %34 to i64
  %36 = add i64 %31, %35
  %37 = and i64 %36, %6
  %38 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %93

41:                                               ; preds = %30
  %42 = getelementptr inbounds i8, i8* %4, i64 %37
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, -2
  br i1 %44, label %93, label %45, !prof !2

45:                                               ; preds = %41
  %46 = icmp eq i64 %6, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIjNSt3__115__list_iteratorINS3_4pairIjbEEPvEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS5_IKjS8_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 1) #10
  br label %59

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %50 = load i64, i64* %49, align 8
  %51 = lshr i64 %6, 3
  %52 = sub i64 %6, %51
  %53 = lshr i64 %52, 1
  %54 = icmp ugt i64 %50, %53
  br i1 %54, label %56, label %55

55:                                               ; preds = %48
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIjNSt3__115__list_iteratorINS3_4pairIjbEEPvEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS5_IKjS8_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"* %0) #10
  br label %59

56:                                               ; preds = %48
  %57 = shl i64 %6, 1
  %58 = or i64 %57, 1
  tail call void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIjNSt3__115__list_iteratorINS3_4pairIjbEEPvEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS5_IKjS8_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"* %0, i64 %58) #10
  br label %59

59:                                               ; preds = %47, %55, %56
  %60 = load i8*, i8** %3, align 8
  %61 = load i64, i64* %5, align 8
  %62 = ptrtoint i8* %60 to i64
  %63 = lshr i64 %62, 12
  %64 = xor i64 %63, %7
  %65 = and i64 %64, %61
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  %67 = bitcast i8* %66 to <16 x i8>*
  %68 = load <16 x i8>, <16 x i8>* %67, align 1
  %69 = icmp slt <16 x i8> %68, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %70 = bitcast <16 x i1> %69 to i16
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %72
  %73 = phi i64 [ %77, %72 ], [ %65, %59 ]
  %74 = phi i64 [ %75, %72 ], [ 0, %59 ]
  %75 = add i64 %74, 16
  %76 = add i64 %75, %73
  %77 = and i64 %76, %61
  %78 = getelementptr inbounds i8, i8* %60, i64 %77
  %79 = bitcast i8* %78 to <16 x i8>*
  %80 = load <16 x i8>, <16 x i8>* %79, align 1
  %81 = icmp slt <16 x i8> %80, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %82 = bitcast <16 x i1> %81 to i16
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %72, label %84

84:                                               ; preds = %72, %59
  %85 = phi i64 [ %65, %59 ], [ %77, %72 ]
  %86 = phi i16 [ %70, %59 ], [ %82, %72 ]
  %87 = zext i16 %86 to i32
  %88 = tail call i32 @llvm.cttz.i32(i32 %87, i1 false) #10, !range !6
  %89 = zext i32 %88 to i64
  %90 = add i64 %85, %89
  %91 = and i64 %90, %61
  %92 = load i64, i64* %38, align 8
  br label %93

93:                                               ; preds = %41, %30, %84
  %94 = phi i64 [ %92, %84 ], [ 0, %41 ], [ %39, %30 ]
  %95 = phi i8* [ %60, %84 ], [ %4, %41 ], [ %4, %30 ]
  %96 = phi i64 [ %91, %84 ], [ %37, %41 ], [ %37, %30 ]
  %97 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds i8, i8* %95, i64 %96
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, -128
  %103 = zext i1 %102 to i64
  %104 = sub i64 %94, %103
  store i64 %104, i64* %38, align 8
  %105 = trunc i64 %1 to i8
  %106 = and i8 %105, 127
  store i8 %106, i8* %100, align 1
  %107 = load i8*, i8** %3, align 8
  %108 = add i64 %96, -15
  %109 = load i64, i64* %5, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 %106, i8* %113, align 1
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIjNSt3__115__list_iteratorINS3_4pairIjbEEPvEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS5_IKjS8_EEEEE6resizeEm(%"class.absl::container_internal::raw_hash_set"*, i64) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %6 = load %"struct.std::__1::pair.41"**, %"struct.std::__1::pair.41"*** %5, align 8
  %7 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  store i64 %1, i64* %7, align 8
  %9 = add i64 %1, 16
  %10 = add i64 %1, 23
  %11 = and i64 %10, -8
  %12 = shl i64 %1, 3
  %13 = add i64 %11, %12
  %14 = tail call i8* @_Znwm(i64 %13) #13
  store i8* %14, i8** %3, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %11
  %16 = bitcast %"struct.std::__1::pair.41"*** %5 to i8**
  store i8* %15, i8** %16, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 -128, i64 %9, i1 false) #10
  %17 = getelementptr inbounds i8, i8* %14, i64 %1
  store i8 -1, i8* %17, align 1
  %18 = lshr i64 %1, 3
  %19 = sub i64 %1, %18
  %20 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = icmp eq i64 %8, 0
  br i1 %24, label %97, label %25

25:                                               ; preds = %2
  %26 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %28

27:                                               ; preds = %93
  br i1 %24, label %97, label %96

28:                                               ; preds = %25, %93
  %29 = phi i64 [ 0, %25 ], [ %94, %93 ]
  %30 = getelementptr inbounds i8, i8* %4, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = icmp sgt i8 %31, -1
  br i1 %32, label %33, label %93

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %6, i64 %29
  %35 = load %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair.41", %"struct.std::__1::pair.41"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = add i64 %26, %38
  %40 = zext i64 %39 to i128
  %41 = mul nuw i128 %40, 11376068507788127593
  %42 = lshr i128 %41, 64
  %43 = xor i128 %42, %41
  %44 = trunc i128 %43 to i64
  %45 = load i8*, i8** %3, align 8
  %46 = load i64, i64* %7, align 8
  %47 = lshr i64 %44, 7
  %48 = ptrtoint i8* %45 to i64
  %49 = lshr i64 %48, 12
  %50 = xor i64 %47, %49
  %51 = and i64 %50, %46
  %52 = getelementptr inbounds i8, i8* %45, i64 %51
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1
  %55 = icmp slt <16 x i8> %54, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %56 = bitcast <16 x i1> %55 to i16
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %58, label %70

58:                                               ; preds = %33, %58
  %59 = phi i64 [ %63, %58 ], [ %51, %33 ]
  %60 = phi i64 [ %61, %58 ], [ 0, %33 ]
  %61 = add i64 %60, 16
  %62 = add i64 %61, %59
  %63 = and i64 %62, %46
  %64 = getelementptr inbounds i8, i8* %45, i64 %63
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1
  %67 = icmp slt <16 x i8> %66, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %68 = bitcast <16 x i1> %67 to i16
  %69 = icmp eq i16 %68, 0
  br i1 %69, label %58, label %70

70:                                               ; preds = %58, %33
  %71 = phi i64 [ %51, %33 ], [ %63, %58 ]
  %72 = phi i16 [ %56, %33 ], [ %68, %58 ]
  %73 = zext i16 %72 to i32
  %74 = tail call i32 @llvm.cttz.i32(i32 %73, i1 false) #10, !range !6
  %75 = zext i32 %74 to i64
  %76 = add i64 %71, %75
  %77 = and i64 %76, %46
  %78 = trunc i128 %43 to i8
  %79 = and i8 %78, 127
  %80 = getelementptr inbounds i8, i8* %45, i64 %77
  store i8 %79, i8* %80, align 1
  %81 = load i8*, i8** %3, align 8
  %82 = add i64 %77, -15
  %83 = load i64, i64* %7, align 8
  %84 = and i64 %82, %83
  %85 = and i64 %83, 15
  %86 = add i64 %84, %85
  %87 = getelementptr inbounds i8, i8* %81, i64 %86
  store i8 %79, i8* %87, align 1
  %88 = load %"struct.std::__1::pair.41"**, %"struct.std::__1::pair.41"*** %5, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %88, i64 %77
  %90 = bitcast %"struct.std::__1::pair.41"** %34 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"struct.std::__1::pair.41"** %89 to i64*
  store i64 %91, i64* %92, align 8
  br label %93

93:                                               ; preds = %28, %70
  %94 = add nuw i64 %29, 1
  %95 = icmp eq i64 %94, %8
  br i1 %95, label %27, label %28

96:                                               ; preds = %27
  tail call void @_ZdlPv(i8* %4) #13
  br label %97

97:                                               ; preds = %2, %27, %96
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl18container_internal12raw_hash_setINS0_17NodeHashMapPolicyIjNSt3__115__list_iteratorINS3_4pairIjbEEPvEEEENS_13hash_internal4HashIjEENS3_8equal_toIjEENS3_9allocatorINS5_IKjS8_EEEEE27drop_deletes_without_resizeEv(%"class.absl::container_internal::raw_hash_set"*) local_unnamed_addr #12 comdat align 2 {
  %2 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  tail call void @_ZN4absl18container_internal37ConvertDeletedToEmptyAndFullToDeletedEPam(i8* %3, i64 %5) #10
  %6 = load i64, i64* %4, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 1
  %10 = load i64, i64* bitcast (i8** @_ZN4absl13hash_internal15MixingHashState5kSeedE to i64*), align 8
  br label %19

11:                                               ; preds = %125, %1
  %12 = phi i64 [ 0, %1 ], [ %127, %125 ]
  %13 = lshr i64 %12, 3
  %14 = sub i64 %12, %13
  %15 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = getelementptr inbounds %"class.absl::container_internal::raw_hash_set", %"class.absl::container_internal::raw_hash_set"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  ret void

19:                                               ; preds = %8, %125
  %20 = phi i64 [ %6, %8 ], [ %128, %125 ]
  %21 = phi i64 [ 0, %8 ], [ %127, %125 ]
  %22 = load i8*, i8** %2, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %21
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, -2
  br i1 %25, label %26, label %125

26:                                               ; preds = %19
  %27 = ptrtoint i8* %22 to i64
  %28 = load %"struct.std::__1::pair.41"**, %"struct.std::__1::pair.41"*** %9, align 8
  %29 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %28, i64 %21
  %30 = load %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %29, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.41", %"struct.std::__1::pair.41"* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = add i64 %10, %33
  %35 = zext i64 %34 to i128
  %36 = mul nuw i128 %35, 11376068507788127593
  %37 = lshr i128 %36, 64
  %38 = xor i128 %37, %36
  %39 = trunc i128 %38 to i64
  %40 = lshr i64 %39, 7
  %41 = lshr i64 %27, 12
  %42 = xor i64 %40, %41
  %43 = and i64 %42, %20
  %44 = getelementptr inbounds i8, i8* %22, i64 %43
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1
  %47 = icmp slt <16 x i8> %46, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %48 = bitcast <16 x i1> %47 to i16
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %50, label %62

50:                                               ; preds = %26, %50
  %51 = phi i64 [ %55, %50 ], [ %43, %26 ]
  %52 = phi i64 [ %53, %50 ], [ 0, %26 ]
  %53 = add i64 %52, 16
  %54 = add i64 %53, %51
  %55 = and i64 %54, %20
  %56 = getelementptr inbounds i8, i8* %22, i64 %55
  %57 = bitcast i8* %56 to <16 x i8>*
  %58 = load <16 x i8>, <16 x i8>* %57, align 1
  %59 = icmp slt <16 x i8> %58, <i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1, i8 -1>
  %60 = bitcast <16 x i1> %59 to i16
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %50, label %62

62:                                               ; preds = %50, %26
  %63 = phi i64 [ %43, %26 ], [ %55, %50 ]
  %64 = phi i16 [ %48, %26 ], [ %60, %50 ]
  %65 = zext i16 %64 to i32
  %66 = tail call i32 @llvm.cttz.i32(i32 %65, i1 false) #10, !range !6
  %67 = zext i32 %66 to i64
  %68 = add i64 %63, %67
  %69 = and i64 %68, %20
  %70 = sub i64 %69, %43
  %71 = sub i64 %21, %43
  %72 = xor i64 %70, %71
  %73 = and i64 %72, %20
  %74 = icmp ult i64 %73, 16
  br i1 %74, label %75, label %85, !prof !2

75:                                               ; preds = %62
  %76 = trunc i128 %38 to i8
  %77 = and i8 %76, 127
  store i8 %77, i8* %23, align 1
  %78 = load i8*, i8** %2, align 8
  %79 = add i64 %21, -15
  %80 = load i64, i64* %4, align 8
  %81 = and i64 %80, %79
  %82 = and i64 %80, 15
  %83 = add i64 %81, %82
  %84 = getelementptr inbounds i8, i8* %78, i64 %83
  store i8 %77, i8* %84, align 1
  br label %125

85:                                               ; preds = %62
  %86 = getelementptr inbounds i8, i8* %22, i64 %69
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, -128
  %89 = trunc i128 %38 to i8
  %90 = and i8 %89, 127
  store i8 %90, i8* %86, align 1
  %91 = load i8*, i8** %2, align 8
  %92 = add i64 %69, -15
  %93 = load i64, i64* %4, align 8
  %94 = and i64 %93, %92
  %95 = and i64 %93, 15
  %96 = add i64 %94, %95
  %97 = getelementptr inbounds i8, i8* %91, i64 %96
  store i8 %90, i8* %97, align 1
  %98 = load %"struct.std::__1::pair.41"**, %"struct.std::__1::pair.41"*** %9, align 8
  br i1 %88, label %99, label %114

99:                                               ; preds = %85
  %100 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %98, i64 %69
  %101 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %98, i64 %21
  %102 = bitcast %"struct.std::__1::pair.41"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.std::__1::pair.41"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = load i8*, i8** %2, align 8
  %106 = getelementptr inbounds i8, i8* %105, i64 %21
  store i8 -128, i8* %106, align 1
  %107 = load i8*, i8** %2, align 8
  %108 = add i64 %21, -15
  %109 = load i64, i64* %4, align 8
  %110 = and i64 %109, %108
  %111 = and i64 %109, 15
  %112 = add i64 %110, %111
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  store i8 -128, i8* %113, align 1
  br label %125

114:                                              ; preds = %85
  %115 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %98, i64 %21
  %116 = bitcast %"struct.std::__1::pair.41"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %98, i64 %69
  %119 = bitcast %"struct.std::__1::pair.41"** %118 to i64*
  %120 = load i64, i64* %119, align 8
  store i64 %120, i64* %116, align 8
  %121 = load %"struct.std::__1::pair.41"**, %"struct.std::__1::pair.41"*** %9, align 8
  %122 = getelementptr inbounds %"struct.std::__1::pair.41"*, %"struct.std::__1::pair.41"** %121, i64 %69
  %123 = bitcast %"struct.std::__1::pair.41"** %122 to i64*
  store i64 %117, i64* %123, align 8
  %124 = add i64 %21, -1
  br label %125

125:                                              ; preds = %75, %114, %99, %19
  %126 = phi i64 [ %21, %19 ], [ %21, %75 ], [ %21, %99 ], [ %124, %114 ]
  %127 = add i64 %126, 1
  %128 = load i64, i64* %4, align 8
  %129 = icmp eq i64 %127, %128
  br i1 %129, label %11, label %19
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4absl6StrCatIJjEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_: argument 0"}
!5 = distinct !{!5, !"_ZN4absl6StrCatIJjEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_"}
!6 = !{i32 0, i32 33}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEE16try_emplace_implIRSC_JEEENSB_INS0_12raw_hash_setIS3_S6_S9_SE_E8iteratorEbEEOT_DpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZN4absl18container_internal12raw_hash_mapINS0_17FlatHashMapPolicyIjjEENS_13hash_internal4HashIjEENSt3__18equal_toIjEENS7_9allocatorINS7_4pairIKjjEEEEE16try_emplace_implIRSC_JEEENSB_INS0_12raw_hash_setIS3_S6_S9_SE_E8iteratorEbEEOT_DpOT0_"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__14listINS_4pairIjbEENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__14listINS_4pairIjbEENS_9allocatorIS2_EEE15__allocate_nodeERNS3_INS_11__list_nodeIS2_PvEEEE"}
