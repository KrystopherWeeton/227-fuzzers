; ModuleID = '../../chrome/browser/ui/exclusive_access/keyboard_lock_controller.cc'
source_filename = "../../chrome/browser/ui/exclusive_access/keyboard_lock_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%class.KeyboardLockController = type { %class.ExclusiveAccessControllerBase.base, %"class.base::RepeatingCallback", %"class.base::OnceCallback", i32, i32, %"class.base::OneShotTimer", %"class.base::TimeDelta", %"class.base::TickClock"*, %"class.base::circular_deque" }
%class.ExclusiveAccessControllerBase.base = type <{ %"class.content::NotificationObserver", %class.ExclusiveAccessManager*, %"class.content::NotificationRegistrar", %"class.content::WebContents"*, i32 }>
%"class.content::NotificationObserver" = type { i32 (...)** }
%"class.content::NotificationRegistrar" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.content::NotificationRegistrar::Record"*, %"struct.content::NotificationRegistrar::Record"*, %"class.std::__1::__compressed_pair" }
%"struct.content::NotificationRegistrar::Record" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.content::NotificationRegistrar::Record"* }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.10, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.10 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.11" }>
%"class.base::RefCountedThreadSafe.11" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.13", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.base::TimeTicks"*, i64 }
%class.ExclusiveAccessManager = type { %class.ExclusiveAccessContext*, %class.FullscreenController, %class.KeyboardLockController, %class.MouseLockController }
%class.ExclusiveAccessContext = type opaque
%class.FullscreenController = type { %class.ExclusiveAccessControllerBase.base, %class.GURL, %class.GURL, i32, i8, i8, %"class.content::WebContents"*, i8, [7 x i8], %"class.base::ObserverList", %"class.base::WeakPtrFactory.35" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.GURL* }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.27", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.30" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.29 }
%class.scoped_refptr.29 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory.35" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.MouseLockController = type { %class.ExclusiveAccessControllerBase.base, i32, %"class.content::WebContents"*, i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback", %"class.base::TimeTicks", %"class.base::WeakPtrFactory.36" }
%"class.base::WeakPtrFactory.36" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.ExclusiveAccessControllerBase = type <{ %"class.content::NotificationObserver", %class.ExclusiveAccessManager*, %"class.content::NotificationRegistrar", %"class.content::WebContents"*, i32, [4 x i8] }>
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.base::OnceCallback.47" = type { %"class.base::internal::CallbackBase" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.42", [4 x i8] }>
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.content::NativeWebKeyboardEvent" = type <{ %"class.blink::WebKeyboardEvent.base", [6 x i8], %"class.ui::Event"*, i8, [7 x i8] }>
%"class.blink::WebKeyboardEvent.base" = type <{ %"class.blink::WebInputEvent", i32, i32, i32, i32, i8, i8, [4 x i16], [4 x i16] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.ui::Event" = type opaque
%"class.content::NotificationSource" = type { i8* }
%"class.content::NotificationDetails" = type { i8* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4base14circular_dequeINS_9TimeTicksEED2Ev = comdat any

$_ZN4base14circular_dequeINS_9TimeTicksEE5clearEv = comdat any

$_ZNK4base9TimeDeltamiES0_ = comdat any

$_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIM22KeyboardLockControllerFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIM22KeyboardLockControllerFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base14circular_dequeINS_9TimeTicksEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_ = comdat any

$_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base14circular_dequeINS_9TimeTicksEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZNK4base8internal12VectorBufferINS_9TimeTicksEEixEm = comdat any

@_ZTV22KeyboardLockController = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.ExclusiveAccessControllerBase*, i32, %"class.content::NotificationSource"*, %"class.content::NotificationDetails"*)* @_ZN29ExclusiveAccessControllerBase7ObserveEiRKN7content18NotificationSourceERKNS0_19NotificationDetailsE to i8*), i8* bitcast (void (%class.KeyboardLockController*)* @_ZN22KeyboardLockControllerD2Ev to i8*), i8* bitcast (void (%class.KeyboardLockController*)* @_ZN22KeyboardLockControllerD0Ev to i8*), i8* bitcast (void (%class.GURL*, %class.ExclusiveAccessControllerBase*)* @_ZNK29ExclusiveAccessControllerBase30GetURLForExclusiveAccessBubbleEv to i8*), i8* bitcast (i1 (%class.KeyboardLockController*)* @_ZN22KeyboardLockController23HandleUserPressedEscapeEv to i8*), i8* bitcast (void (%class.KeyboardLockController*)* @_ZN22KeyboardLockController34ExitExclusiveAccessToPreviousStateEv to i8*), i8* bitcast (void (%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"*)* @_ZN29ExclusiveAccessControllerBase16OnTabDeactivatedEPN7content11WebContentsE to i8*), i8* bitcast (void (%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"*)* @_ZN29ExclusiveAccessControllerBase21OnTabDetachedFromViewEPN7content11WebContentsE to i8*), i8* bitcast (void (%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"*)* @_ZN29ExclusiveAccessControllerBase12OnTabClosingEPN7content11WebContentsE to i8*), i8* bitcast (void (%class.KeyboardLockController*)* @_ZN22KeyboardLockController30ExitExclusiveAccessIfNecessaryEv to i8*), i8* bitcast (void (%class.KeyboardLockController*)* @_ZN22KeyboardLockController28NotifyTabExclusiveAccessLostEv to i8*), i8* bitcast (void (%class.KeyboardLockController*, i32)* @_ZN22KeyboardLockController28RecordBubbleReshowsHistogramEi to i8*)] }, align 8
@_ZN12_GLOBAL__N_127kBubbleReshowsHistogramNameE = internal constant [53 x i8] c"ExclusiveAccess.BubbleReshowsPerSession.KeyboardLock\00", align 16
@_ZN12_GLOBAL__N_133kForcedBubbleReshowsHistogramNameE = internal constant [59 x i8] c"ExclusiveAccess.BubbleReshowsPerSession.KeyboardLockForced\00", align 16
@.str = private unnamed_addr constant [15 x i8] c"HandleKeyEvent\00", align 1
@.str.1 = private unnamed_addr constant [69 x i8] c"../../chrome/browser/ui/exclusive_access/keyboard_lock_controller.cc\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"delta_ != other.delta_\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"../../base/bind.h\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"callback\00", align 1
@.str.8 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"from_begin: 0x\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c", from_end: 0x\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c", to: 0x\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZZN22KeyboardLockController28RecordBubbleReshowsHistogramEiE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN22KeyboardLockController34RecordForcedBubbleReshowsHistogramEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN22KeyboardLockControllerC1EP22ExclusiveAccessManager = hidden unnamed_addr alias void (%class.KeyboardLockController*, %class.ExclusiveAccessManager*), void (%class.KeyboardLockController*, %class.ExclusiveAccessManager*)* @_ZN22KeyboardLockControllerC2EP22ExclusiveAccessManager
@_ZN22KeyboardLockControllerD1Ev = hidden unnamed_addr alias void (%class.KeyboardLockController*), void (%class.KeyboardLockController*)* @_ZN22KeyboardLockControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22KeyboardLockControllerC2EP22ExclusiveAccessManager(%class.KeyboardLockController*, %class.ExclusiveAccessManager*) unnamed_addr #0 align 2 {
  %3 = bitcast %class.KeyboardLockController* %0 to %class.ExclusiveAccessControllerBase*
  tail call void @_ZN29ExclusiveAccessControllerBaseC2EP22ExclusiveAccessManager(%class.ExclusiveAccessControllerBase* %3, %class.ExclusiveAccessManager* %1) #10
  %4 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV22KeyboardLockController, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 5
  %7 = bitcast %"class.base::internal::BindStateBase"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false)
  tail call void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"* %6) #10
  %8 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 6, i32 0
  store i64 1000000, i64* %8, align 8
  %9 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 7
  %10 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #10
  %11 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %10, i64 0, i32 0
  store %"class.base::TickClock"* %11, %"class.base::TickClock"** %9, align 8
  %12 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 8
  %13 = bitcast %"class.base::circular_deque"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #10
  ret void
}

declare void @_ZN29ExclusiveAccessControllerBaseC2EP22ExclusiveAccessManager(%class.ExclusiveAccessControllerBase*, %class.ExclusiveAccessManager*) unnamed_addr #1

declare void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22KeyboardLockControllerD2Ev(%class.KeyboardLockController*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV22KeyboardLockController, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 8
  tail call void @_ZN4base14circular_dequeINS_9TimeTicksEED2Ev(%"class.base::circular_deque"* %3) #10
  %4 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 5
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %4) #10
  %5 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %6) #10
  %7 = bitcast %class.KeyboardLockController* %0 to %class.ExclusiveAccessControllerBase*
  tail call void @_ZN29ExclusiveAccessControllerBaseD2Ev(%class.ExclusiveAccessControllerBase* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEED2Ev(%"class.base::circular_deque"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %3) #10
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13) #10
  %15 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0) #10
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %5) #10
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN29ExclusiveAccessControllerBaseD2Ev(%class.ExclusiveAccessControllerBase*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22KeyboardLockControllerD0Ev(%class.KeyboardLockController*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTV22KeyboardLockController, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 8
  tail call void @_ZN4base14circular_dequeINS_9TimeTicksEED2Ev(%"class.base::circular_deque"* %3) #10
  %4 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 5
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %4) #10
  %5 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %6) #10
  %7 = bitcast %class.KeyboardLockController* %0 to %class.ExclusiveAccessControllerBase*
  tail call void @_ZN29ExclusiveAccessControllerBaseD2Ev(%class.ExclusiveAccessControllerBase* %7) #10
  %8 = bitcast %class.KeyboardLockController* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN22KeyboardLockController23HandleUserPressedEscapeEv(%class.KeyboardLockController*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN22KeyboardLockController14UnlockKeyboardEv(%class.KeyboardLockController* %0)
  br label %6

6:                                                ; preds = %1, %5
  %7 = phi i1 [ true, %5 ], [ false, %1 ]
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK22KeyboardLockController20IsKeyboardLockActiveEv(%class.KeyboardLockController* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22KeyboardLockController14UnlockKeyboardEv(%class.KeyboardLockController*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.47", align 8
  %3 = bitcast %class.KeyboardLockController* %0 to %class.ExclusiveAccessControllerBase*
  %4 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 0, i32 3
  %5 = load %"class.content::WebContents"*, %"class.content::WebContents"** %4, align 8
  %6 = icmp eq %"class.content::WebContents"* %5, null
  br i1 %6, label %33, label %7

7:                                                ; preds = %1
  tail call void @_ZN29ExclusiveAccessControllerBase16RecordExitingUMAEv(%class.ExclusiveAccessControllerBase* %3) #10
  %8 = load atomic i64, i64* @_ZZN22KeyboardLockController34RecordForcedBubbleReshowsHistogramEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %9 = inttoptr i64 %8 to %"class.base::HistogramBase"*
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %7
  %12 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @_ZN12_GLOBAL__N_133kForcedBubbleReshowsHistogramNameE, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #10
  %13 = ptrtoint %"class.base::HistogramBase"* %12 to i64
  store atomic i64 %13, i64* @_ZZN22KeyboardLockController34RecordForcedBubbleReshowsHistogramEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %14

14:                                               ; preds = %7, %11
  %15 = phi %"class.base::HistogramBase"* [ %9, %7 ], [ %12, %11 ]
  %16 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = bitcast %"class.base::HistogramBase"* %15 to void (%"class.base::HistogramBase"*, i32)***
  %19 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %19, i64 6
  %21 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %20, align 8
  tail call void %21(%"class.base::HistogramBase"* %15, i32 %17) #10
  store i32 0, i32* %16, align 8
  %22 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 4
  store i32 0, i32* %22, align 4
  %23 = load %"class.content::WebContents"*, %"class.content::WebContents"** %4, align 8
  %24 = bitcast %"class.content::WebContents"* %23 to i1 (%"class.content::WebContents"*, i1)***
  %25 = load i1 (%"class.content::WebContents"*, i1)**, i1 (%"class.content::WebContents"*, i1)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.content::WebContents"*, i1)*, i1 (%"class.content::WebContents"*, i1)** %25, i64 144
  %27 = load i1 (%"class.content::WebContents"*, i1)*, i1 (%"class.content::WebContents"*, i1)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.content::WebContents"* %23, i1 zeroext false) #10
  tail call void @_ZN29ExclusiveAccessControllerBase25SetTabWithExclusiveAccessEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase* %3, %"class.content::WebContents"* null) #10
  %29 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 0, i32 1
  %30 = load %class.ExclusiveAccessManager*, %class.ExclusiveAccessManager** %29, align 8
  %31 = getelementptr inbounds %"class.base::OnceCallback.47", %"class.base::OnceCallback.47"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %31, align 8
  call void @_ZN22ExclusiveAccessManager38UpdateExclusiveAccessExitBubbleContentEN4base12OnceCallbackIFv31ExclusiveAccessBubbleHideReasonEEEb(%class.ExclusiveAccessManager* %30, %"class.base::OnceCallback.47"* nonnull %2, i1 zeroext false) #10
  %32 = getelementptr inbounds %"class.base::OnceCallback.47", %"class.base::OnceCallback.47"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #10
  br label %33

33:                                               ; preds = %1, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22KeyboardLockController34ExitExclusiveAccessToPreviousStateEv(%class.KeyboardLockController*) unnamed_addr #0 align 2 {
  tail call void @_ZN22KeyboardLockController14UnlockKeyboardEv(%class.KeyboardLockController* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22KeyboardLockController30ExitExclusiveAccessIfNecessaryEv(%class.KeyboardLockController*) unnamed_addr #0 align 2 {
  tail call void @_ZN22KeyboardLockController14UnlockKeyboardEv(%class.KeyboardLockController* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22KeyboardLockController28NotifyTabExclusiveAccessLostEv(%class.KeyboardLockController*) unnamed_addr #0 align 2 {
  tail call void @_ZN22KeyboardLockController14UnlockKeyboardEv(%class.KeyboardLockController* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22KeyboardLockController28RecordBubbleReshowsHistogramEi(%class.KeyboardLockController* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %3 = load atomic i64, i64* @_ZZN22KeyboardLockController28RecordBubbleReshowsHistogramEiE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %4 = inttoptr i64 %3 to %"class.base::HistogramBase"*
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @_ZN12_GLOBAL__N_127kBubbleReshowsHistogramNameE, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #10
  %8 = ptrtoint %"class.base::HistogramBase"* %7 to i64
  store atomic i64 %8, i64* @_ZZN22KeyboardLockController28RecordBubbleReshowsHistogramEiE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.base::HistogramBase"* [ %4, %2 ], [ %7, %6 ]
  %11 = bitcast %"class.base::HistogramBase"* %10 to void (%"class.base::HistogramBase"*, i32)***
  %12 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %12, i64 6
  %14 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %13, align 8
  tail call void %14(%"class.base::HistogramBase"* %10, i32 %1) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22KeyboardLockController34RecordForcedBubbleReshowsHistogramEv(%class.KeyboardLockController* nocapture) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* @_ZZN22KeyboardLockController34RecordForcedBubbleReshowsHistogramEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %3 = inttoptr i64 %2 to %"class.base::HistogramBase"*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @_ZN12_GLOBAL__N_133kForcedBubbleReshowsHistogramNameE, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #10
  %7 = ptrtoint %"class.base::HistogramBase"* %6 to i64
  store atomic i64 %7, i64* @_ZZN22KeyboardLockController34RecordForcedBubbleReshowsHistogramEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.base::HistogramBase"* [ %3, %1 ], [ %6, %5 ]
  %10 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = bitcast %"class.base::HistogramBase"* %9 to void (%"class.base::HistogramBase"*, i32)***
  %13 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %13, i64 6
  %15 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %14, align 8
  tail call void %15(%"class.base::HistogramBase"* %9, i32 %11) #10
  store i32 0, i32* %10, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK22KeyboardLockController29RequiresPressAndHoldEscToExitEv(%class.KeyboardLockController* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22KeyboardLockController19RequestKeyboardLockEPN7content11WebContentsEb(%class.KeyboardLockController*, %"class.content::WebContents"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 0, i32 1
  %5 = load %class.ExclusiveAccessManager*, %class.ExclusiveAccessManager** %4, align 8
  %6 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %5, i64 0, i32 1
  %7 = tail call zeroext i1 @_ZNK20FullscreenController27IsFullscreenForTabOrPendingEPKN7content11WebContentsE(%class.FullscreenController* %6, %"class.content::WebContents"* %1) #10
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @_ZN22KeyboardLockController12LockKeyboardEPN7content11WebContentsEb(%class.KeyboardLockController* %0, %"class.content::WebContents"* %1, i1 zeroext %2)
  br label %9

9:                                                ; preds = %3, %8
  ret void
}

declare zeroext i1 @_ZNK20FullscreenController27IsFullscreenForTabOrPendingEPKN7content11WebContentsE(%class.FullscreenController*, %"class.content::WebContents"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22KeyboardLockController12LockKeyboardEPN7content11WebContentsEb(%class.KeyboardLockController*, %"class.content::WebContents"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = alloca %"class.base::OnceCallback.47", align 8
  %7 = alloca %"class.base::RepeatingCallback", align 8
  %8 = bitcast %"class.content::WebContents"* %1 to i1 (%"class.content::WebContents"*, i1)***
  %9 = load i1 (%"class.content::WebContents"*, i1)**, i1 (%"class.content::WebContents"*, i1)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.content::WebContents"*, i1)*, i1 (%"class.content::WebContents"*, i1)** %9, i64 144
  %11 = load i1 (%"class.content::WebContents"*, i1)*, i1 (%"class.content::WebContents"*, i1)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.content::WebContents"* %1, i1 zeroext true) #10
  br i1 %12, label %13, label %49

13:                                               ; preds = %3
  %14 = select i1 %2, i32 1, i32 2
  %15 = bitcast %class.KeyboardLockController* %0 to %class.ExclusiveAccessControllerBase*
  %16 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 0, i32 3
  %17 = load %"class.content::WebContents"*, %"class.content::WebContents"** %16, align 8
  %18 = icmp eq %"class.content::WebContents"* %17, %1
  %19 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 4
  br i1 %18, label %20, label %23

20:                                               ; preds = %13
  %21 = load i32, i32* %19, align 4
  %22 = icmp eq i32 %14, %21
  store i32 %14, i32* %19, align 4
  tail call void @_ZN29ExclusiveAccessControllerBase25SetTabWithExclusiveAccessEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase* %15, %"class.content::WebContents"* %1) #10
  br i1 %22, label %50, label %24

23:                                               ; preds = %13
  store i32 %14, i32* %19, align 4
  tail call void @_ZN29ExclusiveAccessControllerBase25SetTabWithExclusiveAccessEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase* %15, %"class.content::WebContents"* %1) #10
  br label %24

24:                                               ; preds = %20, %23
  %25 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 0, i32 1
  %26 = load %class.ExclusiveAccessManager*, %class.ExclusiveAccessManager** %25, align 8
  %27 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 1
  %28 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %28, align 8
  %30 = icmp eq %"class.base::internal::BindStateBase"* %29, null
  br i1 %30, label %46, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0
  %33 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %27, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %32, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %33) #10
  %34 = bitcast %"class.base::RepeatingCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %35, align 8, !noalias !2
  %37 = icmp eq %"class.base::internal::BindStateBase"* %36, null
  br i1 %37, label %38, label %41

38:                                               ; preds = %31
  %39 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10, !noalias !2
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i32 103, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0)) #10
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10, !noalias !2
  br label %41

41:                                               ; preds = %31, %38
  %42 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %42, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %32) #10, !noalias !2
  %43 = getelementptr inbounds %"class.base::OnceCallback.47", %"class.base::OnceCallback.47"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %43, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %42) #10
  %44 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  call void @_ZN22ExclusiveAccessManager38UpdateExclusiveAccessExitBubbleContentEN4base12OnceCallbackIFv31ExclusiveAccessBubbleHideReasonEEEb(%class.ExclusiveAccessManager* %26, %"class.base::OnceCallback.47"* nonnull %6, i1 zeroext false) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %43) #10
  %45 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #10
  br label %50

46:                                               ; preds = %24
  %47 = getelementptr inbounds %"class.base::OnceCallback.47", %"class.base::OnceCallback.47"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %47, align 8
  call void @_ZN22ExclusiveAccessManager38UpdateExclusiveAccessExitBubbleContentEN4base12OnceCallbackIFv31ExclusiveAccessBubbleHideReasonEEEb(%class.ExclusiveAccessManager* %26, %"class.base::OnceCallback.47"* nonnull %6, i1 zeroext false) #10
  %48 = getelementptr inbounds %"class.base::OnceCallback.47", %"class.base::OnceCallback.47"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %48) #10
  br label %50

49:                                               ; preds = %3
  tail call void @_ZN22KeyboardLockController14UnlockKeyboardEv(%class.KeyboardLockController* %0)
  br label %50

50:                                               ; preds = %20, %41, %46, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN22KeyboardLockController14HandleKeyEventERKN7content22NativeWebKeyboardEventE(%class.KeyboardLockController*, %"struct.content::NativeWebKeyboardEvent"* nocapture readonly dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %36

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.content::NativeWebKeyboardEvent", %"struct.content::NativeWebKeyboardEvent"* %1, i64 0, i32 0, i32 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 9
  br i1 %11, label %12, label %18

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 5, i32 0
  %14 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %13) #10
  br i1 %14, label %15, label %16

15:                                               ; preds = %12
  tail call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %13) #10
  tail call void @_ZN22KeyboardLockController24ReShowExitBubbleIfNeededEv(%class.KeyboardLockController* %0)
  br label %36

16:                                               ; preds = %12
  %17 = load i32, i32* %9, align 8
  br label %18

18:                                               ; preds = %16, %8
  %19 = phi i32 [ %17, %16 ], [ %10, %8 ]
  %20 = icmp eq i32 %19, 7
  br i1 %20, label %21, label %36

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 5
  %23 = getelementptr inbounds %"class.base::OneShotTimer", %"class.base::OneShotTimer"* %22, i64 0, i32 0
  %24 = tail call zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"* %23) #10
  br i1 %24, label %36, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.1, i64 0, i64 0), i32 135) #10
  %27 = ptrtoint %class.KeyboardLockController* %0 to i64
  %28 = call i8* @_Znwm(i64 56) #11, !noalias !5
  %29 = bitcast i8* %28 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %29, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIM22KeyboardLockControllerFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIM22KeyboardLockControllerFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !5
  %30 = getelementptr inbounds i8, i8* %28, i64 32
  %31 = bitcast i8* %30 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%class.KeyboardLockController*)* @_ZN22KeyboardLockController20HandleUserHeldEscapeEv to i64), i64 0>, <2 x i64>* %31, align 8, !noalias !5
  %32 = getelementptr inbounds i8, i8* %28, i64 48
  %33 = bitcast i8* %32 to i64*
  store i64 %27, i64* %33, align 8, !noalias !5
  %34 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %28, i8** %34, align 8, !alias.scope !5
  call void @_ZN4base12OneShotTimer5StartERKNS_8LocationENS_9TimeDeltaENS_12OnceCallbackIFvvEEE(%"class.base::OneShotTimer"* %22, %"class.base::Location"* nonnull dereferenceable(32) %3, i64 1500000, %"class.base::OnceCallback"* nonnull %4) #10
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #10
  br label %36

36:                                               ; preds = %15, %25, %21, %18, %2
  %37 = phi i1 [ false, %2 ], [ true, %18 ], [ true, %21 ], [ true, %25 ], [ true, %15 ]
  ret i1 %37
}

declare zeroext i1 @_ZNK4base8internal9TimerBase9IsRunningEv(%"class.base::internal::TimerBase"*) local_unnamed_addr #1

declare void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22KeyboardLockController24ReShowExitBubbleIfNeededEv(%class.KeyboardLockController*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = alloca %"class.base::OnceCallback.47", align 8
  %5 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 7
  %6 = load %"class.base::TickClock"*, %"class.base::TickClock"** %5, align 8
  %7 = bitcast %"class.base::TickClock"* %6 to i64 (%"class.base::TickClock"*)***
  %8 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %7, align 8
  %9 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %8, i64 2
  %10 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %9, align 8
  %11 = tail call i64 %10(%"class.base::TickClock"* %6) #10
  %12 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 6, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %11, i64* %15, align 8
  %16 = call i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"* nonnull %3, i64 %13) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %17 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 8
  %18 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %17, i64 0, i32 0
  %19 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 8, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 8, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %20, %22
  br i1 %23, label %46, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 8, i32 0, i32 1
  br label %26

26:                                               ; preds = %24, %32
  %27 = phi i64 [ %20, %24 ], [ %43, %32 ]
  %28 = call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %18, i64 %27) #10
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %28, i64 0, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp slt i64 %30, %16
  br i1 %31, label %32, label %46

32:                                               ; preds = %26
  %33 = load i64, i64* %19, align 8
  %34 = call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %18, i64 %33) #10
  %35 = load i64, i64* %19, align 8
  %36 = add i64 %35, 1
  %37 = call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %18, i64 %36) #10
  %38 = load i64, i64* %19, align 8
  %39 = add i64 %38, 1
  %40 = load i64, i64* %25, align 8
  %41 = icmp eq i64 %39, %40
  %42 = select i1 %41, i64 0, i64 %39
  store i64 %42, i64* %19, align 8
  call void @_ZN4base14circular_dequeINS_9TimeTicksEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* %17) #10
  %43 = load i64, i64* %19, align 8
  %44 = load i64, i64* %21, align 8
  %45 = icmp eq i64 %43, %44
  br i1 %45, label %46, label %26

46:                                               ; preds = %26, %32, %1
  call void @_ZN4base14circular_dequeINS_9TimeTicksEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* %17, i64 1) #10
  %47 = load i64, i64* %21, align 8
  %48 = call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %18, i64 %47) #10
  %49 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %48, i64 0, i32 0, i32 0
  store i64 %11, i64* %49, align 8
  %50 = load i64, i64* %21, align 8
  %51 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 8, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, -1
  %54 = icmp eq i64 %50, %53
  br i1 %54, label %55, label %56

55:                                               ; preds = %46
  store i64 0, i64* %21, align 8
  br label %59

56:                                               ; preds = %46
  %57 = add i64 %50, 1
  store i64 %57, i64* %21, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56, %55
  br label %60

60:                                               ; preds = %56, %59
  %61 = phi i64 [ %53, %59 ], [ %50, %56 ]
  %62 = call dereferenceable(8) %"class.base::TimeTicks"* @_ZNK4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %18, i64 %61) #10
  %63 = load i64, i64* %19, align 8
  %64 = load i64, i64* %21, align 8
  %65 = icmp ult i64 %64, %63
  br i1 %65, label %68, label %66

66:                                               ; preds = %60
  %67 = sub i64 %64, %63
  br label %72

68:                                               ; preds = %60
  %69 = load i64, i64* %51, align 8
  %70 = sub i64 %64, %63
  %71 = add i64 %70, %69
  br label %72

72:                                               ; preds = %66, %68
  %73 = phi i64 [ %67, %66 ], [ %71, %68 ]
  %74 = icmp ugt i64 %73, 2
  br i1 %74, label %75, label %94

75:                                               ; preds = %72
  %76 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 0, i32 1
  %77 = load %class.ExclusiveAccessManager*, %class.ExclusiveAccessManager** %76, align 8
  %78 = getelementptr inbounds %"class.base::OnceCallback.47", %"class.base::OnceCallback.47"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %78, align 8
  call void @_ZN22ExclusiveAccessManager38UpdateExclusiveAccessExitBubbleContentEN4base12OnceCallbackIFv31ExclusiveAccessBubbleHideReasonEEEb(%class.ExclusiveAccessManager* %77, %"class.base::OnceCallback.47"* nonnull %4, i1 zeroext true) #10
  %79 = getelementptr inbounds %"class.base::OnceCallback.47", %"class.base::OnceCallback.47"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %79) #10
  %80 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %80, align 8
  call void @_ZN4base14circular_dequeINS_9TimeTicksEE5clearEv(%"class.base::circular_deque"* %17)
  %83 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %84 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %83, align 8
  %85 = icmp eq %"class.base::internal::BindStateBase"* %84, null
  br i1 %85, label %94, label %86

86:                                               ; preds = %75
  %87 = ptrtoint %"class.base::internal::BindStateBase"* %84 to i64
  %88 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #10
  %89 = bitcast %"class.base::OnceCallback"* %2 to i64*
  store i64 %87, i64* %89, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %83, align 8
  %90 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %91 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %84, i64 0, i32 1
  %92 = bitcast void ()** %91 to void (%"class.base::internal::BindStateBase"*)**
  %93 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %92, align 8
  call void %93(%"class.base::internal::BindStateBase"* nonnull %84) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %90) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #10
  br label %94

94:                                               ; preds = %75, %86, %72
  ret void
}

declare void @_ZN4base12OneShotTimer5StartERKNS_8LocationENS_9TimeDeltaENS_12OnceCallbackIFvvEEE(%"class.base::OneShotTimer"*, %"class.base::Location"* dereferenceable(32), i64, %"class.base::OnceCallback"*) unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22KeyboardLockController20HandleUserHeldEscapeEv(%class.KeyboardLockController*) #0 align 2 {
  %2 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 0, i32 1
  %3 = load %class.ExclusiveAccessManager*, %class.ExclusiveAccessManager** %2, align 8
  %4 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %3, i64 0, i32 1
  %5 = bitcast %class.FullscreenController* %4 to i1 (%class.FullscreenController*)***
  %6 = load i1 (%class.FullscreenController*)**, i1 (%class.FullscreenController*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.FullscreenController*)*, i1 (%class.FullscreenController*)** %6, i64 4
  %8 = load i1 (%class.FullscreenController*)*, i1 (%class.FullscreenController*)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.FullscreenController* %4) #10
  %10 = getelementptr inbounds %class.ExclusiveAccessManager, %class.ExclusiveAccessManager* %3, i64 0, i32 3
  %11 = bitcast %class.MouseLockController* %10 to i1 (%class.MouseLockController*)***
  %12 = load i1 (%class.MouseLockController*)**, i1 (%class.MouseLockController*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%class.MouseLockController*)*, i1 (%class.MouseLockController*)** %12, i64 4
  %14 = load i1 (%class.MouseLockController*)*, i1 (%class.MouseLockController*)** %13, align 8
  %15 = tail call zeroext i1 %14(%class.MouseLockController* %10) #10
  %16 = bitcast %class.KeyboardLockController* %0 to i1 (%class.KeyboardLockController*)***
  %17 = load i1 (%class.KeyboardLockController*)**, i1 (%class.KeyboardLockController*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%class.KeyboardLockController*)*, i1 (%class.KeyboardLockController*)** %17, i64 4
  %19 = load i1 (%class.KeyboardLockController*)*, i1 (%class.KeyboardLockController*)** %18, align 8
  %20 = tail call zeroext i1 %19(%class.KeyboardLockController* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22KeyboardLockController25CancelKeyboardLockRequestEPN7content11WebContentsE(%class.KeyboardLockController*, %"class.content::WebContents"* readnone) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.KeyboardLockController, %class.KeyboardLockController* %0, i64 0, i32 0, i32 3
  %4 = load %"class.content::WebContents"*, %"class.content::WebContents"** %3, align 8
  %5 = icmp eq %"class.content::WebContents"* %4, %1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN22KeyboardLockController14UnlockKeyboardEv(%class.KeyboardLockController* %0)
  br label %7

7:                                                ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22KeyboardLockController16LostKeyboardLockEv(%class.KeyboardLockController*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN22KeyboardLockController14UnlockKeyboardEv(%class.KeyboardLockController* %0)
  ret void
}

declare void @_ZN29ExclusiveAccessControllerBase25SetTabWithExclusiveAccessEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"*) local_unnamed_addr #1

declare void @_ZN22ExclusiveAccessManager38UpdateExclusiveAccessExitBubbleContentEN4base12OnceCallbackIFv31ExclusiveAccessBubbleHideReasonEEEb(%class.ExclusiveAccessManager*, %"class.base::OnceCallback.47"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN29ExclusiveAccessControllerBase16RecordExitingUMAEv(%class.ExclusiveAccessControllerBase*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEE5clearEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %3) #10
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13) #10
  %15 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0) #10
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %5) #10
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast i64* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #10
  %20 = bitcast %"class.base::circular_deque"* %0 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @free(i8* %21) #10
  %22 = bitcast %"class.base::circular_deque"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN29ExclusiveAccessControllerBase7ObserveEiRKN7content18NotificationSourceERKNS0_19NotificationDetailsE(%class.ExclusiveAccessControllerBase*, i32, %"class.content::NotificationSource"* dereferenceable(8), %"class.content::NotificationDetails"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK29ExclusiveAccessControllerBase30GetURLForExclusiveAccessBubbleEv(%class.GURL* sret, %class.ExclusiveAccessControllerBase*) unnamed_addr #1

declare void @_ZN29ExclusiveAccessControllerBase16OnTabDeactivatedEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"*) unnamed_addr #1

declare void @_ZN29ExclusiveAccessControllerBase21OnTabDetachedFromViewEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"*) unnamed_addr #1

declare void @_ZN29ExclusiveAccessControllerBase12OnTabClosingEPN7content11WebContentsE(%class.ExclusiveAccessControllerBase*, %"class.content::WebContents"*) unnamed_addr #1

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK4base9TimeDeltamiES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = add i64 %1, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp sgt i64 %1, -1
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.ssub.with.overflow.i64(i64 %10, i64 %1) #10
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !10
  ret i64 %16

17:                                               ; preds = %2
  %18 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #10
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i64 %21, %1
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %19, align 8
  br label %34

25:                                               ; preds = %17
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #10
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEl(i64 %1) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %26, i8* %27) #10
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %19, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 387, %"class.logging::CheckOpResult"* nonnull %4) #10
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #10
  %35 = icmp slt i64 %1, 0
  %36 = select i1 %35, i64 9223372036854775807, i64 -9223372036854775808
  ret i64 %36
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.ssub.with.overflow.i64(i64, i64) #6

declare i8* @_ZN7logging15CheckOpValueStrEl(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %23, align 8
  %25 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %24, i64 %1
  ret %"class.base::TimeTicks"* %25
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIM22KeyboardLockControllerFvvEJNS0_17UnretainedWrapperIS3_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds i8, i8* %5, i64 %10
  %12 = bitcast i8* %11 to %class.KeyboardLockController*
  %13 = and i64 %7, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %7, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%class.KeyboardLockController*)**
  %21 = load void (%class.KeyboardLockController*)*, void (%class.KeyboardLockController*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %7 to void (%class.KeyboardLockController*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%class.KeyboardLockController*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%class.KeyboardLockController* %12) #10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIM22KeyboardLockControllerFvvEJNS0_17UnretainedWrapperIS2_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #10
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #10
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #10
  br i1 %31, label %32, label %33, !prof !10

32:                                               ; preds = %27
  tail call void @llvm.trap() #10
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #10
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #10
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #10
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #10
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"* %11, %"class.base::TimeTicks"* %12, %"class.base::TimeTicks"* %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"* %19, %"class.base::TimeTicks"* %20, %"class.base::TimeTicks"* %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(8) %"class.base::TimeTicks"* @_ZN4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"* %24, %"class.base::TimeTicks"* %25, %"class.base::TimeTicks"* %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferINS_9TimeTicksEE9MoveRangeIS2_Li0EEEvPS2_S5_S5_(%"class.base::TimeTicks"*, %"class.base::TimeTicks"*, %"class.base::TimeTicks"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"class.base::TimeTicks"* %0 to i64
  %6 = icmp ult %"class.base::TimeTicks"* %2, %1
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = ptrtoint %"class.base::TimeTicks"* %2 to i64
  %9 = ptrtoint %"class.base::TimeTicks"* %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #10
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #10
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !10

16:                                               ; preds = %7
  tail call void @llvm.trap() #10
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0)) #10
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  %23 = bitcast %"class.std::__1::basic_ostream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_ostream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -75
  %34 = or i32 %33, 8
  store i32 %34, i32* %31, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i64 14) #10
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 14) #10
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %9) #10
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0), i64 8) #10
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %46

41:                                               ; preds = %3
  %42 = ptrtoint %"class.base::TimeTicks"* %1 to i64
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %42, i64 %5) #10
  %44 = extractvalue { i64, i1 } %43, 1
  br i1 %44, label %45, label %46, !prof !10

45:                                               ; preds = %41
  call void @llvm.trap() #10
  unreachable

46:                                               ; preds = %20, %17, %41
  %47 = phi { i64, i1 } [ %43, %41 ], [ %10, %17 ], [ %10, %20 ]
  %48 = extractvalue { i64, i1 } %47, 0
  %49 = bitcast %"class.base::TimeTicks"* %0 to i8*
  %50 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %49, i64 %48, i1 false)
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !11
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeINS_9TimeTicksEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #10
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #10
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #10
  br i1 %37, label %38, label %39, !prof !10

38:                                               ; preds = %27
  tail call void @llvm.trap() #10
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #10
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeINS_9TimeTicksEE10MoveBufferERNS_8internal12VectorBufferIS1_EEmmPS5_PmS8_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #10
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #10
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #10
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.base::TimeTicks"* @_ZNK4base8internal12VectorBufferINS_9TimeTicksEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.base::TimeTicks"*, %"class.base::TimeTicks"** %23, align 8
  %25 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %24, i64 %1
  ret %"class.base::TimeTicks"* %25
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4base8BindOnceIFv31ExclusiveAccessBubbleHideReasonEEENS_12OnceCallbackIT_EENS_17RepeatingCallbackIS4_EE: argument 0"}
!4 = distinct !{!4, !"_ZN4base8BindOnceIFv31ExclusiveAccessBubbleHideReasonEEENS_12OnceCallbackIT_EENS_17RepeatingCallbackIS4_EE"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM22KeyboardLockControllerFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEM22KeyboardLockControllerFvvEJNS0_17UnretainedWrapperIS3_EEEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIM22KeyboardLockControllerFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIM22KeyboardLockControllerFvvEJNS_8internal17UnretainedWrapperIS1_EEEEENS_12OnceCallbackINS4_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOS9_DpOSA_"}
!10 = !{!"branch_weights", i32 1, i32 2000}
!11 = !{i8 0, i8 2}
