; ModuleID = '../../chrome/browser/extensions/convert_user_script.cc'
source_filename = "../../chrome/browser/extensions/convert_user_script.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.extensions::Extension" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.extensions::URLPatternSet", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.13", %"class.std::__1::vector", %class.GURL, %"class.base::Version", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.37", %"class.std::__1::map", i8, %"class.base::ThreadChecker", i8, i8, i8, i32, %"class.base::GUID" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.extensions::URLPatternSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.extensions::PermissionsParser"* }
%"class.extensions::PermissionsParser" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.extensions::PermissionsData"* }
%"class.extensions::PermissionsData" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.extensions::InstallWarning"*, %"struct.extensions::InstallWarning"*, %"class.std::__1::__compressed_pair.19" }
%"struct.extensions::InstallWarning" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"struct.extensions::InstallWarning"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.24" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %class.GURL* }
%"class.base::Version" = type { %"class.std::__1::vector.30" }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { i32*, i32*, %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.extensions::Manifest"* }
%"class.extensions::Manifest" = type { %"class.std::__1::basic_string", %"class.extensions::HashedExtensionId", i32, %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40", i32, i32 }
%"class.extensions::HashedExtensionId" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.43" }
%"union.absl::variant_internal::DestructibleUnionImpl.43" = type { %"union.absl::variant_internal::DestructibleUnionImpl.44" }
%"union.absl::variant_internal::DestructibleUnionImpl.44" = type { %"union.absl::variant_internal::DestructibleUnionImpl.45" }
%"union.absl::variant_internal::DestructibleUnionImpl.45" = type { %"union.absl::variant_internal::DestructibleUnionImpl.46" }
%"union.absl::variant_internal::DestructibleUnionImpl.46" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.78" }
%"class.std::__1::__tree.78" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"class.base::ThreadChecker" = type { i8 }
%"class.base::GUID" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.90 }
%union.anon.90 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.extensions::UserScript" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.96", %"class.std::__1::vector.96", %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet", %"class.std::__1::vector.103", %"class.std::__1::vector.103", %"class.extensions::mojom::HostID", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [2 x i8], i32, i8, [7 x i8] }>
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"class.std::__1::unique_ptr.105"*, %"class.std::__1::unique_ptr.105"*, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::unique_ptr.105" = type opaque
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.std::__1::unique_ptr.105"* }
%"class.extensions::mojom::HostID" = type { i32, %"class.std::__1::basic_string" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.base::ScopedTempDir" = type { %"class.base::FilePath" }
%"struct.extensions::api::content_scripts::ContentScript" = type <{ %"class.std::__1::vector.96", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.123", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { i8* }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.std::__1::vector.96"* }
%class.JSONFileValueSerializer = type { %"class.base::ValueSerializer", %"class.base::FilePath" }
%"class.base::ValueSerializer" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%class.URLPattern = type { i32, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::ListValue" = type { %"class.base::Value" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.91 }
%struct.anon.91 = type { %"struct.std::__1::__padding.92", i8 }
%"struct.std::__1::__padding.92" = type { [1 x i8] }

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@.str = private unnamed_addr constant [28 x i16] [i16 67, i16 111, i16 117, i16 108, i16 100, i16 32, i16 110, i16 111, i16 116, i16 32, i16 114, i16 101, i16 97, i16 100, i16 32, i16 115, i16 111, i16 117, i16 114, i16 99, i16 101, i16 32, i16 102, i16 105, i16 108, i16 101, i16 46, i16 0], align 2
@.str.1 = private unnamed_addr constant [34 x i16] [i16 85, i16 115, i16 101, i16 114, i16 32, i16 115, i16 99, i16 114, i16 105, i16 112, i16 116, i16 32, i16 109, i16 117, i16 115, i16 116, i16 32, i16 98, i16 101, i16 32, i16 85, i16 84, i16 70, i16 56, i16 32, i16 101, i16 110, i16 99, i16 111, i16 100, i16 101, i16 100, i16 46, i16 0], align 2
@.str.2 = private unnamed_addr constant [23 x i16] [i16 73, i16 110, i16 118, i16 97, i16 108, i16 105, i16 100, i16 32, i16 115, i16 99, i16 114, i16 105, i16 112, i16 116, i16 32, i16 104, i16 101, i16 97, i16 100, i16 101, i16 114, i16 46, i16 0], align 2
@.str.3 = private unnamed_addr constant [51 x i16] [i16 67, i16 111, i16 117, i16 108, i16 100, i16 32, i16 110, i16 111, i16 116, i16 32, i16 103, i16 101, i16 116, i16 32, i16 112, i16 97, i16 116, i16 104, i16 32, i16 116, i16 111, i16 32, i16 112, i16 114, i16 111, i16 102, i16 105, i16 108, i16 101, i16 32, i16 116, i16 101, i16 109, i16 112, i16 111, i16 114, i16 97, i16 114, i16 121, i16 32, i16 100, i16 105, i16 114, i16 101, i16 99, i16 116, i16 111, i16 114, i16 121, i16 46, i16 0], align 2
@.str.4 = private unnamed_addr constant [38 x i16] [i16 67, i16 111, i16 117, i16 108, i16 100, i16 32, i16 110, i16 111, i16 116, i16 32, i16 99, i16 114, i16 101, i16 97, i16 116, i16 101, i16 32, i16 116, i16 101, i16 109, i16 112, i16 111, i16 114, i16 97, i16 114, i16 121, i16 32, i16 100, i16 105, i16 114, i16 101, i16 99, i16 116, i16 111, i16 114, i16 121, i16 46, i16 0], align 2
@.str.5 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@_ZN10extensions13manifest_keys5kNameE = external constant [0 x i8], align 1
@_ZN10extensions13manifest_keys8kVersionE = external constant [0 x i8], align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"1.0\00", align 1
@_ZN10extensions13manifest_keys12kDescriptionE = external constant [0 x i8], align 1
@_ZN10extensions13manifest_keys10kPublicKeyE = external constant [0 x i8], align 1
@_ZN10extensions13manifest_keys24kConvertedFromUserScriptE = external constant [0 x i8], align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"http://*/*\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"https://*/*\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"script.js\00", align 1
@_ZN10extensions3api15content_scripts12ManifestKeys15kContentScriptsE = external constant [16 x i8], align 16
@_ZN10extensions17kManifestFilenameE = external constant [0 x i8], align 1
@.str.10 = private unnamed_addr constant [22 x i16] [i16 67, i16 111, i16 117, i16 108, i16 100, i16 32, i16 110, i16 111, i16 116, i16 32, i16 119, i16 114, i16 105, i16 116, i16 101, i16 32, i16 74, i16 83, i16 79, i16 78, i16 46, i16 0], align 2
@.str.11 = private unnamed_addr constant [28 x i16] [i16 67, i16 111, i16 117, i16 108, i16 100, i16 32, i16 110, i16 111, i16 116, i16 32, i16 99, i16 111, i16 112, i16 121, i16 32, i16 115, i16 99, i16 114, i16 105, i16 112, i16 116, i16 32, i16 102, i16 105, i16 108, i16 101, i16 46, i16 0], align 2
@switch.table._ZN10extensions28ConvertUserScriptToExtensionERKN4base8FilePathERK4GURLS3_PNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEE = private unnamed_addr constant [3 x i32] [i32 2, i32 3, i32 1], align 4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.extensions::Extension"* @_ZN10extensions28ConvertUserScriptToExtensionERKN4base8FilePathERK4GURLS3_PNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEE(%"class.base::FilePath"* dereferenceable(24), %class.GURL* dereferenceable(120), %"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string.87"*) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.extensions::UserScript", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.base::FilePath", align 8
  %9 = alloca %"class.base::ScopedTempDir", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca [15 x i8], align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca [32 x i8], align 16
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.base::BasicStringPiece", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.std::__1::vector.96", align 16
  %18 = alloca %"class.std::__1::basic_string", align 8
  %19 = alloca %"class.std::__1::basic_string", align 8
  %20 = alloca %"class.std::__1::vector.96", align 16
  %21 = alloca %"struct.extensions::api::content_scripts::ContentScript", align 16
  %22 = alloca %"class.std::__1::basic_string", align 8
  %23 = alloca %"class.base::FilePath", align 8
  %24 = alloca %class.JSONFileValueSerializer, align 8
  %25 = alloca %"class.base::FilePath", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.std::__1::basic_string.87", align 8
  %28 = alloca %"class.base::FilePath", align 8
  %29 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #11
  %32 = call zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24) %0, %"class.std::__1::basic_string"* nonnull %5) #11
  br i1 %32, label %36, label %33

33:                                               ; preds = %4
  %34 = call dereferenceable(24) %"class.std::__1::basic_string.87"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.87"* %3, i16* getelementptr inbounds ([28 x i16], [28 x i16]* @.str, i64 0, i64 0)) #11
  %35 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %927

36:                                               ; preds = %4
  %37 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = load i8*, i8** %30, align 8
  %42 = select i1 %40, i8* %41, i8* %29
  %43 = load i64, i64* %31, align 8
  %44 = zext i8 %39 to i64
  %45 = select i1 %40, i64 %43, i64 %44
  %46 = call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %42, i64 %45) #11
  br i1 %46, label %49, label %47

47:                                               ; preds = %36
  %48 = call dereferenceable(24) %"class.std::__1::basic_string.87"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.87"* %3, i16* getelementptr inbounds ([34 x i16], [34 x i16]* @.str.1, i64 0, i64 0)) #11
  br label %927

49:                                               ; preds = %36
  %50 = bitcast %"class.extensions::UserScript"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 328, i8* nonnull %50) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 328, i1 false)
  call void @_ZN10extensions10UserScriptC1Ev(%"class.extensions::UserScript"* nonnull %6) #11
  %51 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #11
  %52 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  %53 = load i8, i8* %38, align 1
  %54 = icmp slt i8 %53, 0
  %55 = load i8*, i8** %30, align 8
  %56 = select i1 %54, i8* %55, i8* %29
  store i8* %56, i8** %52, align 8
  %57 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %58 = load i64, i64* %31, align 8
  %59 = zext i8 %53 to i64
  %60 = select i1 %54, i64 %58, i64 %59
  store i64 %60, i64* %57, align 8
  %61 = call zeroext i1 @_ZN10extensions16UserScriptLoader19ParseMetadataHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS_10UserScriptE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7, %"class.extensions::UserScript"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #11
  br i1 %61, label %64, label %62

62:                                               ; preds = %49
  %63 = call dereferenceable(24) %"class.std::__1::basic_string.87"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.87"* %3, i16* getelementptr inbounds ([23 x i16], [23 x i16]* @.str.2, i64 0, i64 0)) #11
  br label %925

64:                                               ; preds = %49
  %65 = bitcast %"class.base::FilePath"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #11
  %66 = getelementptr inbounds %"class.base::FilePath", %"class.base::FilePath"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = bitcast %"class.base::FilePath"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 24, i1 false)
  call void @_ZN10extensions9file_util17GetInstallTempDirERKN4base8FilePathE(%"class.base::FilePath"* nonnull sret %8, %"class.base::FilePath"* dereferenceable(24) %2) #11
  %68 = bitcast %"class.base::FilePath"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = load i64, i64* %66, align 8
  %73 = zext i8 %70 to i64
  %74 = select i1 %71, i64 %72, i64 %73
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %78

76:                                               ; preds = %64
  %77 = call dereferenceable(24) %"class.std::__1::basic_string.87"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.87"* %3, i16* getelementptr inbounds ([51 x i16], [51 x i16]* @.str.3, i64 0, i64 0)) #11
  br label %923

78:                                               ; preds = %64
  %79 = bitcast %"class.base::ScopedTempDir"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #11
  %80 = bitcast %"class.base::ScopedTempDir"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 24, i1 false)
  call void @_ZN4base13ScopedTempDirC1Ev(%"class.base::ScopedTempDir"* nonnull %9) #11
  %81 = call zeroext i1 @_ZN4base13ScopedTempDir28CreateUniqueTempDirUnderPathERKNS_8FilePathE(%"class.base::ScopedTempDir"* nonnull %9, %"class.base::FilePath"* nonnull dereferenceable(24) %8) #11
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = call dereferenceable(24) %"class.std::__1::basic_string.87"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.87"* %3, i16* getelementptr inbounds ([38 x i16], [38 x i16]* @.str.4, i64 0, i64 0)) #11
  br label %921

84:                                               ; preds = %78
  %85 = call i8* @_Znwm(i64 32) #12
  %86 = bitcast i8* %85 to %"class.base::DictionaryValue"*
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %86) #11
  %87 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #11
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 0, i64 24, i1 false) #11
  %90 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 3
  %91 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  %95 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = zext i8 %93 to i64
  %98 = select i1 %94, i64 %96, i64 %97
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %174, label %100

100:                                              ; preds = %84
  %101 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 2
  %102 = bitcast %"class.std::__1::basic_string"* %101 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  %106 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = zext i8 %104 to i64
  %109 = select i1 %105, i64 %107, i64 %108
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %174, label %111

111:                                              ; preds = %100
  %112 = getelementptr inbounds [15 x i8], [15 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %112)
  %113 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #11
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 0, i64 24, i1 false) #11, !alias.scope !2
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %101, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  %120 = select i1 %105, i8* %118, i8* %119
  %121 = add i64 %109, 1
  %122 = icmp ugt i64 %121, -17
  br i1 %122, label %123, label %125

123:                                              ; preds = %111
  %124 = bitcast %"class.std::__1::basic_string"* %12 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %124) #13
  unreachable

125:                                              ; preds = %111
  %126 = icmp ult i64 %121, 23
  br i1 %126, label %127, label %131

127:                                              ; preds = %125
  %128 = trunc i64 %109 to i8
  %129 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  store i8 %128, i8* %130, align 1, !alias.scope !2
  br label %136

131:                                              ; preds = %125
  %132 = add nuw i64 %109, 17
  %133 = and i64 %132, -16
  %134 = call i8* @_Znwm(i64 %133) #12
  store i8* %134, i8** %114, align 8, !alias.scope !2
  %135 = or i64 %133, -9223372036854775808
  store i64 %135, i64* %116, align 8, !alias.scope !2
  store i64 %109, i64* %115, align 8, !alias.scope !2
  br label %136

136:                                              ; preds = %131, %127
  %137 = phi i8* [ %113, %127 ], [ %134, %131 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %137, i8* align 1 %120, i64 %109, i1 false) #11
  %138 = getelementptr inbounds i8, i8* %137, i64 %109
  store i8 0, i8* %138, align 1
  %139 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i64 1) #11
  %140 = load i8, i8* %92, align 1, !noalias !5
  %141 = icmp slt i8 %140, 0
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load i8*, i8** %142, align 8, !noalias !5
  %144 = load i64, i64* %95, align 8, !noalias !5
  %145 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  %146 = zext i8 %140 to i64
  %147 = select i1 %141, i8* %143, i8* %145
  %148 = select i1 %141, i64 %144, i64 %146
  %149 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %147, i64 %148) #11, !noalias !5
  %150 = bitcast %"class.std::__1::basic_string"* %149 to i8*
  %151 = bitcast %"class.std::__1::basic_string"* %149 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %154 = bitcast i64* %153 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %112, i8* align 8 %154, i64 15, i1 false)
  %155 = getelementptr inbounds i8, i8* %150, i64 23
  %156 = load i8, i8* %155, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 24, i1 false) #11, !noalias !5
  %157 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %157, i64 0, i32 1, i32 0
  %159 = load i8, i8* %158, align 1
  %160 = icmp slt i8 %159, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %136
  %162 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %162) #12
  br label %163

163:                                              ; preds = %161, %136
  %164 = bitcast %"class.std::__1::basic_string"* %10 to i64*
  store i64 %152, i64* %164, align 8
  %165 = bitcast i64* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* nonnull align 8 %112, i64 15, i1 false)
  %166 = getelementptr inbounds i8, i8* %87, i64 23
  store i8 %156, i8* %166, align 1
  %167 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %168 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %167, i64 0, i32 1, i32 0
  %169 = load i8, i8* %168, align 1
  %170 = icmp slt i8 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %163
  %172 = load i8*, i8** %114, align 8
  call void @_ZdlPv(i8* %172) #12
  br label %173

173:                                              ; preds = %163, %171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #11
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %112)
  br label %205

174:                                              ; preds = %100, %84
  %175 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* %1) #11
  %176 = icmp eq %"class.std::__1::basic_string"* %10, %175
  %177 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br i1 %176, label %205, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %177, i64 0, i32 1, i32 0
  %180 = load i8, i8* %179, align 1
  %181 = icmp slt i8 %180, 0
  %182 = bitcast %"class.std::__1::basic_string"* %175 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %183 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %182, i64 0, i32 1, i32 0
  %184 = load i8, i8* %183, align 1
  %185 = icmp slt i8 %184, 0
  br i1 %181, label %195, label %186

186:                                              ; preds = %178
  br i1 %185, label %189, label %187

187:                                              ; preds = %186
  %188 = bitcast %"class.std::__1::basic_string"* %175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %87, i8* align 8 %188, i64 24, i1 false) #11
  br label %205

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %193 = load i64, i64* %192, align 8
  %194 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %191, i64 %193) #11
  br label %205

195:                                              ; preds = %178
  %196 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = bitcast %"class.std::__1::basic_string"* %175 to i8*
  %201 = zext i8 %184 to i64
  %202 = select i1 %185, i8* %197, i8* %200
  %203 = select i1 %185, i64 %199, i64 %201
  %204 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %202, i64 %203) #11
  br label %205

205:                                              ; preds = %174, %195, %189, %187, %173
  %206 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %177, %195 ], [ %177, %189 ], [ %177, %187 ], [ %157, %173 ], [ %177, %174 ]
  %207 = getelementptr inbounds [32 x i8], [32 x i8]* %13, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %207) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %207, i8 0, i64 32, i1 false)
  %208 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %208) #11
  %209 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %208, i8 0, i64 24, i1 false) #11
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %206, i64 0, i32 1, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  %214 = load i8*, i8** %88, align 8
  %215 = select i1 %213, i8* %214, i8* %87
  %216 = load i64, i64* %89, align 8
  %217 = zext i8 %212 to i64
  %218 = select i1 %213, i64 %216, i64 %217
  call void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPvm(i8* %215, i64 %218, i8* nonnull %207, i64 32) #11
  %219 = bitcast %"class.base::BasicStringPiece"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %219) #11
  %220 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %15, i64 0, i32 0
  store i8* %207, i8** %220, align 8
  %221 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %15, i64 0, i32 1
  store i64 32, i64* %221, align 8
  call void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %15, %"class.std::__1::basic_string"* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %219) #11
  %222 = load i8, i8* %92, align 1
  %223 = icmp slt i8 %222, 0
  %224 = load i64, i64* %95, align 8
  %225 = zext i8 %222 to i64
  %226 = select i1 %223, i64 %224, i64 %225
  %227 = icmp eq i64 %226, 0
  %228 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys5kNameE, i64 0, i64 0)) #11
  br i1 %227, label %235, label %229

229:                                              ; preds = %205
  %230 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load i8*, i8** %230, align 8
  %232 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  %233 = select i1 %223, i8* %231, i8* %232
  %234 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %86, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys5kNameE, i64 0, i64 0), i64 %228, i8* %233, i64 %226) #11
  br label %254

235:                                              ; preds = %205
  %236 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #11
  call void @_ZNK4GURL15ExtractFileNameEv(%"class.std::__1::basic_string"* nonnull sret %16, %class.GURL* %1) #11
  %237 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %238 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %237, i64 0, i32 1, i32 0
  %239 = load i8, i8* %238, align 1
  %240 = icmp slt i8 %239, 0
  %241 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load i8*, i8** %241, align 8
  %243 = select i1 %240, i8* %242, i8* %236
  %244 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %245 = load i64, i64* %244, align 8
  %246 = zext i8 %239 to i64
  %247 = select i1 %240, i64 %245, i64 %246
  %248 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %86, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys5kNameE, i64 0, i64 0), i64 %228, i8* %243, i64 %247) #11
  %249 = load i8, i8* %238, align 1
  %250 = icmp slt i8 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %235
  %252 = load i8*, i8** %241, align 8
  call void @_ZdlPv(i8* %252) #12
  br label %253

253:                                              ; preds = %235, %251
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #11
  br label %254

254:                                              ; preds = %253, %229
  %255 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 5
  %256 = bitcast %"class.std::__1::basic_string"* %255 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %257 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %256, i64 0, i32 1, i32 0
  %258 = load i8, i8* %257, align 1
  %259 = icmp slt i8 %258, 0
  %260 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %261 = load i64, i64* %260, align 8
  %262 = zext i8 %258 to i64
  %263 = select i1 %259, i64 %261, i64 %262
  %264 = icmp eq i64 %263, 0
  %265 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys8kVersionE, i64 0, i64 0)) #11
  br i1 %264, label %272, label %266

266:                                              ; preds = %254
  %267 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %255, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load i8*, i8** %267, align 8
  %269 = bitcast %"class.std::__1::basic_string"* %255 to i8*
  %270 = select i1 %259, i8* %268, i8* %269
  %271 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %86, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys8kVersionE, i64 0, i64 0), i64 %265, i8* %270, i64 %263) #11
  br label %274

272:                                              ; preds = %254
  %273 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %86, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys8kVersionE, i64 0, i64 0), i64 %265, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i64 3) #11
  br label %274

274:                                              ; preds = %272, %266
  %275 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys12kDescriptionE, i64 0, i64 0)) #11
  %276 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 4
  %277 = bitcast %"class.std::__1::basic_string"* %276 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %278 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %277, i64 0, i32 1, i32 0
  %279 = load i8, i8* %278, align 1
  %280 = icmp slt i8 %279, 0
  %281 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %276, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = bitcast %"class.std::__1::basic_string"* %276 to i8*
  %284 = select i1 %280, i8* %282, i8* %283
  %285 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %286 = load i64, i64* %285, align 8
  %287 = zext i8 %279 to i64
  %288 = select i1 %280, i64 %286, i64 %287
  %289 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %86, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys12kDescriptionE, i64 0, i64 0), i64 %275, i8* %284, i64 %288) #11
  %290 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys10kPublicKeyE, i64 0, i64 0)) #11
  %291 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %292 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %291, i64 0, i32 1, i32 0
  %293 = load i8, i8* %292, align 1
  %294 = icmp slt i8 %293, 0
  %295 = load i8*, i8** %209, align 8
  %296 = select i1 %294, i8* %295, i8* %208
  %297 = load i64, i64* %210, align 8
  %298 = zext i8 %293 to i64
  %299 = select i1 %294, i64 %297, i64 %298
  %300 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %86, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys10kPublicKeyE, i64 0, i64 0), i64 %290, i8* %296, i64 %299) #11
  %301 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys24kConvertedFromUserScriptE, i64 0, i64 0)) #11
  %302 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::DictionaryValue"* nonnull %86, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions13manifest_keys24kConvertedFromUserScriptE, i64 0, i64 0), i64 %301, i1 zeroext true) #11
  %303 = bitcast %"class.std::__1::vector.96"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %303) #11
  %304 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %17, i64 0, i32 0, i32 0
  %305 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %17, i64 0, i32 0, i32 1
  %306 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %303, i8 0, i64 24, i1 false) #11
  %307 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 8
  %308 = call zeroext i1 @_ZNK10extensions13URLPatternSet8is_emptyEv(%"class.extensions::URLPatternSet"* %307) #11
  br i1 %308, label %373, label %309

309:                                              ; preds = %274
  %310 = call i64 @_ZNK10extensions13URLPatternSet4sizeEv(%"class.extensions::URLPatternSet"* %307) #11
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector.96"* nonnull %17, i64 %310)
  %311 = getelementptr inbounds %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet"* %307, i64 0, i32 0, i32 0, i32 0
  %312 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %311, align 8
  %313 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 8, i32 0, i32 0, i32 1, i32 0, i32 0
  %314 = icmp eq %"class.std::__1::__tree_end_node"* %312, %313
  br i1 %314, label %412, label %315

315:                                              ; preds = %309
  %316 = bitcast %"class.std::__1::basic_string"** %305 to i64*
  br label %317

317:                                              ; preds = %315, %370
  %318 = phi %"class.std::__1::__tree_end_node"* [ %312, %315 ], [ %371, %370 ]
  %319 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %318, i64 4
  %320 = bitcast %"class.std::__1::__tree_end_node"* %319 to %class.URLPattern*
  %321 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10URLPattern11GetAsStringEv(%class.URLPattern* %320) #11
  %322 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %305, align 8
  %323 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %306, align 16
  %324 = icmp eq %"class.std::__1::basic_string"* %322, %323
  br i1 %324, label %341, label %325

325:                                              ; preds = %317
  %326 = bitcast %"class.std::__1::basic_string"* %321 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %327 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %326, i64 0, i32 1, i32 0
  %328 = load i8, i8* %327, align 1
  %329 = icmp slt i8 %328, 0
  br i1 %329, label %333, label %330

330:                                              ; preds = %325
  %331 = bitcast %"class.std::__1::basic_string"* %322 to i8*
  %332 = bitcast %"class.std::__1::basic_string"* %321 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %331, i8* align 8 %332, i64 24, i1 false) #11
  br label %338

333:                                              ; preds = %325
  %334 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %321, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %321, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %337 = load i64, i64* %336, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %322, i8* %335, i64 %337) #11
  br label %338

338:                                              ; preds = %333, %330
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %322, i64 1
  %340 = ptrtoint %"class.std::__1::basic_string"* %339 to i64
  store i64 %340, i64* %316, align 8
  br label %342

341:                                              ; preds = %317
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.96"* nonnull %17, %"class.std::__1::basic_string"* dereferenceable(24) %321) #11
  br label %342

342:                                              ; preds = %338, %341
  %343 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %318, i64 1, i32 0
  %344 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %343, align 8
  %345 = icmp eq %"class.std::__1::__tree_node_base"* %344, null
  br i1 %345, label %346, label %354

346:                                              ; preds = %342
  %347 = bitcast %"class.std::__1::__tree_end_node"* %318 to %"class.std::__1::__tree_node_base"*
  %348 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %318, i64 2
  %349 = bitcast %"class.std::__1::__tree_end_node"* %348 to %"class.std::__1::__tree_end_node"**
  %350 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %349, align 8
  %351 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %350, i64 0, i32 0
  %352 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %351, align 8
  %353 = icmp eq %"class.std::__1::__tree_node_base"* %352, %347
  br i1 %353, label %370, label %361

354:                                              ; preds = %342, %354
  %355 = phi %"class.std::__1::__tree_node_base"* [ %357, %354 ], [ %344, %342 ]
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %355, i64 0, i32 0, i32 0
  %357 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %356, align 8
  %358 = icmp eq %"class.std::__1::__tree_node_base"* %357, null
  br i1 %358, label %359, label %354

359:                                              ; preds = %354
  %360 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %355, i64 0, i32 0
  br label %370

361:                                              ; preds = %346, %361
  %362 = phi %"class.std::__1::__tree_end_node"** [ %365, %361 ], [ %349, %346 ]
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to %"class.std::__1::__tree_node_base"**
  %364 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %363, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %364, i64 0, i32 2
  %366 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %365, align 8
  %367 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %366, i64 0, i32 0
  %368 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %367, align 8
  %369 = icmp eq %"class.std::__1::__tree_node_base"* %368, %364
  br i1 %369, label %370, label %361

370:                                              ; preds = %361, %346, %359
  %371 = phi %"class.std::__1::__tree_end_node"* [ %360, %359 ], [ %350, %346 ], [ %366, %361 ]
  %372 = icmp eq %"class.std::__1::__tree_end_node"* %371, %313
  br i1 %372, label %412, label %317

373:                                              ; preds = %274
  %374 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %374) #11
  %375 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %376 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %375, i64 0, i32 1, i32 0
  store i8 10, i8* %376, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %374, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i64 10, i1 false) #11
  %377 = getelementptr inbounds i8, i8* %374, i64 10
  store i8 0, i8* %377, align 2
  %378 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %305, align 8
  %379 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %306, align 16
  %380 = icmp ult %"class.std::__1::basic_string"* %378, %379
  br i1 %380, label %381, label %386

381:                                              ; preds = %373
  %382 = bitcast %"class.std::__1::basic_string"* %378 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %382, i8* nonnull align 8 %374, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %374, i8 0, i64 24, i1 false) #11
  %383 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %378, i64 1
  %384 = ptrtoint %"class.std::__1::basic_string"* %383 to i64
  %385 = bitcast %"class.std::__1::basic_string"** %305 to i64*
  store i64 %384, i64* %385, align 8
  br label %392

386:                                              ; preds = %373
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.96"* nonnull %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %18) #11
  %387 = load i8, i8* %376, align 1
  %388 = icmp slt i8 %387, 0
  br i1 %388, label %389, label %392

389:                                              ; preds = %386
  %390 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %391 = load i8*, i8** %390, align 8
  call void @_ZdlPv(i8* %391) #12
  br label %392

392:                                              ; preds = %381, %386, %389
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %374) #11
  %393 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %393) #11
  %394 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %395 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %394, i64 0, i32 1, i32 0
  store i8 11, i8* %395, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %393, i8* align 1 getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i64 11, i1 false) #11
  %396 = getelementptr inbounds i8, i8* %393, i64 11
  store i8 0, i8* %396, align 1
  %397 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %305, align 8
  %398 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %306, align 16
  %399 = icmp ult %"class.std::__1::basic_string"* %397, %398
  br i1 %399, label %400, label %405

400:                                              ; preds = %392
  %401 = bitcast %"class.std::__1::basic_string"* %397 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %401, i8* nonnull align 8 %393, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %393, i8 0, i64 24, i1 false) #11
  %402 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %397, i64 1
  %403 = ptrtoint %"class.std::__1::basic_string"* %402 to i64
  %404 = bitcast %"class.std::__1::basic_string"** %305 to i64*
  store i64 %403, i64* %404, align 8
  br label %411

405:                                              ; preds = %392
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.96"* nonnull %17, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %19) #11
  %406 = load i8, i8* %395, align 1
  %407 = icmp slt i8 %406, 0
  br i1 %407, label %408, label %411

408:                                              ; preds = %405
  %409 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = load i8*, i8** %409, align 8
  call void @_ZdlPv(i8* %410) #12
  br label %411

411:                                              ; preds = %400, %405, %408
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %393) #11
  br label %412

412:                                              ; preds = %370, %309, %411
  %413 = bitcast %"class.std::__1::vector.96"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %413) #11
  %414 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %20, i64 0, i32 0, i32 0
  %415 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %20, i64 0, i32 0, i32 1
  %416 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %20, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %413, i8 0, i64 24, i1 false) #11
  %417 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 9
  %418 = call i64 @_ZNK10extensions13URLPatternSet4sizeEv(%"class.extensions::URLPatternSet"* %417) #11
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector.96"* nonnull %20, i64 %418)
  %419 = getelementptr inbounds %"class.extensions::URLPatternSet", %"class.extensions::URLPatternSet"* %417, i64 0, i32 0, i32 0, i32 0
  %420 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %419, align 8
  %421 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 9, i32 0, i32 0, i32 1, i32 0, i32 0
  %422 = icmp eq %"class.std::__1::__tree_end_node"* %420, %421
  br i1 %422, label %425, label %423

423:                                              ; preds = %412
  %424 = bitcast %"class.std::__1::basic_string"** %415 to i64*
  br label %742

425:                                              ; preds = %795, %412
  %426 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %426) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %426, i8 -86, i64 96, i1 false)
  call void @_ZN10extensions3api15content_scripts13ContentScriptC1Ev(%"struct.extensions::api::content_scripts::ContentScript"* nonnull %21) #11
  %427 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %21, i64 0, i32 0, i32 0, i32 0
  %428 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %427, align 16
  %429 = icmp eq %"class.std::__1::basic_string"* %428, null
  br i1 %429, label %452, label %430

430:                                              ; preds = %425
  %431 = bitcast %"class.std::__1::basic_string"* %428 to i8*
  %432 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %21, i64 0, i32 0, i32 0, i32 1
  %433 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %432, align 8
  %434 = icmp eq %"class.std::__1::basic_string"* %433, %428
  br i1 %434, label %450, label %435

435:                                              ; preds = %430, %445
  %436 = phi %"class.std::__1::basic_string"* [ %437, %445 ], [ %433, %430 ]
  %437 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %436, i64 -1
  %438 = bitcast %"class.std::__1::basic_string"* %437 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %439 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %438, i64 0, i32 1, i32 0
  %440 = load i8, i8* %439, align 1
  %441 = icmp slt i8 %440, 0
  br i1 %441, label %442, label %445

442:                                              ; preds = %435
  %443 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %437, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %444 = load i8*, i8** %443, align 8
  call void @_ZdlPv(i8* %444) #12
  br label %445

445:                                              ; preds = %442, %435
  %446 = icmp eq %"class.std::__1::basic_string"* %437, %428
  br i1 %446, label %447, label %435

447:                                              ; preds = %445
  %448 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %21 to i8**
  %449 = load i8*, i8** %448, align 16
  br label %450

450:                                              ; preds = %447, %430
  %451 = phi i8* [ %449, %447 ], [ %431, %430 ]
  store %"class.std::__1::basic_string"* %428, %"class.std::__1::basic_string"** %432, align 8
  call void @_ZdlPv(i8* %451) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %426, i8 0, i64 24, i1 false) #11
  br label %452

452:                                              ; preds = %425, %450
  %453 = bitcast %"class.std::__1::vector.96"* %17 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 16
  %455 = bitcast %"struct.extensions::api::content_scripts::ContentScript"* %21 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %455, align 16
  %456 = bitcast %"class.std::__1::basic_string"** %306 to i64*
  %457 = load i64, i64* %456, align 16
  %458 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %21, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %459 = bitcast %"class.std::__1::basic_string"** %458 to i64*
  store i64 %457, i64* %459, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %303, i8 0, i64 24, i1 false) #11
  %460 = call i8* @_Znwm(i64 24) #12
  %461 = bitcast %"class.std::__1::vector.96"* %20 to <2 x i64>*
  %462 = load <2 x i64>, <2 x i64>* %461, align 16
  %463 = bitcast i8* %460 to <2 x i64>*
  store <2 x i64> %462, <2 x i64>* %463, align 8
  %464 = bitcast %"class.std::__1::basic_string"** %416 to i64*
  %465 = load i64, i64* %464, align 16
  %466 = getelementptr inbounds i8, i8* %460, i64 16
  %467 = bitcast i8* %466 to i64*
  store i64 %465, i64* %467, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %413, i8 0, i64 24, i1 false) #11
  %468 = ptrtoint i8* %460 to i64
  %469 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %21, i64 0, i32 1
  %470 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %469, i64 0, i32 0, i32 0, i32 0
  %471 = load %"class.std::__1::vector.96"*, %"class.std::__1::vector.96"** %470, align 8
  %472 = bitcast %"class.std::__1::unique_ptr.117"* %469 to i64*
  store i64 %468, i64* %472, align 8
  %473 = icmp eq %"class.std::__1::vector.96"* %471, null
  br i1 %473, label %502, label %474

474:                                              ; preds = %452
  %475 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %471, i64 0, i32 0, i32 0
  %476 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %475, align 8
  %477 = icmp eq %"class.std::__1::basic_string"* %476, null
  br i1 %477, label %500, label %478

478:                                              ; preds = %474
  %479 = bitcast %"class.std::__1::basic_string"* %476 to i8*
  %480 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %471, i64 0, i32 0, i32 1
  %481 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %480, align 8
  %482 = icmp eq %"class.std::__1::basic_string"* %481, %476
  br i1 %482, label %498, label %483

483:                                              ; preds = %478, %493
  %484 = phi %"class.std::__1::basic_string"* [ %485, %493 ], [ %481, %478 ]
  %485 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %484, i64 -1
  %486 = bitcast %"class.std::__1::basic_string"* %485 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %487 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %486, i64 0, i32 1, i32 0
  %488 = load i8, i8* %487, align 1
  %489 = icmp slt i8 %488, 0
  br i1 %489, label %490, label %493

490:                                              ; preds = %483
  %491 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %485, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %492 = load i8*, i8** %491, align 8
  call void @_ZdlPv(i8* %492) #12
  br label %493

493:                                              ; preds = %490, %483
  %494 = icmp eq %"class.std::__1::basic_string"* %485, %476
  br i1 %494, label %495, label %483

495:                                              ; preds = %493
  %496 = bitcast %"class.std::__1::vector.96"* %471 to i8**
  %497 = load i8*, i8** %496, align 8
  br label %498

498:                                              ; preds = %495, %478
  %499 = phi i8* [ %497, %495 ], [ %479, %478 ]
  store %"class.std::__1::basic_string"* %476, %"class.std::__1::basic_string"** %480, align 8
  call void @_ZdlPv(i8* %499) #12
  br label %500

500:                                              ; preds = %498, %474
  %501 = bitcast %"class.std::__1::vector.96"* %471 to i8*
  call void @_ZdlPv(i8* %501) #12
  br label %502

502:                                              ; preds = %500, %452
  %503 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 6
  %504 = call i8* @_Znwm(i64 24) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %504, i8 0, i64 24, i1 false) #11
  %505 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 6, i32 0, i32 1
  %506 = bitcast %"class.std::__1::basic_string"** %505 to i64*
  %507 = load i64, i64* %506, align 8
  %508 = bitcast %"class.std::__1::vector.96"* %503 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = sub i64 %507, %509
  %511 = sdiv exact i64 %510, 24
  %512 = icmp eq i64 %510, 0
  %513 = inttoptr i64 %509 to %"class.std::__1::basic_string"*
  %514 = inttoptr i64 %507 to %"class.std::__1::basic_string"*
  br i1 %512, label %554, label %515

515:                                              ; preds = %502
  %516 = icmp ugt i64 %511, 768614336404564650
  br i1 %516, label %517, label %519

517:                                              ; preds = %515
  %518 = bitcast i8* %504 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %518) #13
  unreachable

519:                                              ; preds = %515
  %520 = call i8* @_Znwm(i64 %510) #12
  %521 = bitcast i8* %520 to %"class.std::__1::basic_string"*
  %522 = getelementptr inbounds i8, i8* %504, i64 8
  %523 = bitcast i8* %522 to i8**
  store i8* %520, i8** %523, align 8
  %524 = bitcast i8* %504 to i8**
  store i8* %520, i8** %524, align 8
  %525 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %521, i64 %511
  %526 = getelementptr inbounds i8, i8* %504, i64 16
  %527 = bitcast i8* %526 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %525, %"class.std::__1::basic_string"** %527, align 8
  %528 = bitcast i8* %522 to i64*
  %529 = ptrtoint i8* %520 to i64
  %530 = icmp eq %"class.std::__1::basic_string"* %513, %514
  br i1 %530, label %552, label %531

531:                                              ; preds = %519, %546
  %532 = phi %"class.std::__1::basic_string"* [ %548, %546 ], [ %521, %519 ]
  %533 = phi %"class.std::__1::basic_string"* [ %547, %546 ], [ %513, %519 ]
  %534 = bitcast %"class.std::__1::basic_string"* %533 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %535 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %534, i64 0, i32 1, i32 0
  %536 = load i8, i8* %535, align 1
  %537 = icmp slt i8 %536, 0
  br i1 %537, label %541, label %538

538:                                              ; preds = %531
  %539 = bitcast %"class.std::__1::basic_string"* %532 to i8*
  %540 = bitcast %"class.std::__1::basic_string"* %533 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %539, i8* align 8 %540, i64 24, i1 false) #11
  br label %546

541:                                              ; preds = %531
  %542 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %533, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %543 = load i8*, i8** %542, align 8
  %544 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %533, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %545 = load i64, i64* %544, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %532, i8* %543, i64 %545) #11
  br label %546

546:                                              ; preds = %541, %538
  %547 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %533, i64 1
  %548 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %532, i64 1
  %549 = icmp eq %"class.std::__1::basic_string"* %547, %514
  br i1 %549, label %550, label %531

550:                                              ; preds = %546
  %551 = ptrtoint %"class.std::__1::basic_string"* %548 to i64
  br label %552

552:                                              ; preds = %550, %519
  %553 = phi i64 [ %529, %519 ], [ %551, %550 ]
  store i64 %553, i64* %528, align 8
  br label %554

554:                                              ; preds = %502, %552
  %555 = ptrtoint i8* %504 to i64
  %556 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %21, i64 0, i32 7
  %557 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %556, i64 0, i32 0, i32 0, i32 0
  %558 = load %"class.std::__1::vector.96"*, %"class.std::__1::vector.96"** %557, align 8
  %559 = bitcast %"class.std::__1::unique_ptr.117"* %556 to i64*
  store i64 %555, i64* %559, align 8
  %560 = icmp eq %"class.std::__1::vector.96"* %558, null
  br i1 %560, label %589, label %561

561:                                              ; preds = %554
  %562 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %558, i64 0, i32 0, i32 0
  %563 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %562, align 8
  %564 = icmp eq %"class.std::__1::basic_string"* %563, null
  br i1 %564, label %587, label %565

565:                                              ; preds = %561
  %566 = bitcast %"class.std::__1::basic_string"* %563 to i8*
  %567 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %558, i64 0, i32 0, i32 1
  %568 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %567, align 8
  %569 = icmp eq %"class.std::__1::basic_string"* %568, %563
  br i1 %569, label %585, label %570

570:                                              ; preds = %565, %580
  %571 = phi %"class.std::__1::basic_string"* [ %572, %580 ], [ %568, %565 ]
  %572 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %571, i64 -1
  %573 = bitcast %"class.std::__1::basic_string"* %572 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %574 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %573, i64 0, i32 1, i32 0
  %575 = load i8, i8* %574, align 1
  %576 = icmp slt i8 %575, 0
  br i1 %576, label %577, label %580

577:                                              ; preds = %570
  %578 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %572, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %579 = load i8*, i8** %578, align 8
  call void @_ZdlPv(i8* %579) #12
  br label %580

580:                                              ; preds = %577, %570
  %581 = icmp eq %"class.std::__1::basic_string"* %572, %563
  br i1 %581, label %582, label %570

582:                                              ; preds = %580
  %583 = bitcast %"class.std::__1::vector.96"* %558 to i8**
  %584 = load i8*, i8** %583, align 8
  br label %585

585:                                              ; preds = %582, %565
  %586 = phi i8* [ %584, %582 ], [ %566, %565 ]
  store %"class.std::__1::basic_string"* %563, %"class.std::__1::basic_string"** %567, align 8
  call void @_ZdlPv(i8* %586) #12
  br label %587

587:                                              ; preds = %585, %561
  %588 = bitcast %"class.std::__1::vector.96"* %558 to i8*
  call void @_ZdlPv(i8* %588) #12
  br label %589

589:                                              ; preds = %587, %554
  %590 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 7
  %591 = call i8* @_Znwm(i64 24) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %591, i8 0, i64 24, i1 false) #11
  %592 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 7, i32 0, i32 1
  %593 = bitcast %"class.std::__1::basic_string"** %592 to i64*
  %594 = load i64, i64* %593, align 8
  %595 = bitcast %"class.std::__1::vector.96"* %590 to i64*
  %596 = load i64, i64* %595, align 8
  %597 = sub i64 %594, %596
  %598 = sdiv exact i64 %597, 24
  %599 = icmp eq i64 %597, 0
  %600 = inttoptr i64 %596 to %"class.std::__1::basic_string"*
  %601 = inttoptr i64 %594 to %"class.std::__1::basic_string"*
  br i1 %599, label %641, label %602

602:                                              ; preds = %589
  %603 = icmp ugt i64 %598, 768614336404564650
  br i1 %603, label %604, label %606

604:                                              ; preds = %602
  %605 = bitcast i8* %591 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %605) #13
  unreachable

606:                                              ; preds = %602
  %607 = call i8* @_Znwm(i64 %597) #12
  %608 = bitcast i8* %607 to %"class.std::__1::basic_string"*
  %609 = getelementptr inbounds i8, i8* %591, i64 8
  %610 = bitcast i8* %609 to i8**
  store i8* %607, i8** %610, align 8
  %611 = bitcast i8* %591 to i8**
  store i8* %607, i8** %611, align 8
  %612 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %608, i64 %598
  %613 = getelementptr inbounds i8, i8* %591, i64 16
  %614 = bitcast i8* %613 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %612, %"class.std::__1::basic_string"** %614, align 8
  %615 = bitcast i8* %609 to i64*
  %616 = ptrtoint i8* %607 to i64
  %617 = icmp eq %"class.std::__1::basic_string"* %600, %601
  br i1 %617, label %639, label %618

618:                                              ; preds = %606, %633
  %619 = phi %"class.std::__1::basic_string"* [ %635, %633 ], [ %608, %606 ]
  %620 = phi %"class.std::__1::basic_string"* [ %634, %633 ], [ %600, %606 ]
  %621 = bitcast %"class.std::__1::basic_string"* %620 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %622 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %621, i64 0, i32 1, i32 0
  %623 = load i8, i8* %622, align 1
  %624 = icmp slt i8 %623, 0
  br i1 %624, label %628, label %625

625:                                              ; preds = %618
  %626 = bitcast %"class.std::__1::basic_string"* %619 to i8*
  %627 = bitcast %"class.std::__1::basic_string"* %620 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %626, i8* align 8 %627, i64 24, i1 false) #11
  br label %633

628:                                              ; preds = %618
  %629 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %620, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %630 = load i8*, i8** %629, align 8
  %631 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %620, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %632 = load i64, i64* %631, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %619, i8* %630, i64 %632) #11
  br label %633

633:                                              ; preds = %628, %625
  %634 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %620, i64 1
  %635 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %619, i64 1
  %636 = icmp eq %"class.std::__1::basic_string"* %634, %601
  br i1 %636, label %637, label %618

637:                                              ; preds = %633
  %638 = ptrtoint %"class.std::__1::basic_string"* %635 to i64
  br label %639

639:                                              ; preds = %637, %606
  %640 = phi i64 [ %616, %606 ], [ %638, %637 ]
  store i64 %640, i64* %615, align 8
  br label %641

641:                                              ; preds = %589, %639
  %642 = ptrtoint i8* %591 to i64
  %643 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %21, i64 0, i32 8
  %644 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %643, i64 0, i32 0, i32 0, i32 0
  %645 = load %"class.std::__1::vector.96"*, %"class.std::__1::vector.96"** %644, align 16
  %646 = bitcast %"class.std::__1::unique_ptr.117"* %643 to i64*
  store i64 %642, i64* %646, align 16
  %647 = icmp eq %"class.std::__1::vector.96"* %645, null
  br i1 %647, label %676, label %648

648:                                              ; preds = %641
  %649 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %645, i64 0, i32 0, i32 0
  %650 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %649, align 8
  %651 = icmp eq %"class.std::__1::basic_string"* %650, null
  br i1 %651, label %674, label %652

652:                                              ; preds = %648
  %653 = bitcast %"class.std::__1::basic_string"* %650 to i8*
  %654 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %645, i64 0, i32 0, i32 1
  %655 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %654, align 8
  %656 = icmp eq %"class.std::__1::basic_string"* %655, %650
  br i1 %656, label %672, label %657

657:                                              ; preds = %652, %667
  %658 = phi %"class.std::__1::basic_string"* [ %659, %667 ], [ %655, %652 ]
  %659 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %658, i64 -1
  %660 = bitcast %"class.std::__1::basic_string"* %659 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %661 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %660, i64 0, i32 1, i32 0
  %662 = load i8, i8* %661, align 1
  %663 = icmp slt i8 %662, 0
  br i1 %663, label %664, label %667

664:                                              ; preds = %657
  %665 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %659, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %666 = load i8*, i8** %665, align 8
  call void @_ZdlPv(i8* %666) #12
  br label %667

667:                                              ; preds = %664, %657
  %668 = icmp eq %"class.std::__1::basic_string"* %659, %650
  br i1 %668, label %669, label %657

669:                                              ; preds = %667
  %670 = bitcast %"class.std::__1::vector.96"* %645 to i8**
  %671 = load i8*, i8** %670, align 8
  br label %672

672:                                              ; preds = %669, %652
  %673 = phi i8* [ %671, %669 ], [ %653, %652 ]
  store %"class.std::__1::basic_string"* %650, %"class.std::__1::basic_string"** %654, align 8
  call void @_ZdlPv(i8* %673) #12
  br label %674

674:                                              ; preds = %672, %648
  %675 = bitcast %"class.std::__1::vector.96"* %645 to i8*
  call void @_ZdlPv(i8* %675) #12
  br label %676

676:                                              ; preds = %674, %641
  %677 = call i8* @_Znwm(i64 24) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %677, i8 0, i64 24, i1 false) #11
  %678 = ptrtoint i8* %677 to i64
  %679 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %21, i64 0, i32 3
  %680 = getelementptr inbounds %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117"* %679, i64 0, i32 0, i32 0, i32 0
  %681 = load %"class.std::__1::vector.96"*, %"class.std::__1::vector.96"** %680, align 8
  %682 = bitcast %"class.std::__1::unique_ptr.117"* %679 to i64*
  store i64 %678, i64* %682, align 8
  %683 = icmp eq %"class.std::__1::vector.96"* %681, null
  %684 = bitcast i8* %677 to %"class.std::__1::vector.96"*
  br i1 %683, label %714, label %685

685:                                              ; preds = %676
  %686 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %681, i64 0, i32 0, i32 0
  %687 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %686, align 8
  %688 = icmp eq %"class.std::__1::basic_string"* %687, null
  br i1 %688, label %711, label %689

689:                                              ; preds = %685
  %690 = bitcast %"class.std::__1::basic_string"* %687 to i8*
  %691 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %681, i64 0, i32 0, i32 1
  %692 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %691, align 8
  %693 = icmp eq %"class.std::__1::basic_string"* %692, %687
  br i1 %693, label %709, label %694

694:                                              ; preds = %689, %704
  %695 = phi %"class.std::__1::basic_string"* [ %696, %704 ], [ %692, %689 ]
  %696 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %695, i64 -1
  %697 = bitcast %"class.std::__1::basic_string"* %696 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %698 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %697, i64 0, i32 1, i32 0
  %699 = load i8, i8* %698, align 1
  %700 = icmp slt i8 %699, 0
  br i1 %700, label %701, label %704

701:                                              ; preds = %694
  %702 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %696, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %703 = load i8*, i8** %702, align 8
  call void @_ZdlPv(i8* %703) #12
  br label %704

704:                                              ; preds = %701, %694
  %705 = icmp eq %"class.std::__1::basic_string"* %696, %687
  br i1 %705, label %706, label %694

706:                                              ; preds = %704
  %707 = bitcast %"class.std::__1::vector.96"* %681 to i8**
  %708 = load i8*, i8** %707, align 8
  br label %709

709:                                              ; preds = %706, %689
  %710 = phi i8* [ %708, %706 ], [ %690, %689 ]
  store %"class.std::__1::basic_string"* %687, %"class.std::__1::basic_string"** %691, align 8
  call void @_ZdlPv(i8* %710) #12
  br label %711

711:                                              ; preds = %709, %685
  %712 = bitcast %"class.std::__1::vector.96"* %681 to i8*
  call void @_ZdlPv(i8* %712) #12
  %713 = load %"class.std::__1::vector.96"*, %"class.std::__1::vector.96"** %680, align 8
  br label %714

714:                                              ; preds = %711, %676
  %715 = phi %"class.std::__1::vector.96"* [ %713, %711 ], [ %684, %676 ]
  %716 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %716) #11
  %717 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %718 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %717, i64 0, i32 1, i32 0
  store i8 9, i8* %718, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %716, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i64 9, i1 false) #11
  %719 = getelementptr inbounds i8, i8* %716, i64 9
  store i8 0, i8* %719, align 1
  %720 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %715, i64 0, i32 0, i32 1
  %721 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %720, align 8
  %722 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %715, i64 0, i32 0, i32 2, i32 0, i32 0
  %723 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %722, align 8
  %724 = icmp ult %"class.std::__1::basic_string"* %721, %723
  br i1 %724, label %725, label %730

725:                                              ; preds = %714
  %726 = bitcast %"class.std::__1::basic_string"* %721 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %726, i8* nonnull align 8 %716, i64 24, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %716, i8 0, i64 24, i1 false) #11
  %727 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %721, i64 1
  %728 = ptrtoint %"class.std::__1::basic_string"* %727 to i64
  %729 = bitcast %"class.std::__1::basic_string"** %720 to i64*
  store i64 %728, i64* %729, align 8
  br label %731

730:                                              ; preds = %714
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.96"* %715, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %22) #11
  br label %731

731:                                              ; preds = %725, %730
  %732 = load i8, i8* %718, align 1
  %733 = icmp slt i8 %732, 0
  br i1 %733, label %734, label %737

734:                                              ; preds = %731
  %735 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %736 = load i8*, i8** %735, align 8
  call void @_ZdlPv(i8* %736) #12
  br label %737

737:                                              ; preds = %731, %734
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %716) #11
  %738 = getelementptr inbounds %"class.extensions::UserScript", %"class.extensions::UserScript"* %6, i64 0, i32 0
  %739 = load i32, i32* %738, align 8
  %740 = add i32 %739, -1
  %741 = icmp ult i32 %740, 3
  br i1 %741, label %798, label %803

742:                                              ; preds = %423, %795
  %743 = phi %"class.std::__1::__tree_end_node"* [ %420, %423 ], [ %796, %795 ]
  %744 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %743, i64 4
  %745 = bitcast %"class.std::__1::__tree_end_node"* %744 to %class.URLPattern*
  %746 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10URLPattern11GetAsStringEv(%class.URLPattern* %745) #11
  %747 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %415, align 8
  %748 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %416, align 16
  %749 = icmp eq %"class.std::__1::basic_string"* %747, %748
  br i1 %749, label %766, label %750

750:                                              ; preds = %742
  %751 = bitcast %"class.std::__1::basic_string"* %746 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %752 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %751, i64 0, i32 1, i32 0
  %753 = load i8, i8* %752, align 1
  %754 = icmp slt i8 %753, 0
  br i1 %754, label %758, label %755

755:                                              ; preds = %750
  %756 = bitcast %"class.std::__1::basic_string"* %747 to i8*
  %757 = bitcast %"class.std::__1::basic_string"* %746 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %756, i8* align 8 %757, i64 24, i1 false) #11
  br label %763

758:                                              ; preds = %750
  %759 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %746, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %760 = load i8*, i8** %759, align 8
  %761 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %746, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %762 = load i64, i64* %761, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %747, i8* %760, i64 %762) #11
  br label %763

763:                                              ; preds = %758, %755
  %764 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %747, i64 1
  %765 = ptrtoint %"class.std::__1::basic_string"* %764 to i64
  store i64 %765, i64* %424, align 8
  br label %767

766:                                              ; preds = %742
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.96"* nonnull %20, %"class.std::__1::basic_string"* dereferenceable(24) %746) #11
  br label %767

767:                                              ; preds = %763, %766
  %768 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %743, i64 1, i32 0
  %769 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %768, align 8
  %770 = icmp eq %"class.std::__1::__tree_node_base"* %769, null
  br i1 %770, label %771, label %779

771:                                              ; preds = %767
  %772 = bitcast %"class.std::__1::__tree_end_node"* %743 to %"class.std::__1::__tree_node_base"*
  %773 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %743, i64 2
  %774 = bitcast %"class.std::__1::__tree_end_node"* %773 to %"class.std::__1::__tree_end_node"**
  %775 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %774, align 8
  %776 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %775, i64 0, i32 0
  %777 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %776, align 8
  %778 = icmp eq %"class.std::__1::__tree_node_base"* %777, %772
  br i1 %778, label %795, label %786

779:                                              ; preds = %767, %779
  %780 = phi %"class.std::__1::__tree_node_base"* [ %782, %779 ], [ %769, %767 ]
  %781 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %780, i64 0, i32 0, i32 0
  %782 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %781, align 8
  %783 = icmp eq %"class.std::__1::__tree_node_base"* %782, null
  br i1 %783, label %784, label %779

784:                                              ; preds = %779
  %785 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %780, i64 0, i32 0
  br label %795

786:                                              ; preds = %771, %786
  %787 = phi %"class.std::__1::__tree_end_node"** [ %790, %786 ], [ %774, %771 ]
  %788 = bitcast %"class.std::__1::__tree_end_node"** %787 to %"class.std::__1::__tree_node_base"**
  %789 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %788, align 8
  %790 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %789, i64 0, i32 2
  %791 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %790, align 8
  %792 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %791, i64 0, i32 0
  %793 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %792, align 8
  %794 = icmp eq %"class.std::__1::__tree_node_base"* %793, %789
  br i1 %794, label %795, label %786

795:                                              ; preds = %786, %771, %784
  %796 = phi %"class.std::__1::__tree_end_node"* [ %785, %784 ], [ %775, %771 ], [ %791, %786 ]
  %797 = icmp eq %"class.std::__1::__tree_end_node"* %796, %421
  br i1 %797, label %425, label %742

798:                                              ; preds = %737
  %799 = sext i32 %740 to i64
  %800 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN10extensions28ConvertUserScriptToExtensionERKN4base8FilePathERK4GURLS3_PNSt3__112basic_stringIDsNS7_11char_traitsIDsEENS7_9allocatorIDsEEEE, i64 0, i64 %799
  %801 = load i32, i32* %800, align 4
  %802 = getelementptr inbounds %"struct.extensions::api::content_scripts::ContentScript", %"struct.extensions::api::content_scripts::ContentScript"* %21, i64 0, i32 9
  store i32 %801, i32* %802, align 8
  br label %803

803:                                              ; preds = %737, %798
  %804 = call i8* @_Znwm(i64 32) #12
  %805 = bitcast i8* %804 to %"class.base::ListValue"*
  call void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"* nonnull %805) #11
  %806 = call %"class.base::DictionaryValue"* @_ZNK10extensions3api15content_scripts13ContentScript7ToValueEv(%"struct.extensions::api::content_scripts::ContentScript"* nonnull %21) #11
  %807 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %806, i64 0, i32 0
  call void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"* nonnull %805, %"class.base::Value"* %807) #11
  %808 = bitcast i8* %804 to %"class.base::Value"*
  %809 = call %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"* nonnull %86, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @_ZN10extensions3api15content_scripts12ManifestKeys15kContentScriptsE, i64 0, i64 0), i64 15, %"class.base::Value"* nonnull %808) #11
  %810 = bitcast %"class.base::FilePath"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %810) #11
  %811 = bitcast %"class.base::FilePath"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %811, i8 -86, i64 24, i1 false)
  %812 = call dereferenceable(24) %"class.base::FilePath"* @_ZNK4base13ScopedTempDir7GetPathEv(%"class.base::ScopedTempDir"* nonnull %9) #11
  %813 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions17kManifestFilenameE, i64 0, i64 0)) #11
  call void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %23, %"class.base::FilePath"* %812, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN10extensions17kManifestFilenameE, i64 0, i64 0), i64 %813) #11
  %814 = bitcast %class.JSONFileValueSerializer* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %814) #11
  %815 = bitcast %class.JSONFileValueSerializer* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %815, i8 -86, i64 32, i1 false)
  call void @_ZN23JSONFileValueSerializerC1ERKN4base8FilePathE(%class.JSONFileValueSerializer* nonnull %24, %"class.base::FilePath"* nonnull dereferenceable(24) %23) #11
  %816 = bitcast i8* %85 to %"class.base::Value"*
  %817 = call zeroext i1 @_ZN23JSONFileValueSerializer9SerializeERKN4base5ValueE(%class.JSONFileValueSerializer* nonnull %24, %"class.base::Value"* nonnull dereferenceable(32) %816) #11
  br i1 %817, label %820, label %818

818:                                              ; preds = %803
  %819 = call dereferenceable(24) %"class.std::__1::basic_string.87"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.87"* %3, i16* getelementptr inbounds ([22 x i16], [22 x i16]* @.str.10, i64 0, i64 0)) #11
  br label %861

820:                                              ; preds = %803
  %821 = bitcast %"class.base::FilePath"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %821) #11
  %822 = call dereferenceable(24) %"class.base::FilePath"* @_ZNK4base13ScopedTempDir7GetPathEv(%"class.base::ScopedTempDir"* nonnull %9) #11
  call void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull sret %25, %"class.base::FilePath"* %822, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i64 9) #11
  %823 = call zeroext i1 @_ZN4base8CopyFileERKNS_8FilePathES2_(%"class.base::FilePath"* dereferenceable(24) %0, %"class.base::FilePath"* nonnull dereferenceable(24) %25) #11
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %821) #11
  br i1 %823, label %826, label %824

824:                                              ; preds = %820
  %825 = call dereferenceable(24) %"class.std::__1::basic_string.87"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.87"* %3, i16* getelementptr inbounds ([28 x i16], [28 x i16]* @.str.11, i64 0, i64 0)) #11
  br label %861

826:                                              ; preds = %820
  %827 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %827) #11
  %828 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %829 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %827, i8 0, i64 24, i1 false) #11
  %830 = call dereferenceable(24) %"class.base::FilePath"* @_ZNK4base13ScopedTempDir7GetPathEv(%"class.base::ScopedTempDir"* nonnull %9) #11
  %831 = call %"class.extensions::Extension"* @_ZN10extensions9Extension6CreateERKN4base8FilePathENS_5mojom16ManifestLocationERKNS1_15DictionaryValueEiPNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24) %830, i32 1, %"class.base::DictionaryValue"* nonnull dereferenceable(32) %86, i32 0, %"class.std::__1::basic_string"* nonnull %26) #11
  %832 = ptrtoint %"class.extensions::Extension"* %831 to i64
  %833 = bitcast %"class.std::__1::basic_string.87"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %833) #11
  %834 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %835 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %834, i64 0, i32 1, i32 0
  %836 = load i8, i8* %835, align 1
  %837 = icmp slt i8 %836, 0
  %838 = load i8*, i8** %828, align 8
  %839 = select i1 %837, i8* %838, i8* %827
  %840 = load i64, i64* %829, align 8
  %841 = zext i8 %836 to i64
  %842 = select i1 %837, i64 %840, i64 %841
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.87"* nonnull sret %27, i8* %839, i64 %842) #11
  %843 = bitcast %"class.std::__1::basic_string.87"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %844 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %843, i64 0, i32 1, i32 1
  %845 = load i8, i8* %844, align 1
  %846 = icmp slt i8 %845, 0
  br i1 %846, label %847, label %850

847:                                              ; preds = %826
  %848 = bitcast %"class.std::__1::basic_string.87"* %3 to i8**
  %849 = load i8*, i8** %848, align 8
  call void @_ZdlPv(i8* %849) #12
  br label %850

850:                                              ; preds = %847, %826
  %851 = bitcast %"class.std::__1::basic_string.87"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %851, i8* nonnull align 8 %833, i64 24, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %833) #11
  %852 = icmp eq %"class.extensions::Extension"* %831, null
  br i1 %852, label %854, label %853

853:                                              ; preds = %850
  call void @_ZN4base13ScopedTempDir4TakeEv(%"class.base::FilePath"* nonnull sret %28, %"class.base::ScopedTempDir"* nonnull %9) #11
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %28) #11
  br label %854

854:                                              ; preds = %850, %853
  %855 = phi i64 [ %832, %853 ], [ 0, %850 ]
  %856 = load i8, i8* %835, align 1
  %857 = icmp slt i8 %856, 0
  br i1 %857, label %858, label %860

858:                                              ; preds = %854
  %859 = load i8*, i8** %828, align 8
  call void @_ZdlPv(i8* %859) #12
  br label %860

860:                                              ; preds = %854, %858
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %827) #11
  br label %861

861:                                              ; preds = %818, %824, %860
  %862 = phi i64 [ %855, %860 ], [ 0, %824 ], [ 0, %818 ]
  call void @_ZN23JSONFileValueSerializerD1Ev(%class.JSONFileValueSerializer* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %814) #11
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %810) #11
  call void @_ZN10extensions3api15content_scripts13ContentScriptD1Ev(%"struct.extensions::api::content_scripts::ContentScript"* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %426) #11
  %863 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %414, align 16
  %864 = icmp eq %"class.std::__1::basic_string"* %863, null
  br i1 %864, label %886, label %865

865:                                              ; preds = %861
  %866 = bitcast %"class.std::__1::basic_string"* %863 to i8*
  %867 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %415, align 8
  %868 = icmp eq %"class.std::__1::basic_string"* %867, %863
  br i1 %868, label %884, label %869

869:                                              ; preds = %865, %879
  %870 = phi %"class.std::__1::basic_string"* [ %871, %879 ], [ %867, %865 ]
  %871 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %870, i64 -1
  %872 = bitcast %"class.std::__1::basic_string"* %871 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %873 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %872, i64 0, i32 1, i32 0
  %874 = load i8, i8* %873, align 1
  %875 = icmp slt i8 %874, 0
  br i1 %875, label %876, label %879

876:                                              ; preds = %869
  %877 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %871, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %878 = load i8*, i8** %877, align 8
  call void @_ZdlPv(i8* %878) #12
  br label %879

879:                                              ; preds = %876, %869
  %880 = icmp eq %"class.std::__1::basic_string"* %871, %863
  br i1 %880, label %881, label %869

881:                                              ; preds = %879
  %882 = bitcast %"class.std::__1::vector.96"* %20 to i8**
  %883 = load i8*, i8** %882, align 16
  br label %884

884:                                              ; preds = %881, %865
  %885 = phi i8* [ %883, %881 ], [ %866, %865 ]
  store %"class.std::__1::basic_string"* %863, %"class.std::__1::basic_string"** %415, align 8
  call void @_ZdlPv(i8* %885) #12
  br label %886

886:                                              ; preds = %861, %884
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %413) #11
  %887 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %304, align 16
  %888 = icmp eq %"class.std::__1::basic_string"* %887, null
  br i1 %888, label %910, label %889

889:                                              ; preds = %886
  %890 = bitcast %"class.std::__1::basic_string"* %887 to i8*
  %891 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %305, align 8
  %892 = icmp eq %"class.std::__1::basic_string"* %891, %887
  br i1 %892, label %908, label %893

893:                                              ; preds = %889, %903
  %894 = phi %"class.std::__1::basic_string"* [ %895, %903 ], [ %891, %889 ]
  %895 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %894, i64 -1
  %896 = bitcast %"class.std::__1::basic_string"* %895 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %897 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %896, i64 0, i32 1, i32 0
  %898 = load i8, i8* %897, align 1
  %899 = icmp slt i8 %898, 0
  br i1 %899, label %900, label %903

900:                                              ; preds = %893
  %901 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %895, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %902 = load i8*, i8** %901, align 8
  call void @_ZdlPv(i8* %902) #12
  br label %903

903:                                              ; preds = %900, %893
  %904 = icmp eq %"class.std::__1::basic_string"* %895, %887
  br i1 %904, label %905, label %893

905:                                              ; preds = %903
  %906 = bitcast %"class.std::__1::vector.96"* %17 to i8**
  %907 = load i8*, i8** %906, align 16
  br label %908

908:                                              ; preds = %905, %889
  %909 = phi i8* [ %907, %905 ], [ %890, %889 ]
  store %"class.std::__1::basic_string"* %887, %"class.std::__1::basic_string"** %305, align 8
  call void @_ZdlPv(i8* %909) #12
  br label %910

910:                                              ; preds = %886, %908
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %303) #11
  %911 = load i8, i8* %292, align 1
  %912 = icmp slt i8 %911, 0
  br i1 %912, label %913, label %915

913:                                              ; preds = %910
  %914 = load i8*, i8** %209, align 8
  call void @_ZdlPv(i8* %914) #12
  br label %915

915:                                              ; preds = %910, %913
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %208) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %207) #11
  %916 = load i8, i8* %211, align 1
  %917 = icmp slt i8 %916, 0
  br i1 %917, label %918, label %920

918:                                              ; preds = %915
  %919 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %919) #12
  br label %920

920:                                              ; preds = %915, %918
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #11
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %816) #11
  call void @_ZdlPv(i8* nonnull %85) #12
  br label %921

921:                                              ; preds = %920, %82
  %922 = phi i64 [ %862, %920 ], [ 0, %82 ]
  call void @_ZN4base13ScopedTempDirD1Ev(%"class.base::ScopedTempDir"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #11
  br label %923

923:                                              ; preds = %921, %76
  %924 = phi i64 [ 0, %76 ], [ %922, %921 ]
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #11
  br label %925

925:                                              ; preds = %923, %62
  %926 = phi i64 [ %924, %923 ], [ 0, %62 ]
  call void @_ZN10extensions10UserScriptD1Ev(%"class.extensions::UserScript"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 328, i8* nonnull %50) #11
  br label %927

927:                                              ; preds = %925, %47, %33
  %928 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %37, %925 ], [ %37, %47 ], [ %35, %33 ]
  %929 = phi i64 [ %926, %925 ], [ 0, %47 ], [ 0, %33 ]
  %930 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %928, i64 0, i32 1, i32 0
  %931 = load i8, i8* %930, align 1
  %932 = icmp slt i8 %931, 0
  br i1 %932, label %933, label %935

933:                                              ; preds = %927
  %934 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %934) #12
  br label %935

935:                                              ; preds = %927, %933
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  %936 = inttoptr i64 %929 to %"class.extensions::Extension"*
  ret %"class.extensions::Extension"* %936
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN10extensions10UserScriptC1Ev(%"class.extensions::UserScript"*) unnamed_addr #2

declare zeroext i1 @_ZN10extensions16UserScriptLoader19ParseMetadataHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS_10UserScriptE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.extensions::UserScript"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN10extensions9file_util17GetInstallTempDirERKN4base8FilePathE(%"class.base::FilePath"* sret, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base13ScopedTempDirC1Ev(%"class.base::ScopedTempDir"*) unnamed_addr #2

declare zeroext i1 @_ZN4base13ScopedTempDir28CreateUniqueTempDirUnderPathERKNS_8FilePathE(%"class.base::ScopedTempDir"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #2

declare void @_ZN6crypto16SHA256HashStringEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPvm(i8*, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base12Base64EncodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"*, i8*, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZNK4GURL15ExtractFileNameEv(%"class.std::__1::basic_string"* sret, %class.GURL*) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base15DictionaryValue10SetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::DictionaryValue"*, i8*, i64, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK10extensions13URLPatternSet8is_emptyEv(%"class.extensions::URLPatternSet"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector.96"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.96"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::basic_string"*
  br i1 %10, label %12, label %62

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #13
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::basic_string"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::basic_string"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::basic_string"*
  %29 = icmp eq %"class.std::__1::basic_string"* %28, %11
  br i1 %29, label %30, label %31

30:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %57

31:                                               ; preds = %17, %31
  %32 = phi %"class.std::__1::basic_string"* [ %34, %31 ], [ %24, %17 ]
  %33 = phi %"class.std::__1::basic_string"* [ %35, %31 ], [ %28, %17 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 -1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 -1
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #11
  %38 = icmp eq %"class.std::__1::basic_string"* %35, %11
  br i1 %38, label %39, label %31

39:                                               ; preds = %31
  %40 = ptrtoint %"class.std::__1::basic_string"* %34 to i64
  %41 = load i64, i64* %6, align 8
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %43 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  store i64 %40, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %42, %43
  br i1 %44, label %57, label %45

45:                                               ; preds = %39, %55
  %46 = phi %"class.std::__1::basic_string"* [ %47, %55 ], [ %42, %39 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #12
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string"* %47, %43
  br i1 %56, label %57, label %45

57:                                               ; preds = %55, %30, %39
  %58 = phi i64 [ %7, %30 ], [ %41, %39 ], [ %41, %55 ]
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %60, %57, %2
  ret void
}

declare i64 @_ZNK10extensions13URLPatternSet4sizeEv(%"class.extensions::URLPatternSet"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK10URLPattern11GetAsStringEv(%class.URLPattern*) local_unnamed_addr #2

declare void @_ZN10extensions3api15content_scripts13ContentScriptC1Ev(%"struct.extensions::api::content_scripts::ContentScript"*) unnamed_addr #2

declare void @_ZN4base9ListValue6AppendENSt3__110unique_ptrINS_5ValueENS1_14default_deleteIS3_EEEE(%"class.base::ListValue"*, %"class.base::Value"*) local_unnamed_addr #2

declare %"class.base::DictionaryValue"* @_ZNK10extensions3api15content_scripts13ContentScript7ToValueEv(%"struct.extensions::api::content_scripts::ContentScript"*) local_unnamed_addr #2

declare %"class.base::Value"* @_ZN4base15DictionaryValue3SetENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS2_10unique_ptrINS_5ValueENS2_14default_deleteIS7_EEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.base::Value"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.base::FilePath"* @_ZNK4base13ScopedTempDir7GetPathEv(%"class.base::ScopedTempDir"*) local_unnamed_addr #2

declare void @_ZNK4base8FilePath6AppendENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #2

declare void @_ZN23JSONFileValueSerializerC1ERKN4base8FilePathE(%class.JSONFileValueSerializer*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #2

declare zeroext i1 @_ZN23JSONFileValueSerializer9SerializeERKN4base5ValueE(%class.JSONFileValueSerializer*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #2

declare zeroext i1 @_ZN4base8CopyFileERKNS_8FilePathES2_(%"class.base::FilePath"* dereferenceable(24), %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK4base8FilePath11AppendASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* sret, %"class.base::FilePath"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #4

declare %"class.extensions::Extension"* @_ZN10extensions9Extension6CreateERKN4base8FilePathENS_5mojom16ManifestLocationERKNS1_15DictionaryValueEiPNSt3__112basic_stringIcNSA_11char_traitsIcEENSA_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24), i32, %"class.base::DictionaryValue"* dereferenceable(32), i32, %"class.std::__1::basic_string"*) local_unnamed_addr #2

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.87"* sret, i8*, i64) local_unnamed_addr #2

declare void @_ZN4base13ScopedTempDir4TakeEv(%"class.base::FilePath"* sret, %"class.base::ScopedTempDir"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN23JSONFileValueSerializerD1Ev(%class.JSONFileValueSerializer*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10extensions3api15content_scripts13ContentScriptD1Ev(%"struct.extensions::api::content_scripts::ContentScript"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base13ScopedTempDirD1Ev(%"class.base::ScopedTempDir"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN10extensions10UserScriptD1Ev(%"class.extensions::UserScript"*) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIRKS6_EEvOT_(%"class.std::__1::vector.96"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.96"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.96"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #11
  br label %49

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %34, i8* %46, i64 %48) #11
  br label %49

49:                                               ; preds = %41, %44
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %51 = ptrtoint %"class.std::__1::basic_string"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %0, i64 0, i32 0, i32 0
  %53 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %52, align 8
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %55 = icmp eq %"class.std::__1::basic_string"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  br label %69

58:                                               ; preds = %49, %58
  %59 = phi %"class.std::__1::basic_string"* [ %61, %58 ], [ %34, %49 ]
  %60 = phi %"class.std::__1::basic_string"* [ %62, %58 ], [ %54, %49 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 -1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %63 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false) #11
  %65 = icmp eq %"class.std::__1::basic_string"* %62, %53
  br i1 %65, label %66, label %58

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %69

69:                                               ; preds = %56, %66
  %70 = phi %"class.std::__1::basic_string"* [ %53, %56 ], [ %68, %66 ]
  %71 = phi %"class.std::__1::basic_string"* [ %34, %56 ], [ %61, %66 ]
  %72 = phi i64 [ %57, %56 ], [ %67, %66 ]
  %73 = ptrtoint %"class.std::__1::basic_string"* %71 to i64
  store i64 %73, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %74 = inttoptr i64 %72 to %"class.std::__1::basic_string"*
  %75 = icmp eq %"class.std::__1::basic_string"* %70, %74
  br i1 %75, label %88, label %76

76:                                               ; preds = %69, %86
  %77 = phi %"class.std::__1::basic_string"* [ %78, %86 ], [ %70, %69 ]
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #12
  br label %86

86:                                               ; preds = %83, %76
  %87 = icmp eq %"class.std::__1::basic_string"* %78, %74
  br i1 %87, label %88, label %76

88:                                               ; preds = %86, %69
  %89 = icmp eq i64 %72, 0
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = inttoptr i64 %72 to i8*
  tail call void @_ZdlPv(i8* %91) #12
  br label %92

92:                                               ; preds = %88, %90
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.87"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE6assignEPKDs(%"class.std::__1::basic_string.87"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i16, i16* %1, align 2
  %4 = tail call i1 @llvm.is.constant.i16(i16 %3)
  %5 = icmp eq i16 %3, 0
  br i1 %4, label %6, label %667

6:                                                ; preds = %2
  br i1 %5, label %24, label %7

7:                                                ; preds = %6, %7
  %8 = phi i64 [ %10, %7 ], [ 0, %6 ]
  %9 = phi i16* [ %11, %7 ], [ %1, %6 ]
  %10 = add i64 %8, 1
  %11 = getelementptr inbounds i16, i16* %9, i64 1
  %12 = load i16, i16* %11, align 2
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %7

14:                                               ; preds = %7
  %15 = icmp ult i64 %10, 11
  br label %16

16:                                               ; preds = %14, %16
  %17 = phi i64 [ %19, %16 ], [ 0, %14 ]
  %18 = phi i16* [ %20, %16 ], [ %1, %14 ]
  %19 = add i64 %17, 1
  %20 = getelementptr inbounds i16, i16* %18, i64 1
  %21 = load i16, i16* %20, align 2
  %22 = icmp eq i16 %21, 0
  br i1 %22, label %23, label %16

23:                                               ; preds = %16
  br i1 %15, label %24, label %330

24:                                               ; preds = %6, %23
  %25 = phi i64 [ %19, %23 ], [ 0, %6 ]
  %26 = bitcast %"class.std::__1::basic_string.87"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.std::__1::basic_string.87", %"class.std::__1::basic_string.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %25, i64* %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string.87", %"class.std::__1::basic_string.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  br label %37

34:                                               ; preds = %24
  %35 = trunc i64 %25 to i8
  store i8 %35, i8* %27, align 1
  %36 = bitcast %"class.std::__1::basic_string.87"* %0 to i16*
  br label %37

37:                                               ; preds = %34, %30
  %38 = phi i16* [ %33, %30 ], [ %36, %34 ]
  %39 = icmp eq i64 %25, 0
  br i1 %39, label %328, label %40

40:                                               ; preds = %37
  %41 = icmp ult i16* %38, %1
  br i1 %41, label %42, label %185

42:                                               ; preds = %40
  %43 = icmp ult i64 %25, 16
  br i1 %43, label %132, label %44

44:                                               ; preds = %42
  %45 = getelementptr i16, i16* %38, i64 %25
  %46 = getelementptr i16, i16* %1, i64 %25
  %47 = icmp ult i16* %38, %46
  %48 = icmp ugt i16* %45, %1
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %44
  %51 = and i64 %25, -16
  %52 = sub i64 %25, %51
  %53 = getelementptr i16, i16* %1, i64 %51
  %54 = getelementptr i16, i16* %38, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %1, i64 %63
  %66 = getelementptr i16, i16* %38, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !8
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !8
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !11, !noalias !8
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !11, !noalias !8
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %1, i64 %75
  %77 = getelementptr i16, i16* %38, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !8
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !8
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !11, !noalias !8
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !11, !noalias !8
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %1, i64 %86
  %88 = getelementptr i16, i16* %38, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !8
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !8
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !11, !noalias !8
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !11, !noalias !8
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %1, i64 %97
  %99 = getelementptr i16, i16* %38, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !8
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !8
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !11, !noalias !8
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !11, !noalias !8
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !13

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %1, i64 %115
  %118 = getelementptr i16, i16* %38, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !8
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !8
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !11, !noalias !8
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !11, !noalias !8
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !15

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %25, %51
  br i1 %131, label %328, label %132

132:                                              ; preds = %130, %44, %42
  %133 = phi i64 [ %25, %44 ], [ %25, %42 ], [ %52, %130 ]
  %134 = phi i16* [ %1, %44 ], [ %1, %42 ], [ %53, %130 ]
  %135 = phi i16* [ %38, %44 ], [ %38, %42 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !17

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %328, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %328, label %155, !llvm.loop !18

185:                                              ; preds = %40
  %186 = icmp ugt i16* %38, %1
  br i1 %186, label %187, label %328

187:                                              ; preds = %185
  %188 = getelementptr inbounds i16, i16* %1, i64 %25
  %189 = getelementptr inbounds i16, i16* %38, i64 %25
  %190 = icmp ult i64 %25, 16
  br i1 %190, label %275, label %191

191:                                              ; preds = %187
  %192 = icmp ult i16* %38, %188
  %193 = icmp ugt i16* %189, %1
  %194 = and i1 %192, %193
  br i1 %194, label %275, label %195

195:                                              ; preds = %191
  %196 = and i64 %25, -16
  %197 = sub i64 %25, %196
  %198 = sub i64 0, %196
  %199 = getelementptr i16, i16* %188, i64 %198
  %200 = sub i64 0, %196
  %201 = getelementptr i16, i16* %189, i64 %200
  %202 = add i64 %196, -16
  %203 = lshr exact i64 %202, 4
  %204 = add nuw nsw i64 %203, 1
  %205 = and i64 %204, 1
  %206 = icmp eq i64 %202, 0
  br i1 %206, label %253, label %207

207:                                              ; preds = %195
  %208 = sub nuw nsw i64 %204, %205
  %209 = getelementptr i16, i16* %188, i64 -1
  %210 = getelementptr i16, i16* %189, i64 -1
  %211 = getelementptr i16, i16* %188, i64 -1
  %212 = getelementptr i16, i16* %189, i64 -1
  br label %213

213:                                              ; preds = %213, %207
  %214 = phi i64 [ 0, %207 ], [ %248, %213 ]
  %215 = phi i64 [ %208, %207 ], [ %249, %213 ]
  %216 = sub i64 0, %214
  %217 = sub i64 0, %214
  %218 = getelementptr inbounds i16, i16* %210, i64 %217
  %219 = getelementptr inbounds i16, i16* %209, i64 %216
  %220 = getelementptr inbounds i16, i16* %219, i64 -7
  %221 = bitcast i16* %220 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !19
  %223 = getelementptr inbounds i16, i16* %219, i64 -8
  %224 = getelementptr inbounds i16, i16* %223, i64 -7
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2, !alias.scope !19
  %227 = getelementptr inbounds i16, i16* %218, i64 -7
  %228 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %228, align 2, !alias.scope !22, !noalias !19
  %229 = getelementptr inbounds i16, i16* %218, i64 -8
  %230 = getelementptr inbounds i16, i16* %229, i64 -7
  %231 = bitcast i16* %230 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %231, align 2, !alias.scope !22, !noalias !19
  %232 = sub nuw nsw i64 -16, %214
  %233 = sub nuw nsw i64 -16, %214
  %234 = getelementptr inbounds i16, i16* %212, i64 %233
  %235 = getelementptr inbounds i16, i16* %211, i64 %232
  %236 = getelementptr inbounds i16, i16* %235, i64 -7
  %237 = bitcast i16* %236 to <8 x i16>*
  %238 = load <8 x i16>, <8 x i16>* %237, align 2, !alias.scope !19
  %239 = getelementptr inbounds i16, i16* %235, i64 -8
  %240 = getelementptr inbounds i16, i16* %239, i64 -7
  %241 = bitcast i16* %240 to <8 x i16>*
  %242 = load <8 x i16>, <8 x i16>* %241, align 2, !alias.scope !19
  %243 = getelementptr inbounds i16, i16* %234, i64 -7
  %244 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %238, <8 x i16>* %244, align 2, !alias.scope !22, !noalias !19
  %245 = getelementptr inbounds i16, i16* %234, i64 -8
  %246 = getelementptr inbounds i16, i16* %245, i64 -7
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %242, <8 x i16>* %247, align 2, !alias.scope !22, !noalias !19
  %248 = add i64 %214, 32
  %249 = add i64 %215, -2
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %213, !llvm.loop !24

251:                                              ; preds = %213
  %252 = sub nuw nsw i64 -32, %214
  br label %253

253:                                              ; preds = %251, %195
  %254 = phi i64 [ 0, %195 ], [ %252, %251 ]
  %255 = icmp eq i64 %205, 0
  br i1 %255, label %273, label %256

256:                                              ; preds = %253
  %257 = getelementptr i16, i16* %188, i64 -1
  %258 = getelementptr i16, i16* %189, i64 -1
  %259 = getelementptr inbounds i16, i16* %258, i64 %254
  %260 = getelementptr inbounds i16, i16* %257, i64 %254
  %261 = getelementptr inbounds i16, i16* %260, i64 -7
  %262 = bitcast i16* %261 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !19
  %264 = getelementptr inbounds i16, i16* %260, i64 -8
  %265 = getelementptr inbounds i16, i16* %264, i64 -7
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2, !alias.scope !19
  %268 = getelementptr inbounds i16, i16* %259, i64 -7
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %269, align 2, !alias.scope !22, !noalias !19
  %270 = getelementptr inbounds i16, i16* %259, i64 -8
  %271 = getelementptr inbounds i16, i16* %270, i64 -7
  %272 = bitcast i16* %271 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %272, align 2, !alias.scope !22, !noalias !19
  br label %273

273:                                              ; preds = %253, %256
  %274 = icmp eq i64 %25, %196
  br i1 %274, label %328, label %275

275:                                              ; preds = %273, %191, %187
  %276 = phi i64 [ %25, %191 ], [ %25, %187 ], [ %197, %273 ]
  %277 = phi i16* [ %188, %191 ], [ %188, %187 ], [ %199, %273 ]
  %278 = phi i16* [ %189, %191 ], [ %189, %187 ], [ %201, %273 ]
  %279 = add i64 %276, -1
  %280 = and i64 %276, 7
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %293, label %282

282:                                              ; preds = %275, %282
  %283 = phi i64 [ %290, %282 ], [ %276, %275 ]
  %284 = phi i16* [ %288, %282 ], [ %277, %275 ]
  %285 = phi i16* [ %287, %282 ], [ %278, %275 ]
  %286 = phi i64 [ %291, %282 ], [ %280, %275 ]
  %287 = getelementptr inbounds i16, i16* %285, i64 -1
  %288 = getelementptr inbounds i16, i16* %284, i64 -1
  %289 = load i16, i16* %288, align 2
  store i16 %289, i16* %287, align 2
  %290 = add i64 %283, -1
  %291 = add i64 %286, -1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %282, !llvm.loop !25

293:                                              ; preds = %282, %275
  %294 = phi i64 [ %276, %275 ], [ %290, %282 ]
  %295 = phi i16* [ %277, %275 ], [ %288, %282 ]
  %296 = phi i16* [ %278, %275 ], [ %287, %282 ]
  %297 = icmp ult i64 %279, 7
  br i1 %297, label %328, label %298

298:                                              ; preds = %293, %298
  %299 = phi i64 [ %326, %298 ], [ %294, %293 ]
  %300 = phi i16* [ %324, %298 ], [ %295, %293 ]
  %301 = phi i16* [ %323, %298 ], [ %296, %293 ]
  %302 = getelementptr inbounds i16, i16* %301, i64 -1
  %303 = getelementptr inbounds i16, i16* %300, i64 -1
  %304 = load i16, i16* %303, align 2
  store i16 %304, i16* %302, align 2
  %305 = getelementptr inbounds i16, i16* %301, i64 -2
  %306 = getelementptr inbounds i16, i16* %300, i64 -2
  %307 = load i16, i16* %306, align 2
  store i16 %307, i16* %305, align 2
  %308 = getelementptr inbounds i16, i16* %301, i64 -3
  %309 = getelementptr inbounds i16, i16* %300, i64 -3
  %310 = load i16, i16* %309, align 2
  store i16 %310, i16* %308, align 2
  %311 = getelementptr inbounds i16, i16* %301, i64 -4
  %312 = getelementptr inbounds i16, i16* %300, i64 -4
  %313 = load i16, i16* %312, align 2
  store i16 %313, i16* %311, align 2
  %314 = getelementptr inbounds i16, i16* %301, i64 -5
  %315 = getelementptr inbounds i16, i16* %300, i64 -5
  %316 = load i16, i16* %315, align 2
  store i16 %316, i16* %314, align 2
  %317 = getelementptr inbounds i16, i16* %301, i64 -6
  %318 = getelementptr inbounds i16, i16* %300, i64 -6
  %319 = load i16, i16* %318, align 2
  store i16 %319, i16* %317, align 2
  %320 = getelementptr inbounds i16, i16* %301, i64 -7
  %321 = getelementptr inbounds i16, i16* %300, i64 -7
  %322 = load i16, i16* %321, align 2
  store i16 %322, i16* %320, align 2
  %323 = getelementptr inbounds i16, i16* %301, i64 -8
  %324 = getelementptr inbounds i16, i16* %300, i64 -8
  %325 = load i16, i16* %324, align 2
  store i16 %325, i16* %323, align 2
  %326 = add i64 %299, -8
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %298, !llvm.loop !26

328:                                              ; preds = %293, %298, %150, %155, %273, %130, %37, %185
  %329 = getelementptr inbounds i16, i16* %38, i64 %25
  store i16 0, i16* %329, align 2
  br label %1014

330:                                              ; preds = %23
  %331 = bitcast %"class.std::__1::basic_string.87"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %332 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %331, i64 0, i32 1, i32 1
  %333 = load i8, i8* %332, align 1
  %334 = icmp slt i8 %333, 0
  br i1 %334, label %335, label %340

335:                                              ; preds = %330
  %336 = getelementptr inbounds %"class.std::__1::basic_string.87", %"class.std::__1::basic_string.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %337 = load i64, i64* %336, align 8
  %338 = and i64 %337, 9223372036854775807
  %339 = add nsw i64 %338, -1
  br label %340

340:                                              ; preds = %335, %330
  %341 = phi i64 [ %339, %335 ], [ 10, %330 ]
  %342 = icmp ugt i64 %19, %341
  br i1 %342, label %658, label %343

343:                                              ; preds = %340
  br i1 %334, label %344, label %347

344:                                              ; preds = %343
  %345 = getelementptr inbounds %"class.std::__1::basic_string.87", %"class.std::__1::basic_string.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load i16*, i16** %345, align 8
  br label %349

347:                                              ; preds = %343
  %348 = bitcast %"class.std::__1::basic_string.87"* %0 to i16*
  br label %349

349:                                              ; preds = %347, %344
  %350 = phi i16* [ %346, %344 ], [ %348, %347 ]
  %351 = icmp eq i64 %19, 0
  br i1 %351, label %650, label %352

352:                                              ; preds = %349
  %353 = icmp ult i16* %350, %1
  br i1 %353, label %354, label %507

354:                                              ; preds = %352
  store i16 %3, i16* %350, align 2
  %355 = getelementptr inbounds i16, i16* %1, i64 1
  %356 = icmp eq i64 %17, 0
  br i1 %356, label %650, label %357

357:                                              ; preds = %354
  %358 = icmp ult i64 %17, 16
  br i1 %358, label %454, label %359

359:                                              ; preds = %357
  %360 = getelementptr i16, i16* %350, i64 1
  %361 = getelementptr i16, i16* %350, i64 %19
  %362 = getelementptr i16, i16* %1, i64 %19
  %363 = icmp ult i16* %360, %362
  %364 = icmp ult i16* %355, %361
  %365 = and i1 %363, %364
  br i1 %365, label %454, label %366

366:                                              ; preds = %359
  %367 = and i64 %17, -16
  %368 = getelementptr i16, i16* %355, i64 %367
  %369 = sub i64 %17, %367
  %370 = getelementptr i16, i16* %350, i64 %367
  %371 = add i64 %367, -16
  %372 = lshr exact i64 %371, 4
  %373 = add nuw nsw i64 %372, 1
  %374 = and i64 %373, 3
  %375 = icmp ult i64 %371, 48
  br i1 %375, label %431, label %376

376:                                              ; preds = %366
  %377 = sub nsw i64 %373, %374
  %378 = getelementptr i16, i16* %350, i64 1
  %379 = getelementptr i16, i16* %350, i64 1
  %380 = getelementptr i16, i16* %350, i64 1
  %381 = getelementptr i16, i16* %350, i64 1
  br label %382

382:                                              ; preds = %382, %376
  %383 = phi i64 [ 0, %376 ], [ %428, %382 ]
  %384 = phi i64 [ %377, %376 ], [ %429, %382 ]
  %385 = getelementptr i16, i16* %355, i64 %383
  %386 = getelementptr inbounds i16, i16* %378, i64 %383
  %387 = bitcast i16* %385 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !27
  %389 = getelementptr i16, i16* %385, i64 8
  %390 = bitcast i16* %389 to <8 x i16>*
  %391 = load <8 x i16>, <8 x i16>* %390, align 2, !alias.scope !27
  %392 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %392, align 2, !alias.scope !30, !noalias !27
  %393 = getelementptr inbounds i16, i16* %386, i64 8
  %394 = bitcast i16* %393 to <8 x i16>*
  store <8 x i16> %391, <8 x i16>* %394, align 2, !alias.scope !30, !noalias !27
  %395 = or i64 %383, 16
  %396 = getelementptr i16, i16* %355, i64 %395
  %397 = getelementptr inbounds i16, i16* %379, i64 %395
  %398 = bitcast i16* %396 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !27
  %400 = getelementptr i16, i16* %396, i64 8
  %401 = bitcast i16* %400 to <8 x i16>*
  %402 = load <8 x i16>, <8 x i16>* %401, align 2, !alias.scope !27
  %403 = bitcast i16* %397 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %403, align 2, !alias.scope !30, !noalias !27
  %404 = getelementptr inbounds i16, i16* %397, i64 8
  %405 = bitcast i16* %404 to <8 x i16>*
  store <8 x i16> %402, <8 x i16>* %405, align 2, !alias.scope !30, !noalias !27
  %406 = or i64 %383, 32
  %407 = getelementptr i16, i16* %355, i64 %406
  %408 = getelementptr inbounds i16, i16* %380, i64 %406
  %409 = bitcast i16* %407 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !27
  %411 = getelementptr i16, i16* %407, i64 8
  %412 = bitcast i16* %411 to <8 x i16>*
  %413 = load <8 x i16>, <8 x i16>* %412, align 2, !alias.scope !27
  %414 = bitcast i16* %408 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %414, align 2, !alias.scope !30, !noalias !27
  %415 = getelementptr inbounds i16, i16* %408, i64 8
  %416 = bitcast i16* %415 to <8 x i16>*
  store <8 x i16> %413, <8 x i16>* %416, align 2, !alias.scope !30, !noalias !27
  %417 = or i64 %383, 48
  %418 = getelementptr i16, i16* %355, i64 %417
  %419 = getelementptr inbounds i16, i16* %381, i64 %417
  %420 = bitcast i16* %418 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !27
  %422 = getelementptr i16, i16* %418, i64 8
  %423 = bitcast i16* %422 to <8 x i16>*
  %424 = load <8 x i16>, <8 x i16>* %423, align 2, !alias.scope !27
  %425 = bitcast i16* %419 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %425, align 2, !alias.scope !30, !noalias !27
  %426 = getelementptr inbounds i16, i16* %419, i64 8
  %427 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %424, <8 x i16>* %427, align 2, !alias.scope !30, !noalias !27
  %428 = add i64 %383, 64
  %429 = add i64 %384, -4
  %430 = icmp eq i64 %429, 0
  br i1 %430, label %431, label %382, !llvm.loop !32

431:                                              ; preds = %382, %366
  %432 = phi i64 [ 0, %366 ], [ %428, %382 ]
  %433 = icmp eq i64 %374, 0
  br i1 %433, label %452, label %434

434:                                              ; preds = %431
  %435 = getelementptr i16, i16* %350, i64 1
  br label %436

436:                                              ; preds = %436, %434
  %437 = phi i64 [ %432, %434 ], [ %449, %436 ]
  %438 = phi i64 [ %374, %434 ], [ %450, %436 ]
  %439 = getelementptr i16, i16* %355, i64 %437
  %440 = getelementptr inbounds i16, i16* %435, i64 %437
  %441 = bitcast i16* %439 to <8 x i16>*
  %442 = load <8 x i16>, <8 x i16>* %441, align 2, !alias.scope !27
  %443 = getelementptr i16, i16* %439, i64 8
  %444 = bitcast i16* %443 to <8 x i16>*
  %445 = load <8 x i16>, <8 x i16>* %444, align 2, !alias.scope !27
  %446 = bitcast i16* %440 to <8 x i16>*
  store <8 x i16> %442, <8 x i16>* %446, align 2, !alias.scope !30, !noalias !27
  %447 = getelementptr inbounds i16, i16* %440, i64 8
  %448 = bitcast i16* %447 to <8 x i16>*
  store <8 x i16> %445, <8 x i16>* %448, align 2, !alias.scope !30, !noalias !27
  %449 = add i64 %437, 16
  %450 = add i64 %438, -1
  %451 = icmp eq i64 %450, 0
  br i1 %451, label %452, label %436, !llvm.loop !33

452:                                              ; preds = %436, %431
  %453 = icmp eq i64 %17, %367
  br i1 %453, label %650, label %454

454:                                              ; preds = %452, %359, %357
  %455 = phi i16* [ %355, %359 ], [ %355, %357 ], [ %368, %452 ]
  %456 = phi i64 [ %17, %359 ], [ %17, %357 ], [ %369, %452 ]
  %457 = phi i16* [ %350, %359 ], [ %350, %357 ], [ %370, %452 ]
  %458 = add i64 %456, -1
  %459 = and i64 %456, 7
  %460 = icmp eq i64 %459, 0
  br i1 %460, label %472, label %461

461:                                              ; preds = %454, %461
  %462 = phi i16* [ %469, %461 ], [ %455, %454 ]
  %463 = phi i64 [ %468, %461 ], [ %456, %454 ]
  %464 = phi i16* [ %466, %461 ], [ %457, %454 ]
  %465 = phi i64 [ %470, %461 ], [ %459, %454 ]
  %466 = getelementptr inbounds i16, i16* %464, i64 1
  %467 = load i16, i16* %462, align 2
  store i16 %467, i16* %466, align 2
  %468 = add i64 %463, -1
  %469 = getelementptr inbounds i16, i16* %462, i64 1
  %470 = add i64 %465, -1
  %471 = icmp eq i64 %470, 0
  br i1 %471, label %472, label %461, !llvm.loop !34

472:                                              ; preds = %461, %454
  %473 = phi i16* [ %455, %454 ], [ %469, %461 ]
  %474 = phi i64 [ %456, %454 ], [ %468, %461 ]
  %475 = phi i16* [ %457, %454 ], [ %466, %461 ]
  %476 = icmp ult i64 %458, 7
  br i1 %476, label %650, label %477

477:                                              ; preds = %472, %477
  %478 = phi i16* [ %505, %477 ], [ %473, %472 ]
  %479 = phi i64 [ %504, %477 ], [ %474, %472 ]
  %480 = phi i16* [ %502, %477 ], [ %475, %472 ]
  %481 = getelementptr inbounds i16, i16* %480, i64 1
  %482 = load i16, i16* %478, align 2
  store i16 %482, i16* %481, align 2
  %483 = getelementptr inbounds i16, i16* %478, i64 1
  %484 = getelementptr inbounds i16, i16* %480, i64 2
  %485 = load i16, i16* %483, align 2
  store i16 %485, i16* %484, align 2
  %486 = getelementptr inbounds i16, i16* %478, i64 2
  %487 = getelementptr inbounds i16, i16* %480, i64 3
  %488 = load i16, i16* %486, align 2
  store i16 %488, i16* %487, align 2
  %489 = getelementptr inbounds i16, i16* %478, i64 3
  %490 = getelementptr inbounds i16, i16* %480, i64 4
  %491 = load i16, i16* %489, align 2
  store i16 %491, i16* %490, align 2
  %492 = getelementptr inbounds i16, i16* %478, i64 4
  %493 = getelementptr inbounds i16, i16* %480, i64 5
  %494 = load i16, i16* %492, align 2
  store i16 %494, i16* %493, align 2
  %495 = getelementptr inbounds i16, i16* %478, i64 5
  %496 = getelementptr inbounds i16, i16* %480, i64 6
  %497 = load i16, i16* %495, align 2
  store i16 %497, i16* %496, align 2
  %498 = getelementptr inbounds i16, i16* %478, i64 6
  %499 = getelementptr inbounds i16, i16* %480, i64 7
  %500 = load i16, i16* %498, align 2
  store i16 %500, i16* %499, align 2
  %501 = getelementptr inbounds i16, i16* %478, i64 7
  %502 = getelementptr inbounds i16, i16* %480, i64 8
  %503 = load i16, i16* %501, align 2
  store i16 %503, i16* %502, align 2
  %504 = add i64 %479, -8
  %505 = getelementptr inbounds i16, i16* %478, i64 8
  %506 = icmp eq i64 %504, 0
  br i1 %506, label %650, label %477, !llvm.loop !35

507:                                              ; preds = %352
  %508 = icmp ugt i16* %350, %1
  br i1 %508, label %509, label %650

509:                                              ; preds = %507
  %510 = getelementptr inbounds i16, i16* %1, i64 %19
  %511 = getelementptr inbounds i16, i16* %350, i64 %19
  %512 = icmp ult i64 %19, 16
  br i1 %512, label %597, label %513

513:                                              ; preds = %509
  %514 = icmp ult i16* %350, %510
  %515 = icmp ugt i16* %511, %1
  %516 = and i1 %514, %515
  br i1 %516, label %597, label %517

517:                                              ; preds = %513
  %518 = and i64 %19, -16
  %519 = sub i64 %19, %518
  %520 = sub i64 0, %518
  %521 = getelementptr i16, i16* %510, i64 %520
  %522 = sub i64 0, %518
  %523 = getelementptr i16, i16* %511, i64 %522
  %524 = add i64 %518, -16
  %525 = lshr exact i64 %524, 4
  %526 = add nuw nsw i64 %525, 1
  %527 = and i64 %526, 1
  %528 = icmp eq i64 %524, 0
  br i1 %528, label %575, label %529

529:                                              ; preds = %517
  %530 = sub nuw nsw i64 %526, %527
  %531 = getelementptr i16, i16* %1, i64 %17
  %532 = getelementptr i16, i16* %350, i64 %17
  %533 = getelementptr i16, i16* %1, i64 %17
  %534 = getelementptr i16, i16* %350, i64 %17
  br label %535

535:                                              ; preds = %535, %529
  %536 = phi i64 [ 0, %529 ], [ %570, %535 ]
  %537 = phi i64 [ %530, %529 ], [ %571, %535 ]
  %538 = sub i64 0, %536
  %539 = sub i64 0, %536
  %540 = getelementptr inbounds i16, i16* %532, i64 %539
  %541 = getelementptr inbounds i16, i16* %531, i64 %538
  %542 = getelementptr inbounds i16, i16* %541, i64 -7
  %543 = bitcast i16* %542 to <8 x i16>*
  %544 = load <8 x i16>, <8 x i16>* %543, align 2, !alias.scope !36
  %545 = getelementptr inbounds i16, i16* %541, i64 -8
  %546 = getelementptr inbounds i16, i16* %545, i64 -7
  %547 = bitcast i16* %546 to <8 x i16>*
  %548 = load <8 x i16>, <8 x i16>* %547, align 2, !alias.scope !36
  %549 = getelementptr inbounds i16, i16* %540, i64 -7
  %550 = bitcast i16* %549 to <8 x i16>*
  store <8 x i16> %544, <8 x i16>* %550, align 2, !alias.scope !39, !noalias !36
  %551 = getelementptr inbounds i16, i16* %540, i64 -8
  %552 = getelementptr inbounds i16, i16* %551, i64 -7
  %553 = bitcast i16* %552 to <8 x i16>*
  store <8 x i16> %548, <8 x i16>* %553, align 2, !alias.scope !39, !noalias !36
  %554 = sub nuw nsw i64 -16, %536
  %555 = sub nuw nsw i64 -16, %536
  %556 = getelementptr inbounds i16, i16* %534, i64 %555
  %557 = getelementptr inbounds i16, i16* %533, i64 %554
  %558 = getelementptr inbounds i16, i16* %557, i64 -7
  %559 = bitcast i16* %558 to <8 x i16>*
  %560 = load <8 x i16>, <8 x i16>* %559, align 2, !alias.scope !36
  %561 = getelementptr inbounds i16, i16* %557, i64 -8
  %562 = getelementptr inbounds i16, i16* %561, i64 -7
  %563 = bitcast i16* %562 to <8 x i16>*
  %564 = load <8 x i16>, <8 x i16>* %563, align 2, !alias.scope !36
  %565 = getelementptr inbounds i16, i16* %556, i64 -7
  %566 = bitcast i16* %565 to <8 x i16>*
  store <8 x i16> %560, <8 x i16>* %566, align 2, !alias.scope !39, !noalias !36
  %567 = getelementptr inbounds i16, i16* %556, i64 -8
  %568 = getelementptr inbounds i16, i16* %567, i64 -7
  %569 = bitcast i16* %568 to <8 x i16>*
  store <8 x i16> %564, <8 x i16>* %569, align 2, !alias.scope !39, !noalias !36
  %570 = add i64 %536, 32
  %571 = add i64 %537, -2
  %572 = icmp eq i64 %571, 0
  br i1 %572, label %573, label %535, !llvm.loop !41

573:                                              ; preds = %535
  %574 = sub nuw nsw i64 -32, %536
  br label %575

575:                                              ; preds = %573, %517
  %576 = phi i64 [ 0, %517 ], [ %574, %573 ]
  %577 = icmp eq i64 %527, 0
  br i1 %577, label %595, label %578

578:                                              ; preds = %575
  %579 = getelementptr i16, i16* %1, i64 %17
  %580 = getelementptr i16, i16* %350, i64 %17
  %581 = getelementptr inbounds i16, i16* %580, i64 %576
  %582 = getelementptr inbounds i16, i16* %579, i64 %576
  %583 = getelementptr inbounds i16, i16* %582, i64 -7
  %584 = bitcast i16* %583 to <8 x i16>*
  %585 = load <8 x i16>, <8 x i16>* %584, align 2, !alias.scope !36
  %586 = getelementptr inbounds i16, i16* %582, i64 -8
  %587 = getelementptr inbounds i16, i16* %586, i64 -7
  %588 = bitcast i16* %587 to <8 x i16>*
  %589 = load <8 x i16>, <8 x i16>* %588, align 2, !alias.scope !36
  %590 = getelementptr inbounds i16, i16* %581, i64 -7
  %591 = bitcast i16* %590 to <8 x i16>*
  store <8 x i16> %585, <8 x i16>* %591, align 2, !alias.scope !39, !noalias !36
  %592 = getelementptr inbounds i16, i16* %581, i64 -8
  %593 = getelementptr inbounds i16, i16* %592, i64 -7
  %594 = bitcast i16* %593 to <8 x i16>*
  store <8 x i16> %589, <8 x i16>* %594, align 2, !alias.scope !39, !noalias !36
  br label %595

595:                                              ; preds = %575, %578
  %596 = icmp eq i64 %19, %518
  br i1 %596, label %650, label %597

597:                                              ; preds = %595, %513, %509
  %598 = phi i64 [ %19, %513 ], [ %19, %509 ], [ %519, %595 ]
  %599 = phi i16* [ %510, %513 ], [ %510, %509 ], [ %521, %595 ]
  %600 = phi i16* [ %511, %513 ], [ %511, %509 ], [ %523, %595 ]
  %601 = add i64 %598, -1
  %602 = and i64 %598, 7
  %603 = icmp eq i64 %602, 0
  br i1 %603, label %615, label %604

604:                                              ; preds = %597, %604
  %605 = phi i64 [ %612, %604 ], [ %598, %597 ]
  %606 = phi i16* [ %610, %604 ], [ %599, %597 ]
  %607 = phi i16* [ %609, %604 ], [ %600, %597 ]
  %608 = phi i64 [ %613, %604 ], [ %602, %597 ]
  %609 = getelementptr inbounds i16, i16* %607, i64 -1
  %610 = getelementptr inbounds i16, i16* %606, i64 -1
  %611 = load i16, i16* %610, align 2
  store i16 %611, i16* %609, align 2
  %612 = add i64 %605, -1
  %613 = add i64 %608, -1
  %614 = icmp eq i64 %613, 0
  br i1 %614, label %615, label %604, !llvm.loop !42

615:                                              ; preds = %604, %597
  %616 = phi i64 [ %598, %597 ], [ %612, %604 ]
  %617 = phi i16* [ %599, %597 ], [ %610, %604 ]
  %618 = phi i16* [ %600, %597 ], [ %609, %604 ]
  %619 = icmp ult i64 %601, 7
  br i1 %619, label %650, label %620

620:                                              ; preds = %615, %620
  %621 = phi i64 [ %648, %620 ], [ %616, %615 ]
  %622 = phi i16* [ %646, %620 ], [ %617, %615 ]
  %623 = phi i16* [ %645, %620 ], [ %618, %615 ]
  %624 = getelementptr inbounds i16, i16* %623, i64 -1
  %625 = getelementptr inbounds i16, i16* %622, i64 -1
  %626 = load i16, i16* %625, align 2
  store i16 %626, i16* %624, align 2
  %627 = getelementptr inbounds i16, i16* %623, i64 -2
  %628 = getelementptr inbounds i16, i16* %622, i64 -2
  %629 = load i16, i16* %628, align 2
  store i16 %629, i16* %627, align 2
  %630 = getelementptr inbounds i16, i16* %623, i64 -3
  %631 = getelementptr inbounds i16, i16* %622, i64 -3
  %632 = load i16, i16* %631, align 2
  store i16 %632, i16* %630, align 2
  %633 = getelementptr inbounds i16, i16* %623, i64 -4
  %634 = getelementptr inbounds i16, i16* %622, i64 -4
  %635 = load i16, i16* %634, align 2
  store i16 %635, i16* %633, align 2
  %636 = getelementptr inbounds i16, i16* %623, i64 -5
  %637 = getelementptr inbounds i16, i16* %622, i64 -5
  %638 = load i16, i16* %637, align 2
  store i16 %638, i16* %636, align 2
  %639 = getelementptr inbounds i16, i16* %623, i64 -6
  %640 = getelementptr inbounds i16, i16* %622, i64 -6
  %641 = load i16, i16* %640, align 2
  store i16 %641, i16* %639, align 2
  %642 = getelementptr inbounds i16, i16* %623, i64 -7
  %643 = getelementptr inbounds i16, i16* %622, i64 -7
  %644 = load i16, i16* %643, align 2
  store i16 %644, i16* %642, align 2
  %645 = getelementptr inbounds i16, i16* %623, i64 -8
  %646 = getelementptr inbounds i16, i16* %622, i64 -8
  %647 = load i16, i16* %646, align 2
  store i16 %647, i16* %645, align 2
  %648 = add i64 %621, -8
  %649 = icmp eq i64 %648, 0
  br i1 %649, label %650, label %620, !llvm.loop !43

650:                                              ; preds = %615, %620, %472, %477, %595, %354, %452, %507, %349
  %651 = getelementptr inbounds i16, i16* %350, i64 %19
  store i16 0, i16* %651, align 2
  %652 = load i8, i8* %332, align 1
  %653 = icmp slt i8 %652, 0
  br i1 %653, label %654, label %656

654:                                              ; preds = %650
  %655 = getelementptr inbounds %"class.std::__1::basic_string.87", %"class.std::__1::basic_string.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %19, i64* %655, align 8
  br label %1014

656:                                              ; preds = %650
  %657 = trunc i64 %19 to i8
  store i8 %657, i8* %332, align 1
  br label %1014

658:                                              ; preds = %340
  br i1 %334, label %659, label %662

659:                                              ; preds = %658
  %660 = getelementptr inbounds %"class.std::__1::basic_string.87", %"class.std::__1::basic_string.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %661 = load i64, i64* %660, align 8
  br label %664

662:                                              ; preds = %658
  %663 = zext i8 %333 to i64
  br label %664

664:                                              ; preds = %662, %659
  %665 = phi i64 [ %661, %659 ], [ %663, %662 ]
  %666 = sub i64 %19, %341
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.87"* %0, i64 %341, i64 %666, i64 %665, i64 0, i64 %665, i64 %19, i16* %1) #11
  br label %1014

667:                                              ; preds = %2
  br i1 %5, label %675, label %668

668:                                              ; preds = %667, %668
  %669 = phi i64 [ %671, %668 ], [ 0, %667 ]
  %670 = phi i16* [ %672, %668 ], [ %1, %667 ]
  %671 = add i64 %669, 1
  %672 = getelementptr inbounds i16, i16* %670, i64 1
  %673 = load i16, i16* %672, align 2
  %674 = icmp eq i16 %673, 0
  br i1 %674, label %675, label %668

675:                                              ; preds = %668, %667
  %676 = phi i64 [ 0, %667 ], [ %671, %668 ]
  %677 = bitcast %"class.std::__1::basic_string.87"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %678 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %677, i64 0, i32 1, i32 1
  %679 = load i8, i8* %678, align 1
  %680 = icmp slt i8 %679, 0
  br i1 %680, label %681, label %686

681:                                              ; preds = %675
  %682 = getelementptr inbounds %"class.std::__1::basic_string.87", %"class.std::__1::basic_string.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %683 = load i64, i64* %682, align 8
  %684 = and i64 %683, 9223372036854775807
  %685 = add nsw i64 %684, -1
  br label %686

686:                                              ; preds = %681, %675
  %687 = phi i64 [ %685, %681 ], [ 10, %675 ]
  %688 = icmp ugt i64 %676, %687
  br i1 %688, label %1005, label %689

689:                                              ; preds = %686
  br i1 %680, label %690, label %693

690:                                              ; preds = %689
  %691 = getelementptr inbounds %"class.std::__1::basic_string.87", %"class.std::__1::basic_string.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load i16*, i16** %691, align 8
  br label %695

693:                                              ; preds = %689
  %694 = bitcast %"class.std::__1::basic_string.87"* %0 to i16*
  br label %695

695:                                              ; preds = %693, %690
  %696 = phi i16* [ %692, %690 ], [ %694, %693 ]
  %697 = icmp eq i64 %676, 0
  br i1 %697, label %997, label %698

698:                                              ; preds = %695
  %699 = icmp ult i16* %696, %1
  br i1 %699, label %700, label %854

700:                                              ; preds = %698
  store i16 %3, i16* %696, align 2
  %701 = add i64 %676, -1
  %702 = getelementptr inbounds i16, i16* %1, i64 1
  %703 = icmp eq i64 %701, 0
  br i1 %703, label %997, label %704

704:                                              ; preds = %700
  %705 = icmp ult i64 %701, 16
  br i1 %705, label %801, label %706

706:                                              ; preds = %704
  %707 = getelementptr i16, i16* %696, i64 1
  %708 = getelementptr i16, i16* %696, i64 %676
  %709 = getelementptr i16, i16* %1, i64 %676
  %710 = icmp ult i16* %707, %709
  %711 = icmp ult i16* %702, %708
  %712 = and i1 %710, %711
  br i1 %712, label %801, label %713

713:                                              ; preds = %706
  %714 = and i64 %701, -16
  %715 = getelementptr i16, i16* %702, i64 %714
  %716 = sub i64 %701, %714
  %717 = getelementptr i16, i16* %696, i64 %714
  %718 = add i64 %714, -16
  %719 = lshr exact i64 %718, 4
  %720 = add nuw nsw i64 %719, 1
  %721 = and i64 %720, 3
  %722 = icmp ult i64 %718, 48
  br i1 %722, label %778, label %723

723:                                              ; preds = %713
  %724 = sub nsw i64 %720, %721
  %725 = getelementptr i16, i16* %696, i64 1
  %726 = getelementptr i16, i16* %696, i64 1
  %727 = getelementptr i16, i16* %696, i64 1
  %728 = getelementptr i16, i16* %696, i64 1
  br label %729

729:                                              ; preds = %729, %723
  %730 = phi i64 [ 0, %723 ], [ %775, %729 ]
  %731 = phi i64 [ %724, %723 ], [ %776, %729 ]
  %732 = getelementptr i16, i16* %702, i64 %730
  %733 = getelementptr inbounds i16, i16* %725, i64 %730
  %734 = bitcast i16* %732 to <8 x i16>*
  %735 = load <8 x i16>, <8 x i16>* %734, align 2, !alias.scope !44
  %736 = getelementptr i16, i16* %732, i64 8
  %737 = bitcast i16* %736 to <8 x i16>*
  %738 = load <8 x i16>, <8 x i16>* %737, align 2, !alias.scope !44
  %739 = bitcast i16* %733 to <8 x i16>*
  store <8 x i16> %735, <8 x i16>* %739, align 2, !alias.scope !47, !noalias !44
  %740 = getelementptr inbounds i16, i16* %733, i64 8
  %741 = bitcast i16* %740 to <8 x i16>*
  store <8 x i16> %738, <8 x i16>* %741, align 2, !alias.scope !47, !noalias !44
  %742 = or i64 %730, 16
  %743 = getelementptr i16, i16* %702, i64 %742
  %744 = getelementptr inbounds i16, i16* %726, i64 %742
  %745 = bitcast i16* %743 to <8 x i16>*
  %746 = load <8 x i16>, <8 x i16>* %745, align 2, !alias.scope !44
  %747 = getelementptr i16, i16* %743, i64 8
  %748 = bitcast i16* %747 to <8 x i16>*
  %749 = load <8 x i16>, <8 x i16>* %748, align 2, !alias.scope !44
  %750 = bitcast i16* %744 to <8 x i16>*
  store <8 x i16> %746, <8 x i16>* %750, align 2, !alias.scope !47, !noalias !44
  %751 = getelementptr inbounds i16, i16* %744, i64 8
  %752 = bitcast i16* %751 to <8 x i16>*
  store <8 x i16> %749, <8 x i16>* %752, align 2, !alias.scope !47, !noalias !44
  %753 = or i64 %730, 32
  %754 = getelementptr i16, i16* %702, i64 %753
  %755 = getelementptr inbounds i16, i16* %727, i64 %753
  %756 = bitcast i16* %754 to <8 x i16>*
  %757 = load <8 x i16>, <8 x i16>* %756, align 2, !alias.scope !44
  %758 = getelementptr i16, i16* %754, i64 8
  %759 = bitcast i16* %758 to <8 x i16>*
  %760 = load <8 x i16>, <8 x i16>* %759, align 2, !alias.scope !44
  %761 = bitcast i16* %755 to <8 x i16>*
  store <8 x i16> %757, <8 x i16>* %761, align 2, !alias.scope !47, !noalias !44
  %762 = getelementptr inbounds i16, i16* %755, i64 8
  %763 = bitcast i16* %762 to <8 x i16>*
  store <8 x i16> %760, <8 x i16>* %763, align 2, !alias.scope !47, !noalias !44
  %764 = or i64 %730, 48
  %765 = getelementptr i16, i16* %702, i64 %764
  %766 = getelementptr inbounds i16, i16* %728, i64 %764
  %767 = bitcast i16* %765 to <8 x i16>*
  %768 = load <8 x i16>, <8 x i16>* %767, align 2, !alias.scope !44
  %769 = getelementptr i16, i16* %765, i64 8
  %770 = bitcast i16* %769 to <8 x i16>*
  %771 = load <8 x i16>, <8 x i16>* %770, align 2, !alias.scope !44
  %772 = bitcast i16* %766 to <8 x i16>*
  store <8 x i16> %768, <8 x i16>* %772, align 2, !alias.scope !47, !noalias !44
  %773 = getelementptr inbounds i16, i16* %766, i64 8
  %774 = bitcast i16* %773 to <8 x i16>*
  store <8 x i16> %771, <8 x i16>* %774, align 2, !alias.scope !47, !noalias !44
  %775 = add i64 %730, 64
  %776 = add i64 %731, -4
  %777 = icmp eq i64 %776, 0
  br i1 %777, label %778, label %729, !llvm.loop !49

778:                                              ; preds = %729, %713
  %779 = phi i64 [ 0, %713 ], [ %775, %729 ]
  %780 = icmp eq i64 %721, 0
  br i1 %780, label %799, label %781

781:                                              ; preds = %778
  %782 = getelementptr i16, i16* %696, i64 1
  br label %783

783:                                              ; preds = %783, %781
  %784 = phi i64 [ %779, %781 ], [ %796, %783 ]
  %785 = phi i64 [ %721, %781 ], [ %797, %783 ]
  %786 = getelementptr i16, i16* %702, i64 %784
  %787 = getelementptr inbounds i16, i16* %782, i64 %784
  %788 = bitcast i16* %786 to <8 x i16>*
  %789 = load <8 x i16>, <8 x i16>* %788, align 2, !alias.scope !44
  %790 = getelementptr i16, i16* %786, i64 8
  %791 = bitcast i16* %790 to <8 x i16>*
  %792 = load <8 x i16>, <8 x i16>* %791, align 2, !alias.scope !44
  %793 = bitcast i16* %787 to <8 x i16>*
  store <8 x i16> %789, <8 x i16>* %793, align 2, !alias.scope !47, !noalias !44
  %794 = getelementptr inbounds i16, i16* %787, i64 8
  %795 = bitcast i16* %794 to <8 x i16>*
  store <8 x i16> %792, <8 x i16>* %795, align 2, !alias.scope !47, !noalias !44
  %796 = add i64 %784, 16
  %797 = add i64 %785, -1
  %798 = icmp eq i64 %797, 0
  br i1 %798, label %799, label %783, !llvm.loop !50

799:                                              ; preds = %783, %778
  %800 = icmp eq i64 %701, %714
  br i1 %800, label %997, label %801

801:                                              ; preds = %799, %706, %704
  %802 = phi i16* [ %702, %706 ], [ %702, %704 ], [ %715, %799 ]
  %803 = phi i64 [ %701, %706 ], [ %701, %704 ], [ %716, %799 ]
  %804 = phi i16* [ %696, %706 ], [ %696, %704 ], [ %717, %799 ]
  %805 = add i64 %803, -1
  %806 = and i64 %803, 7
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %819, label %808

808:                                              ; preds = %801, %808
  %809 = phi i16* [ %816, %808 ], [ %802, %801 ]
  %810 = phi i64 [ %815, %808 ], [ %803, %801 ]
  %811 = phi i16* [ %813, %808 ], [ %804, %801 ]
  %812 = phi i64 [ %817, %808 ], [ %806, %801 ]
  %813 = getelementptr inbounds i16, i16* %811, i64 1
  %814 = load i16, i16* %809, align 2
  store i16 %814, i16* %813, align 2
  %815 = add i64 %810, -1
  %816 = getelementptr inbounds i16, i16* %809, i64 1
  %817 = add i64 %812, -1
  %818 = icmp eq i64 %817, 0
  br i1 %818, label %819, label %808, !llvm.loop !51

819:                                              ; preds = %808, %801
  %820 = phi i16* [ %802, %801 ], [ %816, %808 ]
  %821 = phi i64 [ %803, %801 ], [ %815, %808 ]
  %822 = phi i16* [ %804, %801 ], [ %813, %808 ]
  %823 = icmp ult i64 %805, 7
  br i1 %823, label %997, label %824

824:                                              ; preds = %819, %824
  %825 = phi i16* [ %852, %824 ], [ %820, %819 ]
  %826 = phi i64 [ %851, %824 ], [ %821, %819 ]
  %827 = phi i16* [ %849, %824 ], [ %822, %819 ]
  %828 = getelementptr inbounds i16, i16* %827, i64 1
  %829 = load i16, i16* %825, align 2
  store i16 %829, i16* %828, align 2
  %830 = getelementptr inbounds i16, i16* %825, i64 1
  %831 = getelementptr inbounds i16, i16* %827, i64 2
  %832 = load i16, i16* %830, align 2
  store i16 %832, i16* %831, align 2
  %833 = getelementptr inbounds i16, i16* %825, i64 2
  %834 = getelementptr inbounds i16, i16* %827, i64 3
  %835 = load i16, i16* %833, align 2
  store i16 %835, i16* %834, align 2
  %836 = getelementptr inbounds i16, i16* %825, i64 3
  %837 = getelementptr inbounds i16, i16* %827, i64 4
  %838 = load i16, i16* %836, align 2
  store i16 %838, i16* %837, align 2
  %839 = getelementptr inbounds i16, i16* %825, i64 4
  %840 = getelementptr inbounds i16, i16* %827, i64 5
  %841 = load i16, i16* %839, align 2
  store i16 %841, i16* %840, align 2
  %842 = getelementptr inbounds i16, i16* %825, i64 5
  %843 = getelementptr inbounds i16, i16* %827, i64 6
  %844 = load i16, i16* %842, align 2
  store i16 %844, i16* %843, align 2
  %845 = getelementptr inbounds i16, i16* %825, i64 6
  %846 = getelementptr inbounds i16, i16* %827, i64 7
  %847 = load i16, i16* %845, align 2
  store i16 %847, i16* %846, align 2
  %848 = getelementptr inbounds i16, i16* %825, i64 7
  %849 = getelementptr inbounds i16, i16* %827, i64 8
  %850 = load i16, i16* %848, align 2
  store i16 %850, i16* %849, align 2
  %851 = add i64 %826, -8
  %852 = getelementptr inbounds i16, i16* %825, i64 8
  %853 = icmp eq i64 %851, 0
  br i1 %853, label %997, label %824, !llvm.loop !52

854:                                              ; preds = %698
  %855 = icmp ugt i16* %696, %1
  br i1 %855, label %856, label %997

856:                                              ; preds = %854
  %857 = getelementptr inbounds i16, i16* %1, i64 %676
  %858 = getelementptr inbounds i16, i16* %696, i64 %676
  %859 = icmp ult i64 %676, 16
  br i1 %859, label %944, label %860

860:                                              ; preds = %856
  %861 = icmp ult i16* %696, %857
  %862 = icmp ugt i16* %858, %1
  %863 = and i1 %861, %862
  br i1 %863, label %944, label %864

864:                                              ; preds = %860
  %865 = and i64 %676, -16
  %866 = sub i64 %676, %865
  %867 = sub i64 0, %865
  %868 = getelementptr i16, i16* %857, i64 %867
  %869 = sub i64 0, %865
  %870 = getelementptr i16, i16* %858, i64 %869
  %871 = add i64 %865, -16
  %872 = lshr exact i64 %871, 4
  %873 = add nuw nsw i64 %872, 1
  %874 = and i64 %873, 1
  %875 = icmp eq i64 %871, 0
  br i1 %875, label %922, label %876

876:                                              ; preds = %864
  %877 = sub nuw nsw i64 %873, %874
  %878 = getelementptr i16, i16* %857, i64 -1
  %879 = getelementptr i16, i16* %858, i64 -1
  %880 = getelementptr i16, i16* %857, i64 -1
  %881 = getelementptr i16, i16* %858, i64 -1
  br label %882

882:                                              ; preds = %882, %876
  %883 = phi i64 [ 0, %876 ], [ %917, %882 ]
  %884 = phi i64 [ %877, %876 ], [ %918, %882 ]
  %885 = sub i64 0, %883
  %886 = sub i64 0, %883
  %887 = getelementptr inbounds i16, i16* %879, i64 %886
  %888 = getelementptr inbounds i16, i16* %878, i64 %885
  %889 = getelementptr inbounds i16, i16* %888, i64 -7
  %890 = bitcast i16* %889 to <8 x i16>*
  %891 = load <8 x i16>, <8 x i16>* %890, align 2, !alias.scope !53
  %892 = getelementptr inbounds i16, i16* %888, i64 -8
  %893 = getelementptr inbounds i16, i16* %892, i64 -7
  %894 = bitcast i16* %893 to <8 x i16>*
  %895 = load <8 x i16>, <8 x i16>* %894, align 2, !alias.scope !53
  %896 = getelementptr inbounds i16, i16* %887, i64 -7
  %897 = bitcast i16* %896 to <8 x i16>*
  store <8 x i16> %891, <8 x i16>* %897, align 2, !alias.scope !56, !noalias !53
  %898 = getelementptr inbounds i16, i16* %887, i64 -8
  %899 = getelementptr inbounds i16, i16* %898, i64 -7
  %900 = bitcast i16* %899 to <8 x i16>*
  store <8 x i16> %895, <8 x i16>* %900, align 2, !alias.scope !56, !noalias !53
  %901 = sub nuw nsw i64 -16, %883
  %902 = sub nuw nsw i64 -16, %883
  %903 = getelementptr inbounds i16, i16* %881, i64 %902
  %904 = getelementptr inbounds i16, i16* %880, i64 %901
  %905 = getelementptr inbounds i16, i16* %904, i64 -7
  %906 = bitcast i16* %905 to <8 x i16>*
  %907 = load <8 x i16>, <8 x i16>* %906, align 2, !alias.scope !53
  %908 = getelementptr inbounds i16, i16* %904, i64 -8
  %909 = getelementptr inbounds i16, i16* %908, i64 -7
  %910 = bitcast i16* %909 to <8 x i16>*
  %911 = load <8 x i16>, <8 x i16>* %910, align 2, !alias.scope !53
  %912 = getelementptr inbounds i16, i16* %903, i64 -7
  %913 = bitcast i16* %912 to <8 x i16>*
  store <8 x i16> %907, <8 x i16>* %913, align 2, !alias.scope !56, !noalias !53
  %914 = getelementptr inbounds i16, i16* %903, i64 -8
  %915 = getelementptr inbounds i16, i16* %914, i64 -7
  %916 = bitcast i16* %915 to <8 x i16>*
  store <8 x i16> %911, <8 x i16>* %916, align 2, !alias.scope !56, !noalias !53
  %917 = add i64 %883, 32
  %918 = add i64 %884, -2
  %919 = icmp eq i64 %918, 0
  br i1 %919, label %920, label %882, !llvm.loop !58

920:                                              ; preds = %882
  %921 = sub nuw nsw i64 -32, %883
  br label %922

922:                                              ; preds = %920, %864
  %923 = phi i64 [ 0, %864 ], [ %921, %920 ]
  %924 = icmp eq i64 %874, 0
  br i1 %924, label %942, label %925

925:                                              ; preds = %922
  %926 = getelementptr i16, i16* %857, i64 -1
  %927 = getelementptr i16, i16* %858, i64 -1
  %928 = getelementptr inbounds i16, i16* %927, i64 %923
  %929 = getelementptr inbounds i16, i16* %926, i64 %923
  %930 = getelementptr inbounds i16, i16* %929, i64 -7
  %931 = bitcast i16* %930 to <8 x i16>*
  %932 = load <8 x i16>, <8 x i16>* %931, align 2, !alias.scope !53
  %933 = getelementptr inbounds i16, i16* %929, i64 -8
  %934 = getelementptr inbounds i16, i16* %933, i64 -7
  %935 = bitcast i16* %934 to <8 x i16>*
  %936 = load <8 x i16>, <8 x i16>* %935, align 2, !alias.scope !53
  %937 = getelementptr inbounds i16, i16* %928, i64 -7
  %938 = bitcast i16* %937 to <8 x i16>*
  store <8 x i16> %932, <8 x i16>* %938, align 2, !alias.scope !56, !noalias !53
  %939 = getelementptr inbounds i16, i16* %928, i64 -8
  %940 = getelementptr inbounds i16, i16* %939, i64 -7
  %941 = bitcast i16* %940 to <8 x i16>*
  store <8 x i16> %936, <8 x i16>* %941, align 2, !alias.scope !56, !noalias !53
  br label %942

942:                                              ; preds = %922, %925
  %943 = icmp eq i64 %676, %865
  br i1 %943, label %997, label %944

944:                                              ; preds = %942, %860, %856
  %945 = phi i64 [ %676, %860 ], [ %676, %856 ], [ %866, %942 ]
  %946 = phi i16* [ %857, %860 ], [ %857, %856 ], [ %868, %942 ]
  %947 = phi i16* [ %858, %860 ], [ %858, %856 ], [ %870, %942 ]
  %948 = add i64 %945, -1
  %949 = and i64 %945, 7
  %950 = icmp eq i64 %949, 0
  br i1 %950, label %962, label %951

951:                                              ; preds = %944, %951
  %952 = phi i64 [ %959, %951 ], [ %945, %944 ]
  %953 = phi i16* [ %957, %951 ], [ %946, %944 ]
  %954 = phi i16* [ %956, %951 ], [ %947, %944 ]
  %955 = phi i64 [ %960, %951 ], [ %949, %944 ]
  %956 = getelementptr inbounds i16, i16* %954, i64 -1
  %957 = getelementptr inbounds i16, i16* %953, i64 -1
  %958 = load i16, i16* %957, align 2
  store i16 %958, i16* %956, align 2
  %959 = add i64 %952, -1
  %960 = add i64 %955, -1
  %961 = icmp eq i64 %960, 0
  br i1 %961, label %962, label %951, !llvm.loop !59

962:                                              ; preds = %951, %944
  %963 = phi i64 [ %945, %944 ], [ %959, %951 ]
  %964 = phi i16* [ %946, %944 ], [ %957, %951 ]
  %965 = phi i16* [ %947, %944 ], [ %956, %951 ]
  %966 = icmp ult i64 %948, 7
  br i1 %966, label %997, label %967

967:                                              ; preds = %962, %967
  %968 = phi i64 [ %995, %967 ], [ %963, %962 ]
  %969 = phi i16* [ %993, %967 ], [ %964, %962 ]
  %970 = phi i16* [ %992, %967 ], [ %965, %962 ]
  %971 = getelementptr inbounds i16, i16* %970, i64 -1
  %972 = getelementptr inbounds i16, i16* %969, i64 -1
  %973 = load i16, i16* %972, align 2
  store i16 %973, i16* %971, align 2
  %974 = getelementptr inbounds i16, i16* %970, i64 -2
  %975 = getelementptr inbounds i16, i16* %969, i64 -2
  %976 = load i16, i16* %975, align 2
  store i16 %976, i16* %974, align 2
  %977 = getelementptr inbounds i16, i16* %970, i64 -3
  %978 = getelementptr inbounds i16, i16* %969, i64 -3
  %979 = load i16, i16* %978, align 2
  store i16 %979, i16* %977, align 2
  %980 = getelementptr inbounds i16, i16* %970, i64 -4
  %981 = getelementptr inbounds i16, i16* %969, i64 -4
  %982 = load i16, i16* %981, align 2
  store i16 %982, i16* %980, align 2
  %983 = getelementptr inbounds i16, i16* %970, i64 -5
  %984 = getelementptr inbounds i16, i16* %969, i64 -5
  %985 = load i16, i16* %984, align 2
  store i16 %985, i16* %983, align 2
  %986 = getelementptr inbounds i16, i16* %970, i64 -6
  %987 = getelementptr inbounds i16, i16* %969, i64 -6
  %988 = load i16, i16* %987, align 2
  store i16 %988, i16* %986, align 2
  %989 = getelementptr inbounds i16, i16* %970, i64 -7
  %990 = getelementptr inbounds i16, i16* %969, i64 -7
  %991 = load i16, i16* %990, align 2
  store i16 %991, i16* %989, align 2
  %992 = getelementptr inbounds i16, i16* %970, i64 -8
  %993 = getelementptr inbounds i16, i16* %969, i64 -8
  %994 = load i16, i16* %993, align 2
  store i16 %994, i16* %992, align 2
  %995 = add i64 %968, -8
  %996 = icmp eq i64 %995, 0
  br i1 %996, label %997, label %967, !llvm.loop !60

997:                                              ; preds = %962, %967, %819, %824, %942, %700, %799, %854, %695
  %998 = getelementptr inbounds i16, i16* %696, i64 %676
  store i16 0, i16* %998, align 2
  %999 = load i8, i8* %678, align 1
  %1000 = icmp slt i8 %999, 0
  br i1 %1000, label %1001, label %1003

1001:                                             ; preds = %997
  %1002 = getelementptr inbounds %"class.std::__1::basic_string.87", %"class.std::__1::basic_string.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %676, i64* %1002, align 8
  br label %1014

1003:                                             ; preds = %997
  %1004 = trunc i64 %676 to i8
  store i8 %1004, i8* %678, align 1
  br label %1014

1005:                                             ; preds = %686
  br i1 %680, label %1006, label %1009

1006:                                             ; preds = %1005
  %1007 = getelementptr inbounds %"class.std::__1::basic_string.87", %"class.std::__1::basic_string.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1008 = load i64, i64* %1007, align 8
  br label %1011

1009:                                             ; preds = %1005
  %1010 = zext i8 %679 to i64
  br label %1011

1011:                                             ; preds = %1009, %1006
  %1012 = phi i64 [ %1008, %1006 ], [ %1010, %1009 ]
  %1013 = sub i64 %676, %687
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.87"* %0, i64 %687, i64 %1013, i64 %1012, i64 0, i64 %1012, i64 %676, i16* %1) #11
  br label %1014

1014:                                             ; preds = %1011, %1003, %1001, %664, %656, %654, %328
  ret %"class.std::__1::basic_string.87"* %0
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i16(i16) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.87"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.87"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.87"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.87", %"class.std::__1::basic_string.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.87"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !61
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !61
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !64, !noalias !61
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !64, !noalias !61
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !61
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !61
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !64, !noalias !61
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !64, !noalias !61
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !61
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !61
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !64, !noalias !61
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !64, !noalias !61
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !61
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !61
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !64, !noalias !61
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !64, !noalias !61
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !66

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !61
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !61
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !64, !noalias !61
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !64, !noalias !61
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !67

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !68

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !69

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !70

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !71

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !72

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !74
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !74
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !77, !noalias !74
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !77, !noalias !74
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !74
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !74
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !77, !noalias !74
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !77, !noalias !74
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !74
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !74
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !77, !noalias !74
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !77, !noalias !74
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !74
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !74
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !77, !noalias !74
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !77, !noalias !74
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !79

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !74
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !74
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !77, !noalias !74
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !77, !noalias !74
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !80

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !81

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !82

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.87"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.87", %"class.std::__1::basic_string.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.87", %"class.std::__1::basic_string.87"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.96"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.96"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.96"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #11
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.96", %"class.std::__1::vector.96"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #11
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #12
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

declare void @_ZN4base9ListValueC1Ev(%"class.base::ListValue"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = distinct !{!17, !16}
!18 = distinct !{!18, !14}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !14}
!25 = distinct !{!25, !16}
!26 = distinct !{!26, !14}
!27 = !{!28}
!28 = distinct !{!28, !29}
!29 = distinct !{!29, !"LVerDomain"}
!30 = !{!31}
!31 = distinct !{!31, !29}
!32 = distinct !{!32, !14}
!33 = distinct !{!33, !16}
!34 = distinct !{!34, !16}
!35 = distinct !{!35, !14}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !14}
!42 = distinct !{!42, !16}
!43 = distinct !{!43, !14}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !14}
!50 = distinct !{!50, !16}
!51 = distinct !{!51, !16}
!52 = distinct !{!52, !14}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !14}
!59 = distinct !{!59, !16}
!60 = distinct !{!60, !14}
!61 = !{!62}
!62 = distinct !{!62, !63}
!63 = distinct !{!63, !"LVerDomain"}
!64 = !{!65}
!65 = distinct !{!65, !63}
!66 = distinct !{!66, !14}
!67 = distinct !{!67, !16}
!68 = distinct !{!68, !16}
!69 = distinct !{!69, !14}
!70 = distinct !{!70, !14}
!71 = distinct !{!71, !16}
!72 = distinct !{!72, !73, !14}
!73 = !{!"llvm.loop.unroll.runtime.disable"}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !14}
!80 = distinct !{!80, !16}
!81 = distinct !{!81, !16}
!82 = distinct !{!82, !14}
