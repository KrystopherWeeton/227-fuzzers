; ModuleID = '../../third_party/blink/renderer/core/layout/layout_box.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_box.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.3208", i64 }
%"class.std::__1::vector.3208" = type { %"class.std::__1::__vector_base.3209" }
%"class.std::__1::__vector_base.3209" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.3210" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.3210" = type { %"struct.std::__1::__compressed_pair_elem.3211" }
%"struct.std::__1::__compressed_pair_elem.3211" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<const blink::LayoutBox *, std::__1::unique_ptr<blink::ShapeOutsideInfo, std::__1::default_delete<blink::ShapeOutsideInfo> >, WTF::PtrHash<const blink::LayoutBox>, WTF::HashTraits<const blink::LayoutBox *>, WTF::HashTraits<std::__1::unique_ptr<blink::ShapeOutsideInfo, std::__1::default_delete<blink::ShapeOutsideInfo> > >, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<const blink::LayoutBox *, std::__1::unique_ptr<blink::ShapeOutsideInfo, std::__1::default_delete<blink::ShapeOutsideInfo> >, WTF::PtrHash<const blink::LayoutBox>, WTF::HashTraits<const blink::LayoutBox *>, WTF::HashTraits<std::__1::unique_ptr<blink::ShapeOutsideInfo, std::__1::default_delete<blink::ShapeOutsideInfo> > >, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"struct.blink::BoxLayoutExtraInput" = type { %"class.blink::LayoutBox"*, %"class.absl::optional.3274", %"class.absl::optional.3274", i8, i8, i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.3274" = type { %"class.absl::optional_internal::optional_data.3275" }
%"class.absl::optional_internal::optional_data.3275" = type { %"class.absl::optional_internal::optional_data_base.3276" }
%"class.absl::optional_internal::optional_data_base.3276" = type { %"class.absl::optional_internal::optional_data_dtor_base.3277" }
%"class.absl::optional_internal::optional_data_dtor_base.3277" = type { i8, %union.anon.3278 }
%union.anon.3278 = type { %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.3247, %"class.WTF::Vector.3248", %"class.std::__1::unique_ptr.3253", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.3279, %"class.blink::Persistent.3280" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.3215", [4 x i8] }>
%"class.WTF::RefCounted.3215" = type { %"class.base::RefCounted.3216" }
%"class.base::RefCounted.3216" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.4679 }
%class.scoped_refptr.4679 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.4680", %"class.WTF::Vector.630", %"class.WTF::Vector.4682", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.4680" = type { %"class.base::RefCounted.4681" }
%"class.base::RefCounted.4681" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.4682" = type { %"class.WTF::VectorBuffer.4683" }
%"class.WTF::VectorBuffer.4683" = type { %"class.WTF::VectorBufferBase.4684" }
%"class.WTF::VectorBufferBase.4684" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.4685 }
%union.anon.4685 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.771", %"class.WTF::Vector.771", i8, i32, %"class.blink::Member.1004", %"class.blink::Member.1279", %"class.blink::Member.1539", %"class.blink::Member.1541", %"class.blink::Member.1543", %"class.blink::Member.1545", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1553", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1559", %"class.blink::Member.1561", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1564", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1585", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.1514", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.1594", double, double, i64, i64, %"class.blink::HeapHashSet.1596", %"class.blink::HeapHashSet.1603", i16, i8, %"class.blink::Member.1610", %"class.blink::Member.1612", %"class.blink::Member.1936", %"class.blink::Member.1938", %"class.blink::TextLinkColors", %"class.blink::Member.1940", i8, [7 x i8], %"class.blink::HeapHashMap.1942", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1949", %"class.blink::Member.1954", %"class.blink::Member.1956", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1958", %"class.blink::HeapVector.1960", %"class.std::__1::unique_ptr.1968", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1974", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1987", %"class.WTF::Vector.1989", i8, i8, %"class.std::__1::unique_ptr.1994", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.2000", i32, i8, %"class.blink::HeapTaskRunnerTimer.1585", %"class.blink::HeapTaskRunnerTimer.1585", %"class.blink::DocumentTiming", %"class.blink::Member.2008", i8, i32, %"class.blink::Member.2010", %"class.blink::Member.2012", %"class.blink::Member.2014", %"class.blink::HeapTaskRunnerTimer.1585", %"class.blink::Member.2016", %"class.WTF::HashMap.2018", %"class.blink::Member.2023", %"class.blink::Member.2025", %"class.blink::Member.2027", %"class.blink::Member.2029", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer.1585", %"class.blink::HeapHashSet.2031", i8, i32, %"class.blink::Member.2038", %"class.blink::Member.2040", i32, %"class.blink::Member.2042", %"class.blink::Member.2044", %"class.blink::Member.2046", %"class.std::__1::unique_ptr.2048", i64, %"class.std::__1::unique_ptr.2054", i32, i32, %"class.blink::Member.2065", %"class.blink::Member.2067", %"class.blink::Member.2069", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.2071", %"class.WTF::Vector.1525", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.2073", %"class.blink::Member.2080", %"class.std::__1::unique_ptr.2082", %"class.blink::Member.2088", i8, i8, %"class.WTF::String", %"class.blink::Member.2090", i8, [7 x i8], %"class.blink::HeapHashMap.2092", %"class.blink::HeapObserverSet.2099", %"class.blink::Member.2107", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.2109", i32, i8, i8, %"class.blink::WeakMember.2111", %"class.blink::Member.2112" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.997" }
%"class.blink::HeapHashMap.997" = type { %"class.WTF::HashMap.1000" }
%"class.WTF::HashMap.1000" = type { %"class.WTF::HashTable.1001" }
%"class.WTF::HashTable.1001" = type <{ %"struct.WTF::KeyValuePair.1003"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1003" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.771" = type { %"class.WTF::VectorBuffer.772" }
%"class.WTF::VectorBuffer.772" = type { %"class.WTF::VectorBufferBase.773" }
%"class.WTF::VectorBufferBase.773" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.774 }
%class.scoped_refptr.774 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.775", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.775" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.1364", %"class.blink::ThreadState::PrefinalizerRegistration.1372", %"class.blink::Member.1373", %"class.blink::Member.326", %"class.blink::Member.1375", i8, %"class.blink::Member.1377", %"class.blink::Member.1379", %"class.blink::Member.1381", %"class.blink::Member.1381", %"class.blink::Member.1381", %"class.blink::Member.1381", %"class.blink::Member.1381", %"class.blink::Member.1381", %"class.blink::Member.1383", %"class.blink::Member.1385", %"class.blink::Member.1387", %"class.blink::Member.1389", %"class.blink::Member.1391", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.630", %"class.blink::Member.1393", %class.scoped_refptr.1395, %"class.blink::HeapHashSet.1458", %"class.blink::Member.1465", %"class.blink::HeapHashMap.1478", %"class.std::__1::unique_ptr.1485", %"class.blink::Member.1497", %"class.blink::Member.1518", %"class.blink::Member.1520", %"class.blink::Member.1522", %"class.WTF::Vector.1525", %"class.util::TokenType", %"class.WTF::HashSet.1530", %"class.WTF::Deque.1534" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1027", %"class.blink::Member.1029", %"class.blink::Member.1031", %"class.blink::Member.1033", i8, %"class.WTF::Vector.1035" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1020" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1008" }
%"class.blink::HeapVector.1008" = type { %"class.WTF::Vector.1011" }
%"class.WTF::Vector.1011" = type { %"class.WTF::VectorBuffer.1012" }
%"class.WTF::VectorBuffer.1012" = type { %"class.WTF::VectorBufferBase.1013", [32 x i8] }
%"class.WTF::VectorBufferBase.1013" = type { %"struct.std::__1::pair.1014"*, i32, i32 }
%"struct.std::__1::pair.1014" = type { %"class.WTF::AtomicString", %"class.blink::Member.1015" }
%"class.blink::Member.1015" = type { %"class.blink::MemberBase.1016" }
%"class.blink::MemberBase.1016" = type { %"class.blink::HeapVector.1017"* }
%"class.blink::HeapVector.1017" = type opaque
%"class.std::__1::unique_ptr.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"class.WTF::Vector.1023"* }
%"class.WTF::Vector.1023" = type opaque
%"class.blink::Member.1027" = type { %"class.blink::MemberBase.1028" }
%"class.blink::MemberBase.1028" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2148", %"class.blink::Member.2150", %"class.blink::Member.2152", i8, i32, i8, i32, %"class.blink::Member.2154", %"class.blink::Member.1029", %"class.blink::FrameLifecycle", %"class.blink::Member.1027", %"class.blink::Member.1027", %"class.blink::Member.1027", %"class.blink::Member.1027", %"class.blink::Member.1027", %"class.blink::Member.1027", %"class.blink::Member.1503", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map.2158", %"class.blink::Member.2168", i8, %"class.base::UnguessableToken", %"class.absl::optional.2170", %"class.absl::optional.2175", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1027", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2148" = type { %"class.blink::MemberBase.2149" }
%"class.blink::MemberBase.2149" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.3792", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.1027", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.3818", %"class.blink::Member.3822", %"class.blink::Member.3826", %"class.blink::Member.3830", %"class.blink::Member.3832", %"class.blink::Member.3834", %"class.blink::Member.3836", %"class.blink::Member.3838", %"class.blink::HeapObserverSet.3840", %"class.blink::Member.3848", %"class.blink::Member.3850", %"class.blink::Member.3852", %"class.blink::Member.3854", %"class.blink::Member.3856", %"class.blink::Member.3858", %"class.blink::Member.3864", %"class.blink::Member.3866", %"class.blink::Member.3868", %"class.blink::Member.3870", %"class.blink::Member.3872", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.4098", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.4105", %"class.blink::Member.2148", %"class.blink::Member.2148", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.4112", %"class.std::__1::unique_ptr.4118", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.3792" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.3793" }
%"class.blink::HeapHashMap.3793" = type { %"class.WTF::HashMap.3796" }
%"class.WTF::HashMap.3796" = type { %"class.WTF::HashTable.3797" }
%"class.WTF::HashTable.3797" = type <{ %"struct.WTF::KeyValuePair.3799"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3799" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.3800" }
%"class.std::__1::unique_ptr.3800" = type { %"class.std::__1::__compressed_pair.3801" }
%"class.std::__1::__compressed_pair.3801" = type { %"struct.std::__1::__compressed_pair_elem.3802" }
%"struct.std::__1::__compressed_pair_elem.3802" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.3803", %"class.WTF::HashMap.3803", %"class.WTF::HashMap.3803", %"class.WTF::HashMap.3803", %"class.WTF::HashMap.3803", %"class.WTF::HashMap.3803", %"class.WTF::HashMap.3803", %"class.std::__1::unique_ptr.3808" }
%"class.WTF::HashMap.3803" = type { %"class.WTF::HashTable.3804" }
%"class.WTF::HashTable.3804" = type <{ %"struct.WTF::KeyValuePair.3807"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3807" = type opaque
%"class.std::__1::unique_ptr.3808" = type { %"class.std::__1::__compressed_pair.3809" }
%"class.std::__1::__compressed_pair.3809" = type { %"struct.std::__1::__compressed_pair_elem.3810" }
%"struct.std::__1::__compressed_pair_elem.3810" = type { %"class.WTF::Vector.3811"* }
%"class.WTF::Vector.3811" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.3818" = type { %"class.blink::MemberBase.3819" }
%"class.blink::MemberBase.3819" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2148", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.3822" = type { %"class.blink::MemberBase.3823" }
%"class.blink::MemberBase.3823" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type <{ %"class.blink::Member.2148", i32, [4 x i8], %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", %"class.base::TimeTicks", %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*, %"class.blink::FloatPoint", %"class.gfx::Vector2dF", i32, [4 x i8] }>
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.gfx::Vector2dF" = type { float, float }
%"class.blink::Member.3826" = type { %"class.blink::MemberBase.3827" }
%"class.blink::MemberBase.3827" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.2111", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.3830" = type { %"class.blink::MemberBase.3831" }
%"class.blink::MemberBase.3831" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.3832" = type { %"class.blink::MemberBase.3833" }
%"class.blink::MemberBase.3833" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.3834" = type { %"class.blink::MemberBase.3835" }
%"class.blink::MemberBase.3835" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.3836" = type { %"class.blink::MemberBase.3837" }
%"class.blink::MemberBase.3837" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.3838" = type { %"class.blink::MemberBase.3839" }
%"class.blink::MemberBase.3839" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.3840" = type { i32, [4 x i8], %"class.blink::HeapHashSet.3841" }
%"class.blink::HeapHashSet.3841" = type { %"class.WTF::HashSet.3844" }
%"class.WTF::HashSet.3844" = type { %"class.WTF::HashTable.3845" }
%"class.WTF::HashTable.3845" = type <{ %"class.blink::WeakMember.3847"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3847" = type opaque
%"class.blink::Member.3848" = type { %"class.blink::MemberBase.3849" }
%"class.blink::MemberBase.3849" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.3850" = type { %"class.blink::MemberBase.3851" }
%"class.blink::MemberBase.3851" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.3852" = type { %"class.blink::MemberBase.3853" }
%"class.blink::MemberBase.3853" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.3854" = type { %"class.blink::MemberBase.3855" }
%"class.blink::MemberBase.3855" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.3856" = type { %"class.blink::MemberBase.3857" }
%"class.blink::MemberBase.3857" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.3858" = type { %"class.blink::MemberBase.3859" }
%"class.blink::MemberBase.3859" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type <{ %"class.blink::ScrollableArea", %"class.blink::Member.2148", %class.scoped_refptr.3862, %class.scoped_refptr.3863, %class.scoped_refptr.3863, %"class.blink::PropertyTreeStateOrAlias", %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.898, %class.scoped_refptr.903, %class.scoped_refptr.903, %"class.blink::FloatSize", float, i8, [3 x i8], %"class.blink::IntSize", float, float, i8, [7 x i8], %"struct.cc::ElementId", %"struct.cc::ElementId", i8, [7 x i8] }>
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.763", %"class.blink::Member.765", %"class.blink::Member.767", %"class.blink::Member.769", %"class.WTF::Vector.771", i16, %class.scoped_refptr.778 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%class.scoped_refptr.778 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.779" }>
%"class.base::RefCountedThreadSafe.779" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.3862 = type { %"class.cc::Layer"* }
%"class.cc::Layer" = type opaque
%class.scoped_refptr.3863 = type { %"class.cc::ScrollbarLayerBase"* }
%"class.cc::ScrollbarLayerBase" = type opaque
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.864", i8, i8, %class.scoped_refptr.866, i32, i32 }
%"class.WTF::RefCounted.864" = type { %"class.base::RefCounted.865" }
%"class.base::RefCounted.865" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.866 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.945" }
%"class.blink::PaintPropertyNode.945" = type { %"class.WTF::RefCounted.946", i8, i8, %class.scoped_refptr.908, i32, i32 }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.908 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.904" }
%"class.blink::PaintPropertyNode.904" = type { %"class.WTF::RefCounted.905", i8, i8, %class.scoped_refptr.907, i32, i32 }
%"class.WTF::RefCounted.905" = type { %"class.base::RefCounted.906" }
%"class.base::RefCounted.906" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.907 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%class.scoped_refptr.863 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.880" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.873, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.874", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.867" }
%"class.std::__1::unique_ptr.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.873 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.899", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.899" = type { %"class.WTF::RefCounted.900", i8, i8, %class.scoped_refptr.873, i32, i32 }
%"class.WTF::RefCounted.900" = type { %"class.base::RefCounted.901" }
%"class.base::RefCounted.901" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.794" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.794" = type { %"class.absl::optional_internal::optional_data.795" }
%"class.absl::optional_internal::optional_data.795" = type { %"class.absl::optional_internal::optional_data_base.796" }
%"class.absl::optional_internal::optional_data_base.796" = type { %"class.absl::optional_internal::optional_data_dtor_base.797" }
%"class.absl::optional_internal::optional_data_dtor_base.797" = type { i8, %union.anon.798 }
%union.anon.798 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.799" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.883", %"class.std::__1::unique_ptr.889", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.898 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.903 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.866, %class.scoped_refptr.908, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.930", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.909" }
%"class.std::__1::vector.909" = type { %"class.std::__1::__vector_base.910" }
%"class.std::__1::__vector_base.910" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.925" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.911, [20 x float], i32, [4 x i8], %"class.std::__1::vector.918", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.911 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.912, i32, %"class.absl::optional.913", i8, i32 }
%class.sk_sp.912 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.913" = type { %"class.absl::optional_internal::optional_data.914" }
%"class.absl::optional_internal::optional_data.914" = type { %"class.absl::optional_internal::optional_data_base.915" }
%"class.absl::optional_internal::optional_data_base.915" = type { %"class.absl::optional_internal::optional_data_dtor_base.916" }
%"class.absl::optional_internal::optional_data_dtor_base.916" = type { i8, %union.anon.917 }
%union.anon.917 = type { %struct.SkRect }
%"class.std::__1::vector.918" = type { %"class.std::__1::__vector_base.919" }
%"class.std::__1::__vector_base.919" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.920" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.936" }
%"class.std::__1::vector.936" = type { %"class.std::__1::__vector_base.937" }
%"class.std::__1::__vector_base.937" = type { i32*, i32*, %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { i32* }
%"class.blink::FloatSize" = type { float, float }
%"struct.cc::ElementId" = type { i64 }
%"class.blink::Member.3864" = type { %"class.blink::MemberBase.3865" }
%"class.blink::MemberBase.3865" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.3866" = type { %"class.blink::MemberBase.3867" }
%"class.blink::MemberBase.3867" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.3868" = type { %"class.blink::MemberBase.3869" }
%"class.blink::MemberBase.3869" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.3870" = type { %"class.blink::MemberBase.3871" }
%"class.blink::MemberBase.3871" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.3872" = type { %"class.blink::MemberBase.3873" }
%"class.blink::MemberBase.3873" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.3874" }
%"class.WTF::Deque.3874" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.3877" }
%"class.WTF::VectorBuffer.3877" = type { %"class.WTF::VectorBufferBase.3878" }
%"class.WTF::VectorBufferBase.3878" = type { %"class.std::__1::unique_ptr.3879"*, i32, i32 }
%"class.std::__1::unique_ptr.3879" = type { %"class.std::__1::__compressed_pair.3880" }
%"class.std::__1::__compressed_pair.3880" = type { %"struct.std::__1::__compressed_pair_elem.3881" }
%"struct.std::__1::__compressed_pair_elem.3881" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.std::__1::unique_ptr.3882" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3882" = type { %"class.std::__1::__compressed_pair.3883" }
%"class.std::__1::__compressed_pair.3883" = type { %"struct.std::__1::__compressed_pair_elem.3884" }
%"struct.std::__1::__compressed_pair_elem.3884" = type { %"class.blink::protocol::Audits::InspectorIssueDetails"* }
%"class.blink::protocol::Audits::InspectorIssueDetails" = type { %"class.crdtp::ProtocolObject.3885", %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe.3930", %"class.crdtp::detail::PtrMaybe.3950", %"class.crdtp::detail::PtrMaybe.3960", %"class.crdtp::detail::PtrMaybe.3970", %"class.crdtp::detail::PtrMaybe.3991", %"class.crdtp::detail::PtrMaybe.4001", %"class.crdtp::detail::PtrMaybe.4011", %"class.crdtp::detail::PtrMaybe.4021", %"class.crdtp::detail::PtrMaybe.4050", %"class.crdtp::detail::PtrMaybe.4060", %"class.crdtp::detail::PtrMaybe.4070" }
%"class.crdtp::ProtocolObject.3885" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.3888" }
%"class.std::__1::unique_ptr.3888" = type { %"class.std::__1::__compressed_pair.3889" }
%"class.std::__1::__compressed_pair.3889" = type { %"struct.std::__1::__compressed_pair_elem.3890" }
%"struct.std::__1::__compressed_pair_elem.3890" = type { %"class.blink::protocol::Audits::SameSiteCookieIssueDetails"* }
%"class.blink::protocol::Audits::SameSiteCookieIssueDetails" = type { %"class.crdtp::ProtocolObject.3891", %"class.crdtp::detail::PtrMaybe.3894", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.3904", %"class.std::__1::unique_ptr.3904", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.3917" }
%"class.crdtp::ProtocolObject.3891" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3894" = type { %"class.std::__1::unique_ptr.3895" }
%"class.std::__1::unique_ptr.3895" = type { %"class.std::__1::__compressed_pair.3896" }
%"class.std::__1::__compressed_pair.3896" = type { %"struct.std::__1::__compressed_pair_elem.3897" }
%"struct.std::__1::__compressed_pair_elem.3897" = type { %"class.blink::protocol::Audits::AffectedCookie"* }
%"class.blink::protocol::Audits::AffectedCookie" = type { %"class.crdtp::ProtocolObject.3898", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.3898" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.3904" = type { %"class.std::__1::__compressed_pair.3905" }
%"class.std::__1::__compressed_pair.3905" = type { %"struct.std::__1::__compressed_pair_elem.3906" }
%"struct.std::__1::__compressed_pair_elem.3906" = type { %"class.std::__1::vector.3907"* }
%"class.std::__1::vector.3907" = type { %"class.std::__1::__vector_base.3908" }
%"class.std::__1::__vector_base.3908" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.3909" }
%"class.std::__1::__compressed_pair.3909" = type { %"struct.std::__1::__compressed_pair_elem.3910" }
%"struct.std::__1::__compressed_pair_elem.3910" = type { %"class.WTF::String"* }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::PtrMaybe.3917" = type { %"class.std::__1::unique_ptr.3918" }
%"class.std::__1::unique_ptr.3918" = type { %"class.std::__1::__compressed_pair.3919" }
%"class.std::__1::__compressed_pair.3919" = type { %"struct.std::__1::__compressed_pair_elem.3920" }
%"struct.std::__1::__compressed_pair_elem.3920" = type { %"class.blink::protocol::Audits::AffectedRequest"* }
%"class.blink::protocol::Audits::AffectedRequest" = type { %"class.crdtp::ProtocolObject.3921", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.3921" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3930" = type { %"class.std::__1::unique_ptr.3931" }
%"class.std::__1::unique_ptr.3931" = type { %"class.std::__1::__compressed_pair.3932" }
%"class.std::__1::__compressed_pair.3932" = type { %"struct.std::__1::__compressed_pair_elem.3933" }
%"struct.std::__1::__compressed_pair_elem.3933" = type { %"class.blink::protocol::Audits::MixedContentIssueDetails"* }
%"class.blink::protocol::Audits::MixedContentIssueDetails" = type { %"class.crdtp::ProtocolObject.3934", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.3917", %"class.crdtp::detail::PtrMaybe.3937" }
%"class.crdtp::ProtocolObject.3934" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3937" = type { %"class.std::__1::unique_ptr.3938" }
%"class.std::__1::unique_ptr.3938" = type { %"class.std::__1::__compressed_pair.3939" }
%"class.std::__1::__compressed_pair.3939" = type { %"struct.std::__1::__compressed_pair_elem.3940" }
%"struct.std::__1::__compressed_pair_elem.3940" = type { %"class.blink::protocol::Audits::AffectedFrame"* }
%"class.blink::protocol::Audits::AffectedFrame" = type { %"class.crdtp::ProtocolObject.3941", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.3941" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3950" = type { %"class.std::__1::unique_ptr.3951" }
%"class.std::__1::unique_ptr.3951" = type { %"class.std::__1::__compressed_pair.3952" }
%"class.std::__1::__compressed_pair.3952" = type { %"struct.std::__1::__compressed_pair_elem.3953" }
%"struct.std::__1::__compressed_pair_elem.3953" = type { %"class.blink::protocol::Audits::BlockedByResponseIssueDetails"* }
%"class.blink::protocol::Audits::BlockedByResponseIssueDetails" = type { %"class.crdtp::ProtocolObject.3954", %"class.std::__1::unique_ptr.3918", %"class.crdtp::detail::PtrMaybe.3937", %"class.crdtp::detail::PtrMaybe.3937", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.3954" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3960" = type { %"class.std::__1::unique_ptr.3961" }
%"class.std::__1::unique_ptr.3961" = type { %"class.std::__1::__compressed_pair.3962" }
%"class.std::__1::__compressed_pair.3962" = type { %"struct.std::__1::__compressed_pair_elem.3963" }
%"struct.std::__1::__compressed_pair_elem.3963" = type { %"class.blink::protocol::Audits::HeavyAdIssueDetails"* }
%"class.blink::protocol::Audits::HeavyAdIssueDetails" = type { %"class.crdtp::ProtocolObject.3964", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.3938" }
%"class.crdtp::ProtocolObject.3964" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3970" = type { %"class.std::__1::unique_ptr.3971" }
%"class.std::__1::unique_ptr.3971" = type { %"class.std::__1::__compressed_pair.3972" }
%"class.std::__1::__compressed_pair.3972" = type { %"struct.std::__1::__compressed_pair_elem.3973" }
%"struct.std::__1::__compressed_pair_elem.3973" = type { %"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails"* }
%"class.blink::protocol::Audits::ContentSecurityPolicyIssueDetails" = type { %"class.crdtp::ProtocolObject.3974", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i8, %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.3937", %"class.crdtp::detail::PtrMaybe.3977", %"class.crdtp::detail::ValueMaybe.3987" }
%"class.crdtp::ProtocolObject.3974" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.3977" = type { %"class.std::__1::unique_ptr.3978" }
%"class.std::__1::unique_ptr.3978" = type { %"class.std::__1::__compressed_pair.3979" }
%"class.std::__1::__compressed_pair.3979" = type { %"struct.std::__1::__compressed_pair_elem.3980" }
%"struct.std::__1::__compressed_pair_elem.3980" = type { %"class.blink::protocol::Audits::SourceCodeLocation"* }
%"class.blink::protocol::Audits::SourceCodeLocation" = type { %"class.crdtp::ProtocolObject.3981", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", i32, i32 }
%"class.crdtp::ProtocolObject.3981" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.3987" = type { i8, i32 }
%"class.crdtp::detail::PtrMaybe.3991" = type { %"class.std::__1::unique_ptr.3992" }
%"class.std::__1::unique_ptr.3992" = type { %"class.std::__1::__compressed_pair.3993" }
%"class.std::__1::__compressed_pair.3993" = type { %"struct.std::__1::__compressed_pair_elem.3994" }
%"struct.std::__1::__compressed_pair_elem.3994" = type { %"class.blink::protocol::Audits::SharedArrayBufferIssueDetails"* }
%"class.blink::protocol::Audits::SharedArrayBufferIssueDetails" = type { %"class.crdtp::ProtocolObject.3995", %"class.std::__1::unique_ptr.3978", i8, %"class.WTF::String" }
%"class.crdtp::ProtocolObject.3995" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.4001" = type { %"class.std::__1::unique_ptr.4002" }
%"class.std::__1::unique_ptr.4002" = type { %"class.std::__1::__compressed_pair.4003" }
%"class.std::__1::__compressed_pair.4003" = type { %"struct.std::__1::__compressed_pair_elem.4004" }
%"struct.std::__1::__compressed_pair_elem.4004" = type { %"class.blink::protocol::Audits::TrustedWebActivityIssueDetails"* }
%"class.blink::protocol::Audits::TrustedWebActivityIssueDetails" = type { %"class.crdtp::ProtocolObject.4005", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.3987", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.4005" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.4011" = type { %"class.std::__1::unique_ptr.4012" }
%"class.std::__1::unique_ptr.4012" = type { %"class.std::__1::__compressed_pair.4013" }
%"class.std::__1::__compressed_pair.4013" = type { %"struct.std::__1::__compressed_pair_elem.4014" }
%"struct.std::__1::__compressed_pair_elem.4014" = type { %"class.blink::protocol::Audits::LowTextContrastIssueDetails"* }
%"class.blink::protocol::Audits::LowTextContrastIssueDetails" = type { %"class.crdtp::ProtocolObject.4015", i32, %"class.WTF::String", double, double, double, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.4015" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.4021" = type { %"class.std::__1::unique_ptr.4022" }
%"class.std::__1::unique_ptr.4022" = type { %"class.std::__1::__compressed_pair.4023" }
%"class.std::__1::__compressed_pair.4023" = type { %"struct.std::__1::__compressed_pair_elem.4024" }
%"struct.std::__1::__compressed_pair_elem.4024" = type { %"class.blink::protocol::Audits::CorsIssueDetails"* }
%"class.blink::protocol::Audits::CorsIssueDetails" = type { %"class.crdtp::ProtocolObject.4025", %"class.std::__1::unique_ptr.4028", i8, %"class.std::__1::unique_ptr.3918", %"class.crdtp::detail::PtrMaybe.3977", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.4037" }
%"class.crdtp::ProtocolObject.4025" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.4028" = type { %"class.std::__1::__compressed_pair.4029" }
%"class.std::__1::__compressed_pair.4029" = type { %"struct.std::__1::__compressed_pair_elem.4030" }
%"struct.std::__1::__compressed_pair_elem.4030" = type { %"class.blink::protocol::Network::CorsErrorStatus"* }
%"class.blink::protocol::Network::CorsErrorStatus" = type { %"class.crdtp::ProtocolObject.4031", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.4031" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.4037" = type { %"class.std::__1::unique_ptr.4038" }
%"class.std::__1::unique_ptr.4038" = type { %"class.std::__1::__compressed_pair.4039" }
%"class.std::__1::__compressed_pair.4039" = type { %"struct.std::__1::__compressed_pair_elem.4040" }
%"struct.std::__1::__compressed_pair_elem.4040" = type { %"class.blink::protocol::Network::ClientSecurityState"* }
%"class.blink::protocol::Network::ClientSecurityState" = type { %"class.crdtp::ProtocolObject.4041", i8, %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.4041" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.4050" = type { %"class.std::__1::unique_ptr.4051" }
%"class.std::__1::unique_ptr.4051" = type { %"class.std::__1::__compressed_pair.4052" }
%"class.std::__1::__compressed_pair.4052" = type { %"struct.std::__1::__compressed_pair_elem.4053" }
%"struct.std::__1::__compressed_pair_elem.4053" = type { %"class.blink::protocol::Audits::AttributionReportingIssueDetails"* }
%"class.blink::protocol::Audits::AttributionReportingIssueDetails" = type { %"class.crdtp::ProtocolObject.4054", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.3937", %"class.crdtp::detail::PtrMaybe.3917", %"class.crdtp::detail::ValueMaybe.3987", %"class.crdtp::detail::ValueMaybe" }
%"class.crdtp::ProtocolObject.4054" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.4060" = type { %"class.std::__1::unique_ptr.4061" }
%"class.std::__1::unique_ptr.4061" = type { %"class.std::__1::__compressed_pair.4062" }
%"class.std::__1::__compressed_pair.4062" = type { %"struct.std::__1::__compressed_pair_elem.4063" }
%"struct.std::__1::__compressed_pair_elem.4063" = type { %"class.blink::protocol::Audits::QuirksModeIssueDetails"* }
%"class.blink::protocol::Audits::QuirksModeIssueDetails" = type { %"class.crdtp::ProtocolObject.4064", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.4064" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.4070" = type { %"class.std::__1::unique_ptr.4071" }
%"class.std::__1::unique_ptr.4071" = type { %"class.std::__1::__compressed_pair.4072" }
%"class.std::__1::__compressed_pair.4072" = type { %"struct.std::__1::__compressed_pair_elem.4073" }
%"struct.std::__1::__compressed_pair_elem.4073" = type { %"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails"* }
%"class.blink::protocol::Audits::NavigatorUserAgentIssueDetails" = type { %"class.crdtp::ProtocolObject.4074", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.3977" }
%"class.crdtp::ProtocolObject.4074" = type { %"class.crdtp::Serializable" }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.4086", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.4086" = type { %"class.std::__1::__bitset.4087" }
%"class.std::__1::__bitset.4087" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.4088" }
%"class.absl::optional.4088" = type { %"class.absl::optional_internal::optional_data.4089" }
%"class.absl::optional_internal::optional_data.4089" = type { %"class.absl::optional_internal::optional_data_base.4090" }
%"class.absl::optional_internal::optional_data_base.4090" = type { %"class.absl::optional_internal::optional_data_dtor_base.4091" }
%"class.absl::optional_internal::optional_data_dtor_base.4091" = type { i8, %union.anon.4092 }
%union.anon.4092 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.4093", i64, %"class.absl::optional.1152", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.2948" }
%"class.blink::WebPrivatePtr.2948" = type { i8* }
%"class.absl::optional.4093" = type { %"class.absl::optional_internal::optional_data.4094" }
%"class.absl::optional_internal::optional_data.4094" = type { %"class.absl::optional_internal::optional_data_base.4095" }
%"class.absl::optional_internal::optional_data_base.4095" = type { %"class.absl::optional_internal::optional_data_dtor_base.4096" }
%"class.absl::optional_internal::optional_data_dtor_base.4096" = type { i8, %union.anon.4097 }
%union.anon.4097 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.1152" = type { %"class.absl::optional_internal::optional_data.1153" }
%"class.absl::optional_internal::optional_data.1153" = type { %"class.absl::optional_internal::optional_data_base.1154" }
%"class.absl::optional_internal::optional_data_base.1154" = type { %"class.absl::optional_internal::optional_data_dtor_base.1155" }
%"class.absl::optional_internal::optional_data_dtor_base.1155" = type { i8, %union.anon.1156 }
%union.anon.1156 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr.4098" = type { %"class.std::__1::unique_ptr.4099" }
%"class.std::__1::unique_ptr.4099" = type { %"class.std::__1::__compressed_pair.4100" }
%"class.std::__1::__compressed_pair.4100" = type { %"struct.std::__1::__compressed_pair_elem.4101" }
%"struct.std::__1::__compressed_pair_elem.4101" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.4105" = type { %"class.WTF::HashSet.4108" }
%"class.WTF::HashSet.4108" = type { %"class.WTF::HashTable.4109" }
%"class.WTF::HashTable.4109" = type <{ %"class.blink::WeakMember.4111"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.4111" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.3471" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.3471" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.4112" = type { %"class.std::__1::__compressed_pair.4113" }
%"class.std::__1::__compressed_pair.4113" = type { %"struct.std::__1::__compressed_pair_elem.4114" }
%"struct.std::__1::__compressed_pair_elem.4114" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.4118" = type { %"class.std::__1::__compressed_pair.4119" }
%"class.std::__1::__compressed_pair.4119" = type { %"struct.std::__1::__compressed_pair_elem.4120" }
%"struct.std::__1::__compressed_pair_elem.4120" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.blink::Member.2150" = type { %"class.blink::MemberBase.2151" }
%"class.blink::MemberBase.2151" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2152" = type { %"class.blink::MemberBase.2153" }
%"class.blink::MemberBase.2153" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.2154" = type { %"class.blink::MemberBase.2155" }
%"class.blink::MemberBase.2155" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1503" = type { %"class.blink::MemberBase.1504" }
%"class.blink::MemberBase.1504" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2187", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2195", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2203", %"class.blink::FrameLoader", %"class.blink::Member.2224", %"class.blink::Member.343", %"class.blink::Member.2226", %"class.blink::Member.2228", %"class.blink::Member.2230", %"class.blink::Member.2232", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2234", %class.scoped_refptr.2458, %"class.blink::Member.2459", %"class.blink::Member.2461", %"class.blink::Member.2463", %"class.blink::Member.2465", %"class.blink::Member.2467", %"class.blink::Member.2471", %"class.blink::Member.2473", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.2475", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2478", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2499", %"class.std::__1::unique_ptr.2500", %"class.absl::optional.2175", i32, [4 x i8], %"class.std::__1::unique_ptr.2506", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2514", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2519", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2524", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2527", %"class.blink::Member.2529", %"class.blink::Member.2531", %"class.blink::Member.2533", %"class.mojo::StructPtr.2536", %"class.blink::Member.2545", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2547", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2187" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2188" }
%"class.blink::HeapHashMap.2188" = type { %"class.WTF::HashMap.2191" }
%"class.WTF::HashMap.2191" = type { %"class.WTF::HashTable.2192" }
%"class.WTF::HashTable.2192" = type <{ %"struct.WTF::KeyValuePair.2194"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2194" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2195" = type { %"class.std::__1::__compressed_pair.2196" }
%"class.std::__1::__compressed_pair.2196" = type { %"struct.std::__1::__compressed_pair_elem.2197" }
%"struct.std::__1::__compressed_pair_elem.2197" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1488", %"class.base::WeakPtrFactory.1493" }
%"class.WTF::HashMap.1488" = type { %"class.WTF::HashTable.1489" }
%"class.WTF::HashTable.1489" = type <{ %"struct.WTF::KeyValuePair.1492"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1492" = type opaque
%"class.base::WeakPtrFactory.1493" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.993 }
%class.scoped_refptr.993 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2201" }
%"class.blink::Member.2201" = type { %"class.blink::MemberBase.2202" }
%"class.blink::MemberBase.2202" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1501" }
%"class.blink::WeakMember.1501" = type { %"class.blink::MemberBase.1502" }
%"class.blink::MemberBase.1502" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1213" }
%"class.blink::HeapHashSet.1213" = type { %"class.WTF::HashSet.1216" }
%"class.WTF::HashSet.1216" = type { %"class.WTF::HashTable.1217" }
%"class.WTF::HashTable.1217" = type <{ %"class.blink::WeakMember.1219"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1219" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.1150", %"class.base::RepeatingCallback.4701", i64, %"class.std::__1::map.4702", i8*, i64, %"class.base::WeakPtrFactory.4711" }
%"class.base::RepeatingCallback.1150" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.4701" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.4702" = type { %"class.std::__1::__tree.4703" }
%"class.std::__1::__tree.4703" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4704", %"class.std::__1::__compressed_pair.4708" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.4704" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.4708" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.4711" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2203" = type { %"class.WTF::HashSet.2206" }
%"class.WTF::HashSet.2206" = type { %"class.WTF::HashTable.2207" }
%"class.WTF::HashTable.2207" = type <{ %"class.blink::WeakMember.2209"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2209" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1503", %"class.blink::Member.2210", %"class.blink::Member.2212", %"class.std::__1::unique_ptr.2214", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2220" }
%"class.blink::Member.2210" = type { %"class.blink::MemberBase.2211" }
%"class.blink::MemberBase.2211" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2212" = type { %"class.blink::MemberBase.2213" }
%"class.blink::MemberBase.2213" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.2938", %"class.blink::Member.2943", %"class.std::__1::unique_ptr.2945", %"class.std::__1::unique_ptr.1306", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.3122, %"class.WTF::AtomicString", i32, %"class.absl::optional.3021", %class.scoped_refptr.1236, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2986", i8, %"class.absl::optional.2993", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.1503", %"class.blink::Member.3123", %"class.blink::Member.1541", %"class.blink::Member.3129", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.3131", %class.scoped_refptr.1228, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.3144", %"class.std::__1::unique_ptr.2998", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.3146", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.3151, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.3165, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.3166", %"class.blink::Member.3181", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.3194", %"class.WTF::Vector.630", i8, i8, i8, %"class.blink::WebVector.3111", %"class.blink::WebVector.3111", %"class.mojo::Remote.3199" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.2938" = type { %"class.WTF::VectorBuffer.2939" }
%"class.WTF::VectorBuffer.2939" = type { %"class.WTF::VectorBufferBase.2940" }
%"class.WTF::VectorBufferBase.2940" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.2943" = type { %"class.blink::MemberBase.2944" }
%"class.blink::MemberBase.2944" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.2945" = type { %"class.std::__1::__compressed_pair.2946" }
%"class.std::__1::__compressed_pair.2946" = type { %"struct.std::__1::__compressed_pair_elem.2947" }
%"struct.std::__1::__compressed_pair_elem.2947" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.2949", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2986", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2993", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2998", %"class.base::UnguessableToken", %"class.blink::WebVector.3004", %"class.base::TickClock"*, %"class.blink::WebVector.3013", %"class.absl::optional.3021", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.3026", %"class.blink::WebVector", i8, %"class.blink::WebVector.3045", i8, %"class.std::__1::unique_ptr.3053", %"class.blink::WebVector.3111", %"class.blink::WebVector.3111" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector.2949" = type { %"class.std::__1::vector.2950" }
%"class.std::__1::vector.2950" = type { %"class.std::__1::__vector_base.2951" }
%"class.std::__1::__vector_base.2951" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2981" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2981" = type { %"struct.std::__1::__compressed_pair_elem.2982" }
%"struct.std::__1::__compressed_pair_elem.2982" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.2952", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.2952" = type { %"class.std::__1::__compressed_pair.2953" }
%"class.std::__1::__compressed_pair.2953" = type { %"struct.std::__1::__compressed_pair_elem.2954" }
%"struct.std::__1::__compressed_pair_elem.2954" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2992", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2992" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.3004" = type { %"class.std::__1::vector.3005" }
%"class.std::__1::vector.3005" = type { %"class.std::__1::__vector_base.3006" }
%"class.std::__1::__vector_base.3006" = type { %"class.std::__1::unique_ptr.3007"*, %"class.std::__1::unique_ptr.3007"*, %"class.std::__1::__compressed_pair.3008" }
%"class.std::__1::unique_ptr.3007" = type opaque
%"class.std::__1::__compressed_pair.3008" = type { %"struct.std::__1::__compressed_pair_elem.3009" }
%"struct.std::__1::__compressed_pair_elem.3009" = type { %"class.std::__1::unique_ptr.3007"* }
%"class.blink::WebVector.3013" = type { %"class.std::__1::vector.3014" }
%"class.std::__1::vector.3014" = type { %"class.std::__1::__vector_base.3015" }
%"class.std::__1::__vector_base.3015" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3016" }
%"class.std::__1::__compressed_pair.3016" = type { %"struct.std::__1::__compressed_pair_elem.3017" }
%"struct.std::__1::__compressed_pair_elem.3017" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.3026" = type { %"class.absl::optional_internal::optional_data.3027" }
%"class.absl::optional_internal::optional_data.3027" = type { %"class.absl::optional_internal::optional_data_base.3028" }
%"class.absl::optional_internal::optional_data_base.3028" = type { %"class.absl::optional_internal::optional_data_dtor_base.3029" }
%"class.absl::optional_internal::optional_data_dtor_base.3029" = type { i8, [7 x i8], %union.anon.3030 }
%union.anon.3030 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2483" }
%"class.std::__1::vector.2483" = type { %"class.std::__1::__vector_base.2484" }
%"class.std::__1::__vector_base.2484" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2485" }
%"class.std::__1::__compressed_pair.2485" = type { %"struct.std::__1::__compressed_pair_elem.2486" }
%"struct.std::__1::__compressed_pair_elem.2486" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.3045" = type { %"class.std::__1::vector.3046" }
%"class.std::__1::vector.3046" = type { %"class.std::__1::__vector_base.3047" }
%"class.std::__1::__vector_base.3047" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3048" }
%"class.std::__1::__compressed_pair.3048" = type { %"struct.std::__1::__compressed_pair_elem.3049" }
%"struct.std::__1::__compressed_pair_elem.3049" = type { i32* }
%"class.std::__1::unique_ptr.3053" = type { %"class.std::__1::__compressed_pair.3054" }
%"class.std::__1::__compressed_pair.3054" = type { %"struct.std::__1::__compressed_pair_elem.3055" }
%"struct.std::__1::__compressed_pair_elem.3055" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.3056" }
%"class.blink::WebVector.3056" = type { %"class.std::__1::vector.3057" }
%"class.std::__1::vector.3057" = type { %"class.std::__1::__vector_base.3058" }
%"class.std::__1::__vector_base.3058" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.3103" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.3059", %"class.blink::WebVector.3067", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector", i32, [4 x i8], %"class.absl::optional.3098", %"class.blink::WebVector" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.3059" = type { %"class.std::__1::vector.3060" }
%"class.std::__1::vector.3060" = type { %"class.std::__1::__vector_base.3061" }
%"class.std::__1::__vector_base.3061" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.3062" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.3062" = type { %"struct.std::__1::__compressed_pair_elem.3063" }
%"struct.std::__1::__compressed_pair_elem.3063" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.3067" = type { %"class.std::__1::vector.3068" }
%"class.std::__1::vector.3068" = type { %"class.std::__1::__vector_base.3069" }
%"class.std::__1::__vector_base.3069" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.3093" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.3070", %"class.blink::WebVector", %"class.blink::WebVector.3078", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.3070" = type { %"class.std::__1::vector.3071" }
%"class.std::__1::vector.3071" = type { %"class.std::__1::__vector_base.3072" }
%"class.std::__1::__vector_base.3072" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.3073" }
%"class.std::__1::__compressed_pair.3073" = type { %"struct.std::__1::__compressed_pair_elem.3074" }
%"struct.std::__1::__compressed_pair_elem.3074" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.3078" = type { %"class.std::__1::vector.3079" }
%"class.std::__1::vector.3079" = type { %"class.std::__1::__vector_base.3080" }
%"class.std::__1::__vector_base.3080" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.3088" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.3081" }
%"class.blink::WebVector.3081" = type { %"class.std::__1::vector.3082" }
%"class.std::__1::vector.3082" = type { %"class.std::__1::__vector_base.3083" }
%"class.std::__1::__vector_base.3083" = type { i8*, i8*, %"class.std::__1::__compressed_pair.3084" }
%"class.std::__1::__compressed_pair.3084" = type { %"struct.std::__1::__compressed_pair_elem.1400" }
%"struct.std::__1::__compressed_pair_elem.1400" = type { i8* }
%"class.std::__1::__compressed_pair.3088" = type { %"struct.std::__1::__compressed_pair_elem.3089" }
%"struct.std::__1::__compressed_pair_elem.3089" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.3093" = type { %"struct.std::__1::__compressed_pair_elem.3094" }
%"struct.std::__1::__compressed_pair_elem.3094" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.3098" = type { %"class.absl::optional_internal::optional_data.3099" }
%"class.absl::optional_internal::optional_data.3099" = type { %"class.absl::optional_internal::optional_data_base.3100" }
%"class.absl::optional_internal::optional_data_base.3100" = type { %"class.absl::optional_internal::optional_data_dtor_base.3101" }
%"class.absl::optional_internal::optional_data_dtor_base.3101" = type { i8, [7 x i8], %union.anon.3102 }
%union.anon.3102 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.3103" = type { %"struct.std::__1::__compressed_pair_elem.3104" }
%"struct.std::__1::__compressed_pair_elem.3104" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1163 }
%class.scoped_refptr.1163 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1306" = type { %"class.std::__1::__compressed_pair.1307" }
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.1308" }
%"struct.std::__1::__compressed_pair_elem.1308" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1309" }
%"class.std::__1::unique_ptr.1309" = type { %"class.std::__1::__compressed_pair.1310" }
%"class.std::__1::__compressed_pair.1310" = type { %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1312" }
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314" }
%"class.WTF::VectorBufferBase.1314" = type { %"class.mojo::StructPtr.1315"*, i32, i32 }
%"class.mojo::StructPtr.1315" = type { %"class.std::__1::unique_ptr.1316" }
%"class.std::__1::unique_ptr.1316" = type { %"class.std::__1::__compressed_pair.1317" }
%"class.std::__1::__compressed_pair.1317" = type { %"struct.std::__1::__compressed_pair_elem.1318" }
%"struct.std::__1::__compressed_pair_elem.1318" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1319", %"class.WTF::HashMap.1326", %"class.WTF::HashMap.1331", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1336", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1319" = type { %"class.std::__1::unique_ptr.1320" }
%"class.std::__1::unique_ptr.1320" = type { %"class.std::__1::__compressed_pair.1321" }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.1322" }
%"struct.std::__1::__compressed_pair_elem.1322" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1326" = type { %"class.WTF::HashTable.1327" }
%"class.WTF::HashTable.1327" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::HashMap.1331" = type { %"class.WTF::HashTable.1332" }
%"class.WTF::HashTable.1332" = type <{ %"struct.WTF::KeyValuePair.1335"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1335" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1336" = type { %"class.std::__1::unique_ptr.1337" }
%"class.std::__1::unique_ptr.1337" = type { %"class.std::__1::__compressed_pair.1338" }
%"class.std::__1::__compressed_pair.1338" = type { %"struct.std::__1::__compressed_pair_elem.1339" }
%"struct.std::__1::__compressed_pair_elem.1339" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1351" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1147", i32 }>
%"class.std::__1::unique_ptr.1147" = type { %"class.std::__1::__compressed_pair.1148" }
%"class.std::__1::__compressed_pair.1148" = type { %"struct.std::__1::__compressed_pair_elem.1149" }
%"struct.std::__1::__compressed_pair_elem.1149" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.1150", %"class.base::OnceCallback.1151", %"class.absl::optional.1152", %"class.absl::optional.1157", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1164", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1172", %"class.std::__1::map.1183", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1192", i8, %class.scoped_refptr.1040, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1193" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::OnceCallback.1151" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1157" = type { %"class.absl::optional_internal::optional_data.1158" }
%"class.absl::optional_internal::optional_data.1158" = type { %"class.absl::optional_internal::optional_data_base.1159" }
%"class.absl::optional_internal::optional_data_base.1159" = type { %"class.absl::optional_internal::optional_data_dtor_base.1160" }
%"class.absl::optional_internal::optional_data_dtor_base.1160" = type { i8, %union.anon.1161 }
%union.anon.1161 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1040, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1162" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.1162" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1110 }
%class.scoped_refptr.1110 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3207", [4 x i8], %"class.base::RepeatingCallback.1150", %class.scoped_refptr.1040, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.3207" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1167", %class.scoped_refptr.1168 }
%"class.base::RepeatingCallback.1167" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1168 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1039", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1039" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1041", %"class.std::__1::unique_ptr.1047", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1053" }
%"class.std::__1::unique_ptr.1041" = type { %"class.std::__1::__compressed_pair.1042" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.1043" }
%"struct.std::__1::__compressed_pair_elem.1043" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1053" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1172" = type { %"class.std::__1::__tree.1173" }
%"class.std::__1::__tree.1173" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1174", %"class.std::__1::__compressed_pair.1178" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1183" = type { %"class.std::__1::__tree.1184" }
%"class.std::__1::__tree.1184" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1185", %"class.std::__1::__compressed_pair.1189" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"class.std::__1::__compressed_pair.1189" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1192" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1040 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1193" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1351" = type { %"class.std::__1::__compressed_pair.1352" }
%"class.std::__1::__compressed_pair.1352" = type { %"struct.std::__1::__compressed_pair_elem.1353" }
%"struct.std::__1::__compressed_pair_elem.1353" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%class.scoped_refptr.3122 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.3021" = type { %"class.absl::optional_internal::optional_data.3022" }
%"class.absl::optional_internal::optional_data.3022" = type { %"class.absl::optional_internal::optional_data_base.3023" }
%"class.absl::optional_internal::optional_data_base.3023" = type { %"class.absl::optional_internal::optional_data_dtor_base.3024" }
%"class.absl::optional_internal::optional_data_dtor_base.3024" = type { i8, %union.anon.3025 }
%union.anon.3025 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector", %"class.blink::WebString", %"class.blink::WebVector", %"class.blink::WebVector" }
%class.scoped_refptr.1236 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1229", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1231", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1236 }
%"class.WTF::RefCounted.1229" = type { %"class.base::RefCounted.1230" }
%"class.base::RefCounted.1230" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1231" = type { %"class.absl::optional_internal::optional_data.1232" }
%"class.absl::optional_internal::optional_data.1232" = type { %"class.absl::optional_internal::optional_data_base.1233" }
%"class.absl::optional_internal::optional_data_base.1233" = type { %"class.absl::optional_internal::optional_data_dtor_base.1234" }
%"class.absl::optional_internal::optional_data_dtor_base.1234" = type { i8, %union.anon.1235 }
%union.anon.1235 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2986" = type { %"class.std::__1::__compressed_pair.2987" }
%"class.std::__1::__compressed_pair.2987" = type { %"struct.std::__1::__compressed_pair_elem.2988" }
%"struct.std::__1::__compressed_pair_elem.2988" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2993" = type { %"class.absl::optional_internal::optional_data.2994" }
%"class.absl::optional_internal::optional_data.2994" = type { %"class.absl::optional_internal::optional_data_base.2995" }
%"class.absl::optional_internal::optional_data_base.2995" = type { %"class.absl::optional_internal::optional_data_dtor_base.2996" }
%"class.absl::optional_internal::optional_data_dtor_base.2996" = type { i8, %union.anon.2997 }
%union.anon.2997 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.3031", %"class.base::flat_map.2158", i8, [7 x i8] }>
%"class.std::__1::vector.3031" = type { %"class.std::__1::__vector_base.3032" }
%"class.std::__1::__vector_base.3032" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.3040" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.3033", i8, i8, [6 x i8] }>
%"class.std::__1::vector.3033" = type { %"class.std::__1::__vector_base.3034" }
%"class.std::__1::__vector_base.3034" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.3035" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1231" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.3035" = type { %"struct.std::__1::__compressed_pair_elem.3036" }
%"struct.std::__1::__compressed_pair_elem.3036" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.3040" = type { %"struct.std::__1::__compressed_pair_elem.3041" }
%"struct.std::__1::__compressed_pair_elem.3041" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.3123" = type { %"class.blink::MemberBase.3124" }
%"class.blink::MemberBase.3124" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.630", %"class.blink::Member.3127", %"class.absl::optional.814", i64, i64, i32, %class.scoped_refptr.1395, %class.scoped_refptr.3122, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.1395 }
%"class.blink::Member.3127" = type { %"class.blink::MemberBase.3128" }
%"class.blink::MemberBase.3128" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.814" = type { %"class.absl::optional_internal::optional_data.815" }
%"class.absl::optional_internal::optional_data.815" = type { %"class.absl::optional_internal::optional_data_base.816" }
%"class.absl::optional_internal::optional_data_base.816" = type { %"class.absl::optional_internal::optional_data_dtor_base.817" }
%"class.absl::optional_internal::optional_data_dtor_base.817" = type { i8, %union.anon.818 }
%union.anon.818 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::Member.3129" = type { %"class.blink::MemberBase.3130" }
%"class.blink::MemberBase.3130" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.2961", %class.scoped_refptr.2971, %class.scoped_refptr.2972, %"struct.blink::CacheControlHeader", %"class.absl::optional.1152", %"class.absl::optional.2928", %"class.absl::optional.2928", %"class.absl::optional.2928", i64, %"class.blink::KURL", %"class.WTF::Vector.2938", %"class.WTF::String", %"class.WTF::Vector.630", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.2175", %"class.WTF::Vector.630", %"class.blink::KURL", %"class.absl::optional.2973" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.2955" }
%"class.WTF::HashMap.2955" = type { %"class.WTF::HashTable.2956" }
%"class.WTF::HashTable.2956" = type <{ %"struct.WTF::KeyValuePair.2959"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2959" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.2960", i8 }
%"struct.std::__1::array.2960" = type { [16 x i8] }
%"class.absl::optional.2961" = type { %"class.absl::optional_internal::optional_data.2962" }
%"class.absl::optional_internal::optional_data.2962" = type { %"class.absl::optional_internal::optional_data_base.2963" }
%"class.absl::optional_internal::optional_data_base.2963" = type { %"class.absl::optional_internal::optional_data_dtor_base.2964" }
%"class.absl::optional_internal::optional_data_dtor_base.2964" = type { i8, %union.anon.2965 }
%union.anon.2965 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.630", %"class.WTF::String", i64, i64, %"class.WTF::Vector.284", %"class.WTF::Vector.2966" }
%"class.WTF::Vector.2966" = type { %"class.WTF::VectorBuffer.2967" }
%"class.WTF::VectorBuffer.2967" = type { %"class.WTF::VectorBufferBase.2968" }
%"class.WTF::VectorBufferBase.2968" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.2971 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.2972 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.1152", %"class.absl::optional.1152" }
%"class.absl::optional.2928" = type { %"class.absl::optional_internal::optional_data.2929" }
%"class.absl::optional_internal::optional_data.2929" = type { %"class.absl::optional_internal::optional_data_base.2930" }
%"class.absl::optional_internal::optional_data_base.2930" = type { %"class.absl::optional_internal::optional_data_dtor_base.2931" }
%"class.absl::optional_internal::optional_data_dtor_base.2931" = type { i8, %union.anon.2932 }
%union.anon.2932 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2921" }
%"class.base::time_internal::TimeBase.2921" = type { i64 }
%"class.absl::optional.2973" = type { %"class.absl::optional_internal::optional_data.2974" }
%"class.absl::optional_internal::optional_data.2974" = type { %"class.absl::optional_internal::optional_data_base.2975" }
%"class.absl::optional_internal::optional_data_base.2975" = type { %"class.absl::optional_internal::optional_data_dtor_base.2976" }
%"class.absl::optional_internal::optional_data_dtor_base.2976" = type { i8, %union.anon.2977 }
%union.anon.2977 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote.3131" = type { %"class.mojo::internal::InterfacePtrState.3132" }
%"class.mojo::internal::InterfacePtrState.3132" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3133" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1038, %"class.std::__1::unique_ptr.1147", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1040, i32 }>
%class.scoped_refptr.1038 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1040, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1113", %"class.absl::optional.1118", %"class.absl::optional.1073", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1138", i8, [7 x i8], %class.scoped_refptr.1040, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1039" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1040, %"class.std::__1::unique_ptr.1054", %"class.absl::optional.1063", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1073", %"class.std::__1::unique_ptr.1078", i8, i64, %class.scoped_refptr.1109, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1111", %"class.base::WeakPtrFactory.1112" }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1040, i8, %"class.mojo::ScopedHandleBase.1057", %class.scoped_refptr.1058, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.1059" }
%"class.mojo::ScopedHandleBase.1057" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1058 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1059" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1063" = type { %"class.absl::optional_internal::optional_data.1064" }
%"class.absl::optional_internal::optional_data.1064" = type { %"class.absl::optional_internal::optional_data_base.1065" }
%"class.absl::optional_internal::optional_data_base.1065" = type { %"class.absl::optional_internal::optional_data_dtor_base.1066" }
%"class.absl::optional_internal::optional_data_dtor_base.1066" = type { i8, %union.anon.1067 }
%union.anon.1067 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1068", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1068" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1081", i8, i64, %class.scoped_refptr.1082, %class.scoped_refptr.1104 }
%"class.base::RepeatingCallback.1081" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1082 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1083", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.1093", i8, [7 x i8] }>
%"class.base::RefCounted.1083" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1084 }
%class.scoped_refptr.1084 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1085", %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1093" = type { %"class.std::__1::__tree.1094" }
%"class.std::__1::__tree.1094" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1095", %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.1104 = type { %"class.base::RefCountedData.1105"* }
%"class.base::RefCountedData.1105" = type opaque
%class.scoped_refptr.1109 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.1111" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1112" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1113" = type { %"class.absl::optional_internal::optional_data.1114" }
%"class.absl::optional_internal::optional_data.1114" = type { %"class.absl::optional_internal::optional_data_base.1115" }
%"class.absl::optional_internal::optional_data_base.1115" = type { %"class.absl::optional_internal::optional_data_dtor_base.1116" }
%"class.absl::optional_internal::optional_data_dtor_base.1116" = type { i8, %union.anon.1117 }
%union.anon.1117 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1118" = type { %"class.absl::optional_internal::optional_data.1119" }
%"class.absl::optional_internal::optional_data.1119" = type { %"class.absl::optional_internal::optional_data_base.1120" }
%"class.absl::optional_internal::optional_data_base.1120" = type { %"class.absl::optional_internal::optional_data_dtor_base.1121" }
%"class.absl::optional_internal::optional_data_dtor_base.1121" = type { i8, [7 x i8], %union.anon.1122 }
%union.anon.1122 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1073" = type { %"class.absl::optional_internal::optional_data.1074" }
%"class.absl::optional_internal::optional_data.1074" = type { %"class.absl::optional_internal::optional_data_base.1075" }
%"class.absl::optional_internal::optional_data_base.1075" = type { %"class.absl::optional_internal::optional_data_dtor_base.1076" }
%"class.absl::optional_internal::optional_data_dtor_base.1076" = type { i8, %union.anon.1077 }
%union.anon.1077 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1123 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1123 = type { %"class.std::__1::map.1126" }
%"class.std::__1::map.1126" = type { %"class.std::__1::__tree.1127" }
%"class.std::__1::__tree.1127" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1128", %"class.std::__1::__compressed_pair.1132" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1137"*, i64 }
%"class.std::__1::unique_ptr.1137" = type opaque
%"class.std::__1::map.1138" = type { %"class.std::__1::__tree.1139" }
%"class.std::__1::__tree.1139" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1140", %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.3133" = type { %"class.std::__1::__compressed_pair.3134" }
%"class.std::__1::__compressed_pair.3134" = type { %"struct.std::__1::__compressed_pair_elem.3135" }
%"struct.std::__1::__compressed_pair_elem.3135" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%class.scoped_refptr.1228 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.1152", %"class.absl::optional.1152", %"class.absl::optional.1152", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.3139", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.2212" }
%"class.WTF::Vector.3139" = type { %"class.WTF::VectorBuffer.3140" }
%"class.WTF::VectorBuffer.3140" = type { %"class.WTF::VectorBufferBase.3141" }
%"class.WTF::VectorBufferBase.3141" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.3144" = type { %"class.blink::MemberBase.3145" }
%"class.blink::MemberBase.3145" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2998" = type { %"class.std::__1::__compressed_pair.2999" }
%"class.std::__1::__compressed_pair.2999" = type { %"struct.std::__1::__compressed_pair_elem.3000" }
%"struct.std::__1::__compressed_pair_elem.3000" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map.2158", %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.1267" }
%"class.base::internal::flat_tree.1267" = type { %"class.std::__1::vector.1268" }
%"class.std::__1::vector.1268" = type { %"class.std::__1::__vector_base.1269" }
%"class.std::__1::__vector_base.1269" = type { %"struct.std::__1::pair.1270"*, %"struct.std::__1::pair.1270"*, %"class.std::__1::__compressed_pair.1271" }
%"struct.std::__1::pair.1270" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem.1272" }
%"struct.std::__1::__compressed_pair_elem.1272" = type { %"struct.std::__1::pair.1270"* }
%"class.WTF::Vector.3146" = type { %"class.WTF::VectorBuffer.3147" }
%"class.WTF::VectorBuffer.3147" = type { %"class.WTF::VectorBufferBase.3148" }
%"class.WTF::VectorBufferBase.3148" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.3151 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.3152", i64, %"class.WTF::Vector.3154", %"class.WTF::Vector.3159" }
%"class.WTF::RefCounted.3152" = type { %"class.base::RefCounted.3153" }
%"class.base::RefCounted.3153" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3154" = type { %"class.WTF::VectorBuffer.3155" }
%"class.WTF::VectorBuffer.3155" = type { %"class.WTF::VectorBufferBase.3156" }
%"class.WTF::VectorBufferBase.3156" = type { i8*, i32, i32 }
%"class.WTF::Vector.3159" = type { %"class.WTF::VectorBuffer.3160" }
%"class.WTF::VectorBuffer.3160" = type { %"class.WTF::VectorBufferBase.3161" }
%"class.WTF::VectorBufferBase.3161" = type { %"class.std::__1::unique_ptr.3162"*, i32, i32 }
%"class.std::__1::unique_ptr.3162" = type opaque
%class.scoped_refptr.3165 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.3166" = type { %"class.blink::MemberBase.3167" }
%"class.blink::MemberBase.3167" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.3170", %"class.std::__1::unique_ptr.3175", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.3170" = type { %"class.WTF::HashTable.3171" }
%"class.WTF::HashTable.3171" = type <{ %"struct.WTF::KeyValuePair.3174"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3174" = type { %"class.WTF::Vector.4777", %class.scoped_refptr.4781 }
%"class.WTF::Vector.4777" = type { %"class.WTF::VectorBuffer.4778" }
%"class.WTF::VectorBuffer.4778" = type { %"class.WTF::VectorBufferBase.4246", [32 x i8] }
%"class.WTF::VectorBufferBase.4246" = type { i8*, i32, i32 }
%class.scoped_refptr.4781 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.4782", %"class.WTF::Vector.4784", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.4782" = type { %"class.base::RefCounted.4783" }
%"class.base::RefCounted.4783" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.4784" = type { %"class.WTF::VectorBuffer.4785" }
%"class.WTF::VectorBuffer.4785" = type { %"class.WTF::VectorBufferBase.4246" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.4788", i64, %"class.absl::optional.4793" }
%"class.std::__1::unique_ptr.4788" = type { %"class.std::__1::__compressed_pair.4789" }
%"class.std::__1::__compressed_pair.4789" = type { %"struct.std::__1::__compressed_pair_elem.1400" }
%"class.absl::optional.4793" = type { %"class.absl::optional_internal::optional_data.4794" }
%"class.absl::optional_internal::optional_data.4794" = type { %"class.absl::optional_internal::optional_data_base.4795" }
%"class.absl::optional_internal::optional_data_base.4795" = type { %"class.absl::optional_internal::optional_data_dtor_base.4796" }
%"class.absl::optional_internal::optional_data_dtor_base.4796" = type { i8, %union.anon.4797 }
%union.anon.4797 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.4798", %"class.std::__1::unique_ptr.4799" }
%"class.mojo::ScopedHandleBase.4798" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.4799" = type { %"class.std::__1::__compressed_pair.4800" }
%"class.std::__1::__compressed_pair.4800" = type { %"struct.std::__1::__compressed_pair_elem.4801" }
%"struct.std::__1::__compressed_pair_elem.4801" = type { i8* }
%"class.std::__1::unique_ptr.3175" = type { %"class.std::__1::__compressed_pair.3176" }
%"class.std::__1::__compressed_pair.3176" = type { %"struct.std::__1::__compressed_pair_elem.3177" }
%"struct.std::__1::__compressed_pair_elem.3177" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.blink::Member.3181" = type { %"class.blink::MemberBase.3182" }
%"class.blink::MemberBase.3182" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.3187" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.3183", %"class.std::__1::bitset.3183", %"class.std::__1::bitset.3185" }
%"class.std::__1::bitset.3183" = type { %"class.std::__1::__bitset.3184" }
%"class.std::__1::__bitset.3184" = type { [11 x i64] }
%"class.std::__1::bitset.3185" = type { %"class.std::__1::__bitset.3186" }
%"class.std::__1::__bitset.3186" = type { [2 x i64] }
%"class.blink::HeapHashSet.3187" = type { %"class.WTF::HashSet.3190" }
%"class.WTF::HashSet.3190" = type { %"class.WTF::HashTable.3191" }
%"class.WTF::HashTable.3191" = type <{ %"class.blink::Member.3193"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3193" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.3194" = type { %"class.WTF::VectorBuffer.3195" }
%"class.WTF::VectorBuffer.3195" = type { %"class.WTF::VectorBufferBase.3196" }
%"class.WTF::VectorBufferBase.3196" = type { i32*, i32, i32 }
%"class.blink::WebVector.3111" = type { %"class.std::__1::vector.3112" }
%"class.std::__1::vector.3112" = type { %"class.std::__1::__vector_base.3113" }
%"class.std::__1::__vector_base.3113" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.3114" }
%"class.std::__1::__compressed_pair.3114" = type { %"struct.std::__1::__compressed_pair_elem.3115" }
%"struct.std::__1::__compressed_pair_elem.3115" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.3199" = type { %"class.mojo::internal::InterfacePtrState.3200" }
%"class.mojo::internal::InterfacePtrState.3200" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3201" }
%"class.std::__1::unique_ptr.3201" = type { %"class.std::__1::__compressed_pair.3202" }
%"class.std::__1::__compressed_pair.3202" = type { %"struct.std::__1::__compressed_pair_elem.3203" }
%"struct.std::__1::__compressed_pair_elem.3203" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2214" = type { %"class.std::__1::__compressed_pair.2215" }
%"class.std::__1::__compressed_pair.2215" = type { %"struct.std::__1::__compressed_pair_elem.2216" }
%"struct.std::__1::__compressed_pair_elem.2216" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2220" = type { %"class.WTF::HashTable.2221" }
%"class.WTF::HashTable.2221" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2224" = type { %"class.blink::MemberBase.2225" }
%"class.blink::MemberBase.2225" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2731", %"class.blink::Member.1503", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2736", i8, i32, %"class.blink::Color", %"class.absl::optional.2738", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2743", %"class.blink::Member.2745", %"class.blink::Member.2745", %"class.std::__1::unique_ptr.2748", i32, [4 x i8], %"class.WTF::HashSet.2751", %"class.blink::Member.2758", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2760", %"class.blink::HeapHashSet.2767", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2773", i8, %"class.blink::Member.2779", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2791", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2805", i8, %"class.std::__1::unique_ptr.2811", %"class.std::__1::unique_ptr.2886", %"class.WTF::Vector.2892", i32, %class.scoped_refptr.2897, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2898", %"class.blink::Member.2900", %"class.blink::Member.2902", %"class.blink::HeapHashSet.2904", %"class.blink::HeapHashSet.2911", %"class.std::__1::unique_ptr.2918", %"class.std::__1::unique_ptr.2925", %"class.WTF::Vector.771" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2731" = type { %"class.WTF::HashTable.2732" }
%"class.WTF::HashTable.2732" = type <{ %class.scoped_refptr.2735*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2735 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2736" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2737", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.778, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.2737" = type { %"class.blink::MemberBase.2225" }
%"class.absl::optional.2738" = type { %"class.absl::optional_internal::optional_data.2739" }
%"class.absl::optional_internal::optional_data.2739" = type { %"class.absl::optional_internal::optional_data_base.2740" }
%"class.absl::optional_internal::optional_data_base.2740" = type { %"class.absl::optional_internal::optional_data_dtor_base.2741" }
%"class.absl::optional_internal::optional_data_dtor_base.2741" = type { i8, %union.anon.2742 }
%union.anon.2742 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2743" = type { %"class.blink::MemberBase.2744" }
%"class.blink::MemberBase.2744" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2745" = type { %"class.blink::MemberBase.2746" }
%"class.blink::MemberBase.2746" = type { %"class.blink::HeapHashSet.2747"* }
%"class.blink::HeapHashSet.2747" = type opaque
%"class.std::__1::unique_ptr.2748" = type { %"class.std::__1::__compressed_pair.2749" }
%"class.std::__1::__compressed_pair.2749" = type { %"struct.std::__1::__compressed_pair_elem.2750" }
%"struct.std::__1::__compressed_pair_elem.2750" = type { %"class.WTF::HashSet.2751"* }
%"class.WTF::HashSet.2751" = type { %"class.WTF::HashTable.2752" }
%"class.WTF::HashTable.2752" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2758" = type { %"class.blink::MemberBase.2759" }
%"class.blink::MemberBase.2759" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2760" = type { %"class.WTF::HashSet.2763" }
%"class.WTF::HashSet.2763" = type { %"class.WTF::HashTable.2764" }
%"class.WTF::HashTable.2764" = type <{ %"class.blink::Member.2766"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2766" = type opaque
%"class.blink::HeapHashSet.2767" = type { %"class.WTF::HashSet.2770" }
%"class.WTF::HashSet.2770" = type { %"class.WTF::HashTable.2771" }
%"class.WTF::HashTable.2771" = type <{ %"class.blink::Member.782"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.784", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.994", { i64, i64 } }
%"class.blink::WeakMember.994" = type { %"class.blink::MemberBase.783" }
%"class.std::__1::unique_ptr.2773" = type { %"class.std::__1::__compressed_pair.2774" }
%"class.std::__1::__compressed_pair.2774" = type { %"struct.std::__1::__compressed_pair_elem.2775" }
%"struct.std::__1::__compressed_pair_elem.2775" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type { i32, [21 x i32] }
%"class.blink::Member.2779" = type { %"class.blink::MemberBase.2780" }
%"class.blink::MemberBase.2780" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2783", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2783" = type { %"class.WTF::HashTable.2784" }
%"class.WTF::HashTable.2784" = type <{ %"struct.WTF::KeyValuePair.2786"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2786" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2787", i32, i32 }
%"class.WTF::Vector.2787" = type { %"class.WTF::VectorBuffer.2788" }
%"class.WTF::VectorBuffer.2788" = type { %"class.WTF::VectorBufferBase.2789" }
%"class.WTF::VectorBufferBase.2789" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2791" = type { %"class.WTF::LinkedHashSet.2794" }
%"class.WTF::LinkedHashSet.2794" = type { %"class.WTF::HashMap.2795", %"class.WTF::VectorBackedLinkedList.2799" }
%"class.WTF::HashMap.2795" = type { %"class.WTF::HashTable.2796" }
%"class.WTF::HashTable.2796" = type <{ %"struct.WTF::KeyValuePair.2798"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2798" = type opaque
%"class.WTF::VectorBackedLinkedList.2799" = type { %"class.WTF::Vector.2800", i32, i32 }
%"class.WTF::Vector.2800" = type { %"class.WTF::VectorBuffer.2801" }
%"class.WTF::VectorBuffer.2801" = type { %"class.WTF::VectorBufferBase.2802" }
%"class.WTF::VectorBufferBase.2802" = type { %"class.WTF::VectorBackedLinkedListNode.2803"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2803" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2805" = type { %"class.std::__1::__compressed_pair.2806" }
%"class.std::__1::__compressed_pair.2806" = type { %"struct.std::__1::__compressed_pair_elem.2807" }
%"struct.std::__1::__compressed_pair_elem.2807" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2811" = type { %"class.std::__1::__compressed_pair.2812" }
%"class.std::__1::__compressed_pair.2812" = type { %"struct.std::__1::__compressed_pair_elem.2813" }
%"struct.std::__1::__compressed_pair_elem.2813" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2814, %class.scoped_refptr.2814, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2863", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2868", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2814 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2815", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2822" }
%"class.WTF::RefCounted.2815" = type { %"class.base::RefCounted.2816" }
%"class.base::RefCounted.2816" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2817", i32, [4 x i8] }>
%"class.WTF::Vector.2817" = type { %"class.WTF::VectorBuffer.2818" }
%"class.WTF::VectorBuffer.2818" = type { %"class.WTF::VectorBufferBase.2819" }
%"class.WTF::VectorBufferBase.2819" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2822" = type { %"class.WTF::VectorBuffer.2823" }
%"class.WTF::VectorBuffer.2823" = type { %"class.WTF::VectorBufferBase.2824" }
%"class.WTF::VectorBufferBase.2824" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2825", %"class.std::__1::unique_ptr.2836", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.866, %class.scoped_refptr.908, %class.scoped_refptr.907 }
%"class.std::__1::unique_ptr.2825" = type { %"class.std::__1::__compressed_pair.2826" }
%"class.std::__1::__compressed_pair.2826" = type { %"struct.std::__1::__compressed_pair_elem.2827" }
%"struct.std::__1::__compressed_pair_elem.2827" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2828", %"class.WTF::Vector.804", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2828" = type { %"class.WTF::VectorBuffer.2829" }
%"class.WTF::VectorBuffer.2829" = type { %"class.WTF::VectorBufferBase.2830" }
%"class.WTF::VectorBufferBase.2830" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.804" = type { %"class.WTF::VectorBuffer.805" }
%"class.WTF::VectorBuffer.805" = type { %"class.WTF::VectorBufferBase.806" }
%"class.WTF::VectorBufferBase.806" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2836" = type { %"class.std::__1::__compressed_pair.2837" }
%"class.std::__1::__compressed_pair.2837" = type { %"struct.std::__1::__compressed_pair_elem.2838" }
%"struct.std::__1::__compressed_pair_elem.2838" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2839", %"class.absl::optional.2839" }
%"class.absl::optional.2839" = type { %"class.absl::optional_internal::optional_data.2840" }
%"class.absl::optional_internal::optional_data.2840" = type { %"class.absl::optional_internal::optional_data_base.2841" }
%"class.absl::optional_internal::optional_data_base.2841" = type { %"class.absl::optional_internal::optional_data_dtor_base.2842" }
%"class.absl::optional_internal::optional_data_dtor_base.2842" = type { i8, [3 x i8], %union.anon.2843 }
%union.anon.2843 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2822"*, %"class.absl::optional.2849", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2849" = type { %"class.absl::optional_internal::optional_data.2850" }
%"class.absl::optional_internal::optional_data.2850" = type { %"class.absl::optional_internal::optional_data_base.2851" }
%"class.absl::optional_internal::optional_data_base.2851" = type { %"class.absl::optional_internal::optional_data_dtor_base.2852" }
%"class.absl::optional_internal::optional_data_dtor_base.2852" = type { i8, %union.anon.2853 }
%union.anon.2853 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2854", %"class.WTF::Vector.2858" }
%"class.WTF::Vector.2854" = type { %"class.WTF::VectorBuffer.2855" }
%"class.WTF::VectorBuffer.2855" = type { %"class.WTF::VectorBufferBase.2642", [128 x i8] }
%"class.WTF::VectorBufferBase.2642" = type { i32*, i32, i32 }
%"class.WTF::Vector.2858" = type { %"class.WTF::VectorBuffer.2859" }
%"class.WTF::VectorBuffer.2859" = type { %"class.WTF::VectorBufferBase.2860", [128 x i8] }
%"class.WTF::VectorBufferBase.2860" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2863" = type { %"class.WTF::VectorBuffer.2864" }
%"class.WTF::VectorBuffer.2864" = type { %"class.WTF::VectorBufferBase.2865" }
%"class.WTF::VectorBufferBase.2865" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2868" = type { %"class.WTF::HashTable.2869" }
%"class.WTF::HashTable.2869" = type <{ %"struct.WTF::KeyValuePair.2872"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2872" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2873", %"class.WTF::Vector.2878" }
%"class.WTF::HashMap.2873" = type { %"class.WTF::HashTable.2874" }
%"class.WTF::HashTable.2874" = type <{ %"struct.WTF::KeyValuePair.2877"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2877" = type opaque
%"class.WTF::Vector.2878" = type { %"class.WTF::VectorBuffer.2879" }
%"class.WTF::VectorBuffer.2879" = type { %"class.WTF::VectorBufferBase.2880" }
%"class.WTF::VectorBufferBase.2880" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2886" = type { %"class.std::__1::__compressed_pair.2887" }
%"class.std::__1::__compressed_pair.2887" = type { %"struct.std::__1::__compressed_pair_elem.2888" }
%"struct.std::__1::__compressed_pair_elem.2888" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2892" = type { %"class.WTF::VectorBuffer.2893" }
%"class.WTF::VectorBuffer.2893" = type { %"class.WTF::VectorBufferBase.2894" }
%"class.WTF::VectorBufferBase.2894" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2897 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2898" = type { %"class.blink::MemberBase.2899" }
%"class.blink::MemberBase.2899" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2900" = type { %"class.blink::MemberBase.2901" }
%"class.blink::MemberBase.2901" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2902" = type { %"class.blink::MemberBase.2903" }
%"class.blink::MemberBase.2903" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2904" = type { %"class.WTF::HashSet.2907" }
%"class.WTF::HashSet.2907" = type { %"class.WTF::HashTable.2908" }
%"class.WTF::HashTable.2908" = type <{ %"class.blink::WeakMember.2910"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2910" = type opaque
%"class.blink::HeapHashSet.2911" = type { %"class.WTF::HashSet.2914" }
%"class.WTF::HashSet.2914" = type { %"class.WTF::HashTable.2915" }
%"class.WTF::HashTable.2915" = type <{ %"class.blink::WeakMember.2917"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2917" = type opaque
%"class.std::__1::unique_ptr.2918" = type { %"class.std::__1::__compressed_pair.2919" }
%"class.std::__1::__compressed_pair.2919" = type { %"struct.std::__1::__compressed_pair_elem.2920" }
%"struct.std::__1::__compressed_pair_elem.2920" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2925" = type { %"class.std::__1::__compressed_pair.2926" }
%"class.std::__1::__compressed_pair.2926" = type { %"struct.std::__1::__compressed_pair_elem.2927" }
%"struct.std::__1::__compressed_pair_elem.2927" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2928", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.2226" = type { %"class.blink::MemberBase.2227" }
%"class.blink::MemberBase.2227" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2228" = type { %"class.blink::MemberBase.2229" }
%"class.blink::MemberBase.2229" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1503", %"class.blink::Member.3235", %"class.blink::Member.3237", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.3239", %"class.blink::Member.3245" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1586" }
%"class.blink::WeakMember.1586" = type { %"class.blink::MemberBase.327" }
%"class.blink::Member.3235" = type { %"class.blink::MemberBase.3236" }
%"class.blink::MemberBase.3236" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.3237" = type { %"class.blink::MemberBase.3238" }
%"class.blink::MemberBase.3238" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.3239" = type { %"class.std::__1::__compressed_pair.3240" }
%"class.std::__1::__compressed_pair.3240" = type { %"struct.std::__1::__compressed_pair_elem.3241" }
%"struct.std::__1::__compressed_pair_elem.3241" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.3245" = type { %"class.blink::MemberBase.3246" }
%"class.blink::MemberBase.3246" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2230" = type { %"class.blink::MemberBase.2231" }
%"class.blink::MemberBase.2231" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type { %"class.blink::Member.1503", %"class.blink::Member.2626", %"class.blink::HeapTaskRunnerTimer.2628", %"class.blink::HeapTaskRunnerTimer.2628", %"class.blink::Member.343", %"class.blink::Member.343", i8, %"class.blink::Member.1503", %"class.blink::Member.782", %"class.blink::Member.318", i8, %"class.blink::Member.2630", %"class.blink::Member.2632", %"class.blink::Member.2634", %"class.blink::Member.2655", %"class.blink::Member.2659", %"class.blink::Member.2663", %"class.blink::Member.2667", %"class.blink::Member.2720", double, %"class.blink::HeapTaskRunnerTimer.2628", %"class.absl::optional.2722", %"class.blink::Member.343", i8, %"struct.blink::TouchAdjustmentResult" }
%"class.blink::Member.2626" = type { %"class.blink::MemberBase.2627" }
%"class.blink::MemberBase.2627" = type { %"class.blink::SelectionController"* }
%"class.blink::SelectionController" = type opaque
%"class.blink::Member.2630" = type { %"class.blink::MemberBase.2631" }
%"class.blink::MemberBase.2631" = type { %"class.blink::HTMLFrameSetElement"* }
%"class.blink::HTMLFrameSetElement" = type opaque
%"class.blink::Member.2632" = type { %"class.blink::MemberBase.2633" }
%"class.blink::MemberBase.2633" = type { %"class.blink::EventHandlerRegistry"* }
%"class.blink::EventHandlerRegistry" = type opaque
%"class.blink::Member.2634" = type { %"class.blink::MemberBase.2635" }
%"class.blink::MemberBase.2635" = type { %"class.blink::ScrollManager"* }
%"class.blink::ScrollManager" = type { %"class.cc::SnapFlingClient", %"class.blink::Member.1503", %"class.WTF::Deque.2638", %"class.blink::Member.318", i8, %"class.blink::Member.318", %"class.blink::FloatSize", i8, i8, i8, %"class.blink::Member.782", %"class.blink::Member.780", %"class.std::__1::unique_ptr.2643", %"class.blink::LayoutSize" }
%"class.cc::SnapFlingClient" = type { i32 (...)** }
%"class.WTF::Deque.2638" = type { %"class.WTF::Deque<int, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<int, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2641" }
%"class.WTF::VectorBuffer.2641" = type { %"class.WTF::VectorBufferBase.2642" }
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.786", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.814" }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.753", %"class.blink::Persistent.759", %"class.std::__1::unique_ptr.819", %"class.blink::CullRect", %"class.std::__1::unique_ptr.835" }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.759" = type { %"class.blink::PersistentBase.760" }
%"class.blink::PersistentBase.760" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.822", %"class.WTF::Vector.822", %"class.WTF::HashMap.827", %"class.WTF::Vector.822", i8, [7 x i8] }>
%"class.WTF::HashMap.827" = type { %"class.WTF::HashTable.828" }
%"class.WTF::HashTable.828" = type <{ %"struct.WTF::KeyValuePair.831"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.831" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.822" }
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.838", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.844", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.850", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.blink::TransformationMatrix"* }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.850" = type { %"class.blink::PersistentBase.851" }
%"class.blink::PersistentBase.851" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.780", %"class.blink::Member.782", %"class.blink::Member.782", i8, [7 x i8] }>
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.784", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.789", %"class.absl::optional.794", i8, i8, %"class.WTF::Vector.804" }
%"class.WTF::HashMap.789" = type { %"class.WTF::HashTable.790" }
%"class.WTF::HashTable.790" = type <{ %"struct.WTF::KeyValuePair.793"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.793" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.std::__1::unique_ptr.2643" = type { %"class.std::__1::__compressed_pair.2644" }
%"class.std::__1::__compressed_pair.2644" = type { %"struct.std::__1::__compressed_pair_elem.2645" }
%"struct.std::__1::__compressed_pair_elem.2645" = type { %"class.cc::SnapFlingController"* }
%"class.cc::SnapFlingController" = type { %"class.cc::SnapFlingClient"*, i32, %"class.std::__1::unique_ptr.2646" }
%"class.std::__1::unique_ptr.2646" = type { %"class.std::__1::__compressed_pair.2647" }
%"class.std::__1::__compressed_pair.2647" = type { %"struct.std::__1::__compressed_pair_elem.2648" }
%"struct.std::__1::__compressed_pair_elem.2648" = type { %"class.cc::SnapFlingCurve"* }
%"class.cc::SnapFlingCurve" = type opaque
%"class.blink::Member.2655" = type { %"class.blink::MemberBase.2656" }
%"class.blink::MemberBase.2656" = type { %"class.blink::MouseEventManager"* }
%"class.blink::MouseEventManager" = type <{ %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1503", %"class.blink::Member.2634", %"class.blink::Member.343", %"class.blink::FloatPoint", %"class.blink::FloatPoint", i8, [7 x i8], %"class.blink::Member.318", i32, [4 x i8], %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::IntPoint", %"class.base::TimeTicks", %"class.blink::WebMouseEvent", %"struct.blink::PhysicalOffset", i8, [7 x i8] }>
%"class.blink::WebMouseEvent" = type <{ %"class.blink::WebInputEvent", %"class.blink::WebPointerProperties", i32, i32, [4 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.blink::WebPointerProperties" = type { i32, float, i32, i32, float, i32, i32, i32, i32, i32, i8, %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.blink::Member.2659" = type { %"class.blink::MemberBase.2660" }
%"class.blink::MemberBase.2660" = type { %"class.blink::MouseWheelEventManager"* }
%"class.blink::MouseWheelEventManager" = type { %"class.blink::Member.1503", %"class.blink::Member.318", %"class.blink::Member.2634" }
%"class.blink::Member.2663" = type { %"class.blink::MemberBase.2664" }
%"class.blink::MemberBase.2664" = type { %"class.blink::KeyboardEventManager"* }
%"class.blink::KeyboardEventManager" = type { %"class.blink::Member.1503", %"class.blink::Member.2634" }
%"class.blink::Member.2667" = type { %"class.blink::MemberBase.2668" }
%"class.blink::MemberBase.2668" = type { %"class.blink::PointerEventManager"* }
%"class.blink::PointerEventManager" = type { %"class.blink::Member.1503", [5 x i8], i8, %"class.WTF::Deque.2671", %"class.blink::HeapHashMap.2675", %"class.blink::HeapHashMap.2682", %"class.blink::HeapHashMap.2682", %"class.blink::PointerEventFactory", %"class.blink::Member.2704", %"class.blink::Member.2655", i32, i8, i8, %"class.blink::Member.2720" }
%"class.WTF::Deque.2671" = type { %"class.WTF::Deque<unsigned int, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<unsigned int, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2674" }
%"class.WTF::VectorBuffer.2674" = type { %"class.WTF::VectorBufferBase.1689" }
%"class.WTF::VectorBufferBase.1689" = type { i32*, i32, i32 }
%"class.blink::HeapHashMap.2675" = type { %"class.WTF::HashMap.2678" }
%"class.WTF::HashMap.2678" = type { %"class.WTF::HashTable.2679" }
%"class.WTF::HashTable.2679" = type <{ %"struct.WTF::KeyValuePair.2681"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2681" = type opaque
%"class.blink::HeapHashMap.2682" = type { %"class.WTF::HashMap.2685" }
%"class.WTF::HashMap.2685" = type { %"class.WTF::HashTable.2686" }
%"class.WTF::HashTable.2686" = type <{ %"struct.WTF::KeyValuePair.2688"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2688" = type opaque
%"class.blink::PointerEventFactory" = type { i32, [4 x i8], %"class.WTF::HashMap.2689", %"class.WTF::HashMap.2694", [5 x i32], [5 x i32], %"class.WTF::HashMap.2699", %"class.WTF::HashMap.2699" }
%"class.WTF::HashMap.2689" = type { %"class.WTF::HashTable.2690" }
%"class.WTF::HashTable.2690" = type <{ %"struct.WTF::KeyValuePair.2693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2693" = type opaque
%"class.WTF::HashMap.2694" = type { %"class.WTF::HashTable.2695" }
%"class.WTF::HashTable.2695" = type <{ %"struct.WTF::KeyValuePair.2698"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2698" = type opaque
%"class.WTF::HashMap.2699" = type { %"class.WTF::HashTable.2700" }
%"class.WTF::HashTable.2700" = type <{ %"struct.WTF::KeyValuePair.2703"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2703" = type opaque
%"class.blink::Member.2704" = type { %"class.blink::MemberBase.2705" }
%"class.blink::MemberBase.2705" = type { %"class.blink::TouchEventManager"* }
%"class.blink::TouchEventManager" = type { %"class.blink::Member.1503", %"class.blink::HeapHashMap.2708", %"class.blink::Member.326", i8, %"class.blink::WebTouchEvent", i32, i8, %"class.absl::optional.2715" }
%"class.blink::HeapHashMap.2708" = type { %"class.WTF::HashMap.2711" }
%"class.WTF::HashMap.2711" = type { %"class.WTF::HashTable.2712" }
%"class.WTF::HashTable.2712" = type <{ %"struct.WTF::KeyValuePair.2714"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2714" = type opaque
%"class.blink::WebTouchEvent" = type { %"class.blink::WebInputEvent", i32, [16 x %"class.blink::WebTouchPoint"], i32, i8, i8, i8, i32 }
%"class.blink::WebTouchPoint" = type { %"class.blink::WebPointerProperties", i32, float, float, float }
%"class.absl::optional.2715" = type { %"class.absl::optional_internal::optional_data.2716" }
%"class.absl::optional_internal::optional_data.2716" = type { %"class.absl::optional_internal::optional_data_base.2717" }
%"class.absl::optional_internal::optional_data_base.2717" = type { %"class.absl::optional_internal::optional_data_dtor_base.2718" }
%"class.absl::optional_internal::optional_data_dtor_base.2718" = type { i8, %union.anon.2719 }
%union.anon.2719 = type { i32 }
%"class.blink::Member.2720" = type { %"class.blink::MemberBase.2721" }
%"class.blink::MemberBase.2721" = type { %"class.blink::GestureManager"* }
%"class.blink::GestureManager" = type { %"class.blink::Member.1503", %"class.blink::Member.2634", %"class.blink::Member.2655", %"class.blink::Member.2667", i8, i8, %"class.gfx::PointF", i32, %"class.blink::Member.2626" }
%"class.blink::HeapTaskRunnerTimer.2628" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2629", { i64, i64 } }
%"class.blink::WeakMember.2629" = type { %"class.blink::MemberBase.2231" }
%"class.absl::optional.2722" = type { %"class.absl::optional_internal::optional_data.2723" }
%"class.absl::optional_internal::optional_data.2723" = type { %"class.absl::optional_internal::optional_data_base.2724" }
%"class.absl::optional_internal::optional_data_base.2724" = type { %"class.absl::optional_internal::optional_data_dtor_base.2725" }
%"class.absl::optional_internal::optional_data_dtor_base.2725" = type { i8, %union.anon.2726 }
%union.anon.2726 = type { %"class.base::TimeTicks" }
%"struct.blink::TouchAdjustmentResult" = type { i32, %"class.blink::FloatPoint" }
%"class.blink::Member.2232" = type { %"class.blink::MemberBase.2233" }
%"class.blink::MemberBase.2233" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2234" = type { %"class.blink::MemberBase.2235" }
%"class.blink::MemberBase.2235" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2238", %"class.blink::HeapListHashSet.2249", %"class.blink::HeapListHashSet.2260", %"class.blink::HeapListHashSet.2271", %"class.blink::HeapListHashSet.2282", %"class.blink::HeapListHashSet.2293", %"class.blink::HeapListHashSet.2304", %"class.blink::HeapListHashSet.2315", %"class.blink::HeapListHashSet.2326", %"class.blink::HeapListHashSet.2337", %"class.blink::HeapListHashSet.2348", %"class.blink::HeapListHashSet.2359", %"class.blink::HeapListHashSet.2370", %"class.blink::HeapListHashSet.2381", %"class.blink::HeapListHashSet.2392", %"class.blink::HeapListHashSet.2403", %"class.blink::HeapListHashSet.2414", %"class.blink::HeapListHashSet.2425", %"class.blink::HeapListHashSet.2436", %"class.blink::HeapListHashSet.2447" }
%"class.blink::HeapListHashSet.2238" = type { %"class.WTF::ListHashSet.base.2248", [7 x i8] }
%"class.WTF::ListHashSet.base.2248" = type <{ %"class.WTF::HashTable.2243", %"class.blink::Member.2245", %"class.blink::Member.2245", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2243" = type <{ %"class.blink::Member.2245"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2245" = type { %"class.blink::MemberBase.2246" }
%"class.blink::MemberBase.2246" = type { %"class.blink::HeapListHashSetNode.2247"* }
%"class.blink::HeapListHashSetNode.2247" = type { %"class.blink::Member.2461", %"class.blink::Member.2245", %"class.blink::Member.2245" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.2249" = type { %"class.WTF::ListHashSet.base.2259", [7 x i8] }
%"class.WTF::ListHashSet.base.2259" = type <{ %"class.WTF::HashTable.2254", %"class.blink::Member.2256", %"class.blink::Member.2256", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2254" = type <{ %"class.blink::Member.2256"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2256" = type { %"class.blink::MemberBase.2257" }
%"class.blink::MemberBase.2257" = type { %"class.blink::HeapListHashSetNode.2258"* }
%"class.blink::HeapListHashSetNode.2258" = type { %"class.blink::Member.2620", %"class.blink::Member.2256", %"class.blink::Member.2256" }
%"class.blink::Member.2620" = type { %"class.blink::MemberBase.2621" }
%"class.blink::MemberBase.2621" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2260" = type { %"class.WTF::ListHashSet.base.2270", [7 x i8] }
%"class.WTF::ListHashSet.base.2270" = type <{ %"class.WTF::HashTable.2265", %"class.blink::Member.2267", %"class.blink::Member.2267", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2265" = type <{ %"class.blink::Member.2267"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2267" = type { %"class.blink::MemberBase.2268" }
%"class.blink::MemberBase.2268" = type { %"class.blink::HeapListHashSetNode.2269"* }
%"class.blink::HeapListHashSetNode.2269" = type { %"class.blink::Member.2616", %"class.blink::Member.2267", %"class.blink::Member.2267" }
%"class.blink::Member.2616" = type { %"class.blink::MemberBase.2617" }
%"class.blink::MemberBase.2617" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2271" = type { %"class.WTF::ListHashSet.base.2281", [7 x i8] }
%"class.WTF::ListHashSet.base.2281" = type <{ %"class.WTF::HashTable.2276", %"class.blink::Member.2278", %"class.blink::Member.2278", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2276" = type <{ %"class.blink::Member.2278"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2278" = type { %"class.blink::MemberBase.2279" }
%"class.blink::MemberBase.2279" = type { %"class.blink::HeapListHashSetNode.2280"* }
%"class.blink::HeapListHashSetNode.2280" = type { %"class.blink::Member.2612", %"class.blink::Member.2278", %"class.blink::Member.2278" }
%"class.blink::Member.2612" = type { %"class.blink::MemberBase.2613" }
%"class.blink::MemberBase.2613" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2282" = type { %"class.WTF::ListHashSet.base.2292", [7 x i8] }
%"class.WTF::ListHashSet.base.2292" = type <{ %"class.WTF::HashTable.2287", %"class.blink::Member.2289", %"class.blink::Member.2289", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2287" = type <{ %"class.blink::Member.2289"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2289" = type { %"class.blink::MemberBase.2290" }
%"class.blink::MemberBase.2290" = type { %"class.blink::HeapListHashSetNode.2291"* }
%"class.blink::HeapListHashSetNode.2291" = type { %"class.blink::Member.2608", %"class.blink::Member.2289", %"class.blink::Member.2289" }
%"class.blink::Member.2608" = type { %"class.blink::MemberBase.2609" }
%"class.blink::MemberBase.2609" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2293" = type { %"class.WTF::ListHashSet.base.2303", [7 x i8] }
%"class.WTF::ListHashSet.base.2303" = type <{ %"class.WTF::HashTable.2298", %"class.blink::Member.2300", %"class.blink::Member.2300", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2298" = type <{ %"class.blink::Member.2300"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2300" = type { %"class.blink::MemberBase.2301" }
%"class.blink::MemberBase.2301" = type { %"class.blink::HeapListHashSetNode.2302"* }
%"class.blink::HeapListHashSetNode.2302" = type { %"class.blink::Member.2604", %"class.blink::Member.2300", %"class.blink::Member.2300" }
%"class.blink::Member.2604" = type { %"class.blink::MemberBase.2605" }
%"class.blink::MemberBase.2605" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2304" = type { %"class.WTF::ListHashSet.base.2314", [7 x i8] }
%"class.WTF::ListHashSet.base.2314" = type <{ %"class.WTF::HashTable.2309", %"class.blink::Member.2311", %"class.blink::Member.2311", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2309" = type <{ %"class.blink::Member.2311"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2311" = type { %"class.blink::MemberBase.2312" }
%"class.blink::MemberBase.2312" = type { %"class.blink::HeapListHashSetNode.2313"* }
%"class.blink::HeapListHashSetNode.2313" = type { %"class.blink::Member.2600", %"class.blink::Member.2311", %"class.blink::Member.2311" }
%"class.blink::Member.2600" = type { %"class.blink::MemberBase.2601" }
%"class.blink::MemberBase.2601" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2315" = type { %"class.WTF::ListHashSet.base.2325", [7 x i8] }
%"class.WTF::ListHashSet.base.2325" = type <{ %"class.WTF::HashTable.2320", %"class.blink::Member.2322", %"class.blink::Member.2322", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2320" = type <{ %"class.blink::Member.2322"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2322" = type { %"class.blink::MemberBase.2323" }
%"class.blink::MemberBase.2323" = type { %"class.blink::HeapListHashSetNode.2324"* }
%"class.blink::HeapListHashSetNode.2324" = type { %"class.blink::Member.2596", %"class.blink::Member.2322", %"class.blink::Member.2322" }
%"class.blink::Member.2596" = type { %"class.blink::MemberBase.2597" }
%"class.blink::MemberBase.2597" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2326" = type { %"class.WTF::ListHashSet.base.2336", [7 x i8] }
%"class.WTF::ListHashSet.base.2336" = type <{ %"class.WTF::HashTable.2331", %"class.blink::Member.2333", %"class.blink::Member.2333", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2331" = type <{ %"class.blink::Member.2333"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2333" = type { %"class.blink::MemberBase.2334" }
%"class.blink::MemberBase.2334" = type { %"class.blink::HeapListHashSetNode.2335"* }
%"class.blink::HeapListHashSetNode.2335" = type { %"class.blink::Member.2592", %"class.blink::Member.2333", %"class.blink::Member.2333" }
%"class.blink::Member.2592" = type { %"class.blink::MemberBase.2593" }
%"class.blink::MemberBase.2593" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2337" = type { %"class.WTF::ListHashSet.base.2347", [7 x i8] }
%"class.WTF::ListHashSet.base.2347" = type <{ %"class.WTF::HashTable.2342", %"class.blink::Member.2344", %"class.blink::Member.2344", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2342" = type <{ %"class.blink::Member.2344"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2344" = type { %"class.blink::MemberBase.2345" }
%"class.blink::MemberBase.2345" = type { %"class.blink::HeapListHashSetNode.2346"* }
%"class.blink::HeapListHashSetNode.2346" = type { %"class.blink::Member.2588", %"class.blink::Member.2344", %"class.blink::Member.2344" }
%"class.blink::Member.2588" = type { %"class.blink::MemberBase.2589" }
%"class.blink::MemberBase.2589" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2348" = type { %"class.WTF::ListHashSet.base.2358", [7 x i8] }
%"class.WTF::ListHashSet.base.2358" = type <{ %"class.WTF::HashTable.2353", %"class.blink::Member.2355", %"class.blink::Member.2355", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2353" = type <{ %"class.blink::Member.2355"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2355" = type { %"class.blink::MemberBase.2356" }
%"class.blink::MemberBase.2356" = type { %"class.blink::HeapListHashSetNode.2357"* }
%"class.blink::HeapListHashSetNode.2357" = type { %"class.blink::Member.2465", %"class.blink::Member.2355", %"class.blink::Member.2355" }
%"class.blink::HeapListHashSet.2359" = type { %"class.WTF::ListHashSet.base.2369", [7 x i8] }
%"class.WTF::ListHashSet.base.2369" = type <{ %"class.WTF::HashTable.2364", %"class.blink::Member.2366", %"class.blink::Member.2366", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2364" = type <{ %"class.blink::Member.2366"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2366" = type { %"class.blink::MemberBase.2367" }
%"class.blink::MemberBase.2367" = type { %"class.blink::HeapListHashSetNode.2368"* }
%"class.blink::HeapListHashSetNode.2368" = type { %"class.blink::Member.2582", %"class.blink::Member.2366", %"class.blink::Member.2366" }
%"class.blink::Member.2582" = type { %"class.blink::MemberBase.2583" }
%"class.blink::MemberBase.2583" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2370" = type { %"class.WTF::ListHashSet.base.2380", [7 x i8] }
%"class.WTF::ListHashSet.base.2380" = type <{ %"class.WTF::HashTable.2375", %"class.blink::Member.2377", %"class.blink::Member.2377", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2375" = type <{ %"class.blink::Member.2377"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2377" = type { %"class.blink::MemberBase.2378" }
%"class.blink::MemberBase.2378" = type { %"class.blink::HeapListHashSetNode.2379"* }
%"class.blink::HeapListHashSetNode.2379" = type { %"class.blink::Member.2578", %"class.blink::Member.2377", %"class.blink::Member.2377" }
%"class.blink::Member.2578" = type { %"class.blink::MemberBase.2579" }
%"class.blink::MemberBase.2579" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2381" = type { %"class.WTF::ListHashSet.base.2391", [7 x i8] }
%"class.WTF::ListHashSet.base.2391" = type <{ %"class.WTF::HashTable.2386", %"class.blink::Member.2388", %"class.blink::Member.2388", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2386" = type <{ %"class.blink::Member.2388"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2388" = type { %"class.blink::MemberBase.2389" }
%"class.blink::MemberBase.2389" = type { %"class.blink::HeapListHashSetNode.2390"* }
%"class.blink::HeapListHashSetNode.2390" = type { %"class.blink::Member.2574", %"class.blink::Member.2388", %"class.blink::Member.2388" }
%"class.blink::Member.2574" = type { %"class.blink::MemberBase.2575" }
%"class.blink::MemberBase.2575" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2392" = type { %"class.WTF::ListHashSet.base.2402", [7 x i8] }
%"class.WTF::ListHashSet.base.2402" = type <{ %"class.WTF::HashTable.2397", %"class.blink::Member.2399", %"class.blink::Member.2399", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2397" = type <{ %"class.blink::Member.2399"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2399" = type { %"class.blink::MemberBase.2400" }
%"class.blink::MemberBase.2400" = type { %"class.blink::HeapListHashSetNode.2401"* }
%"class.blink::HeapListHashSetNode.2401" = type { %"class.blink::Member.2570", %"class.blink::Member.2399", %"class.blink::Member.2399" }
%"class.blink::Member.2570" = type { %"class.blink::MemberBase.2571" }
%"class.blink::MemberBase.2571" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2403" = type { %"class.WTF::ListHashSet.base.2413", [7 x i8] }
%"class.WTF::ListHashSet.base.2413" = type <{ %"class.WTF::HashTable.2408", %"class.blink::Member.2410", %"class.blink::Member.2410", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2408" = type <{ %"class.blink::Member.2410"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2410" = type { %"class.blink::MemberBase.2411" }
%"class.blink::MemberBase.2411" = type { %"class.blink::HeapListHashSetNode.2412"* }
%"class.blink::HeapListHashSetNode.2412" = type { %"class.blink::Member.2566", %"class.blink::Member.2410", %"class.blink::Member.2410" }
%"class.blink::Member.2566" = type { %"class.blink::MemberBase.2567" }
%"class.blink::MemberBase.2567" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2414" = type { %"class.WTF::ListHashSet.base.2424", [7 x i8] }
%"class.WTF::ListHashSet.base.2424" = type <{ %"class.WTF::HashTable.2419", %"class.blink::Member.2421", %"class.blink::Member.2421", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2419" = type <{ %"class.blink::Member.2421"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2421" = type { %"class.blink::MemberBase.2422" }
%"class.blink::MemberBase.2422" = type { %"class.blink::HeapListHashSetNode.2423"* }
%"class.blink::HeapListHashSetNode.2423" = type { %"class.blink::Member.2562", %"class.blink::Member.2421", %"class.blink::Member.2421" }
%"class.blink::Member.2562" = type { %"class.blink::MemberBase.2563" }
%"class.blink::MemberBase.2563" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2425" = type { %"class.WTF::ListHashSet.base.2435", [7 x i8] }
%"class.WTF::ListHashSet.base.2435" = type <{ %"class.WTF::HashTable.2430", %"class.blink::Member.2432", %"class.blink::Member.2432", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2430" = type <{ %"class.blink::Member.2432"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2432" = type { %"class.blink::MemberBase.2433" }
%"class.blink::MemberBase.2433" = type { %"class.blink::HeapListHashSetNode.2434"* }
%"class.blink::HeapListHashSetNode.2434" = type { %"class.blink::Member.2558", %"class.blink::Member.2432", %"class.blink::Member.2432" }
%"class.blink::Member.2558" = type { %"class.blink::MemberBase.2559" }
%"class.blink::MemberBase.2559" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2436" = type { %"class.WTF::ListHashSet.base.2446", [7 x i8] }
%"class.WTF::ListHashSet.base.2446" = type <{ %"class.WTF::HashTable.2441", %"class.blink::Member.2443", %"class.blink::Member.2443", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2441" = type <{ %"class.blink::Member.2443"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2443" = type { %"class.blink::MemberBase.2444" }
%"class.blink::MemberBase.2444" = type { %"class.blink::HeapListHashSetNode.2445"* }
%"class.blink::HeapListHashSetNode.2445" = type { %"class.blink::Member.2467", %"class.blink::Member.2443", %"class.blink::Member.2443" }
%"class.blink::HeapListHashSet.2447" = type { %"class.WTF::ListHashSet.base.2457", [7 x i8] }
%"class.WTF::ListHashSet.base.2457" = type <{ %"class.WTF::HashTable.2452", %"class.blink::Member.2454", %"class.blink::Member.2454", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2452" = type <{ %"class.blink::Member.2454"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2454" = type { %"class.blink::MemberBase.2455" }
%"class.blink::MemberBase.2455" = type { %"class.blink::HeapListHashSetNode.2456"* }
%"class.blink::HeapListHashSetNode.2456" = type { %"class.blink::Member.2459", %"class.blink::Member.2454", %"class.blink::Member.2454" }
%class.scoped_refptr.2458 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2459" = type { %"class.blink::MemberBase.2460" }
%"class.blink::MemberBase.2460" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2461" = type { %"class.blink::MemberBase.2462" }
%"class.blink::MemberBase.2462" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2463" = type { %"class.blink::MemberBase.2464" }
%"class.blink::MemberBase.2464" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2465" = type { %"class.blink::MemberBase.2466" }
%"class.blink::MemberBase.2466" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2467" = type { %"class.blink::MemberBase.2468" }
%"class.blink::MemberBase.2468" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2471" = type { %"class.blink::MemberBase.2472" }
%"class.blink::MemberBase.2472" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2473" = type { %"class.blink::MemberBase.2474" }
%"class.blink::MemberBase.2474" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.2475" = type { %"class.blink::Member.2476" }
%"class.blink::Member.2476" = type { %"class.blink::MemberBase.2477" }
%"class.blink::MemberBase.2477" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.4714" }
%"class.mojo::Remote.4714" = type { %"class.mojo::internal::InterfacePtrState.4715" }
%"class.mojo::internal::InterfacePtrState.4715" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.4716" }
%"class.std::__1::unique_ptr.4716" = type { %"class.std::__1::__compressed_pair.4717" }
%"class.std::__1::__compressed_pair.4717" = type { %"struct.std::__1::__compressed_pair_elem.4718" }
%"struct.std::__1::__compressed_pair_elem.4718" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2478" = type { %"class.std::__1::__compressed_pair.2479" }
%"class.std::__1::__compressed_pair.2479" = type { %"struct.std::__1::__compressed_pair_elem.2480" }
%"struct.std::__1::__compressed_pair_elem.2480" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2481, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2481 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.2482", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.2482" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2490, i8, [7 x i8] }>
%class.scoped_refptr.2490 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2491", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2491" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2492" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2492" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2499" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2500" = type { %"class.std::__1::__compressed_pair.2501" }
%"class.std::__1::__compressed_pair.2501" = type { %"struct.std::__1::__compressed_pair_elem.2502" }
%"struct.std::__1::__compressed_pair_elem.2502" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.2506" = type { %"class.std::__1::__compressed_pair.2507" }
%"class.std::__1::__compressed_pair.2507" = type { %"struct.std::__1::__compressed_pair_elem.2508" }
%"struct.std::__1::__compressed_pair_elem.2508" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2512" }
%"class.blink::Member.2512" = type { %"class.blink::MemberBase.2513" }
%"class.blink::MemberBase.2513" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.4724" }
%"class.mojo::AssociatedRemote.4724" = type { %"class.mojo::internal::AssociatedInterfacePtrState.4725" }
%"class.mojo::internal::AssociatedInterfacePtrState.4725" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.4726" }
%"class.std::__1::unique_ptr.4726" = type { %"class.std::__1::__compressed_pair.4727" }
%"class.std::__1::__compressed_pair.4727" = type { %"struct.std::__1::__compressed_pair_elem.4728" }
%"struct.std::__1::__compressed_pair_elem.4728" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2514" = type { %"class.blink::Member.2515" }
%"class.blink::Member.2515" = type { %"class.blink::MemberBase.2516" }
%"class.blink::MemberBase.2516" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.4734" }
%"class.mojo::AssociatedRemote.4734" = type { %"class.mojo::internal::AssociatedInterfacePtrState.4735" }
%"class.mojo::internal::AssociatedInterfacePtrState.4735" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.4736" }
%"class.std::__1::unique_ptr.4736" = type { %"class.std::__1::__compressed_pair.4737" }
%"class.std::__1::__compressed_pair.4737" = type { %"struct.std::__1::__compressed_pair_elem.4738" }
%"struct.std::__1::__compressed_pair_elem.4738" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2517" }
%"class.blink::Member.2517" = type { %"class.blink::MemberBase.2518" }
%"class.blink::MemberBase.2518" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.4744", %"class.blink::Member.1503", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.4744" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.4745" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1147" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.4745" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2519" = type { %"class.blink::Member.2520" }
%"class.blink::Member.2520" = type { %"class.blink::MemberBase.2521" }
%"class.blink::MemberBase.2521" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.4748", %"class.blink::Member.1503", %"class.mojo::AssociatedReceiver.4749" }
%"class.blink::ThreadState::PrefinalizerRegistration.4748" = type { i8 }
%"class.mojo::AssociatedReceiver.4749" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.4750" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.4750" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2522" }
%"class.blink::Member.2522" = type { %"class.blink::MemberBase.2523" }
%"class.blink::MemberBase.2523" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.4753", %"class.blink::Member.1503", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.4753" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1038, %"class.std::__1::unique_ptr.1147", %"class.base::WeakPtrFactory.4754" }
%"class.base::WeakPtrFactory.4754" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2524" = type { %"class.blink::Member.2525" }
%"class.blink::Member.2525" = type { %"class.blink::MemberBase.2526" }
%"class.blink::MemberBase.2526" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.4757", %"class.blink::Member.1503", %"class.mojo::AssociatedReceiver.4758" }
%"class.blink::ThreadState::PrefinalizerRegistration.4757" = type { i8 }
%"class.mojo::AssociatedReceiver.4758" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.4759" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.4759" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2527" = type { %"class.blink::MemberBase.2528" }
%"class.blink::MemberBase.2528" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2529" = type { %"class.blink::MemberBase.2530" }
%"class.blink::MemberBase.2530" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2531" = type { %"class.blink::MemberBase.2532" }
%"class.blink::MemberBase.2532" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2533" = type { %"class.blink::MemberBase.2534" }
%"class.blink::MemberBase.2534" = type { %"class.blink::HeapHashMap.2535"* }
%"class.blink::HeapHashMap.2535" = type opaque
%"class.mojo::StructPtr.2536" = type { %"class.std::__1::unique_ptr.2537" }
%"class.std::__1::unique_ptr.2537" = type { %"class.std::__1::__compressed_pair.2538" }
%"class.std::__1::__compressed_pair.2538" = type { %"struct.std::__1::__compressed_pair_elem.2539" }
%"struct.std::__1::__compressed_pair_elem.2539" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2540", %"class.mojo::InlinedStructPtr.2541" }
%"class.mojo::InlinedStructPtr.2540" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2541" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2545" = type { %"class.blink::MemberBase.2546" }
%"class.blink::MemberBase.2546" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2547" = type { %"class.absl::optional_internal::optional_data.2548" }
%"class.absl::optional_internal::optional_data.2548" = type { %"class.absl::optional_internal::optional_data_base.2549" }
%"class.absl::optional_internal::optional_data_base.2549" = type { %"class.absl::optional_internal::optional_data_dtor_base.2550" }
%"class.absl::optional_internal::optional_data_dtor_base.2550" = type { i8, %union.anon.2551 }
%union.anon.2551 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1027", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map.2158" = type { %"class.base::internal::flat_tree.2159" }
%"class.base::internal::flat_tree.2159" = type { %"class.std::__1::vector.2160" }
%"class.std::__1::vector.2160" = type { %"class.std::__1::__vector_base.2161" }
%"class.std::__1::__vector_base.2161" = type { %"struct.std::__1::pair.2162"*, %"struct.std::__1::pair.2162"*, %"class.std::__1::__compressed_pair.2163" }
%"struct.std::__1::pair.2162" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2163" = type { %"struct.std::__1::__compressed_pair_elem.2164" }
%"struct.std::__1::__compressed_pair_elem.2164" = type { %"struct.std::__1::pair.2162"* }
%"class.blink::Member.2168" = type { %"class.blink::MemberBase.2169" }
%"class.blink::MemberBase.2169" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.2170" = type { %"class.absl::optional_internal::optional_data.2171" }
%"class.absl::optional_internal::optional_data.2171" = type { %"class.absl::optional_internal::optional_data_base.2172" }
%"class.absl::optional_internal::optional_data_base.2172" = type { %"class.absl::optional_internal::optional_data_dtor_base.2173" }
%"class.absl::optional_internal::optional_data_dtor_base.2173" = type { i8, %union.anon.2174 }
%union.anon.2174 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.2175" = type { %"class.absl::optional_internal::optional_data.2176" }
%"class.absl::optional_internal::optional_data.2176" = type { %"class.absl::optional_internal::optional_data_base.2177" }
%"class.absl::optional_internal::optional_data_base.2177" = type { %"class.absl::optional_internal::optional_data_dtor_base.2178" }
%"class.absl::optional_internal::optional_data_dtor_base.2178" = type { i8, %union.anon.2179 }
%union.anon.2179 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2180" }
%"class.blink::HeapHashSet.2180" = type { %"class.WTF::HashSet.2183" }
%"class.WTF::HashSet.2183" = type { %"class.WTF::HashTable.2184" }
%"class.WTF::HashTable.2184" = type <{ %"class.blink::WeakMember.2186"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2186" = type opaque
%"class.blink::Member.1029" = type { %"class.blink::MemberBase.1030" }
%"class.blink::MemberBase.1030" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.1031" = type { %"class.blink::MemberBase.1032" }
%"class.blink::MemberBase.1032" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1033" = type { %"class.blink::MemberBase.1034" }
%"class.blink::MemberBase.1034" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1035" = type { %"class.WTF::VectorBuffer.1036" }
%"class.WTF::VectorBuffer.1036" = type { %"class.WTF::VectorBufferBase.1037" }
%"class.WTF::VectorBufferBase.1037" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1197" }
%"class.std::__1::unique_ptr.1197" = type { %"class.std::__1::__compressed_pair.1198" }
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1199" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.1205", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1285", i32, i8, [3 x i8], %"class.blink::HeapVector.1287", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1295", %"class.blink::Member.1297", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1306", %"class.blink::Member.1360", %"class.blink::Member.1362", i8 }>
%"class.blink::Supplementable.1205" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1206" }
%"class.blink::HeapHashMap.1206" = type { %"class.WTF::HashMap.1209" }
%"class.WTF::HashMap.1209" = type { %"class.WTF::HashTable.1210" }
%"class.WTF::HashTable.1210" = type <{ %"struct.WTF::KeyValuePair.1212"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1212" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1220" }
%"class.blink::Supplementable.1220" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1221" }
%"class.blink::HeapHashMap.1221" = type { %"class.WTF::HashMap.1224" }
%"class.WTF::HashMap.1224" = type { %"class.WTF::HashTable.1225" }
%"class.WTF::HashTable.1225" = type <{ %"struct.WTF::KeyValuePair.1227"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1227" = type { i8*, %"class.blink::Member.4674" }
%"class.blink::Member.4674" = type { %"class.blink::MemberBase.4675" }
%"class.blink::MemberBase.4675" = type { %"class.blink::Supplement.4676"* }
%"class.blink::Supplement.4676" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.4677" }
%"class.blink::Member.4677" = type { %"class.blink::MemberBase.4678" }
%"class.blink::MemberBase.4678" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1228, %"class.std::__1::unique_ptr.1237", %"class.std::__1::unique_ptr.1237", %"class.std::__1::unique_ptr.1264", %"class.std::__1::unique_ptr.1264", %"class.blink::Member.1279", i32, [4 x i8], %"class.WTF::HashSet.1281", i32, i32 }
%"class.std::__1::unique_ptr.1237" = type { %"class.std::__1::__compressed_pair.1238" }
%"class.std::__1::__compressed_pair.1238" = type { %"struct.std::__1::__compressed_pair_elem.1239" }
%"struct.std::__1::__compressed_pair_elem.1239" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.1240", %"class.std::__1::map.1251", %"class.std::__1::map.1260"* }
%"class.std::__1::map.1240" = type { %"class.std::__1::__tree.1241" }
%"class.std::__1::__tree.1241" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1242", %"class.std::__1::__compressed_pair.1246" }
%"class.std::__1::__compressed_pair.1242" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"class.std::__1::__compressed_pair.1246" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1251" = type { %"class.std::__1::__tree.1252" }
%"class.std::__1::__tree.1252" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1253", %"class.std::__1::__compressed_pair.1257" }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1260" = type opaque
%"class.std::__1::unique_ptr.1264" = type { %"class.std::__1::__compressed_pair.1265" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.1266" }
%"struct.std::__1::__compressed_pair_elem.1266" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.WTF::HashSet.1281" = type { %"class.WTF::HashTable.1282" }
%"class.WTF::HashTable.1282" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1285" = type { %"class.blink::MemberBase.1286" }
%"class.blink::MemberBase.1286" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1287" = type { %"class.WTF::Vector.1290" }
%"class.WTF::Vector.1290" = type { %"class.WTF::VectorBuffer.1291" }
%"class.WTF::VectorBuffer.1291" = type { %"class.WTF::VectorBufferBase.1292" }
%"class.WTF::VectorBufferBase.1292" = type { %"class.blink::Member.1293"*, i32, i32 }
%"class.blink::Member.1293" = type opaque
%"class.blink::Member.1295" = type { %"class.blink::MemberBase.1296" }
%"class.blink::MemberBase.1296" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1297" = type { %"class.blink::MemberBase.1298" }
%"class.blink::MemberBase.1298" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1299", i32, i32 }
%"class.blink::HeapHashMap.1299" = type { %"class.WTF::HashMap.1302" }
%"class.WTF::HashMap.1302" = type { %"class.WTF::HashTable.1303" }
%"class.WTF::HashTable.1303" = type <{ %"struct.WTF::KeyValuePair.1305"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1305" = type opaque
%"class.blink::Member.1360" = type { %"class.blink::MemberBase.1361" }
%"class.blink::MemberBase.1361" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1362" = type { %"class.blink::MemberBase.1363" }
%"class.blink::MemberBase.1363" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1297", i8, [7 x i8], %"class.WTF::Vector.1312", %"class.blink::HeapVector.3645", i8, [7 x i8], %"class.WTF::HashSet.1281", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.3645" = type { %"class.WTF::Vector.3648" }
%"class.WTF::Vector.3648" = type { %"class.WTF::VectorBuffer.3649" }
%"class.WTF::VectorBuffer.3649" = type { %"class.WTF::VectorBufferBase.3650" }
%"class.WTF::VectorBufferBase.3650" = type { %"class.blink::Member.3651"*, i32, i32 }
%"class.blink::Member.3651" = type opaque
%"class.blink::Supplementable.1364" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1365" }
%"class.blink::HeapHashMap.1365" = type { %"class.WTF::HashMap.1368" }
%"class.WTF::HashMap.1368" = type { %"class.WTF::HashTable.1369" }
%"class.WTF::HashTable.1369" = type <{ %"struct.WTF::KeyValuePair.1371"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1371" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.1372" = type { i8 }
%"class.blink::Member.1373" = type { %"class.blink::MemberBase.1374" }
%"class.blink::MemberBase.1374" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.1375" = type { %"class.blink::MemberBase.1376" }
%"class.blink::MemberBase.1376" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.1377" = type { %"class.blink::MemberBase.1378" }
%"class.blink::MemberBase.1378" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.1379" = type { %"class.blink::MemberBase.1380" }
%"class.blink::MemberBase.1380" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.1389" = type { %"class.blink::MemberBase.1390" }
%"class.blink::MemberBase.1390" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.1393" = type { %"class.blink::MemberBase.1394" }
%"class.blink::MemberBase.1394" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.1395 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1396", [4 x i8], %"class.std::__1::unique_ptr.1398", i64, %"class.WTF::Vector.1402", %"class.WTF::Vector.1407", %"class.WTF::Vector.1413", %"class.WTF::Vector.1431", %class.scoped_refptr.1228, %"class.WTF::HashMap.1437", %"class.WTF::Vector.1442", %"class.WTF::Vector.1402", %"class.WTF::Vector.1448", %"class.WTF::HashMap.1453", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1396" = type { %"class.base::RefCountedThreadSafe.1397" }
%"class.base::RefCountedThreadSafe.1397" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1398" = type { %"class.std::__1::__compressed_pair.1399" }
%"class.std::__1::__compressed_pair.1399" = type { %"struct.std::__1::__compressed_pair_elem.1400" }
%"class.WTF::Vector.1407" = type { %"class.WTF::VectorBuffer.1408" }
%"class.WTF::VectorBuffer.1408" = type { %"class.WTF::VectorBufferBase.1409", [8 x i8] }
%"class.WTF::VectorBufferBase.1409" = type { %class.scoped_refptr.1410*, i32, i32 }
%class.scoped_refptr.1410 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1413" = type { %"class.WTF::VectorBuffer.1414" }
%"class.WTF::VectorBuffer.1414" = type { %"class.WTF::VectorBufferBase.1415" }
%"class.WTF::VectorBufferBase.1415" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1417", %"class.std::__1::unique_ptr.1423" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1416 }
%class.scoped_refptr.1416 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1417" = type { %"class.std::__1::__compressed_pair.1418" }
%"class.std::__1::__compressed_pair.1418" = type { %"struct.std::__1::__compressed_pair_elem.1419" }
%"struct.std::__1::__compressed_pair_elem.1419" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1423" = type { %"class.std::__1::__compressed_pair.1424" }
%"class.std::__1::__compressed_pair.1424" = type { %"struct.std::__1::__compressed_pair_elem.1425" }
%"struct.std::__1::__compressed_pair_elem.1425" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1431" = type { %"class.WTF::VectorBuffer.1432" }
%"class.WTF::VectorBuffer.1432" = type { %"class.WTF::VectorBufferBase.1433" }
%"class.WTF::VectorBufferBase.1433" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1434", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1434" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.1437" = type { %"class.WTF::HashTable.1438" }
%"class.WTF::HashTable.1438" = type <{ %"struct.WTF::KeyValuePair.1441"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1441" = type opaque
%"class.WTF::Vector.1442" = type { %"class.WTF::VectorBuffer.1443" }
%"class.WTF::VectorBuffer.1443" = type { %"class.WTF::VectorBufferBase.1444" }
%"class.WTF::VectorBufferBase.1444" = type { %"class.mojo::ScopedHandleBase.1445"*, i32, i32 }
%"class.mojo::ScopedHandleBase.1445" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.1402" = type { %"class.WTF::VectorBuffer.1403" }
%"class.WTF::VectorBuffer.1403" = type { %"class.WTF::VectorBufferBase.1404", [16 x i8] }
%"class.WTF::VectorBufferBase.1404" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1448" = type { %"class.WTF::VectorBuffer.1449" }
%"class.WTF::VectorBuffer.1449" = type { %"class.WTF::VectorBufferBase.1450" }
%"class.WTF::VectorBufferBase.1450" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.1453" = type { %"class.WTF::HashTable.1454" }
%"class.WTF::HashTable.1454" = type <{ %"struct.WTF::KeyValuePair.1457"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1457" = type { i8**, %"class.std::__1::unique_ptr.4693" }
%"class.std::__1::unique_ptr.4693" = type { %"class.std::__1::__compressed_pair.4694" }
%"class.std::__1::__compressed_pair.4694" = type { %"struct.std::__1::__compressed_pair_elem.4695" }
%"struct.std::__1::__compressed_pair_elem.4695" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.1458" = type { %"class.WTF::HashSet.1461" }
%"class.WTF::HashSet.1461" = type { %"class.WTF::HashTable.1462" }
%"class.WTF::HashTable.1462" = type <{ %"class.blink::WeakMember.1464"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1464" = type opaque
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1472", %"class.blink::Member.1472", %"class.blink::Member.1474", %"class.blink::Member.1476", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1467" }
%"class.absl::optional.1467" = type { %"class.absl::optional_internal::optional_data.1468" }
%"class.absl::optional_internal::optional_data.1468" = type { %"class.absl::optional_internal::optional_data_base.1469" }
%"class.absl::optional_internal::optional_data_base.1469" = type { %"class.absl::optional_internal::optional_data_dtor_base.1470" }
%"class.absl::optional_internal::optional_data_dtor_base.1470" = type { i8, %union.anon.1471 }
%union.anon.1471 = type { i64 }
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::Event"* }
%"class.blink::Member.1476" = type { %"class.blink::MemberBase.1477" }
%"class.blink::MemberBase.1477" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.1478" = type { %"class.WTF::HashMap.1481" }
%"class.WTF::HashMap.1481" = type { %"class.WTF::HashTable.1482" }
%"class.WTF::HashTable.1482" = type <{ %"struct.WTF::KeyValuePair.1484"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1484" = type opaque
%"class.std::__1::unique_ptr.1485" = type { %"class.std::__1::__compressed_pair.1486" }
%"class.std::__1::__compressed_pair.1486" = type { %"struct.std::__1::__compressed_pair_elem.1487" }
%"struct.std::__1::__compressed_pair_elem.1487" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.1497" = type { %"class.blink::MemberBase.1498" }
%"class.blink::MemberBase.1498" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.1503", %"class.blink::CachedTextInputInfo", %"class.blink::Member.1514", %"class.blink::Member.1516", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.1505", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.1507", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.1505" = type { %"class.blink::MemberBase.1506" }
%"class.blink::MemberBase.1506" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.1507" = type { %"class.WTF::HashMap.1510" }
%"class.WTF::HashMap.1510" = type { %"class.WTF::HashTable.1511" }
%"class.WTF::HashTable.1511" = type <{ %"struct.WTF::KeyValuePair.1513"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1513" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::Member.1516" = type { %"class.blink::MemberBase.1517" }
%"class.blink::MemberBase.1517" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.1518" = type { %"class.blink::MemberBase.1519" }
%"class.blink::MemberBase.1519" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.1004", %"class.blink::Member.2142", %"class.blink::Member.2144" }
%"class.blink::Member.2142" = type { %"class.blink::MemberBase.2143" }
%"class.blink::MemberBase.2143" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.2144" = type { %"class.blink::MemberBase.2145" }
%"class.blink::MemberBase.2145" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.1520" = type { %"class.blink::MemberBase.1521" }
%"class.blink::MemberBase.1521" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.1004", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2138" }
%"class.blink::Member.2138" = type { %"class.blink::MemberBase.2139" }
%"class.blink::MemberBase.2139" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1522" = type { %"class.blink::MemberBase.1523" }
%"class.blink::MemberBase.1523" = type { %"class.blink::HeapHashMap.1524"* }
%"class.blink::HeapHashMap.1524" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.1530" = type { %"class.WTF::HashTable.1531" }
%"class.WTF::HashTable.1531" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque.1534" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1537" }
%"class.WTF::VectorBuffer.1537" = type { %"class.WTF::VectorBufferBase.1538" }
%"class.WTF::VectorBufferBase.1538" = type { i64*, i32, i32 }
%"class.blink::Member.1279" = type { %"class.blink::MemberBase.1280" }
%"class.blink::MemberBase.1280" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1205", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1285", i32, i8, [3 x i8], %"class.blink::HeapVector.1287", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1295", %"class.blink::Member.1297", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1306", %"class.blink::Member.1360", %"class.blink::Member.1362", i8, [7 x i8] }>
%"class.blink::Member.1539" = type { %"class.blink::MemberBase.1540" }
%"class.blink::MemberBase.1540" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.3407", %"class.blink::Member.3408", %"class.blink::Member.3410", %"class.blink::Member.3412", %class.scoped_refptr.778, %class.scoped_refptr.778, %"class.blink::Member.3414", %"class.blink::Member.3416", %"class.blink::Member.3422", %"class.blink::Member.3426", %"class.blink::Member.3477", %"class.blink::HeapHashMap.3479", %"class.blink::HeapHashSet.3486", %"class.blink::HeapHashSet.3486", %"class.blink::HeapHashMap.3596", %"class.blink::HeapVector.3603", %"class.blink::Member.2943", %"class.blink::HeapTaskRunnerTimer.3611", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.3613", %"class.WTF::Vector.3620", %"class.blink::HeapHashSet.3625", %"class.blink::HeapHashSet.3625", %"class.std::__1::unique_ptr.3631", %"class.base::WeakPtr.3471", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote.3637", %"class.blink::Member.3640", i8, i8, %"class.base::WeakPtrFactory.3642" }
%"class.blink::ThreadState::PrefinalizerRegistration.3407" = type { i8 }
%"class.blink::Member.3408" = type { %"class.blink::MemberBase.3409" }
%"class.blink::MemberBase.3409" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.3410" = type { %"class.blink::MemberBase.3411" }
%"class.blink::MemberBase.3411" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.3412" = type { %"class.blink::MemberBase.3413" }
%"class.blink::MemberBase.3413" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%"class.blink::Member.3414" = type { %"class.blink::MemberBase.3415" }
%"class.blink::MemberBase.3415" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.3416" = type { %"class.blink::MemberBase.3417" }
%"class.blink::MemberBase.3417" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.3420" }
%"class.blink::Member.3420" = type { %"class.blink::MemberBase.3421" }
%"class.blink::MemberBase.3421" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.3422" = type { %"class.blink::MemberBase.3423" }
%"class.blink::MemberBase.3423" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.3426" = type { %"class.blink::MemberBase.3427" }
%"class.blink::MemberBase.3427" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.3430", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.3432", %"class.WTF::HashSet.3437", i8, [3 x i8], i32, %"class.blink::HeapHashMap.3441", %"class.std::__1::map.3448", %"class.std::__1::map.3459", %"class.std::__1::unique_ptr.3468", %"class.blink::Member.3416", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.3475", %"class.mojo::InlinedStructPtr.2541", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.3430" = type { %"class.blink::MemberBase.3431" }
%"class.blink::MemberBase.3431" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.3432" = type { %"class.WTF::HashTable.3433" }
%"class.WTF::HashTable.3433" = type <{ %"struct.WTF::KeyValuePair.3436"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3436" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.3437" = type { %"class.WTF::HashTable.3438" }
%"class.WTF::HashTable.3438" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.3441" = type { %"class.WTF::HashMap.3444" }
%"class.WTF::HashMap.3444" = type { %"class.WTF::HashTable.3445" }
%"class.WTF::HashTable.3445" = type <{ %"struct.WTF::KeyValuePair.3447"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3447" = type opaque
%"class.std::__1::map.3448" = type { %"class.std::__1::__tree.3449" }
%"class.std::__1::__tree.3449" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3450", %"class.std::__1::__compressed_pair.3454" }
%"class.std::__1::__compressed_pair.3450" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"class.std::__1::__compressed_pair.3454" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.3459" = type { %"class.std::__1::__tree.3460" }
%"class.std::__1::__tree.3460" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3461", %"class.std::__1::__compressed_pair.3465" }
%"class.std::__1::__compressed_pair.3461" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"class.std::__1::__compressed_pair.3465" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::unique_ptr.3468" = type { %"class.std::__1::__compressed_pair.3469" }
%"class.std::__1::__compressed_pair.3469" = type { %"struct.std::__1::__compressed_pair_elem.3470" }
%"struct.std::__1::__compressed_pair_elem.3470" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.3471", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.blink::Member.3475" = type { %"class.blink::MemberBase.3476" }
%"class.blink::MemberBase.3476" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.blink::Member.3477" = type { %"class.blink::MemberBase.3478" }
%"class.blink::MemberBase.3478" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.3479" = type { %"class.WTF::HashMap.3482" }
%"class.WTF::HashMap.3482" = type { %"class.WTF::HashTable.3483" }
%"class.WTF::HashTable.3483" = type <{ %"struct.WTF::KeyValuePair.3485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3485" = type opaque
%"class.blink::HeapHashSet.3486" = type { %"class.WTF::HashSet.3489" }
%"class.WTF::HashSet.3489" = type { %"class.WTF::HashTable.3490" }
%"class.WTF::HashTable.3490" = type <{ %"class.blink::WeakMember.3492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3492" = type { %"class.blink::MemberBase.3493" }
%"class.blink::MemberBase.3493" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.3496", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.3516", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.3568", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.3585", %"class.blink::ResourceResponse", %class.scoped_refptr.3151, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.3496" = type { %"class.absl::optional_internal::optional_data.3497" }
%"class.absl::optional_internal::optional_data.3497" = type { %"class.absl::optional_internal::optional_data_base.3498" }
%"class.absl::optional_internal::optional_data_base.3498" = type { %"class.absl::optional_internal::optional_data_dtor_base.3499" }
%"class.absl::optional_internal::optional_data_dtor_base.3499" = type { i8, %union.anon.3500 }
%union.anon.3500 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.3501", i8, %"class.absl::optional.3506", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.3501" = type { %"class.absl::optional_internal::optional_data.3502" }
%"class.absl::optional_internal::optional_data.3502" = type { %"class.absl::optional_internal::optional_data_base.3503" }
%"class.absl::optional_internal::optional_data_base.3503" = type { %"class.absl::optional_internal::optional_data_dtor_base.3504" }
%"class.absl::optional_internal::optional_data_dtor_base.3504" = type { i8, [7 x i8], %union.anon.3505 }
%union.anon.3505 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.3506" = type { %"class.absl::optional_internal::optional_data.3507" }
%"class.absl::optional_internal::optional_data.3507" = type { %"class.absl::optional_internal::optional_data_base.3508" }
%"class.absl::optional_internal::optional_data_base.3508" = type { %"class.absl::optional_internal::optional_data_dtor_base.3509" }
%"class.absl::optional_internal::optional_data_dtor_base.3509" = type { i8, %union.anon.3510 }
%union.anon.3510 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.3511", %"class.WTF::Vector.630" }
%"class.WTF::Vector.3511" = type { %"class.WTF::VectorBuffer.3512" }
%"class.WTF::VectorBuffer.3512" = type { %"class.WTF::VectorBufferBase.3513" }
%"class.WTF::VectorBufferBase.3513" = type { i32*, i32, i32 }
%"class.WTF::Vector.3516" = type { %"class.WTF::VectorBuffer.3517" }
%"class.WTF::VectorBuffer.3517" = type { %"class.WTF::VectorBufferBase.3518" }
%"class.WTF::VectorBufferBase.3518" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.3564" }
%"class.WTF::HashMap.3564" = type { %"class.WTF::HashTable.3565" }
%"class.WTF::HashTable.3565" = type <{ %"struct.WTF::KeyValuePair.3567"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3567" = type <{ %"class.blink::WeakMember.4774", i32, [4 x i8] }>
%"class.blink::WeakMember.4774" = type { %"class.blink::MemberBase.4775" }
%"class.blink::MemberBase.4775" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.4776", [7 x i8], %"class.blink::Member.3609", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.4776" = type { i8 }
%"class.blink::Member.3609" = type { %"class.blink::MemberBase.3493" }
%"class.blink::HeapHashSet.3568" = type { %"class.WTF::HashSet.3571" }
%"class.WTF::HashSet.3571" = type { %"class.WTF::HashTable.3572" }
%"class.WTF::HashTable.3572" = type <{ %"class.blink::WeakMember.3574"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3574" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.3575", %"class.WTF::String", %"class.WTF::HashSet.3576", i8, i8, %class.scoped_refptr.1567, %class.scoped_refptr.3581, %class.scoped_refptr.3583 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias.3575" = type { i8 }
%"class.WTF::HashSet.3576" = type { %"class.WTF::HashTable.3577" }
%"class.WTF::HashTable.3577" = type <{ %"struct.std::__1::pair.3580"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.3580" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1567 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1568", i32, i32, %"class.blink::Persistent.1570" }
%"class.WTF::RefCounted.1568" = type { %"class.base::RefCounted.1569" }
%"class.base::RefCounted.1569" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1570" = type { %"class.blink::PersistentBase.1571" }
%"class.blink::PersistentBase.1571" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1574" }
%"class.blink::HeapHashMap.1574" = type { %"class.WTF::HashMap.1577" }
%"class.WTF::HashMap.1577" = type { %"class.WTF::HashTable.1578" }
%"class.WTF::HashTable.1578" = type <{ %"struct.WTF::KeyValuePair.1580"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1580" = type { %"class.blink::WeakMember.1581", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1581" = type { %"class.blink::MemberBase.1582" }
%"class.blink::MemberBase.1582" = type { %"class.blink::ScriptWrappable"* }
%class.scoped_refptr.3581 = type { %"class.base::RefCountedData.3582"* }
%"class.base::RefCountedData.3582" = type opaque
%class.scoped_refptr.3583 = type { %"class.base::RefCountedData.3584"* }
%"class.base::RefCountedData.3584" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.1236, %class.scoped_refptr.1236, %class.scoped_refptr.1236, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.3519, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.3532", %"class.absl::optional.3537", %"class.absl::optional.3547", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.2175", %"class.absl::optional.3547", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.3547", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2175", %"class.absl::optional.3552", i8, %class.scoped_refptr.3558 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%class.scoped_refptr.3519 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.3520", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector.3521", %class.scoped_refptr.3530, i8, %"class.url::Origin" }
%"class.base::RefCounted.3520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector.3521" = type { %"class.std::__1::vector.3522" }
%"class.std::__1::vector.3522" = type { %"class.std::__1::__vector_base.3523" }
%"class.std::__1::__vector_base.3523" = type { %"class.std::__1::unique_ptr.3524"*, %"class.std::__1::unique_ptr.3524"*, %"class.std::__1::__compressed_pair.3525" }
%"class.std::__1::unique_ptr.3524" = type { %"class.std::__1::__compressed_pair.4760" }
%"class.std::__1::__compressed_pair.4760" = type { %"struct.std::__1::__compressed_pair_elem.4761" }
%"struct.std::__1::__compressed_pair_elem.4761" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.3525" = type { %"struct.std::__1::__compressed_pair_elem.3526" }
%"struct.std::__1::__compressed_pair_elem.3526" = type { %"class.std::__1::unique_ptr.3524"* }
%class.scoped_refptr.3530 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3531", [4 x i8] }>
%"class.base::RefCountedThreadSafe.3531" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.3532" = type { %"class.absl::optional_internal::optional_data.3533" }
%"class.absl::optional_internal::optional_data.3533" = type { %"class.absl::optional_internal::optional_data_base.3534" }
%"class.absl::optional_internal::optional_data_base.3534" = type { %"class.absl::optional_internal::optional_data_dtor_base.3535" }
%"class.absl::optional_internal::optional_data_dtor_base.3535" = type { i8, %union.anon.3536 }
%union.anon.3536 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.3537" = type { %"class.absl::optional_internal::optional_data.3538" }
%"class.absl::optional_internal::optional_data.3538" = type { %"class.absl::optional_internal::optional_data_base.3539" }
%"class.absl::optional_internal::optional_data_base.3539" = type { %"class.absl::optional_internal::optional_data_dtor_base.3540" }
%"class.absl::optional_internal::optional_data_dtor_base.3540" = type { i8, %union.anon.3541 }
%union.anon.3541 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.3542", %"class.WTF::Vector.630", %"class.WTF::String" }
%"class.WTF::Vector.3542" = type { %"class.WTF::VectorBuffer.3543" }
%"class.WTF::VectorBuffer.3543" = type { %"class.WTF::VectorBufferBase.3544" }
%"class.WTF::VectorBufferBase.3544" = type { %class.scoped_refptr.1236*, i32, i32 }
%"class.absl::optional.3547" = type { %"class.absl::optional_internal::optional_data.3548" }
%"class.absl::optional_internal::optional_data.3548" = type { %"class.absl::optional_internal::optional_data_base.3549" }
%"class.absl::optional_internal::optional_data_base.3549" = type { %"class.absl::optional_internal::optional_data_dtor_base.3550" }
%"class.absl::optional_internal::optional_data_dtor_base.3550" = type { i8, %union.anon.3551 }
%union.anon.3551 = type { %"class.WTF::String" }
%"class.absl::optional.3552" = type { %"class.absl::optional_internal::optional_data.3553" }
%"class.absl::optional_internal::optional_data.3553" = type { %"class.absl::optional_internal::optional_data_base.3554" }
%"class.absl::optional_internal::optional_data_base.3554" = type { %"class.absl::optional_internal::optional_data_dtor_base.3555" }
%"class.absl::optional_internal::optional_data_dtor_base.3555" = type { i8, %union.anon.3556 }
%union.anon.3556 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.3557" }
%"class.mojo::PendingRemote.3557" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.3558 = type { %"class.base::RefCountedData.3559"* }
%"class.base::RefCountedData.3559" = type { %"class.base::RefCountedThreadSafe.4765", %"class.base::internal::flat_tree.4766" }
%"class.base::RefCountedThreadSafe.4765" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.4766" = type { %"class.std::__1::vector.4767" }
%"class.std::__1::vector.4767" = type { %"class.std::__1::__vector_base.4768" }
%"class.std::__1::__vector_base.4768" = type { i32*, i32*, %"class.std::__1::__compressed_pair.4769" }
%"class.std::__1::__compressed_pair.4769" = type { %"struct.std::__1::__compressed_pair_elem.4770" }
%"struct.std::__1::__compressed_pair_elem.4770" = type { i32* }
%"class.blink::Member.3585" = type { %"class.blink::MemberBase.3586" }
%"class.blink::MemberBase.3586" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.3587" }
%"class.std::__1::__tree.3587" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3588", %"class.std::__1::__compressed_pair.3592" }
%"class.std::__1::__compressed_pair.3588" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"class.std::__1::__compressed_pair.3592" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.blink::HeapHashMap.3596" = type { %"class.WTF::HashMap.3599" }
%"class.WTF::HashMap.3599" = type { %"class.WTF::HashTable.3600" }
%"class.WTF::HashTable.3600" = type <{ %"struct.WTF::KeyValuePair.3602"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3602" = type opaque
%"class.blink::HeapVector.3603" = type { %"class.WTF::Vector.3606" }
%"class.WTF::Vector.3606" = type { %"class.WTF::VectorBuffer.3607" }
%"class.WTF::VectorBuffer.3607" = type { %"class.WTF::VectorBufferBase.3608" }
%"class.WTF::VectorBufferBase.3608" = type { %"class.blink::Member.3609"*, i32, i32 }
%"class.blink::HeapTaskRunnerTimer.3611" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.3612", { i64, i64 } }
%"class.blink::WeakMember.3612" = type { %"class.blink::MemberBase.1540" }
%"class.blink::HeapHashMap.3613" = type { %"class.WTF::HashMap.3616" }
%"class.WTF::HashMap.3616" = type { %"class.WTF::HashTable.3617" }
%"class.WTF::HashTable.3617" = type <{ %"struct.WTF::KeyValuePair.3619"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3619" = type opaque
%"class.WTF::Vector.3620" = type { %"class.WTF::VectorBuffer.3621" }
%"class.WTF::VectorBuffer.3621" = type { %"class.WTF::VectorBufferBase.3622" }
%"class.WTF::VectorBufferBase.3622" = type { %class.scoped_refptr.3165*, i32, i32 }
%"class.blink::HeapHashSet.3625" = type { %"class.WTF::HashSet.3628" }
%"class.WTF::HashSet.3628" = type { %"class.WTF::HashTable.3629" }
%"class.WTF::HashTable.3629" = type <{ %"class.blink::Member.3585"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.3631" = type { %"class.std::__1::__compressed_pair.3632" }
%"class.std::__1::__compressed_pair.3632" = type { %"struct.std::__1::__compressed_pair_elem.3633" }
%"struct.std::__1::__compressed_pair_elem.3633" = type { %"class.WTF::HashSet.2220"* }
%"class.blink::HeapMojoRemote.3637" = type { %"class.blink::Member.3638" }
%"class.blink::Member.3638" = type { %"class.blink::MemberBase.3639" }
%"class.blink::MemberBase.3639" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.3640" = type { %"class.blink::MemberBase.3641" }
%"class.blink::MemberBase.3641" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.3642" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1543" = type { %"class.blink::MemberBase.1544" }
%"class.blink::MemberBase.1544" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1545" = type { %"class.blink::MemberBase.1546" }
%"class.blink::MemberBase.1546" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1547" }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::KURL"* }
%"class.blink::Member.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1561" = type { %"class.blink::MemberBase.1562" }
%"class.blink::MemberBase.1562" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1563 }
%class.scoped_refptr.1563 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1564" = type { %"class.WTF::VectorBuffer.1565" }
%"class.WTF::VectorBuffer.1565" = type { %"class.WTF::VectorBufferBase.1566" }
%"class.WTF::VectorBufferBase.1566" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1567 }
%"class.blink::Member.1514" = type { %"class.blink::MemberBase.1515" }
%"class.blink::MemberBase.1515" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1587" }
%"class.blink::HeapHashMap.1587" = type { %"class.WTF::HashMap.1590" }
%"class.WTF::HashMap.1590" = type { %"class.WTF::HashTable.1591" }
%"class.WTF::HashTable.1591" = type <{ %"struct.WTF::KeyValuePair.1593"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1593" = type opaque
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1596" = type { %"class.WTF::HashSet.1599" }
%"class.WTF::HashSet.1599" = type { %"class.WTF::HashTable.1600" }
%"class.WTF::HashTable.1600" = type <{ %"class.blink::WeakMember.1602"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1602" = type opaque
%"class.blink::HeapHashSet.1603" = type { %"class.WTF::HashSet.1606" }
%"class.WTF::HashSet.1606" = type { %"class.WTF::HashTable.1607" }
%"class.WTF::HashTable.1607" = type <{ %"class.blink::WeakMember.1609"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1609" = type opaque
%"class.blink::Member.1610" = type { %"class.blink::MemberBase.1611" }
%"class.blink::MemberBase.1611" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.1616", %"class.blink::Member.1643", %"class.blink::HeapHashMap.1645", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1652", %"class.blink::HeapHashSet.1652", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1658", %"class.blink::Member.1670", %"class.blink::Member.1699", %"class.blink::Member.1701", %"class.blink::Member.1707", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1869", %"class.blink::Member.1875", %"class.blink::HeapHashMap.1877", %"class.blink::HeapHashMap.1884", %"class.std::__1::unique_ptr.1891", i32, %"class.blink::HeapVector.1897", %"class.blink::HeapVector.1897", %"class.blink::HeapVector.1628", %"class.blink::HeapHashSet.1905", %"class.blink::HeapHashMap.1912", %"class.blink::Member.1919", %"class.blink::HeapHashMap.1921", %class.scoped_refptr.1928, %class.scoped_refptr.259, %"class.blink::Member.1833", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1929", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1616" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1620", %"class.blink::HeapVector.1628", i8 }>
%"class.blink::HeapVector.1620" = type { %"class.WTF::Vector.1623" }
%"class.WTF::Vector.1623" = type { %"class.WTF::VectorBuffer.1624" }
%"class.WTF::VectorBuffer.1624" = type { %"class.WTF::VectorBufferBase.1625" }
%"class.WTF::VectorBufferBase.1625" = type { %"class.blink::Member.1626"*, i32, i32 }
%"class.blink::Member.1626" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1639", %"class.blink::Member.1641", %"class.blink::Member.1641", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1639" = type <{ %"class.blink::Member.1641"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1641" = type { %"class.blink::MemberBase.1642" }
%"class.blink::MemberBase.1642" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1641", %"class.blink::Member.1641" }
%"class.blink::Member.1643" = type { %"class.blink::MemberBase.1644" }
%"class.blink::MemberBase.1644" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1645" = type { %"class.WTF::HashMap.1648" }
%"class.WTF::HashMap.1648" = type { %"class.WTF::HashTable.1649" }
%"class.WTF::HashTable.1649" = type <{ %"struct.WTF::KeyValuePair.1651"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1651" = type opaque
%"class.blink::HeapHashSet.1652" = type { %"class.WTF::HashSet.1655" }
%"class.WTF::HashSet.1655" = type { %"class.WTF::HashTable.1656" }
%"class.WTF::HashTable.1656" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1658" = type { %"class.blink::MemberBase.1659" }
%"class.blink::MemberBase.1659" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1660", %"class.blink::Member.1662" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1660" = type { %"class.blink::MemberBase.1661" }
%"class.blink::MemberBase.1661" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1662" = type { %"class.blink::MemberBase.1663" }
%"class.blink::MemberBase.1663" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1666", %"class.blink::Member.1668" }
%"class.blink::Member.1666" = type { %"class.blink::MemberBase.1667" }
%"class.blink::MemberBase.1667" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.2127", %"class.blink::Member.1662", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.911] }
%"class.blink::HeapVector.2127" = type { %"class.WTF::Vector.2130" }
%"class.WTF::Vector.2130" = type { %"class.WTF::VectorBuffer.2131" }
%"class.WTF::VectorBuffer.2131" = type { %"class.WTF::VectorBufferBase.2132" }
%"class.WTF::VectorBufferBase.2132" = type { %"class.blink::Member.1668"*, i32, i32 }
%"class.blink::Member.1670" = type { %"class.blink::MemberBase.1671" }
%"class.blink::MemberBase.1671" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1643", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1674" }
%"class.blink::HeapHashMap.1674" = type { %"class.WTF::HashMap.1677" }
%"class.WTF::HashMap.1677" = type { %"class.WTF::HashTable.1678" }
%"class.WTF::HashTable.1678" = type <{ %"struct.WTF::KeyValuePair.1680"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1680" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1681", %"class.std::__1::unique_ptr.1693" }
%"class.blink::HeapVector.1681" = type { %"class.WTF::Vector.1684" }
%"class.WTF::Vector.1684" = type { %"class.WTF::VectorBuffer.1685" }
%"class.WTF::VectorBuffer.1685" = type { %"class.WTF::VectorBufferBase.1686" }
%"class.WTF::VectorBufferBase.1686" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1687" }
%"class.WTF::Vector.1687" = type { %"class.WTF::VectorBuffer.1688" }
%"class.WTF::VectorBuffer.1688" = type { %"class.WTF::VectorBufferBase.1689", [16 x i8] }
%"class.std::__1::unique_ptr.1693" = type { %"class.std::__1::__compressed_pair.1694" }
%"class.std::__1::__compressed_pair.1694" = type { %"struct.std::__1::__compressed_pair_elem.1695" }
%"struct.std::__1::__compressed_pair_elem.1695" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1699" = type { %"class.blink::MemberBase.1700" }
%"class.blink::MemberBase.1700" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1701" = type { %"class.blink::MemberBase.1702" }
%"class.blink::MemberBase.1702" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1705", i8, [7 x i8] }>
%"class.blink::Member.1705" = type { %"class.blink::MemberBase.1706" }
%"class.blink::MemberBase.1706" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1707" = type { %"class.blink::MemberBase.1708" }
%"class.blink::MemberBase.1708" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1729", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1711", %"class.WTF::HashMap.1711", %"class.WTF::HashMap.1711", %"class.WTF::HashMap.1716", %class.scoped_refptr.1721, %class.scoped_refptr.1728, %class.scoped_refptr.1727, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1711" = type { %"class.WTF::HashTable.1712" }
%"class.WTF::HashTable.1712" = type <{ %"struct.WTF::KeyValuePair.1715"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1715" = type { %"class.WTF::AtomicString", %class.scoped_refptr.4807 }
%class.scoped_refptr.4807 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1722", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1724", %"union.blink::InvalidationSet::Backing.1725", %"union.blink::InvalidationSet::Backing.1726", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1722" = type { %"class.base::RefCounted.1723" }
%"class.base::RefCounted.1723" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1724" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1725" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1726" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1716" = type { %"class.WTF::HashTable.1717" }
%"class.WTF::HashTable.1717" = type <{ %"struct.WTF::KeyValuePair.1720"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1720" = type opaque
%class.scoped_refptr.1721 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1727, %class.scoped_refptr.1727 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1722", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1724", %"union.blink::InvalidationSet::Backing.1725", %"union.blink::InvalidationSet::Backing.1726", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1728 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1727 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.1730" }
%"class.blink::MemberBase.1730" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1733", %"class.blink::HeapHashMap.1733", %"class.blink::HeapHashMap.1733", %"class.blink::HeapHashMap.1733", %"class.blink::HeapVector.1740", %"class.blink::HeapVector.1740", %"class.blink::HeapVector.1740", %"class.blink::HeapVector.1740", %"class.blink::HeapVector.1740", %"class.blink::HeapVector.1740", %"class.blink::HeapVector.1740", %"class.blink::HeapVector.1740", %"class.blink::HeapVector.1740", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1776", %"class.blink::HeapVector.1784", %"class.blink::HeapVector.1792", %"class.blink::HeapVector.1809", %"class.blink::HeapVector.1817", %"class.blink::HeapVector.1825", %"class.blink::HeapVector.1838", %"class.WTF::Vector.1845", i32, %"class.blink::Member.1851" }
%"class.blink::HeapHashMap.1733" = type { %"class.WTF::HashMap.1736" }
%"class.WTF::HashMap.1736" = type { %"class.WTF::HashTable.1737" }
%"class.WTF::HashTable.1737" = type <{ %"struct.WTF::KeyValuePair.1739"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1739" = type { %"class.WTF::AtomicString", %"class.blink::Member.4817" }
%"class.blink::Member.4817" = type { %"class.blink::MemberBase.4818" }
%"class.blink::MemberBase.4818" = type { %"class.blink::HeapVector.1740"* }
%"class.blink::HeapVector.1740" = type { %"class.WTF::Vector.1743" }
%"class.WTF::Vector.1743" = type { %"class.WTF::VectorBuffer.1744" }
%"class.WTF::VectorBuffer.1744" = type { %"class.WTF::VectorBufferBase.1745" }
%"class.WTF::VectorBufferBase.1745" = type { %"class.blink::Member.1746"*, i32, i32 }
%"class.blink::Member.1746" = type { %"class.blink::MemberBase.1747" }
%"class.blink::MemberBase.1747" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1750", i64, [4 x i32] }
%"class.blink::Member.1750" = type { %"class.blink::MemberBase.1751" }
%"class.blink::MemberBase.1751" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1771" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1771" = type { %"class.blink::MemberBase.1772" }
%"class.blink::MemberBase.1772" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1776" = type { %"class.WTF::Vector.1779" }
%"class.WTF::Vector.1779" = type { %"class.WTF::VectorBuffer.1780" }
%"class.WTF::VectorBuffer.1780" = type { %"class.WTF::VectorBufferBase.1781" }
%"class.WTF::VectorBufferBase.1781" = type { %"class.blink::Member.1782"*, i32, i32 }
%"class.blink::Member.1782" = type { %"class.blink::MemberBase.4813" }
%"class.blink::MemberBase.4813" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1784" = type { %"class.WTF::Vector.1787" }
%"class.WTF::Vector.1787" = type { %"class.WTF::VectorBuffer.1788" }
%"class.WTF::VectorBuffer.1788" = type { %"class.WTF::VectorBufferBase.1789" }
%"class.WTF::VectorBufferBase.1789" = type { %"class.blink::Member.1790"*, i32, i32 }
%"class.blink::Member.1790" = type { %"class.blink::MemberBase.4814" }
%"class.blink::MemberBase.4814" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1792" = type { %"class.WTF::Vector.1795" }
%"class.WTF::Vector.1795" = type { %"class.WTF::VectorBuffer.1796" }
%"class.WTF::VectorBuffer.1796" = type { %"class.WTF::VectorBufferBase.1797" }
%"class.WTF::VectorBufferBase.1797" = type { %"class.blink::Member.1798"*, i32, i32 }
%"class.blink::Member.1798" = type { %"class.blink::MemberBase.1799" }
%"class.blink::MemberBase.1799" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1800", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1800" = type { %"class.WTF::Vector.1803" }
%"class.WTF::Vector.1803" = type { %"class.WTF::VectorBuffer.1804" }
%"class.WTF::VectorBuffer.1804" = type { %"class.WTF::VectorBufferBase.1805" }
%"class.WTF::VectorBufferBase.1805" = type { %"class.blink::Member.1806"*, i32, i32 }
%"class.blink::Member.1806" = type opaque
%"class.blink::HeapVector.1809" = type { %"class.WTF::Vector.1812" }
%"class.WTF::Vector.1812" = type { %"class.WTF::VectorBuffer.1813" }
%"class.WTF::VectorBuffer.1813" = type { %"class.WTF::VectorBufferBase.1814" }
%"class.WTF::VectorBufferBase.1814" = type { %"class.blink::Member.1815"*, i32, i32 }
%"class.blink::Member.1815" = type { %"class.blink::MemberBase.4815" }
%"class.blink::MemberBase.4815" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1817" = type { %"class.WTF::Vector.1820" }
%"class.WTF::Vector.1820" = type { %"class.WTF::VectorBuffer.1821" }
%"class.WTF::VectorBuffer.1821" = type { %"class.WTF::VectorBufferBase.1822" }
%"class.WTF::VectorBufferBase.1822" = type { %"class.blink::Member.1823"*, i32, i32 }
%"class.blink::Member.1823" = type { %"class.blink::MemberBase.4816" }
%"class.blink::MemberBase.4816" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1833", %"class.blink::Member.1833", %"class.blink::Member.1833", %"class.blink::Member.1833", %"class.blink::Member.1833", %"class.blink::Member.1833", %"class.blink::Member.1833", %"class.blink::Member.1833", %"class.blink::Member.1833", %"class.blink::Member.1833", i32, [4 x i8] }>
%"class.blink::HeapVector.1825" = type { %"class.WTF::Vector.1828" }
%"class.WTF::Vector.1828" = type { %"class.WTF::VectorBuffer.1829" }
%"class.WTF::VectorBuffer.1829" = type { %"class.WTF::VectorBufferBase.1830" }
%"class.WTF::VectorBufferBase.1830" = type { %"class.blink::Member.1831"*, i32, i32 }
%"class.blink::Member.1831" = type { %"class.blink::MemberBase.1832" }
%"class.blink::MemberBase.1832" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1833", %"class.blink::Member.1833", %"class.blink::Member.1833", %"class.blink::Member.1833", %"class.blink::Member.1833" }
%"class.blink::HeapVector.1838" = type { %"class.WTF::Vector.1841" }
%"class.WTF::Vector.1841" = type { %"class.WTF::VectorBuffer.1842" }
%"class.WTF::VectorBuffer.1842" = type { %"class.WTF::VectorBufferBase.1843" }
%"class.WTF::VectorBufferBase.1843" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1750", i32, i32 }
%"class.WTF::Vector.1845" = type { %"class.WTF::VectorBuffer.1846" }
%"class.WTF::VectorBuffer.1846" = type { %"class.WTF::VectorBufferBase.1847" }
%"class.WTF::VectorBufferBase.1847" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1848, i8, [7 x i8] }>
%class.scoped_refptr.1848 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1851" = type { %"class.blink::MemberBase.1852" }
%"class.blink::MemberBase.1852" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1855", %"class.blink::HeapHashMap.1855", %"class.blink::HeapHashMap.1855", %"class.blink::HeapHashMap.1855" }
%"class.blink::HeapHashMap.1855" = type { %"class.WTF::HashMap.1858" }
%"class.WTF::HashMap.1858" = type { %"class.WTF::HashTable.1859" }
%"class.WTF::HashTable.1859" = type <{ %"struct.WTF::KeyValuePair.1861"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1861" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1862" }
%"class.blink::HeapHashMap.1862" = type { %"class.WTF::HashMap.1865" }
%"class.WTF::HashMap.1865" = type { %"class.WTF::HashTable.1866" }
%"class.WTF::HashTable.1866" = type <{ %"struct.WTF::KeyValuePair.1868"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1868" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.4808", %"class.WTF::Vector.4808" }
%"class.WTF::Vector.4808" = type { %"class.WTF::VectorBuffer.4809" }
%"class.WTF::VectorBuffer.4809" = type { %"class.WTF::VectorBufferBase.4810" }
%"class.WTF::VectorBufferBase.4810" = type { %class.scoped_refptr.4807*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1869" = type { %"class.WTF::HashSet.1872" }
%"class.WTF::HashSet.1872" = type { %"class.WTF::HashTable.1873" }
%"class.WTF::HashTable.1873" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1875" = type { %"class.blink::MemberBase.1876" }
%"class.blink::MemberBase.1876" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1877" = type { %"class.WTF::HashMap.1880" }
%"class.WTF::HashMap.1880" = type { %"class.WTF::HashTable.1881" }
%"class.WTF::HashTable.1881" = type <{ %"struct.WTF::KeyValuePair.1883"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1883" = type opaque
%"class.blink::HeapHashMap.1884" = type { %"class.WTF::HashMap.1887" }
%"class.WTF::HashMap.1887" = type { %"class.WTF::HashTable.1888" }
%"class.WTF::HashTable.1888" = type <{ %"struct.WTF::KeyValuePair.1890"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1890" = type opaque
%"class.std::__1::unique_ptr.1891" = type { %"class.std::__1::__compressed_pair.1892" }
%"class.std::__1::__compressed_pair.1892" = type { %"struct.std::__1::__compressed_pair_elem.1893" }
%"struct.std::__1::__compressed_pair_elem.1893" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1897" = type { %"class.WTF::Vector.1900" }
%"class.WTF::Vector.1900" = type { %"class.WTF::VectorBuffer.1901" }
%"class.WTF::VectorBuffer.1901" = type { %"class.WTF::VectorBufferBase.1902" }
%"class.WTF::VectorBufferBase.1902" = type { %"struct.std::__1::pair.1903"*, i32, i32 }
%"struct.std::__1::pair.1903" = type opaque
%"class.blink::HeapVector.1628" = type { %"class.WTF::Vector.1631" }
%"class.WTF::Vector.1631" = type { %"class.WTF::VectorBuffer.1632" }
%"class.WTF::VectorBuffer.1632" = type { %"class.WTF::VectorBufferBase.1633" }
%"class.WTF::VectorBufferBase.1633" = type { %"struct.std::__1::pair.1634"*, i32, i32 }
%"struct.std::__1::pair.1634" = type opaque
%"class.blink::HeapHashSet.1905" = type { %"class.WTF::HashSet.1908" }
%"class.WTF::HashSet.1908" = type { %"class.WTF::HashTable.1909" }
%"class.WTF::HashTable.1909" = type <{ %"class.blink::WeakMember.1911"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1911" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1912" = type { %"class.WTF::HashMap.1915" }
%"class.WTF::HashMap.1915" = type { %"class.WTF::HashTable.1916" }
%"class.WTF::HashTable.1916" = type <{ %"struct.WTF::KeyValuePair.1918"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1918" = type { %"class.WTF::AtomicString", %"class.blink::Member.1798" }
%"class.blink::Member.1919" = type { %"class.blink::MemberBase.1920" }
%"class.blink::MemberBase.1920" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1921" = type { %"class.WTF::HashMap.1924" }
%"class.WTF::HashMap.1924" = type { %"class.WTF::HashTable.1925" }
%"class.WTF::HashTable.1925" = type <{ %"struct.WTF::KeyValuePair.1927"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1927" = type opaque
%class.scoped_refptr.1928 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1833" = type { %"class.blink::MemberBase.1834" }
%"class.blink::MemberBase.1834" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1929" = type { %"class.WTF::HashSet.1932" }
%"class.WTF::HashSet.1932" = type { %"class.WTF::HashTable.1933" }
%"class.WTF::HashTable.1933" = type <{ %"class.blink::Member.1935"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1935" = type opaque
%"class.blink::Member.1936" = type { %"class.blink::MemberBase.1937" }
%"class.blink::MemberBase.1937" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1938" = type { %"class.blink::MemberBase.1939" }
%"class.blink::MemberBase.1939" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1940" = type { %"class.blink::MemberBase.1941" }
%"class.blink::MemberBase.1941" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1942" = type { %"class.WTF::HashMap.1945" }
%"class.WTF::HashMap.1945" = type { %"class.WTF::HashTable.1946" }
%"class.WTF::HashTable.1946" = type <{ %"struct.WTF::KeyValuePair.1948"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1948" = type opaque
%"class.WTF::Vector.1949" = type { %"class.WTF::VectorBuffer.1950" }
%"class.WTF::VectorBuffer.1950" = type { %"class.WTF::VectorBufferBase.1951" }
%"class.WTF::VectorBufferBase.1951" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1954" = type { %"class.blink::MemberBase.1955" }
%"class.blink::MemberBase.1955" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1956" = type { %"class.blink::MemberBase.1957" }
%"class.blink::MemberBase.1957" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1958" = type { %"class.blink::MemberBase.1959" }
%"class.blink::MemberBase.1959" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1960" = type { %"class.WTF::Vector.1963" }
%"class.WTF::Vector.1963" = type { %"class.WTF::VectorBuffer.1964" }
%"class.WTF::VectorBuffer.1964" = type { %"class.WTF::VectorBufferBase.1965" }
%"class.WTF::VectorBufferBase.1965" = type { %"class.blink::Member.1966"*, i32, i32 }
%"class.blink::Member.1966" = type opaque
%"class.std::__1::unique_ptr.1968" = type { %"class.std::__1::__compressed_pair.1969" }
%"class.std::__1::__compressed_pair.1969" = type { %"struct.std::__1::__compressed_pair_elem.1970" }
%"struct.std::__1::__compressed_pair_elem.1970" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1974" = type { %"class.WTF::HashSet.1977" }
%"class.WTF::HashSet.1977" = type { %"class.WTF::HashTable.1978" }
%"class.WTF::HashTable.1978" = type <{ %"class.blink::WeakMember.1980"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1980" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1981", i32, [4 x i8] }>
%"class.WTF::Vector.1981" = type { %"class.WTF::VectorBuffer.1982" }
%"class.WTF::VectorBuffer.1982" = type { %"class.WTF::VectorBufferBase.1983" }
%"class.WTF::VectorBufferBase.1983" = type { %"struct.std::__1::pair.1984"*, i32, i32 }
%"struct.std::__1::pair.1984" = type opaque
%"class.blink::Member.1987" = type { %"class.blink::MemberBase.1988" }
%"class.blink::MemberBase.1988" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1989" = type { %"class.WTF::VectorBuffer.1990" }
%"class.WTF::VectorBuffer.1990" = type { %"class.WTF::VectorBufferBase.1991" }
%"class.WTF::VectorBufferBase.1991" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1994" = type { %"class.std::__1::__compressed_pair.1995" }
%"class.std::__1::__compressed_pair.1995" = type { %"struct.std::__1::__compressed_pair_elem.1996" }
%"struct.std::__1::__compressed_pair_elem.1996" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.3337", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.3357", %"class.std::__1::unique_ptr.3363", %"class.std::__1::unique_ptr.3369", %class.scoped_refptr.3333, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.3375", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.3296", %"class.std::__1::unique_ptr.3306" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.3217", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.3217" = type { %"class.std::__1::__compressed_pair.3218" }
%"class.std::__1::__compressed_pair.3218" = type { %"struct.std::__1::__compressed_pair_elem.3219" }
%"struct.std::__1::__compressed_pair_elem.3219" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.3220", %"class.absl::optional.3225" }
%"class.absl::optional.3220" = type { %"class.absl::optional_internal::optional_data.3221" }
%"class.absl::optional_internal::optional_data.3221" = type { %"class.absl::optional_internal::optional_data_base.3222" }
%"class.absl::optional_internal::optional_data_base.3222" = type { %"class.absl::optional_internal::optional_data_dtor_base.3223" }
%"class.absl::optional_internal::optional_data_dtor_base.3223" = type { i8, %union.anon.3224 }
%union.anon.3224 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.3225" = type { %"class.absl::optional_internal::optional_data.3226" }
%"class.absl::optional_internal::optional_data.3226" = type { %"class.absl::optional_internal::optional_data_base.3227" }
%"class.absl::optional_internal::optional_data_base.3227" = type { %"class.absl::optional_internal::optional_data_dtor_base.3228" }
%"class.absl::optional_internal::optional_data_dtor_base.3228" = type { i8, %union.anon.3229 }
%union.anon.3229 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::Persistent.3296" = type { %"class.blink::PersistentBase.3297" }
%"class.blink::PersistentBase.3297" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.3300", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type <{ %"class.blink::LayoutFlowThread.base", [7 x i8], %"class.blink::FragmentationContext", %"class.blink::LayoutMultiColumnSet"*, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutFlowThread.base" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet.3339", %"class.WTF::PODIntervalTree.3352", i8 }>
%"class.WTF::LinkedHashSet.3339" = type { %"class.WTF::HashMap.3340", %"class.WTF::VectorBackedLinkedList.3345" }
%"class.WTF::HashMap.3340" = type { %"class.WTF::HashTable.3341" }
%"class.WTF::HashTable.3341" = type <{ %"struct.WTF::KeyValuePair.3344"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3344" = type opaque
%"class.WTF::VectorBackedLinkedList.3345" = type { %"class.WTF::Vector.3346", i32, i32 }
%"class.WTF::Vector.3346" = type { %"class.WTF::VectorBuffer.3347" }
%"class.WTF::VectorBuffer.3347" = type { %"class.WTF::VectorBufferBase.3348" }
%"class.WTF::VectorBufferBase.3348" = type { %"class.WTF::VectorBackedLinkedListNode.3349"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.3349" = type opaque
%"class.WTF::PODIntervalTree.3352" = type { %"class.WTF::PODRedBlackTree.base.3356", [7 x i8] }
%"class.WTF::PODRedBlackTree.base.3356" = type <{ i32 (...)**, %class.scoped_refptr.3354, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, i8 }>
%class.scoped_refptr.3354 = type { %"class.WTF::PODFreeListArena.3355"* }
%"class.WTF::PODFreeListArena.3355" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node" = type opaque
%"class.blink::FragmentationContext" = type { i32 (...)** }
%"class.blink::LayoutMultiColumnSet" = type opaque
%"class.std::__1::unique_ptr.3300" = type { %"class.std::__1::__compressed_pair.3301" }
%"class.std::__1::__compressed_pair.3301" = type { %"struct.std::__1::__compressed_pair_elem.3302" }
%"struct.std::__1::__compressed_pair_elem.3302" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.3653", %"class.WTF::HashMap.3658", %"class.WTF::String" }
%"class.WTF::Vector.3653" = type { %"class.WTF::VectorBuffer.3654" }
%"class.WTF::VectorBuffer.3654" = type { %"class.WTF::VectorBufferBase.3655" }
%"class.WTF::VectorBufferBase.3655" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.3658" = type { %"class.WTF::HashTable.3659" }
%"class.WTF::HashTable.3659" = type <{ %"struct.WTF::KeyValuePair.3662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3662" = type opaque
%"class.std::__1::unique_ptr.3306" = type { %"class.std::__1::__compressed_pair.3307" }
%"class.std::__1::__compressed_pair.3307" = type { %"struct.std::__1::__compressed_pair_elem.3308" }
%"struct.std::__1::__compressed_pair_elem.3308" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.3309", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.3309" = type { %"class.WTF::HashTable.3312", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.3312" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.3315", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.3315" = type { %"class.std::__1::__compressed_pair.3316" }
%"class.std::__1::__compressed_pair.3316" = type { %"struct.std::__1::__compressed_pair_elem.3317" }
%"struct.std::__1::__compressed_pair_elem.3317" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.3318, %"class.std::__1::unique_ptr.3319", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.3217", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.3318 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.3390", i16, %class.scoped_refptr.3318 }
%"class.WTF::ThreadSafeRefCounted.3390" = type { %"class.base::RefCountedThreadSafe.3391" }
%"class.base::RefCountedThreadSafe.3391" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.3319" = type { %"class.std::__1::__compressed_pair.3320" }
%"class.std::__1::__compressed_pair.3320" = type { %"struct.std::__1::__compressed_pair_elem.3321" }
%"struct.std::__1::__compressed_pair_elem.3321" = type { %"class.WTF::Vector.3322"* }
%"class.WTF::Vector.3322" = type { %"class.WTF::VectorBuffer.3323" }
%"class.WTF::VectorBuffer.3323" = type { %"class.WTF::VectorBufferBase.3324" }
%"class.WTF::VectorBufferBase.3324" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.3333, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.3337" = type { %"class.blink::MemberBase.3338" }
%"class.blink::MemberBase.3338" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet.3339", %"class.WTF::PODIntervalTree.3352", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.3357" = type { %"class.std::__1::__compressed_pair.3358" }
%"class.std::__1::__compressed_pair.3358" = type { %"struct.std::__1::__compressed_pair_elem.3359" }
%"struct.std::__1::__compressed_pair_elem.3359" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.3363" = type { %"class.std::__1::__compressed_pair.3364" }
%"class.std::__1::__compressed_pair.3364" = type { %"struct.std::__1::__compressed_pair_elem.3365" }
%"struct.std::__1::__compressed_pair_elem.3365" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.3369" = type { %"class.std::__1::__compressed_pair.3370" }
%"class.std::__1::__compressed_pair.3370" = type { %"struct.std::__1::__compressed_pair_elem.3371" }
%"struct.std::__1::__compressed_pair_elem.3371" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type { %"class.blink::LayoutView"*, i8, i8, i32, %"class.blink::CompositingInputsRoot" }
%"class.blink::CompositingInputsRoot" = type { %"class.blink::PaintLayer"* }
%class.scoped_refptr.3333 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.3375" = type { %"class.blink::PersistentBase.3376" }
%"class.blink::PersistentBase.3376" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.3379", i64 }
%"class.blink::HeapVector.3379" = type { %"class.WTF::Vector.3382" }
%"class.WTF::Vector.3382" = type { %"class.WTF::VectorBuffer.3383" }
%"class.WTF::VectorBuffer.3383" = type { %"class.WTF::VectorBufferBase.3384", [368 x i8] }
%"class.WTF::VectorBufferBase.3384" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.782", i8, %"class.blink::Member.3385", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.3385" = type { %"class.blink::MemberBase.3386" }
%"class.blink::MemberBase.3386" = type { %"class.blink::HeapLinkedHashSet.3387"* }
%"class.blink::HeapLinkedHashSet.3387" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.2000" = type { %"class.WTF::Vector.2003" }
%"class.WTF::Vector.2003" = type { %"class.WTF::VectorBuffer.2004" }
%"class.WTF::VectorBuffer.2004" = type { %"class.WTF::VectorBufferBase.2005" }
%"class.WTF::VectorBufferBase.2005" = type { %"class.blink::Member.2006"*, i32, i32 }
%"class.blink::Member.2006" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.2008" = type { %"class.blink::MemberBase.2009" }
%"class.blink::MemberBase.2009" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.2010" = type { %"class.blink::MemberBase.2011" }
%"class.blink::MemberBase.2011" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.2012" = type { %"class.blink::MemberBase.2013" }
%"class.blink::MemberBase.2013" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.2014" = type { %"class.blink::MemberBase.2015" }
%"class.blink::MemberBase.2015" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.2016" = type { %"class.blink::MemberBase.2017" }
%"class.blink::MemberBase.2017" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.2018" = type { %"class.WTF::HashTable.2019" }
%"class.WTF::HashTable.2019" = type <{ %"struct.WTF::KeyValuePair.2022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2022" = type opaque
%"class.blink::Member.2023" = type { %"class.blink::MemberBase.2024" }
%"class.blink::MemberBase.2024" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.2025" = type { %"class.blink::MemberBase.2026" }
%"class.blink::MemberBase.2026" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.2027" = type { %"class.blink::MemberBase.2028" }
%"class.blink::MemberBase.2028" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.2029" = type { %"class.blink::MemberBase.2030" }
%"class.blink::MemberBase.2030" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1585" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1586", { i64, i64 } }
%"class.blink::HeapHashSet.2031" = type { %"class.WTF::HashSet.2034" }
%"class.WTF::HashSet.2034" = type { %"class.WTF::HashTable.2035" }
%"class.WTF::HashTable.2035" = type <{ %"class.blink::Member.2037"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2037" = type opaque
%"class.blink::Member.2038" = type { %"class.blink::MemberBase.2039" }
%"class.blink::MemberBase.2039" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.2040" = type { %"class.blink::MemberBase.2041" }
%"class.blink::MemberBase.2041" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.2042" = type { %"class.blink::MemberBase.2043" }
%"class.blink::MemberBase.2043" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type { %"class.WTF::HashSet.3287", i8, i8, [6 x i8] }
%"class.WTF::HashSet.3287" = type { %"class.WTF::HashTable.3288" }
%"class.WTF::HashTable.3288" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2044" = type { %"class.blink::MemberBase.2045" }
%"class.blink::MemberBase.2045" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.2046" = type { %"class.blink::MemberBase.2047" }
%"class.blink::MemberBase.2047" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.2048" = type { %"class.std::__1::__compressed_pair.2049" }
%"class.std::__1::__compressed_pair.2049" = type { %"struct.std::__1::__compressed_pair_elem.2050" }
%"struct.std::__1::__compressed_pair_elem.2050" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2054" = type { %"class.std::__1::__compressed_pair.2055" }
%"class.std::__1::__compressed_pair.2055" = type { %"struct.std::__1::__compressed_pair_elem.2056" }
%"struct.std::__1::__compressed_pair_elem.2056" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.2057", %"class.WTF::HashMap.2057", %"class.WTF::HashMap.2057", %"class.WTF::HashMap.2057", %"class.WTF::HashMap.2057", %"class.WTF::HashMap.2057", %"class.WTF::HashMap.2057", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.2057" = type { %"class.WTF::HashTable.2058" }
%"class.WTF::HashTable.2058" = type <{ %"struct.WTF::KeyValuePair.2061"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2061" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.2065" = type { %"class.blink::MemberBase.2066" }
%"class.blink::MemberBase.2066" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.2067" = type { %"class.blink::MemberBase.2068" }
%"class.blink::MemberBase.2068" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.2069" = type { %"class.blink::MemberBase.2070" }
%"class.blink::MemberBase.2070" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.2071" = type { %"class.blink::MemberBase.2072" }
%"class.blink::MemberBase.2072" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1525" = type { %"class.WTF::VectorBuffer.1526" }
%"class.WTF::VectorBuffer.1526" = type { %"class.WTF::VectorBufferBase.1527" }
%"class.WTF::VectorBufferBase.1527" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.2073" = type { %"class.WTF::HashMap.2076" }
%"class.WTF::HashMap.2076" = type { %"class.WTF::HashTable.2077" }
%"class.WTF::HashTable.2077" = type <{ %"struct.WTF::KeyValuePair.2079"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2079" = type opaque
%"class.blink::Member.2080" = type { %"class.blink::MemberBase.2081" }
%"class.blink::MemberBase.2081" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.2082" = type { %"class.std::__1::__compressed_pair.2083" }
%"class.std::__1::__compressed_pair.2083" = type { %"struct.std::__1::__compressed_pair_elem.2084" }
%"struct.std::__1::__compressed_pair_elem.2084" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.2088" = type { %"class.blink::MemberBase.2089" }
%"class.blink::MemberBase.2089" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.2090" = type { %"class.blink::MemberBase.2091" }
%"class.blink::MemberBase.2091" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.2092" = type { %"class.WTF::HashMap.2095" }
%"class.WTF::HashMap.2095" = type { %"class.WTF::HashTable.2096" }
%"class.WTF::HashTable.2096" = type <{ %"struct.WTF::KeyValuePair.2098"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2098" = type opaque
%"class.blink::HeapObserverSet.2099" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2100" }
%"class.blink::HeapHashSet.2100" = type { %"class.WTF::HashSet.2103" }
%"class.WTF::HashSet.2103" = type { %"class.WTF::HashTable.2104" }
%"class.WTF::HashTable.2104" = type <{ %"class.blink::WeakMember.2106"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2106" = type opaque
%"class.blink::Member.2107" = type { %"class.blink::MemberBase.2108" }
%"class.blink::MemberBase.2108" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.2109" = type { %"class.blink::MemberBase.2110" }
%"class.blink::MemberBase.2110" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.2116", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.2123", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.2116" = type { %"class.WTF::HashSet.2119" }
%"class.WTF::HashSet.2119" = type { %"class.WTF::HashTable.2120" }
%"class.WTF::HashTable.2120" = type <{ %"class.blink::Member.2122"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2122" = type opaque
%"class.blink::HeapTaskRunnerTimer.2123" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2124", { i64, i64 } }
%"class.blink::WeakMember.2124" = type { %"class.blink::MemberBase.2110" }
%"class.blink::WeakMember.2111" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.2112" = type { %"class.blink::MemberBase.2113" }
%"class.blink::MemberBase.2113" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.4175" }
%"class.WTF::Vector.4175" = type { %"class.WTF::VectorBuffer.4176" }
%"class.WTF::VectorBuffer.4176" = type { %"class.WTF::VectorBufferBase.4177" }
%"class.WTF::VectorBufferBase.4177" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3667", %"class.absl::optional.3667", %"class.absl::optional.3667" }
%"class.absl::optional.3667" = type { %"class.absl::optional_internal::optional_data.3668" }
%"class.absl::optional_internal::optional_data.3668" = type { %"class.absl::optional_internal::optional_data_base.3669" }
%"class.absl::optional_internal::optional_data_base.3669" = type { %"class.absl::optional_internal::optional_data_dtor_base.3670" }
%"class.absl::optional_internal::optional_data_dtor_base.3670" = type { i8, %union.anon.3671 }
%union.anon.3671 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.995", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.995" = type { %"class.base::RefCounted.996" }
%"class.base::RefCounted.996" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.4689" }
%"class.WTF::VectorBuffer.4689" = type { %"class.WTF::VectorBufferBase.4690", [32 x i8] }
%"class.WTF::VectorBufferBase.4690" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.860", %"class.std::__1::unique_ptr.971", i8, %"class.absl::optional.977", %class.scoped_refptr.953, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.982" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.898, %class.scoped_refptr.902, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.943, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.967 }
%class.scoped_refptr.902 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.943 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.944 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.956" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.866, %"class.absl::optional.948", %class.scoped_refptr.953, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.948" = type { %"class.absl::optional_internal::optional_data.949" }
%"class.absl::optional_internal::optional_data.949" = type { %"class.absl::optional_internal::optional_data_base.950" }
%"class.absl::optional_internal::optional_data_base.950" = type { %"class.absl::optional_internal::optional_data_dtor_base.951" }
%"class.absl::optional_internal::optional_data_dtor_base.951" = type { i8, [3 x i8], %union.anon.952 }
%union.anon.952 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.959", i32, [4 x i8] }>
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.967 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.977" = type { %"class.absl::optional_internal::optional_data.978" }
%"class.absl::optional_internal::optional_data.978" = type { %"class.absl::optional_internal::optional_data_base.979" }
%"class.absl::optional_internal::optional_data_base.979" = type { %"class.absl::optional_internal::optional_data_dtor_base.980" }
%"class.absl::optional_internal::optional_data_dtor_base.980" = type { i8, %union.anon.981 }
%union.anon.981 = type { %"class.blink::IntRect" }
%class.scoped_refptr.953 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.954", [4 x i8] }
%"class.WTF::RefCounted.954" = type { %"class.base::RefCounted.955" }
%"class.base::RefCounted.955" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.3247 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.3663", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.3743, %union.anon.3761, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.3663" = type { %"class.base::RefCounted.3664" }
%"class.base::RefCounted.3664" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.3665, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.3665 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.3666 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.3666 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1395 }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.3695" }
%"class.std::__1::unique_ptr.3695" = type { %"class.std::__1::__compressed_pair.3696" }
%"class.std::__1::__compressed_pair.3696" = type { %"struct.std::__1::__compressed_pair_elem.3697" }
%"struct.std::__1::__compressed_pair_elem.3697" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.3698, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.3715" }
%class.scoped_refptr.3698 = type { %"class.base::RefCountedData.3699"* }
%"class.base::RefCountedData.3699" = type { %"class.base::RefCountedThreadSafe.3700", %"class.WTF::Vector.3701" }
%"class.base::RefCountedThreadSafe.3700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.3701" = type { %"class.WTF::VectorBuffer.3702" }
%"class.WTF::VectorBuffer.3702" = type { %"class.WTF::VectorBufferBase.3703" }
%"class.WTF::VectorBufferBase.3703" = type { %class.scoped_refptr.3704*, i32, i32 }
%class.scoped_refptr.3704 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.3705", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.3707" }
%"class.WTF::RefCounted.3705" = type { %"class.base::RefCounted.3706" }
%"class.base::RefCounted.3706" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.3707" = type { %"class.std::__1::__compressed_pair.3708" }
%"class.std::__1::__compressed_pair.3708" = type { %"struct.std::__1::__compressed_pair_elem.3709" }
%"struct.std::__1::__compressed_pair_elem.3709" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.3715" = type { %"class.std::__1::__compressed_pair.3716" }
%"class.std::__1::__compressed_pair.3716" = type { %"struct.std::__1::__compressed_pair_elem.3717" }
%"struct.std::__1::__compressed_pair_elem.3717" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.3718", %"class.WTF::Vector.3731", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.3718" = type { %"class.WTF::VectorBuffer.3719" }
%"class.WTF::VectorBuffer.3719" = type { %"class.WTF::VectorBufferBase.3720", [320 x i8] }
%"class.WTF::VectorBufferBase.3720" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.3721", %"class.WTF::Vector.3721", %class.scoped_refptr.3726, i8, [7 x i8] }>
%"class.WTF::Vector.3721" = type { %"class.WTF::VectorBuffer.3722" }
%"class.WTF::VectorBuffer.3722" = type { %"class.WTF::VectorBufferBase.3723", [8 x i8] }
%"class.WTF::VectorBufferBase.3723" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.3726 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.3727", %"class.WTF::Vector.3701", %"class.WTF::Vector.3701" }
%"class.WTF::RefCounted.3727" = type { %"class.base::RefCounted.3728" }
%"class.base::RefCounted.3728" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3731" = type { %"class.WTF::VectorBuffer.3732" }
%"class.WTF::VectorBuffer.3732" = type { %"class.WTF::VectorBufferBase.3733", [288 x i8] }
%"class.WTF::VectorBufferBase.3733" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.3721", %"class.WTF::Vector.3721" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.3734 }
%class.scoped_refptr.3734 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.3743 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.3744", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.3746, %"class.std::__1::unique_ptr.3749" }
%"class.WTF::RefCounted.3744" = type { %"class.base::RefCounted.3745" }
%"class.base::RefCounted.3745" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.3746 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.3747", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.3747" = type { %"class.base::RefCounted.3748" }
%"class.base::RefCounted.3748" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.3749" = type { %"class.std::__1::__compressed_pair.3750" }
%"class.std::__1::__compressed_pair.3750" = type { %"struct.std::__1::__compressed_pair_elem.3751" }
%"struct.std::__1::__compressed_pair_elem.3751" = type { %"class.WTF::Vector.3752"* }
%"class.WTF::Vector.3752" = type { %"class.WTF::VectorBuffer.3753" }
%"class.WTF::VectorBuffer.3753" = type { %"class.WTF::VectorBufferBase.3754" }
%"class.WTF::VectorBufferBase.3754" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.3755 }
%union.anon.3755 = type { %"class.blink::LineBoxList" }
%union.anon.3761 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.3274", %class.scoped_refptr.3762, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.3763, %"class.blink::NGExclusionSpace", %class.scoped_refptr.1395, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.3764", %"class.absl::optional.3780" }
%class.scoped_refptr.3762 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.3785", [4 x i8], %union.anon.3787, %class.scoped_refptr.3762, i32, [4 x i8] }>
%"class.WTF::RefCounted.3785" = type { %"class.base::RefCounted.3786" }
%"class.base::RefCounted.3786" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.3787 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.3763 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.3764" = type { %"class.std::__1::__compressed_pair.3765" }
%"class.std::__1::__compressed_pair.3765" = type { %"struct.std::__1::__compressed_pair_elem.3766" }
%"struct.std::__1::__compressed_pair_elem.3766" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.3767", %"class.WTF::Vector.3772", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.3767" = type { %"class.WTF::VectorBuffer.3768" }
%"class.WTF::VectorBuffer.3768" = type { %"class.WTF::VectorBufferBase.3769" }
%"class.WTF::VectorBufferBase.3769" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.3772" = type { %"class.WTF::VectorBuffer.3773" }
%"class.WTF::VectorBuffer.3773" = type { %"class.WTF::VectorBufferBase.3774" }
%"class.WTF::VectorBufferBase.3774" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.3780" = type { %"class.absl::optional_internal::optional_data.3781" }
%"class.absl::optional_internal::optional_data.3781" = type { %"class.absl::optional_internal::optional_data_base.3782" }
%"class.absl::optional_internal::optional_data_base.3782" = type { %"class.absl::optional_internal::optional_data_dtor_base.3783" }
%"class.absl::optional_internal::optional_data_dtor_base.3783" = type { i8, %union.anon.3784 }
%union.anon.3784 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.3248" = type { %"class.WTF::VectorBuffer.3249" }
%"class.WTF::VectorBuffer.3249" = type { %"class.WTF::VectorBufferBase.3250", [8 x i8] }
%"class.WTF::VectorBufferBase.3250" = type { %class.scoped_refptr.3247*, i32, i32 }
%"class.std::__1::unique_ptr.3253" = type { %"class.std::__1::__compressed_pair.3254" }
%"class.std::__1::__compressed_pair.3254" = type { %"struct.std::__1::__compressed_pair_elem.3255" }
%"struct.std::__1::__compressed_pair_elem.3255" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.3256", %"class.absl::optional.3261", %"class.absl::optional.3266" }
%"class.absl::optional.3256" = type { %"class.absl::optional_internal::optional_data.3257" }
%"class.absl::optional_internal::optional_data.3257" = type { %"class.absl::optional_internal::optional_data_base.3258" }
%"class.absl::optional_internal::optional_data_base.3258" = type { %"class.absl::optional_internal::optional_data_dtor_base.3259" }
%"class.absl::optional_internal::optional_data_dtor_base.3259" = type { i8, %union.anon.3260 }
%union.anon.3260 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.3261" = type { %"class.absl::optional_internal::optional_data.3262" }
%"class.absl::optional_internal::optional_data.3262" = type { %"class.absl::optional_internal::optional_data_base.3263" }
%"class.absl::optional_internal::optional_data_base.3263" = type { %"class.absl::optional_internal::optional_data_dtor_base.3264" }
%"class.absl::optional_internal::optional_data_dtor_base.3264" = type { i8, [3 x i8], %union.anon.3265 }
%union.anon.3265 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.3266" = type { %"class.absl::optional_internal::optional_data.3267" }
%"class.absl::optional_internal::optional_data.3267" = type { %"class.absl::optional_internal::optional_data_base.3268" }
%"class.absl::optional_internal::optional_data_base.3268" = type { %"class.absl::optional_internal::optional_data_dtor_base.3269" }
%"class.absl::optional_internal::optional_data_dtor_base.3269" = type { i8, %union.anon.3270 }
%union.anon.3270 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%union.anon.3279 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.3280" = type { %"class.blink::PersistentBase.3281" }
%"class.blink::PersistentBase.3281" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.3284", %"struct.blink::PhysicalRect", %"class.blink::Member.3294" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type { %"class.blink::LayoutBox", %"class.blink::LayoutBox"* }
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.3284" = type { %"class.std::__1::__compressed_pair.3285" }
%"class.std::__1::__compressed_pair.3285" = type { %"struct.std::__1::__compressed_pair_elem.3286" }
%"struct.std::__1::__compressed_pair_elem.3286" = type { %"class.WTF::HashSet.3287"* }
%"class.blink::Member.3294" = type { %"class.blink::MemberBase.3295" }
%"class.blink::MemberBase.3295" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type { %"class.blink::ScriptWrappable", %"class.blink::NGLayoutInputNode", %"class.blink::Member.3392", %"class.blink::Member.3401" }
%"class.blink::NGLayoutInputNode" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.blink::Member.3392" = type { %"class.blink::MemberBase.3393" }
%"class.blink::MemberBase.3393" = type { %"class.blink::PrepopulatedComputedStylePropertyMap"* }
%"class.blink::PrepopulatedComputedStylePropertyMap" = type { %"class.blink::StylePropertyMapReadOnlyMainThread", %"class.blink::HeapHashMap.3394", %"class.blink::HeapHashMap" }
%"class.blink::StylePropertyMapReadOnlyMainThread" = type { %"class.blink::StylePropertyMapReadOnly" }
%"class.blink::StylePropertyMapReadOnly" = type { %"class.blink::ScriptWrappable", %"class.blink::PairIterable" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::HeapHashMap.3394" = type { %"class.WTF::HashMap.3397" }
%"class.WTF::HashMap.3397" = type { %"class.WTF::HashTable.3398" }
%"class.WTF::HashTable.3398" = type <{ %"struct.WTF::KeyValuePair.3400"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3400" = type opaque
%"class.blink::Member.3401" = type { %"class.blink::MemberBase.3402" }
%"class.blink::MemberBase.3402" = type { %"class.blink::CustomLayoutToken"* }
%"class.blink::CustomLayoutToken" = type opaque
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.WTF::KeyValuePair.4859" = type { %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.4860" }
%"class.std::__1::unique_ptr.4860" = type { %"class.std::__1::__compressed_pair.4861" }
%"class.std::__1::__compressed_pair.4861" = type { %"struct.std::__1::__compressed_pair_elem.4862" }
%"struct.std::__1::__compressed_pair_elem.4862" = type { %"class.blink::ShapeOutsideInfo"* }
%"class.blink::ShapeOutsideInfo" = type <{ %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.4126", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::ShapeOutsideDeltas", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.4126" = type { %"class.std::__1::__compressed_pair.4127" }
%"class.std::__1::__compressed_pair.4127" = type { %"struct.std::__1::__compressed_pair_elem.4128" }
%"struct.std::__1::__compressed_pair_elem.4128" = type { %"class.blink::Shape"* }
%"class.blink::Shape" = type { i32 (...)**, i8, float }
%"class.blink::ShapeOutsideDeltas" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::HashTable.4856" = type <{ %"struct.WTF::KeyValuePair.4859"*, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutWorklet" = type { %"class.blink::Worklet", %"class.blink::Supplement", %"class.blink::HeapHashMap.4533", %"class.blink::Member.4540" }
%"class.blink::Worklet" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.4508", %"class.blink::HeapVector.4509", %"class.blink::Member.4517", %"class.blink::HeapHashSet.4526" }
%"class.blink::ThreadState::PrefinalizerRegistration.4508" = type { i8 }
%"class.blink::HeapVector.4509" = type { %"class.WTF::Vector.4512" }
%"class.WTF::Vector.4512" = type { %"class.WTF::VectorBuffer.4513" }
%"class.WTF::VectorBuffer.4513" = type { %"class.WTF::VectorBufferBase.4514" }
%"class.WTF::VectorBufferBase.4514" = type { %"class.blink::Member.4515"*, i32, i32 }
%"class.blink::Member.4515" = type opaque
%"class.blink::Member.4517" = type { %"class.blink::MemberBase.4518" }
%"class.blink::MemberBase.4518" = type { %"class.blink::WorkletModuleResponsesMap"* }
%"class.blink::WorkletModuleResponsesMap" = type { i8, [7 x i8], %"class.WTF::HashMap.4521", %"class.WTF::Mutex" }
%"class.WTF::HashMap.4521" = type { %"class.WTF::HashTable.4522" }
%"class.WTF::HashTable.4522" = type <{ %"struct.WTF::KeyValuePair.4525"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4525" = type opaque
%"class.blink::HeapHashSet.4526" = type { %"class.WTF::HashSet.4529" }
%"class.WTF::HashSet.4529" = type { %"class.WTF::HashTable.4530" }
%"class.WTF::HashTable.4530" = type <{ %"class.blink::Member.4532"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.4532" = type opaque
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1004" }
%"class.blink::HeapHashMap.4533" = type { %"class.WTF::HashMap.4536" }
%"class.WTF::HashMap.4536" = type { %"class.WTF::HashTable.4537" }
%"class.WTF::HashTable.4537" = type <{ %"struct.WTF::KeyValuePair.4539"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4539" = type opaque
%"class.blink::Member.4540" = type { %"class.blink::MemberBase.4541" }
%"class.blink::MemberBase.4541" = type { %"class.blink::PendingLayoutRegistry"* }
%"class.blink::PendingLayoutRegistry" = type { %"class.blink::HeapHashMap.4544" }
%"class.blink::HeapHashMap.4544" = type { %"class.WTF::HashMap.4547" }
%"class.WTF::HashMap.4547" = type { %"class.WTF::HashTable.4548" }
%"class.WTF::HashTable.4548" = type <{ %"struct.WTF::KeyValuePair.4550"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4550" = type opaque
%"class.blink::LayoutWorkletGlobalScopeProxy" = type { %"class.blink::WorkletGlobalScopeProxy", %"class.std::__1::unique_ptr.4615", %"class.blink::Member.4623" }
%"class.blink::WorkletGlobalScopeProxy" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.4615" = type { %"class.std::__1::__compressed_pair.4616" }
%"class.std::__1::__compressed_pair.4616" = type { %"struct.std::__1::__compressed_pair_elem.4617" }
%"struct.std::__1::__compressed_pair_elem.4617" = type { %"class.blink::MainThreadWorkletReportingProxy"* }
%"class.blink::MainThreadWorkletReportingProxy" = type { %"class.blink::WorkerReportingProxy", %"class.blink::Persistent.4618" }
%"class.blink::WorkerReportingProxy" = type { i32 (...)** }
%"class.blink::Persistent.4618" = type { %"class.blink::PersistentBase.4619" }
%"class.blink::PersistentBase.4619" = type { %"class.blink::ExecutionContext"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Member.4623" = type { %"class.blink::MemberBase.4624" }
%"class.blink::MemberBase.4624" = type { %"class.blink::LayoutWorkletGlobalScope"* }
%"class.blink::LayoutWorkletGlobalScope" = type { %"class.blink::WorkletGlobalScope.base", [6 x i8], %"class.blink::HeapHashMap.4659", %"class.blink::Member.4540", %"class.util::TokenType.4666" }
%"class.blink::WorkletGlobalScope.base" = type <{ %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable.4656", %"class.blink::KURL", %"class.WTF::String", %class.scoped_refptr.1236, i8, [7 x i8], %"class.blink::CrossThreadPersistent.4657", i32, i32, %"class.blink::Member.1503", %"class.blink::WorkerThread"*, %"class.util::TokenType", %"class.std::__1::unique_ptr.2048", i8, i8 }>
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.4640", %"class.blink::Member.1539", %"class.blink::HeapHashSet.4646", %class.scoped_refptr.4652, %"class.blink::Member.3129", %"class.blink::Member.4654", i32, %"class.WTF::Vector.1312", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.1389" }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.4625" }
%"class.blink::PersistentBase.4625" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.4628" }
%"class.blink::Supplementable.4628" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.4629" }
%"class.blink::HeapHashMap.4629" = type { %"class.WTF::HashMap.4632" }
%"class.WTF::HashMap.4632" = type { %"class.WTF::HashTable.4633" }
%"class.WTF::HashTable.4633" = type <{ %"struct.WTF::KeyValuePair.4635"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4635" = type { i8*, %"class.blink::Member.4849" }
%"class.blink::Member.4849" = type { %"class.blink::MemberBase.4850" }
%"class.blink::MemberBase.4850" = type { %"class.blink::Supplement.4851"* }
%"class.blink::Supplement.4851" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.4852" }
%"class.blink::Member.4852" = type { %"class.blink::MemberBase.4853" }
%"class.blink::MemberBase.4853" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.4636" }
%"struct.std::__1::atomic.4636" = type { %"struct.std::__1::__atomic_base.4637" }
%"struct.std::__1::__atomic_base.4637" = type { %"struct.std::__1::__cxx_atomic_impl.4638" }
%"struct.std::__1::__cxx_atomic_impl.4638" = type { %"struct.std::__1::__cxx_atomic_base_impl.4639" }
%"struct.std::__1::__cxx_atomic_base_impl.4639" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.4640" = type { %"class.std::__1::__compressed_pair.4641" }
%"class.std::__1::__compressed_pair.4641" = type { %"struct.std::__1::__compressed_pair_elem.4642" }
%"struct.std::__1::__compressed_pair_elem.4642" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::HeapHashSet.4646" = type { %"class.WTF::HashSet.4649" }
%"class.WTF::HashSet.4649" = type { %"class.WTF::HashTable.4650" }
%"class.WTF::HashTable.4650" = type <{ %"class.blink::WeakMember.3612"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.4652 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.4653", [4 x i8] }>
%"class.base::RefCounted.4653" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.4654" = type { %"class.blink::MemberBase.4655" }
%"class.blink::MemberBase.4655" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.blink::ActiveScriptWrappable.4656" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::CrossThreadPersistent.4657" = type { %"class.blink::PersistentBase.4658" }
%"class.blink::PersistentBase.4658" = type { %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerThread" = type opaque
%"class.blink::HeapHashMap.4659" = type { %"class.WTF::HashMap.4662" }
%"class.WTF::HashMap.4662" = type { %"class.WTF::HashTable.4663" }
%"class.WTF::HashTable.4663" = type <{ %"struct.WTF::KeyValuePair.4665"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4665" = type opaque
%"class.util::TokenType.4666" = type { %"class.base::StrongAlias.4667" }
%"class.base::StrongAlias.4667" = type { %"class.base::UnguessableToken" }
%"class.blink::CSSLayoutDefinition" = type { %"class.blink::NameClient", %"class.blink::Member.4553", %"class.blink::Member.4607", %"class.blink::Member.4609", %"class.blink::Member.4611", i8, %"class.WTF::Vector.529", %"class.WTF::Vector.284", %"class.WTF::Vector.529", %"class.WTF::Vector.284" }
%"class.blink::Member.4553" = type { %"class.blink::MemberBase.4554" }
%"class.blink::MemberBase.4554" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.4557, %"class.blink::Member.4558", %"class.blink::SelfKeepAlive", %"class.util::TokenType.4605" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.4557 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.4558" = type { %"class.blink::MemberBase.4559" }
%"class.blink::MemberBase.4559" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.4562", %"class.blink::HeapHashMap.4571", %"class.std::__1::unique_ptr.4581", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.4593", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.4596" }
%"class.blink::HeapHashMap.4562" = type { %"class.WTF::HashMap.4565" }
%"class.WTF::HashMap.4565" = type { %"class.WTF::HashTable.4566" }
%"class.WTF::HashTable.4566" = type <{ %"struct.WTF::KeyValuePair.4568"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4568" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::HeapHashMap.4571" = type { %"class.WTF::HashMap.4574" }
%"class.WTF::HashMap.4574" = type { %"class.WTF::HashTable.4575" }
%"class.WTF::HashTable.4575" = type <{ %"struct.WTF::KeyValuePair.4577"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4577" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.4578" }
%"class.blink::TraceWrapperV8Reference.4578" = type { %"class.v8::TracedReference.4579" }
%"class.v8::TracedReference.4579" = type { %"class.v8::BasicTracedReference.4580" }
%"class.v8::BasicTracedReference.4580" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.4581" = type { %"class.std::__1::__compressed_pair.4582" }
%"class.std::__1::__compressed_pair.4582" = type { %"struct.std::__1::__compressed_pair_elem.4583" }
%"struct.std::__1::__compressed_pair_elem.4583" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.4584" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.4584" = type { %"class.std::__1::__compressed_pair.4585" }
%"class.std::__1::__compressed_pair.4585" = type { %"struct.std::__1::__compressed_pair_elem.4586" }
%"struct.std::__1::__compressed_pair_elem.4586" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.4593" = type { %"class.v8::Persistent.4594" }
%"class.v8::Persistent.4594" = type { %"class.v8::PersistentBase.4595" }
%"class.v8::PersistentBase.4595" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.4596" = type { %"class.WTF::HashMap.4599" }
%"class.WTF::HashMap.4599" = type { %"class.WTF::HashTable.4600" }
%"class.WTF::HashTable.4600" = type <{ %"struct.WTF::KeyValuePair.4602"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4602" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.4603" }
%"class.blink::Persistent.4603" = type { %"class.blink::PersistentBase.4604" }
%"class.blink::PersistentBase.4604" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr.269" }
%"class.util::TokenType.4605" = type { %"class.base::StrongAlias.4606" }
%"class.base::StrongAlias.4606" = type { %"class.base::UnguessableToken" }
%"class.blink::Member.4607" = type { %"class.blink::MemberBase.4608" }
%"class.blink::MemberBase.4608" = type { %"class.blink::V8NoArgumentConstructor"* }
%"class.blink::V8NoArgumentConstructor" = type opaque
%"class.blink::Member.4609" = type { %"class.blink::MemberBase.4610" }
%"class.blink::MemberBase.4610" = type { %"class.blink::V8IntrinsicSizesCallback"* }
%"class.blink::V8IntrinsicSizesCallback" = type opaque
%"class.blink::Member.4611" = type { %"class.blink::MemberBase.4612" }
%"class.blink::MemberBase.4612" = type { %"class.blink::V8LayoutCallback"* }
%"class.blink::V8LayoutCallback" = type opaque
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutGrid" = type <{ %"class.blink::LayoutBlock.base", [6 x i8], %"class.blink::LayoutNGGridInterface", %"class.std::__1::unique_ptr.4132", %"class.blink::GridTrackSizingAlgorithm", %"class.WTF::Vector.4196", %"class.WTF::Vector.4196", %"struct.blink::ContentAlignmentData", %"struct.blink::ContentAlignmentData", %"class.WTF::HashMap.4201", %"class.WTF::HashMap.4201", i8, i8, %"class.absl::optional.4206", [4 x i8] }>
%"class.blink::LayoutNGGridInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.4132" = type { %"class.std::__1::__compressed_pair.4133" }
%"class.std::__1::__compressed_pair.4133" = type { %"struct.std::__1::__compressed_pair_elem.4134" }
%"struct.std::__1::__compressed_pair_elem.4134" = type { %"class.blink::Grid"* }
%"class.blink::Grid" = type { i32 (...)**, %"class.blink::OrderIterator", i64, i64, i64, i64, i8, [7 x i8], %"class.WTF::HashMap.4145", %"class.WTF::HashMap.4150", %"class.std::__1::unique_ptr.4155", %"class.std::__1::unique_ptr.4155" }
%"class.blink::OrderIterator" = type <{ %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*, %"class.std::__1::set.4135", %"class.std::__1::__tree_const_iterator", i8, [7 x i8] }>
%"class.std::__1::set.4135" = type { %"class.std::__1::__tree.4136" }
%"class.std::__1::__tree.4136" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4137", %"class.std::__1::__compressed_pair.4141" }
%"class.std::__1::__compressed_pair.4137" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"class.std::__1::__compressed_pair.4141" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__tree_const_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"class.WTF::HashMap.4145" = type { %"class.WTF::HashTable.4146" }
%"class.WTF::HashTable.4146" = type <{ %"struct.WTF::KeyValuePair.4149"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4149" = type { %"class.blink::LayoutBox"*, %"struct.blink::GridArea" }
%"class.WTF::HashMap.4150" = type { %"class.WTF::HashTable.4151" }
%"class.WTF::HashTable.4151" = type <{ %"struct.WTF::KeyValuePair.4154"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4154" = type { %"class.blink::LayoutBox"*, i64 }
%"class.std::__1::unique_ptr.4155" = type { %"class.std::__1::__compressed_pair.4156" }
%"class.std::__1::__compressed_pair.4156" = type { %"struct.std::__1::__compressed_pair_elem.4157" }
%"struct.std::__1::__compressed_pair_elem.4157" = type { %"class.WTF::LinkedHashSet.4158"* }
%"class.WTF::LinkedHashSet.4158" = type { %"class.WTF::HashMap.4819", %"class.WTF::VectorBackedLinkedList.4824" }
%"class.WTF::HashMap.4819" = type { %"class.WTF::HashTable.4820" }
%"class.WTF::HashTable.4820" = type <{ %"struct.WTF::KeyValuePair.4823"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4823" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList.4824" = type { %"class.WTF::Vector.4825", i32, i32 }
%"class.WTF::Vector.4825" = type { %"class.WTF::VectorBuffer.4826" }
%"class.WTF::VectorBuffer.4826" = type { %"class.WTF::VectorBufferBase.4827" }
%"class.WTF::VectorBufferBase.4827" = type { %"class.WTF::VectorBackedLinkedListNode.4828"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.4828" = type { i32, i32, i64 }
%"class.blink::GridTrackSizingAlgorithm" = type { i8, i8, %"class.absl::optional.3274", %"class.absl::optional.3274", %"class.absl::optional.3274", %"class.absl::optional.3274", %"class.WTF::Vector.4165", %"class.WTF::Vector.4165", %"class.WTF::Vector.4175", %"class.WTF::Vector.4175", %"class.WTF::Vector.4175", i32, %"class.blink::Grid"*, %"class.blink::LayoutGrid"*, %"class.std::__1::unique_ptr.4180", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, [4 x i8], %"class.blink::GridBaselineAlignment", %"class.WTF::HashMap.4191", %"class.WTF::HashMap.4191" }
%"class.WTF::Vector.4165" = type { %"class.WTF::VectorBuffer.4166" }
%"class.WTF::VectorBuffer.4166" = type { %"class.WTF::VectorBufferBase.4167" }
%"class.WTF::VectorBufferBase.4167" = type { %"class.blink::GridTrack"*, i32, i32 }
%"class.blink::GridTrack" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.absl::optional.3274", i8, [7 x i8], %"class.absl::optional.4168" }
%"class.absl::optional.4168" = type { %"class.absl::optional_internal::optional_data.4169" }
%"class.absl::optional_internal::optional_data.4169" = type { %"class.absl::optional_internal::optional_data_base.4170" }
%"class.absl::optional_internal::optional_data_base.4170" = type { %"class.absl::optional_internal::optional_data_dtor_base.4171" }
%"class.absl::optional_internal::optional_data_dtor_base.4171" = type { i8, [7 x i8], %union.anon.4172 }
%union.anon.4172 = type { %"class.blink::GridTrackSize" }
%"class.std::__1::unique_ptr.4180" = type { %"class.std::__1::__compressed_pair.4181" }
%"class.std::__1::__compressed_pair.4181" = type { %"struct.std::__1::__compressed_pair_elem.4182" }
%"struct.std::__1::__compressed_pair_elem.4182" = type { %"class.blink::GridTrackSizingAlgorithmStrategy"* }
%"class.blink::GridTrackSizingAlgorithmStrategy" = type { i32 (...)**, %"class.blink::GridTrackSizingAlgorithm"* }
%"class.blink::GridBaselineAlignment" = type { i8, [7 x i8], %"class.WTF::HashMap.4186", %"class.WTF::HashMap.4186" }
%"class.WTF::HashMap.4186" = type { %"class.WTF::HashTable.4187" }
%"class.WTF::HashTable.4187" = type <{ %"struct.WTF::KeyValuePair.4190"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4190" = type { i32, %"class.std::__1::unique_ptr.4832" }
%"class.std::__1::unique_ptr.4832" = type { %"class.std::__1::__compressed_pair.4833" }
%"class.std::__1::__compressed_pair.4833" = type { %"struct.std::__1::__compressed_pair_elem.4834" }
%"struct.std::__1::__compressed_pair_elem.4834" = type { %"class.blink::BaselineContext"* }
%"class.blink::BaselineContext" = type { %"class.WTF::Vector.4835" }
%"class.WTF::Vector.4835" = type { %"class.WTF::VectorBuffer.4836" }
%"class.WTF::VectorBuffer.4836" = type { %"class.WTF::VectorBufferBase.4837" }
%"class.WTF::VectorBufferBase.4837" = type { %"class.blink::BaselineGroup"*, i32, i32 }
%"class.blink::BaselineGroup" = type { i8, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::HashSet.4838" }
%"class.WTF::HashSet.4838" = type { %"class.WTF::HashTable.4839" }
%"class.WTF::HashTable.4839" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.4191" = type { %"class.WTF::HashTable.4192" }
%"class.WTF::HashTable.4192" = type <{ %"struct.WTF::KeyValuePair.4195"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4195" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.WTF::Vector.4196" = type { %"class.WTF::VectorBuffer.4197" }
%"class.WTF::VectorBuffer.4197" = type { %"class.WTF::VectorBufferBase.4198" }
%"class.WTF::VectorBufferBase.4198" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"struct.blink::ContentAlignmentData" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashMap.4201" = type { %"class.WTF::HashTable.4202" }
%"class.WTF::HashTable.4202" = type <{ %"struct.WTF::KeyValuePair.4205"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4205" = type opaque
%"class.absl::optional.4206" = type { %"class.absl::optional_internal::optional_data.4207" }
%"class.absl::optional_internal::optional_data.4207" = type { %"class.absl::optional_internal::optional_data_base.4208" }
%"class.absl::optional_internal::optional_data_base.4208" = type { %"class.absl::optional_internal::optional_data_dtor_base.4209" }
%"class.absl::optional_internal::optional_data_dtor_base.4209" = type { i8, %union.anon.4210 }
%union.anon.4210 = type { i8 }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.WTF::HashMap.4855" = type { %"class.WTF::HashTable.4856" }
%class.anon.4877 = type { %"class.blink::LayoutObject"*, i8** }
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"class.blink::NGInkOverflow" = type { %union.anon.4301 }
%union.anon.4301 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.blink::NGBlockBreakToken" = type { %"class.blink::NGBreakToken.base", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, [0 x %"class.blink::NGBreakToken"*] }
%"class.blink::NGBreakToken.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.3747", [4 x i8], %"class.blink::LayoutBox"*, i16 }>
%class.scoped_refptr.3672 = type { %"class.blink::NGTableConstraintSpaceData"* }
%"class.blink::NGTableConstraintSpaceData" = type <{ %"class.WTF::RefCounted.3673", [4 x i8], %"class.WTF::Vector.3675", %"class.WTF::Vector.3680", %"class.WTF::Vector.3685", %"class.WTF::Vector.3690", %"class.blink::LayoutUnit", %"class.blink::WritingDirectionMode", [2 x i8], %"struct.blink::LogicalSize", i8, i8, i8, [5 x i8] }>
%"class.WTF::RefCounted.3673" = type { %"class.base::RefCounted.3674" }
%"class.base::RefCounted.3674" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3675" = type { %"class.WTF::VectorBuffer.3676" }
%"class.WTF::VectorBuffer.3676" = type { %"class.WTF::VectorBufferBase.3677" }
%"class.WTF::VectorBufferBase.3677" = type { %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::ColumnLocation" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.3680" = type { %"class.WTF::VectorBuffer.3681" }
%"class.WTF::VectorBuffer.3681" = type { %"class.WTF::VectorBufferBase.3682" }
%"class.WTF::VectorBufferBase.3682" = type { %"struct.blink::NGTableConstraintSpaceData::Section"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Section" = type { i32, i32 }
%"class.WTF::Vector.3685" = type { %"class.WTF::VectorBuffer.3686" }
%"class.WTF::VectorBuffer.3686" = type { %"class.WTF::VectorBufferBase.3687" }
%"class.WTF::VectorBufferBase.3687" = type { %"struct.blink::NGTableConstraintSpaceData::Row"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Row" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.3690" = type { %"class.WTF::VectorBuffer.3691" }
%"class.WTF::VectorBuffer.3691" = type { %"class.WTF::VectorBufferBase.3692" }
%"class.WTF::VectorBufferBase.3692" = type { %"struct.blink::NGTableConstraintSpaceData::Cell"*, i32, i32 }
%"struct.blink::NGTableConstraintSpaceData::Cell" = type <{ %"struct.blink::NGBoxStrut", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.blink::WritingDirectionMode" = type { i8, i8 }
%"struct.std::__1::default_delete.3738" = type { i8 }
%"class.blink::LayoutAnalyzer::Scope" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutAnalyzer"* }
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.4902", %"class.blink::WeakMember.1586", i32, [4 x i8], %"class.blink::HeapHashSet.1869", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.4903", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WeakMember.4902" = type { %"class.blink::MemberBase.344" }
%"class.absl::optional.4903" = type { %"class.absl::optional_internal::optional_data.4904" }
%"class.absl::optional_internal::optional_data.4904" = type { %"class.absl::optional_internal::optional_data_base.4905" }
%"class.absl::optional_internal::optional_data_base.4905" = type { %"class.absl::optional_internal::optional_data_dtor_base.4906" }
%"class.absl::optional_internal::optional_data_dtor_base.4906" = type { i8, %union.anon.4907 }
%union.anon.4907 = type { %"class.blink::FloatSize" }
%"class.mojo::StructPtr.4211" = type { %"class.std::__1::unique_ptr.4212" }
%"class.std::__1::unique_ptr.4212" = type { %"class.std::__1::__compressed_pair.4213" }
%"class.std::__1::__compressed_pair.4213" = type { %"struct.std::__1::__compressed_pair_elem.4214" }
%"struct.std::__1::__compressed_pair_elem.4214" = type { %"class.blink::mojom::blink::ScrollIntoViewParams"* }
%"class.blink::mojom::blink::ScrollIntoViewParams" = type <{ %"class.mojo::InlinedStructPtr.4215", %"class.mojo::InlinedStructPtr.4215", i32, i8, [3 x i8], i32, i8, i8, [2 x i8], %"class.gfx::RectF", %"class.gfx::RectF", i8, [3 x i8] }>
%"class.mojo::InlinedStructPtr.4215" = type { %"class.blink::mojom::blink::ScrollAlignment", i32 }
%"class.blink::mojom::blink::ScrollAlignment" = type { i32, i32, i32 }
%"class.blink::HTMLFrameOwnerElement" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.1027", %"class.blink::Member.4219", %"struct.blink::FramePolicy", %"class.blink::Member.4221", i8, i8, [6 x i8] }>
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.4219" = type { %"class.blink::MemberBase.4220" }
%"class.blink::MemberBase.4220" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"class.blink::Member.4221" = type { %"class.blink::MemberBase.4222" }
%"class.blink::MemberBase.4222" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.4908", %"class.blink::Member.4910", %"class.blink::Member.4912", %"class.blink::Member.4931", %"class.blink::Member.4933" }
%"class.blink::Member.4908" = type { %"class.blink::MemberBase.4909" }
%"class.blink::MemberBase.4909" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.4910" = type { %"class.blink::MemberBase.4911" }
%"class.blink::MemberBase.4911" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.4912" = type { %"class.blink::MemberBase.4913" }
%"class.blink::MemberBase.4913" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.4916", %"class.blink::HeapHashSet.4925" }
%"class.blink::HeapVector.4916" = type { %"class.WTF::Vector.4919" }
%"class.WTF::Vector.4919" = type { %"class.WTF::VectorBuffer.4920" }
%"class.WTF::VectorBuffer.4920" = type { %"class.WTF::VectorBufferBase.4921" }
%"class.WTF::VectorBufferBase.4921" = type { %"class.blink::Member.4922"*, i32, i32 }
%"class.blink::Member.4922" = type { %"class.blink::MemberBase.4923" }
%"class.blink::MemberBase.4923" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.4925" = type { %"class.WTF::HashSet.4928" }
%"class.WTF::HashSet.4928" = type { %"class.WTF::HashTable.4929" }
%"class.WTF::HashTable.4929" = type <{ %"class.blink::Member.4922"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.4931" = type { %"class.blink::MemberBase.4932" }
%"class.blink::MemberBase.4932" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.4933" = type { %"class.blink::MemberBase.4934" }
%"class.blink::MemberBase.4934" = type { %"class.blink::HeapHashSet.4935"* }
%"class.blink::HeapHashSet.4935" = type opaque
%"struct.blink::NGPhysicalBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::Vector.4223" = type { %"class.WTF::VectorBuffer.4224" }
%"class.WTF::VectorBuffer.4224" = type { %"class.WTF::VectorBufferBase.4225" }
%"class.WTF::VectorBufferBase.4225" = type { %"class.blink::FloatQuad"*, i32, i32 }
%"class.blink::ObjectPaintInvalidator" = type { %"class.blink::LayoutObject"* }
%"class.blink::OptionListIterator" = type { %"class.blink::HTMLSelectElement"*, %"class.blink::HTMLOptionElement"* }
%"class.blink::HTMLSelectElement" = type <{ %"class.blink::HTMLFormControlElementWithState.base", [2 x i8], %"class.blink::TypeAheadDataSource", %"class.blink::HeapVector.4234", %"class.blink::TypeAhead", i32, [4 x i8], %"class.blink::Member.4254", %"class.blink::Member.4254", i8, i8, i8, i8, [4 x i8], %"class.blink::Member.4258", i32, [4 x i8] }>
%"class.blink::HTMLFormControlElementWithState.base" = type { %"class.blink::HTMLFormControlElement.base", i8 }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.4228", %"class.blink::Member.4230", %"class.blink::Member.4232", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.4228" = type { %"class.blink::MemberBase.4229" }
%"class.blink::MemberBase.4229" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.4230" = type { %"class.blink::MemberBase.4231" }
%"class.blink::MemberBase.4231" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type opaque
%"class.blink::Member.4232" = type { %"class.blink::MemberBase.4233" }
%"class.blink::MemberBase.4233" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::TypeAheadDataSource" = type { i32 (...)** }
%"class.blink::HeapVector.4234" = type { %"class.WTF::Vector.4237" }
%"class.WTF::Vector.4237" = type { %"class.WTF::VectorBuffer.4238" }
%"class.WTF::VectorBuffer.4238" = type { %"class.WTF::VectorBufferBase.4239" }
%"class.WTF::VectorBufferBase.4239" = type { %"class.blink::Member.4240"*, i32, i32 }
%"class.blink::Member.4240" = type { %"class.blink::MemberBase.4241" }
%"class.blink::MemberBase.4241" = type { %"class.blink::HTMLElement"* }
%"class.blink::TypeAhead" = type { %"class.blink::TypeAheadDataSource"*, %"class.absl::optional.2722", i16, [6 x i8], %"class.WTF::StringBuilder" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.4243, i32, i8, i8, [2 x i8] }>
%union.anon.4243 = type { %"class.WTF::Vector.4244" }
%"class.WTF::Vector.4244" = type { %"class.WTF::VectorBuffer.4245" }
%"class.WTF::VectorBuffer.4245" = type { %"class.WTF::VectorBufferBase.4246", [16 x i8] }
%"class.blink::Member.4254" = type { %"class.blink::MemberBase.4255" }
%"class.blink::MemberBase.4255" = type { %"class.blink::HTMLOptionElement"* }
%"class.blink::Member.4258" = type { %"class.blink::MemberBase.4259" }
%"class.blink::MemberBase.4259" = type { %"class.blink::SelectType"* }
%"class.blink::SelectType" = type opaque
%"class.blink::HTMLOptionElement" = type <{ %"class.blink::HTMLElement", %"class.blink::Member.4256", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::Member.4256" = type { %"class.blink::MemberBase.4257" }
%"class.blink::MemberBase.4257" = type { %"class.blink::OptionTextObserver"* }
%"class.blink::OptionTextObserver" = type opaque
%"class.blink::TextRun" = type <{ %union.anon.4936, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon.4936 = type { i8* }
%"class.WTF::HashSet.4937" = type opaque
%"class.blink::LayoutTheme" = type <{ i32 (...)**, %"class.WTF::RefCounted.4938", %"class.blink::Color", i8, [7 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.WTF::RefCounted.4938" = type { %"class.base::RefCounted.4939" }
%"class.base::RefCounted.4939" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTMLInputElement" = type <{ %"class.blink::TextControlElement", %"class.blink::ActiveScriptWrappable", %"class.WTF::AtomicString", %"class.WTF::String", i32, i16, [2 x i8], %"class.blink::Member.4262", %"class.blink::Member.4264", %"class.blink::Member.4266", %"class.blink::Member.4268", i32, [4 x i8] }>
%"class.blink::TextControlElement" = type { %"class.blink::HTMLFormControlElementWithState.base", %"class.blink::Member.4260", %"class.WTF::String", i8, i32, i32, i32, %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.4260" = type { %"class.blink::MemberBase.4261" }
%"class.blink::MemberBase.4261" = type { %"class.blink::TextControlInnerEditorElement"* }
%"class.blink::TextControlInnerEditorElement" = type <{ %"class.blink::HTMLDivElement", i8, [7 x i8] }>
%"class.blink::HTMLDivElement" = type { %"class.blink::HTMLElement" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::Member.4262" = type { %"class.blink::MemberBase.4263" }
%"class.blink::MemberBase.4263" = type { %"class.blink::InputType"* }
%"class.blink::InputType" = type opaque
%"class.blink::Member.4264" = type { %"class.blink::MemberBase.4265" }
%"class.blink::MemberBase.4265" = type { %"class.blink::InputTypeView"* }
%"class.blink::InputTypeView" = type opaque
%"class.blink::Member.4266" = type { %"class.blink::MemberBase.4267" }
%"class.blink::MemberBase.4267" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.blink::Member.4268" = type { %"class.blink::MemberBase.4269" }
%"class.blink::MemberBase.4269" = type { %"class.blink::ListAttributeTargetObserver"* }
%"class.blink::ListAttributeTargetObserver" = type opaque
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.1936", %"class.blink::Member.4941", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.4941" = type { %"class.blink::MemberBase.4942" }
%"class.blink::MemberBase.4942" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::Locale" = type <{ i32 (...)**, [12 x %"class.WTF::String"], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.blink::HTMLTextAreaElement" = type <{ %"class.blink::TextControlElement", i32, i32, i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.blink::HTMLOptGroupElement" = type { %"class.blink::HTMLElement" }
%"struct.blink::LayoutBox::LogicalExtentComputedValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::LayoutBox::ComputedMarginValues" }
%"struct.blink::LayoutBox::ComputedMarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::Vector.4270" = type { %"class.WTF::VectorBuffer.4271" }
%"class.WTF::VectorBuffer.4271" = type { %"class.WTF::VectorBufferBase.4272" }
%"class.WTF::VectorBufferBase.4272" = type { %"struct.blink::PhysicalRect"*, i32, i32 }
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.838", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"struct.blink::PaintInfo" = type opaque
%"class.blink::BoxPainter" = type { %"class.blink::LayoutBox"* }
%"class.blink::BackgroundImageGeometry" = type <{ %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"struct.blink::PhysicalSize", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize", i8, i8, i8, i8, [4 x i8] }>
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.4277", float, i8, %class.scoped_refptr.4279, %"class.WTF::HashCountedSet.4290", %"class.WTF::HashCountedSet.4290" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.4277" = type { %"class.blink::MemberBase.4278" }
%"class.blink::MemberBase.4278" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type opaque
%class.scoped_refptr.4279 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.4280", i8, %class.scoped_refptr.3151, %"class.blink::WeakPersistent.4282", i32, i8, %"class.std::__1::unique_ptr.4284" }
%"class.WTF::ThreadSafeRefCounted.4280" = type { %"class.base::RefCountedThreadSafe.4281" }
%"class.base::RefCountedThreadSafe.4281" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WeakPersistent.4282" = type { %"class.blink::PersistentBase.4283" }
%"class.blink::PersistentBase.4283" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr" }
%"class.std::__1::unique_ptr.4284" = type { %"class.std::__1::__compressed_pair.4285" }
%"class.std::__1::__compressed_pair.4285" = type { %"struct.std::__1::__compressed_pair_elem.4286" }
%"struct.std::__1::__compressed_pair_elem.4286" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet.4290" = type { %"class.WTF::HashMap.4291" }
%"class.WTF::HashMap.4291" = type { %"class.WTF::HashTable.4292" }
%"class.WTF::HashTable.4292" = type <{ %"struct.WTF::KeyValuePair.4295"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4295" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.blink::LayoutEmbeddedContent" = type <{ %"class.blink::LayoutReplaced", i32, [4 x i8] }>
%"class.blink::LayoutReplaced" = type { %"class.blink::LayoutBox", %"class.blink::LayoutSize" }
%"struct.blink::PaintInvalidatorContext" = type opaque
%"class.blink::BoxPaintInvalidator" = type { %"class.blink::LayoutBox"*, %"struct.blink::PaintInvalidatorContext"* }
%"class.blink::CustomScrollbar" = type <{ %"class.blink::Scrollbar", %"class.WTF::HashMap.4296", i8, [7 x i8] }>
%"class.WTF::HashMap.4296" = type { %"class.WTF::HashTable.4297" }
%"class.WTF::HashTable.4297" = type <{ %"struct.WTF::KeyValuePair.4300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4300" = type { i32, %"class.blink::LayoutCustomScrollbarPart"* }
%"class.blink::LayoutBox::NGPhysicalFragmentList" = type { %"class.WTF::Vector.3248"* }
%"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator" = type { %class.scoped_refptr.3247* }
%"class.blink::LayoutNGTableCell" = type <{ %"class.blink::LayoutNGBlockFlowMixin", %"class.blink::LayoutNGTableCellInterface", %"struct.blink::NGBoxStrut", i8, [7 x i8] }>
%"class.blink::LayoutNGBlockFlowMixin" = type { %"class.blink::LayoutNGMixin", %"class.std::__1::unique_ptr.4302" }
%"class.blink::LayoutNGMixin" = type { %"class.blink::LayoutBlockFlow" }
%"class.std::__1::unique_ptr.4302" = type { %"class.std::__1::__compressed_pair.4303" }
%"class.std::__1::__compressed_pair.4303" = type { %"struct.std::__1::__compressed_pair_elem.4304" }
%"struct.std::__1::__compressed_pair_elem.4304" = type { %"struct.blink::NGInlineNodeData"* }
%"struct.blink::NGInlineNodeData" = type <{ %"struct.blink::NGInlineItemsData", %"class.std::__1::unique_ptr.4345", %"class.std::__1::unique_ptr.4351", i8, [7 x i8] }>
%"struct.blink::NGInlineItemsData" = type { %"class.WTF::String", %"class.WTF::Vector.4305", %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.3300" }
%"class.WTF::Vector.4305" = type { %"class.WTF::VectorBuffer.4306" }
%"class.WTF::VectorBuffer.4306" = type { %"class.WTF::VectorBufferBase.4307" }
%"class.WTF::VectorBufferBase.4307" = type { %"class.blink::NGInlineItem"*, i32, i32 }
%"class.blink::NGInlineItem" = type { i32, i32, %class.scoped_refptr.4308, %"class.blink::LayoutObject"*, i32, i32 }
%class.scoped_refptr.4308 = type { %"class.blink::ShapeResult"* }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted.4309", float, %"class.blink::FloatRect", %"class.WTF::Vector.4311", %class.scoped_refptr.4317, %"class.std::__1::unique_ptr.4318", i32, i32, i32, [4 x i8] }>
%"class.WTF::RefCounted.4309" = type { %"class.base::RefCounted.4310" }
%"class.base::RefCounted.4310" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.4311" = type { %"class.WTF::VectorBuffer.4312" }
%"class.WTF::VectorBuffer.4312" = type { %"class.WTF::VectorBufferBase.4313" }
%"class.WTF::VectorBufferBase.4313" = type { %class.scoped_refptr.4314*, i32, i32 }
%class.scoped_refptr.4314 = type opaque
%class.scoped_refptr.4317 = type { %"class.blink::SimpleFontData"* }
%"class.std::__1::unique_ptr.4318" = type { %"class.std::__1::__compressed_pair.4319" }
%"class.std::__1::__compressed_pair.4319" = type { %"struct.std::__1::__compressed_pair_elem.4320" }
%"struct.std::__1::__compressed_pair_elem.4320" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.4321", i32, float }
%"class.WTF::Vector.4321" = type { %"class.WTF::VectorBuffer.4322" }
%"class.WTF::VectorBuffer.4322" = type { %"class.WTF::VectorBufferBase.4323" }
%"class.WTF::VectorBufferBase.4323" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"class.std::__1::unique_ptr.4331" = type { %"class.std::__1::__compressed_pair.4332" }
%"class.std::__1::__compressed_pair.4332" = type { %"struct.std::__1::__compressed_pair_elem.4333" }
%"struct.std::__1::__compressed_pair_elem.4333" = type { %"class.blink::NGInlineItemSegments"* }
%"class.blink::NGInlineItemSegments" = type { %"class.WTF::Vector.4334", %"class.WTF::Vector.4339" }
%"class.WTF::Vector.4334" = type { %"class.WTF::VectorBuffer.4335" }
%"class.WTF::VectorBuffer.4335" = type { %"class.WTF::VectorBufferBase.4336" }
%"class.WTF::VectorBufferBase.4336" = type { %"class.blink::NGInlineItemSegment"*, i32, i32 }
%"class.blink::NGInlineItemSegment" = type <{ i32, i16, [2 x i8] }>
%"class.WTF::Vector.4339" = type { %"class.WTF::VectorBuffer.2674" }
%"class.std::__1::unique_ptr.4345" = type { %"class.std::__1::__compressed_pair.4346" }
%"class.std::__1::__compressed_pair.4346" = type { %"struct.std::__1::__compressed_pair_elem.4347" }
%"struct.std::__1::__compressed_pair_elem.4347" = type { %"struct.blink::NGInlineItemsData"* }
%"class.std::__1::unique_ptr.4351" = type { %"class.std::__1::__compressed_pair.4352" }
%"class.std::__1::__compressed_pair.4352" = type { %"struct.std::__1::__compressed_pair_elem.4353" }
%"struct.std::__1::__compressed_pair_elem.4353" = type { %"struct.blink::SvgInlineNodeData"* }
%"struct.blink::SvgInlineNodeData" = type { %"class.WTF::Vector.4354", %"class.WTF::Vector.4360", %"class.WTF::Vector.4360", %"class.WTF::HashMap.4365" }
%"class.WTF::Vector.4354" = type { %"class.WTF::VectorBuffer.4355" }
%"class.WTF::VectorBuffer.4355" = type { %"class.WTF::VectorBufferBase.4356" }
%"class.WTF::VectorBufferBase.4356" = type { %"struct.std::__1::pair.4357"*, i32, i32 }
%"struct.std::__1::pair.4357" = type opaque
%"class.WTF::Vector.4360" = type { %"class.WTF::VectorBuffer.4361" }
%"class.WTF::VectorBuffer.4361" = type { %"class.WTF::VectorBufferBase.4362" }
%"class.WTF::VectorBufferBase.4362" = type { %"struct.blink::SvgTextContentRange"*, i32, i32 }
%"struct.blink::SvgTextContentRange" = type { %"class.blink::LayoutObject"*, i32, i32 }
%"class.WTF::HashMap.4365" = type { %"class.WTF::HashTable.4366" }
%"class.WTF::HashTable.4366" = type <{ %"struct.WTF::KeyValuePair.4369"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4369" = type opaque
%"class.blink::LayoutNGTableCellInterface" = type { i32 (...)** }
%"class.absl::optional.4376" = type { %"class.absl::optional_internal::optional_data.4377" }
%"class.absl::optional_internal::optional_data.4377" = type { %"class.absl::optional_internal::optional_data_base.4378" }
%"class.absl::optional_internal::optional_data_base.4378" = type { %"class.absl::optional_internal::optional_data_dtor_base.4379" }
%"class.absl::optional_internal::optional_data_dtor_base.4379" = type { i8, %union.anon.4380 }
%union.anon.4380 = type { %"struct.blink::NGFragmentGeometry" }
%"struct.blink::NGFragmentGeometry" = type { %"struct.blink::LogicalSize", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.blink::LayoutNGCustom" = type <{ %"class.blink::LayoutNGBlockFlow", i32, [4 x i8] }>
%"class.blink::LayoutNGBlockFlow" = type { %"class.blink::LayoutNGBlockFlowMixin" }
%"class.blink::LayoutNGTableInterface" = type { i32 (...)** }
%"class.blink::LayoutFlexibleBox" = type <{ %"class.blink::LayoutBlock.base", [6 x i8], %"class.WTF::HashMap.4382", %"class.WTF::HashSet.4387", %"class.blink::OrderIterator", i32, i32, i8, [7 x i8] }>
%"class.WTF::HashMap.4382" = type { %"class.WTF::HashTable.4383" }
%"class.WTF::HashTable.4383" = type <{ %"struct.WTF::KeyValuePair.4386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4386" = type opaque
%"class.WTF::HashSet.4387" = type { %"class.WTF::HashTable.4388" }
%"class.WTF::HashTable.4388" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::NGBoxFragmentBuilder" = type { %"class.blink::NGContainerFragmentBuilder.base", %"struct.blink::NGFragmentGeometry"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.absl::optional.4395", %"class.blink::NGFragmentItemsBuilder"*, %"class.blink::NGBlockNode", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.absl::optional.4446", i32, %"class.absl::optional.3274", %"class.absl::optional.3274", %"class.absl::optional.4451", %"class.absl::optional.4456", %class.scoped_refptr.4466, %"class.std::__1::unique_ptr.4484", %"class.absl::optional.4490", %"class.absl::optional.4490", %"class.std::__1::unique_ptr.4495", %"struct.blink::LogicalBoxSides", %class.scoped_refptr.1395, %"class.absl::optional.3667", %"class.std::__1::unique_ptr.4501", %"class.absl::optional.3780", %class.scoped_refptr.4507 }
%"class.blink::NGContainerFragmentBuilder.base" = type <{ %"class.blink::NGFragmentBuilder.base", [6 x i8], %"class.blink::NGLayoutInputNode", %"class.blink::NGConstraintSpace"*, %"class.blink::LayoutUnit", %"class.absl::optional.3274", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGExclusionSpace", %"class.WTF::Vector.4392", %"class.WTF::Vector.4392", %"class.WTF::Vector.4392", %"class.WTF::HashMap.4402", %"class.blink::NGUnpositionedListMarker", %"class.WTF::Vector.4407", %"class.WTF::Vector.4412", %class.scoped_refptr.4417, %class.scoped_refptr.3762, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"class.blink::NGFragmentBuilder.base" = type <{ %class.scoped_refptr, %"class.blink::WritingDirectionMode", [2 x i8], i32, %"struct.blink::LogicalSize", %"class.blink::LayoutObject"*, %class.scoped_refptr.4391, i8, i8 }>
%class.scoped_refptr.4391 = type { %"class.blink::NGBreakToken"* }
%"class.WTF::Vector.4392" = type { %"class.WTF::VectorBuffer.4393" }
%"class.WTF::VectorBuffer.4393" = type { %"class.WTF::VectorBufferBase.4394" }
%"class.WTF::VectorBufferBase.4394" = type { %"struct.blink::NGLogicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGLogicalOutOfFlowPositionedNode" = type <{ %"class.blink::LayoutBox"*, %"struct.blink::NGLogicalStaticPosition", %"class.blink::LayoutInline"*, i8, [3 x i8], %"class.blink::LayoutUnit", %"struct.blink::NGContainingBlock", %"struct.blink::NGContainingBlock", %"class.absl::optional.4395", [4 x i8] }>
%"struct.blink::NGLogicalStaticPosition" = type { %"struct.blink::LogicalOffset", i32, i32 }
%"struct.blink::NGContainingBlock" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalOffset", %class.scoped_refptr.3743 }
%"class.WTF::HashMap.4402" = type { %"class.WTF::HashTable.4403" }
%"class.WTF::HashTable.4403" = type <{ %"struct.WTF::KeyValuePair.4406"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4406" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGMulticolWithPendingOOFs" }
%"struct.blink::NGMulticolWithPendingOOFs" = type { %"struct.blink::LogicalOffset", %"struct.blink::NGContainingBlock" }
%"class.blink::NGUnpositionedListMarker" = type { %"class.blink::LayoutNGOutsideListMarker"* }
%"class.blink::LayoutNGOutsideListMarker" = type <{ %"class.blink::LayoutNGBlockFlowMixin", %"class.blink::ListMarker", [4 x i8] }>
%"class.blink::ListMarker" = type { i8, [3 x i8] }
%"class.WTF::Vector.4407" = type { %"class.WTF::VectorBuffer.4408" }
%"class.WTF::VectorBuffer.4408" = type { %"class.WTF::VectorBufferBase.4409", [64 x i8] }
%"class.WTF::VectorBufferBase.4409" = type { %"struct.blink::NGContainerFragmentBuilder::ChildWithOffset"*, i32, i32 }
%"struct.blink::NGContainerFragmentBuilder::ChildWithOffset" = type { %"struct.blink::LogicalOffset", %class.scoped_refptr.3743 }
%"class.WTF::Vector.4412" = type { %"class.WTF::VectorBuffer.4413" }
%"class.WTF::VectorBuffer.4413" = type { %"class.WTF::VectorBufferBase.4414" }
%"class.WTF::VectorBufferBase.4414" = type { %class.scoped_refptr.3746*, i32, i32 }
%class.scoped_refptr.4417 = type { %"class.blink::NGInlineBreakToken"* }
%"class.blink::NGInlineBreakToken" = type { %"class.blink::NGBreakToken.base", %class.scoped_refptr, i32, i32 }
%"class.absl::optional.4395" = type { %"class.absl::optional_internal::optional_data.4396" }
%"class.absl::optional_internal::optional_data.4396" = type { %"class.absl::optional_internal::optional_data_base.4397" }
%"class.absl::optional_internal::optional_data_base.4397" = type { %"class.absl::optional_internal::optional_data_dtor_base.4398" }
%"class.absl::optional_internal::optional_data_dtor_base.4398" = type { i8, %union.anon.4399 }
%union.anon.4399 = type { %"struct.blink::LogicalRect" }
%"struct.blink::LogicalRect" = type { %"struct.blink::LogicalOffset", %"struct.blink::LogicalSize" }
%"class.blink::NGFragmentItemsBuilder" = type <{ %"class.WTF::Vector.4418", %"class.WTF::String", %"class.WTF::String", %"class.blink::NGLogicalLineItems"*, %"class.blink::NGPhysicalFragment"*, %"class.WTF::HashMap.4441", %"class.blink::NGLogicalLineItems"*, %"class.blink::NGInlineNode", %"class.blink::WritingDirectionMode", i8, i8, i8, [3 x i8] }>
%"class.WTF::Vector.4418" = type { %"class.WTF::VectorBuffer.4419" }
%"class.WTF::VectorBuffer.4419" = type { %"class.WTF::VectorBufferBase.4420", [9216 x i8] }
%"class.WTF::VectorBufferBase.4420" = type { %"struct.blink::NGFragmentItemsBuilder::ItemWithOffset"*, i32, i32 }
%"struct.blink::NGFragmentItemsBuilder::ItemWithOffset" = type { %"class.blink::NGFragmentItem", %"struct.blink::LogicalOffset" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.4421, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.4421 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.4422, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.4422 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.4423", %class.scoped_refptr.4317, i32, i32, i32, i32, float, i32, [0 x %struct.anon.4425] }
%"class.WTF::RefCounted.4423" = type { %"class.base::RefCounted.4424" }
%"class.base::RefCounted.4424" = type { %"class.base::subtle::RefCountedBase" }
%struct.anon.4425 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.WTF::HashMap.4441" = type { %"class.WTF::HashTable.4442" }
%"class.WTF::HashTable.4442" = type <{ %"struct.WTF::KeyValuePair.4445"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4445" = type opaque
%"class.blink::NGLogicalLineItems" = type { %"class.WTF::Vector.4436" }
%"class.WTF::Vector.4436" = type { %"class.WTF::VectorBuffer.4437" }
%"class.WTF::VectorBuffer.4437" = type { %"class.WTF::VectorBufferBase.4438", [1920 x i8] }
%"class.WTF::VectorBufferBase.4438" = type { %"struct.blink::NGLogicalLineItem"*, i32, i32 }
%"struct.blink::NGLogicalLineItem" = type <{ %class.scoped_refptr.3247, %"class.blink::NGInlineItem"*, %class.scoped_refptr.4422, %"struct.blink::NGTextOffset", %"class.WTF::String", %"class.blink::LayoutObject"*, i32, [4 x i8], %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"struct.blink::LogicalRect", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::NGInlineNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.absl::optional.4446" = type { %"class.absl::optional_internal::optional_data.4447" }
%"class.absl::optional_internal::optional_data.4447" = type { %"class.absl::optional_internal::optional_data_base.4448" }
%"class.absl::optional_internal::optional_data_base.4448" = type { %"class.absl::optional_internal::optional_data_dtor_base.4449" }
%"class.absl::optional_internal::optional_data_dtor_base.4449" = type { i8, %union.anon.4450 }
%union.anon.4450 = type { i32 }
%"class.absl::optional.4451" = type { %"class.absl::optional_internal::optional_data.4452" }
%"class.absl::optional_internal::optional_data.4452" = type { %"class.absl::optional_internal::optional_data_base.4453" }
%"class.absl::optional_internal::optional_data_base.4453" = type { %"class.absl::optional_internal::optional_data_dtor_base.4454" }
%"class.absl::optional_internal::optional_data_dtor_base.4454" = type { i8, %union.anon.4455 }
%union.anon.4455 = type { %"struct.blink::PhysicalRect" }
%"class.absl::optional.4456" = type { %"class.absl::optional_internal::optional_data.4457" }
%"class.absl::optional_internal::optional_data.4457" = type { %"class.absl::optional_internal::optional_data_base.4458" }
%"class.absl::optional_internal::optional_data_base.4458" = type { %"class.absl::optional_internal::optional_data_dtor_base.4459" }
%"class.absl::optional_internal::optional_data_dtor_base.4459" = type { i8, %union.anon.4460 }
%union.anon.4460 = type { %"class.WTF::Vector.4461" }
%"class.WTF::Vector.4461" = type { %"class.WTF::VectorBuffer.4462" }
%"class.WTF::VectorBuffer.4462" = type { %"class.WTF::VectorBufferBase.4463" }
%"class.WTF::VectorBufferBase.4463" = type { %"struct.blink::NGTableFragmentData::ColumnGeometry"*, i32, i32 }
%"struct.blink::NGTableFragmentData::ColumnGeometry" = type { i32, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGLayoutInputNode" }
%class.scoped_refptr.4466 = type { %"class.blink::NGTableBorders"* }
%"class.blink::NGTableBorders" = type <{ %"class.WTF::RefCounted.4467", [4 x i8], %"class.WTF::Vector.4469", %"class.WTF::Vector.4474", i32, %"class.absl::optional.4479", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.4467" = type { %"class.base::RefCounted.4468" }
%"class.base::RefCounted.4468" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.4469" = type { %"class.WTF::VectorBuffer.4470" }
%"class.WTF::VectorBuffer.4470" = type { %"class.WTF::VectorBufferBase.4471" }
%"class.WTF::VectorBufferBase.4471" = type { %"struct.blink::NGTableBorders::Edge"*, i32, i32 }
%"struct.blink::NGTableBorders::Edge" = type { %class.scoped_refptr, i32, i32 }
%"class.WTF::Vector.4474" = type { %"class.WTF::VectorBuffer.4475" }
%"class.WTF::VectorBuffer.4475" = type { %"class.WTF::VectorBufferBase.4476" }
%"class.WTF::VectorBufferBase.4476" = type { %"struct.blink::NGTableBorders::Section"*, i32, i32 }
%"struct.blink::NGTableBorders::Section" = type { i32, i32 }
%"class.absl::optional.4479" = type { %"class.absl::optional_internal::optional_data.4480" }
%"class.absl::optional_internal::optional_data.4480" = type { %"class.absl::optional_internal::optional_data_base.4481" }
%"class.absl::optional_internal::optional_data_base.4481" = type { %"class.absl::optional_internal::optional_data_dtor_base.4482" }
%"class.absl::optional_internal::optional_data_dtor_base.4482" = type { i8, %union.anon.4483 }
%union.anon.4483 = type { %"struct.blink::NGBoxStrut" }
%"class.std::__1::unique_ptr.4484" = type { %"class.std::__1::__compressed_pair.4485" }
%"class.std::__1::__compressed_pair.4485" = type { %"struct.std::__1::__compressed_pair_elem.4486" }
%"struct.std::__1::__compressed_pair_elem.4486" = type { %"struct.blink::NGTableFragmentData::CollapsedBordersGeometry"* }
%"struct.blink::NGTableFragmentData::CollapsedBordersGeometry" = type { %"class.WTF::Vector.4196", %"class.WTF::Vector.4196" }
%"class.absl::optional.4490" = type { %"class.absl::optional_internal::optional_data.4491" }
%"class.absl::optional_internal::optional_data.4491" = type { %"class.absl::optional_internal::optional_data_base.4492" }
%"class.absl::optional_internal::optional_data_base.4492" = type { %"class.absl::optional_internal::optional_data_dtor_base.4493" }
%"class.absl::optional_internal::optional_data_dtor_base.4493" = type { i8, %union.anon.4494 }
%union.anon.4494 = type { i32 }
%"class.std::__1::unique_ptr.4495" = type { %"class.std::__1::__compressed_pair.4496" }
%"class.std::__1::__compressed_pair.4496" = type { %"struct.std::__1::__compressed_pair_elem.4497" }
%"struct.std::__1::__compressed_pair_elem.4497" = type { %"struct.blink::NGGridData"* }
%"struct.blink::LogicalBoxSides" = type { i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.4501" = type { %"class.std::__1::__compressed_pair.4502" }
%"class.std::__1::__compressed_pair.4502" = type { %"struct.std::__1::__compressed_pair_elem.4503" }
%"struct.std::__1::__compressed_pair_elem.4503" = type { %"struct.blink::NGMathMLPaintInfo"* }
%"struct.blink::NGMathMLPaintInfo" = type <{ i16, [6 x i8], %class.scoped_refptr.4422, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBoxStrut", %"class.absl::optional.3274", [4 x i8] }>
%class.scoped_refptr.4507 = type { %"class.blink::NGBlockBreakToken"* }
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::LayoutNGTableSectionInterface" = type { i32 (...)** }
%"class.blink::LayoutBox::MutableForPainting" = type { %"class.blink::LayoutObject::MutableForPainting" }
%"class.blink::LayoutObject::MutableForPainting" = type { %"class.blink::LayoutObject"* }
%"class.blink::NGInlineCursor" = type <{ %"class.blink::NGInlineCursorPosition", %"class.base::span", %"class.blink::NGFragmentItems"*, %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGInlineCursor::CulledInlineTraversal", %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit", i32, i32, [4 x i8] }>
%"class.blink::NGInlineCursorPosition" = type { %"class.blink::NGFragmentItem"*, %"class.base::CheckedContiguousIterator" }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGFragmentItem"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::NGFragmentItems" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, [0 x %"class.blink::NGFragmentItem"] }
%"class.blink::NGInlineCursor::CulledInlineTraversal" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutInline"*, i8, [7 x i8] }>
%"class.blink::LayoutNGTableRowInterface" = type { i32 (...)** }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.ui::Cursor" = type { i32, %class.scoped_refptr.4668, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr.4668 = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted.4669", [4 x i8] }>
%"class.base::RefCounted.4669" = type { %"class.base::subtle::RefCountedBase" }
%class.SkBitmap = type { %class.sk_sp.4670, %class.SkPixmap, %class.sk_sp.4673 }
%class.sk_sp.4670 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.4671, i32, i32 }
%class.sk_sp.4671 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.4672, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.4672 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.4673 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list.4885" }
%"class.std::__1::list.4885" = type { %"class.std::__1::__list_imp.4886" }
%"class.std::__1::__list_imp.4886" = type { %"struct.std::__1::__list_node_base.4887", %"class.std::__1::__compressed_pair.4888" }
%"struct.std::__1::__list_node_base.4887" = type { %"struct.std::__1::__list_node_base.4887"*, %"struct.std::__1::__list_node_base.4887"* }
%"class.std::__1::__compressed_pair.4888" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.4878", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.4878" = type { %"class.std::__1::__vector_base.4879" }
%"class.std::__1::__vector_base.4879" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.4880" }
%"class.std::__1::__compressed_pair.4880" = type { %"struct.std::__1::__compressed_pair_elem.4881" }
%"struct.std::__1::__compressed_pair_elem.4881" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.4788", i64, i64 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base.4887", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink9InlineBoxD0Ev = comdat any

$_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv = comdat any

$_ZNK5blink9LayoutBox18SpannerPlaceholderEv = comdat any

$_ZNK5blink13ComputedStyle12PaddingEqualERKS0_ = comdat any

$_ZN5blink16ShapeOutsideInfo10EnsureInfoERKNS_9LayoutBoxE = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZNK5blink13ComputedStyle27HasTransformRelatedPropertyEv = comdat any

$_ZN5blink12LayoutObject16ClearNeedsLayoutEv = comdat any

$_ZNK5blink9LayoutBox10ClientLeftEv = comdat any

$_ZNK5blink9LayoutBox9ClientTopEv = comdat any

$_ZNK5blink9LayoutBox11OffsetWidthEv = comdat any

$_ZNK5blink9LayoutBox12OffsetHeightEv = comdat any

$_ZNK5blink9LayoutBox18LayoutOverflowRectEv = comdat any

$_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv = comdat any

$_ZNK5blink9LayoutBox41ShouldComputeLogicalHeightFromAspectRatioEv = comdat any

$_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv = comdat any

$_ZNK5blink9FloatQuad20EnclosingBoundingBoxEv = comdat any

$_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv = comdat any

$_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject40CollapsedBorderAndCSSPaddingLogicalWidthEv = comdat any

$_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv = comdat any

$_ZNK5blink11LayoutBlock21StartOffsetForContentEv = comdat any

$_ZNK5blink11LayoutBlock19EndOffsetForContentEv = comdat any

$_ZNK5blink15LayoutBlockFlow38AvailableLogicalWidthForAvoidingFloatsENS_10LayoutUnitES1_ = comdat any

$_ZN5blink9LayoutBox15SetLogicalWidthENS_10LayoutUnitE = comdat any

$_ZNK5blink9LayoutBox49ShouldComputeLogicalWidthFromAspectRatioAndInsetsEv = comdat any

$_ZNK5blink9LayoutBox20ContentLogicalHeightEv = comdat any

$_ZN5blink9LayoutBox16SetLogicalHeightENS_10LayoutUnitE = comdat any

$_ZNK5blink9LayoutBox25LogicalTopScrollbarHeightEv = comdat any

$_ZN5blink9LayoutBox21AddSelfVisualOverflowERKNS_12PhysicalRectE = comdat any

$_ZNK5blink9LayoutBox19ClientLogicalBottomEv = comdat any

$_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE = comdat any

$_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE = comdat any

$_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv = comdat any

$_ZNK5blink9InlineBox11IsLineBreakEv = comdat any

$_ZNK5blink9InlineBox15IsInlineFlowBoxEv = comdat any

$_ZNK5blink9InlineBox15IsInlineTextBoxEv = comdat any

$_ZNK5blink9InlineBox15IsRootInlineBoxEv = comdat any

$_ZNK5blink9InlineBox18IsSVGInlineTextBoxEv = comdat any

$_ZNK5blink9InlineBox18IsSVGInlineFlowBoxEv = comdat any

$_ZNK5blink9InlineBox18IsSVGRootInlineBoxEv = comdat any

$_ZNK5blink9InlineBox20VirtualLogicalHeightEv = comdat any

$_ZN5blink9InlineBox14SetConstructedEv = comdat any

$_ZNK5blink9InlineBox6IsLeafEv = comdat any

$_ZN5blink9InlineBox15ClearTruncationEv = comdat any

$_ZN5blink9InlineBox9MarkDirtyEv = comdat any

$_ZN5blink12LayoutObject15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15CanHaveChildrenEv = comdat any

$_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink12LayoutObject13IsLayoutBlockEv = comdat any

$_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink12LayoutObject19VirtualContinuationEv = comdat any

$_ZNK5blink12LayoutObject13HoverAncestorEv = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink12LayoutObject6lengthEv = comdat any

$_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ = comdat any

$_ZNK5blink9LayoutBox17BorderBoundingBoxEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10PaddingTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12PaddingRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject9BorderTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12BorderBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10BorderLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11BorderRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv = comdat any

$_ZNK5blink9LayoutBox9MarginTopEv = comdat any

$_ZNK5blink9LayoutBox12MarginBottomEv = comdat any

$_ZNK5blink9LayoutBox10MarginLeftEv = comdat any

$_ZNK5blink9LayoutBox11MarginRightEv = comdat any

$_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE = comdat any

$_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv = comdat any

$_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv = comdat any

$_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv = comdat any

$_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv = comdat any

$_ZNK5blink9LayoutBox20CollapsedMarginAfterEv = comdat any

$_ZNK5blink9LayoutBox23IsInSelfHitTestingPhaseENS_13HitTestActionE = comdat any

$_ZNK5blink9LayoutBox13IntrinsicSizeEv = comdat any

$_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv = comdat any

$_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowXEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowYEv = comdat any

$_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE = comdat any

$_ZNK5blink9LayoutBox20FirstLineBoxBaselineEv = comdat any

$_ZNK5blink9LayoutBox19InlineBlockBaselineENS_17LineDirectionModeE = comdat any

$_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv = comdat any

$_ZNK5blink9LayoutBox32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE = comdat any

$_ZNK5blink9LayoutBox22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE = comdat any

$_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE5eraseEPKSC_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE8RehashToEPSC_jSN_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

$_ZNK5blink10LengthSizeeqERKS0_ = comdat any

$_ZNK3WTF7HashMapIPKN5blink9LayoutBoxENSt3__110unique_ptrINS1_16ShapeOutsideInfoENS5_14default_deleteIS7_EEEENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENSD_ISA_EENS_18PartitionAllocatorEE2atERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISK_SF_SL_EES4_SB_EENS_18HashTableAddResultISM_SC_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE6ExpandEPSC_ = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN5blink17NGConstraintSpace8RareDataC2ERKS1_ = comdat any

$_ZN13scoped_refptrIKN5blink26NGTableConstraintSpaceDataEED2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink17NGShapeExclusionsD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZNK5blink13ComputedStyle27HasStackingGroupingPropertyEb = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17LayoutBoxRareDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17LayoutBoxRareDataEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17LayoutBoxRareDataEE7GetNameEPKv = comdat any

$_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZNK5blink15LayoutBlockFlow35LogicalRightOffsetForAvoidingFloatsENS_10LayoutUnitES1_ = comdat any

$_ZNK5blink9LayoutBox19ContentLogicalWidthEv = comdat any

$_ZN5blink17DisplayItemClientD2Ev = comdat any

$_ZN5blink24NGExclusionSpaceInternal28MoveAndUpdateDerivedGeometryERKS0_ = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink11NGExclusionEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE = comdat any

$_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE = comdat any

$_ZNK5blink14LineLayoutItem5StyleEb = comdat any

$_ZNK5blink20BorderImageLengthBox7NonZeroEv = comdat any

$_ZN5blink10TraceTraitINS_17CustomLayoutChildEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12PhysicalRectEEEmm = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_ = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14NGLayoutResultEEEEmm = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZTVN5blink9InlineBoxE = comdat any

$_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map = comdat any

$_ZGVZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map = comdat any

$_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = comdat any

$_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = comdat any

$_ZZN5blink11GCInfoTraitINS_17LayoutBoxRareDataEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17LayoutBoxRareDataEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink9LayoutBoxE = hidden unnamed_addr constant { [197 x i8*], [7 x i8*] } { [197 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBoxD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBoxD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i8*, i32)* @_ZN5blink9LayoutBox12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject8AddChildEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject11RemoveChildEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink9LayoutBox5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*)* @_ZN5blink20LayoutBoxModelObject20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1989"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.WTF::Vector.4223"*, i32)* @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink9LayoutBox14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.WTF::Vector.4270"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink9LayoutBox15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink9LayoutBox15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i8)* @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink9LayoutBox15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink9LayoutBox14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i1)* @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ to i8*), i8* bitcast (%"class.blink::LayoutBlock"* (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11OffsetWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12OffsetHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LayerTypeRequiredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15UpdateFromStyleEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17BorderBoundingBoxEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject9BorderTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11BorderRightEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9MarginTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12MarginBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10MarginLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11MarginRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i1, i32, i32)* @_ZNK5blink9LayoutBox10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32, i1, i32, i32)* @_ZNK5blink9LayoutBox16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)* @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.4223"*, i32)* @_ZNK5blink20LayoutBoxModelObject20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.4223"*)* @_ZNK5blink20LayoutBoxModelObject17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LocationContainerEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox14HasTopOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox15HasLeftOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox17UpdateAfterLayoutEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11ScrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12ScrollHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox20CollapsedMarginAfterEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox23IsInSelfHitTestingPhaseENS_13HitTestActionE to i8*), i8* bitcast (%"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15CreateInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10BreakAfterEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11BreakBeforeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13StartPageNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11EndPageNameEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox18UpdateLogicalWidthEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13IntrinsicSizeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)* @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowXEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowYEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox20FirstLineBoxBaselineEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox19InlineBlockBaselineENS_17LineDirectionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33NeedsPreferredWidthsRecalculationEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*)* @_ZNK5blink9LayoutBox32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox23ComputeOverflowClipAxesEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)* @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZThn8_N5blink9LayoutBoxD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZThn8_N5blink9LayoutBoxD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*)] }, align 8
@_ZN5blink26layout_invalidation_reason12kStyleChangeE = external constant [0 x i8], align 1
@_ZN5blink26layout_invalidation_reason12kGridChangedE = external constant [0 x i8], align 1
@_ZN5blink16input_type_names5kFileE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink16input_type_names6kRangeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/core/layout/layout_box.cc\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"IsInLayoutNGInlineFormattingContext()\00", align 1
@.str.2 = private unnamed_addr constant [49 x i8] c"!rare_data_ || !rare_data_->spanner_placeholder_\00", align 1
@_ZTVN5blink9InlineBoxE = linkonce_odr hidden unnamed_addr constant { [35 x i8*] } { [35 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DisplayItemClient"*)* @_ZN5blink17DisplayItemClientD2Ev to i8*), i8* bitcast (void (%"class.blink::InlineBox"*)* @_ZN5blink9InlineBoxD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::DisplayItemClient"*)* @_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv to i8*), i8* bitcast (void (%"class.blink::InlineBox"*)* @_ZN5blink9InlineBox7DestroyEv to i8*), i8* bitcast (void (%"class.blink::InlineBox"*)* @_ZN5blink9InlineBox10DeleteLineEv to i8*), i8* bitcast (void (%"class.blink::InlineBox"*)* @_ZN5blink9InlineBox11ExtractLineEv to i8*), i8* bitcast (void (%"class.blink::InlineBox"*)* @_ZN5blink9InlineBox10AttachLineEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox11IsLineBreakEv to i8*), i8* bitcast (void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)* @_ZN5blink9InlineBox4MoveERKNS_10LayoutSizeE to i8*), i8* bitcast (void (%"class.blink::InlineBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, i32, i32)* @_ZNK5blink9InlineBox5PaintERKNS_9PaintInfoERKNS_14PhysicalOffsetENS_10LayoutUnitES7_ to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32, i32)* @_ZN5blink9InlineBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_10LayoutUnitES9_ to i8*), i8* bitcast (i8* (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox7BoxNameEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox15IsInlineFlowBoxEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox15IsInlineTextBoxEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox15IsRootInlineBoxEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox18IsSVGInlineTextBoxEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox18IsSVGInlineFlowBoxEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox18IsSVGRootInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox20VirtualLogicalHeightEv to i8*), i8* bitcast (void (%"class.blink::InlineBox"*)* @_ZN5blink9InlineBox14SetConstructedEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox6IsLeafEv to i8*), i8* bitcast (i32 (%"class.blink::InlineBox"*, i32)* @_ZNK5blink9InlineBox16BaselinePositionENS_12FontBaselineE to i8*), i8* bitcast (i32 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox10LineHeightEv to i8*), i8* bitcast (i32 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox14CaretMinOffsetEv to i8*), i8* bitcast (i32 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox14CaretMaxOffsetEv to i8*), i8* bitcast (void (%"class.blink::InlineBox"*)* @_ZN5blink9InlineBox15ClearTruncationEv to i8*), i8* bitcast (void (%"class.blink::InlineBox"*)* @_ZN5blink9InlineBox9MarkDirtyEv to i8*), i8* bitcast (void (%"class.blink::InlineBox"*)* @_ZN5blink9InlineBox14DirtyLineBoxesEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*)* @_ZNK5blink9InlineBox10IsSelectedEv to i8*), i8* bitcast (i1 (%"class.blink::InlineBox"*, i1, i32, i32)* @_ZNK5blink9InlineBox22CanAccommodateEllipsisEbNS_10LayoutUnitES1_ to i8*), i8* bitcast (i32 (%"class.blink::InlineBox"*, i1, i32, i32, i32, %"class.blink::LayoutUnit"*, %"class.blink::InlineBox"**, i32)* @_ZN5blink9InlineBox16PlaceEllipsisBoxEbNS_10LayoutUnitES1_S1_RS1_PPS0_S1_ to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase40is_layout_ng_fragment_traversal_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase41is_layout_ng_block_fragmentation_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase30is_layout_ng_printing_enabled_E = external local_unnamed_addr global i8, align 1
@_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map = linkonce_odr hidden global %"class.WTF::StaticSingleton" zeroinitializer, comdat, align 8
@_ZGVZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map = linkonce_odr hidden global i64 0, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink9LayoutBoxENSt3__110unique_ptrINS2_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEEEEPKcv = private unnamed_addr constant [191 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::LayoutBox *, std::__1::unique_ptr<blink::ShapeOutsideInfo, std::__1::default_delete<blink::ShapeOutsideInfo> > >]\00", align 1
@_ZN5blink10html_names8kBodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.3 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.5 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E = external local_unnamed_addr global i8, align 1
@.str.8 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink20shadow_element_names13kIdSpinButtonE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kOptgroupTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink24PaintLayerScrollableArea21FreezeScrollbarsScope6count_E = external local_unnamed_addr global i32, align 4
@_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = linkonce_odr hidden local_unnamed_addr global %"class.blink::IntRect" zeroinitializer, comdat, align 4
@_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect = linkonce_odr hidden global i64 0, comdat, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase29is_transform_interop_enabled_E = external local_unnamed_addr global i8, align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17LayoutBoxRareDataEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutBoxRareData]\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17LayoutBoxRareDataEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17LayoutBoxRareDataEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17LayoutBoxRareDataEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17LayoutBoxRareDataEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17LayoutBoxRareDataEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.12 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase40is_composite_bg_color_animation_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase30is_layout_ng_replaced_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase44is_layout_ng_layout_overflow_recalc_enabled_E = external local_unnamed_addr global i8, align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.14 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.15 = private unnamed_addr constant [58 x i8] c"../../third_party/blink/renderer/core/layout/layout_box.h\00", align 1
@.str.16 = private unnamed_addr constant [39 x i8] c"!IsInLayoutNGInlineFormattingContext()\00", align 1
@.str.17 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1
@_ZN5blink26layout_invalidation_reason21kAnonymousBlockChangeE = external constant [0 x i8], align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashSetIPN5blink9LayoutBoxENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [174 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::HashSet<blink::LayoutBox *, WTF::PtrHash<blink::LayoutBox>, WTF::HashTraits<blink::LayoutBox *>, WTF::PartitionAllocator>]\00", align 1
@_ZN5blink10html_names10kLegendTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.20 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.21 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatQuadEEEPKcv = private unnamed_addr constant [64 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FloatQuad]\00", align 1
@_ZN5blink10html_names10kSelectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kInputTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kTextareaTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12PhysicalRectEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PhysicalRect]\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink14NGLayoutResultEEEEPKcv = private unnamed_addr constant [90 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<const blink::NGLayoutResult>]\00", align 1
@_ZN5blink10html_names6kOlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kUlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names11kMarqueeTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names10kButtonTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kFieldsetTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names7kImgTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutBox *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink19BoxLayoutExtraInputC1ERNS_9LayoutBoxE = hidden unnamed_addr alias void (%"struct.blink::BoxLayoutExtraInput"*, %"class.blink::LayoutBox"*), void (%"struct.blink::BoxLayoutExtraInput"*, %"class.blink::LayoutBox"*)* @_ZN5blink19BoxLayoutExtraInputC2ERNS_9LayoutBoxE
@_ZN5blink19BoxLayoutExtraInputD1Ev = hidden unnamed_addr alias void (%"struct.blink::BoxLayoutExtraInput"*), void (%"struct.blink::BoxLayoutExtraInput"*)* @_ZN5blink19BoxLayoutExtraInputD2Ev
@_ZN5blink17LayoutBoxRareDataC1Ev = hidden unnamed_addr alias void (%"struct.blink::LayoutBoxRareData"*), void (%"struct.blink::LayoutBoxRareData"*)* @_ZN5blink17LayoutBoxRareDataC2Ev
@_ZN5blink9LayoutBoxD1Ev = hidden unnamed_addr alias void (%"class.blink::LayoutBox"*), void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBoxD2Ev

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9InlineBoxD0Ev(%"class.blink::InlineBox"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::InlineBox"* %0 to i8*
  tail call void @_ZN5blink9InlineBoxdlEPv(i8* %2) #20
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9InlineBoxdlEPv(i8*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink19BoxLayoutExtraInputC2ERNS_9LayoutBoxE(%"struct.blink::BoxLayoutExtraInput"*, %"class.blink::LayoutBox"* dereferenceable(216)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %0, i64 0, i32 0
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %3, align 8
  %4 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %0, i64 0, i32 3
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %0, i64 0, i32 4
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %0, i64 0, i32 5
  store i8 0, i8* %8, align 2
  %9 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %0, i64 0, i32 6, i32 0
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %0, i64 0, i32 7, i32 0
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %0, i64 0, i32 8, i32 0
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 10
  store %"struct.blink::BoxLayoutExtraInput"* %0, %"struct.blink::BoxLayoutExtraInput"** %12, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink19BoxLayoutExtraInputD2Ev(%"struct.blink::BoxLayoutExtraInput"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %0, i64 0, i32 0
  %3 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %3, i64 0, i32 10
  store %"struct.blink::BoxLayoutExtraInput"* null, %"struct.blink::BoxLayoutExtraInput"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17LayoutBoxRareDataC2Ev(%"struct.blink::LayoutBoxRareData"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %0, i64 0, i32 0
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %2, align 8
  %3 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %0, i64 0, i32 1, i32 0
  store i32 -64, i32* %3, align 4
  %4 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %0, i64 0, i32 2, i32 0
  store i32 -64, i32* %4, align 4
  %5 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 8
  %7 = and i8 %6, -16
  store i8 %7, i8* %5, align 8
  %8 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %0, i64 0, i32 4, i32 0
  %9 = bitcast i32* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 68, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17LayoutBoxRareData5TraceEPNS_7VisitorE(%"struct.blink::LayoutBoxRareData"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %0, i64 0, i32 13
  %4 = bitcast %"class.blink::Member.3294"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17CustomLayoutChildEE5TraceEPNS_7VisitorEPKv) #20
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBoxC2EPNS_13ContainerNodeE(%"class.blink::LayoutBox"*, %"class.blink::ContainerNode"*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  tail call void @_ZN5blink20LayoutBoxModelObjectC2EPNS_13ContainerNodeE(%"class.blink::LayoutBoxModelObject"* %3, %"class.blink::ContainerNode"* %1) #20
  %4 = bitcast %"class.blink::LayoutBox"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [197 x i8*], [7 x i8*] }, { [197 x i8*], [7 x i8*] }* @_ZTVN5blink9LayoutBoxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [197 x i8*], [7 x i8*] }, { [197 x i8*], [7 x i8*] }* @_ZTVN5blink9LayoutBoxE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 4, i32 0
  %7 = bitcast %"class.blink::LayoutRectOutsets"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 40, i1 false)
  %8 = bitcast i32* %6 to <4 x i32>*
  store <4 x i32> <i32 -64, i32 0, i32 0, i32 -2147483648>, <4 x i32>* %8, align 4
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 7, i32 0
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 1, i64 0
  %12 = bitcast %"class.WTF::Vector.3248"* %10 to i8**
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  store i32 1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = bitcast %"class.std::__1::unique_ptr.3253"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 40, i1 false)
  %19 = load i96, i96* %17, align 4
  %20 = or i96 %19, 67108864
  store i96 %20, i96* %17, align 4
  %21 = icmp eq %"class.blink::ContainerNode"* %1, null
  br i1 %21, label %42, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 48
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %42

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %29 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kLegendTagE, align 8
  %30 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 1, i32 2
  %33 = bitcast %"class.blink::Member.318"* %32 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %31, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %36, %38
  br i1 %39, label %40, label %42

40:                                               ; preds = %27
  %41 = or i96 %19, 73786976294905315328
  store i96 %41, i96* %17, align 4
  br label %42

42:                                               ; preds = %22, %2, %40, %27
  ret void
}

declare void @_ZN5blink20LayoutBoxModelObjectC2EPNS_13ContainerNodeE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::ContainerNode"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBoxD2Ev(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.blink::LayoutBox"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [197 x i8*], [7 x i8*] }, { [197 x i8*], [7 x i8*] }* @_ZTVN5blink9LayoutBoxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [197 x i8*], [7 x i8*] }, { [197 x i8*], [7 x i8*] }* @_ZTVN5blink9LayoutBoxE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 1, i32 0
  %4 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %5 = icmp eq %"class.blink::PersistentNode"* %4, null
  br i1 %5, label %25, label %6

6:                                                ; preds = %1
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #20
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #20
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #20
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %17, align 8
  %19 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %3, align 8
  %20 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %18, i64 0, i32 0, i32 0
  %21 = bitcast %"class.blink::PersistentRegion"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.blink::PersistentNode"* %19 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %19, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %24, align 8
  store %"class.blink::PersistentNode"* %19, %"class.blink::PersistentNode"** %20, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %3, align 8
  br label %25

25:                                               ; preds = %1, %13
  %26 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %27 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %26, align 8
  store %"struct.blink::BoxOverflowModel"* null, %"struct.blink::BoxOverflowModel"** %26, align 8
  %28 = icmp eq %"struct.blink::BoxOverflowModel"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @free(i8* %30) #20
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %32, i64 0, i32 0, i32 0, i32 0
  br i1 %35, label %57, label %37, !prof !2

37:                                               ; preds = %31
  %38 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %36, align 8
  %39 = zext i32 %34 to i64
  %40 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %38, i64 %39
  br label %41

41:                                               ; preds = %53, %37
  %42 = phi %class.scoped_refptr.3247* [ %54, %53 ], [ %38, %37 ]
  %43 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %42, i64 0, i32 0
  %44 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %43, align 8
  %45 = icmp eq %"class.blink::NGLayoutResult"* %44, null
  br i1 %45, label %53, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %47) #20
  %48 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %44) #20
  %52 = bitcast %"class.blink::NGLayoutResult"* %44 to i8*
  tail call void @free(i8* %52) #20
  br label %53

53:                                               ; preds = %51, %46, %41
  %54 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %42, i64 1
  %55 = icmp eq %class.scoped_refptr.3247* %54, %40
  br i1 %55, label %56, label %41

56:                                               ; preds = %53
  store i32 0, i32* %33, align 4
  br label %57

57:                                               ; preds = %56, %31
  %58 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %36, align 8
  %59 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 1, i64 0
  %60 = bitcast i8* %59 to %class.scoped_refptr.3247*
  %61 = icmp eq %class.scoped_refptr.3247* %58, %60
  br i1 %61, label %64, label %62, !prof !3

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %32, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3249"* %63, %class.scoped_refptr.3247* %58) #20
  br label %64

64:                                               ; preds = %57, %62
  store %class.scoped_refptr.3247* null, %class.scoped_refptr.3247** %36, align 8
  %65 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 7, i32 0
  %66 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %65, align 8
  %67 = icmp eq %"class.blink::NGLayoutResult"* %66, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %66, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %69) #20
  %70 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %66, i64 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %75

73:                                               ; preds = %68
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %66) #20
  %74 = bitcast %"class.blink::NGLayoutResult"* %66 to i8*
  tail call void @free(i8* %74) #20
  br label %75

75:                                               ; preds = %64, %68, %73
  %76 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  tail call void @_ZN5blink20LayoutBoxModelObjectD2Ev(%"class.blink::LayoutBoxModelObject"* %76) #20
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink20LayoutBoxModelObjectD2Ev(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink9LayoutBoxD1Ev(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 -1, i32 12, i32 0, i32 1
  %3 = bitcast %"class.blink::PersistentNodePtr.269"* %2 to %"class.blink::LayoutBox"*
  tail call void @_ZN5blink9LayoutBoxD2Ev(%"class.blink::LayoutBox"* %3) #20
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBoxD0Ev(%"class.blink::LayoutBox"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #21
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZThn8_N5blink9LayoutBoxD0Ev(%"class.blink::LayoutBox"* nocapture readnone) unnamed_addr #6 align 2 {
  tail call void @llvm.trap() #21
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox17LayerTypeRequiredEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = lshr i160 %7, 80
  %9 = trunc i160 %8 to i32
  %10 = and i32 %9, 7
  %11 = icmp eq i32 %10, 4
  %12 = and i160 %7, 128849018880
  %13 = icmp eq i160 %12, 42949672960
  %14 = and i1 %13, %11
  %15 = icmp eq i32 %10, 3
  %16 = or i1 %15, %14
  br i1 %16, label %17, label %161

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %21, i64 0, i32 39
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 67108864
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %161

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %30, i64 0, i32 45
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 5
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %78, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %37 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %36 to i96*
  %38 = load i96, i96* %37, align 4
  %39 = and i96 %38, 1207959552
  %40 = icmp eq i96 %39, 134217728
  br i1 %40, label %78, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, i64 92
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* %2, i32 43) #20
  br i1 %46, label %78, label %47

47:                                               ; preds = %41
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %42, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, i64 92
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::LayoutObject"* %2, i32 46) #20
  br i1 %51, label %72, label %52

52:                                               ; preds = %47
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %42, align 8
  %54 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, i64 92
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.blink::LayoutObject"* %2, i32 48) #20
  br i1 %56, label %72, label %57

57:                                               ; preds = %52
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %42, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, i64 92
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::LayoutObject"* %2, i32 45) #20
  br i1 %61, label %72, label %62

62:                                               ; preds = %57
  %63 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %42, align 8
  %64 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %63, i64 92
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.blink::LayoutObject"* %2, i32 49) #20
  br i1 %66, label %72, label %67

67:                                               ; preds = %62
  %68 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %42, align 8
  %69 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %68, i64 92
  %70 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %69, align 8
  %71 = tail call zeroext i1 %70(%"class.blink::LayoutObject"* %2, i32 50) #20
  br i1 %71, label %72, label %161

72:                                               ; preds = %47, %52, %57, %62, %67
  %73 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %74 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %73, align 8
  %75 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %74, i64 24
  %76 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %75, align 8
  %77 = tail call zeroext i1 %76(%"class.blink::LayoutObject"* %2) #20
  br i1 %77, label %161, label %78

78:                                               ; preds = %35, %26, %41, %72
  %79 = bitcast %"class.blink::ComputedStyle"** %3 to %"class.blink::ComputedStyleBase"**
  %80 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %80, i64 0, i32 3, i32 0, i32 0
  %82 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %82, i64 0, i32 2, i32 0, i32 0
  %84 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %84, i64 0, i32 13
  %86 = bitcast [3 x i8]* %85 to i24*
  %87 = load i24, i24* %86, align 8
  %88 = and i24 %87, 4194304
  %89 = icmp eq i24 %88, 0
  br i1 %89, label %161, label %90

90:                                               ; preds = %78
  %91 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %82, i64 0, i32 3, i32 0, i32 0
  %92 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %92, i64 0, i32 1, i32 0, i32 0
  %94 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %94, i64 0, i32 2
  %96 = load i8, i8* %95, align 4
  %97 = and i8 %96, 3
  %98 = icmp eq i8 %97, 3
  br i1 %98, label %144, label %99

99:                                               ; preds = %90
  %100 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_layout_ng_printing_enabled_E, align 1, !range !4
  %101 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase41is_layout_ng_block_fragmentation_enabled_E, align 1
  %102 = or i8 %101, %100
  %103 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_layout_ng_fragment_traversal_enabled_E, align 1
  %104 = or i8 %102, %103
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %161, label %106, !prof !3

106:                                              ; preds = %99
  %107 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %108 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %107, align 8
  %109 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %108, i64 28
  %110 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.blink::LayoutObject"* %2) #20
  br i1 %111, label %118, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %114 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %113 to i96*
  %115 = load i96, i96* %114, align 4
  %116 = and i96 %115, 335544320
  %117 = icmp eq i96 %116, 268435456
  br i1 %117, label %118, label %161

118:                                              ; preds = %112, %106
  %119 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %120 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %119, align 8
  %121 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %120, i64 92
  %122 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %121, align 8
  %123 = tail call zeroext i1 %122(%"class.blink::LayoutObject"* %2, i32 39) #20
  br i1 %123, label %161, label %124

124:                                              ; preds = %118
  %125 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %119, align 8
  %126 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %125, i64 92
  %127 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %126, align 8
  %128 = tail call zeroext i1 %127(%"class.blink::LayoutObject"* %2, i32 47) #20
  br i1 %128, label %161, label %129

129:                                              ; preds = %124
  %130 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %119, align 8
  %131 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %130, i64 92
  %132 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %131, align 8
  %133 = tail call zeroext i1 %132(%"class.blink::LayoutObject"* %2, i32 51) #20
  br i1 %133, label %161, label %134

134:                                              ; preds = %129
  %135 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %119, align 8
  %136 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %135, i64 92
  %137 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %136, align 8
  %138 = tail call zeroext i1 %137(%"class.blink::LayoutObject"* %2, i32 34) #20
  br i1 %138, label %161, label %139

139:                                              ; preds = %134
  %140 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %119, align 8
  %141 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %140, i64 92
  %142 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %141, align 8
  %143 = tail call zeroext i1 %142(%"class.blink::LayoutObject"* %2, i32 35) #20
  br i1 %143, label %161, label %144

144:                                              ; preds = %90, %139
  %145 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %146 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %145 to i96*
  %147 = load i96, i96* %146, align 4
  %148 = trunc i96 %147 to i64
  %149 = icmp slt i64 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %144
  %151 = and i96 %147, 8589934592
  %152 = icmp eq i96 %151, 0
  br i1 %152, label %153, label %161

153:                                              ; preds = %150
  %154 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %155 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %154, i64 0, i32 0, i32 9
  %156 = bitcast [20 x i8]* %155 to i160*
  %157 = load i160, i160* %156, align 8
  %158 = and i160 %157, 144115188075856000
  %159 = icmp eq i160 %158, 144115188075856000
  %160 = zext i1 %159 to i32
  ret i32 %160

161:                                              ; preds = %150, %129, %134, %139, %124, %118, %112, %99, %67, %17, %1, %72, %78, %144
  %162 = phi i32 [ 1, %144 ], [ 1, %78 ], [ 1, %72 ], [ 2, %150 ], [ 1, %1 ], [ 1, %17 ], [ 1, %67 ], [ 1, %99 ], [ 1, %112 ], [ 1, %118 ], [ 1, %124 ], [ 1, %139 ], [ 1, %134 ], [ 1, %129 ]
  ret i32 %162
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox15WillBeDestroyedEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.blink::LayoutBox"*, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %6 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %5, align 8
  %7 = icmp eq %"struct.blink::LayoutBoxRareData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %6, i64 0, i32 2, i32 0
  store i32 -64, i32* %9, align 4
  %10 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %5, align 8
  %11 = icmp eq %"struct.blink::LayoutBoxRareData"* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %1, %8
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0
  %14 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %13, i64 0, i32 0
  br label %56

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %10, i64 0, i32 1, i32 0
  store i32 -64, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %18 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0
  %20 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %19, i64 0, i32 0
  %21 = icmp eq %"struct.blink::LayoutBoxRareData"* %18, null
  br i1 %21, label %56, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %18, i64 0, i32 3
  %24 = load i8, i8* %23, align 8
  %25 = and i8 %24, -2
  store i8 %25, i8* %23, align 8
  %26 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %20, align 8
  %27 = icmp eq %"struct.blink::LayoutBoxRareData"* %26, null
  br i1 %27, label %28, label %45

28:                                               ; preds = %22
  %29 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %30 = bitcast i8* %29 to %"struct.blink::LayoutBoxRareData"*
  %31 = bitcast i8* %29 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %31, align 8
  %32 = getelementptr inbounds i8, i8* %29, i64 8
  %33 = bitcast i8* %32 to i32*
  store i32 -64, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %29, i64 12
  %35 = bitcast i8* %34 to i32*
  store i32 -64, i32* %35, align 4
  %36 = getelementptr inbounds i8, i8* %29, i64 16
  %37 = load i8, i8* %36, align 8
  %38 = and i8 %37, -16
  store i8 %38, i8* %36, align 8
  %39 = getelementptr inbounds i8, i8* %29, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %39, i8 0, i64 68, i1 false) #20
  %40 = getelementptr inbounds i8, i8* %29, i64 -4
  %41 = bitcast i8* %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = or i16 %42, 1
  store atomic i16 %43, i16* %41 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %19, %"struct.blink::LayoutBoxRareData"* %30) #20
  %44 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %20, align 8
  br label %45

45:                                               ; preds = %22, %28
  %46 = phi %"struct.blink::LayoutBoxRareData"* [ %26, %22 ], [ %44, %28 ]
  %47 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %46, i64 0, i32 3
  %48 = load i8, i8* %47, align 8
  %49 = and i8 %48, -3
  store i8 %49, i8* %47, align 8
  %50 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %5, align 8
  %51 = icmp eq %"struct.blink::LayoutBoxRareData"* %50, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %50, i64 0, i32 3
  %54 = load i8, i8* %53, align 8
  %55 = and i8 %54, -5
  store i8 %55, i8* %53, align 8
  br label %56

56:                                               ; preds = %12, %15, %45, %52
  %57 = phi %"class.blink::PersistentBase.3281"* [ %19, %45 ], [ %19, %52 ], [ %13, %12 ], [ %19, %15 ]
  %58 = phi %"struct.blink::LayoutBoxRareData"** [ %20, %45 ], [ %20, %52 ], [ %14, %12 ], [ %20, %15 ]
  %59 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %60 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %59 to i96*
  %61 = load i96, i96* %60, align 4
  %62 = and i96 %61, 113336795588871485128704
  %63 = icmp eq i96 %62, 75557863725914323419136
  br i1 %63, label %64, label %65

64:                                               ; preds = %56
  tail call void @_ZN5blink11LayoutBlock22RemovePositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBox"* %0) #20
  br label %65

65:                                               ; preds = %64, %56
  %66 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %5, align 8
  %67 = icmp eq %"struct.blink::LayoutBoxRareData"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %66, i64 0, i32 9
  %70 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %69, align 8
  %71 = icmp eq %"class.blink::LayoutBlock"* %70, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %68
  tail call void @_ZN5blink11LayoutBlock29RemovePercentHeightDescendantEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* nonnull %70, %"class.blink::LayoutBox"* %0) #20
  br label %73

73:                                               ; preds = %65, %68, %72
  %74 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %75 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %74, align 8
  %76 = icmp eq %"class.blink::LayoutObject"* %75, null
  br i1 %76, label %120, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %75, i64 0, i32 4
  %79 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %78 to i96*
  %80 = load i96, i96* %79, align 4
  %81 = load i96, i96* %60, align 4
  %82 = xor i96 %81, %80
  %83 = trunc i96 %82 to i32
  %84 = icmp slt i32 %83, 0
  br i1 %84, label %85, label %120

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %87 = load %"class.blink::Node"*, %"class.blink::Node"** %86, align 8
  %88 = icmp eq %"class.blink::Node"* %87, null
  br i1 %88, label %89, label %96

89:                                               ; preds = %85, %89
  %90 = phi %"class.blink::LayoutObject"* [ %92, %89 ], [ %4, %85 ]
  %91 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %90, i64 0, i32 7
  %92 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %92, i64 0, i32 6, i32 0, i32 0
  %94 = load %"class.blink::Node"*, %"class.blink::Node"** %93, align 8
  %95 = icmp eq %"class.blink::Node"* %94, null
  br i1 %95, label %89, label %96

96:                                               ; preds = %89, %85
  %97 = phi %"class.blink::Node"* [ %87, %85 ], [ %94, %89 ]
  %98 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %97, i64 0, i32 3, i32 0, i32 0
  %99 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %99, i64 0, i32 2, i32 0, i32 0
  %101 = load %"class.blink::Document"*, %"class.blink::Document"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %101, i64 0, i32 5, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp sgt i32 %103, 19
  br i1 %104, label %120, label %105

105:                                              ; preds = %96
  br i1 %88, label %106, label %113

106:                                              ; preds = %105, %106
  %107 = phi %"class.blink::LayoutObject"* [ %109, %106 ], [ %4, %105 ]
  %108 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %107, i64 0, i32 7
  %109 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %109, i64 0, i32 6, i32 0, i32 0
  %111 = load %"class.blink::Node"*, %"class.blink::Node"** %110, align 8
  %112 = icmp eq %"class.blink::Node"* %111, null
  br i1 %112, label %106, label %113

113:                                              ; preds = %106, %105
  %114 = phi %"class.blink::Node"* [ %87, %105 ], [ %111, %106 ]
  %115 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %114, i64 0, i32 3, i32 0, i32 0
  %116 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %116, i64 0, i32 2, i32 0, i32 0
  %118 = load %"class.blink::Document"*, %"class.blink::Document"** %117, align 8
  %119 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %118) #20
  tail call void @_ZN5blink14LocalFrameView31RemoveOrthogonalWritingModeRootERNS_9LayoutBoxE(%"class.blink::LocalFrameView"* %119, %"class.blink::LayoutBox"* dereferenceable(216) %0) #20
  br label %120

120:                                              ; preds = %73, %113, %96, %77
  %121 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map to i8*) acquire, align 8
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %127, !prof !5

123:                                              ; preds = %120
  %124 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map) #20
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %127, label %126

126:                                              ; preds = %123
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #20
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map) #20
  br label %127

127:                                              ; preds = %126, %123, %120
  %128 = bitcast %"class.blink::LayoutBox"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #20
  store %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBox"** %3, align 8
  %129 = call { %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"* } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.4856"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map to %"class.WTF::HashTable.4856"*), %"class.blink::LayoutBox"** nonnull dereferenceable(8) %3) #20
  %130 = extractvalue { %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"* } %129, 0
  %131 = load %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map to %"struct.WTF::KeyValuePair.4859"**), align 8
  %132 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %131, i64 %133
  %135 = icmp eq %"struct.WTF::KeyValuePair.4859"* %134, %130
  br i1 %135, label %137, label %136

136:                                              ; preds = %127
  call void @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE5eraseEPKSC_(%"class.WTF::HashTable.4856"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map to %"class.WTF::HashTable.4856"*), %"struct.WTF::KeyValuePair.4859"* %130) #20
  br label %137

137:                                              ; preds = %127, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #20
  %138 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %139 = load %"class.blink::Node"*, %"class.blink::Node"** %138, align 8
  %140 = icmp eq %"class.blink::Node"* %139, null
  br i1 %140, label %141, label %148

141:                                              ; preds = %137, %141
  %142 = phi %"class.blink::LayoutObject"* [ %144, %141 ], [ %4, %137 ]
  %143 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %142, i64 0, i32 7
  %144 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %144, i64 0, i32 6, i32 0, i32 0
  %146 = load %"class.blink::Node"*, %"class.blink::Node"** %145, align 8
  %147 = icmp eq %"class.blink::Node"* %146, null
  br i1 %147, label %141, label %148

148:                                              ; preds = %141, %137
  %149 = phi %"class.blink::Node"* [ %139, %137 ], [ %146, %141 ]
  %150 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %149, i64 0, i32 3, i32 0, i32 0
  %151 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %151, i64 0, i32 2, i32 0, i32 0
  %153 = load %"class.blink::Document"*, %"class.blink::Document"** %152, align 8
  %154 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %153, i64 0, i32 5, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = icmp sgt i32 %155, 19
  br i1 %156, label %230, label %157

157:                                              ; preds = %148
  %158 = load i96, i96* %60, align 4
  %159 = and i96 %158, 268435456
  %160 = icmp eq i96 %159, 0
  br i1 %160, label %175, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %163 = bitcast %union.anon.3279* %162 to i32*
  %164 = load i32, i32* %163, align 8
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %175, label %166

166:                                              ; preds = %161
  call void @_ZN5blink15NGFragmentItems27LayoutObjectWillBeDestroyedERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %4) #20
  %167 = load i96, i96* %60, align 4
  %168 = and i96 %167, 268435456
  %169 = icmp eq i96 %168, 0
  br i1 %169, label %170, label %174

170:                                              ; preds = %166
  %171 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #20
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 3183, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #20
  %172 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #20
  %173 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_12LayoutObjectE(%"class.std::__1::basic_ostream"* dereferenceable(160) %172, %"class.blink::LayoutObject"* dereferenceable(88) %4) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #20
  br label %174

174:                                              ; preds = %166, %170
  store i32 0, i32* %163, align 8
  br label %175

175:                                              ; preds = %157, %161, %174
  %176 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 7, i32 0
  %177 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %176, align 8
  %178 = icmp eq %"class.blink::NGLayoutResult"* %177, null
  br i1 %178, label %183, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %177, i64 0, i32 3, i32 0
  %181 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %180, align 8
  %182 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %181, i64 0, i32 1
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %182, align 8
  br label %183

183:                                              ; preds = %175, %179
  %184 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %185 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %184, align 8
  %186 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %187 = load i32, i32* %186, align 4
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %185, i64 %188
  %190 = icmp eq i32 %187, 0
  br i1 %190, label %191, label %209

191:                                              ; preds = %227, %183
  %192 = load %"class.blink::Node"*, %"class.blink::Node"** %138, align 8
  %193 = icmp eq %"class.blink::Node"* %192, null
  br i1 %193, label %194, label %201

194:                                              ; preds = %191, %194
  %195 = phi %"class.blink::LayoutObject"* [ %197, %194 ], [ %4, %191 ]
  %196 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %195, i64 0, i32 7
  %197 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %196, align 8
  %198 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %197, i64 0, i32 6, i32 0, i32 0
  %199 = load %"class.blink::Node"*, %"class.blink::Node"** %198, align 8
  %200 = icmp eq %"class.blink::Node"* %199, null
  br i1 %200, label %194, label %201

201:                                              ; preds = %194, %191
  %202 = phi %"class.blink::Node"* [ %192, %191 ], [ %199, %194 ]
  %203 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %202, i64 0, i32 3, i32 0, i32 0
  %204 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %204, i64 0, i32 2, i32 0, i32 0
  %206 = load %"class.blink::Document"*, %"class.blink::Document"** %205, align 8
  %207 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %206) #20
  %208 = call dereferenceable(184) %"class.blink::InputMethodController"* @_ZNK5blink10LocalFrame24GetInputMethodControllerEv(%"class.blink::LocalFrame"* %207) #20
  call void @_ZN5blink21InputMethodController27LayoutObjectWillBeDestroyedERKNS_12LayoutObjectE(%"class.blink::InputMethodController"* %208, %"class.blink::LayoutObject"* dereferenceable(88) %4) #20
  br label %230

209:                                              ; preds = %183, %227
  %210 = phi %class.scoped_refptr.3247* [ %228, %227 ], [ %185, %183 ]
  %211 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %210, i64 0, i32 0
  %212 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %211, align 8
  %213 = icmp eq %"class.blink::NGLayoutResult"* %212, null
  br i1 %213, label %214, label %217

214:                                              ; preds = %209
  %215 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** inttoptr (i64 40 to %"class.blink::NGPhysicalFragment"**), align 8
  %216 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %215, i64 0, i32 1
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %216, align 8
  br label %227

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %212, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %218) #20
  %219 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %212, i64 0, i32 3, i32 0
  %220 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::NGPhysicalFragment", %"class.blink::NGPhysicalFragment"* %220, i64 0, i32 1
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %221, align 8
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %218) #20
  %222 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %212, i64 0, i32 0, i32 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %227

225:                                              ; preds = %217
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %212) #20
  %226 = bitcast %"class.blink::NGLayoutResult"* %212 to i8*
  call void @free(i8* %226) #20
  br label %227

227:                                              ; preds = %214, %217, %225
  %228 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %210, i64 1
  %229 = icmp eq %class.scoped_refptr.3247* %228, %189
  br i1 %229, label %191, label %209

230:                                              ; preds = %201, %148
  %231 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %5, align 8
  %232 = icmp eq %"struct.blink::LayoutBoxRareData"* %231, null
  br i1 %232, label %260, label %233

233:                                              ; preds = %230
  %234 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %231, i64 0, i32 10
  %235 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %234, align 8
  %236 = icmp eq %"class.blink::LayoutBox"* %235, null
  br i1 %236, label %260, label %237

237:                                              ; preds = %233
  call void @_ZN5blink9LayoutBox14RemoveSnapAreaERKS0_(%"class.blink::LayoutBox"* nonnull %235, %"class.blink::LayoutBox"* dereferenceable(216) %0) #20
  %238 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %5, align 8
  %239 = icmp eq %"struct.blink::LayoutBoxRareData"* %238, null
  br i1 %239, label %240, label %257

240:                                              ; preds = %237
  %241 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %242 = bitcast i8* %241 to %"struct.blink::LayoutBoxRareData"*
  %243 = bitcast i8* %241 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %243, align 8
  %244 = getelementptr inbounds i8, i8* %241, i64 8
  %245 = bitcast i8* %244 to i32*
  store i32 -64, i32* %245, align 4
  %246 = getelementptr inbounds i8, i8* %241, i64 12
  %247 = bitcast i8* %246 to i32*
  store i32 -64, i32* %247, align 4
  %248 = getelementptr inbounds i8, i8* %241, i64 16
  %249 = load i8, i8* %248, align 8
  %250 = and i8 %249, -16
  store i8 %250, i8* %248, align 8
  %251 = getelementptr inbounds i8, i8* %241, i64 20
  call void @llvm.memset.p0i8.i64(i8* align 4 %251, i8 0, i64 68, i1 false) #20
  %252 = getelementptr inbounds i8, i8* %241, i64 -4
  %253 = bitcast i8* %252 to i16*
  %254 = load atomic i16, i16* %253 monotonic, align 2
  %255 = or i16 %254, 1
  store atomic i16 %255, i16* %253 release, align 2
  call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %57, %"struct.blink::LayoutBoxRareData"* %242) #20
  %256 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %58, align 8
  br label %257

257:                                              ; preds = %240, %237
  %258 = phi %"struct.blink::LayoutBoxRareData"* [ %238, %237 ], [ %256, %240 ]
  %259 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %258, i64 0, i32 10
  store %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"** %259, align 8
  br label %260

260:                                              ; preds = %230, %233, %257
  %261 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  call void @_ZN5blink20LayoutBoxModelObject15WillBeDestroyedEv(%"class.blink::LayoutBoxModelObject"* %261) #20
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox17ClearOverrideSizeEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 2, i32 0
  store i32 -64, i32* %6, align 4
  %7 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %8 = icmp eq %"struct.blink::LayoutBoxRareData"* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %7, i64 0, i32 1, i32 0
  store i32 -64, i32* %10, align 8
  br label %11

11:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox39ClearOverrideContainingBlockContentSizeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0
  %3 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %2, i64 0, i32 0
  %4 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %3, align 8
  %5 = icmp eq %"struct.blink::LayoutBoxRareData"* %4, null
  br i1 %5, label %34, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %4, i64 0, i32 3
  %8 = load i8, i8* %7, align 8
  %9 = and i8 %8, -2
  store i8 %9, i8* %7, align 8
  %10 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %3, align 8
  %11 = icmp eq %"struct.blink::LayoutBoxRareData"* %10, null
  br i1 %11, label %12, label %29

12:                                               ; preds = %6
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %14 = bitcast i8* %13 to %"struct.blink::LayoutBoxRareData"*
  %15 = bitcast i8* %13 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %15, align 8
  %16 = getelementptr inbounds i8, i8* %13, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 -64, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %13, i64 12
  %19 = bitcast i8* %18 to i32*
  store i32 -64, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %13, i64 16
  %21 = load i8, i8* %20, align 8
  %22 = and i8 %21, -16
  store i8 %22, i8* %20, align 8
  %23 = getelementptr inbounds i8, i8* %13, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 68, i1 false) #20
  %24 = getelementptr inbounds i8, i8* %13, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %2, %"struct.blink::LayoutBoxRareData"* %14) #20
  %28 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %3, align 8
  br label %29

29:                                               ; preds = %6, %12
  %30 = phi %"struct.blink::LayoutBoxRareData"* [ %10, %6 ], [ %28, %12 ]
  %31 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %30, i64 0, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, -3
  store i8 %33, i8* %31, align 8
  br label %34

34:                                               ; preds = %1, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox42ClearOverridePercentageResolutionBlockSizeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 3
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, -5
  store i8 %8, i8* %6, align 8
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN5blink11LayoutBlock22RemovePositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBox"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox32RemoveFromPercentHeightContainerEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 9
  %7 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %6, align 8
  %8 = icmp eq %"class.blink::LayoutBlock"* %7, null
  br i1 %8, label %10, label %9

9:                                                ; preds = %5
  tail call void @_ZN5blink11LayoutBlock29RemovePercentHeightDescendantEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* nonnull %7, %"class.blink::LayoutBox"* %0) #20
  br label %10

10:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox31UnmarkOrthogonalWritingModeRootEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  br label %7

7:                                                ; preds = %5, %7
  %8 = phi %"class.blink::LayoutObject"* [ %10, %7 ], [ %6, %5 ]
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %1
  %15 = phi %"class.blink::Node"* [ %3, %1 ], [ %12, %7 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %19) #20
  tail call void @_ZN5blink14LocalFrameView31RemoveOrthogonalWritingModeRootERNS_9LayoutBoxE(%"class.blink::LocalFrameView"* %20, %"class.blink::LayoutBox"* dereferenceable(216) %0) #20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %9 = bitcast %union.anon.3279* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink15NGFragmentItems27LayoutObjectWillBeDestroyedERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 268435456
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %10 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #20
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 3183, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #20
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #20
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_12LayoutObjectE(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, %"class.blink::LayoutObject"* dereferenceable(88) %9) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #20
  br label %13

13:                                               ; preds = %1, %8
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %15 = bitcast %union.anon.3279* %14 to i32*
  store i32 0, i32* %15, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #5

declare dereferenceable(184) %"class.blink::InputMethodController"* @_ZNK5blink10LocalFrame24GetInputMethodControllerEv(%"class.blink::LocalFrame"*) local_unnamed_addr #5

declare void @_ZN5blink21InputMethodController27LayoutObjectWillBeDestroyedERKNS_12LayoutObjectE(%"class.blink::InputMethodController"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox16SetSnapContainerEPS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %4 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %3, align 8
  %5 = icmp eq %"struct.blink::LayoutBoxRareData"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %4, i64 0, i32 10
  %8 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.blink::LayoutBox"* [ %8, %6 ], [ null, %2 ]
  %11 = icmp eq %"class.blink::LayoutBox"* %10, %1
  br i1 %11, label %44, label %12

12:                                               ; preds = %9
  %13 = icmp eq %"class.blink::LayoutBox"* %10, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %12
  tail call void @_ZN5blink9LayoutBox14RemoveSnapAreaERKS0_(%"class.blink::LayoutBox"* nonnull %10, %"class.blink::LayoutBox"* dereferenceable(216) %0)
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %16 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %15, align 8
  br label %17

17:                                               ; preds = %12, %14
  %18 = phi %"struct.blink::LayoutBoxRareData"* [ %4, %12 ], [ %16, %14 ]
  %19 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0
  %20 = icmp eq %"struct.blink::LayoutBoxRareData"* %18, null
  br i1 %20, label %21, label %39

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %19, i64 0, i32 0
  %23 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %24 = bitcast i8* %23 to %"struct.blink::LayoutBoxRareData"*
  %25 = bitcast i8* %23 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %25, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 8
  %27 = bitcast i8* %26 to i32*
  store i32 -64, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %23, i64 12
  %29 = bitcast i8* %28 to i32*
  store i32 -64, i32* %29, align 4
  %30 = getelementptr inbounds i8, i8* %23, i64 16
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, -16
  store i8 %32, i8* %30, align 8
  %33 = getelementptr inbounds i8, i8* %23, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 68, i1 false) #20
  %34 = getelementptr inbounds i8, i8* %23, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %19, %"struct.blink::LayoutBoxRareData"* %24) #20
  %38 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %22, align 8
  br label %39

39:                                               ; preds = %17, %21
  %40 = phi %"struct.blink::LayoutBoxRareData"* [ %18, %17 ], [ %38, %21 ]
  %41 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %40, i64 0, i32 10
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %41, align 8
  %42 = icmp eq %"class.blink::LayoutBox"* %1, null
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  tail call void @_ZN5blink9LayoutBox11AddSnapAreaERS0_(%"class.blink::LayoutBox"* nonnull %1, %"class.blink::LayoutBox"* dereferenceable(216) %0)
  br label %44

44:                                               ; preds = %43, %39, %9
  ret void
}

declare void @_ZN5blink20LayoutBoxModelObject15WillBeDestroyedEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox16InsertedIntoTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject16InsertedIntoTreeEv(%"class.blink::LayoutObject"* %2) #20
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %13

6:                                                ; preds = %1, %6
  %7 = phi %"class.blink::LayoutObject"* [ %9, %6 ], [ %2, %1 ]
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 7
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %6, label %13

13:                                               ; preds = %6, %1
  %14 = phi %"class.blink::Node"* [ %4, %1 ], [ %11, %6 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = tail call dereferenceable(32) %"class.blink::SnapCoordinator"* @_ZN5blink8Document18GetSnapCoordinatorEv(%"class.blink::Document"* %18) #20
  %20 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %21 = bitcast %"class.blink::ComputedStyle"** %20 to %"class.blink::ComputedStyleBase"**
  %22 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %22, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %24, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %28, i64 0, i32 35
  %30 = bitcast %"struct.cc::ScrollSnapAlign"* %29 to i64*
  %31 = load i64, i64* %30, align 4
  tail call void @_ZN5blink15SnapCoordinator17SnapAreaDidChangeERNS_9LayoutBoxEN2cc15ScrollSnapAlignE(%"class.blink::SnapCoordinator"* %19, %"class.blink::LayoutBox"* dereferenceable(216) %0, i64 %31) #20
  tail call void @_ZN5blink9LayoutBox28AddCustomLayoutChildIfNeededEv(%"class.blink::LayoutBox"* %0)
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %34 = icmp eq %"class.blink::LayoutObject"* %33, null
  br i1 %34, label %62, label %35

35:                                               ; preds = %13
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 0, i32 4
  %37 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %36 to i96*
  %38 = load i96, i96* %37, align 4
  %39 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %40 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %39 to i96*
  %41 = load i96, i96* %40, align 4
  %42 = xor i96 %41, %38
  %43 = trunc i96 %42 to i32
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %62

45:                                               ; preds = %35
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %47 = icmp eq %"class.blink::Node"* %46, null
  br i1 %47, label %48, label %55

48:                                               ; preds = %45, %48
  %49 = phi %"class.blink::LayoutObject"* [ %51, %48 ], [ %2, %45 ]
  %50 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %49, i64 0, i32 7
  %51 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %51, i64 0, i32 6, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %48, label %55

55:                                               ; preds = %48, %45
  %56 = phi %"class.blink::Node"* [ %46, %45 ], [ %53, %48 ]
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %56, i64 0, i32 3, i32 0, i32 0
  %58 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %58, i64 0, i32 2, i32 0, i32 0
  %60 = load %"class.blink::Document"*, %"class.blink::Document"** %59, align 8
  %61 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %60) #20
  tail call void @_ZN5blink14LocalFrameView28AddOrthogonalWritingModeRootERNS_9LayoutBoxE(%"class.blink::LocalFrameView"* %61, %"class.blink::LayoutBox"* dereferenceable(216) %0) #20
  br label %62

62:                                               ; preds = %13, %55, %35
  ret void
}

declare void @_ZN5blink12LayoutObject16InsertedIntoTreeEv(%"class.blink::LayoutObject"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox20AddScrollSnapMappingEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  br label %7

7:                                                ; preds = %5, %7
  %8 = phi %"class.blink::LayoutObject"* [ %10, %7 ], [ %6, %5 ]
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %1
  %15 = phi %"class.blink::Node"* [ %3, %1 ], [ %12, %7 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = tail call dereferenceable(32) %"class.blink::SnapCoordinator"* @_ZN5blink8Document18GetSnapCoordinatorEv(%"class.blink::Document"* %19) #20
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %22 = bitcast %"class.blink::ComputedStyle"** %21 to %"class.blink::ComputedStyleBase"**
  %23 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %23, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %29, i64 0, i32 35
  %31 = bitcast %"struct.cc::ScrollSnapAlign"* %30 to i64*
  %32 = load i64, i64* %31, align 4
  tail call void @_ZN5blink15SnapCoordinator17SnapAreaDidChangeERNS_9LayoutBoxEN2cc15ScrollSnapAlignE(%"class.blink::SnapCoordinator"* %20, %"class.blink::LayoutBox"* dereferenceable(216) %0, i64 %32) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox28AddCustomLayoutChildIfNeededEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %5, label %86, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::LayoutObject"* %4 to i1 (%"class.blink::LayoutObject"*, i32)***
  %8 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, i64 92
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* nonnull %4, i32 24) #20
  br i1 %11, label %12, label %86

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 3, i32 4, i32 0, i64 4
  %14 = bitcast i8* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %86, label %17

17:                                               ; preds = %12
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 5, i32 0
  %20 = bitcast %"class.blink::ComputedStyle"** %19 to %"class.blink::ComputedStyleBase"**
  %21 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %21, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %23, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %25, i64 0, i32 4
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %30, label %37

30:                                               ; preds = %17, %30
  %31 = phi %"class.blink::LayoutObject"* [ %33, %30 ], [ %2, %17 ]
  %32 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %31, i64 0, i32 7
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 0, i32 6, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  br i1 %36, label %30, label %37

37:                                               ; preds = %30, %17
  %38 = phi %"class.blink::Node"* [ %28, %17 ], [ %35, %30 ]
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %42, i64 0, i32 12, i32 0, i32 0
  %44 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %43, align 8
  %45 = tail call %"class.blink::LayoutWorklet"* @_ZN5blink13LayoutWorklet4FromERNS_14LocalDOMWindowE(%"class.blink::LocalDOMWindow"* dereferenceable(904) %44) #20
  %46 = tail call %"class.blink::LayoutWorkletGlobalScopeProxy"* @_ZN5blink13LayoutWorklet5ProxyEv(%"class.blink::LayoutWorklet"* %45) #20
  %47 = tail call %"class.blink::CSSLayoutDefinition"* @_ZN5blink29LayoutWorkletGlobalScopeProxy14FindDefinitionERKN3WTF12AtomicStringE(%"class.blink::LayoutWorkletGlobalScopeProxy"* %46, %"class.WTF::AtomicString"* dereferenceable(8) %26) #20
  %48 = icmp eq %"class.blink::CSSLayoutDefinition"* %47, null
  br i1 %48, label %86, label %49

49:                                               ; preds = %37
  %50 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #20
  %51 = bitcast i8* %50 to %"class.blink::CustomLayoutChild"*
  tail call void @_ZN5blink17CustomLayoutChildC1ERKNS_19CSSLayoutDefinitionENS_17NGLayoutInputNodeE(%"class.blink::CustomLayoutChild"* %51, %"class.blink::CSSLayoutDefinition"* nonnull dereferenceable(112) %47, %"class.blink::LayoutBox"* %0, i64 0) #20
  %52 = getelementptr inbounds i8, i8* %50, i64 -4
  %53 = bitcast i8* %52 to i16*
  %54 = load atomic i16, i16* %53 monotonic, align 2
  %55 = or i16 %54, 1
  store atomic i16 %55, i16* %53 release, align 2
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0
  %57 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %56, i64 0, i32 0
  %58 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %57, align 8
  %59 = icmp eq %"struct.blink::LayoutBoxRareData"* %58, null
  br i1 %59, label %60, label %77

60:                                               ; preds = %49
  %61 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %62 = bitcast i8* %61 to %"struct.blink::LayoutBoxRareData"*
  %63 = bitcast i8* %61 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %63, align 8
  %64 = getelementptr inbounds i8, i8* %61, i64 8
  %65 = bitcast i8* %64 to i32*
  store i32 -64, i32* %65, align 4
  %66 = getelementptr inbounds i8, i8* %61, i64 12
  %67 = bitcast i8* %66 to i32*
  store i32 -64, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %61, i64 16
  %69 = load i8, i8* %68, align 8
  %70 = and i8 %69, -16
  store i8 %70, i8* %68, align 8
  %71 = getelementptr inbounds i8, i8* %61, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %71, i8 0, i64 68, i1 false) #20
  %72 = getelementptr inbounds i8, i8* %61, i64 -4
  %73 = bitcast i8* %72 to i16*
  %74 = load atomic i16, i16* %73 monotonic, align 2
  %75 = or i16 %74, 1
  store atomic i16 %75, i16* %73 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %56, %"struct.blink::LayoutBoxRareData"* %62) #20
  %76 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %57, align 8
  br label %77

77:                                               ; preds = %49, %60
  %78 = phi %"struct.blink::LayoutBoxRareData"* [ %58, %49 ], [ %76, %60 ]
  %79 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %78, i64 0, i32 13
  %80 = ptrtoint i8* %50 to i64
  %81 = bitcast %"class.blink::Member.3294"* %79 to i64*
  store atomic i64 %80, i64* %81 monotonic, align 8
  %82 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %86, label %84

84:                                               ; preds = %77
  %85 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %50) #20
  br label %86

86:                                               ; preds = %12, %1, %6, %84, %77, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox29MarkOrthogonalWritingModeRootEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  br label %7

7:                                                ; preds = %5, %7
  %8 = phi %"class.blink::LayoutObject"* [ %10, %7 ], [ %6, %5 ]
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %1
  %15 = phi %"class.blink::Node"* [ %3, %1 ], [ %12, %7 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %19) #20
  tail call void @_ZN5blink14LocalFrameView28AddOrthogonalWritingModeRootERNS_9LayoutBoxE(%"class.blink::LocalFrameView"* %20, %"class.blink::LayoutBox"* dereferenceable(216) %0) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %13

6:                                                ; preds = %1, %6
  %7 = phi %"class.blink::LayoutObject"* [ %9, %6 ], [ %2, %1 ]
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 7
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %6, label %13

13:                                               ; preds = %6, %1
  %14 = phi %"class.blink::Node"* [ %4, %1 ], [ %11, %6 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 5, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 19
  br i1 %21, label %51, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutObject"* %24, null
  br i1 %25, label %51, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 4
  %28 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %27 to i96*
  %29 = load i96, i96* %28, align 4
  %30 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %31 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %30 to i96*
  %32 = load i96, i96* %31, align 4
  %33 = xor i96 %32, %29
  %34 = trunc i96 %33 to i32
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %36, label %51

36:                                               ; preds = %26
  br i1 %5, label %37, label %44

37:                                               ; preds = %36, %37
  %38 = phi %"class.blink::LayoutObject"* [ %40, %37 ], [ %2, %36 ]
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 7
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 6, i32 0, i32 0
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %41, align 8
  %43 = icmp eq %"class.blink::Node"* %42, null
  br i1 %43, label %37, label %44

44:                                               ; preds = %37, %36
  %45 = phi %"class.blink::Node"* [ %4, %36 ], [ %42, %37 ]
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %45, i64 0, i32 3, i32 0, i32 0
  %47 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %47, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::Document"*, %"class.blink::Document"** %48, align 8
  %50 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %49) #20
  tail call void @_ZN5blink14LocalFrameView31RemoveOrthogonalWritingModeRootERNS_9LayoutBoxE(%"class.blink::LocalFrameView"* %50, %"class.blink::LayoutBox"* dereferenceable(216) %0) #20
  br label %51

51:                                               ; preds = %22, %44, %26, %13
  %52 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %53 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %52, align 8
  %54 = icmp eq %"struct.blink::LayoutBoxRareData"* %53, null
  br i1 %54, label %67, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %53, i64 0, i32 13, i32 0, i32 0
  %57 = load %"class.blink::CustomLayoutChild"*, %"class.blink::CustomLayoutChild"** %56, align 8
  %58 = icmp eq %"class.blink::CustomLayoutChild"* %57, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::CustomLayoutChild", %"class.blink::CustomLayoutChild"* %57, i64 0, i32 1, i32 0
  store %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"** %60, align 8
  %61 = getelementptr inbounds %"class.blink::CustomLayoutChild", %"class.blink::CustomLayoutChild"* %57, i64 0, i32 1, i32 1
  store i8 0, i8* %61, align 8
  %62 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %52, align 8
  br label %63

63:                                               ; preds = %59, %55
  %64 = phi %"struct.blink::LayoutBoxRareData"* [ %53, %55 ], [ %62, %59 ]
  %65 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %64, i64 0, i32 13
  %66 = bitcast %"class.blink::Member.3294"* %65 to i64*
  store atomic i64 0, i64* %66 monotonic, align 8
  br label %67

67:                                               ; preds = %51, %63
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %69 = icmp eq %"class.blink::Node"* %68, null
  br i1 %69, label %70, label %77

70:                                               ; preds = %67, %70
  %71 = phi %"class.blink::LayoutObject"* [ %73, %70 ], [ %2, %67 ]
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 7
  %73 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 0, i32 6, i32 0, i32 0
  %75 = load %"class.blink::Node"*, %"class.blink::Node"** %74, align 8
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %70, label %77

77:                                               ; preds = %70, %67
  %78 = phi %"class.blink::Node"* [ %68, %67 ], [ %75, %70 ]
  %79 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %78, i64 0, i32 3, i32 0, i32 0
  %80 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %80, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::Document"*, %"class.blink::Document"** %81, align 8
  %83 = tail call dereferenceable(32) %"class.blink::SnapCoordinator"* @_ZN5blink8Document18GetSnapCoordinatorEv(%"class.blink::Document"* %82) #20
  tail call void @_ZN5blink15SnapCoordinator17SnapAreaDidChangeERNS_9LayoutBoxEN2cc15ScrollSnapAlignE(%"class.blink::SnapCoordinator"* %83, %"class.blink::LayoutBox"* dereferenceable(216) %0, i64 0) #20
  tail call void @_ZN5blink12LayoutObject21WillBeRemovedFromTreeEv(%"class.blink::LayoutObject"* %2) #20
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox22ClearCustomLayoutChildEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 13, i32 0, i32 0
  %7 = load %"class.blink::CustomLayoutChild"*, %"class.blink::CustomLayoutChild"** %6, align 8
  %8 = icmp eq %"class.blink::CustomLayoutChild"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::CustomLayoutChild", %"class.blink::CustomLayoutChild"* %7, i64 0, i32 1, i32 0
  store %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::CustomLayoutChild", %"class.blink::CustomLayoutChild"* %7, i64 0, i32 1, i32 1
  store i8 0, i8* %11, align 8
  %12 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  br label %13

13:                                               ; preds = %5, %9
  %14 = phi %"struct.blink::LayoutBoxRareData"* [ %3, %5 ], [ %12, %9 ]
  %15 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %14, i64 0, i32 13
  %16 = bitcast %"class.blink::Member.3294"* %15 to i64*
  store atomic i64 0, i64* %16 monotonic, align 8
  br label %17

17:                                               ; preds = %1, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox22ClearScrollSnapMappingEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  br label %7

7:                                                ; preds = %5, %7
  %8 = phi %"class.blink::LayoutObject"* [ %10, %7 ], [ %6, %5 ]
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %1
  %15 = phi %"class.blink::Node"* [ %3, %1 ], [ %12, %7 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = tail call dereferenceable(32) %"class.blink::SnapCoordinator"* @_ZN5blink8Document18GetSnapCoordinatorEv(%"class.blink::Document"* %19) #20
  tail call void @_ZN5blink15SnapCoordinator17SnapAreaDidChangeERNS_9LayoutBoxEN2cc15ScrollSnapAlignE(%"class.blink::SnapCoordinator"* %20, %"class.blink::LayoutBox"* dereferenceable(216) %0, i64 0) #20
  ret void
}

declare void @_ZN5blink12LayoutObject21WillBeRemovedFromTreeEv(%"class.blink::LayoutObject"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox45RemoveFloatingOrPositionedChildFromBlockListsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %3 = load %"class.blink::Node"*, %"class.blink::Node"** %2, align 8
  %4 = icmp eq %"class.blink::Node"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  br label %7

7:                                                ; preds = %5, %7
  %8 = phi %"class.blink::LayoutObject"* [ %10, %7 ], [ %6, %5 ]
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %1
  %15 = phi %"class.blink::Node"* [ %3, %1 ], [ %12, %7 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %19, i64 0, i32 5, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, 19
  br i1 %22, label %60, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = and i96 %26, 8388608
  %28 = icmp eq i96 %27, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = icmp eq %"class.blink::LayoutObject"* %31, null
  br i1 %32, label %55, label %35

33:                                               ; preds = %49
  %34 = icmp eq %"class.blink::LayoutBlockFlow"* %50, null
  br i1 %34, label %55, label %54

35:                                               ; preds = %29, %49
  %36 = phi %"class.blink::LayoutObject"* [ %52, %49 ], [ %31, %29 ]
  %37 = phi %"class.blink::LayoutBlockFlow"* [ %50, %49 ], [ null, %29 ]
  %38 = bitcast %"class.blink::LayoutObject"* %36 to i1 (%"class.blink::LayoutObject"*)***
  %39 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %39, i64 24
  %41 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* nonnull %36) #20
  %43 = bitcast %"class.blink::LayoutObject"* %36 to %"class.blink::LayoutBlockFlow"*
  br i1 %42, label %44, label %49

44:                                               ; preds = %35
  %45 = icmp eq %"class.blink::LayoutBlockFlow"* %37, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = tail call zeroext i1 @_ZNK5blink15LayoutBlockFlow13ContainsFloatEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* nonnull %43, %"class.blink::LayoutBox"* %0) #20
  br i1 %47, label %48, label %49

48:                                               ; preds = %44, %46
  br label %49

49:                                               ; preds = %35, %46, %48
  %50 = phi %"class.blink::LayoutBlockFlow"* [ %43, %48 ], [ %37, %46 ], [ %37, %35 ]
  %51 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 7
  %52 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %51, align 8
  %53 = icmp eq %"class.blink::LayoutObject"* %52, null
  br i1 %53, label %33, label %35

54:                                               ; preds = %33
  tail call void @_ZN5blink15LayoutBlockFlow31MarkSiblingsWithFloatsForLayoutEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* nonnull %50, %"class.blink::LayoutBox"* %0) #20
  tail call void @_ZN5blink15LayoutBlockFlow37MarkAllDescendantsWithFloatsForLayoutEPNS_9LayoutBoxEb(%"class.blink::LayoutBlockFlow"* nonnull %50, %"class.blink::LayoutBox"* %0, i1 zeroext false) #20
  br label %55

55:                                               ; preds = %29, %23, %54, %33
  %56 = load i96, i96* %25, align 4
  %57 = and i96 %56, 113336795588871485128704
  %58 = icmp eq i96 %57, 75557863725914323419136
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  tail call void @_ZN5blink11LayoutBlock22RemovePositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBox"* %0) #20
  br label %60

60:                                               ; preds = %14, %59, %55
  ret void
}

declare zeroext i1 @_ZNK5blink15LayoutBlockFlow13ContainsFloatEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"*) local_unnamed_addr #5

declare void @_ZN5blink15LayoutBlockFlow31MarkSiblingsWithFloatsForLayoutEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"*) local_unnamed_addr #5

declare void @_ZN5blink15LayoutBlockFlow37MarkAllDescendantsWithFloatsForLayoutEPNS_9LayoutBoxEb(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #4 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = trunc i32 %1 to i24
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = icmp eq %"class.blink::ComputedStyle"* %8, null
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  br i1 %9, label %162, label %13

13:                                               ; preds = %3
  %14 = and i96 %12, 1099511627776
  %15 = icmp eq i96 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %13
  %17 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %6) #20
  %18 = icmp eq %"class.blink::LayoutFlowThread"* %17, null
  %19 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %17, i64 0, i32 0, i32 0, i32 0
  %20 = icmp eq %"class.blink::LayoutBox"* %19, %0
  %21 = or i1 %18, %20
  br i1 %21, label %27, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.blink::LayoutFlowThread"* %17 to void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)***
  %24 = load void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)**, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)*, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)** %24, i64 224
  %26 = load void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)*, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)** %25, align 8
  tail call void %26(%"class.blink::LayoutFlowThread"* nonnull %17, %"class.blink::LayoutBox"* %0, i32 %1, %"class.blink::ComputedStyle"* dereferenceable(104) %2) #20
  br label %27

27:                                               ; preds = %13, %16, %22
  %28 = and i24 %5, 7
  %29 = icmp eq i24 %28, 0
  br i1 %29, label %68, label %30

30:                                               ; preds = %27
  %31 = load i96, i96* %11, align 4
  %32 = and i96 %31, 16777216
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %68

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %68, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %36, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %42, i64 0, i32 47, i32 0, i32 0
  %44 = load %"class.blink::Element"*, %"class.blink::Element"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %44, i64 0, i32 0, i32 0
  %46 = icmp eq %"class.blink::Node"* %45, %36
  br i1 %46, label %64, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %36, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, 48
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %68

52:                                               ; preds = %47
  %53 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %54 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %36, i64 1, i32 2
  %57 = bitcast %"class.blink::Member.318"* %56 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %55, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %60, %62
  br i1 %63, label %64, label %68

64:                                               ; preds = %38, %52
  %65 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %42, i64 0, i32 113
  %66 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %67, i8 zeroext 3) #20
  br label %68

68:                                               ; preds = %47, %27, %30, %34, %64, %52
  %69 = and i24 %5, 6
  %70 = icmp eq i24 %69, 4
  br i1 %70, label %71, label %194

71:                                               ; preds = %68
  %72 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %73 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  %74 = icmp eq %"class.blink::LayoutObject"* %73, null
  br i1 %74, label %194, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %77 = bitcast [20 x i8]* %76 to i160*
  %78 = load i160, i160* %77, align 8
  %79 = lshr i160 %78, 80
  %80 = trunc i160 %79 to i32
  %81 = and i32 %80, 7
  %82 = icmp eq i32 %81, 4
  %83 = and i160 %78, 128849018880
  %84 = icmp eq i160 %83, 42949672960
  %85 = and i1 %84, %82
  %86 = select i1 %85, i32 3, i32 %81
  %87 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %88 = bitcast [20 x i8]* %87 to i160*
  %89 = load i160, i160* %88, align 8
  %90 = lshr i160 %89, 80
  %91 = trunc i160 %90 to i32
  %92 = and i32 %91, 7
  %93 = icmp eq i32 %92, 4
  %94 = and i160 %89, 128849018880
  %95 = icmp eq i160 %94, 42949672960
  %96 = and i1 %95, %93
  %97 = select i1 %96, i32 3, i32 %92
  %98 = icmp eq i32 %86, %97
  br i1 %98, label %194, label %99

99:                                               ; preds = %75
  %100 = and i160 %78, 7253554917687775048237056
  %101 = icmp ne i160 %100, 0
  %102 = and i160 %89, 7253554917687775048237056
  %103 = icmp eq i160 %102, 0
  %104 = and i1 %101, %103
  br i1 %104, label %105, label %123

105:                                              ; preds = %99
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %6, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason12kStyleChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #20
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %6, i32 1) #20
  %106 = load i96, i96* %11, align 4
  %107 = and i96 %106, 268435456
  %108 = icmp eq i96 %107, 0
  br i1 %108, label %124, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %111 = bitcast %union.anon.3279* %110 to i32*
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %124, label %114

114:                                              ; preds = %109
  tail call void @_ZN5blink15NGFragmentItems23LayoutObjectWillBeMovedERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %6) #20
  %115 = load i96, i96* %11, align 4
  %116 = and i96 %115, 268435456
  %117 = icmp eq i96 %116, 0
  br i1 %117, label %118, label %122

118:                                              ; preds = %114
  %119 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #20
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 3183, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #20
  %120 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #20
  %121 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_12LayoutObjectE(%"class.std::__1::basic_ostream"* dereferenceable(160) %120, %"class.blink::LayoutObject"* dereferenceable(88) %6) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #20
  br label %122

122:                                              ; preds = %114, %118
  store i32 0, i32* %111, align 8
  br label %124

123:                                              ; preds = %99
  tail call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %6, i1 zeroext true, %"class.blink::SubtreeLayoutScope"* null) #20
  br label %124

124:                                              ; preds = %105, %109, %122, %123
  %125 = load i160, i160* %77, align 8
  %126 = lshr i160 %125, 80
  %127 = trunc i160 %126 to i32
  %128 = and i32 %127, 7
  %129 = icmp eq i32 %128, 4
  %130 = and i160 %125, 128849018880
  %131 = icmp eq i160 %130, 42949672960
  %132 = and i1 %131, %129
  %133 = icmp eq i32 %128, 3
  %134 = or i1 %133, %132
  br i1 %134, label %135, label %136

135:                                              ; preds = %124
  call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %6, i8 zeroext 3) #20
  br label %150

136:                                              ; preds = %124
  %137 = load i160, i160* %88, align 8
  %138 = and i160 %137, 7253554917687775048237056
  %139 = icmp eq i160 %138, 0
  br i1 %139, label %140, label %150

140:                                              ; preds = %136
  %141 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  %142 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %141, i64 0, i32 4
  %143 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %142 to i96*
  %144 = load i96, i96* %143, align 4
  %145 = and i96 %144, 8
  %146 = icmp eq i96 %145, 0
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %141, i32 1) #20
  %147 = load i96, i96* %143, align 4
  %148 = or i96 %147, 1180591620717411303432
  store i96 %148, i96* %143, align 4
  br i1 %146, label %149, label %150

149:                                              ; preds = %140
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %141, i1 zeroext true, %"class.blink::SubtreeLayoutScope"* null) #20
  br label %150

150:                                              ; preds = %149, %140, %136, %135
  %151 = load i96, i96* %11, align 4
  %152 = and i96 %151, 8388608
  %153 = icmp eq i96 %152, 0
  %154 = and i96 %151, 113336795588871485128704
  %155 = icmp eq i96 %154, 75557863725914323419136
  %156 = or i1 %153, %155
  br i1 %156, label %194, label %157

157:                                              ; preds = %150
  %158 = load i160, i160* %88, align 8
  %159 = and i160 %158, 7253554917687775048237056
  %160 = icmp eq i160 %159, 0
  br i1 %160, label %161, label %194

161:                                              ; preds = %157
  call void @_ZN5blink9LayoutBox45RemoveFloatingOrPositionedChildFromBlockListsEv(%"class.blink::LayoutBox"* %0)
  br label %194

162:                                              ; preds = %3
  %163 = and i96 %12, 16777216
  %164 = icmp eq i96 %163, 0
  br i1 %164, label %165, label %194

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %167 = load %"class.blink::Node"*, %"class.blink::Node"** %166, align 8
  %168 = icmp eq %"class.blink::Node"* %167, null
  br i1 %168, label %194, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %167, i64 0, i32 1
  %171 = load i32, i32* %170, align 8
  %172 = and i32 %171, 48
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %194

174:                                              ; preds = %169
  %175 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %176 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %175, i64 0, i32 0, i32 0, i32 0
  %177 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %176, align 8
  %178 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %167, i64 1, i32 2
  %179 = bitcast %"class.blink::Member.318"* %178 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %180 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %180, i64 0, i32 3, i32 0, i32 0, i32 0
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %183 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %177, i64 0, i32 3, i32 0, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %182, %184
  br i1 %185, label %186, label %194

186:                                              ; preds = %174
  %187 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %167, i64 0, i32 3, i32 0, i32 0
  %188 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %188, i64 0, i32 2, i32 0, i32 0
  %190 = load %"class.blink::Document"*, %"class.blink::Document"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %190, i64 0, i32 113
  %192 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %191, align 8
  %193 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %192, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %193, i8 zeroext 3) #20
  br label %194

194:                                              ; preds = %150, %162, %169, %165, %68, %161, %157, %71, %75, %174, %186
  %195 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  call void @_ZN5blink20LayoutBoxModelObject15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBoxModelObject"* %195, i32 %1, %"class.blink::ComputedStyle"* dereferenceable(104) %2) #20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #8

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #5

declare void @_ZN5blink15NGFragmentItems23LayoutObjectWillBeMovedERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #5

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #5

declare void @_ZN5blink20LayoutBoxModelObject15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBoxModelObject"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #9 align 2 {
  %4 = alloca <2 x float>, align 8
  %5 = bitcast <2 x float>* %4 to %"class.blink::FloatSize"*
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  tail call void @_ZN5blink20LayoutBoxModelObject14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBoxModelObject"* %10, i32 %1, %"class.blink::ComputedStyle"* %2) #20
  %11 = load i96, i96* %8, align 4
  %12 = and i96 %11, 38654705664
  %13 = icmp eq i96 %12, 34359738368
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = and i96 %11, -34359738369
  store i96 %15, i96* %8, align 4
  br label %16

16:                                               ; preds = %3, %14
  %17 = phi i96 [ %11, %3 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %20, label %30, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::LayoutObject"* %19 to i1 (%"class.blink::LayoutObject"*)***
  %23 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %23, i64 24
  %25 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* nonnull %19) #20
  %27 = bitcast %"class.blink::LayoutObject"* %19 to %"class.blink::LayoutBlockFlow"*
  %28 = select i1 %26, %"class.blink::LayoutBlockFlow"* %27, %"class.blink::LayoutBlockFlow"* null
  %29 = load i96, i96* %8, align 4
  br label %30

30:                                               ; preds = %16, %21
  %31 = phi i96 [ %29, %21 ], [ %17, %16 ]
  %32 = phi %"class.blink::LayoutBlockFlow"* [ %28, %21 ], [ null, %16 ]
  %33 = and i96 %31, 8388608
  %34 = icmp ne i96 %33, 0
  %35 = and i96 %31, 113336795588871485128704
  %36 = icmp eq i96 %35, 75557863725914323419136
  %37 = or i1 %36, %34
  %38 = icmp ne %"class.blink::ComputedStyle"* %2, null
  %39 = and i1 %38, %37
  br i1 %39, label %40, label %53

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 16528282690043758247936
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %40
  %47 = and i160 %43, 7253554917687775048237056
  %48 = icmp ne i160 %47, 0
  %49 = icmp ne %"class.blink::LayoutBlockFlow"* %32, null
  %50 = and i1 %49, %48
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  tail call void @_ZN5blink15LayoutBlockFlow30ChildBecameFloatingOrOutOfFlowEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"* nonnull %32, %"class.blink::LayoutBox"* %0) #20
  %52 = load i96, i96* %8, align 4
  br label %53

53:                                               ; preds = %40, %46, %51, %30
  %54 = phi i96 [ %31, %40 ], [ %31, %46 ], [ %52, %51 ], [ %31, %30 ]
  %55 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %56 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %55, align 8
  %57 = and i96 %54, 63
  %58 = icmp ne i96 %57, 0
  %59 = and i1 %38, %58
  br i1 %59, label %60, label %70

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %62 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %61, align 8
  %63 = icmp eq %"struct.blink::LayoutBoxRareData"* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %62, i64 0, i32 9
  %66 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %65, align 8
  %67 = icmp eq %"class.blink::LayoutBlock"* %66, null
  br i1 %67, label %70, label %68

68:                                               ; preds = %64
  tail call void @_ZN5blink11LayoutBlock29RemovePercentHeightDescendantEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* nonnull %66, %"class.blink::LayoutBox"* %0) #20
  %69 = load i96, i96* %8, align 4
  br label %70

70:                                               ; preds = %68, %64, %60, %53
  %71 = phi i96 [ %69, %68 ], [ %54, %64 ], [ %54, %60 ], [ %54, %53 ]
  %72 = xor i96 %71, %9
  %73 = trunc i96 %72 to i32
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %75, label %154

75:                                               ; preds = %70
  br i1 %38, label %76, label %122

76:                                               ; preds = %75
  %77 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %78 = icmp eq %"class.blink::LayoutObject"* %77, null
  br i1 %78, label %104, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %77, i64 0, i32 4
  %81 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %80 to i96*
  %82 = load i96, i96* %81, align 4
  %83 = xor i96 %71, %82
  %84 = trunc i96 %83 to i32
  %85 = icmp slt i32 %84, 0
  br i1 %85, label %86, label %104

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %87, align 8
  %89 = icmp eq %"class.blink::Node"* %88, null
  br i1 %89, label %90, label %97

90:                                               ; preds = %86, %90
  %91 = phi %"class.blink::LayoutObject"* [ %93, %90 ], [ %6, %86 ]
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %91, i64 0, i32 7
  %93 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %93, i64 0, i32 6, i32 0, i32 0
  %95 = load %"class.blink::Node"*, %"class.blink::Node"** %94, align 8
  %96 = icmp eq %"class.blink::Node"* %95, null
  br i1 %96, label %90, label %97

97:                                               ; preds = %90, %86
  %98 = phi %"class.blink::Node"* [ %88, %86 ], [ %95, %90 ]
  %99 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %98, i64 0, i32 3, i32 0, i32 0
  %100 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %100, i64 0, i32 2, i32 0, i32 0
  %102 = load %"class.blink::Document"*, %"class.blink::Document"** %101, align 8
  %103 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %102) #20
  tail call void @_ZN5blink14LocalFrameView28AddOrthogonalWritingModeRootERNS_9LayoutBoxE(%"class.blink::LocalFrameView"* %103, %"class.blink::LayoutBox"* dereferenceable(216) %0) #20
  br label %122

104:                                              ; preds = %76, %79
  %105 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %106 = load %"class.blink::Node"*, %"class.blink::Node"** %105, align 8
  %107 = icmp eq %"class.blink::Node"* %106, null
  br i1 %107, label %108, label %115

108:                                              ; preds = %104, %108
  %109 = phi %"class.blink::LayoutObject"* [ %111, %108 ], [ %6, %104 ]
  %110 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %109, i64 0, i32 7
  %111 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %111, i64 0, i32 6, i32 0, i32 0
  %113 = load %"class.blink::Node"*, %"class.blink::Node"** %112, align 8
  %114 = icmp eq %"class.blink::Node"* %113, null
  br i1 %114, label %108, label %115

115:                                              ; preds = %108, %104
  %116 = phi %"class.blink::Node"* [ %106, %104 ], [ %113, %108 ]
  %117 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %116, i64 0, i32 3, i32 0, i32 0
  %118 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %118, i64 0, i32 2, i32 0, i32 0
  %120 = load %"class.blink::Document"*, %"class.blink::Document"** %119, align 8
  %121 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %120) #20
  tail call void @_ZN5blink14LocalFrameView31RemoveOrthogonalWritingModeRootERNS_9LayoutBoxE(%"class.blink::LocalFrameView"* %121, %"class.blink::LayoutBox"* dereferenceable(216) %0) #20
  br label %122

122:                                              ; preds = %97, %115, %75
  %123 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %124 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %123, align 8
  %125 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %124, i64 13
  %126 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %125, align 8
  %127 = tail call %"class.blink::LayoutObjectChildList"* %126(%"class.blink::LayoutObject"* %6) #20
  %128 = icmp eq %"class.blink::LayoutObjectChildList"* %127, null
  br i1 %128, label %154, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %127, i64 0, i32 0
  %131 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %130, align 8
  %132 = icmp eq %"class.blink::LayoutObject"* %131, null
  br i1 %132, label %154, label %133

133:                                              ; preds = %129, %151
  %134 = phi %"class.blink::LayoutObject"* [ %152, %151 ], [ %131, %129 ]
  %135 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %134, i64 0, i32 4
  %136 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %135 to i96*
  %137 = load i96, i96* %136, align 4
  %138 = and i96 %137, 67108864
  %139 = icmp eq i96 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %133
  %141 = bitcast %"class.blink::LayoutObject"* %134 to %"class.blink::LayoutBox"*
  %142 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %134, i64 2, i32 4, i32 0, i64 4
  %143 = bitcast i8* %142 to %"struct.blink::LayoutBoxRareData"**
  %144 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %143, align 8
  %145 = icmp eq %"struct.blink::LayoutBoxRareData"* %144, null
  br i1 %145, label %151, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %144, i64 0, i32 9
  %148 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %147, align 8
  %149 = icmp eq %"class.blink::LayoutBlock"* %148, null
  br i1 %149, label %151, label %150

150:                                              ; preds = %146
  tail call void @_ZN5blink11LayoutBlock29RemovePercentHeightDescendantEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* nonnull %148, %"class.blink::LayoutBox"* nonnull %141) #20
  br label %151

151:                                              ; preds = %150, %146, %140, %133
  %152 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %134, %"class.blink::LayoutObject"* %6) #20
  %153 = icmp eq %"class.blink::LayoutObject"* %152, null
  br i1 %153, label %154, label %133

154:                                              ; preds = %151, %129, %122, %70
  %155 = bitcast %"class.blink::LayoutBox"* %0 to i8 (%"class.blink::LayoutBox"*)***
  %156 = load i8 (%"class.blink::LayoutBox"*)**, i8 (%"class.blink::LayoutBox"*)*** %155, align 8
  %157 = getelementptr inbounds i8 (%"class.blink::LayoutBox"*)*, i8 (%"class.blink::LayoutBox"*)** %156, i64 187
  %158 = load i8 (%"class.blink::LayoutBox"*)*, i8 (%"class.blink::LayoutBox"*)** %157, align 8
  %159 = tail call zeroext i8 %158(%"class.blink::LayoutBox"* %0) #20
  %160 = load i96, i96* %8, align 4
  %161 = and i8 %159, 3
  %162 = zext i8 %161 to i96
  %163 = shl nuw nsw i96 %162, 87
  %164 = and i96 %160, -464227514732017603087171585
  %165 = or i96 %163, %164
  store i96 %165, i96* %8, align 4
  %166 = and i96 %160, 8589934592
  %167 = icmp eq i96 %166, 0
  %168 = xor i1 %38, true
  %169 = or i1 %167, %168
  br i1 %169, label %217, label %170

170:                                              ; preds = %154
  %171 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %55, align 8
  %172 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %171, i64 0, i32 0, i32 9
  %173 = bitcast [20 x i8]* %172 to i160*
  %174 = load i160, i160* %173, align 8
  %175 = lshr i160 %174, 74
  %176 = trunc i160 %175 to i32
  %177 = and i32 %176, 7
  switch i32 %177, label %178 [
    i32 5, label %217
    i32 2, label %217
  ]

178:                                              ; preds = %170
  %179 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %180 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %180, i64 0, i32 2, i32 0, i32 0
  %182 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %181, align 8
  %183 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %182, i64 0, i32 6
  %184 = load float, float* %183, align 8
  %185 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %56, i64 0, i32 0, i32 1, i32 0, i32 0
  %186 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %185, align 8
  %187 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %186, i64 0, i32 2, i32 0, i32 0
  %188 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %188, i64 0, i32 6
  %190 = load float, float* %189, align 8
  %191 = fcmp une float %184, %190
  br i1 %191, label %192, label %217

192:                                              ; preds = %178
  %193 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %10) #20
  %194 = tail call <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"* %193) #20
  %195 = extractelement <2 x float> %194, i32 0
  %196 = fcmp une float %195, 0.000000e+00
  %197 = extractelement <2 x float> %194, i32 1
  %198 = fcmp une float %197, 0.000000e+00
  %199 = or i1 %196, %198
  br i1 %199, label %200, label %217

200:                                              ; preds = %192
  %201 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %201) #20
  %202 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %185, align 8
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %202, i64 0, i32 2, i32 0, i32 0
  %204 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %204, i64 0, i32 6
  %206 = load float, float* %205, align 8
  %207 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %179, align 8
  %208 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %207, i64 0, i32 2, i32 0, i32 0
  %209 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %208, align 8
  %210 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %209, i64 0, i32 6
  %211 = load float, float* %210, align 8
  %212 = fdiv float %206, %211
  %213 = fmul float %195, %212
  %214 = fmul float %197, %212
  %215 = insertelement <2 x float> undef, float %213, i32 0
  %216 = insertelement <2 x float> %215, float %214, i32 1
  store <2 x float> %216, <2 x float>* %4, align 8
  call void @_ZN5blink24PaintLayerScrollableArea30SetScrollOffsetUnconditionallyERKNS_9FloatSizeENS_5mojom10ScrollTypeE(%"class.blink::PaintLayerScrollableArea"* %193, %"class.blink::FloatSize"* nonnull dereferenceable(8) %5, i32 1) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %201) #20
  br label %217

217:                                              ; preds = %154, %192, %170, %170, %200, %178
  %218 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %55, align 8
  call void @_ZN5blink9LayoutBox38UpdateShapeOutsideInfoAfterStyleChangeERKNS_13ComputedStyleEPS2_(%"class.blink::LayoutBox"* %0, %"class.blink::ComputedStyle"* dereferenceable(104) %218, %"class.blink::ComputedStyle"* %2)
  call void @_ZN5blink9LayoutBox34UpdateGridPositionAfterStyleChangeEPKNS_13ComputedStyleE(%"class.blink::LayoutBox"* %0, %"class.blink::ComputedStyle"* %2)
  %219 = load i96, i96* %8, align 4
  %220 = and i96 %219, 113336795588871485128704
  %221 = icmp eq i96 %220, 75557863725914323419136
  br i1 %221, label %222, label %246

222:                                              ; preds = %217
  %223 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %224 = icmp eq %"class.blink::LayoutObject"* %223, null
  br i1 %224, label %246, label %225

225:                                              ; preds = %222
  %226 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %223, i64 0, i32 5, i32 0
  %227 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %226, align 8
  %228 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %227, i64 0, i32 0, i32 9
  %229 = bitcast [20 x i8]* %228 to i160*
  %230 = load i160, i160* %229, align 8
  %231 = lshr i160 %230, 32
  %232 = trunc i160 %231 to i32
  %233 = and i32 %232, 28
  %234 = or i32 %233, 3
  %235 = icmp eq i32 %234, 19
  br i1 %235, label %236, label %246

236:                                              ; preds = %225
  %237 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %238 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %237, align 8
  %239 = icmp eq %"struct.blink::LayoutBoxRareData"* %238, null
  br i1 %239, label %246, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %238, i64 0, i32 2, i32 0
  store i32 -64, i32* %241, align 4
  %242 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %237, align 8
  %243 = icmp eq %"struct.blink::LayoutBoxRareData"* %242, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %240
  %245 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %242, i64 0, i32 1, i32 0
  store i32 -64, i32* %245, align 8
  br label %246

246:                                              ; preds = %244, %240, %236, %222, %225, %217
  %247 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %248 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %247, align 8
  %249 = icmp eq %"struct.blink::LayoutBoxRareData"* %248, null
  br i1 %249, label %255, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %248, i64 0, i32 0
  %252 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %251, align 8
  %253 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %252, null
  br i1 %253, label %255, label %254

254:                                              ; preds = %250
  call void @_ZN5blink35LayoutMultiColumnSpannerPlaceholder38LayoutObjectInFlowThreadStyleDidChangeEPKNS_13ComputedStyleE(%"class.blink::LayoutMultiColumnSpannerPlaceholder"* nonnull %252, %"class.blink::ComputedStyle"* %2) #20
  br label %255

255:                                              ; preds = %246, %250, %254
  %256 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %257 = load %"class.blink::Node"*, %"class.blink::Node"** %256, align 8
  %258 = icmp eq %"class.blink::Node"* %257, null
  br i1 %258, label %259, label %266

259:                                              ; preds = %255, %259
  %260 = phi %"class.blink::LayoutObject"* [ %262, %259 ], [ %6, %255 ]
  %261 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %260, i64 0, i32 7
  %262 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %261, align 8
  %263 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %262, i64 0, i32 6, i32 0, i32 0
  %264 = load %"class.blink::Node"*, %"class.blink::Node"** %263, align 8
  %265 = icmp eq %"class.blink::Node"* %264, null
  br i1 %265, label %259, label %266

266:                                              ; preds = %259, %255
  %267 = phi %"class.blink::Node"* [ %257, %255 ], [ %264, %259 ]
  %268 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %267, i64 0, i32 3, i32 0, i32 0
  %269 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %268, align 8
  %270 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %269, i64 0, i32 2, i32 0, i32 0
  %271 = load %"class.blink::Document"*, %"class.blink::Document"** %270, align 8
  %272 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %271) #20
  %273 = icmp eq %"class.blink::LocalFrameView"* %272, null
  br i1 %273, label %294, label %274

274:                                              ; preds = %266
  %275 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject25BackgroundTransfersToViewEPKNS_13ComputedStyleE(%"class.blink::LayoutBoxModelObject"* %10, %"class.blink::ComputedStyle"* null) #20
  br i1 %275, label %292, label %276

276:                                              ; preds = %274
  %277 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %55, align 8
  %278 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %277, i64 0, i32 0, i32 6, i32 0, i32 0
  %279 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %278, align 8
  %280 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %279, i64 0, i32 2, i32 5
  %281 = bitcast [7 x i8]* %280 to i56*
  %282 = load i56, i56* %281, align 8
  %283 = and i56 %282, 281474976710656
  %284 = icmp eq i56 %283, 0
  br i1 %284, label %285, label %288

285:                                              ; preds = %276
  %286 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %279, i64 0, i32 2
  call void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"* %286) #20
  %287 = load i56, i56* %281, align 8
  br label %288

288:                                              ; preds = %285, %276
  %289 = phi i56 [ %282, %276 ], [ %287, %285 ]
  %290 = and i56 %289, 70368744177664
  %291 = icmp ne i56 %290, 0
  br label %292

292:                                              ; preds = %288, %274
  %293 = phi i1 [ false, %274 ], [ %291, %288 ]
  call void @_ZN5blink12LayoutObject36SetIsBackgroundAttachmentFixedObjectEb(%"class.blink::LayoutObject"* %6, i1 zeroext %293) #20
  br label %294

294:                                              ; preds = %266, %292
  br i1 %38, label %295, label %456

295:                                              ; preds = %294
  %296 = load i96, i96* %8, align 4
  %297 = and i96 %296, 1099511627776
  %298 = icmp eq i96 %297, 0
  br i1 %298, label %310, label %299

299:                                              ; preds = %295
  %300 = call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %6) #20
  %301 = icmp eq %"class.blink::LayoutFlowThread"* %300, null
  %302 = getelementptr inbounds %"class.blink::LayoutFlowThread", %"class.blink::LayoutFlowThread"* %300, i64 0, i32 0, i32 0, i32 0
  %303 = icmp eq %"class.blink::LayoutBox"* %302, %0
  %304 = or i1 %301, %303
  br i1 %304, label %310, label %305

305:                                              ; preds = %299
  %306 = bitcast %"class.blink::LayoutFlowThread"* %300 to void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)***
  %307 = load void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)**, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)*** %306, align 8
  %308 = getelementptr inbounds void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)*, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)** %307, i64 225
  %309 = load void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)*, void (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*)** %308, align 8
  call void %309(%"class.blink::LayoutFlowThread"* nonnull %300, %"class.blink::LayoutBox"* %0, i32 %1, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %2) #20
  br label %310

310:                                              ; preds = %295, %299, %305
  call void @_ZN5blink9LayoutBox39UpdateScrollSnapMappingAfterStyleChangeERKNS_13ComputedStyleE(%"class.blink::LayoutBox"* %0, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %2)
  %311 = load i96, i96* %8, align 4
  %312 = and i96 %311, 464227514732017603087171584
  %313 = icmp eq i96 %312, 0
  br i1 %313, label %419, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 7, i32 0, i32 0
  %316 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %315, align 8
  %317 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %316, i64 0, i32 27
  %318 = load i16, i16* %317, align 8
  %319 = and i16 %318, 224
  %320 = icmp eq i16 %319, 0
  br i1 %320, label %324, label %321

321:                                              ; preds = %314
  %322 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %316, i64 0, i32 24, i32 0
  %323 = load i32, i32* %322, align 4
  br label %324

324:                                              ; preds = %321, %314
  %325 = phi i32 [ %323, %321 ], [ 0, %314 ]
  %326 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %56, i64 0, i32 0, i32 7, i32 0, i32 0
  %327 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %326, align 8
  %328 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %327, i64 0, i32 27
  %329 = load i16, i16* %328, align 8
  %330 = and i16 %329, 224
  %331 = icmp eq i16 %330, 0
  br i1 %331, label %335, label %332

332:                                              ; preds = %324
  %333 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %327, i64 0, i32 24, i32 0
  %334 = load i32, i32* %333, align 4
  br label %335

335:                                              ; preds = %332, %324
  %336 = phi i32 [ %334, %332 ], [ 0, %324 ]
  %337 = icmp eq i32 %325, %336
  br i1 %337, label %338, label %410

338:                                              ; preds = %335
  %339 = icmp ult i16 %318, 8192
  br i1 %339, label %343, label %340

340:                                              ; preds = %338
  %341 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %316, i64 0, i32 26, i32 0
  %342 = load i32, i32* %341, align 4
  br label %343

343:                                              ; preds = %340, %338
  %344 = phi i32 [ %342, %340 ], [ 0, %338 ]
  %345 = icmp ult i16 %329, 8192
  br i1 %345, label %349, label %346

346:                                              ; preds = %343
  %347 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %327, i64 0, i32 26, i32 0
  %348 = load i32, i32* %347, align 4
  br label %349

349:                                              ; preds = %346, %343
  %350 = phi i32 [ %348, %346 ], [ 0, %343 ]
  %351 = icmp eq i32 %344, %350
  br i1 %351, label %352, label %410

352:                                              ; preds = %349
  %353 = and i16 %318, 3584
  %354 = icmp eq i16 %353, 0
  br i1 %354, label %358, label %355

355:                                              ; preds = %352
  %356 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %316, i64 0, i32 25, i32 0
  %357 = load i32, i32* %356, align 4
  br label %358

358:                                              ; preds = %355, %352
  %359 = phi i32 [ %357, %355 ], [ 0, %352 ]
  %360 = and i16 %329, 3584
  %361 = icmp eq i16 %360, 0
  br i1 %361, label %365, label %362

362:                                              ; preds = %358
  %363 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %327, i64 0, i32 25, i32 0
  %364 = load i32, i32* %363, align 4
  br label %365

365:                                              ; preds = %362, %358
  %366 = phi i32 [ %364, %362 ], [ 0, %358 ]
  %367 = icmp eq i32 %359, %366
  br i1 %367, label %368, label %410

368:                                              ; preds = %365
  %369 = and i16 %318, 14
  %370 = icmp eq i16 %369, 0
  br i1 %370, label %374, label %371

371:                                              ; preds = %368
  %372 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %316, i64 0, i32 23, i32 0
  %373 = load i32, i32* %372, align 4
  br label %374

374:                                              ; preds = %371, %368
  %375 = phi i32 [ %373, %371 ], [ 0, %368 ]
  %376 = and i16 %329, 14
  %377 = icmp eq i16 %376, 0
  br i1 %377, label %381, label %378

378:                                              ; preds = %374
  %379 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %327, i64 0, i32 23, i32 0
  %380 = load i32, i32* %379, align 4
  br label %381

381:                                              ; preds = %374, %378
  %382 = phi i32 [ %380, %378 ], [ 0, %374 ]
  %383 = icmp eq i32 %375, %382
  br i1 %383, label %384, label %410

384:                                              ; preds = %381
  %385 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %316, i64 0, i32 5
  %386 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %327, i64 0, i32 5
  %387 = call zeroext i1 @_ZNK5blink10LengthSizeeqERKS0_(%"class.blink::LengthSize"* %385, %"class.blink::LengthSize"* dereferenceable(16) %386) #20
  br i1 %387, label %388, label %410

388:                                              ; preds = %384
  %389 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %315, align 8
  %390 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %389, i64 0, i32 6
  %391 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %326, align 8
  %392 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %391, i64 0, i32 6
  %393 = call zeroext i1 @_ZNK5blink10LengthSizeeqERKS0_(%"class.blink::LengthSize"* %390, %"class.blink::LengthSize"* dereferenceable(16) %392) #20
  br i1 %393, label %394, label %410

394:                                              ; preds = %388
  %395 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %315, align 8
  %396 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %395, i64 0, i32 3
  %397 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %326, align 8
  %398 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %397, i64 0, i32 3
  %399 = call zeroext i1 @_ZNK5blink10LengthSizeeqERKS0_(%"class.blink::LengthSize"* %396, %"class.blink::LengthSize"* dereferenceable(16) %398) #20
  br i1 %399, label %400, label %410

400:                                              ; preds = %394
  %401 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %315, align 8
  %402 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %401, i64 0, i32 4
  %403 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %326, align 8
  %404 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %403, i64 0, i32 4
  %405 = call zeroext i1 @_ZNK5blink10LengthSizeeqERKS0_(%"class.blink::LengthSize"* %402, %"class.blink::LengthSize"* dereferenceable(16) %404) #20
  br i1 %405, label %406, label %410

406:                                              ; preds = %400
  %407 = call zeroext i1 @_ZNK5blink9LayoutBox14HasControlClipEv(%"class.blink::LayoutBox"* %0)
  br i1 %407, label %408, label %419

408:                                              ; preds = %406
  %409 = call zeroext i1 @_ZNK5blink13ComputedStyle12PaddingEqualERKS0_(%"class.blink::ComputedStyle"* nonnull %2, %"class.blink::ComputedStyle"* dereferenceable(104) %56)
  br i1 %409, label %419, label %410

410:                                              ; preds = %384, %388, %394, %335, %349, %365, %408, %400, %381
  call void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"* %6) #20
  %411 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %412 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %411, align 8
  %413 = icmp eq %"struct.blink::FragmentData::RareData"* %412, null
  br i1 %413, label %419, label %414

414:                                              ; preds = %410
  %415 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %412, i64 0, i32 0, i32 0, i32 0, i32 0
  %416 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %415, align 8
  %417 = icmp eq %"class.blink::PaintLayer"* %416, null
  br i1 %417, label %419, label %418

418:                                              ; preds = %414
  call void @_ZN5blink10PaintLayer31SetNeedsCompositingInputsUpdateEb(%"class.blink::PaintLayer"* nonnull %416, i1 zeroext true) #20
  br label %419

419:                                              ; preds = %310, %410, %414, %406, %408, %418
  %420 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %421 = bitcast [20 x i8]* %420 to i160*
  %422 = load i160, i160* %421, align 8
  %423 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %56, i64 0, i32 0, i32 9
  %424 = bitcast [20 x i8]* %423 to i160*
  %425 = load i160, i160* %424, align 8
  %426 = xor i160 %425, %422
  %427 = and i160 %426, 1188422437713965063903159255040
  %428 = icmp eq i160 %427, 0
  br i1 %428, label %430, label %429

429:                                              ; preds = %419
  call void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"* %6) #20
  br label %430

430:                                              ; preds = %419, %429
  %431 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %432 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %431, align 8
  %433 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %432, i64 0, i32 3, i32 0, i32 0
  %434 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %433, align 8
  %435 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %56, i64 0, i32 0, i32 3, i32 0, i32 0
  %436 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %435, align 8
  %437 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %436, i64 0, i32 3, i32 0, i32 0
  %438 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %437, align 8
  %439 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %434, i64 0, i32 38, i32 0
  %440 = load i32, i32* %439, align 4
  %441 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %438, i64 0, i32 38, i32 0
  %442 = load i32, i32* %441, align 4
  %443 = icmp eq i32 %440, %442
  br i1 %443, label %445, label %444

444:                                              ; preds = %430
  call void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"* %6) #20
  br label %445

445:                                              ; preds = %430, %444
  %446 = load i96, i96* %8, align 4
  %447 = and i96 %446, 1342177280
  %448 = icmp eq i96 %447, 1342177280
  br i1 %448, label %449, label %456

449:                                              ; preds = %445
  %450 = load i160, i160* %421, align 8
  %451 = load i160, i160* %424, align 8
  %452 = xor i160 %451, %450
  %453 = and i160 %452, 41538374868278621028243970633760768
  %454 = icmp eq i160 %453, 0
  br i1 %454, label %456, label %455

455:                                              ; preds = %449
  call void @_ZN5blink12LayoutObject22SetNeedsCollectInlinesEv(%"class.blink::LayoutObject"* %6) #20
  br label %456

456:                                              ; preds = %445, %455, %449, %294
  %457 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %458 = icmp eq %"class.blink::LayoutObject"* %457, null
  br i1 %458, label %492, label %459

459:                                              ; preds = %456
  %460 = bitcast %"class.blink::LayoutObject"* %457 to i1 (%"class.blink::LayoutObject"*, i32)***
  %461 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %460, align 8
  %462 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %461, i64 92
  %463 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %462, align 8
  %464 = call zeroext i1 %463(%"class.blink::LayoutObject"* nonnull %457, i32 24) #20
  br i1 %464, label %465, label %492

465:                                              ; preds = %459
  %466 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %457, i64 3, i32 4, i32 0, i64 4
  %467 = bitcast i8* %466 to i32*
  %468 = load i32, i32* %467, align 8
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %492, label %470

470:                                              ; preds = %465
  %471 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %247, align 8
  %472 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %471, i64 0, i32 13, i32 0, i32 0
  %473 = load %"class.blink::CustomLayoutChild"*, %"class.blink::CustomLayoutChild"** %472, align 8
  %474 = getelementptr inbounds %"class.blink::CustomLayoutChild", %"class.blink::CustomLayoutChild"* %473, i64 0, i32 2, i32 0, i32 0
  %475 = load %"class.blink::PrepopulatedComputedStylePropertyMap"*, %"class.blink::PrepopulatedComputedStylePropertyMap"** %474, align 8
  %476 = load %"class.blink::Node"*, %"class.blink::Node"** %256, align 8
  %477 = icmp eq %"class.blink::Node"* %476, null
  br i1 %477, label %478, label %485

478:                                              ; preds = %470, %478
  %479 = phi %"class.blink::LayoutObject"* [ %481, %478 ], [ %6, %470 ]
  %480 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %479, i64 0, i32 7
  %481 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %480, align 8
  %482 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %481, i64 0, i32 6, i32 0, i32 0
  %483 = load %"class.blink::Node"*, %"class.blink::Node"** %482, align 8
  %484 = icmp eq %"class.blink::Node"* %483, null
  br i1 %484, label %478, label %485

485:                                              ; preds = %478, %470
  %486 = phi %"class.blink::Node"* [ %476, %470 ], [ %483, %478 ]
  %487 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %486, i64 0, i32 3, i32 0, i32 0
  %488 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %487, align 8
  %489 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %488, i64 0, i32 2, i32 0, i32 0
  %490 = load %"class.blink::Document"*, %"class.blink::Document"** %489, align 8
  %491 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %55, align 8
  call void @_ZN5blink36PrepopulatedComputedStylePropertyMap11UpdateStyleERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::PrepopulatedComputedStylePropertyMap"* %475, %"class.blink::Document"* dereferenceable(2848) %490, %"class.blink::ComputedStyle"* dereferenceable(104) %491) #20
  br label %492

492:                                              ; preds = %465, %456, %459, %485
  ret void
}

declare void @_ZN5blink20LayoutBoxModelObject14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBoxModelObject"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #5

declare void @_ZN5blink15LayoutBlockFlow30ChildBecameFloatingOrOutOfFlowEPNS_9LayoutBoxE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox29ClearPercentHeightDescendantsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %4 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, i64 13
  %6 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %5, align 8
  %7 = tail call %"class.blink::LayoutObjectChildList"* %6(%"class.blink::LayoutObject"* %2) #20
  %8 = icmp eq %"class.blink::LayoutObjectChildList"* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %7, i64 0, i32 0
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = icmp eq %"class.blink::LayoutObject"* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %32, %1, %9
  ret void

14:                                               ; preds = %9, %32
  %15 = phi %"class.blink::LayoutObject"* [ %33, %32 ], [ %11, %9 ]
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = and i96 %18, 67108864
  %20 = icmp eq i96 %19, 0
  br i1 %20, label %32, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.blink::LayoutObject"* %15 to %"class.blink::LayoutBox"*
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 2, i32 4, i32 0, i64 4
  %24 = bitcast i8* %23 to %"struct.blink::LayoutBoxRareData"**
  %25 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %24, align 8
  %26 = icmp eq %"struct.blink::LayoutBoxRareData"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %25, i64 0, i32 9
  %29 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %28, align 8
  %30 = icmp eq %"class.blink::LayoutBlock"* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @_ZN5blink11LayoutBlock29RemovePercentHeightDescendantEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* nonnull %29, %"class.blink::LayoutBox"* nonnull %22) #20
  br label %32

32:                                               ; preds = %14, %31, %27, %21
  %33 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %15, %"class.blink::LayoutObject"* %2) #20
  %34 = icmp eq %"class.blink::LayoutObject"* %33, null
  br i1 %34, label %13, label %14
}

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #5

declare <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"*) unnamed_addr #5

declare void @_ZN5blink24PaintLayerScrollableArea30SetScrollOffsetUnconditionallyERKNS_9FloatSizeENS_5mojom10ScrollTypeE(%"class.blink::PaintLayerScrollableArea"*, %"class.blink::FloatSize"* dereferenceable(8), i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox38UpdateShapeOutsideInfoAfterStyleChangeERKNS_13ComputedStyleEPS2_(%"class.blink::LayoutBox"*, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), %"class.blink::ComputedStyle"* readonly) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.blink::LayoutBox"*, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::Length"*
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %12, i64 0, i32 17, i32 0, i32 0
  %14 = load %"class.blink::ShapeValue"*, %"class.blink::ShapeValue"** %13, align 8
  %15 = icmp ne %"class.blink::ComputedStyle"* %2, null
  br i1 %15, label %16, label %25

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %22, i64 0, i32 17, i32 0, i32 0
  %24 = load %"class.blink::ShapeValue"*, %"class.blink::ShapeValue"** %23, align 8
  br label %25

25:                                               ; preds = %3, %16
  %26 = phi %"class.blink::ShapeValue"* [ %24, %16 ], [ null, %3 ]
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %12, i64 0, i32 30
  %28 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #20
  %29 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 1
  %30 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  %31 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 3
  store i64 -6148914691236517206, i64* %5, align 8
  br i1 %15, label %32, label %50

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %38, i64 0, i32 30
  %40 = bitcast %"class.blink::Length"* %39 to i64*
  %41 = load i64, i64* %40, align 4
  store i64 %41, i64* %5, align 8
  %42 = and i64 %41, 280375465082880
  %43 = icmp eq i64 %42, 8796093022208
  br i1 %43, label %44, label %52

44:                                               ; preds = %32
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #20
  %45 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %7, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %47, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %48, align 8
  br label %52

50:                                               ; preds = %25
  %51 = bitcast i64* %5 to i32*
  store i32 0, i32* %51, align 8, !alias.scope !6
  store i8 0, i8* %29, align 4, !alias.scope !6
  store i8 2, i8* %30, align 1, !alias.scope !6
  store i8 0, i8* %31, align 2, !alias.scope !6
  br label %62

52:                                               ; preds = %44, %32
  %53 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* [ %12, %32 ], [ %49, %44 ]
  %54 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %55, i64 0, i32 2, i32 0, i32 0
  %57 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %57, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %59, i64 0, i32 33
  %61 = load float, float* %60, align 8
  br label %62

62:                                               ; preds = %50, %52
  %63 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* [ %53, %52 ], [ %12, %50 ]
  %64 = phi float [ %61, %52 ], [ 0.000000e+00, %50 ]
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %63, i64 0, i32 33
  %66 = load float, float* %65, align 8
  %67 = icmp eq %"class.blink::ShapeValue"* %14, %26
  br i1 %67, label %68, label %107

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %12, i64 0, i32 30, i32 2
  %70 = load i8, i8* %69, align 1
  %71 = load i8, i8* %30, align 1
  %72 = icmp eq i8 %70, %71
  br i1 %72, label %73, label %107

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %12, i64 0, i32 30, i32 1
  %75 = load i8, i8* %74, align 4, !range !4
  %76 = load i8, i8* %29, align 4, !range !4
  %77 = icmp eq i8 %75, %76
  br i1 %77, label %78, label %107

78:                                               ; preds = %73
  %79 = icmp eq i8 %70, 12
  br i1 %79, label %103, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %12, i64 0, i32 30, i32 3
  %82 = load i8, i8* %81, align 2, !range !4
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %80
  %85 = bitcast %"class.blink::Length"* %27 to float*
  %86 = load float, float* %85, align 4
  br label %91

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = sitofp i32 %89 to float
  br label %91

91:                                               ; preds = %87, %84
  %92 = phi float [ %86, %84 ], [ %90, %87 ]
  %93 = load i8, i8* %31, align 2, !range !4
  %94 = icmp eq i8 %93, 0
  %95 = bitcast i64* %5 to float*
  %96 = load float, float* %95, align 8
  %97 = bitcast float %96 to i32
  %98 = sitofp i32 %97 to float
  %99 = select i1 %94, float %98, float %96
  %100 = fcmp oeq float %92, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %91
  %102 = call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %27, %"class.blink::Length"* nonnull dereferenceable(8) %6) #20
  br label %103

103:                                              ; preds = %78, %91, %101
  %104 = phi i1 [ true, %91 ], [ true, %78 ], [ %102, %101 ]
  %105 = fcmp oeq float %66, %64
  %106 = and i1 %105, %104
  br i1 %106, label %145, label %107

107:                                              ; preds = %68, %73, %103, %62
  %108 = icmp eq %"class.blink::ShapeValue"* %14, null
  br i1 %108, label %109, label %126

109:                                              ; preds = %107
  %110 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map to i8*) acquire, align 8
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %116, !prof !5

112:                                              ; preds = %109
  %113 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map) #20
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %112
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #20
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map) #20
  br label %116

116:                                              ; preds = %115, %112, %109
  %117 = bitcast %"class.blink::LayoutBox"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #20
  store %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBox"** %4, align 8
  %118 = call { %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"* } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.4856"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map to %"class.WTF::HashTable.4856"*), %"class.blink::LayoutBox"** nonnull dereferenceable(8) %4) #20
  %119 = extractvalue { %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"* } %118, 0
  %120 = load %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map to %"struct.WTF::KeyValuePair.4859"**), align 8
  %121 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %120, i64 %122
  %124 = icmp eq %"struct.WTF::KeyValuePair.4859"* %123, %119
  br i1 %124, label %136, label %125

125:                                              ; preds = %116
  call void @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE5eraseEPKSC_(%"class.WTF::HashTable.4856"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map to %"class.WTF::HashTable.4856"*), %"struct.WTF::KeyValuePair.4859"* %119) #20
  br label %136

126:                                              ; preds = %107
  %127 = call dereferenceable(56) %"class.blink::ShapeOutsideInfo"* @_ZN5blink16ShapeOutsideInfo10EnsureInfoERKNS_9LayoutBoxE(%"class.blink::LayoutBox"* dereferenceable(216) %0)
  %128 = getelementptr inbounds %"class.blink::ShapeOutsideInfo", %"class.blink::ShapeOutsideInfo"* %127, i64 0, i32 1, i32 0, i32 0, i32 0
  %129 = load %"class.blink::Shape"*, %"class.blink::Shape"** %128, align 8
  store %"class.blink::Shape"* null, %"class.blink::Shape"** %128, align 8
  %130 = icmp eq %"class.blink::Shape"* %129, null
  br i1 %130, label %138, label %131

131:                                              ; preds = %126
  %132 = bitcast %"class.blink::Shape"* %129 to void (%"class.blink::Shape"*)***
  %133 = load void (%"class.blink::Shape"*)**, void (%"class.blink::Shape"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.blink::Shape"*)*, void (%"class.blink::Shape"*)** %133, i64 1
  %135 = load void (%"class.blink::Shape"*)*, void (%"class.blink::Shape"*)** %134, align 8
  call void %135(%"class.blink::Shape"* nonnull %129) #20
  br label %138

136:                                              ; preds = %125, %116
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #20
  %137 = icmp eq %"class.blink::ShapeValue"* %26, null
  br i1 %137, label %145, label %138

138:                                              ; preds = %126, %131, %136
  %139 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %140 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %139 to i96*
  %141 = load i96, i96* %140, align 4
  %142 = and i96 %141, 8388608
  %143 = icmp eq i96 %142, 0
  br i1 %143, label %145, label %144

144:                                              ; preds = %138
  call void @_ZN5blink9LayoutBox45RemoveFloatingOrPositionedChildFromBlockListsEv(%"class.blink::LayoutBox"* %0) #20
  br label %145

145:                                              ; preds = %144, %138, %136, %103
  %146 = load i8, i8* %30, align 1
  %147 = icmp eq i8 %146, 8
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #20
  br label %149

149:                                              ; preds = %145, %148
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox34UpdateGridPositionAfterStyleChangeEPKNS_13ComputedStyleE(%"class.blink::LayoutBox"*, %"class.blink::ComputedStyle"* readonly) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = icmp eq %"class.blink::ComputedStyle"* %1, null
  br i1 %4, label %49, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %34, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::LayoutObject"* %7 to i1 (%"class.blink::LayoutObject"*, i32)***
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, i64 92
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::LayoutObject"* nonnull %7, i32 10) #20
  br i1 %14, label %15, label %34

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116GridStyleChangedEPKNS_13ComputedStyleERS2_(%"class.blink::ComputedStyle"* nonnull %1, %"class.blink::ComputedStyle"* dereferenceable(104) %17)
  br i1 %18, label %19, label %34

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8
  %23 = and i160 %22, 7253554917687775048237056
  %24 = icmp eq i160 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 9
  %27 = bitcast [20 x i8]* %26 to i160*
  %28 = load i160, i160* %27, align 8
  %29 = and i160 %28, 7253554917687775048237056
  %30 = icmp eq i160 %29, 0
  br i1 %30, label %49, label %31

31:                                               ; preds = %25, %19
  %32 = bitcast %"class.blink::LayoutObject"** %6 to %"class.blink::LayoutGrid"**
  %33 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %32, align 8
  tail call void @_ZN5blink10LayoutGrid9DirtyGridEv(%"class.blink::LayoutGrid"* %33) #20
  br label %49

34:                                               ; preds = %5, %15, %9
  %35 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %36 = icmp eq %"class.blink::LayoutBlock"* %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %35, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.blink::LayoutBlock"* %35 to i1 (%"class.blink::LayoutObject"*, i32)***
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, i64 92
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::LayoutObject"* %38, i32 27) #20
  br i1 %43, label %44, label %49

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %47 = tail call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116GridStyleChangedEPKNS_13ComputedStyleERS2_(%"class.blink::ComputedStyle"* nonnull %1, %"class.blink::ComputedStyle"* dereferenceable(104) %46)
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %38, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason12kGridChangedE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null)
  br label %49

49:                                               ; preds = %37, %44, %48, %34, %2, %25, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 0
  %7 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %9
}

declare void @_ZN5blink35LayoutMultiColumnSpannerPlaceholder38LayoutObjectInFlowThreadStyleDidChangeEPKNS_13ComputedStyleE(%"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::ComputedStyle"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox53UpdateBackgroundAttachmentFixedStatusAfterStyleChangeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %13

6:                                                ; preds = %1, %6
  %7 = phi %"class.blink::LayoutObject"* [ %9, %6 ], [ %2, %1 ]
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 7
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %6, label %13

13:                                               ; preds = %6, %1
  %14 = phi %"class.blink::Node"* [ %4, %1 ], [ %11, %6 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %18) #20
  %20 = icmp eq %"class.blink::LocalFrameView"* %19, null
  br i1 %20, label %43, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject25BackgroundTransfersToViewEPKNS_13ComputedStyleE(%"class.blink::LayoutBoxModelObject"* %22, %"class.blink::ComputedStyle"* null) #20
  br i1 %23, label %41, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %26 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %26, i64 0, i32 0, i32 6, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %28, i64 0, i32 2, i32 5
  %30 = bitcast [7 x i8]* %29 to i56*
  %31 = load i56, i56* %30, align 8
  %32 = and i56 %31, 281474976710656
  %33 = icmp eq i56 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %28, i64 0, i32 2
  tail call void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"* %35) #20
  %36 = load i56, i56* %30, align 8
  br label %37

37:                                               ; preds = %24, %34
  %38 = phi i56 [ %31, %24 ], [ %36, %34 ]
  %39 = and i56 %38, 70368744177664
  %40 = icmp ne i56 %39, 0
  br label %41

41:                                               ; preds = %37, %21
  %42 = phi i1 [ false, %21 ], [ %40, %37 ]
  tail call void @_ZN5blink12LayoutObject36SetIsBackgroundAttachmentFixedObjectEb(%"class.blink::LayoutObject"* %2, i1 zeroext %42) #20
  br label %43

43:                                               ; preds = %13, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox39UpdateScrollSnapMappingAfterStyleChangeERKNS_13ComputedStyleE(%"class.blink::LayoutBox"*, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  br label %8

8:                                                ; preds = %6, %8
  %9 = phi %"class.blink::LayoutObject"* [ %11, %8 ], [ %7, %6 ]
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 7
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %8, label %15

15:                                               ; preds = %8, %2
  %16 = phi %"class.blink::Node"* [ %4, %2 ], [ %13, %8 ]
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = tail call dereferenceable(32) %"class.blink::SnapCoordinator"* @_ZN5blink8Document18GetSnapCoordinatorEv(%"class.blink::Document"* %20) #20
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %29 = bitcast %"class.blink::ComputedStyle"** %28 to %"class.blink::ComputedStyleBase"**
  %30 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %30, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %27, i64 0, i32 34, i32 0
  %38 = load i8, i8* %37, align 4, !range !4
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 34, i32 0
  %40 = load i8, i8* %39, align 4, !range !4
  %41 = icmp eq i8 %38, %40
  br i1 %41, label %42, label %275

42:                                               ; preds = %15
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %27, i64 0, i32 34, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 34, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %44, %46
  br i1 %47, label %48, label %275

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %27, i64 0, i32 34, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 34, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %50, %52
  br i1 %53, label %54, label %275

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %27, i64 0, i32 26
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 26
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %27, i64 0, i32 26, i32 2
  %58 = load i8, i8* %57, align 1
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 26, i32 2
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %58, %60
  br i1 %61, label %62, label %275

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %27, i64 0, i32 26, i32 1
  %64 = load i8, i8* %63, align 4, !range !4
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 26, i32 1
  %66 = load i8, i8* %65, align 4, !range !4
  %67 = icmp eq i8 %64, %66
  br i1 %67, label %68, label %275

68:                                               ; preds = %62
  %69 = icmp eq i8 %58, 12
  br i1 %69, label %111, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %27, i64 0, i32 26, i32 3
  %72 = load i8, i8* %71, align 2, !range !4
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %70
  %75 = bitcast %"class.blink::Length"* %55 to float*
  %76 = load float, float* %75, align 4
  br label %81

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %55, i64 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = sitofp i32 %79 to float
  br label %81

81:                                               ; preds = %77, %74
  %82 = phi float [ %76, %74 ], [ %80, %77 ]
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 26, i32 3
  %84 = load i8, i8* %83, align 2, !range !4
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %81
  %87 = bitcast %"class.blink::Length"* %56 to float*
  %88 = load float, float* %87, align 4
  br label %93

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %56, i64 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = sitofp i32 %91 to float
  br label %93

93:                                               ; preds = %89, %86
  %94 = phi float [ %88, %86 ], [ %92, %89 ]
  %95 = fcmp oeq float %82, %94
  br i1 %95, label %111, label %96

96:                                               ; preds = %93
  %97 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %55, %"class.blink::Length"* dereferenceable(8) %56) #20
  br i1 %97, label %98, label %275

98:                                               ; preds = %96
  %99 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %22, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %99, i64 0, i32 2, i32 0, i32 0
  %101 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %101, i64 0, i32 2, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %102, align 8
  %104 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %29, align 8
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %104, i64 0, i32 3, i32 0, i32 0
  %106 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %106, i64 0, i32 2, i32 0, i32 0
  %108 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %108, i64 0, i32 2, i32 0, i32 0
  %110 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %109, align 8
  br label %111

111:                                              ; preds = %98, %68, %93
  %112 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* [ %110, %98 ], [ %36, %68 ], [ %36, %93 ]
  %113 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* [ %103, %98 ], [ %27, %68 ], [ %27, %93 ]
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %113, i64 0, i32 27
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %112, i64 0, i32 27
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %113, i64 0, i32 27, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %112, i64 0, i32 27, i32 2
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %117, %119
  br i1 %120, label %121, label %275

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %113, i64 0, i32 27, i32 1
  %123 = load i8, i8* %122, align 4, !range !4
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %112, i64 0, i32 27, i32 1
  %125 = load i8, i8* %124, align 4, !range !4
  %126 = icmp eq i8 %123, %125
  br i1 %126, label %127, label %275

127:                                              ; preds = %121
  %128 = icmp eq i8 %117, 12
  br i1 %128, label %170, label %129

129:                                              ; preds = %127
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %113, i64 0, i32 27, i32 3
  %131 = load i8, i8* %130, align 2, !range !4
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %129
  %134 = bitcast %"class.blink::Length"* %114 to float*
  %135 = load float, float* %134, align 4
  br label %140

136:                                              ; preds = %129
  %137 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %114, i64 0, i32 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = sitofp i32 %138 to float
  br label %140

140:                                              ; preds = %136, %133
  %141 = phi float [ %135, %133 ], [ %139, %136 ]
  %142 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %112, i64 0, i32 27, i32 3
  %143 = load i8, i8* %142, align 2, !range !4
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = bitcast %"class.blink::Length"* %115 to float*
  %147 = load float, float* %146, align 4
  br label %152

148:                                              ; preds = %140
  %149 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %115, i64 0, i32 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = sitofp i32 %150 to float
  br label %152

152:                                              ; preds = %148, %145
  %153 = phi float [ %147, %145 ], [ %151, %148 ]
  %154 = fcmp oeq float %141, %153
  br i1 %154, label %170, label %155

155:                                              ; preds = %152
  %156 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %114, %"class.blink::Length"* dereferenceable(8) %115) #20
  br i1 %156, label %157, label %275

157:                                              ; preds = %155
  %158 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %22, align 8
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %158, i64 0, i32 2, i32 0, i32 0
  %160 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %160, i64 0, i32 2, i32 0, i32 0
  %162 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %161, align 8
  %163 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %29, align 8
  %164 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %163, i64 0, i32 3, i32 0, i32 0
  %165 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %165, i64 0, i32 2, i32 0, i32 0
  %167 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %167, i64 0, i32 2, i32 0, i32 0
  %169 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %168, align 8
  br label %170

170:                                              ; preds = %157, %127, %152
  %171 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* [ %169, %157 ], [ %112, %127 ], [ %112, %152 ]
  %172 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* [ %162, %157 ], [ %113, %127 ], [ %113, %152 ]
  %173 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %172, i64 0, i32 29
  %174 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %171, i64 0, i32 29
  %175 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %172, i64 0, i32 29, i32 2
  %176 = load i8, i8* %175, align 1
  %177 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %171, i64 0, i32 29, i32 2
  %178 = load i8, i8* %177, align 1
  %179 = icmp eq i8 %176, %178
  br i1 %179, label %180, label %275

180:                                              ; preds = %170
  %181 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %172, i64 0, i32 29, i32 1
  %182 = load i8, i8* %181, align 4, !range !4
  %183 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %171, i64 0, i32 29, i32 1
  %184 = load i8, i8* %183, align 4, !range !4
  %185 = icmp eq i8 %182, %184
  br i1 %185, label %186, label %275

186:                                              ; preds = %180
  %187 = icmp eq i8 %176, 12
  br i1 %187, label %229, label %188

188:                                              ; preds = %186
  %189 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %172, i64 0, i32 29, i32 3
  %190 = load i8, i8* %189, align 2, !range !4
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %195, label %192

192:                                              ; preds = %188
  %193 = bitcast %"class.blink::Length"* %173 to float*
  %194 = load float, float* %193, align 4
  br label %199

195:                                              ; preds = %188
  %196 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %173, i64 0, i32 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = sitofp i32 %197 to float
  br label %199

199:                                              ; preds = %195, %192
  %200 = phi float [ %194, %192 ], [ %198, %195 ]
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %171, i64 0, i32 29, i32 3
  %202 = load i8, i8* %201, align 2, !range !4
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %207, label %204

204:                                              ; preds = %199
  %205 = bitcast %"class.blink::Length"* %174 to float*
  %206 = load float, float* %205, align 4
  br label %211

207:                                              ; preds = %199
  %208 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %174, i64 0, i32 0, i32 0
  %209 = load i32, i32* %208, align 4
  %210 = sitofp i32 %209 to float
  br label %211

211:                                              ; preds = %207, %204
  %212 = phi float [ %206, %204 ], [ %210, %207 ]
  %213 = fcmp oeq float %200, %212
  br i1 %213, label %229, label %214

214:                                              ; preds = %211
  %215 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %173, %"class.blink::Length"* dereferenceable(8) %174) #20
  br i1 %215, label %216, label %275

216:                                              ; preds = %214
  %217 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %22, align 8
  %218 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %217, i64 0, i32 2, i32 0, i32 0
  %219 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %218, align 8
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %219, i64 0, i32 2, i32 0, i32 0
  %221 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %220, align 8
  %222 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %29, align 8
  %223 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %222, i64 0, i32 3, i32 0, i32 0
  %224 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %223, align 8
  %225 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %224, i64 0, i32 2, i32 0, i32 0
  %226 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %225, align 8
  %227 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %226, i64 0, i32 2, i32 0, i32 0
  %228 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %227, align 8
  br label %229

229:                                              ; preds = %216, %186, %211
  %230 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* [ %228, %216 ], [ %171, %186 ], [ %171, %211 ]
  %231 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* [ %221, %216 ], [ %172, %186 ], [ %172, %211 ]
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %231, i64 0, i32 28
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %230, i64 0, i32 28
  %234 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %231, i64 0, i32 28, i32 2
  %235 = load i8, i8* %234, align 1
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %230, i64 0, i32 28, i32 2
  %237 = load i8, i8* %236, align 1
  %238 = icmp eq i8 %235, %237
  br i1 %238, label %239, label %275

239:                                              ; preds = %229
  %240 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %231, i64 0, i32 28, i32 1
  %241 = load i8, i8* %240, align 4, !range !4
  %242 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %230, i64 0, i32 28, i32 1
  %243 = load i8, i8* %242, align 4, !range !4
  %244 = icmp eq i8 %241, %243
  br i1 %244, label %245, label %275

245:                                              ; preds = %239
  %246 = icmp eq i8 %235, 12
  br i1 %246, label %276, label %247

247:                                              ; preds = %245
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %231, i64 0, i32 28, i32 3
  %249 = load i8, i8* %248, align 2, !range !4
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %254, label %251

251:                                              ; preds = %247
  %252 = bitcast %"class.blink::Length"* %232 to float*
  %253 = load float, float* %252, align 4
  br label %258

254:                                              ; preds = %247
  %255 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %232, i64 0, i32 0, i32 0
  %256 = load i32, i32* %255, align 4
  %257 = sitofp i32 %256 to float
  br label %258

258:                                              ; preds = %254, %251
  %259 = phi float [ %253, %251 ], [ %257, %254 ]
  %260 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %230, i64 0, i32 28, i32 3
  %261 = load i8, i8* %260, align 2, !range !4
  %262 = icmp eq i8 %261, 0
  br i1 %262, label %266, label %263

263:                                              ; preds = %258
  %264 = bitcast %"class.blink::Length"* %233 to float*
  %265 = load float, float* %264, align 4
  br label %270

266:                                              ; preds = %258
  %267 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %233, i64 0, i32 0, i32 0
  %268 = load i32, i32* %267, align 4
  %269 = sitofp i32 %268 to float
  br label %270

270:                                              ; preds = %266, %263
  %271 = phi float [ %265, %263 ], [ %269, %266 ]
  %272 = fcmp oeq float %259, %271
  br i1 %272, label %276, label %273

273:                                              ; preds = %270
  %274 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %232, %"class.blink::Length"* dereferenceable(8) %233) #20
  br i1 %274, label %276, label %275

275:                                              ; preds = %273, %214, %155, %96, %48, %229, %239, %170, %180, %111, %121, %54, %62, %15, %42
  tail call void @_ZN5blink15SnapCoordinator22SnapContainerDidChangeERNS_9LayoutBoxE(%"class.blink::SnapCoordinator"* %21, %"class.blink::LayoutBox"* dereferenceable(216) %0) #20
  br label %276

276:                                              ; preds = %273, %245, %270, %275
  %277 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %22, align 8
  %278 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %277, i64 0, i32 2, i32 0, i32 0
  %279 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %278, align 8
  %280 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %279, i64 0, i32 2, i32 0, i32 0
  %281 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %280, align 8
  %282 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %29, align 8
  %283 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %282, i64 0, i32 3, i32 0, i32 0
  %284 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %283, align 8
  %285 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %284, i64 0, i32 2, i32 0, i32 0
  %286 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %285, align 8
  %287 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %286, i64 0, i32 2, i32 0, i32 0
  %288 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %287, align 8
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %288, i64 0, i32 35
  %290 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %281, i64 0, i32 35, i32 0
  %291 = load i32, i32* %290, align 4
  %292 = getelementptr inbounds %"struct.cc::ScrollSnapAlign", %"struct.cc::ScrollSnapAlign"* %289, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  %294 = icmp eq i32 %291, %293
  br i1 %294, label %295, label %339

295:                                              ; preds = %276
  %296 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %281, i64 0, i32 35, i32 1
  %297 = load i32, i32* %296, align 4
  %298 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %288, i64 0, i32 35, i32 1
  %299 = load i32, i32* %298, align 4
  %300 = icmp eq i32 %297, %299
  br i1 %300, label %301, label %339

301:                                              ; preds = %295
  %302 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %303 = bitcast [20 x i8]* %302 to i160*
  %304 = load i160, i160* %303, align 8
  %305 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %282, i64 0, i32 9
  %306 = bitcast [20 x i8]* %305 to i160*
  %307 = load i160, i160* %306, align 8
  %308 = xor i160 %307, %304
  %309 = and i160 %308, 11417981541647679048466287755595961091061972992
  %310 = icmp eq i160 %309, 0
  br i1 %310, label %311, label %339

311:                                              ; preds = %301
  %312 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %277, i64 0, i32 3, i32 0, i32 0
  %313 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %312, align 8
  %314 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %313, i64 0, i32 24
  %315 = load float, float* %314, align 8
  %316 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %284, i64 0, i32 3, i32 0, i32 0
  %317 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %316, align 8
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %317, i64 0, i32 24
  %319 = load float, float* %318, align 8
  %320 = fcmp une float %315, %319
  br i1 %320, label %339, label %321

321:                                              ; preds = %311
  %322 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %313, i64 0, i32 25
  %323 = load float, float* %322, align 4
  %324 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %317, i64 0, i32 25
  %325 = load float, float* %324, align 4
  %326 = fcmp une float %323, %325
  br i1 %326, label %339, label %327

327:                                              ; preds = %321
  %328 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %313, i64 0, i32 27
  %329 = load float, float* %328, align 4
  %330 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %317, i64 0, i32 27
  %331 = load float, float* %330, align 4
  %332 = fcmp une float %329, %331
  br i1 %332, label %339, label %333

333:                                              ; preds = %327
  %334 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %313, i64 0, i32 26
  %335 = load float, float* %334, align 8
  %336 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %317, i64 0, i32 26
  %337 = load float, float* %336, align 8
  %338 = fcmp une float %335, %337
  br i1 %338, label %339, label %346

339:                                              ; preds = %295, %276, %301, %333, %327, %321, %311
  %340 = bitcast %"struct.cc::ScrollSnapAlign"* %289 to i64*
  %341 = load i64, i64* %340, align 4
  tail call void @_ZN5blink15SnapCoordinator17SnapAreaDidChangeERNS_9LayoutBoxEN2cc15ScrollSnapAlignE(%"class.blink::SnapCoordinator"* %21, %"class.blink::LayoutBox"* dereferenceable(216) %0, i64 %341) #20
  %342 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %22, align 8
  %343 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %29, align 8
  %344 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %343, i64 0, i32 3, i32 0, i32 0
  %345 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %344, align 8
  br label %346

346:                                              ; preds = %339, %333
  %347 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* [ %345, %339 ], [ %284, %333 ]
  %348 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* [ %342, %339 ], [ %277, %333 ]
  %349 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %348, i64 0, i32 4
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %347, i64 0, i32 4
  %351 = tail call zeroext i1 @_ZNK5blink19TransformOperationseqERKS0_(%"class.blink::TransformOperations"* %349, %"class.blink::TransformOperations"* dereferenceable(16) %350) #20
  br i1 %351, label %363, label %352

352:                                              ; preds = %346
  %353 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %29, align 8
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %353, i64 0, i32 3, i32 0, i32 0
  %355 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %354, align 8
  %356 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %355, i64 0, i32 2, i32 0, i32 0
  %357 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %356, align 8
  %358 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %357, i64 0, i32 2, i32 0, i32 0
  %359 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %358, align 8
  %360 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %359, i64 0, i32 35
  %361 = bitcast %"struct.cc::ScrollSnapAlign"* %360 to i64*
  %362 = load i64, i64* %361, align 4
  tail call void @_ZN5blink15SnapCoordinator17SnapAreaDidChangeERNS_9LayoutBoxEN2cc15ScrollSnapAlignE(%"class.blink::SnapCoordinator"* %21, %"class.blink::LayoutBox"* dereferenceable(216) %0, i64 %362) #20
  br label %363

363:                                              ; preds = %346, %352
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox14HasControlClipEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %4 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %4, i64 92
  %6 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::LayoutObject"* %2, i32 53) #20
  br i1 %7, label %57, label %8, !prof !11

8:                                                ; preds = %1
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %3, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, i64 92
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::LayoutObject"* %2, i32 35) #20
  br i1 %12, label %57, label %13, !prof !2

13:                                               ; preds = %8
  %14 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %3, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, i64 92
  %16 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::LayoutObject"* %2, i32 7) #20
  br i1 %17, label %57, label %18, !prof !2

18:                                               ; preds = %13
  %19 = tail call zeroext i1 @_ZN5blink10IsMenuListEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %2) #20
  br i1 %19, label %57, label %20, !prof !2

20:                                               ; preds = %18
  %21 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %3, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %21, i64 92
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::LayoutObject"* %2, i32 1) #20
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %3, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %26, i64 92
  %28 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::LayoutObject"* %2, i32 23) #20
  br i1 %29, label %30, label %57

30:                                               ; preds = %20, %25
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %32 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %31 to i96*
  %33 = load i96, i96* %32, align 4
  %34 = and i96 %33, 16777216
  %35 = icmp eq i96 %34, 0
  br i1 %35, label %36, label %57

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = and i32 %42, 48
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %47 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 1, i32 2
  %50 = bitcast %"class.blink::Member.318"* %49 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %53, %55
  br label %57

57:                                               ; preds = %30, %1, %45, %40, %36, %25, %18, %13, %8
  %58 = phi i1 [ true, %18 ], [ true, %13 ], [ true, %8 ], [ false, %25 ], [ false, %36 ], [ false, %40 ], [ %56, %45 ], [ true, %1 ], [ false, %30 ]
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ComputedStyle12PaddingEqualERKS0_(%"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %4, i64 0, i32 16
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 7, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %7, i64 0, i32 16
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %4, i64 0, i32 16, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %7, i64 0, i32 16, i32 2
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %10, %12
  br i1 %13, label %14, label %197

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %4, i64 0, i32 16, i32 1
  %16 = load i8, i8* %15, align 4, !range !4
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %7, i64 0, i32 16, i32 1
  %18 = load i8, i8* %17, align 4, !range !4
  %19 = icmp eq i8 %16, %18
  br i1 %19, label %20, label %197

20:                                               ; preds = %14
  %21 = icmp eq i8 %10, 12
  br i1 %21, label %53, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %4, i64 0, i32 16, i32 3
  %24 = load i8, i8* %23, align 2, !range !4
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.blink::Length"* %5 to float*
  %28 = load float, float* %27, align 4
  br label %33

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = sitofp i32 %31 to float
  br label %33

33:                                               ; preds = %29, %26
  %34 = phi float [ %28, %26 ], [ %32, %29 ]
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %7, i64 0, i32 16, i32 3
  %36 = load i8, i8* %35, align 2, !range !4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.blink::Length"* %8 to float*
  %40 = load float, float* %39, align 4
  br label %45

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = sitofp i32 %43 to float
  br label %45

45:                                               ; preds = %41, %38
  %46 = phi float [ %40, %38 ], [ %44, %41 ]
  %47 = fcmp oeq float %34, %46
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %5, %"class.blink::Length"* dereferenceable(8) %8) #20
  br i1 %49, label %50, label %197

50:                                               ; preds = %48
  %51 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %3, align 8
  %52 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %6, align 8
  br label %53

53:                                               ; preds = %50, %20, %45
  %54 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %52, %50 ], [ %7, %20 ], [ %7, %45 ]
  %55 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %51, %50 ], [ %4, %20 ], [ %4, %45 ]
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %55, i64 0, i32 14
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %54, i64 0, i32 14
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %55, i64 0, i32 14, i32 2
  %59 = load i8, i8* %58, align 1
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %54, i64 0, i32 14, i32 2
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %59, %61
  br i1 %62, label %63, label %197

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %55, i64 0, i32 14, i32 1
  %65 = load i8, i8* %64, align 4, !range !4
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %54, i64 0, i32 14, i32 1
  %67 = load i8, i8* %66, align 4, !range !4
  %68 = icmp eq i8 %65, %67
  br i1 %68, label %69, label %197

69:                                               ; preds = %63
  %70 = icmp eq i8 %59, 12
  br i1 %70, label %102, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %55, i64 0, i32 14, i32 3
  %73 = load i8, i8* %72, align 2, !range !4
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.blink::Length"* %56 to float*
  %77 = load float, float* %76, align 4
  br label %82

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %56, i64 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = sitofp i32 %80 to float
  br label %82

82:                                               ; preds = %78, %75
  %83 = phi float [ %77, %75 ], [ %81, %78 ]
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %54, i64 0, i32 14, i32 3
  %85 = load i8, i8* %84, align 2, !range !4
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %82
  %88 = bitcast %"class.blink::Length"* %57 to float*
  %89 = load float, float* %88, align 4
  br label %94

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %57, i64 0, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = sitofp i32 %92 to float
  br label %94

94:                                               ; preds = %90, %87
  %95 = phi float [ %89, %87 ], [ %93, %90 ]
  %96 = fcmp oeq float %83, %95
  br i1 %96, label %102, label %97

97:                                               ; preds = %94
  %98 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %56, %"class.blink::Length"* dereferenceable(8) %57) #20
  br i1 %98, label %99, label %197

99:                                               ; preds = %97
  %100 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %3, align 8
  %101 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %6, align 8
  br label %102

102:                                              ; preds = %99, %69, %94
  %103 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %101, %99 ], [ %54, %69 ], [ %54, %94 ]
  %104 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %100, %99 ], [ %55, %69 ], [ %55, %94 ]
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %104, i64 0, i32 15
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 15
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %104, i64 0, i32 15, i32 2
  %108 = load i8, i8* %107, align 1
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 15, i32 2
  %110 = load i8, i8* %109, align 1
  %111 = icmp eq i8 %108, %110
  br i1 %111, label %112, label %197

112:                                              ; preds = %102
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %104, i64 0, i32 15, i32 1
  %114 = load i8, i8* %113, align 4, !range !4
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 15, i32 1
  %116 = load i8, i8* %115, align 4, !range !4
  %117 = icmp eq i8 %114, %116
  br i1 %117, label %118, label %197

118:                                              ; preds = %112
  %119 = icmp eq i8 %108, 12
  br i1 %119, label %151, label %120

120:                                              ; preds = %118
  %121 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %104, i64 0, i32 15, i32 3
  %122 = load i8, i8* %121, align 2, !range !4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %127, label %124

124:                                              ; preds = %120
  %125 = bitcast %"class.blink::Length"* %105 to float*
  %126 = load float, float* %125, align 4
  br label %131

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %105, i64 0, i32 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = sitofp i32 %129 to float
  br label %131

131:                                              ; preds = %127, %124
  %132 = phi float [ %126, %124 ], [ %130, %127 ]
  %133 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 15, i32 3
  %134 = load i8, i8* %133, align 2, !range !4
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %139, label %136

136:                                              ; preds = %131
  %137 = bitcast %"class.blink::Length"* %106 to float*
  %138 = load float, float* %137, align 4
  br label %143

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %106, i64 0, i32 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = sitofp i32 %141 to float
  br label %143

143:                                              ; preds = %139, %136
  %144 = phi float [ %138, %136 ], [ %142, %139 ]
  %145 = fcmp oeq float %132, %144
  br i1 %145, label %151, label %146

146:                                              ; preds = %143
  %147 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %105, %"class.blink::Length"* dereferenceable(8) %106) #20
  br i1 %147, label %148, label %197

148:                                              ; preds = %146
  %149 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %3, align 8
  %150 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %6, align 8
  br label %151

151:                                              ; preds = %148, %118, %143
  %152 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %150, %148 ], [ %103, %118 ], [ %103, %143 ]
  %153 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %149, %148 ], [ %104, %118 ], [ %104, %143 ]
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %153, i64 0, i32 13
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %152, i64 0, i32 13
  %156 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %153, i64 0, i32 13, i32 2
  %157 = load i8, i8* %156, align 1
  %158 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %152, i64 0, i32 13, i32 2
  %159 = load i8, i8* %158, align 1
  %160 = icmp eq i8 %157, %159
  br i1 %160, label %161, label %197

161:                                              ; preds = %151
  %162 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %153, i64 0, i32 13, i32 1
  %163 = load i8, i8* %162, align 4, !range !4
  %164 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %152, i64 0, i32 13, i32 1
  %165 = load i8, i8* %164, align 4, !range !4
  %166 = icmp eq i8 %163, %165
  br i1 %166, label %167, label %197

167:                                              ; preds = %161
  %168 = icmp eq i8 %157, 12
  br i1 %168, label %197, label %169

169:                                              ; preds = %167
  %170 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %153, i64 0, i32 13, i32 3
  %171 = load i8, i8* %170, align 2, !range !4
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %176, label %173

173:                                              ; preds = %169
  %174 = bitcast %"class.blink::Length"* %154 to float*
  %175 = load float, float* %174, align 4
  br label %180

176:                                              ; preds = %169
  %177 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %154, i64 0, i32 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = sitofp i32 %178 to float
  br label %180

180:                                              ; preds = %176, %173
  %181 = phi float [ %175, %173 ], [ %179, %176 ]
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %152, i64 0, i32 13, i32 3
  %183 = load i8, i8* %182, align 2, !range !4
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %188, label %185

185:                                              ; preds = %180
  %186 = bitcast %"class.blink::Length"* %155 to float*
  %187 = load float, float* %186, align 4
  br label %192

188:                                              ; preds = %180
  %189 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %155, i64 0, i32 0, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = sitofp i32 %190 to float
  br label %192

192:                                              ; preds = %188, %185
  %193 = phi float [ %187, %185 ], [ %191, %188 ]
  %194 = fcmp oeq float %181, %193
  br i1 %194, label %197, label %195

195:                                              ; preds = %192
  %196 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %154, %"class.blink::Length"* dereferenceable(8) %155) #20
  br label %197

197:                                              ; preds = %102, %112, %53, %63, %2, %14, %195, %192, %167, %161, %151, %146, %97, %48
  %198 = phi i1 [ false, %146 ], [ false, %97 ], [ false, %48 ], [ false, %161 ], [ false, %151 ], [ true, %192 ], [ true, %167 ], [ %196, %195 ], [ false, %14 ], [ false, %2 ], [ false, %63 ], [ false, %53 ], [ false, %112 ], [ false, %102 ]
  ret i1 %198
}

declare void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

declare void @_ZN5blink10PaintLayer31SetNeedsCompositingInputsUpdateEb(%"class.blink::PaintLayer"*, i1 zeroext) local_unnamed_addr #5

declare void @_ZN5blink12LayoutObject22SetNeedsCollectInlinesEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox12IsCustomItemEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::LayoutObject"* %3 to i1 (%"class.blink::LayoutObject"*, i32)***
  %7 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %7, i64 92
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::LayoutObject"* nonnull %3, i32 24) #20
  br i1 %10, label %11, label %16

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 3, i32 4, i32 0, i64 4
  %13 = bitcast i8* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = icmp ne i32 %14, 0
  br label %16

16:                                               ; preds = %5, %1, %11
  %17 = phi i1 [ %15, %11 ], [ false, %5 ], [ false, %1 ]
  ret i1 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::CustomLayoutChild"* @_ZNK5blink9LayoutBox20GetCustomLayoutChildEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 13, i32 0, i32 0
  %5 = load %"class.blink::CustomLayoutChild"*, %"class.blink::CustomLayoutChild"** %4, align 8
  ret %"class.blink::CustomLayoutChild"* %5
}

declare void @_ZN5blink36PrepopulatedComputedStylePropertyMap11UpdateStyleERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::PrepopulatedComputedStylePropertyMap"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #5

declare void @_ZN5blink12LayoutObject36SetIsBackgroundAttachmentFixedObjectEb(%"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject25BackgroundTransfersToViewEPKNS_13ComputedStyleE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::ComputedStyle"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::ShapeOutsideInfo"* @_ZN5blink16ShapeOutsideInfo10EnsureInfoERKNS_9LayoutBoxE(%"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.blink::LayoutBox"*, align 8
  %3 = alloca %"class.blink::LayoutBox"*, align 8
  %4 = alloca %"class.std::__1::unique_ptr.4860", align 8
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11, !prof !5

7:                                                ; preds = %1
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map) #20
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #20
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map) #20
  br label %11

11:                                               ; preds = %1, %7, %10
  %12 = bitcast %"class.blink::LayoutBox"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #20
  store %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBox"** %2, align 8
  %13 = call %"class.blink::ShapeOutsideInfo"* @_ZNK3WTF7HashMapIPKN5blink9LayoutBoxENSt3__110unique_ptrINS1_16ShapeOutsideInfoENS5_14default_deleteIS7_EEEENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENSD_ISA_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.4855"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map to %"class.WTF::HashMap.4855"*), %"class.blink::LayoutBox"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #20
  %14 = icmp eq %"class.blink::ShapeOutsideInfo"* %13, null
  br i1 %14, label %15, label %42

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::LayoutBox"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #20
  store %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBox"** %3, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.4860"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #20
  %18 = call noalias i8* @malloc(i64 56) #20
  %19 = bitcast i8* %18 to %"class.blink::LayoutBox"**
  store %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBox"** %19, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  %21 = getelementptr inbounds i8, i8* %18, i64 48
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.4860", %"class.std::__1::unique_ptr.4860"* %4, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr.4860"* %4 to i8**
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 37, i1 false)
  store i8* %18, i8** %23, align 8
  %24 = call { %"struct.WTF::KeyValuePair.4859"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISK_SF_SL_EES4_SB_EENS_18HashTableAddResultISM_SC_EEOT0_OT1_(%"class.WTF::HashTable.4856"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map to %"class.WTF::HashTable.4856"*), %"class.blink::LayoutBox"** nonnull dereferenceable(8) %3, %"class.std::__1::unique_ptr.4860"* nonnull dereferenceable(8) %4) #20
  %25 = extractvalue { %"struct.WTF::KeyValuePair.4859"*, i8 } %24, 0
  %26 = load %"class.blink::ShapeOutsideInfo"*, %"class.blink::ShapeOutsideInfo"** %22, align 8
  store %"class.blink::ShapeOutsideInfo"* null, %"class.blink::ShapeOutsideInfo"** %22, align 8
  %27 = icmp eq %"class.blink::ShapeOutsideInfo"* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.blink::ShapeOutsideInfo", %"class.blink::ShapeOutsideInfo"* %26, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.blink::Shape"*, %"class.blink::Shape"** %29, align 8
  store %"class.blink::Shape"* null, %"class.blink::Shape"** %29, align 8
  %31 = icmp eq %"class.blink::Shape"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.blink::Shape"* %30 to void (%"class.blink::Shape"*)***
  %34 = load void (%"class.blink::Shape"*)**, void (%"class.blink::Shape"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::Shape"*)*, void (%"class.blink::Shape"*)** %34, i64 1
  %36 = load void (%"class.blink::Shape"*)*, void (%"class.blink::Shape"*)** %35, align 8
  call void %36(%"class.blink::Shape"* nonnull %30) #20
  br label %37

37:                                               ; preds = %32, %28
  %38 = bitcast %"class.blink::ShapeOutsideInfo"* %26 to i8*
  call void @free(i8* %38) #20
  br label %39

39:                                               ; preds = %15, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #20
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %25, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %"class.blink::ShapeOutsideInfo"*, %"class.blink::ShapeOutsideInfo"** %40, align 8
  br label %42

42:                                               ; preds = %11, %39
  %43 = phi %"class.blink::ShapeOutsideInfo"* [ %41, %39 ], [ %13, %11 ]
  ret %"class.blink::ShapeOutsideInfo"* %43
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116GridStyleChangedEPKNS_13ComputedStyleERS2_(%"class.blink::ComputedStyle"* nocapture readonly, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) unnamed_addr #10 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %12, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 6, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %14, i64 0, i32 6, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %104

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 6, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %14, i64 0, i32 6, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %104

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %14, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %28, %30
  br i1 %31, label %32, label %104

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 5, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %14, i64 0, i32 5, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %104

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 5, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %14, i64 0, i32 5, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %104

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %14, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %46, %48
  br i1 %49, label %50, label %104

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 8, i32 0
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %14, i64 0, i32 8, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %104

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 8, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %14, i64 0, i32 8, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %58, %60
  br i1 %61, label %62, label %104

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %14, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %68, label %104

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 7, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %14, i64 0, i32 7, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %70, %72
  br i1 %73, label %74, label %104

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 7, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %14, i64 0, i32 7, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %80, label %104

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %14, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %82, %84
  br i1 %85, label %86, label %104

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %6, i64 0, i32 9
  %88 = load i32, i32* %87, align 8
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %12, i64 0, i32 9
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %88, %90
  br i1 %91, label %92, label %104

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %94 = bitcast [20 x i8]* %93 to i160*
  %95 = load i160, i160* %94, align 8
  %96 = and i160 %95, 7253554917687775048237056
  %97 = icmp eq i160 %96, 0
  %98 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %99 = bitcast [20 x i8]* %98 to i160*
  %100 = load i160, i160* %99, align 8
  %101 = and i160 %100, 7253554917687775048237056
  %102 = icmp eq i160 %101, 0
  %103 = xor i1 %97, %102
  br label %104

104:                                              ; preds = %80, %62, %44, %26, %68, %74, %50, %56, %32, %38, %2, %20, %86, %92
  %105 = phi i1 [ true, %86 ], [ true, %80 ], [ true, %62 ], [ true, %44 ], [ true, %26 ], [ %103, %92 ], [ true, %20 ], [ true, %2 ], [ true, %38 ], [ true, %32 ], [ true, %56 ], [ true, %50 ], [ true, %74 ], [ true, %68 ]
  ret i1 %105
}

declare void @_ZN5blink10LayoutGrid9DirtyGridEv(%"class.blink::LayoutGrid"*) local_unnamed_addr #5

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon.4877, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #20
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !3

23:                                               ; preds = %19
  %24 = bitcast %class.anon.4877* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #20
  %25 = getelementptr inbounds %class.anon.4877, %class.anon.4877* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon.4877, %class.anon.4877* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #20
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #20
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #20
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), %class.anon.4877* nonnull dereferenceable(16) %7) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #20
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #20
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #20
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare dereferenceable(32) %"class.blink::SnapCoordinator"* @_ZN5blink8Document18GetSnapCoordinatorEv(%"class.blink::Document"*) local_unnamed_addr #5

declare void @_ZN5blink15SnapCoordinator22SnapContainerDidChangeERNS_9LayoutBoxE(%"class.blink::SnapCoordinator"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #5

declare void @_ZN5blink15SnapCoordinator17SnapAreaDidChangeERNS_9LayoutBoxEN2cc15ScrollSnapAlignE(%"class.blink::SnapCoordinator"*, %"class.blink::LayoutBox"* dereferenceable(216), i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox15UpdateFromStyleEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  tail call void @_ZN5blink20LayoutBoxModelObject15UpdateFromStyleEv(%"class.blink::LayoutBoxModelObject"* %2) #20
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 16528282690043758247936
  %9 = icmp eq i160 %8, 0
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 113336795588871485128704
  %14 = icmp eq i96 %13, 75557863725914323419136
  %15 = or i1 %9, %14
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = lshr i160 %7, 113
  %18 = trunc i160 %17 to i96
  %19 = and i96 %18, 8388608
  %20 = xor i96 %19, 8388608
  br label %21

21:                                               ; preds = %1, %16
  %22 = phi i96 [ %20, %16 ], [ 0, %1 ]
  %23 = and i96 %12, -8388609
  %24 = or i96 %23, %22
  store i96 %24, i96* %11, align 4
  %25 = tail call zeroext i1 @_ZNK5blink13ComputedStyle27HasTransformRelatedPropertyEv(%"class.blink::ComputedStyle"* %4)
  %26 = zext i1 %25 to i96
  %27 = load i96, i96* %11, align 4
  %28 = shl nuw nsw i96 %26, 34
  %29 = and i96 %27, -17179869185
  %30 = or i96 %29, %28
  store i96 %30, i96* %11, align 4
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 15, i32 0
  %38 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %37, align 8
  %39 = icmp ne %"class.blink::StyleReflection"* %38, null
  %40 = zext i1 %39 to i96
  %41 = shl nuw nsw i96 %40, 35
  %42 = and i96 %30, -34359738369
  %43 = or i96 %41, %42
  store i96 %43, i96* %11, align 4
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 7, i32 0, i32 0
  %45 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %45, i64 0, i32 27
  %47 = load i16, i16* %46, align 8
  %48 = and i16 %47, 224
  %49 = icmp eq i16 %48, 0
  br i1 %49, label %57, label %50

50:                                               ; preds = %21
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %45, i64 0, i32 24, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp ne i32 %52, 0
  %54 = and i16 %47, 240
  %55 = icmp ne i16 %54, 0
  %56 = and i1 %55, %53
  br i1 %56, label %95, label %57

57:                                               ; preds = %50, %21
  %58 = and i16 %47, 3584
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %67, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %45, i64 0, i32 25, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp ne i32 %62, 0
  %64 = and i16 %47, 3840
  %65 = icmp ne i16 %64, 0
  %66 = and i1 %65, %63
  br i1 %66, label %95, label %67

67:                                               ; preds = %60, %57
  %68 = icmp ult i16 %47, 8192
  br i1 %68, label %73, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %45, i64 0, i32 26, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %95

73:                                               ; preds = %69, %67
  %74 = and i16 %47, 14
  %75 = icmp eq i16 %74, 0
  br i1 %75, label %83, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %45, i64 0, i32 23, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp ne i32 %78, 0
  %80 = and i16 %47, 15
  %81 = icmp ne i16 %80, 0
  %82 = and i1 %81, %79
  br i1 %82, label %95, label %83

83:                                               ; preds = %76, %73
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %45, i64 0, i32 2, i32 0, i32 0, i32 0
  %85 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %85, i64 0, i32 2, i32 0, i32 0
  %87 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %86, align 8
  %88 = icmp eq %"class.blink::StyleImage"* %87, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %85, i64 0, i32 1
  %91 = load i8, i8* %90, align 4
  %92 = and i8 %91, 1
  %93 = zext i8 %92 to i96
  %94 = shl nuw nsw i96 %93, 67
  br label %95

95:                                               ; preds = %50, %60, %69, %76, %83, %89
  %96 = phi i96 [ 0, %83 ], [ %94, %89 ], [ 147573952589676412928, %69 ], [ 147573952589676412928, %50 ], [ 147573952589676412928, %60 ], [ 147573952589676412928, %76 ]
  %97 = and i96 %43, -147573952589676412929
  %98 = or i96 %96, %97
  store i96 %98, i96* %11, align 4
  ret void
}

declare void @_ZN5blink20LayoutBoxModelObject15UpdateFromStyleEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ComputedStyle27HasTransformRelatedPropertyEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %3, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %79

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %3, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %11, i64 0, i32 23, i32 0, i32 2
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %79

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %11, i64 0, i32 11, i32 0
  %17 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %16, align 8
  %18 = icmp eq %"class.blink::BasicShape"* %17, null
  br i1 %18, label %19, label %79

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %3, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %21, i64 0, i32 39
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 2097152
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %79

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %11, i64 0, i32 14, i32 0
  %28 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %27, align 8
  %29 = icmp eq %"class.blink::TranslateTransformOperation"* %28, null
  br i1 %29, label %30, label %79

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %11, i64 0, i32 12, i32 0
  %32 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %31, align 8
  %33 = icmp eq %"class.blink::RotateTransformOperation"* %32, null
  br i1 %33, label %34, label %79

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %11, i64 0, i32 13, i32 0
  %36 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %35, align 8
  %37 = icmp eq %"class.blink::ScaleTransformOperation"* %36, null
  br i1 %37, label %38, label %79

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %11, i64 0, i32 15, i32 0
  %40 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %39, align 8
  %41 = icmp ne %"class.blink::StyleReflection"* %40, null
  %42 = tail call zeroext i1 @_ZNK5blink13ComputedStyle27HasStackingGroupingPropertyEb(%"class.blink::ComputedStyle"* %0, i1 zeroext %41) #20
  br i1 %42, label %68, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %45, i64 0, i32 3
  %47 = load i8, i8* %46, align 4
  %48 = and i8 %47, 16
  %49 = icmp eq i8 %48, 0
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8
  %53 = and i160 %52, 7253554917687775048237056
  %54 = icmp eq i160 %53, 0
  %55 = and i1 %49, %54
  %56 = and i160 %52, 1190036353683150593851392
  %57 = icmp ne i160 %56, 340010386766614455386112
  %58 = or i1 %57, %55
  br i1 %58, label %68, label %59

59:                                               ; preds = %43
  %60 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %2, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %60, i64 0, i32 2, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %62, i64 0, i32 2, i32 0, i32 0
  %64 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %64, i64 0, i32 45
  %66 = load i32, i32* %65, align 4
  %67 = icmp slt i32 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %43, %38, %59
  %69 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %2, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %69, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %71, i64 0, i32 2, i32 0, i32 0
  %73 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %73, i64 0, i32 32
  %75 = load float, float* %74, align 4
  %76 = fcmp ogt float %75, 0.000000e+00
  br i1 %76, label %79, label %77

77:                                               ; preds = %68
  %78 = tail call zeroext i1 @_ZNK5blink13ComputedStyle26HasWillChangeTransformHintEv(%"class.blink::ComputedStyle"* %0) #20
  br label %79

79:                                               ; preds = %34, %7, %1, %15, %19, %26, %30, %77, %68, %59
  %80 = phi i1 [ true, %68 ], [ true, %59 ], [ true, %34 ], [ %78, %77 ], [ true, %30 ], [ true, %26 ], [ true, %19 ], [ true, %15 ], [ true, %1 ], [ true, %7 ]
  ret i1 %80
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox17LayoutSubtreeRootEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.blink::NGConstraintSpace", align 8
  %3 = alloca %"class.blink::NGBlockNode", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %6 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %7 = or i8 %6, %5
  %8 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %9 = or i8 %7, %8
  %10 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %11 = or i8 %9, %10
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %228, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %15 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %15, i64 92
  %17 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::LayoutObject"* %4, i32 30) #20
  br i1 %18, label %228, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %228, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8
  %25 = tail call dereferenceable(8) %class.scoped_refptr.3247* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %24, i32 0) #20
  %26 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %25, i64 0, i32 0
  %27 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %27, i64 0, i32 3, i32 0
  %29 = bitcast %"class.blink::NGPhysicalFragment"** %28 to %"class.blink::NGPhysicalBoxFragment"**
  %30 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %30, i64 0, i32 1
  %32 = bitcast i24* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 16384
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %228, label %36

36:                                               ; preds = %23
  %37 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %30, i64 0, i32 0, i32 4, i32 0
  %38 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %37, align 8
  %39 = icmp ne %"class.blink::NGBreakToken"* %38, null
  %40 = icmp eq %"class.blink::NGLayoutResult"* %27, null
  %41 = or i1 %40, %39
  br i1 %41, label %228, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %44 = bitcast %"class.blink::LayoutRect"* %43 to i64*
  %45 = load i64, i64* %44, align 4
  %46 = trunc i64 %45 to i32
  %47 = lshr i64 %45, 32
  %48 = trunc i64 %47 to i32
  %49 = bitcast %"class.blink::NGConstraintSpace"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #20
  %50 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %52 = bitcast %"class.blink::NGConstraintSpace"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 32, i1 false)
  %53 = load i32, i32* %20, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %72, label %55

55:                                               ; preds = %42
  %56 = tail call dereferenceable(8) %class.scoped_refptr.3247* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %24, i32 0) #20
  %57 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %56, i64 0, i32 0
  %58 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %58, i64 0, i32 3, i32 0
  %60 = bitcast %"class.blink::NGPhysicalFragment"** %59 to %"class.blink::NGPhysicalBoxFragment"**
  %61 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %61, i64 0, i32 1
  %63 = bitcast i24* %62 to i32*
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, 16384
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %55
  %68 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %61, i64 0, i32 0, i32 4, i32 0
  %69 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %68, align 8
  %70 = icmp eq %"class.blink::NGBreakToken"* %69, null
  %71 = select i1 %70, %"class.blink::NGLayoutResult"* %58, %"class.blink::NGLayoutResult"* null
  br label %72

72:                                               ; preds = %42, %55, %67
  %73 = phi %"class.blink::NGLayoutResult"* [ %71, %67 ], [ null, %55 ], [ null, %42 ]
  %74 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %73, i64 0, i32 2
  %75 = bitcast %"class.blink::NGConstraintSpace"* %74 to i64*
  %76 = bitcast %"class.blink::NGConstraintSpace"* %2 to i64*
  %77 = load i64, i64* %75, align 8
  store i64 %77, i64* %76, align 8
  %78 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 2
  %79 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %73, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %79, align 8
  %81 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %80, null
  br i1 %81, label %86, label %82

82:                                               ; preds = %72
  %83 = tail call noalias i8* @malloc(i64 40) #20
  %84 = bitcast i8* %83 to %"class.blink::NGExclusionSpaceInternal"*
  tail call void @_ZN5blink24NGExclusionSpaceInternalC1ERKS0_(%"class.blink::NGExclusionSpaceInternal"* %84, %"class.blink::NGExclusionSpaceInternal"* nonnull dereferenceable(40) %80) #20
  %85 = ptrtoint i8* %83 to i64
  br label %86

86:                                               ; preds = %82, %72
  %87 = phi i64 [ %85, %82 ], [ 0, %72 ]
  %88 = bitcast %"class.blink::NGExclusionSpace"* %78 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %73, i64 0, i32 2, i32 3, i32 0
  %90 = load i32, i32* %89, align 8
  store i32 %90, i32* %51, align 8
  %91 = and i32 %90, 1
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %99, label %93

93:                                               ; preds = %86
  %94 = tail call noalias i8* @malloc(i64 88) #20
  %95 = bitcast i8* %94 to %"struct.blink::NGConstraintSpace::RareData"*
  %96 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %73, i64 0, i32 2, i32 1, i32 0
  %97 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %96, align 8
  tail call void @_ZN5blink17NGConstraintSpace8RareDataC2ERKS1_(%"struct.blink::NGConstraintSpace::RareData"* %95, %"struct.blink::NGConstraintSpace::RareData"* dereferenceable(88) %97) #20
  %98 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %50 to i8**
  store i8* %94, i8** %98, align 8
  br label %105

99:                                               ; preds = %86
  %100 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %73, i64 0, i32 2, i32 1
  %101 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1
  %102 = bitcast %union.anon.3665* %100 to i64*
  %103 = bitcast %union.anon.3665* %101 to i64*
  %104 = load i64, i64* %102, align 4
  store i64 %104, i64* %103, align 8
  br label %105

105:                                              ; preds = %93, %99
  %106 = bitcast %"class.blink::NGBlockNode"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #20
  %107 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %3, i64 0, i32 0, i32 0
  store %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBox"** %107, align 8
  %108 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %3, i64 0, i32 0, i32 1
  store i8 0, i8* %108, align 8
  %109 = call %"class.blink::NGLayoutResult"* @_ZNK5blink11NGBlockNode6LayoutERKNS_17NGConstraintSpaceEPKNS_17NGBlockBreakTokenEPKNS_12NGEarlyBreakE(%"class.blink::NGBlockNode"* nonnull %3, %"class.blink::NGConstraintSpace"* nonnull dereferenceable(32) %2, %"class.blink::NGBlockBreakToken"* null, %"class.blink::NGEarlyBreak"* null) #20
  %110 = icmp eq %"class.blink::NGLayoutResult"* %109, null
  br i1 %110, label %118, label %111

111:                                              ; preds = %105
  %112 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %109, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %112) #20
  %113 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %109, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %109) #20
  %117 = bitcast %"class.blink::NGLayoutResult"* %109 to i8*
  call void @free(i8* %117) #20
  br label %118

118:                                              ; preds = %105, %111, %116
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #20
  %119 = load i64, i64* %44, align 4
  %120 = trunc i64 %119 to i32
  %121 = icmp eq i32 %46, %120
  br i1 %121, label %122, label %126

122:                                              ; preds = %118
  %123 = lshr i64 %119, 32
  %124 = trunc i64 %123 to i32
  %125 = icmp eq i32 %48, %124
  br i1 %125, label %133, label %126

126:                                              ; preds = %122, %118
  store i64 %45, i64* %44, align 4
  %127 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %128 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %127 to i96*
  %129 = load i96, i96* %128, align 4
  %130 = and i96 %129, 63
  %131 = icmp eq i96 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %126
  call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %4) #20
  br label %133

133:                                              ; preds = %122, %126, %132
  %134 = load i32, i32* %51, align 8
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %163, label %137

137:                                              ; preds = %133
  %138 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %50, align 8
  %139 = icmp eq %"struct.blink::NGConstraintSpace::RareData"* %138, null
  br i1 %139, label %163, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %138, i64 0, i32 6
  %142 = load i16, i16* %141, align 8
  %143 = and i16 %142, 7
  %144 = zext i16 %143 to i32
  switch i32 %144, label %161 [
    i32 5, label %151
    i32 4, label %148
    i32 3, label %145
  ]

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %138, i64 0, i32 7
  %147 = bitcast %union.anon.3666* %146 to %class.scoped_refptr.3672*
  call void @_ZN13scoped_refptrIKN5blink26NGTableConstraintSpaceDataEED2Ev(%class.scoped_refptr.3672* %147) #20
  br label %161

148:                                              ; preds = %140
  %149 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %138, i64 0, i32 7
  %150 = bitcast %union.anon.3666* %149 to %class.scoped_refptr.3672*
  call void @_ZN13scoped_refptrIKN5blink26NGTableConstraintSpaceDataEED2Ev(%class.scoped_refptr.3672* %150) #20
  br label %161

151:                                              ; preds = %140
  %152 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %138, i64 0, i32 7, i32 0, i32 0, i32 0
  %153 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %152, align 8
  %154 = icmp eq %"class.blink::SerializedScriptValue"* %153, null
  br i1 %154, label %161, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %153, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = atomicrmw sub i32* %156, i32 1 acq_rel
  %158 = icmp eq i32 %157, 1
  br i1 %158, label %159, label %161

159:                                              ; preds = %155
  call void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"* nonnull %153) #20
  %160 = bitcast %"class.blink::SerializedScriptValue"* %153 to i8*
  call void @free(i8* %160) #20
  br label %161

161:                                              ; preds = %140, %145, %148, %151, %155, %159
  %162 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %138 to i8*
  call void @free(i8* %162) #20
  br label %163

163:                                              ; preds = %133, %137, %161
  %164 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %78, i64 0, i32 0, i32 0, i32 0, i32 0
  %165 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %164, align 8
  store %"class.blink::NGExclusionSpaceInternal"* null, %"class.blink::NGExclusionSpaceInternal"** %164, align 8
  %166 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %165, null
  br i1 %166, label %227, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %165, i64 0, i32 6
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr.3715", %"class.std::__1::unique_ptr.3715"* %168, i64 0, i32 0, i32 0, i32 0
  %170 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %169, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %169, align 8
  %171 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %170, null
  br i1 %171, label %174, label %172

172:                                              ; preds = %167
  %173 = bitcast %"class.std::__1::unique_ptr.3715"* %168 to %"struct.std::__1::default_delete.3738"*
  call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.3738"* %173, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %170) #20
  br label %174

174:                                              ; preds = %172, %167
  %175 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %165, i64 0, i32 0, i32 0
  %176 = load %"class.base::RefCountedData.3699"*, %"class.base::RefCountedData.3699"** %175, align 8
  %177 = icmp eq %"class.base::RefCountedData.3699"* %176, null
  br i1 %177, label %225, label %178

178:                                              ; preds = %174
  %179 = getelementptr inbounds %"class.base::RefCountedData.3699", %"class.base::RefCountedData.3699"* %176, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = atomicrmw sub i32* %179, i32 1 acq_rel
  %181 = icmp eq i32 %180, 1
  br i1 %181, label %182, label %225

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.base::RefCountedData.3699", %"class.base::RefCountedData.3699"* %176, i64 0, i32 1
  %184 = getelementptr inbounds %"class.WTF::Vector.3701", %"class.WTF::Vector.3701"* %183, i64 0, i32 0, i32 0, i32 0
  %185 = load %class.scoped_refptr.3704*, %class.scoped_refptr.3704** %184, align 8
  %186 = icmp eq %class.scoped_refptr.3704* %185, null
  br i1 %186, label %223, label %187, !prof !3

187:                                              ; preds = %182
  %188 = bitcast %class.scoped_refptr.3704* %185 to i8*
  %189 = getelementptr inbounds %"class.base::RefCountedData.3699", %"class.base::RefCountedData.3699"* %176, i64 0, i32 1, i32 0, i32 0, i32 2
  %190 = load i32, i32* %189, align 4
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %221, label %192, !prof !2

192:                                              ; preds = %187
  %193 = zext i32 %190 to i64
  %194 = getelementptr inbounds %class.scoped_refptr.3704, %class.scoped_refptr.3704* %185, i64 %193
  br label %195

195:                                              ; preds = %215, %192
  %196 = phi %class.scoped_refptr.3704* [ %216, %215 ], [ %185, %192 ]
  %197 = getelementptr inbounds %class.scoped_refptr.3704, %class.scoped_refptr.3704* %196, i64 0, i32 0
  %198 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %197, align 8
  %199 = icmp eq %"struct.blink::NGExclusion"* %198, null
  br i1 %199, label %215, label %200

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %198, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %201) #20
  %202 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %198, i64 0, i32 0, i32 0, i32 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %215

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %198, i64 0, i32 0, i32 0
  %207 = getelementptr inbounds %"class.base::RefCounted.3706", %"class.base::RefCounted.3706"* %206, i64 8
  %208 = bitcast %"class.base::RefCounted.3706"* %207 to %"struct.blink::NGExclusionShapeData"**
  %209 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %208, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %208, align 8
  %210 = icmp eq %"struct.blink::NGExclusionShapeData"* %209, null
  br i1 %210, label %213, label %211

211:                                              ; preds = %205
  %212 = bitcast %"struct.blink::NGExclusionShapeData"* %209 to i8*
  call void @_ZdlPv(i8* %212) #22
  br label %213

213:                                              ; preds = %211, %205
  %214 = bitcast %"struct.blink::NGExclusion"* %198 to i8*
  call void @free(i8* %214) #20
  br label %215

215:                                              ; preds = %213, %200, %195
  %216 = getelementptr inbounds %class.scoped_refptr.3704, %class.scoped_refptr.3704* %196, i64 1
  %217 = icmp eq %class.scoped_refptr.3704* %216, %194
  br i1 %217, label %218, label %195

218:                                              ; preds = %215
  store i32 0, i32* %189, align 4
  %219 = bitcast %"class.WTF::Vector.3701"* %183 to i8**
  %220 = load i8*, i8** %219, align 8
  br label %221

221:                                              ; preds = %218, %187
  %222 = phi i8* [ %220, %218 ], [ %188, %187 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %222) #20
  br label %223

223:                                              ; preds = %182, %221
  %224 = bitcast %"class.base::RefCountedData.3699"* %176 to i8*
  call void @_ZdlPv(i8* %224) #22
  br label %225

225:                                              ; preds = %223, %178, %174
  %226 = bitcast %"class.blink::NGExclusionSpaceInternal"* %165 to i8*
  call void @free(i8* %226) #20
  br label %227

227:                                              ; preds = %163, %225
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #20
  br label %233

228:                                              ; preds = %1, %36, %19, %23, %13
  %229 = bitcast %"class.blink::LayoutBox"* %0 to void (%"class.blink::LayoutBox"*)***
  %230 = load void (%"class.blink::LayoutBox"*)**, void (%"class.blink::LayoutBox"*)*** %229, align 8
  %231 = getelementptr inbounds void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %230, i64 54
  %232 = load void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %231, align 8
  tail call void %232(%"class.blink::LayoutBox"* %0) #20
  br label %233

233:                                              ; preds = %228, %227
  %234 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %235 = load %"class.blink::Node"*, %"class.blink::Node"** %234, align 8
  %236 = icmp eq %"class.blink::Node"* %235, null
  br i1 %236, label %237, label %244

237:                                              ; preds = %233, %237
  %238 = phi %"class.blink::LayoutObject"* [ %240, %237 ], [ %4, %233 ]
  %239 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %238, i64 0, i32 7
  %240 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %239, align 8
  %241 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %240, i64 0, i32 6, i32 0, i32 0
  %242 = load %"class.blink::Node"*, %"class.blink::Node"** %241, align 8
  %243 = icmp eq %"class.blink::Node"* %242, null
  br i1 %243, label %237, label %244

244:                                              ; preds = %237, %233
  %245 = phi %"class.blink::Node"* [ %235, %233 ], [ %242, %237 ]
  %246 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %245, i64 0, i32 3, i32 0, i32 0
  %247 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %246, align 8
  %248 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %247, i64 0, i32 2, i32 0, i32 0
  %249 = load %"class.blink::Document"*, %"class.blink::Document"** %248, align 8
  %250 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %249) #20
  %251 = call dereferenceable(184) %"class.blink::InputMethodController"* @_ZNK5blink10LocalFrame24GetInputMethodControllerEv(%"class.blink::LocalFrame"* %250) #20
  call void @_ZN5blink21InputMethodController16DidLayoutSubtreeERKNS_12LayoutObjectE(%"class.blink::InputMethodController"* %251, %"class.blink::LayoutObject"* dereferenceable(88) %4) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGLayoutResult"* @_ZNK5blink9LayoutBox21GetCachedLayoutResultEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %23, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8
  %7 = tail call dereferenceable(8) %class.scoped_refptr.3247* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %6, i32 0) #20
  %8 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %7, i64 0, i32 0
  %9 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %9, i64 0, i32 3, i32 0
  %11 = bitcast %"class.blink::NGPhysicalFragment"** %10 to %"class.blink::NGPhysicalBoxFragment"**
  %12 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %12, i64 0, i32 1
  %14 = bitcast i24* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 16384
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %12, i64 0, i32 0, i32 4, i32 0
  %20 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %19, align 8
  %21 = icmp eq %"class.blink::NGBreakToken"* %20, null
  %22 = select i1 %21, %"class.blink::NGLayoutResult"* %9, %"class.blink::NGLayoutResult"* null
  ret %"class.blink::NGLayoutResult"* %22

23:                                               ; preds = %5, %1
  ret %"class.blink::NGLayoutResult"* null
}

declare %"class.blink::NGLayoutResult"* @_ZNK5blink11NGBlockNode6LayoutERKNS_17NGConstraintSpaceEPKNS_17NGBlockBreakTokenEPKNS_12NGEarlyBreakE(%"class.blink::NGBlockNode"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockBreakToken"*, %"class.blink::NGEarlyBreak"*) local_unnamed_addr #5

declare void @_ZN5blink21InputMethodController16DidLayoutSubtreeERKNS_12LayoutObjectE(%"class.blink::InputMethodController"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox12UpdateLayoutEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = alloca %"class.blink::LayoutAnalyzer::Scope", align 8
  %3 = alloca %"class.blink::LayoutState", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %5 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #20
  %6 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZN5blink14LayoutAnalyzer5ScopeC1ERKNS_12LayoutObjectE(%"class.blink::LayoutAnalyzer::Scope"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %4) #20
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %30, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 16777216
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %15, label %30

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 67108876
  %23 = icmp eq i32 %22, 67108864
  br i1 %23, label %24, label %30, !prof !12

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::Node"* %17 to %"class.blink::Element"*
  %26 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %25) #20
  %27 = icmp eq %"class.blink::DisplayLockContext"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %26) #20
  br i1 %29, label %30, label %88

30:                                               ; preds = %28, %9, %15, %19, %1, %24
  %31 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %32 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %32, i64 13
  %34 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %33, align 8
  %35 = call %"class.blink::LayoutObjectChildList"* %34(%"class.blink::LayoutObject"* %4) #20
  %36 = icmp eq %"class.blink::LayoutObjectChildList"* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %35, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %40 = icmp eq %"class.blink::LayoutObject"* %39, null
  br i1 %40, label %41, label %42

41:                                               ; preds = %30, %37
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %4)
  br label %88

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %43) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 56, i1 false)
  call void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"* nonnull %3, %"class.blink::LayoutBox"* dereferenceable(216) %0, i1 zeroext false) #20
  br label %44

44:                                               ; preds = %42, %56
  %45 = phi %"class.blink::LayoutObject"* [ %39, %42 ], [ %58, %56 ]
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 4
  %47 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %46 to i96*
  %48 = load i96, i96* %47, align 4
  %49 = and i96 %48, 63
  %50 = icmp eq i96 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %44
  %52 = bitcast %"class.blink::LayoutObject"* %45 to void (%"class.blink::LayoutObject"*)***
  %53 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %53, i64 54
  %55 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %54, align 8
  call void %55(%"class.blink::LayoutObject"* nonnull %45) #20
  br label %56

56:                                               ; preds = %44, %51
  %57 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 9
  %58 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %57, align 8
  %59 = icmp eq %"class.blink::LayoutObject"* %58, null
  br i1 %59, label %60, label %44

60:                                               ; preds = %56
  %61 = bitcast %"class.blink::LayoutBox"* %0 to void (%"class.blink::LayoutBox"*)***
  %62 = load void (%"class.blink::LayoutBox"*)**, void (%"class.blink::LayoutBox"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %62, i64 151
  %64 = load void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %63, align 8
  call void %64(%"class.blink::LayoutBox"* %0) #20
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %4)
  %65 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %87, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %69 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %68 to i96*
  %70 = load i96, i96* %69, align 4
  %71 = and i96 %70, 16777216
  %72 = icmp eq i96 %71, 0
  br i1 %72, label %73, label %87

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %75 = load %"class.blink::Node"*, %"class.blink::Node"** %74, align 8
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %87, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %75, i64 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, 67108876
  %81 = icmp eq i32 %80, 67108864
  br i1 %81, label %82, label %87, !prof !12

82:                                               ; preds = %77
  %83 = bitcast %"class.blink::Node"* %75 to %"class.blink::Element"*
  %84 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %83) #20
  %85 = icmp eq %"class.blink::DisplayLockContext"* %84, null
  br i1 %85, label %87, label %86

86:                                               ; preds = %82
  call void @_ZN5blink18DisplayLockContext17DidLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %84) #20
  br label %87

87:                                               ; preds = %60, %67, %73, %77, %82, %86
  call void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"* nonnull %3) #20
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %43) #20
  br label %88

88:                                               ; preds = %28, %41, %87
  call void @_ZN5blink14LayoutAnalyzer5ScopeD1Ev(%"class.blink::LayoutAnalyzer::Scope"* nonnull %2) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #20
  ret void
}

declare void @_ZN5blink14LayoutAnalyzer5ScopeC1ERKNS_12LayoutObjectE(%"class.blink::LayoutAnalyzer::Scope"*, %"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, -824633720840
  %6 = or i96 %5, 274877906944
  store i96 %6, i96* %3, align 4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %8 = icmp ne i8 %7, 0
  %9 = and i96 %4, 16777216
  %10 = icmp eq i96 %9, 0
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %27

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 67108876
  %20 = icmp eq i32 %19, 67108864
  br i1 %20, label %21, label %27, !prof !12

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %22) #20
  %24 = icmp eq %"class.blink::DisplayLockContext"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %23) #20
  br i1 %26, label %27, label %30

27:                                               ; preds = %25, %21, %16, %12, %1
  %28 = load i96, i96* %3, align 4
  %29 = and i96 %28, -57
  store i96 %29, i96* %3, align 4
  br label %55

30:                                               ; preds = %25
  %31 = load i96, i96* %3, align 4
  %32 = and i96 %31, 56
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %30
  %35 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %36 = icmp ne i8 %35, 0
  %37 = and i96 %31, 16777216
  %38 = icmp eq i96 %37, 0
  %39 = and i1 %38, %36
  br i1 %39, label %40, label %51

40:                                               ; preds = %34
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 67108876
  %47 = icmp eq i32 %46, 67108864
  br i1 %47, label %48, label %51, !prof !12

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %50 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %49) #20
  br label %51

51:                                               ; preds = %48, %43, %40, %34
  %52 = phi %"class.blink::DisplayLockContext"* [ null, %34 ], [ %50, %48 ], [ null, %43 ], [ null, %40 ]
  %53 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %52, i64 0, i32 14
  store i8 1, i8* %53, align 2
  %54 = load i96, i96* %3, align 4
  br label %55

55:                                               ; preds = %27, %30, %51
  %56 = phi i96 [ %31, %30 ], [ %54, %51 ], [ %29, %27 ]
  %57 = and i96 %56, -1125899906842625
  store i96 %57, i96* %3, align 4
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %0) #20
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

declare void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"*, %"class.blink::LayoutBox"* dereferenceable(216), i1 zeroext) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14LayoutAnalyzer5ScopeD1Ev(%"class.blink::LayoutAnalyzer::Scope"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %68, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %68

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %68

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %46, label %68

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %50 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %51 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %50, align 8
  %52 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, i64 124
  %53 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %52, align 8
  %54 = tail call i32 %53(%"class.blink::LayoutBoxModelObject"* %49) #20
  %55 = icmp sgt i32 %54, -1
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %48, i32 %54) #20
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 %56, i32 %59, !prof !2
  %61 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %50, align 8
  %62 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %61, i64 125
  %63 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %62, align 8
  %64 = tail call i32 %63(%"class.blink::LayoutBoxModelObject"* %49) #20
  %65 = icmp sgt i32 %64, -1
  %66 = select i1 %65, i32 -2147483648, i32 2147483647
  %67 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %60, i32 %64) #20
  br label %109

68:                                               ; preds = %15, %25, %35, %39
  %69 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %72 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %73 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %72, align 8
  %74 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %73, i64 124
  %75 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %74, align 8
  %76 = tail call i32 %75(%"class.blink::LayoutBoxModelObject"* %71) #20
  %77 = icmp sgt i32 %76, -1
  %78 = select i1 %77, i32 -2147483648, i32 2147483647
  %79 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %70, i32 %76) #20
  %80 = extractvalue { i32, i1 } %79, 1
  %81 = extractvalue { i32, i1 } %79, 0
  %82 = select i1 %80, i32 %78, i32 %81, !prof !2
  %83 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %72, align 8
  %84 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %83, i64 125
  %85 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %84, align 8
  %86 = tail call i32 %85(%"class.blink::LayoutBoxModelObject"* %71) #20
  %87 = icmp sgt i32 %86, -1
  %88 = select i1 %87, i32 -2147483648, i32 2147483647
  %89 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %82, i32 %86) #20
  %90 = extractvalue { i32, i1 } %89, 1
  %91 = extractvalue { i32, i1 } %89, 0
  %92 = select i1 %90, i32 %88, i32 %91, !prof !2
  %93 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1)
  %94 = extractvalue { i64, i64 } %93, 0
  %95 = lshr i64 %94, 32
  %96 = trunc i64 %95 to i32
  %97 = extractvalue { i64, i64 } %93, 1
  %98 = lshr i64 %97, 32
  %99 = trunc i64 %98 to i32
  %100 = icmp slt i32 %96, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %99, i32 %96) #20
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !2
  %106 = icmp sgt i32 %105, -1
  %107 = select i1 %106, i32 -2147483648, i32 2147483647
  %108 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %92, i32 %105) #20
  br label %109

109:                                              ; preds = %68, %46
  %110 = phi { i32, i1 } [ %108, %68 ], [ %67, %46 ]
  %111 = phi i32 [ %107, %68 ], [ %66, %46 ]
  %112 = extractvalue { i32, i1 } %110, 1
  %113 = extractvalue { i32, i1 } %110, 0
  %114 = select i1 %112, i32 %111, i32 %113
  %115 = icmp sgt i32 %114, 0
  %116 = select i1 %115, i32 %114, i32 0
  ret i32 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %6 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %5) #20
  %7 = icmp eq i32 %3, 1
  br i1 %7, label %8, label %34

8:                                                ; preds = %4
  %9 = tail call zeroext i1 @_ZNK5blink9LayoutBox19HasScrollbarGuttersENS_20ScrollbarOrientationE(%"class.blink::LayoutBox"* %0, i32 1)
  br i1 %9, label %10, label %34

10:                                               ; preds = %8
  %11 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_130HypotheticalScrollbarThicknessERKNS_9LayoutBoxENS_20ScrollbarOrientationEb(%"class.blink::LayoutBox"* dereferenceable(216) %0, i32 1)
  %12 = icmp sgt i32 %11, 33554431
  br i1 %12, label %17, label %13

13:                                               ; preds = %10
  %14 = icmp slt i32 %11, -33554432
  %15 = shl i32 %11, 6
  %16 = select i1 %14, i32 -2147483648, i32 %15
  br label %17

17:                                               ; preds = %13, %10
  %18 = phi i32 [ 2147483647, %10 ], [ %16, %13 ]
  %19 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %20 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %20, i64 172
  %22 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::LayoutBox"* %0) #20
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 9
  %27 = bitcast [20 x i8]* %26 to i160*
  %28 = load i160, i160* %27, align 8
  %29 = and i160 %28, 72057594037927936
  %30 = icmp eq i160 %29, 0
  %31 = select i1 %30, i32 0, i32 %18
  %32 = select i1 %23, i32 %18, i32 %31
  %33 = select i1 %23, i32 %31, i32 %18
  br label %57

34:                                               ; preds = %8, %4
  %35 = icmp eq %"class.blink::PaintLayerScrollableArea"* %6, null
  br i1 %35, label %54, label %36

36:                                               ; preds = %34
  %37 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %38 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %38, i64 172
  %40 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutBox"* %0) #20
  %42 = tail call i32 @_ZNK5blink24PaintLayerScrollableArea22VerticalScrollbarWidthENS_28OverlayScrollbarClipBehaviorE(%"class.blink::PaintLayerScrollableArea"* nonnull %6, i32 %2) #20
  %43 = icmp sgt i32 %42, 33554431
  br i1 %41, label %44, label %49

44:                                               ; preds = %36
  br i1 %43, label %54, label %45

45:                                               ; preds = %44
  %46 = icmp slt i32 %42, -33554432
  %47 = shl i32 %42, 6
  %48 = select i1 %46, i32 -2147483648, i32 %47
  br label %54

49:                                               ; preds = %36
  br i1 %43, label %54, label %50

50:                                               ; preds = %49
  %51 = icmp slt i32 %42, -33554432
  %52 = shl i32 %42, 6
  %53 = select i1 %51, i32 -2147483648, i32 %52
  br label %54

54:                                               ; preds = %44, %45, %50, %49, %34
  %55 = phi i32 [ 0, %34 ], [ 0, %49 ], [ 0, %50 ], [ 2147483647, %44 ], [ %48, %45 ]
  %56 = phi i32 [ 0, %34 ], [ 2147483647, %49 ], [ %53, %50 ], [ 0, %44 ], [ 0, %45 ]
  br i1 %7, label %57, label %79

57:                                               ; preds = %17, %54
  %58 = phi i32 [ %55, %54 ], [ %32, %17 ]
  %59 = phi i32 [ %56, %54 ], [ %33, %17 ]
  %60 = tail call zeroext i1 @_ZNK5blink9LayoutBox19HasScrollbarGuttersENS_20ScrollbarOrientationE(%"class.blink::LayoutBox"* %0, i32 0)
  br i1 %60, label %61, label %79

61:                                               ; preds = %57
  %62 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_130HypotheticalScrollbarThicknessERKNS_9LayoutBoxENS_20ScrollbarOrientationEb(%"class.blink::LayoutBox"* dereferenceable(216) %0, i32 0)
  %63 = icmp sgt i32 %62, 33554431
  br i1 %63, label %68, label %64

64:                                               ; preds = %61
  %65 = icmp slt i32 %62, -33554432
  %66 = shl i32 %62, 6
  %67 = select i1 %65, i32 -2147483648, i32 %66
  br label %68

68:                                               ; preds = %64, %61
  %69 = phi i32 [ 2147483647, %61 ], [ %67, %64 ]
  %70 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %71 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %71, i64 0, i32 0, i32 9
  %73 = bitcast [20 x i8]* %72 to i160*
  %74 = load i160, i160* %73, align 8
  %75 = and i160 %74, 72057594037927936
  %76 = icmp eq i160 %75, 0
  %77 = zext i32 %69 to i64
  %78 = select i1 %76, i64 0, i64 %77
  br label %90

79:                                               ; preds = %57, %54
  %80 = phi i32 [ %58, %57 ], [ %55, %54 ]
  %81 = phi i32 [ %59, %57 ], [ %56, %54 ]
  %82 = icmp eq %"class.blink::PaintLayerScrollableArea"* %6, null
  br i1 %82, label %90, label %83

83:                                               ; preds = %79
  %84 = tail call i32 @_ZNK5blink24PaintLayerScrollableArea25HorizontalScrollbarHeightENS_28OverlayScrollbarClipBehaviorE(%"class.blink::PaintLayerScrollableArea"* nonnull %6, i32 %2) #20
  %85 = icmp sgt i32 %84, 33554431
  br i1 %85, label %90, label %86

86:                                               ; preds = %83
  %87 = icmp slt i32 %84, -33554432
  %88 = shl i32 %84, 6
  %89 = select i1 %87, i32 -2147483648, i32 %88
  br label %90

90:                                               ; preds = %86, %68, %83, %79
  %91 = phi i32 [ %80, %79 ], [ %80, %83 ], [ %58, %68 ], [ %80, %86 ]
  %92 = phi i32 [ %81, %79 ], [ %81, %83 ], [ %59, %68 ], [ %81, %86 ]
  %93 = phi i32 [ 0, %79 ], [ 2147483647, %83 ], [ %69, %68 ], [ %89, %86 ]
  %94 = phi i64 [ 0, %79 ], [ 0, %83 ], [ %78, %68 ], [ 0, %86 ]
  %95 = icmp sgt i32 %91, 0
  %96 = icmp eq i32 %1, 1
  %97 = and i1 %96, %95
  br i1 %97, label %98, label %146

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %102 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %101, align 8
  %103 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %102, i64 124
  %104 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %103, align 8
  %105 = tail call i32 %104(%"class.blink::LayoutBoxModelObject"* %5) #20
  %106 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %101, align 8
  %107 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %106, i64 125
  %108 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %107, align 8
  %109 = tail call i32 %108(%"class.blink::LayoutBoxModelObject"* %5) #20
  %110 = icmp slt i32 %109, 0
  %111 = select i1 %110, i32 -2147483648, i32 2147483647
  %112 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %109) #20
  %113 = extractvalue { i32, i1 } %112, 1
  %114 = extractvalue { i32, i1 } %112, 0
  %115 = select i1 %113, i32 %111, i32 %114, !prof !2
  %116 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %101, align 8
  %117 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %116, i64 120
  %118 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %117, align 8
  %119 = tail call i32 %118(%"class.blink::LayoutBoxModelObject"* %5) #20
  %120 = icmp slt i32 %119, 0
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  %122 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %115, i32 %119) #20
  %123 = extractvalue { i32, i1 } %122, 1
  %124 = extractvalue { i32, i1 } %122, 0
  %125 = select i1 %123, i32 %121, i32 %124, !prof !2
  %126 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %101, align 8
  %127 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %126, i64 121
  %128 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %127, align 8
  %129 = tail call i32 %128(%"class.blink::LayoutBoxModelObject"* %5) #20
  %130 = icmp slt i32 %129, 0
  %131 = select i1 %130, i32 -2147483648, i32 2147483647
  %132 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %125, i32 %129) #20
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = select i1 %133, i32 %131, i32 %134, !prof !2
  %136 = icmp sgt i32 %135, -1
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %100, i32 %135) #20
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !2
  %142 = icmp sgt i32 %141, 0
  %143 = select i1 %142, i32 %141, i32 0
  %144 = icmp slt i32 %143, %91
  %145 = select i1 %144, i32 %143, i32 %91
  br label %146

146:                                              ; preds = %98, %90
  %147 = phi i32 [ %145, %98 ], [ %91, %90 ]
  %148 = zext i32 %92 to i64
  %149 = shl nuw i64 %148, 32
  %150 = or i64 %149, %94
  %151 = insertvalue { i64, i64 } undef, i64 %150, 0
  %152 = zext i32 %147 to i64
  %153 = shl nuw i64 %152, 32
  %154 = zext i32 %93 to i64
  %155 = or i64 %153, %154
  %156 = insertvalue { i64, i64 } %151, i64 %155, 1
  ret { i64, i64 } %156
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %68, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %68

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %68

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %46, label %68

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %50 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %51 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %50, align 8
  %52 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, i64 122
  %53 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %52, align 8
  %54 = tail call i32 %53(%"class.blink::LayoutBoxModelObject"* %49) #20
  %55 = icmp sgt i32 %54, -1
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %48, i32 %54) #20
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 %56, i32 %59, !prof !2
  %61 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %50, align 8
  %62 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %61, i64 123
  %63 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %62, align 8
  %64 = tail call i32 %63(%"class.blink::LayoutBoxModelObject"* %49) #20
  %65 = icmp sgt i32 %64, -1
  %66 = select i1 %65, i32 -2147483648, i32 2147483647
  %67 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %60, i32 %64) #20
  br label %107

68:                                               ; preds = %15, %25, %35, %39
  %69 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %72 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %73 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %72, align 8
  %74 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %73, i64 122
  %75 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %74, align 8
  %76 = tail call i32 %75(%"class.blink::LayoutBoxModelObject"* %71) #20
  %77 = icmp sgt i32 %76, -1
  %78 = select i1 %77, i32 -2147483648, i32 2147483647
  %79 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %70, i32 %76) #20
  %80 = extractvalue { i32, i1 } %79, 1
  %81 = extractvalue { i32, i1 } %79, 0
  %82 = select i1 %80, i32 %78, i32 %81, !prof !2
  %83 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %72, align 8
  %84 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %83, i64 123
  %85 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %84, align 8
  %86 = tail call i32 %85(%"class.blink::LayoutBoxModelObject"* %71) #20
  %87 = icmp sgt i32 %86, -1
  %88 = select i1 %87, i32 -2147483648, i32 2147483647
  %89 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %82, i32 %86) #20
  %90 = extractvalue { i32, i1 } %89, 1
  %91 = extractvalue { i32, i1 } %89, 0
  %92 = select i1 %90, i32 %88, i32 %91, !prof !2
  %93 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1)
  %94 = extractvalue { i64, i64 } %93, 0
  %95 = trunc i64 %94 to i32
  %96 = extractvalue { i64, i64 } %93, 1
  %97 = trunc i64 %96 to i32
  %98 = icmp slt i32 %97, 0
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %95, i32 %97) #20
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 %99, i32 %102, !prof !2
  %104 = icmp sgt i32 %103, -1
  %105 = select i1 %104, i32 -2147483648, i32 2147483647
  %106 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %92, i32 %103) #20
  br label %107

107:                                              ; preds = %68, %46
  %108 = phi { i32, i1 } [ %106, %68 ], [ %67, %46 ]
  %109 = phi i32 [ %105, %68 ], [ %66, %46 ]
  %110 = extractvalue { i32, i1 } %108, 1
  %111 = extractvalue { i32, i1 } %108, 0
  %112 = select i1 %110, i32 %109, i32 %111
  %113 = icmp sgt i32 %112, 0
  %114 = select i1 %113, i32 %112, i32 0
  ret i32 %114
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox23PixelSnappedClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0)
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::LayoutRect"* %3 to i64*
  %5 = load i64, i64* %4, align 4
  %6 = trunc i64 %5 to i32
  %7 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0)
  %8 = icmp slt i32 %7, 0
  %9 = select i1 %8, i32 -2147483648, i32 63
  %10 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %6, i32 %7) #20
  %11 = extractvalue { i32, i1 } %10, 1
  %12 = extractvalue { i32, i1 } %10, 0
  %13 = select i1 %11, i32 %9, i32 %12, !prof !2
  %14 = srem i32 %13, 64
  %15 = icmp slt i32 %2, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %2) #20
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !2
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %14, 32
  %26 = ashr i32 %25, 6
  %27 = sub nsw i32 %21, %26
  %28 = add nsw i32 %24, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %1
  %31 = add i32 %2, 4
  %32 = icmp ugt i32 %31, 8
  br i1 %32, label %33, label %36, !prof !13

33:                                               ; preds = %30
  %34 = icmp sgt i32 %2, 0
  %35 = select i1 %34, i32 1, i32 -1
  br label %36

36:                                               ; preds = %1, %30, %33
  %37 = phi i32 [ %35, %33 ], [ %28, %1 ], [ 0, %30 ]
  ret i32 %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %53

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %53

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %48 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %49 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %49, i64 124
  %51 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %50, align 8
  %52 = tail call i32 %51(%"class.blink::LayoutBoxModelObject"* %47) #20
  br label %70

53:                                               ; preds = %15, %25, %35, %39
  %54 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %55 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %56 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %56, i64 124
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  %59 = tail call i32 %58(%"class.blink::LayoutBoxModelObject"* %54) #20
  %60 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1)
  %61 = extractvalue { i64, i64 } %60, 1
  %62 = lshr i64 %61, 32
  %63 = trunc i64 %62 to i32
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %63) #20
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !2
  br label %70

70:                                               ; preds = %53, %46
  %71 = phi i32 [ %52, %46 ], [ %69, %53 ]
  ret i32 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox24PixelSnappedClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0)
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::LayoutRect"* %3 to i64*
  %5 = load i64, i64* %4, align 4
  %6 = lshr i64 %5, 32
  %7 = trunc i64 %6 to i32
  %8 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %0)
  %9 = icmp slt i32 %8, 0
  %10 = select i1 %9, i32 -2147483648, i32 63
  %11 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %7, i32 %8) #20
  %12 = extractvalue { i32, i1 } %11, 1
  %13 = extractvalue { i32, i1 } %11, 0
  %14 = select i1 %12, i32 %10, i32 %13, !prof !2
  %15 = srem i32 %14, 64
  %16 = icmp slt i32 %2, 0
  %17 = select i1 %16, i32 -2147483648, i32 2147483647
  %18 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 %2) #20
  %19 = extractvalue { i32, i1 } %18, 1
  %20 = extractvalue { i32, i1 } %18, 0
  %21 = select i1 %19, i32 %17, i32 %20, !prof !2
  %22 = sdiv i32 %21, 64
  %23 = srem i32 %21, 64
  %24 = add nsw i32 %23, 32
  %25 = ashr i32 %24, 6
  %26 = add nsw i32 %15, 32
  %27 = ashr i32 %26, 6
  %28 = sub nsw i32 %22, %27
  %29 = add nsw i32 %25, %28
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %1
  %32 = add i32 %2, 4
  %33 = icmp ugt i32 %32, 8
  br i1 %33, label %34, label %37, !prof !13

34:                                               ; preds = %31
  %35 = icmp sgt i32 %2, 0
  %36 = select i1 %35, i32 1, i32 -1
  br label %37

37:                                               ; preds = %1, %31, %34
  %38 = phi i32 [ %36, %34 ], [ %29, %1 ], [ 0, %31 ]
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %53

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %53

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %48 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %49 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %49, i64 122
  %51 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %50, align 8
  %52 = tail call i32 %51(%"class.blink::LayoutBoxModelObject"* %47) #20
  br label %69

53:                                               ; preds = %15, %25, %35, %39
  %54 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %55 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %56 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %56, i64 122
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  %59 = tail call i32 %58(%"class.blink::LayoutBoxModelObject"* %54) #20
  %60 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1)
  %61 = extractvalue { i64, i64 } %60, 0
  %62 = trunc i64 %61 to i32
  %63 = icmp slt i32 %62, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %62) #20
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !2
  br label %69

69:                                               ; preds = %53, %46
  %70 = phi i32 [ %52, %46 ], [ %68, %53 ]
  ret i32 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox47PixelSnappedClientWidthWithTableSpecialBehaviorEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0)
  %4 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %5 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %5, i64 92
  %7 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::LayoutObject"* %2, i32 44) #20
  br i1 %8, label %9, label %32

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %12 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, i64 124
  %14 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, align 8
  %15 = tail call i32 %14(%"class.blink::LayoutBoxModelObject"* %10) #20
  %16 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %11, align 8
  %17 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, i64 125
  %18 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %17, align 8
  %19 = tail call i32 %18(%"class.blink::LayoutBoxModelObject"* %10) #20
  %20 = icmp slt i32 %19, 0
  %21 = select i1 %20, i32 -2147483648, i32 2147483647
  %22 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 %19) #20
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = select i1 %23, i32 %21, i32 %24, !prof !2
  %26 = icmp slt i32 %25, 0
  %27 = select i1 %26, i32 -2147483648, i32 2147483647
  %28 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %3, i32 %25) #20
  %29 = extractvalue { i32, i1 } %28, 1
  %30 = extractvalue { i32, i1 } %28, 0
  %31 = select i1 %29, i32 %27, i32 %30, !prof !2
  br label %32

32:                                               ; preds = %9, %1
  %33 = phi i32 [ %31, %9 ], [ %3, %1 ]
  %34 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %35 = bitcast %"class.blink::LayoutRect"* %34 to i64*
  %36 = load i64, i64* %35, align 4
  %37 = trunc i64 %36 to i32
  %38 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0)
  %39 = icmp slt i32 %38, 0
  %40 = select i1 %39, i32 -2147483648, i32 63
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 %38) #20
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !2
  %45 = srem i32 %44, 64
  %46 = icmp slt i32 %33, 0
  %47 = select i1 %46, i32 -2147483648, i32 2147483647
  %48 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %45, i32 %33) #20
  %49 = extractvalue { i32, i1 } %48, 1
  %50 = extractvalue { i32, i1 } %48, 0
  %51 = select i1 %49, i32 %47, i32 %50, !prof !2
  %52 = sdiv i32 %51, 64
  %53 = srem i32 %51, 64
  %54 = add nsw i32 %53, 32
  %55 = ashr i32 %54, 6
  %56 = add nsw i32 %45, 32
  %57 = ashr i32 %56, 6
  %58 = sub nsw i32 %52, %57
  %59 = add nsw i32 %55, %58
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %67

61:                                               ; preds = %32
  %62 = add i32 %33, 4
  %63 = icmp ugt i32 %62, 8
  br i1 %63, label %64, label %67, !prof !13

64:                                               ; preds = %61
  %65 = icmp sgt i32 %33, 0
  %66 = select i1 %65, i32 1, i32 -1
  br label %67

67:                                               ; preds = %32, %61, %64
  %68 = phi i32 [ %66, %64 ], [ %59, %32 ], [ 0, %61 ]
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox48PixelSnappedClientHeightWithTableSpecialBehaviorEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0)
  %4 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %5 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %5, i64 92
  %7 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::LayoutObject"* %2, i32 44) #20
  br i1 %8, label %9, label %32

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %12 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, i64 122
  %14 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, align 8
  %15 = tail call i32 %14(%"class.blink::LayoutBoxModelObject"* %10) #20
  %16 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %11, align 8
  %17 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, i64 123
  %18 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %17, align 8
  %19 = tail call i32 %18(%"class.blink::LayoutBoxModelObject"* %10) #20
  %20 = icmp slt i32 %19, 0
  %21 = select i1 %20, i32 -2147483648, i32 2147483647
  %22 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 %19) #20
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = select i1 %23, i32 %21, i32 %24, !prof !2
  %26 = icmp slt i32 %25, 0
  %27 = select i1 %26, i32 -2147483648, i32 2147483647
  %28 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %3, i32 %25) #20
  %29 = extractvalue { i32, i1 } %28, 1
  %30 = extractvalue { i32, i1 } %28, 0
  %31 = select i1 %29, i32 %27, i32 %30, !prof !2
  br label %32

32:                                               ; preds = %9, %1
  %33 = phi i32 [ %31, %9 ], [ %3, %1 ]
  %34 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %35 = bitcast %"class.blink::LayoutRect"* %34 to i64*
  %36 = load i64, i64* %35, align 4
  %37 = lshr i64 %36, 32
  %38 = trunc i64 %37 to i32
  %39 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %0)
  %40 = icmp slt i32 %39, 0
  %41 = select i1 %40, i32 -2147483648, i32 63
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %39) #20
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !2
  %46 = srem i32 %45, 64
  %47 = icmp slt i32 %33, 0
  %48 = select i1 %47, i32 -2147483648, i32 2147483647
  %49 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %46, i32 %33) #20
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = select i1 %50, i32 %48, i32 %51, !prof !2
  %53 = sdiv i32 %52, 64
  %54 = srem i32 %52, 64
  %55 = add nsw i32 %54, 32
  %56 = ashr i32 %55, 6
  %57 = add nsw i32 %46, 32
  %58 = ashr i32 %57, 6
  %59 = sub nsw i32 %53, %58
  %60 = add nsw i32 %56, %59
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %68

62:                                               ; preds = %32
  %63 = add i32 %33, 4
  %64 = icmp ugt i32 %63, 8
  br i1 %64, label %65, label %68, !prof !13

65:                                               ; preds = %62
  %66 = icmp sgt i32 %33, 0
  %67 = select i1 %66, i32 1, i32 -1
  br label %68

68:                                               ; preds = %32, %62, %65
  %69 = phi i32 [ %67, %65 ], [ %60, %32 ], [ 0, %62 ]
  ret i32 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"* nocapture readnone) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %6 = bitcast %"class.blink::LayoutRect"* %5 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = trunc i64 %7 to i32
  %9 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0)
  %10 = icmp slt i32 %9, 0
  %11 = select i1 %10, i32 -2147483648, i32 63
  %12 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %8, i32 %9) #20
  %13 = extractvalue { i32, i1 } %12, 1
  %14 = extractvalue { i32, i1 } %12, 0
  %15 = select i1 %13, i32 %11, i32 %14, !prof !2
  %16 = srem i32 %15, 64
  %17 = icmp slt i32 %4, 0
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 %4) #20
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !2
  %23 = sdiv i32 %22, 64
  %24 = srem i32 %22, 64
  %25 = add nsw i32 %24, 32
  %26 = ashr i32 %25, 6
  %27 = add nsw i32 %16, 32
  %28 = ashr i32 %27, 6
  %29 = sub nsw i32 %23, %28
  %30 = add nsw i32 %26, %29
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %2
  %33 = add i32 %4, 4
  %34 = icmp ugt i32 %33, 8
  br i1 %34, label %35, label %38, !prof !13

35:                                               ; preds = %32
  %36 = icmp sgt i32 %4, 0
  %37 = select i1 %36, i32 1, i32 -1
  br label %38

38:                                               ; preds = %2, %32, %35
  %39 = phi i32 [ %37, %35 ], [ %30, %2 ], [ 0, %32 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11OffsetWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"* nocapture readnone) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %6 = bitcast %"class.blink::LayoutRect"* %5 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = lshr i64 %7, 32
  %9 = trunc i64 %8 to i32
  %10 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %0)
  %11 = icmp slt i32 %10, 0
  %12 = select i1 %11, i32 -2147483648, i32 63
  %13 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %9, i32 %10) #20
  %14 = extractvalue { i32, i1 } %13, 1
  %15 = extractvalue { i32, i1 } %13, 0
  %16 = select i1 %14, i32 %12, i32 %15, !prof !2
  %17 = srem i32 %16, 64
  %18 = icmp slt i32 %4, 0
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %4) #20
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %19, i32 %22, !prof !2
  %24 = sdiv i32 %23, 64
  %25 = srem i32 %23, 64
  %26 = add nsw i32 %25, 32
  %27 = ashr i32 %26, 6
  %28 = add nsw i32 %17, 32
  %29 = ashr i32 %28, 6
  %30 = sub nsw i32 %24, %29
  %31 = add nsw i32 %27, %30
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %2
  %34 = add i32 %4, 4
  %35 = icmp ugt i32 %34, 8
  br i1 %35, label %36, label %39, !prof !13

36:                                               ; preds = %33
  %37 = icmp sgt i32 %4, 0
  %38 = select i1 %37, i32 1, i32 -1
  br label %39

39:                                               ; preds = %2, %33, %36
  %40 = phi i32 [ %38, %36 ], [ %31, %2 ], [ 0, %33 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12OffsetHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox21UsesOverlayScrollbarsEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = trunc i160 %7 to i8
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %10, label %19

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %12, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %14, i64 0, i32 39
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 6144
  %18 = icmp eq i32 %17, 2048
  br i1 %18, label %45, label %19

19:                                               ; preds = %1, %10
  %20 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %23, label %30

23:                                               ; preds = %19, %23
  %24 = phi %"class.blink::LayoutObject"* [ %26, %23 ], [ %2, %19 ]
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 7
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 6, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %23, label %30

30:                                               ; preds = %23, %19
  %31 = phi %"class.blink::Node"* [ %21, %19 ], [ %28, %23 ]
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %35) #20
  %37 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %36, i64 0, i32 0
  %38 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %37) #20
  %39 = tail call dereferenceable(8) %"class.blink::ScrollbarTheme"* @_ZNK5blink4Page17GetScrollbarThemeEv(%"class.blink::Page"* %38) #20
  %40 = bitcast %"class.blink::ScrollbarTheme"* %39 to i1 (%"class.blink::ScrollbarTheme"*)***
  %41 = load i1 (%"class.blink::ScrollbarTheme"*)**, i1 (%"class.blink::ScrollbarTheme"*)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %41, i64 7
  %43 = load i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %42, align 8
  %44 = tail call zeroext i1 %43(%"class.blink::ScrollbarTheme"* %39) #20
  br label %45

45:                                               ; preds = %30, %10
  %46 = phi i1 [ false, %10 ], [ %44, %30 ]
  ret i1 %46
}

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #5

declare dereferenceable(8) %"class.blink::ScrollbarTheme"* @_ZNK5blink4Page17GetScrollbarThemeEv(%"class.blink::Page"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox11ScrollWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 8589934592
  %7 = icmp eq i96 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  br i1 %7, label %21, label %13

13:                                               ; preds = %1
  %14 = lshr i160 %12, 74
  %15 = trunc i160 %14 to i32
  %16 = and i32 %15, 7
  switch i32 %16, label %17 [
    i32 5, label %21
    i32 2, label %21
  ]

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %19 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %18) #20
  %20 = tail call i32 @_ZNK5blink24PaintLayerScrollableArea11ScrollWidthEv(%"class.blink::PaintLayerScrollableArea"* %19) #20
  br label %102

21:                                               ; preds = %1, %13, %13
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %23 = and i160 %12, 144115188075855872
  %24 = icmp eq i160 %23, 0
  br i1 %24, label %51, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %27 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %26) #20
  %28 = icmp eq %"class.blink::PaintLayerScrollableArea"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = tail call i32 @_ZNK5blink24PaintLayerScrollableArea11ScrollWidthEv(%"class.blink::PaintLayerScrollableArea"* nonnull %27) #20
  br label %102

31:                                               ; preds = %25
  %32 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18LayoutOverflowRectEv(%"class.blink::LayoutBox"* %0) #20
  %33 = extractvalue { i64, i64 } %32, 1
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 5070602400912917605986812821504
  br i1 %39, label %42, label %40, !prof !2

40:                                               ; preds = %31
  %41 = trunc i64 %33 to i32
  br label %102

42:                                               ; preds = %31
  %43 = extractvalue { i64, i64 } %32, 0
  %44 = trunc i64 %43 to i32
  %45 = trunc i64 %33 to i32
  %46 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %47 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %46, align 8
  %48 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %47, i64 106
  %49 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %48, align 8
  %50 = tail call i32 %49(%"class.blink::LayoutObject"* %2, i32 %44, i32 %45, %"class.blink::LayoutBox"* null) #20
  br label %102

51:                                               ; preds = %21
  %52 = and i160 %12, 41538374868278621028243970633760768
  %53 = icmp eq i160 %52, 0
  %54 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0)
  %55 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18LayoutOverflowRectEv(%"class.blink::LayoutBox"* %0)
  %56 = extractvalue { i64, i64 } %55, 0
  %57 = trunc i64 %56 to i32
  br i1 %53, label %58, label %81

58:                                               ; preds = %51
  %59 = extractvalue { i64, i64 } %55, 1
  %60 = trunc i64 %59 to i32
  %61 = icmp slt i32 %60, 0
  %62 = select i1 %61, i32 -2147483648, i32 2147483647
  %63 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %60) #20
  %64 = extractvalue { i32, i1 } %63, 1
  %65 = extractvalue { i32, i1 } %63, 0
  %66 = select i1 %64, i32 %62, i32 %65, !prof !2
  %67 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %68 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %69 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %68, align 8
  %70 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %69, i64 124
  %71 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %70, align 8
  %72 = tail call i32 %71(%"class.blink::LayoutBoxModelObject"* %67) #20
  %73 = icmp sgt i32 %72, -1
  %74 = select i1 %73, i32 -2147483648, i32 2147483647
  %75 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %66, i32 %72) #20
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = extractvalue { i32, i1 } %75, 0
  %78 = select i1 %76, i32 %74, i32 %77, !prof !2
  %79 = icmp slt i32 %54, %78
  %80 = select i1 %79, i32 %78, i32 %54
  br label %102

81:                                               ; preds = %51
  %82 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %83 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %84 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %83, align 8
  %85 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %84, i64 124
  %86 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %85, align 8
  %87 = tail call i32 %86(%"class.blink::LayoutBoxModelObject"* %82) #20
  %88 = icmp sgt i32 %87, -1
  %89 = select i1 %88, i32 -2147483648, i32 2147483647
  %90 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %57, i32 %87) #20
  %91 = extractvalue { i32, i1 } %90, 1
  %92 = extractvalue { i32, i1 } %90, 0
  %93 = select i1 %91, i32 %89, i32 %92, !prof !2
  %94 = icmp slt i32 %93, 0
  %95 = select i1 %94, i32 %93, i32 0
  %96 = icmp sgt i32 %95, -1
  %97 = select i1 %96, i32 -2147483648, i32 2147483647
  %98 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %54, i32 %95) #20
  %99 = extractvalue { i32, i1 } %98, 1
  %100 = extractvalue { i32, i1 } %98, 0
  %101 = select i1 %99, i32 %97, i32 %100, !prof !2
  br label %102

102:                                              ; preds = %42, %40, %29, %81, %58, %17
  %103 = phi i32 [ %20, %17 ], [ %80, %58 ], [ %101, %81 ], [ %30, %29 ], [ %41, %40 ], [ %45, %42 ]
  ret i32 %103
}

declare i32 @_ZNK5blink24PaintLayerScrollableArea11ScrollWidthEv(%"class.blink::PaintLayerScrollableArea"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox18LayoutOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxOverflowModel"* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.blink::LayoutRect"* %10 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %14 = bitcast %"class.blink::LayoutSize"* %13 to i64*
  %15 = load i64, i64* %14, align 4
  br label %45

16:                                               ; preds = %5, %1
  %17 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0) #20
  %18 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %0) #20
  %19 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #20
  %20 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #20
  %21 = zext i32 %18 to i64
  %22 = shl nuw i64 %21, 32
  %23 = zext i32 %20 to i64
  %24 = shl nuw i64 %23, 32
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %26 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %26, i64 0, i32 0, i32 9
  %28 = bitcast [20 x i8]* %27 to i160*
  %29 = load i160, i160* %28, align 8
  %30 = and i160 %29, 15211807202738752817960438464512
  %31 = icmp eq i160 %30, 5070602400912917605986812821504
  br i1 %31, label %32, label %39, !prof !2

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %34 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %35 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %34, align 8
  %36 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %35, i64 106
  %37 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %36, align 8
  %38 = tail call i32 %37(%"class.blink::LayoutObject"* %33, i32 %17, i32 %19, %"class.blink::LayoutBox"* null) #20
  br label %39

39:                                               ; preds = %16, %32
  %40 = phi i32 [ %38, %32 ], [ %17, %16 ]
  %41 = zext i32 %40 to i64
  %42 = or i64 %22, %41
  %43 = zext i32 %19 to i64
  %44 = or i64 %24, %43
  br label %45

45:                                               ; preds = %39, %9
  %46 = phi i64 [ %12, %9 ], [ %42, %39 ]
  %47 = phi i64 [ %15, %9 ], [ %44, %39 ]
  %48 = insertvalue { i64, i64 } undef, i64 %46, 0
  %49 = insertvalue { i64, i64 } %48, i64 %47, 1
  ret { i64, i64 } %49
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox12ScrollHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 8589934592
  %7 = icmp eq i96 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  br i1 %7, label %21, label %13

13:                                               ; preds = %1
  %14 = lshr i160 %12, 74
  %15 = trunc i160 %14 to i32
  %16 = and i32 %15, 7
  switch i32 %16, label %17 [
    i32 5, label %21
    i32 2, label %21
  ]

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %19 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %18) #20
  %20 = tail call i32 @_ZNK5blink24PaintLayerScrollableArea12ScrollHeightEv(%"class.blink::PaintLayerScrollableArea"* %19) #20
  br label %81

21:                                               ; preds = %1, %13, %13
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %23 = and i160 %12, 144115188075855872
  %24 = icmp eq i160 %23, 0
  br i1 %24, label %52, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %27 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %26) #20
  %28 = icmp eq %"class.blink::PaintLayerScrollableArea"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = tail call i32 @_ZNK5blink24PaintLayerScrollableArea12ScrollHeightEv(%"class.blink::PaintLayerScrollableArea"* nonnull %27) #20
  br label %81

31:                                               ; preds = %25
  %32 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18LayoutOverflowRectEv(%"class.blink::LayoutBox"* %0) #20
  %33 = extractvalue { i64, i64 } %32, 1
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 5070602400912917605986812821504
  br i1 %39, label %40, label %49, !prof !2

40:                                               ; preds = %31
  %41 = extractvalue { i64, i64 } %32, 0
  %42 = trunc i64 %41 to i32
  %43 = trunc i64 %33 to i32
  %44 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %45 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %44, align 8
  %46 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %45, i64 106
  %47 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %46, align 8
  %48 = tail call i32 %47(%"class.blink::LayoutObject"* %2, i32 %42, i32 %43, %"class.blink::LayoutBox"* null) #20
  br label %49

49:                                               ; preds = %31, %40
  %50 = lshr i64 %33, 32
  %51 = trunc i64 %50 to i32
  br label %81

52:                                               ; preds = %21
  %53 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0)
  %54 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18LayoutOverflowRectEv(%"class.blink::LayoutBox"* %0)
  %55 = extractvalue { i64, i64 } %54, 0
  %56 = lshr i64 %55, 32
  %57 = trunc i64 %56 to i32
  %58 = extractvalue { i64, i64 } %54, 1
  %59 = lshr i64 %58, 32
  %60 = trunc i64 %59 to i32
  %61 = icmp slt i32 %60, 0
  %62 = select i1 %61, i32 -2147483648, i32 2147483647
  %63 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %60) #20
  %64 = extractvalue { i32, i1 } %63, 1
  %65 = extractvalue { i32, i1 } %63, 0
  %66 = select i1 %64, i32 %62, i32 %65, !prof !2
  %67 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %68 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %69 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %68, align 8
  %70 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %69, i64 122
  %71 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %70, align 8
  %72 = tail call i32 %71(%"class.blink::LayoutBoxModelObject"* %67) #20
  %73 = icmp sgt i32 %72, -1
  %74 = select i1 %73, i32 -2147483648, i32 2147483647
  %75 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %66, i32 %72) #20
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = extractvalue { i32, i1 } %75, 0
  %78 = select i1 %76, i32 %74, i32 %77, !prof !2
  %79 = icmp slt i32 %53, %78
  %80 = select i1 %79, i32 %78, i32 %53
  br label %81

81:                                               ; preds = %29, %49, %52, %17
  %82 = phi i32 [ %20, %17 ], [ %80, %52 ], [ %30, %29 ], [ %51, %49 ]
  ret i32 %82
}

declare i32 @_ZNK5blink24PaintLayerScrollableArea12ScrollHeightEv(%"class.blink::PaintLayerScrollableArea"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox23PixelSnappedScrollWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %3 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %3, i64 152
  %5 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::LayoutBox"* %0) #20
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %8 = bitcast %"class.blink::LayoutRect"* %7 to i64*
  %9 = load i64, i64* %8, align 4
  %10 = trunc i64 %9 to i32
  %11 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0)
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, i32 -2147483648, i32 63
  %14 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %10, i32 %11) #20
  %15 = extractvalue { i32, i1 } %14, 1
  %16 = extractvalue { i32, i1 } %14, 0
  %17 = select i1 %15, i32 %13, i32 %16, !prof !2
  %18 = srem i32 %17, 64
  %19 = icmp slt i32 %6, 0
  %20 = select i1 %19, i32 -2147483648, i32 2147483647
  %21 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %18, i32 %6) #20
  %22 = extractvalue { i32, i1 } %21, 1
  %23 = extractvalue { i32, i1 } %21, 0
  %24 = select i1 %22, i32 %20, i32 %23, !prof !2
  %25 = sdiv i32 %24, 64
  %26 = srem i32 %24, 64
  %27 = add nsw i32 %26, 32
  %28 = ashr i32 %27, 6
  %29 = add nsw i32 %18, 32
  %30 = ashr i32 %29, 6
  %31 = sub nsw i32 %25, %30
  %32 = add nsw i32 %28, %31
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %1
  %35 = add i32 %6, 4
  %36 = icmp ugt i32 %35, 8
  br i1 %36, label %37, label %40, !prof !13

37:                                               ; preds = %34
  %38 = icmp sgt i32 %6, 0
  %39 = select i1 %38, i32 1, i32 -1
  br label %40

40:                                               ; preds = %1, %34, %37
  %41 = phi i32 [ %39, %37 ], [ %32, %1 ], [ 0, %34 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox24PixelSnappedScrollHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %54, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = lshr i160 %12, 74
  %14 = trunc i160 %13 to i32
  %15 = and i32 %14, 7
  switch i32 %15, label %16 [
    i32 5, label %54
    i32 2, label %54
  ]

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %18 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %17) #20
  %19 = tail call i32 @_ZNK5blink24PaintLayerScrollableArea12ScrollHeightEv(%"class.blink::PaintLayerScrollableArea"* %18) #20
  %20 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %21 = bitcast %"class.blink::LayoutRect"* %20 to i64*
  %22 = load i64, i64* %21, align 4
  %23 = lshr i64 %22, 32
  %24 = trunc i64 %23 to i32
  %25 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %0)
  %26 = icmp slt i32 %25, 0
  %27 = select i1 %26, i32 -2147483648, i32 63
  %28 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 %25) #20
  %29 = extractvalue { i32, i1 } %28, 1
  %30 = extractvalue { i32, i1 } %28, 0
  %31 = select i1 %29, i32 %27, i32 %30, !prof !2
  %32 = srem i32 %31, 64
  %33 = icmp slt i32 %19, 0
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %32, i32 %19) #20
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !2
  %39 = sdiv i32 %38, 64
  %40 = srem i32 %38, 64
  %41 = add nsw i32 %40, 32
  %42 = ashr i32 %41, 6
  %43 = add nsw i32 %32, 32
  %44 = ashr i32 %43, 6
  %45 = sub nsw i32 %39, %44
  %46 = add nsw i32 %42, %45
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %94

48:                                               ; preds = %16
  %49 = add i32 %19, 4
  %50 = icmp ugt i32 %49, 8
  br i1 %50, label %51, label %94, !prof !13

51:                                               ; preds = %48
  %52 = icmp sgt i32 %19, 0
  %53 = select i1 %52, i32 1, i32 -1
  br label %94

54:                                               ; preds = %7, %7, %1
  %55 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %56 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %56, i64 153
  %58 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %57, align 8
  %59 = tail call i32 %58(%"class.blink::LayoutBox"* %0) #20
  %60 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %61 = bitcast %"class.blink::LayoutRect"* %60 to i64*
  %62 = load i64, i64* %61, align 4
  %63 = lshr i64 %62, 32
  %64 = trunc i64 %63 to i32
  %65 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %0)
  %66 = icmp slt i32 %65, 0
  %67 = select i1 %66, i32 -2147483648, i32 63
  %68 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %64, i32 %65) #20
  %69 = extractvalue { i32, i1 } %68, 1
  %70 = extractvalue { i32, i1 } %68, 0
  %71 = select i1 %69, i32 %67, i32 %70, !prof !2
  %72 = srem i32 %71, 64
  %73 = icmp slt i32 %59, 0
  %74 = select i1 %73, i32 -2147483648, i32 2147483647
  %75 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %72, i32 %59) #20
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = extractvalue { i32, i1 } %75, 0
  %78 = select i1 %76, i32 %74, i32 %77, !prof !2
  %79 = sdiv i32 %78, 64
  %80 = srem i32 %78, 64
  %81 = add nsw i32 %80, 32
  %82 = ashr i32 %81, 6
  %83 = add nsw i32 %72, 32
  %84 = ashr i32 %83, 6
  %85 = sub nsw i32 %79, %84
  %86 = add nsw i32 %82, %85
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %94

88:                                               ; preds = %54
  %89 = add i32 %59, 4
  %90 = icmp ugt i32 %89, 8
  br i1 %90, label %91, label %94, !prof !13

91:                                               ; preds = %88
  %92 = icmp sgt i32 %59, 0
  %93 = select i1 %92, i32 1, i32 -1
  br label %94

94:                                               ; preds = %91, %88, %54, %51, %48, %16
  %95 = phi i32 [ %53, %51 ], [ %46, %16 ], [ 0, %48 ], [ %93, %91 ], [ %86, %54 ], [ 0, %88 ]
  ret i32 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink9LayoutBox28ScrollRectToVisibleRecursiveERKNS_12PhysicalRectEN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), %"class.mojo::StructPtr.4211"*) local_unnamed_addr #4 align 2 {
  %4 = alloca %"struct.blink::PhysicalRect", align 4
  %5 = alloca %"struct.blink::PhysicalRect", align 8
  %6 = alloca %"class.mojo::StructPtr.4211", align 8
  %7 = alloca %"class.mojo::StructPtr.4211", align 8
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %12, label %19

12:                                               ; preds = %3, %12
  %13 = phi %"class.blink::LayoutObject"* [ %15, %12 ], [ %8, %3 ]
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 7
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 6, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %12, label %19

19:                                               ; preds = %12, %3
  %20 = phi %"class.blink::Node"* [ %10, %3 ], [ %17, %12 ]
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %22, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.blink::Document"*, %"class.blink::Document"** %23, align 8
  %25 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %24) #20
  %26 = icmp eq %"class.blink::LocalFrameView"* %25, null
  br i1 %26, label %27, label %33

27:                                               ; preds = %19
  %28 = bitcast %"struct.blink::PhysicalRect"* %1 to i64*
  %29 = load i64, i64* %28, align 4
  %30 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1
  %31 = bitcast %"struct.blink::PhysicalSize"* %30 to i64*
  %32 = load i64, i64* %31, align 4
  br label %512

33:                                               ; preds = %19
  %34 = getelementptr inbounds %"class.mojo::StructPtr.4211", %"class.mojo::StructPtr.4211"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::mojom::blink::ScrollIntoViewParams"*, %"class.blink::mojom::blink::ScrollIntoViewParams"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::mojom::blink::ScrollIntoViewParams", %"class.blink::mojom::blink::ScrollIntoViewParams"* %35, i64 0, i32 11
  %37 = load i8, i8* %36, align 4, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %41 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %40 to i96*
  %42 = load i96, i96* %41, align 4
  %43 = and i96 %42, 18446744073709551616
  %44 = icmp eq i96 %43, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %39
  %46 = bitcast %"struct.blink::PhysicalRect"* %1 to i64*
  %47 = load i64, i64* %46, align 4
  %48 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1
  %49 = bitcast %"struct.blink::PhysicalSize"* %48 to i64*
  %50 = load i64, i64* %49, align 4
  br label %512

51:                                               ; preds = %39, %33
  %52 = bitcast %"struct.blink::PhysicalRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #20
  %53 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1, i32 1, i32 0
  %55 = bitcast %"struct.blink::PhysicalRect"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %52, i8* align 4 %55, i64 16, i1 false)
  %56 = load i32, i32* %53, align 4
  %57 = icmp slt i32 %56, 1
  br i1 %57, label %58, label %59

58:                                               ; preds = %51
  store i32 64, i32* %53, align 4
  br label %59

59:                                               ; preds = %58, %51
  %60 = load i32, i32* %54, align 4
  %61 = icmp slt i32 %60, 1
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  store i32 64, i32* %54, align 4
  br label %63

63:                                               ; preds = %62, %59
  %64 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %8, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %65 = icmp eq %"class.blink::LayoutBlock"* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %63
  %67 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %8, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %68 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %67, i64 0, i32 0
  br label %69

69:                                               ; preds = %63, %66
  %70 = phi %"class.blink::LayoutBox"* [ %68, %66 ], [ null, %63 ]
  %71 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #20
  %72 = icmp eq %"class.blink::LayoutBox"* %0, null
  br i1 %72, label %79, label %73

73:                                               ; preds = %69
  %74 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %75 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %74, align 8
  %76 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %75, i64 92
  %77 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %76, align 8
  %78 = tail call zeroext i1 %77(%"class.blink::LayoutObject"* %8, i32 55) #20
  br i1 %78, label %103, label %79

79:                                               ; preds = %69, %73
  %80 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %81 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %80 to i96*
  %82 = load i96, i96* %81, align 4
  %83 = and i96 %82, 8589934592
  %84 = icmp eq i96 %83, 0
  br i1 %84, label %103, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %87 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %87, i64 0, i32 0, i32 9
  %89 = bitcast [20 x i8]* %88 to i160*
  %90 = load i160, i160* %89, align 8
  %91 = lshr i160 %90, 74
  %92 = trunc i160 %91 to i32
  %93 = and i32 %92, 7
  switch i32 %93, label %94 [
    i32 5, label %103
    i32 2, label %103
  ]

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %96 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %95) #20
  %97 = call { i64, i64 } @_ZN5blink24PaintLayerScrollableArea14ScrollIntoViewERKNS_12PhysicalRectERKN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::PaintLayerScrollableArea"* %96, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4, %"class.mojo::StructPtr.4211"* dereferenceable(8) %2) #20
  %98 = extractvalue { i64, i64 } %97, 0
  %99 = extractvalue { i64, i64 } %97, 1
  %100 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  store i64 %98, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1
  %102 = bitcast %"struct.blink::PhysicalSize"* %101 to i64*
  store i64 %99, i64* %102, align 8
  br label %299

103:                                              ; preds = %85, %85, %79, %73
  %104 = icmp eq %"class.blink::LayoutBox"* %70, null
  br i1 %104, label %105, label %298

105:                                              ; preds = %103
  %106 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %107 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %106, align 8
  %108 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %107, i64 170
  %109 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %108, align 8
  %110 = tail call zeroext i1 %109(%"class.blink::LayoutBox"* %0) #20
  br i1 %110, label %111, label %298

111:                                              ; preds = %105
  %112 = load %"class.blink::mojom::blink::ScrollIntoViewParams"*, %"class.blink::mojom::blink::ScrollIntoViewParams"** %34, align 8
  %113 = getelementptr inbounds %"class.blink::mojom::blink::ScrollIntoViewParams", %"class.blink::mojom::blink::ScrollIntoViewParams"* %112, i64 0, i32 3
  %114 = load i8, i8* %113, align 4, !range !4
  %115 = icmp eq i8 %114, 0
  %116 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %117 = icmp eq %"class.blink::Node"* %116, null
  br i1 %117, label %118, label %125

118:                                              ; preds = %111, %118
  %119 = phi %"class.blink::LayoutObject"* [ %121, %118 ], [ %8, %111 ]
  %120 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %119, i64 0, i32 7
  %121 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %121, i64 0, i32 6, i32 0, i32 0
  %123 = load %"class.blink::Node"*, %"class.blink::Node"** %122, align 8
  %124 = icmp eq %"class.blink::Node"* %123, null
  br i1 %124, label %118, label %125

125:                                              ; preds = %118, %111
  %126 = phi %"class.blink::Node"* [ %116, %111 ], [ %123, %118 ]
  %127 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %126, i64 0, i32 3, i32 0, i32 0
  %128 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %128, i64 0, i32 2, i32 0, i32 0
  %130 = load %"class.blink::Document"*, %"class.blink::Document"** %129, align 8
  %131 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %130) #20
  br i1 %115, label %134, label %132

132:                                              ; preds = %125
  %133 = tail call %"class.blink::ScrollableArea"* @_ZN5blink14LocalFrameView17GetScrollableAreaEv(%"class.blink::LocalFrameView"* %131) #20
  br label %137

134:                                              ; preds = %125
  %135 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"* %131) #20
  %136 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %135, i64 0, i32 0
  br label %137

137:                                              ; preds = %134, %132
  %138 = phi %"class.blink::ScrollableArea"* [ %133, %132 ], [ %136, %134 ]
  %139 = bitcast %"class.blink::ScrollableArea"* %138 to { i64, i64 } (%"class.blink::ScrollableArea"*, %"struct.blink::PhysicalRect"*, %"class.mojo::StructPtr.4211"*)***
  %140 = load { i64, i64 } (%"class.blink::ScrollableArea"*, %"struct.blink::PhysicalRect"*, %"class.mojo::StructPtr.4211"*)**, { i64, i64 } (%"class.blink::ScrollableArea"*, %"struct.blink::PhysicalRect"*, %"class.mojo::StructPtr.4211"*)*** %139, align 8
  %141 = getelementptr inbounds { i64, i64 } (%"class.blink::ScrollableArea"*, %"struct.blink::PhysicalRect"*, %"class.mojo::StructPtr.4211"*)*, { i64, i64 } (%"class.blink::ScrollableArea"*, %"struct.blink::PhysicalRect"*, %"class.mojo::StructPtr.4211"*)** %140, i64 9
  %142 = load { i64, i64 } (%"class.blink::ScrollableArea"*, %"struct.blink::PhysicalRect"*, %"class.mojo::StructPtr.4211"*)*, { i64, i64 } (%"class.blink::ScrollableArea"*, %"struct.blink::PhysicalRect"*, %"class.mojo::StructPtr.4211"*)** %141, align 8
  %143 = call { i64, i64 } %142(%"class.blink::ScrollableArea"* %138, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4, %"class.mojo::StructPtr.4211"* dereferenceable(8) %2) #20
  %144 = extractvalue { i64, i64 } %143, 0
  %145 = extractvalue { i64, i64 } %143, 1
  %146 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  store i64 %144, i64* %146, align 8
  %147 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1
  %148 = bitcast %"struct.blink::PhysicalSize"* %147 to i64*
  store i64 %145, i64* %148, align 8
  %149 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %150 = icmp eq %"class.blink::Node"* %149, null
  br i1 %150, label %151, label %158

151:                                              ; preds = %137, %151
  %152 = phi %"class.blink::LayoutObject"* [ %154, %151 ], [ %8, %137 ]
  %153 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %152, i64 0, i32 7
  %154 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 0, i32 6, i32 0, i32 0
  %156 = load %"class.blink::Node"*, %"class.blink::Node"** %155, align 8
  %157 = icmp eq %"class.blink::Node"* %156, null
  br i1 %157, label %151, label %158

158:                                              ; preds = %151, %137
  %159 = phi %"class.blink::Node"* [ %149, %137 ], [ %156, %151 ]
  %160 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %159, i64 0, i32 3, i32 0, i32 0
  %161 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %161, i64 0, i32 2, i32 0, i32 0
  %163 = load %"class.blink::Document"*, %"class.blink::Document"** %162, align 8
  %164 = call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* %163) #20
  %165 = icmp eq %"class.blink::HTMLFrameOwnerElement"* %164, null
  br i1 %165, label %299, label %166

166:                                              ; preds = %158
  %167 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %168 = load i32, i32* %167, align 8
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %170, label %176, label %172

172:                                              ; preds = %166
  %173 = bitcast %"class.blink::NodeData"** %171 to %"class.blink::NodeRareData"**
  %174 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %173, align 8
  %175 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %174, i64 0, i32 1, i32 0, i32 0
  br label %178

176:                                              ; preds = %166
  %177 = bitcast %"class.blink::NodeData"** %171 to %"class.blink::NodeRenderingData"**
  br label %178

178:                                              ; preds = %172, %176
  %179 = phi %"class.blink::NodeRenderingData"** [ %175, %172 ], [ %177, %176 ]
  %180 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %179, align 8
  %181 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %180, i64 0, i32 1
  %182 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %181, align 8
  %183 = icmp eq %"class.blink::LayoutObject"* %182, null
  br i1 %183, label %299, label %184

184:                                              ; preds = %178
  %185 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %186 = icmp eq %"class.blink::Node"* %185, null
  br i1 %186, label %187, label %194

187:                                              ; preds = %184, %187
  %188 = phi %"class.blink::LayoutObject"* [ %190, %187 ], [ %8, %184 ]
  %189 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %188, i64 0, i32 7
  %190 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %190, i64 0, i32 6, i32 0, i32 0
  %192 = load %"class.blink::Node"*, %"class.blink::Node"** %191, align 8
  %193 = icmp eq %"class.blink::Node"* %192, null
  br i1 %193, label %187, label %194

194:                                              ; preds = %187, %184
  %195 = phi %"class.blink::Node"* [ %185, %184 ], [ %192, %187 ]
  %196 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %195, i64 0, i32 3, i32 0, i32 0
  %197 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %196, align 8
  %198 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %197, i64 0, i32 2, i32 0, i32 0
  %199 = load %"class.blink::Document"*, %"class.blink::Document"** %198, align 8
  %200 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %199) #20
  %201 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %200, i64 0, i32 18
  %202 = load i8, i8* %201, align 8, !range !4
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %299, label %204

204:                                              ; preds = %194
  %205 = load %"class.blink::mojom::blink::ScrollIntoViewParams"*, %"class.blink::mojom::blink::ScrollIntoViewParams"** %34, align 8
  %206 = getelementptr inbounds %"class.blink::mojom::blink::ScrollIntoViewParams", %"class.blink::mojom::blink::ScrollIntoViewParams"* %205, i64 0, i32 2
  %207 = load i32, i32* %206, align 4
  %208 = icmp eq i32 %207, 1
  br i1 %208, label %209, label %228

209:                                              ; preds = %204
  %210 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %211 = icmp eq %"class.blink::Node"* %210, null
  br i1 %211, label %212, label %219

212:                                              ; preds = %209, %212
  %213 = phi %"class.blink::LayoutObject"* [ %215, %212 ], [ %8, %209 ]
  %214 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %213, i64 0, i32 7
  %215 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %214, align 8
  %216 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %215, i64 0, i32 6, i32 0, i32 0
  %217 = load %"class.blink::Node"*, %"class.blink::Node"** %216, align 8
  %218 = icmp eq %"class.blink::Node"* %217, null
  br i1 %218, label %212, label %219

219:                                              ; preds = %212, %209
  %220 = phi %"class.blink::Node"* [ %210, %209 ], [ %217, %212 ]
  %221 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %220, i64 0, i32 3, i32 0, i32 0
  %222 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %221, align 8
  %223 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %222, i64 0, i32 2, i32 0, i32 0
  %224 = load %"class.blink::Document"*, %"class.blink::Document"** %223, align 8
  %225 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %224, i64 0, i32 154
  %226 = load i8, i8* %225, align 8, !range !4
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %228, label %299

228:                                              ; preds = %204, %219
  %229 = load i32, i32* %167, align 8
  %230 = and i32 %229, 1
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %236, label %232

232:                                              ; preds = %228
  %233 = bitcast %"class.blink::NodeData"** %171 to %"class.blink::NodeRareData"**
  %234 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %233, align 8
  %235 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %234, i64 0, i32 1, i32 0, i32 0
  br label %238

236:                                              ; preds = %228
  %237 = bitcast %"class.blink::NodeData"** %171 to %"class.blink::NodeRenderingData"**
  br label %238

238:                                              ; preds = %232, %236
  %239 = phi %"class.blink::NodeRenderingData"** [ %235, %232 ], [ %237, %236 ]
  %240 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %239, align 8
  %241 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %240, i64 0, i32 1
  %242 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %241, align 8
  %243 = call %"class.blink::LayoutBox"* @_ZNK5blink12LayoutObject12EnclosingBoxEv(%"class.blink::LayoutObject"* %242) #20
  %244 = load i32, i32* %167, align 8
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %251, label %247

247:                                              ; preds = %238
  %248 = bitcast %"class.blink::NodeData"** %171 to %"class.blink::NodeRareData"**
  %249 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %248, align 8
  %250 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %249, i64 0, i32 1, i32 0, i32 0
  br label %253

251:                                              ; preds = %238
  %252 = bitcast %"class.blink::NodeData"** %171 to %"class.blink::NodeRenderingData"**
  br label %253

253:                                              ; preds = %247, %251
  %254 = phi %"class.blink::NodeRenderingData"** [ %250, %247 ], [ %252, %251 ]
  %255 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %255, i64 0, i32 1
  %257 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %256, align 8
  %258 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %257, i64 0, i32 6, i32 0, i32 0
  %259 = load %"class.blink::Node"*, %"class.blink::Node"** %258, align 8
  %260 = icmp eq %"class.blink::Node"* %259, null
  br i1 %260, label %261, label %268

261:                                              ; preds = %253, %261
  %262 = phi %"class.blink::LayoutObject"* [ %264, %261 ], [ %257, %253 ]
  %263 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %262, i64 0, i32 7
  %264 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %263, align 8
  %265 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %264, i64 0, i32 6, i32 0, i32 0
  %266 = load %"class.blink::Node"*, %"class.blink::Node"** %265, align 8
  %267 = icmp eq %"class.blink::Node"* %266, null
  br i1 %267, label %261, label %268

268:                                              ; preds = %261, %253
  %269 = phi %"class.blink::Node"* [ %259, %253 ], [ %266, %261 ]
  %270 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %269, i64 0, i32 3, i32 0, i32 0
  %271 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %270, align 8
  %272 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %271, i64 0, i32 2, i32 0, i32 0
  %273 = load %"class.blink::Document"*, %"class.blink::Document"** %272, align 8
  %274 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %273, i64 0, i32 113
  %275 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %274, align 8
  %276 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %277 = icmp eq %"class.blink::Node"* %276, null
  br i1 %277, label %278, label %285

278:                                              ; preds = %268, %278
  %279 = phi %"class.blink::LayoutObject"* [ %281, %278 ], [ %8, %268 ]
  %280 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %279, i64 0, i32 7
  %281 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %280, align 8
  %282 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %281, i64 0, i32 6, i32 0, i32 0
  %283 = load %"class.blink::Node"*, %"class.blink::Node"** %282, align 8
  %284 = icmp eq %"class.blink::Node"* %283, null
  br i1 %284, label %278, label %285

285:                                              ; preds = %278, %268
  %286 = phi %"class.blink::Node"* [ %276, %268 ], [ %283, %278 ]
  %287 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %286, i64 0, i32 3, i32 0, i32 0
  %288 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %287, align 8
  %289 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %288, i64 0, i32 2, i32 0, i32 0
  %290 = load %"class.blink::Document"*, %"class.blink::Document"** %289, align 8
  %291 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %290, i64 0, i32 113
  %292 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %291, align 8
  %293 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %292, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %275, i64 0, i32 0, i32 0, i32 0, i32 0
  %295 = call { i64, i64 } @_ZNK5blink12LayoutObject19LocalToAncestorRectERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* %293, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5, %"class.blink::LayoutBoxModelObject"* %294, i32 8) #20
  %296 = extractvalue { i64, i64 } %295, 0
  %297 = extractvalue { i64, i64 } %295, 1
  store i64 %296, i64* %146, align 8
  store i64 %297, i64* %148, align 8
  br label %299

298:                                              ; preds = %103, %105
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 4 %52, i64 16, i1 false)
  br label %299

299:                                              ; preds = %194, %219, %285, %158, %178, %298, %94
  %300 = phi %"class.blink::LayoutBox"* [ %70, %298 ], [ %70, %94 ], [ %243, %285 ], [ null, %219 ], [ null, %178 ], [ null, %158 ], [ null, %194 ]
  %301 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %302 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %301, align 8
  %303 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %302, i64 0, i32 0, i32 9
  %304 = bitcast [20 x i8]* %303 to i160*
  %305 = load i160, i160* %304, align 8
  %306 = and i160 %305, 8462480737302404222943232
  %307 = icmp eq i160 %306, 1208925819614629174706176
  br i1 %307, label %308, label %384

308:                                              ; preds = %299
  %309 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %8, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %310 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %311 = icmp eq %"class.blink::Node"* %310, null
  br i1 %311, label %312, label %319

312:                                              ; preds = %308, %312
  %313 = phi %"class.blink::LayoutObject"* [ %315, %312 ], [ %8, %308 ]
  %314 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %313, i64 0, i32 7
  %315 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %314, align 8
  %316 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %315, i64 0, i32 6, i32 0, i32 0
  %317 = load %"class.blink::Node"*, %"class.blink::Node"** %316, align 8
  %318 = icmp eq %"class.blink::Node"* %317, null
  br i1 %318, label %312, label %319

319:                                              ; preds = %312, %308
  %320 = phi %"class.blink::Node"* [ %310, %308 ], [ %317, %312 ]
  %321 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %320, i64 0, i32 3, i32 0, i32 0
  %322 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %321, align 8
  %323 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %322, i64 0, i32 2, i32 0, i32 0
  %324 = load %"class.blink::Document"*, %"class.blink::Document"** %323, align 8
  %325 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %324, i64 0, i32 113
  %326 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %325, align 8
  %327 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %326, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %328 = icmp eq %"class.blink::LayoutObject"* %309, %327
  br i1 %328, label %329, label %384

329:                                              ; preds = %319
  %330 = load %"class.blink::mojom::blink::ScrollIntoViewParams"*, %"class.blink::mojom::blink::ScrollIntoViewParams"** %34, align 8
  %331 = getelementptr inbounds %"class.blink::mojom::blink::ScrollIntoViewParams", %"class.blink::mojom::blink::ScrollIntoViewParams"* %330, i64 0, i32 3
  %332 = load i8, i8* %331, align 4, !range !4
  %333 = icmp eq i8 %332, 0
  br i1 %333, label %384, label %334

334:                                              ; preds = %329
  br i1 %311, label %335, label %342

335:                                              ; preds = %334, %335
  %336 = phi %"class.blink::LayoutObject"* [ %338, %335 ], [ %8, %334 ]
  %337 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %336, i64 0, i32 7
  %338 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %337, align 8
  %339 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %338, i64 0, i32 6, i32 0, i32 0
  %340 = load %"class.blink::Node"*, %"class.blink::Node"** %339, align 8
  %341 = icmp eq %"class.blink::Node"* %340, null
  br i1 %341, label %335, label %342

342:                                              ; preds = %335, %334
  %343 = phi %"class.blink::Node"* [ %310, %334 ], [ %340, %335 ]
  %344 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %343, i64 0, i32 3, i32 0, i32 0
  %345 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %344, align 8
  %346 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %345, i64 0, i32 2, i32 0, i32 0
  %347 = load %"class.blink::Document"*, %"class.blink::Document"** %346, align 8
  %348 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %347) #20
  %349 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %348, i64 0, i32 0
  %350 = call zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"* %349) #20
  br i1 %350, label %351, label %378

351:                                              ; preds = %342
  %352 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %353 = icmp eq %"class.blink::Node"* %352, null
  br i1 %353, label %354, label %361

354:                                              ; preds = %351, %354
  %355 = phi %"class.blink::LayoutObject"* [ %357, %354 ], [ %8, %351 ]
  %356 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %355, i64 0, i32 7
  %357 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %356, align 8
  %358 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %357, i64 0, i32 6, i32 0, i32 0
  %359 = load %"class.blink::Node"*, %"class.blink::Node"** %358, align 8
  %360 = icmp eq %"class.blink::Node"* %359, null
  br i1 %360, label %354, label %361

361:                                              ; preds = %354, %351
  %362 = phi %"class.blink::Node"* [ %352, %351 ], [ %359, %354 ]
  %363 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %362, i64 0, i32 3, i32 0, i32 0
  %364 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %363, align 8
  %365 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %364, i64 0, i32 2, i32 0, i32 0
  %366 = load %"class.blink::Document"*, %"class.blink::Document"** %365, align 8
  %367 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %366) #20
  %368 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %367, i64 0, i32 0
  %369 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %368) #20
  %370 = call dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"* %369) #20
  %371 = bitcast %"class.blink::VisualViewport"* %370 to { i64, i64 } (%"class.blink::VisualViewport"*, %"struct.blink::PhysicalRect"*, %"class.mojo::StructPtr.4211"*)***
  %372 = load { i64, i64 } (%"class.blink::VisualViewport"*, %"struct.blink::PhysicalRect"*, %"class.mojo::StructPtr.4211"*)**, { i64, i64 } (%"class.blink::VisualViewport"*, %"struct.blink::PhysicalRect"*, %"class.mojo::StructPtr.4211"*)*** %371, align 8
  %373 = getelementptr inbounds { i64, i64 } (%"class.blink::VisualViewport"*, %"struct.blink::PhysicalRect"*, %"class.mojo::StructPtr.4211"*)*, { i64, i64 } (%"class.blink::VisualViewport"*, %"struct.blink::PhysicalRect"*, %"class.mojo::StructPtr.4211"*)** %372, i64 9
  %374 = load { i64, i64 } (%"class.blink::VisualViewport"*, %"struct.blink::PhysicalRect"*, %"class.mojo::StructPtr.4211"*)*, { i64, i64 } (%"class.blink::VisualViewport"*, %"struct.blink::PhysicalRect"*, %"class.mojo::StructPtr.4211"*)** %373, align 8
  %375 = call { i64, i64 } %374(%"class.blink::VisualViewport"* %370, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5, %"class.mojo::StructPtr.4211"* dereferenceable(8) %2) #20
  %376 = extractvalue { i64, i64 } %375, 0
  %377 = extractvalue { i64, i64 } %375, 1
  br label %509

378:                                              ; preds = %342
  %379 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  %380 = load i64, i64* %379, align 8
  %381 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1
  %382 = bitcast %"struct.blink::PhysicalSize"* %381 to i64*
  %383 = load i64, i64* %382, align 8
  br label %509

384:                                              ; preds = %329, %319, %299
  %385 = icmp eq %"class.blink::LayoutBox"* %300, null
  br i1 %385, label %398, label %386

386:                                              ; preds = %384
  %387 = bitcast %"class.mojo::StructPtr.4211"* %6 to i64*
  %388 = getelementptr inbounds %"class.mojo::StructPtr.4211", %"class.mojo::StructPtr.4211"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %389 = bitcast %"class.mojo::StructPtr.4211"* %2 to i64*
  %390 = load i64, i64* %389, align 8
  store i64 %390, i64* %387, align 8
  store i64 0, i64* %389, align 8
  %391 = call { i64, i64 } @_ZN5blink9LayoutBox28ScrollRectToVisibleRecursiveERKNS_12PhysicalRectEN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::LayoutBox"* nonnull %300, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5, %"class.mojo::StructPtr.4211"* nonnull %6)
  %392 = extractvalue { i64, i64 } %391, 0
  %393 = extractvalue { i64, i64 } %391, 1
  %394 = load %"class.blink::mojom::blink::ScrollIntoViewParams"*, %"class.blink::mojom::blink::ScrollIntoViewParams"** %388, align 8
  store %"class.blink::mojom::blink::ScrollIntoViewParams"* null, %"class.blink::mojom::blink::ScrollIntoViewParams"** %388, align 8
  %395 = icmp eq %"class.blink::mojom::blink::ScrollIntoViewParams"* %394, null
  br i1 %395, label %509, label %396

396:                                              ; preds = %386
  call void @_ZN5blink5mojom5blink20ScrollIntoViewParamsD1Ev(%"class.blink::mojom::blink::ScrollIntoViewParams"* nonnull %394) #20
  %397 = bitcast %"class.blink::mojom::blink::ScrollIntoViewParams"* %394 to i8*
  call void @_ZdlPv(i8* %397) #22
  br label %509

398:                                              ; preds = %384
  %399 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %400 = icmp eq %"class.blink::Node"* %399, null
  br i1 %400, label %401, label %408

401:                                              ; preds = %398, %401
  %402 = phi %"class.blink::LayoutObject"* [ %404, %401 ], [ %8, %398 ]
  %403 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %402, i64 0, i32 7
  %404 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %403, align 8
  %405 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %404, i64 0, i32 6, i32 0, i32 0
  %406 = load %"class.blink::Node"*, %"class.blink::Node"** %405, align 8
  %407 = icmp eq %"class.blink::Node"* %406, null
  br i1 %407, label %401, label %408

408:                                              ; preds = %401, %398
  %409 = phi %"class.blink::Node"* [ %399, %398 ], [ %406, %401 ]
  %410 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %409, i64 0, i32 3, i32 0, i32 0
  %411 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %410, align 8
  %412 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %411, i64 0, i32 2, i32 0, i32 0
  %413 = load %"class.blink::Document"*, %"class.blink::Document"** %412, align 8
  %414 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %413) #20
  %415 = call zeroext i1 @_ZNK5blink10LocalFrame11IsLocalRootEv(%"class.blink::LocalFrame"* %414) #20
  br i1 %415, label %416, label %503

416:                                              ; preds = %408
  %417 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %418 = icmp eq %"class.blink::Node"* %417, null
  br i1 %418, label %419, label %426

419:                                              ; preds = %416, %419
  %420 = phi %"class.blink::LayoutObject"* [ %422, %419 ], [ %8, %416 ]
  %421 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %420, i64 0, i32 7
  %422 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %421, align 8
  %423 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %422, i64 0, i32 6, i32 0, i32 0
  %424 = load %"class.blink::Node"*, %"class.blink::Node"** %423, align 8
  %425 = icmp eq %"class.blink::Node"* %424, null
  br i1 %425, label %419, label %426

426:                                              ; preds = %419, %416
  %427 = phi %"class.blink::Node"* [ %417, %416 ], [ %424, %419 ]
  %428 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %427, i64 0, i32 3, i32 0, i32 0
  %429 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %428, align 8
  %430 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %429, i64 0, i32 2, i32 0, i32 0
  %431 = load %"class.blink::Document"*, %"class.blink::Document"** %430, align 8
  %432 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %431) #20
  %433 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %432, i64 0, i32 0
  %434 = call zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"* %433) #20
  br i1 %434, label %503, label %435

435:                                              ; preds = %426
  %436 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %437 = icmp eq %"class.blink::Node"* %436, null
  br i1 %437, label %438, label %445

438:                                              ; preds = %435, %438
  %439 = phi %"class.blink::LayoutObject"* [ %441, %438 ], [ %8, %435 ]
  %440 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %439, i64 0, i32 7
  %441 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %440, align 8
  %442 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %441, i64 0, i32 6, i32 0, i32 0
  %443 = load %"class.blink::Node"*, %"class.blink::Node"** %442, align 8
  %444 = icmp eq %"class.blink::Node"* %443, null
  br i1 %444, label %438, label %445

445:                                              ; preds = %438, %435
  %446 = phi %"class.blink::Node"* [ %436, %435 ], [ %443, %438 ]
  %447 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %446, i64 0, i32 3, i32 0, i32 0
  %448 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %447, align 8
  %449 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %448, i64 0, i32 2, i32 0, i32 0
  %450 = load %"class.blink::Document"*, %"class.blink::Document"** %449, align 8
  %451 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %450) #20
  %452 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %451, i64 0, i32 18
  %453 = load i8, i8* %452, align 8, !range !4
  %454 = icmp eq i8 %453, 0
  br i1 %454, label %503, label %455

455:                                              ; preds = %445
  %456 = load %"class.blink::mojom::blink::ScrollIntoViewParams"*, %"class.blink::mojom::blink::ScrollIntoViewParams"** %34, align 8
  %457 = getelementptr inbounds %"class.blink::mojom::blink::ScrollIntoViewParams", %"class.blink::mojom::blink::ScrollIntoViewParams"* %456, i64 0, i32 2
  %458 = load i32, i32* %457, align 4
  %459 = icmp eq i32 %458, 1
  %460 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  br i1 %459, label %461, label %479

461:                                              ; preds = %455
  %462 = icmp eq %"class.blink::Node"* %460, null
  br i1 %462, label %463, label %470

463:                                              ; preds = %461, %463
  %464 = phi %"class.blink::LayoutObject"* [ %466, %463 ], [ %8, %461 ]
  %465 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %464, i64 0, i32 7
  %466 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %465, align 8
  %467 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %466, i64 0, i32 6, i32 0, i32 0
  %468 = load %"class.blink::Node"*, %"class.blink::Node"** %467, align 8
  %469 = icmp eq %"class.blink::Node"* %468, null
  br i1 %469, label %463, label %470

470:                                              ; preds = %463, %461
  %471 = phi %"class.blink::Node"* [ %460, %461 ], [ %468, %463 ]
  %472 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %471, i64 0, i32 3, i32 0, i32 0
  %473 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %472, align 8
  %474 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %473, i64 0, i32 2, i32 0, i32 0
  %475 = load %"class.blink::Document"*, %"class.blink::Document"** %474, align 8
  %476 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %475, i64 0, i32 154
  %477 = load i8, i8* %476, align 8, !range !4
  %478 = icmp eq i8 %477, 0
  br i1 %478, label %479, label %503

479:                                              ; preds = %455, %470
  %480 = icmp eq %"class.blink::Node"* %460, null
  br i1 %480, label %481, label %488

481:                                              ; preds = %479, %481
  %482 = phi %"class.blink::LayoutObject"* [ %484, %481 ], [ %8, %479 ]
  %483 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %482, i64 0, i32 7
  %484 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %483, align 8
  %485 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %484, i64 0, i32 6, i32 0, i32 0
  %486 = load %"class.blink::Node"*, %"class.blink::Node"** %485, align 8
  %487 = icmp eq %"class.blink::Node"* %486, null
  br i1 %487, label %481, label %488

488:                                              ; preds = %481, %479
  %489 = phi %"class.blink::Node"* [ %460, %479 ], [ %486, %481 ]
  %490 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %489, i64 0, i32 3, i32 0, i32 0
  %491 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %490, align 8
  %492 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %491, i64 0, i32 2, i32 0, i32 0
  %493 = load %"class.blink::Document"*, %"class.blink::Document"** %492, align 8
  %494 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %493) #20
  %495 = bitcast %"class.mojo::StructPtr.4211"* %7 to i64*
  %496 = getelementptr inbounds %"class.mojo::StructPtr.4211", %"class.mojo::StructPtr.4211"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %497 = bitcast %"class.mojo::StructPtr.4211"* %2 to i64*
  %498 = load i64, i64* %497, align 8
  store i64 %498, i64* %495, align 8
  store i64 0, i64* %497, align 8
  call void @_ZN5blink14LocalFrameView33ScrollRectToVisibleInRemoteParentERKNS_12PhysicalRectEN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::LocalFrameView"* %494, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5, %"class.mojo::StructPtr.4211"* nonnull %7) #20
  %499 = load %"class.blink::mojom::blink::ScrollIntoViewParams"*, %"class.blink::mojom::blink::ScrollIntoViewParams"** %496, align 8
  store %"class.blink::mojom::blink::ScrollIntoViewParams"* null, %"class.blink::mojom::blink::ScrollIntoViewParams"** %496, align 8
  %500 = icmp eq %"class.blink::mojom::blink::ScrollIntoViewParams"* %499, null
  br i1 %500, label %503, label %501

501:                                              ; preds = %488
  call void @_ZN5blink5mojom5blink20ScrollIntoViewParamsD1Ev(%"class.blink::mojom::blink::ScrollIntoViewParams"* nonnull %499) #20
  %502 = bitcast %"class.blink::mojom::blink::ScrollIntoViewParams"* %499 to i8*
  call void @_ZdlPv(i8* %502) #22
  br label %503

503:                                              ; preds = %445, %501, %488, %408, %426, %470
  %504 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  %505 = load i64, i64* %504, align 8
  %506 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1
  %507 = bitcast %"struct.blink::PhysicalSize"* %506 to i64*
  %508 = load i64, i64* %507, align 8
  br label %509

509:                                              ; preds = %396, %386, %503, %378, %361
  %510 = phi i64 [ %376, %361 ], [ %380, %378 ], [ %505, %503 ], [ %392, %386 ], [ %392, %396 ]
  %511 = phi i64 [ %377, %361 ], [ %383, %378 ], [ %508, %503 ], [ %393, %386 ], [ %393, %396 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #20
  br label %512

512:                                              ; preds = %509, %45, %27
  %513 = phi i64 [ %47, %45 ], [ %510, %509 ], [ %29, %27 ]
  %514 = phi i64 [ %50, %45 ], [ %511, %509 ], [ %32, %27 ]
  %515 = insertvalue { i64, i64 } undef, i64 %513, 0
  %516 = insertvalue { i64, i64 } %515, i64 %514, 1
  ret { i64, i64 } %516
}

declare { i64, i64 } @_ZN5blink24PaintLayerScrollableArea14ScrollIntoViewERKNS_12PhysicalRectERKN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::PaintLayerScrollableArea"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.mojo::StructPtr.4211"* dereferenceable(8)) unnamed_addr #5

declare %"class.blink::ScrollableArea"* @_ZN5blink14LocalFrameView17GetScrollableAreaEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #5

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #5

declare %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9LayoutBox46AllowedToPropagateRecursiveScrollToParentFrameERKN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::LayoutBox"* nocapture readonly, %"class.mojo::StructPtr.4211"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %2, %7
  %8 = phi %"class.blink::LayoutObject"* [ %10, %7 ], [ %3, %2 ]
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %2
  %15 = phi %"class.blink::Node"* [ %5, %2 ], [ %12, %7 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %19) #20
  %21 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %20, i64 0, i32 18
  %22 = load i8, i8* %21, align 8, !range !4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %49, label %24

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.mojo::StructPtr.4211", %"class.mojo::StructPtr.4211"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::mojom::blink::ScrollIntoViewParams"*, %"class.blink::mojom::blink::ScrollIntoViewParams"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::mojom::blink::ScrollIntoViewParams", %"class.blink::mojom::blink::ScrollIntoViewParams"* %26, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %49

30:                                               ; preds = %24
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %33, label %40

33:                                               ; preds = %30, %33
  %34 = phi %"class.blink::LayoutObject"* [ %36, %33 ], [ %3, %30 ]
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 7
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %33, label %40

40:                                               ; preds = %33, %30
  %41 = phi %"class.blink::Node"* [ %31, %30 ], [ %38, %33 ]
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::Document"*, %"class.blink::Document"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %45, i64 0, i32 154
  %47 = load i8, i8* %46, align 8, !range !4
  %48 = icmp eq i8 %47, 0
  br label %49

49:                                               ; preds = %14, %24, %40
  %50 = phi i1 [ %48, %40 ], [ false, %14 ], [ true, %24 ]
  ret i1 %50
}

declare %"class.blink::LayoutBox"* @_ZNK5blink12LayoutObject12EnclosingBoxEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

declare { i64, i64 } @_ZNK5blink12LayoutObject19LocalToAncestorRectERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #5

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"*) local_unnamed_addr #5

declare dereferenceable(256) %"class.blink::VisualViewport"* @_ZN5blink4Page17GetVisualViewportEv(%"class.blink::Page"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink10LocalFrame11IsLocalRootEv(%"class.blink::LocalFrame"*) local_unnamed_addr #5

declare void @_ZN5blink14LocalFrameView33ScrollRectToVisibleInRemoteParentERKNS_12PhysicalRectEN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::LocalFrameView"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.mojo::StructPtr.4211"*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox9SetMarginERKNS_18NGPhysicalBoxStrutE(%"class.blink::LayoutBox"* nocapture, %"struct.blink::NGPhysicalBoxStrut"* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGPhysicalBoxStrut"* %1, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 %4, i32* %5, align 4
  %6 = getelementptr inbounds %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGPhysicalBoxStrut"* %1, i64 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGPhysicalBoxStrut"* %1, i64 0, i32 2, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  store i32 %10, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.blink::NGPhysicalBoxStrut", %"struct.blink::NGPhysicalBoxStrut"* %1, i64 0, i32 3, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  store i32 %13, i32* %14, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBox"*, %"class.WTF::Vector.4223"* dereferenceable(16), i32) unnamed_addr #9 align 2 {
  %4 = alloca %"class.blink::FloatQuad", align 8
  %5 = alloca %"class.blink::FloatQuad", align 4
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 1099511627776
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %6) #20
  %14 = icmp eq %"class.blink::LayoutFlowThread"* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  tail call void @_ZN5blink16LayoutFlowThread26AbsoluteQuadsForDescendantERKNS_9LayoutBoxERN3WTF6VectorINS_9FloatQuadELj0ENS4_18PartitionAllocatorEEEj(%"class.blink::LayoutFlowThread"* nonnull %13, %"class.blink::LayoutBox"* dereferenceable(216) %0, %"class.WTF::Vector.4223"* dereferenceable(16) %1, i32 %2) #20
  br label %53

16:                                               ; preds = %3, %12
  %17 = bitcast %"class.blink::FloatQuad"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #20
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %19 = bitcast %"class.blink::LayoutSize"* %18 to i64*
  %20 = load i64, i64* %19, align 4
  %21 = bitcast %"class.blink::FloatQuad"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #20, !noalias !14
  %22 = trunc i64 %20 to i32
  %23 = sitofp i32 %22 to float
  %24 = fmul float %23, 1.562500e-02
  %25 = lshr i64 %20, 32
  %26 = trunc i64 %25 to i32
  %27 = sitofp i32 %26 to float
  %28 = fmul float %27, 1.562500e-02
  %29 = bitcast %"class.blink::FloatQuad"* %4 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %29, align 8, !noalias !14
  %30 = fadd float %24, 0.000000e+00
  %31 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 1, i32 0
  store float %30, float* %31, align 8, !noalias !14
  %32 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %32, align 4, !noalias !14
  %33 = fadd float %28, 0.000000e+00
  %34 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 2, i32 0
  store float %30, float* %34, align 8, !noalias !14
  %35 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 2, i32 1
  store float %33, float* %35, align 4, !noalias !14
  %36 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 3, i32 0
  store float 0.000000e+00, float* %36, align 8, !noalias !14
  %37 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 3, i32 1
  store float %33, float* %37, align 4, !noalias !14
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* nonnull sret %5, %"class.blink::LayoutObject"* %6, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %4, %"class.blink::LayoutBoxModelObject"* null, i32 %2) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #20, !noalias !14
  %38 = getelementptr inbounds %"class.WTF::Vector.4223", %"class.WTF::Vector.4223"* %1, i64 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::Vector.4223", %"class.WTF::Vector.4223"* %1, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %51, label %43, !prof !2

43:                                               ; preds = %16
  %44 = getelementptr inbounds %"class.WTF::Vector.4223", %"class.WTF::Vector.4223"* %1, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %44, align 8
  %46 = zext i32 %39 to i64
  %47 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %45, i64 %46
  %48 = bitcast %"class.blink::FloatQuad"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* nonnull align 4 %17, i64 32, i1 false) #20
  %49 = load i32, i32* %38, align 4
  %50 = add i32 %49, 1
  store i32 %50, i32* %38, align 4
  br label %52

51:                                               ; preds = %16
  call void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.4223"* %1, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %5) #20
  br label %52

52:                                               ; preds = %43, %51
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #20
  br label %53

53:                                               ; preds = %15, %52
  ret void
}

declare void @_ZN5blink16LayoutFlowThread26AbsoluteQuadsForDescendantERKNS_9LayoutBoxERN3WTF6VectorINS_9FloatQuadELj0ENS4_18PartitionAllocatorEEEj(%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.WTF::Vector.4223"* dereferenceable(16), i32) local_unnamed_addr #5

; Function Attrs: nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutBox"* nocapture readonly) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = sitofp i32 %3 to float
  %5 = fmul float %4, 1.562500e-02
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = sitofp i32 %7 to float
  %9 = fmul float %8, 1.562500e-02
  %10 = insertelement <2 x float> undef, float %5, i32 0
  %11 = insertelement <2 x float> %10, float %9, i32 1
  %12 = insertvalue { <2 x float>, <2 x float> } { <2 x float> zeroinitializer, <2 x float> undef }, <2 x float> %11, 1
  ret { <2 x float>, <2 x float> } %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox17UpdateAfterLayoutEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 4294967296
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %9, align 8
  %11 = icmp eq %"struct.blink::FragmentData::RareData"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %13, align 8
  br label %15

15:                                               ; preds = %8, %12
  %16 = phi %"class.blink::PaintLayer"* [ %14, %12 ], [ null, %8 ]
  tail call void @_ZN5blink10PaintLayer26UpdateTransformationMatrixEv(%"class.blink::PaintLayer"* %16) #20
  %17 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %9, align 8
  %18 = icmp eq %"struct.blink::FragmentData::RareData"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %20, align 8
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi %"class.blink::PaintLayer"* [ %21, %19 ], [ null, %15 ]
  tail call void @_ZN5blink10PaintLayer33UpdateSizeAndScrollingAfterLayoutEv(%"class.blink::PaintLayer"* %23) #20
  %24 = load i96, i96* %4, align 4
  br label %25

25:                                               ; preds = %1, %22
  %26 = phi i96 [ %5, %1 ], [ %24, %22 ]
  %27 = and i96 %26, 113336795588871485128704
  %28 = icmp eq i96 %27, 75557863725914323419136
  br i1 %28, label %29, label %36

29:                                               ; preds = %25
  %30 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %31 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %31, i64 28
  %33 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::LayoutObject"* %2) #20
  br i1 %34, label %36, label %35

35:                                               ; preds = %29
  tail call void @_ZN5blink9LayoutBox18ClearLayoutResultsEv(%"class.blink::LayoutBox"* %0)
  br label %36

36:                                               ; preds = %35, %29, %25
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %40, label %47

40:                                               ; preds = %36, %40
  %41 = phi %"class.blink::LayoutObject"* [ %43, %40 ], [ %2, %36 ]
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %41, i64 0, i32 7
  %43 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %43, i64 0, i32 6, i32 0, i32 0
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %46 = icmp eq %"class.blink::Node"* %45, null
  br i1 %46, label %40, label %47

47:                                               ; preds = %40, %36
  %48 = phi %"class.blink::Node"* [ %38, %36 ], [ %45, %40 ]
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %48, i64 0, i32 3, i32 0, i32 0
  %50 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %50, i64 0, i32 2, i32 0, i32 0
  %52 = load %"class.blink::Document"*, %"class.blink::Document"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %52, i64 0, i32 156
  %54 = load i32, i32* %53, align 8
  %55 = add i32 %54, 1
  store i32 %55, i32* %53, align 8
  %56 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %52) #20
  %57 = tail call dereferenceable(184) %"class.blink::InputMethodController"* @_ZNK5blink10LocalFrame24GetInputMethodControllerEv(%"class.blink::LocalFrame"* %56) #20
  tail call void @_ZN5blink21InputMethodController15DidUpdateLayoutERKNS_12LayoutObjectE(%"class.blink::InputMethodController"* %57, %"class.blink::LayoutObject"* dereferenceable(88) %2) #20
  %58 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %59 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %58, align 8
  %60 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %59, i64 28
  %61 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.blink::LayoutObject"* %2) #20
  br i1 %62, label %63, label %67

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %52, i64 0, i32 157
  %65 = load i32, i32* %64, align 4
  %66 = add i32 %65, 1
  store i32 %66, i32* %64, align 4
  br label %67

67:                                               ; preds = %63, %47
  ret void
}

declare void @_ZN5blink10PaintLayer26UpdateTransformationMatrixEv(%"class.blink::PaintLayer"*) local_unnamed_addr #5

declare void @_ZN5blink10PaintLayer33UpdateSizeAndScrollingAfterLayoutEv(%"class.blink::PaintLayer"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox18ClearLayoutResultsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.blink::ObjectPaintInvalidator", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %3, i64 0, i32 0
  %5 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %4, align 8
  %6 = icmp eq %"class.blink::NGLayoutResult"* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr.3247* %3 to i64*
  store i64 0, i64* %8, align 8
  br label %35

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %5, i64 0, i32 3, i32 0
  %11 = bitcast %"class.blink::NGPhysicalFragment"** %10 to %"class.blink::NGPhysicalBoxFragment"**
  %12 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %12, i64 0, i32 1
  %14 = bitcast i24* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %9
  %19 = bitcast %class.scoped_refptr.3247* %3 to i64*
  store i64 0, i64* %19, align 8
  br label %27

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %22 = bitcast %"class.blink::ObjectPaintInvalidator"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #20
  %23 = getelementptr inbounds %"class.blink::ObjectPaintInvalidator", %"class.blink::ObjectPaintInvalidator"* %2, i64 0, i32 0
  store %"class.blink::LayoutObject"* %21, %"class.blink::LayoutObject"** %23, align 8
  call void @_ZN5blink22ObjectPaintInvalidator32SlowSetPaintingLayerNeedsRepaintEv(%"class.blink::ObjectPaintInvalidator"* nonnull %2) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #20
  %24 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %4, align 8
  %25 = bitcast %class.scoped_refptr.3247* %3 to i64*
  store i64 0, i64* %25, align 8
  %26 = icmp eq %"class.blink::NGLayoutResult"* %24, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %18, %20
  %28 = phi %"class.blink::NGLayoutResult"* [ %5, %18 ], [ %24, %20 ]
  %29 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %28, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #20
  %30 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %28, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %28) #20
  %34 = bitcast %"class.blink::NGLayoutResult"* %28 to i8*
  call void @free(i8* %34) #20
  br label %35

35:                                               ; preds = %7, %20, %27, %33
  call void @_ZN5blink9LayoutBox19ShrinkLayoutResultsEj(%"class.blink::LayoutBox"* %0, i32 0)
  ret void
}

declare void @_ZN5blink21InputMethodController15DidUpdateLayoutERKNS_12LayoutObjectE(%"class.blink::InputMethodController"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %10, i64 0, i32 45
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 24
  %14 = icmp eq i32 %13, 24
  br i1 %14, label %15, label %70

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = and i96 %18, 1207959552
  %20 = icmp eq i96 %19, 134217728
  br i1 %20, label %70, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, i64 92
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* %2, i32 43) #20
  br i1 %26, label %70, label %27

27:                                               ; preds = %21
  %28 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %28, i64 92
  %30 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::LayoutObject"* %2, i32 46) #20
  br i1 %31, label %52, label %32

32:                                               ; preds = %27
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, i64 92
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* %2, i32 48) #20
  br i1 %36, label %52, label %37

37:                                               ; preds = %32
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, i64 92
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutObject"* %2, i32 45) #20
  br i1 %41, label %52, label %42

42:                                               ; preds = %37
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, i64 92
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* %2, i32 49) #20
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, i64 92
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::LayoutObject"* %2, i32 50) #20
  br i1 %51, label %52, label %57

52:                                               ; preds = %47, %42, %37, %32, %27
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %54 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, i64 92
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.blink::LayoutObject"* %2, i32 45) #20
  br i1 %56, label %57, label %70

57:                                               ; preds = %47, %52
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, i64 92
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::LayoutObject"* %2, i32 44) #20
  br i1 %61, label %70, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.blink::ComputedStyle"** %3 to %"class.blink::ComputedStyleBase"**
  %64 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %64, i64 0, i32 5, i32 0, i32 0
  %66 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %66, i64 0, i32 2, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp ne i8 %68, 0
  br label %70

70:                                               ; preds = %57, %15, %21, %52, %1, %62
  %71 = phi i1 [ %69, %62 ], [ false, %57 ], [ false, %1 ], [ false, %52 ], [ false, %21 ], [ false, %15 ]
  ret i1 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %10, i64 0, i32 45
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 24
  %14 = icmp eq i32 %13, 24
  br i1 %14, label %15, label %70

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = and i96 %18, 1207959552
  %20 = icmp eq i96 %19, 134217728
  br i1 %20, label %70, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, i64 92
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* %2, i32 43) #20
  br i1 %26, label %70, label %27

27:                                               ; preds = %21
  %28 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %28, i64 92
  %30 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::LayoutObject"* %2, i32 46) #20
  br i1 %31, label %52, label %32

32:                                               ; preds = %27
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, i64 92
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* %2, i32 48) #20
  br i1 %36, label %52, label %37

37:                                               ; preds = %32
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, i64 92
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutObject"* %2, i32 45) #20
  br i1 %41, label %52, label %42

42:                                               ; preds = %37
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, i64 92
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* %2, i32 49) #20
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, i64 92
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::LayoutObject"* %2, i32 50) #20
  br i1 %51, label %52, label %57

52:                                               ; preds = %47, %42, %37, %32, %27
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %54 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, i64 92
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.blink::LayoutObject"* %2, i32 45) #20
  br i1 %56, label %57, label %70

57:                                               ; preds = %47, %52
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, i64 92
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::LayoutObject"* %2, i32 44) #20
  br i1 %61, label %70, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.blink::ComputedStyle"** %3 to %"class.blink::ComputedStyleBase"**
  %64 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %64, i64 0, i32 5, i32 0, i32 0
  %66 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %66, i64 0, i32 2, i32 1, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp ne i8 %68, 0
  br label %70

70:                                               ; preds = %57, %15, %21, %52, %1, %62
  %71 = phi i1 [ %69, %62 ], [ false, %57 ], [ false, %1 ], [ false, %52 ], [ false, %21 ], [ false, %15 ]
  ret i1 %71
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 5, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %6, i64 0, i32 2, i32 0
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %6, i64 0, i32 2, i32 0, i32 3
  %9 = load i8, i8* %8, align 2, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::Length"* %7 to float*
  %13 = load float, float* %12, align 4
  br label %18

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  br label %18

18:                                               ; preds = %11, %14
  %19 = phi float [ %13, %11 ], [ %17, %14 ]
  %20 = fmul float %19, 6.400000e+01
  %21 = fcmp ult float %20, 0xC1E0000000000000
  %22 = fcmp ugt float %20, 0x41DFFFFFE0000000
  %23 = fcmp ogt float %20, 0xC1E0000000000000
  %24 = select i1 %23, float %20, float 0xC1E0000000000000
  %25 = fptosi float %24 to i32
  %26 = select i1 %21, i32 0, i32 2147483647
  %27 = select i1 %22, i32 %26, i32 %25
  ret i32 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 5, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %6, i64 0, i32 2, i32 1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %6, i64 0, i32 2, i32 1, i32 3
  %9 = load i8, i8* %8, align 2, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::Length"* %7 to float*
  %13 = load float, float* %12, align 4
  br label %18

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sitofp i32 %16 to float
  br label %18

18:                                               ; preds = %11, %14
  %19 = phi float [ %13, %11 ], [ %17, %14 ]
  %20 = fmul float %19, 6.400000e+01
  %21 = fcmp ult float %20, 0xC1E0000000000000
  %22 = fcmp ugt float %20, 0x41DFFFFFE0000000
  %23 = fcmp ogt float %20, 0xC1E0000000000000
  %24 = select i1 %23, float %20, float 0xC1E0000000000000
  %25 = fptosi float %24 to i32
  %26 = select i1 %21, i32 0, i32 2147483647
  %27 = select i1 %22, i32 %26, i32 %25
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox33DefaultIntrinsicContentInlineSizeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.blink::OptionListIterator", align 8
  %4 = alloca %"class.blink::OptionListIterator", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::TextRun", align 8
  %7 = alloca i16, align 2
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::TextRun", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::TextRun", align 8
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = and i96 %15, 16777216
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %18, label %624

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = icmp eq %"class.blink::Node"* %20, null
  %22 = bitcast %"class.blink::Node"* %20 to %"class.blink::Element"*
  br i1 %21, label %624, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 12
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %624

28:                                               ; preds = %23
  %29 = and i32 %25, 48
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %603

31:                                               ; preds = %28
  %32 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 1, i32 2
  %36 = bitcast %"class.blink::Member.318"* %35 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %37 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %37, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %34, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %39, %41
  br i1 %42, label %43, label %290

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 5, i32 0, i32 0, i32 1
  %45 = bitcast %"class.blink::TraceWrapperV8Reference"* %44 to i8*
  %46 = load i8, i8* %45, align 8, !range !4
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %290, label %48, !prof !3

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 3, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %52, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %54, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %56, i64 0, i32 45
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, 24
  %60 = icmp ne i32 %59, 24
  %61 = and i96 %15, 1207959552
  %62 = icmp eq i96 %61, 134217728
  %63 = or i1 %60, %62
  br i1 %63, label %105, label %64

64:                                               ; preds = %48
  %65 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %66 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %65, align 8
  %67 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, i64 92
  %68 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %67, align 8
  %69 = tail call zeroext i1 %68(%"class.blink::LayoutObject"* %12, i32 43) #20
  br i1 %69, label %105, label %70

70:                                               ; preds = %64
  %71 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %65, align 8
  %72 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %71, i64 92
  %73 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %72, align 8
  %74 = tail call zeroext i1 %73(%"class.blink::LayoutObject"* %12, i32 46) #20
  br i1 %74, label %95, label %75

75:                                               ; preds = %70
  %76 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %65, align 8
  %77 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %76, i64 92
  %78 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %77, align 8
  %79 = tail call zeroext i1 %78(%"class.blink::LayoutObject"* %12, i32 48) #20
  br i1 %79, label %95, label %80

80:                                               ; preds = %75
  %81 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %65, align 8
  %82 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %81, i64 92
  %83 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %82, align 8
  %84 = tail call zeroext i1 %83(%"class.blink::LayoutObject"* %12, i32 45) #20
  br i1 %84, label %95, label %85

85:                                               ; preds = %80
  %86 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %65, align 8
  %87 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %86, i64 92
  %88 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %87, align 8
  %89 = tail call zeroext i1 %88(%"class.blink::LayoutObject"* %12, i32 49) #20
  br i1 %89, label %95, label %90

90:                                               ; preds = %85
  %91 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %65, align 8
  %92 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %91, i64 92
  %93 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %92, align 8
  %94 = tail call zeroext i1 %93(%"class.blink::LayoutObject"* %12, i32 50) #20
  br i1 %94, label %95, label %100

95:                                               ; preds = %90, %85, %80, %75, %70
  %96 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %65, align 8
  %97 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %96, i64 92
  %98 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %97, align 8
  %99 = tail call zeroext i1 %98(%"class.blink::LayoutObject"* %12, i32 45) #20
  br i1 %99, label %100, label %105

100:                                              ; preds = %95, %90
  %101 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %65, align 8
  %102 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %101, i64 92
  %103 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %102, align 8
  %104 = tail call zeroext i1 %103(%"class.blink::LayoutObject"* %12, i32 44) #20
  br i1 %104, label %105, label %236

105:                                              ; preds = %48, %64, %95, %100
  %106 = bitcast %"class.blink::OptionListIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #20
  %107 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %4, i64 0, i32 1
  %108 = bitcast %"class.blink::OptionListIterator"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 16, i1 false) #20
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #20
  %109 = bitcast %"class.blink::OptionListIterator"* %3 to %"class.blink::Node"**
  store %"class.blink::Node"* %20, %"class.blink::Node"** %109, align 8
  %110 = getelementptr inbounds %"class.blink::OptionListIterator", %"class.blink::OptionListIterator"* %3, i64 0, i32 1
  store %"class.blink::HTMLOptionElement"* null, %"class.blink::HTMLOptionElement"** %110, align 8
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %3, %"class.blink::HTMLOptionElement"* null) #20
  %111 = bitcast %"class.blink::OptionListIterator"* %3 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #20
  %114 = bitcast %"class.blink::OptionListIterator"* %4 to i64*
  store i64 %112, i64* %114, align 8
  store %"class.blink::HTMLOptionElement"* %113, %"class.blink::HTMLOptionElement"** %107, align 8
  %115 = icmp eq %"class.blink::HTMLOptionElement"* %113, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %105
  %117 = bitcast %"class.WTF::String"* %5 to i8*
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %119 = bitcast %"class.blink::TextRun"* %6 to i8*
  %120 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 3
  %121 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 4
  %122 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 5
  %123 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 6, i64 0
  %124 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 6, i64 1
  %125 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 7, i32 0
  %126 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %6, i64 0, i32 7, i32 1
  %127 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %128 = bitcast i8* %126 to i64*
  br label %131

129:                                              ; preds = %233, %230, %105
  %130 = phi float [ 0.000000e+00, %105 ], [ %214, %230 ], [ %214, %233 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #20
  br label %236

131:                                              ; preds = %233, %116
  %132 = phi float [ 0.000000e+00, %116 ], [ %214, %233 ]
  %133 = phi %"class.blink::HTMLOptionElement"* [ %113, %116 ], [ %234, %233 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #20
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %118, align 8
  %134 = call %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement31TextIndentedToRespectGroupLabelEv(%"class.blink::HTMLOptionElement"* nonnull %133) #20
  store %"class.WTF::StringImpl"* %134, %"class.WTF::StringImpl"** %118, align 8
  %135 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = and i32 %136, 12
  %138 = icmp eq i32 %137, 0
  %139 = and i32 %136, 1
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.blink::HTMLOptionElement", %"class.blink::HTMLOptionElement"* %133, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %138, label %142, label %153

142:                                              ; preds = %131
  br i1 %140, label %149, label %143

143:                                              ; preds = %142
  %144 = bitcast %"class.blink::NodeData"** %141 to %"class.blink::NodeRareData"**
  %145 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %145, i64 0, i32 1, i32 0, i32 0
  %147 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %147, i64 0, i32 2, i32 0
  br label %168

149:                                              ; preds = %142
  %150 = bitcast %"class.blink::NodeData"** %141 to %"class.blink::NodeRenderingData"**
  %151 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %150, align 8
  %152 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %151, i64 0, i32 2, i32 0
  br label %168

153:                                              ; preds = %131
  br i1 %140, label %158, label %154

154:                                              ; preds = %153
  %155 = bitcast %"class.blink::NodeData"** %141 to %"class.blink::NodeRareData"**
  %156 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %156, i64 0, i32 1, i32 0, i32 0
  br label %160

158:                                              ; preds = %153
  %159 = bitcast %"class.blink::NodeData"** %141 to %"class.blink::NodeRenderingData"**
  br label %160

160:                                              ; preds = %158, %154
  %161 = phi %"class.blink::NodeRenderingData"** [ %157, %154 ], [ %159, %158 ]
  %162 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %162, i64 0, i32 1
  %164 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %163, align 8
  %165 = icmp eq %"class.blink::LayoutObject"* %164, null
  br i1 %165, label %202, label %166

166:                                              ; preds = %160
  %167 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %164, i64 0, i32 5, i32 0
  br label %168

168:                                              ; preds = %166, %149, %143
  %169 = phi %"class.blink::ComputedStyle"** [ %167, %166 ], [ %148, %143 ], [ %152, %149 ]
  %170 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %169, align 8
  %171 = icmp eq %"class.blink::ComputedStyle"* %170, null
  br i1 %171, label %202, label %172

172:                                              ; preds = %168
  br i1 %138, label %173, label %186

173:                                              ; preds = %172
  br i1 %140, label %181, label %174

174:                                              ; preds = %173
  %175 = bitcast %"class.blink::NodeData"** %141 to %"class.blink::NodeRareData"**
  %176 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %176, i64 0, i32 1, i32 0, i32 0
  %178 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %177, align 8
  %179 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %178, i64 0, i32 2, i32 0
  %180 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %179, align 8
  br label %202

181:                                              ; preds = %173
  %182 = bitcast %"class.blink::NodeData"** %141 to %"class.blink::NodeRenderingData"**
  %183 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %182, align 8
  %184 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %183, i64 0, i32 2, i32 0
  %185 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %184, align 8
  br label %202

186:                                              ; preds = %172
  br i1 %140, label %191, label %187

187:                                              ; preds = %186
  %188 = bitcast %"class.blink::NodeData"** %141 to %"class.blink::NodeRareData"**
  %189 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %189, i64 0, i32 1, i32 0, i32 0
  br label %193

191:                                              ; preds = %186
  %192 = bitcast %"class.blink::NodeData"** %141 to %"class.blink::NodeRenderingData"**
  br label %193

193:                                              ; preds = %191, %187
  %194 = phi %"class.blink::NodeRenderingData"** [ %190, %187 ], [ %192, %191 ]
  %195 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %194, align 8
  %196 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %195, i64 0, i32 1
  %197 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %196, align 8
  %198 = icmp eq %"class.blink::LayoutObject"* %197, null
  br i1 %198, label %202, label %199

199:                                              ; preds = %193
  %200 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %197, i64 0, i32 5, i32 0
  %201 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %200, align 8
  br label %202

202:                                              ; preds = %199, %193, %181, %174, %168, %160
  %203 = phi %"class.blink::ComputedStyle"* [ %50, %168 ], [ %201, %199 ], [ null, %193 ], [ %180, %174 ], [ %185, %181 ], [ %50, %160 ]
  call void @_ZNK5blink13ComputedStyle18ApplyTextTransformEPN3WTF6StringEDs(%"class.blink::ComputedStyle"* %203, %"class.WTF::String"* nonnull %5, i16 zeroext 32) #20
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %119) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 16, i1 false) #20
  store float 0xFFFFFFFFE0000000, float* %120, align 8
  store float 0xFFFFFFFFE0000000, float* %121, align 4
  store i16 -21846, i16* %122, align 8
  store i8 -86, i8* %123, align 2
  store i8 -86, i8* %124, align 1
  store float 0xFFFFFFFFE0000000, float* %125, align 4
  store i64 -6148914691236517206, i64* %128, align 4
  %204 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %127, align 8
  %205 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %204, i64 0, i32 1, i32 0, i32 0
  %206 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %205, align 8
  %207 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %206, i64 0, i32 1
  call void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleEj(%"class.blink::TextRun"* nonnull sret %6, %"class.blink::Font"* dereferenceable(88) %207, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::ComputedStyle"* dereferenceable(104) %50, i32 0) #20
  %208 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %127, align 8
  %209 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %208, i64 0, i32 1, i32 0, i32 0
  %210 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %209, align 8
  %211 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %210, i64 0, i32 1
  %212 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %211, %"class.blink::TextRun"* nonnull dereferenceable(40) %6, %"class.WTF::HashSet.4937"* null, %"class.blink::FloatRect"* null) #20
  %213 = fcmp olt float %132, %212
  %214 = select i1 %213, float %212, float %132
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %119) #20
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %230, label %217

217:                                              ; preds = %202
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %217
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %223, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #20
  br label %230

230:                                              ; preds = %229, %226, %202
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #20
  %231 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %107, align 8
  %232 = icmp eq %"class.blink::HTMLOptionElement"* %231, null
  br i1 %232, label %129, label %233

233:                                              ; preds = %230
  call void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"* nonnull %4, %"class.blink::HTMLOptionElement"* nonnull %231) #20
  %234 = load %"class.blink::HTMLOptionElement"*, %"class.blink::HTMLOptionElement"** %107, align 8
  %235 = icmp eq %"class.blink::HTMLOptionElement"* %234, null
  br i1 %235, label %129, label %131

236:                                              ; preds = %129, %100
  %237 = phi float [ 0.000000e+00, %100 ], [ %130, %129 ]
  %238 = call dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() #20
  %239 = bitcast %"class.blink::LayoutTheme"* %238 to i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)***
  %240 = load i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)**, i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)*** %239, align 8
  %241 = getelementptr inbounds i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)*, i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)** %240, i64 19
  %242 = load i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)*, i32 (%"class.blink::LayoutTheme"*, %"class.blink::ComputedStyle"*)** %241, align 8
  %243 = call i32 %242(%"class.blink::LayoutTheme"* %238, %"class.blink::ComputedStyle"* dereferenceable(104) %50) #20
  %244 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %245 = icmp eq %"class.blink::Node"* %244, null
  br i1 %245, label %246, label %253

246:                                              ; preds = %236, %246
  %247 = phi %"class.blink::LayoutObject"* [ %249, %246 ], [ %12, %236 ]
  %248 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %247, i64 0, i32 7
  %249 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %248, align 8
  %250 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %249, i64 0, i32 6, i32 0, i32 0
  %251 = load %"class.blink::Node"*, %"class.blink::Node"** %250, align 8
  %252 = icmp eq %"class.blink::Node"* %251, null
  br i1 %252, label %246, label %253

253:                                              ; preds = %246, %236
  %254 = phi %"class.blink::Node"* [ %244, %236 ], [ %251, %246 ]
  %255 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %254, i64 0, i32 3, i32 0, i32 0
  %256 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %255, align 8
  %257 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %256, i64 0, i32 2, i32 0, i32 0
  %258 = load %"class.blink::Document"*, %"class.blink::Document"** %257, align 8
  %259 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %258) #20
  %260 = bitcast %"class.blink::LayoutTheme"* %238 to i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)***
  %261 = load i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)**, i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)*** %260, align 8
  %262 = getelementptr inbounds i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)*, i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)** %261, i64 20
  %263 = load i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)*, i32 (%"class.blink::LayoutTheme"*, %"class.blink::LocalFrame"*, %"class.blink::ComputedStyle"*)** %262, align 8
  %264 = call i32 %263(%"class.blink::LayoutTheme"* %238, %"class.blink::LocalFrame"* %259, %"class.blink::ComputedStyle"* dereferenceable(104) %50) #20
  %265 = add nsw i32 %264, %243
  %266 = call float @llvm.ceil.f32(float %237) #20
  %267 = fmul float %266, 6.400000e+01
  %268 = fcmp ult float %267, 0xC1E0000000000000
  %269 = fcmp ugt float %267, 0x41DFFFFFE0000000
  %270 = fcmp ogt float %267, 0xC1E0000000000000
  %271 = select i1 %270, float %267, float 0xC1E0000000000000
  %272 = fptosi float %271 to i32
  %273 = select i1 %268, i32 0, i32 2147483647
  %274 = select i1 %269, i32 %273, i32 %272
  %275 = icmp sgt i32 %265, 33554431
  br i1 %275, label %283, label %276

276:                                              ; preds = %253
  %277 = icmp slt i32 %265, -33554432
  br i1 %277, label %281, label %278

278:                                              ; preds = %276
  %279 = shl i32 %265, 6
  %280 = icmp slt i32 %279, 0
  br i1 %280, label %281, label %283

281:                                              ; preds = %278, %276
  %282 = phi i32 [ %279, %278 ], [ -2147483648, %276 ]
  br label %283

283:                                              ; preds = %253, %278, %281
  %284 = phi i32 [ %282, %281 ], [ %279, %278 ], [ 2147483647, %253 ]
  %285 = phi i32 [ -2147483648, %281 ], [ 2147483647, %278 ], [ 2147483647, %253 ]
  %286 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %274, i32 %284) #20
  %287 = extractvalue { i32, i1 } %286, 1
  %288 = extractvalue { i32, i1 } %286, 0
  %289 = select i1 %287, i32 %285, i32 %288, !prof !2
  br label %624

290:                                              ; preds = %31, %43
  %291 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %292 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %291, i64 0, i32 0, i32 0, i32 0
  %293 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %292, align 8
  %294 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 1, i32 2
  %295 = bitcast %"class.blink::Member.318"* %294 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %296 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %295, align 8
  %297 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %296, i64 0, i32 3, i32 0, i32 0, i32 0
  %298 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %297, align 8
  %299 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %293, i64 0, i32 3, i32 0, i32 0, i32 0
  %300 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %299, align 8
  %301 = icmp eq %"class.WTF::StringImpl"* %298, %300
  %302 = bitcast %"class.blink::Node"* %20 to %"class.blink::HTMLInputElement"*
  br i1 %301, label %303, label %557

303:                                              ; preds = %290
  %304 = tail call zeroext i1 @_ZNK5blink16HTMLInputElement11IsTextFieldEv(%"class.blink::HTMLInputElement"* nonnull %302) #20
  br i1 %304, label %305, label %419

305:                                              ; preds = %303
  %306 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %306) #20
  store i32 -1431655766, i32* %2, align 4
  %307 = call zeroext i1 @_ZNK5blink16HTMLInputElement27SizeShouldIncludeDecorationERi(%"class.blink::HTMLInputElement"* nonnull %302, i32* nonnull dereferenceable(4) %2) #20
  %308 = load i32, i32* %2, align 4
  %309 = icmp slt i32 %308, 1
  br i1 %309, label %310, label %311

310:                                              ; preds = %305
  store i32 20, i32* %2, align 4
  br label %311

311:                                              ; preds = %310, %305
  %312 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %313 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %312, align 8
  %314 = call float @_ZN5blink17LayoutTextControl15GetAvgCharWidthERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %313) #20
  %315 = load i32, i32* %2, align 4
  %316 = sitofp i32 %315 to float
  %317 = fmul float %314, %316
  %318 = fmul float %317, 6.400000e+01
  %319 = call float @llvm.ceil.f32(float %318) #20
  %320 = fcmp ult float %319, 0xC1E0000000000000
  %321 = fcmp ugt float %319, 0x41DFFFFFE0000000
  %322 = fcmp ogt float %319, 0xC1E0000000000000
  %323 = select i1 %322, float %319, float 0xC1E0000000000000
  %324 = fptosi float %323 to i32
  %325 = select i1 %320, i32 0, i32 2147483647
  %326 = select i1 %321, i32 %325, i32 %324
  %327 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %312, align 8
  %328 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %327, i64 0, i32 0, i32 0, i32 0, i32 0
  %329 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %328, align 8
  %330 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %329, i64 0, i32 1, i32 0, i32 0
  %331 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %330, align 8
  %332 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %331, i64 0, i32 1
  %333 = call zeroext i1 @_ZN5blink17LayoutTextControl20HasValidAvgCharWidthERKNS_4FontE(%"class.blink::Font"* dereferenceable(88) %332) #20
  br i1 %333, label %334, label %361

334:                                              ; preds = %311
  %335 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %332) #20
  %336 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %335, i64 0, i32 2
  %337 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %336, align 8
  %338 = icmp eq %"class.blink::SimpleFontData"* %337, null
  br i1 %338, label %339, label %342

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %332, i64 0, i32 0
  %341 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %335, %"class.blink::FontDescription"* dereferenceable(80) %340) #20
  store %"class.blink::SimpleFontData"* %341, %"class.blink::SimpleFontData"** %336, align 8
  br label %342

342:                                              ; preds = %339, %334
  %343 = phi %"class.blink::SimpleFontData"* [ %337, %334 ], [ %341, %339 ]
  %344 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %343, i64 0, i32 2
  %345 = load float, float* %344, align 4
  %346 = call float @llvm.round.f32(float %345) #20
  %347 = fcmp ogt float %346, 0.000000e+00
  br i1 %347, label %348, label %361

348:                                              ; preds = %342
  %349 = fsub float %346, %314
  %350 = sitofp i32 %326 to float
  %351 = fmul float %350, 1.562500e-02
  %352 = fadd float %351, %349
  %353 = fmul float %352, 6.400000e+01
  %354 = fcmp ult float %353, 0xC1E0000000000000
  %355 = fcmp ugt float %353, 0x41DFFFFFE0000000
  %356 = fcmp ogt float %353, 0xC1E0000000000000
  %357 = select i1 %356, float %353, float 0xC1E0000000000000
  %358 = fptosi float %357 to i32
  %359 = select i1 %354, i32 0, i32 2147483647
  %360 = select i1 %355, i32 %359, i32 %358
  br label %361

361:                                              ; preds = %348, %342, %311
  %362 = phi i32 [ %360, %348 ], [ %326, %342 ], [ %326, %311 ]
  br i1 %307, label %363, label %417

363:                                              ; preds = %361
  %364 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"* nonnull %22) #20
  %365 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %364, i64 0, i32 1
  %366 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink20shadow_element_names13kIdSpinButtonE, align 8
  %367 = call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %365, %"class.WTF::AtomicString"* dereferenceable(8) %366) #20
  %368 = icmp eq %"class.blink::Element"* %367, null
  br i1 %368, label %417, label %369

369:                                              ; preds = %363
  %370 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %367, i64 0, i32 0, i32 0
  %371 = call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %370) #20
  %372 = icmp eq %"class.blink::LayoutBox"* %371, null
  br i1 %372, label %417, label %373

373:                                              ; preds = %369
  %374 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %371, i64 0, i32 0
  %375 = call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %374) #20
  %376 = icmp slt i32 %375, 0
  %377 = select i1 %376, i32 -2147483648, i32 2147483647
  %378 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %362, i32 %375) #20
  %379 = extractvalue { i32, i1 } %378, 1
  %380 = extractvalue { i32, i1 } %378, 0
  %381 = select i1 %379, i32 %377, i32 %380, !prof !2
  %382 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %371, i64 0, i32 0, i32 0, i32 5, i32 0
  %383 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %382, align 8
  %384 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %383, i64 0, i32 0, i32 9
  %385 = bitcast [20 x i8]* %384 to i160*
  %386 = load i160, i160* %385, align 8
  %387 = and i160 %386, 15211807202738752817960438464512
  %388 = icmp eq i160 %387, 0
  %389 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %383, i64 0, i32 0, i32 5, i32 0, i32 0
  %390 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %389, align 8
  %391 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %390, i64 0, i32 8
  %392 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %390, i64 0, i32 3
  %393 = select i1 %388, %"class.blink::Length"* %391, %"class.blink::Length"* %392
  %394 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %393, i64 0, i32 3
  %395 = load i8, i8* %394, align 2, !range !4
  %396 = icmp eq i8 %395, 0
  br i1 %396, label %400, label %397

397:                                              ; preds = %373
  %398 = bitcast %"class.blink::Length"* %393 to float*
  %399 = load float, float* %398, align 4
  br label %404

400:                                              ; preds = %373
  %401 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %393, i64 0, i32 0, i32 0
  %402 = load i32, i32* %401, align 4
  %403 = sitofp i32 %402 to float
  br label %404

404:                                              ; preds = %400, %397
  %405 = phi float [ %399, %397 ], [ %403, %400 ]
  %406 = sitofp i32 %381 to float
  %407 = fmul float %406, 1.562500e-02
  %408 = fadd float %407, %405
  %409 = fmul float %408, 6.400000e+01
  %410 = fcmp ult float %409, 0xC1E0000000000000
  %411 = fcmp ugt float %409, 0x41DFFFFFE0000000
  %412 = fcmp ogt float %409, 0xC1E0000000000000
  %413 = select i1 %412, float %409, float 0xC1E0000000000000
  %414 = fptosi float %413 to i32
  %415 = select i1 %410, i32 0, i32 2147483647
  %416 = select i1 %411, i32 %415, i32 %414
  br label %417

417:                                              ; preds = %361, %363, %369, %404
  %418 = phi i32 [ %362, %369 ], [ %416, %404 ], [ %362, %361 ], [ %362, %363 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %306) #20
  br label %624

419:                                              ; preds = %303
  %420 = bitcast %"class.blink::Node"* %20 to %"class.blink::HTMLFormControlElement"*
  %421 = bitcast %"class.blink::Node"* %20 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %422 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %421, align 8
  %423 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %422, i64 171
  %424 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %423, align 8
  %425 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %424(%"class.blink::HTMLFormControlElement"* nonnull %420) #20
  %426 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names5kFileE, align 8
  %427 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %425, i64 0, i32 0, i32 0, i32 0
  %428 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %427, align 8
  %429 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %426, i64 0, i32 0, i32 0, i32 0
  %430 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %429, align 8
  %431 = icmp eq %"class.WTF::StringImpl"* %428, %430
  br i1 %431, label %432, label %533

432:                                              ; preds = %419
  %433 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %433) #20
  store i16 48, i16* %7, align 2
  %434 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %434) #20
  %435 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %435, align 8
  call void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"* nonnull %8, i16* nonnull %7, i32 1) #20
  %436 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %437 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %436, align 8
  %438 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %437, i64 0, i32 0, i32 0, i32 0, i32 0
  %439 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %438, align 8
  %440 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %439, i64 0, i32 1, i32 0, i32 0
  %441 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %440, align 8
  %442 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %441, i64 0, i32 1
  %443 = bitcast %"class.blink::TextRun"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %443) #20
  call void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleEj(%"class.blink::TextRun"* nonnull sret %9, %"class.blink::Font"* dereferenceable(88) %442, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::ComputedStyle"* dereferenceable(104) %437, i32 1) #20
  %444 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %442, %"class.blink::TextRun"* nonnull dereferenceable(40) %9, %"class.WTF::HashSet.4937"* null, %"class.blink::FloatRect"* null) #20
  %445 = fmul float %444, 3.400000e+01
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %443) #20
  %446 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %446) #20
  %447 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %448 = call dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"* nonnull %22) #20
  %449 = call %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"* %448, i32 24778) #20
  store %"class.WTF::StringImpl"* %449, %"class.WTF::StringImpl"** %447, align 8
  %450 = bitcast %"class.blink::TextRun"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %450) #20
  %451 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %436, align 8
  call void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleEj(%"class.blink::TextRun"* nonnull sret %11, %"class.blink::Font"* dereferenceable(88) %442, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.blink::ComputedStyle"* dereferenceable(104) %451, i32 1) #20
  %452 = call float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"* %442, %"class.blink::TextRun"* nonnull dereferenceable(40) %11, %"class.WTF::HashSet.4937"* null, %"class.blink::FloatRect"* null) #20
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %450) #20
  %453 = call %"class.blink::HTMLInputElement"* @_ZNK5blink16HTMLInputElement12UploadButtonEv(%"class.blink::HTMLInputElement"* nonnull %302) #20
  %454 = icmp eq %"class.blink::HTMLInputElement"* %453, null
  br i1 %454, label %488, label %455

455:                                              ; preds = %432
  %456 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %453, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %457 = load i32, i32* %456, align 8
  %458 = and i32 %457, 1
  %459 = icmp eq i32 %458, 0
  %460 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %453, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %459, label %465, label %461

461:                                              ; preds = %455
  %462 = bitcast %"class.blink::NodeData"** %460 to %"class.blink::NodeRareData"**
  %463 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %462, align 8
  %464 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %463, i64 0, i32 1, i32 0, i32 0
  br label %467

465:                                              ; preds = %455
  %466 = bitcast %"class.blink::NodeData"** %460 to %"class.blink::NodeRenderingData"**
  br label %467

467:                                              ; preds = %465, %461
  %468 = phi %"class.blink::NodeRenderingData"** [ %464, %461 ], [ %466, %465 ]
  %469 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %468, align 8
  %470 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %469, i64 0, i32 1
  %471 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %470, align 8
  %472 = icmp eq %"class.blink::LayoutObject"* %471, null
  br i1 %472, label %488, label %473

473:                                              ; preds = %467
  %474 = bitcast %"class.blink::LayoutObject"* %471 to i64 (%"class.blink::LayoutObject"*)***
  %475 = load i64 (%"class.blink::LayoutObject"*)**, i64 (%"class.blink::LayoutObject"*)*** %474, align 8
  %476 = getelementptr inbounds i64 (%"class.blink::LayoutObject"*)*, i64 (%"class.blink::LayoutObject"*)** %475, i64 69
  %477 = load i64 (%"class.blink::LayoutObject"*)*, i64 (%"class.blink::LayoutObject"*)** %476, align 8
  %478 = call i64 %477(%"class.blink::LayoutObject"* nonnull %471) #20
  %479 = lshr i64 %478, 32
  %480 = trunc i64 %479 to i32
  %481 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %480, i32 256) #20
  %482 = extractvalue { i32, i1 } %481, 1
  %483 = extractvalue { i32, i1 } %481, 0
  %484 = sitofp i32 %483 to float
  %485 = fmul float %484, 1.562500e-02
  %486 = select i1 %482, float 0x4180000000000000, float %485, !prof !2
  %487 = fadd float %452, %486
  br label %488

488:                                              ; preds = %473, %467, %432
  %489 = phi float [ %452, %432 ], [ %452, %467 ], [ %487, %473 ]
  %490 = fcmp olt float %445, %489
  %491 = select i1 %490, float %489, float %445
  %492 = call float @llvm.ceil.f32(float %491) #20
  %493 = fmul float %492, 6.400000e+01
  %494 = fcmp ult float %493, 0xC1E0000000000000
  %495 = fcmp ugt float %493, 0x41DFFFFFE0000000
  %496 = fcmp ogt float %493, 0xC1E0000000000000
  %497 = select i1 %496, float %493, float 0xC1E0000000000000
  %498 = fptosi float %497 to i32
  %499 = select i1 %494, i32 0, i32 2147483647
  %500 = select i1 %495, i32 %499, i32 %498
  %501 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %447, align 8
  %502 = icmp eq %"class.WTF::StringImpl"* %501, null
  br i1 %502, label %516, label %503

503:                                              ; preds = %488
  %504 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load atomic i32, i32* %504 monotonic, align 4
  %506 = and i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 0
  %509 = load i32, i32* %508, align 4
  br i1 %507, label %510, label %512

510:                                              ; preds = %503
  %511 = add i32 %509, -1
  store i32 %511, i32* %508, align 4
  br label %512

512:                                              ; preds = %510, %503
  %513 = phi i32 [ %511, %510 ], [ %509, %503 ]
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %515, label %516

515:                                              ; preds = %512
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %501) #20
  br label %516

516:                                              ; preds = %515, %512, %488
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %446) #20
  %517 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %435, align 8
  %518 = icmp eq %"class.WTF::StringImpl"* %517, null
  br i1 %518, label %532, label %519

519:                                              ; preds = %516
  %520 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %517, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %521 = load atomic i32, i32* %520 monotonic, align 4
  %522 = and i32 %521, 2
  %523 = icmp eq i32 %522, 0
  %524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %517, i64 0, i32 0
  %525 = load i32, i32* %524, align 4
  br i1 %523, label %526, label %528

526:                                              ; preds = %519
  %527 = add i32 %525, -1
  store i32 %527, i32* %524, align 4
  br label %528

528:                                              ; preds = %526, %519
  %529 = phi i32 [ %527, %526 ], [ %525, %519 ]
  %530 = icmp eq i32 %529, 0
  br i1 %530, label %531, label %532

531:                                              ; preds = %528
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %517) #20
  br label %532

532:                                              ; preds = %516, %528, %531
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %434) #20
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %433) #20
  br label %624

533:                                              ; preds = %419
  %534 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRangeE, align 8
  %535 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %534, i64 0, i32 0, i32 0, i32 0
  %536 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %535, align 8
  %537 = icmp eq %"class.WTF::StringImpl"* %428, %536
  br i1 %537, label %538, label %624

538:                                              ; preds = %533
  %539 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %540 = bitcast %"class.blink::ComputedStyle"** %539 to %"class.blink::ComputedStyleBase"**
  %541 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %540, align 8
  %542 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %541, i64 0, i32 1, i32 0, i32 0
  %543 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %542, align 8
  %544 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %543, i64 0, i32 2, i32 0, i32 0
  %545 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %544, align 8
  %546 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %545, i64 0, i32 6
  %547 = load float, float* %546, align 8
  %548 = fmul float %547, 1.290000e+02
  %549 = fmul float %548, 6.400000e+01
  %550 = fcmp ult float %549, 0xC1E0000000000000
  %551 = fcmp ugt float %549, 0x41DFFFFFE0000000
  %552 = fcmp ogt float %549, 0xC1E0000000000000
  %553 = select i1 %552, float %549, float 0xC1E0000000000000
  %554 = fptosi float %553 to i32
  %555 = select i1 %550, i32 0, i32 2147483647
  %556 = select i1 %551, i32 %555, i32 %554
  br label %624

557:                                              ; preds = %290
  %558 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE, align 8
  %559 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %558, i64 0, i32 0, i32 0, i32 0
  %560 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %559, align 8
  %561 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %20, i64 1, i32 2
  %562 = bitcast %"class.blink::Member.318"* %561 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %563 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %562, align 8
  %564 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %563, i64 0, i32 3, i32 0, i32 0, i32 0
  %565 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %564, align 8
  %566 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %560, i64 0, i32 3, i32 0, i32 0, i32 0
  %567 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %566, align 8
  %568 = icmp eq %"class.WTF::StringImpl"* %565, %567
  br i1 %568, label %569, label %603, !prof !12

569:                                              ; preds = %557
  %570 = bitcast %"class.blink::Node"* %20 to %"class.blink::HTMLTextAreaElement"*
  %571 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %572 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %571, align 8
  %573 = tail call float @_ZN5blink17LayoutTextControl15GetAvgCharWidthERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %572) #20
  %574 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %570, i64 0, i32 2
  %575 = load i32, i32* %574, align 4
  %576 = uitofp i32 %575 to float
  %577 = fmul float %573, %576
  %578 = tail call float @llvm.ceil.f32(float %577) #20
  %579 = fmul float %578, 6.400000e+01
  %580 = fcmp ult float %579, 0xC1E0000000000000
  %581 = fcmp ugt float %579, 0x41DFFFFFE0000000
  %582 = fcmp ogt float %579, 0xC1E0000000000000
  %583 = select i1 %582, float %579, float 0xC1E0000000000000
  %584 = fptosi float %583 to i32
  %585 = select i1 %580, i32 0, i32 2147483647
  %586 = select i1 %581, i32 %585, i32 %584
  %587 = tail call i32 @_ZN5blink17LayoutTextControl18ScrollbarThicknessERKNS_9LayoutBoxE(%"class.blink::LayoutBox"* dereferenceable(216) %0) #20
  %588 = icmp sgt i32 %587, 33554431
  br i1 %588, label %596, label %589

589:                                              ; preds = %569
  %590 = icmp slt i32 %587, -33554432
  br i1 %590, label %594, label %591

591:                                              ; preds = %589
  %592 = shl i32 %587, 6
  %593 = icmp slt i32 %592, 0
  br i1 %593, label %594, label %596

594:                                              ; preds = %591, %589
  %595 = phi i32 [ %592, %591 ], [ -2147483648, %589 ]
  br label %596

596:                                              ; preds = %569, %591, %594
  %597 = phi i32 [ %595, %594 ], [ %592, %591 ], [ 2147483647, %569 ]
  %598 = phi i32 [ -2147483648, %594 ], [ 2147483647, %591 ], [ 2147483647, %569 ]
  %599 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %586, i32 %597) #20
  %600 = extractvalue { i32, i1 } %599, 1
  %601 = extractvalue { i32, i1 } %599, 0
  %602 = select i1 %600, i32 %598, i32 %601, !prof !2
  br label %624

603:                                              ; preds = %28, %557
  %604 = tail call zeroext i1 @_ZN5blink17IsSliderContainerERKNS_7ElementE(%"class.blink::Element"* nonnull dereferenceable(104) %22) #20
  br i1 %604, label %605, label %624

605:                                              ; preds = %603
  %606 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %607 = bitcast %"class.blink::ComputedStyle"** %606 to %"class.blink::ComputedStyleBase"**
  %608 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %607, align 8
  %609 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %608, i64 0, i32 1, i32 0, i32 0
  %610 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %609, align 8
  %611 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %610, i64 0, i32 2, i32 0, i32 0
  %612 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %611, align 8
  %613 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %612, i64 0, i32 6
  %614 = load float, float* %613, align 8
  %615 = fmul float %614, 1.290000e+02
  %616 = fmul float %615, 6.400000e+01
  %617 = fcmp ult float %616, 0xC1E0000000000000
  %618 = fcmp ugt float %616, 0x41DFFFFFE0000000
  %619 = fcmp ogt float %616, 0xC1E0000000000000
  %620 = select i1 %619, float %616, float 0xC1E0000000000000
  %621 = fptosi float %620 to i32
  %622 = select i1 %617, i32 0, i32 2147483647
  %623 = select i1 %618, i32 %622, i32 %621
  br label %624

624:                                              ; preds = %1, %18, %603, %533, %23, %283, %596, %605, %532, %538, %417
  %625 = phi i32 [ %623, %605 ], [ %602, %596 ], [ %418, %417 ], [ %500, %532 ], [ %556, %538 ], [ %289, %283 ], [ -64, %23 ], [ -64, %533 ], [ -64, %603 ], [ -64, %18 ], [ -64, %1 ]
  ret i32 %625
}

declare zeroext i1 @_ZNK5blink16HTMLInputElement11IsTextFieldEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #5

declare zeroext i1 @_ZN5blink17IsSliderContainerERKNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox32DefaultIntrinsicContentBlockSizeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 16777216
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %8, label %304

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %304, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 48
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %304

17:                                               ; preds = %12
  %18 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %22 = bitcast %"class.blink::Member.318"* %21 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %25, %27
  %29 = bitcast %"class.blink::Node"* %10 to %"class.blink::HTMLSelectElement"*
  br i1 %28, label %30, label %304

30:                                               ; preds = %17
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 5, i32 0, i32 0, i32 1
  %32 = bitcast %"class.blink::TraceWrapperV8Reference"* %31 to i8*
  %33 = load i8, i8* %32, align 8, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %92, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %39, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %41, i64 0, i32 39
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 31
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %481, label %46

46:                                               ; preds = %35
  %47 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %48, i64 0, i32 1, i32 0, i32 0
  %50 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %50, i64 0, i32 1
  %52 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %51) #20
  %53 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %52, i64 0, i32 2
  %54 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %53, align 8
  %55 = icmp eq %"class.blink::SimpleFontData"* %54, null
  br i1 %55, label %56, label %59

56:                                               ; preds = %46
  %57 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %51, i64 0, i32 0
  %58 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %52, %"class.blink::FontDescription"* dereferenceable(80) %57) #20
  store %"class.blink::SimpleFontData"* %58, %"class.blink::SimpleFontData"** %53, align 8
  br label %59

59:                                               ; preds = %56, %46
  %60 = phi %"class.blink::SimpleFontData"* [ %54, %46 ], [ %58, %56 ]
  %61 = tail call dereferenceable(104) %"class.blink::Element"* @_ZNK5blink17HTMLSelectElement12InnerElementEv(%"class.blink::HTMLSelectElement"* nonnull %29) #20
  %62 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %61, i64 0, i32 0, i32 0
  %63 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %62) #20
  %64 = icmp eq %"class.blink::SimpleFontData"* %60, null
  br i1 %64, label %71, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %60, i64 0, i32 1, i32 9
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %60, i64 0, i32 1, i32 10
  %69 = load i32, i32* %68, align 4
  %70 = add nsw i32 %69, %67
  br label %71

71:                                               ; preds = %65, %59
  %72 = phi i32 [ %70, %65 ], [ 0, %59 ]
  %73 = icmp eq %"class.blink::LayoutBox"* %63, null
  br i1 %73, label %77, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %63, i64 0, i32 0
  %76 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %75) #20
  br label %77

77:                                               ; preds = %74, %71
  %78 = phi i32 [ %76, %74 ], [ 0, %71 ]
  %79 = icmp sgt i32 %72, 33554431
  br i1 %79, label %84, label %80

80:                                               ; preds = %77
  %81 = icmp slt i32 %72, -33554432
  %82 = shl i32 %72, 6
  %83 = select i1 %81, i32 -2147483648, i32 %82
  br label %84

84:                                               ; preds = %80, %77
  %85 = phi i32 [ 2147483647, %77 ], [ %83, %80 ]
  %86 = icmp slt i32 %78, 0
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %85, i32 %78) #20
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 %87, i32 %90, !prof !2
  br label %481

92:                                               ; preds = %30
  %93 = tail call dereferenceable(16) %"class.blink::HeapVector.4234"* @_ZNK5blink17HTMLSelectElement12GetListItemsEv(%"class.blink::HTMLSelectElement"* nonnull %29) #20
  %94 = getelementptr inbounds %"class.blink::HeapVector.4234", %"class.blink::HeapVector.4234"* %93, i64 0, i32 0, i32 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %155, label %97

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %99 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %99, i64 0, i32 0, i32 3, i32 0, i32 0
  %101 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %101, i64 0, i32 2, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %103, i64 0, i32 2, i32 0, i32 0
  %105 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %105, i64 0, i32 45
  %107 = load i32, i32* %106, align 4
  %108 = and i32 %107, 24
  %109 = icmp eq i32 %108, 24
  br i1 %109, label %110, label %184

110:                                              ; preds = %97
  %111 = load i96, i96* %4, align 4
  %112 = and i96 %111, 1207959552
  %113 = icmp eq i96 %112, 134217728
  br i1 %113, label %184, label %114

114:                                              ; preds = %110
  %115 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %116 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %115, align 8
  %117 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %116, i64 92
  %118 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %117, align 8
  %119 = tail call zeroext i1 %118(%"class.blink::LayoutObject"* %2, i32 43) #20
  br i1 %119, label %184, label %120

120:                                              ; preds = %114
  %121 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %115, align 8
  %122 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %121, i64 92
  %123 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %122, align 8
  %124 = tail call zeroext i1 %123(%"class.blink::LayoutObject"* %2, i32 46) #20
  br i1 %124, label %145, label %125

125:                                              ; preds = %120
  %126 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %115, align 8
  %127 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %126, i64 92
  %128 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %127, align 8
  %129 = tail call zeroext i1 %128(%"class.blink::LayoutObject"* %2, i32 48) #20
  br i1 %129, label %145, label %130

130:                                              ; preds = %125
  %131 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %115, align 8
  %132 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %131, i64 92
  %133 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %132, align 8
  %134 = tail call zeroext i1 %133(%"class.blink::LayoutObject"* %2, i32 45) #20
  br i1 %134, label %145, label %135

135:                                              ; preds = %130
  %136 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %115, align 8
  %137 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %136, i64 92
  %138 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %137, align 8
  %139 = tail call zeroext i1 %138(%"class.blink::LayoutObject"* %2, i32 49) #20
  br i1 %139, label %145, label %140

140:                                              ; preds = %135
  %141 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %115, align 8
  %142 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %141, i64 92
  %143 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %142, align 8
  %144 = tail call zeroext i1 %143(%"class.blink::LayoutObject"* %2, i32 50) #20
  br i1 %144, label %145, label %150

145:                                              ; preds = %140, %135, %130, %125, %120
  %146 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %115, align 8
  %147 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %146, i64 92
  %148 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %147, align 8
  %149 = tail call zeroext i1 %148(%"class.blink::LayoutObject"* %2, i32 45) #20
  br i1 %149, label %150, label %184

150:                                              ; preds = %145, %140
  %151 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %115, align 8
  %152 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %151, i64 92
  %153 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %152, align 8
  %154 = tail call zeroext i1 %153(%"class.blink::LayoutObject"* %2, i32 44) #20
  br i1 %154, label %184, label %155

155:                                              ; preds = %150, %92
  %156 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %157 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %157, i64 0, i32 0, i32 0, i32 0, i32 0
  %159 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %159, i64 0, i32 1, i32 0, i32 0
  %161 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %160, align 8
  %162 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %161, i64 0, i32 1
  %163 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %162) #20
  %164 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %163, i64 0, i32 2
  %165 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %164, align 8
  %166 = icmp eq %"class.blink::SimpleFontData"* %165, null
  br i1 %166, label %167, label %171

167:                                              ; preds = %155
  %168 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %162, i64 0, i32 0
  %169 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %163, %"class.blink::FontDescription"* dereferenceable(80) %168) #20
  store %"class.blink::SimpleFontData"* %169, %"class.blink::SimpleFontData"** %164, align 8
  %170 = icmp eq %"class.blink::SimpleFontData"* %169, null
  br i1 %170, label %266, label %171

171:                                              ; preds = %167, %155
  %172 = phi %"class.blink::SimpleFontData"* [ %169, %167 ], [ %165, %155 ]
  %173 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %172, i64 0, i32 1, i32 9
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %172, i64 0, i32 1, i32 10
  %176 = load i32, i32* %175, align 4
  %177 = add nsw i32 %176, %174
  %178 = add nsw i32 %177, 1
  %179 = icmp sgt i32 %177, 33554430
  br i1 %179, label %266, label %180

180:                                              ; preds = %171
  %181 = icmp slt i32 %178, -33554432
  %182 = shl i32 %178, 6
  %183 = select i1 %181, i32 -2147483648, i32 %182
  br label %266

184:                                              ; preds = %150, %145, %114, %110, %97
  %185 = getelementptr inbounds %"class.blink::HeapVector.4234", %"class.blink::HeapVector.4234"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %186 = load %"class.blink::Member.4240"*, %"class.blink::Member.4240"** %185, align 8
  %187 = load i32, i32* %94, align 4
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds %"class.blink::Member.4240", %"class.blink::Member.4240"* %186, i64 %188
  %190 = icmp eq i32 %187, 0
  br i1 %190, label %266, label %191

191:                                              ; preds = %184
  %192 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kOptgroupTagE, align 8
  %193 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %192, i64 0, i32 0, i32 0, i32 0
  br label %194

194:                                              ; preds = %260, %191
  %195 = phi i32 [ 0, %191 ], [ %263, %260 ]
  %196 = phi %"class.blink::Member.4240"* [ %186, %191 ], [ %264, %260 ]
  %197 = getelementptr inbounds %"class.blink::Member.4240", %"class.blink::Member.4240"* %196, i64 0, i32 0, i32 0
  %198 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %198, i64 0, i32 0
  %200 = icmp eq %"class.blink::HTMLElement"* %198, null
  br i1 %200, label %221, label %201

201:                                              ; preds = %194
  %202 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %198, i64 0, i32 0, i32 0, i32 0, i32 1
  %203 = load i32, i32* %202, align 8
  %204 = and i32 %203, 48
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %221

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %198, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %193, align 8
  %209 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %207, i64 1, i32 2
  %210 = bitcast %"class.blink::Member.318"* %209 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %211 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %210, align 8
  %212 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %211, i64 0, i32 3, i32 0, i32 0, i32 0
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %214 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %208, i64 0, i32 3, i32 0, i32 0, i32 0
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %213, %215
  br i1 %216, label %217, label %221

217:                                              ; preds = %206
  %218 = bitcast %"class.blink::HTMLElement"* %198 to %"class.blink::HTMLOptGroupElement"*
  %219 = tail call dereferenceable(104) %"class.blink::HTMLDivElement"* @_ZNK5blink19HTMLOptGroupElement20OptGroupLabelElementEv(%"class.blink::HTMLOptGroupElement"* nonnull %218) #20
  %220 = getelementptr inbounds %"class.blink::HTMLDivElement", %"class.blink::HTMLDivElement"* %219, i64 0, i32 0, i32 0
  br label %221

221:                                              ; preds = %217, %206, %201, %194
  %222 = phi %"class.blink::Element"* [ %220, %217 ], [ %199, %206 ], [ %199, %201 ], [ null, %194 ]
  %223 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %222, i64 0, i32 0, i32 0
  %224 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %223) #20
  %225 = icmp eq %"class.blink::LayoutBox"* %224, null
  br i1 %225, label %232, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %224, i64 0, i32 2, i32 1
  %228 = bitcast %"class.blink::LayoutSize"* %227 to i64*
  %229 = load i64, i64* %228, align 4
  %230 = lshr i64 %229, 32
  %231 = trunc i64 %230 to i32
  br label %260

232:                                              ; preds = %221
  %233 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %98, align 8
  %234 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %235 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %234, align 8
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %235, i64 0, i32 1, i32 0, i32 0
  %237 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %236, align 8
  %238 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %237, i64 0, i32 1
  %239 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %238) #20
  %240 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %239, i64 0, i32 2
  %241 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %240, align 8
  %242 = icmp eq %"class.blink::SimpleFontData"* %241, null
  br i1 %242, label %243, label %247

243:                                              ; preds = %232
  %244 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %238, i64 0, i32 0
  %245 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %239, %"class.blink::FontDescription"* dereferenceable(80) %244) #20
  store %"class.blink::SimpleFontData"* %245, %"class.blink::SimpleFontData"** %240, align 8
  %246 = icmp eq %"class.blink::SimpleFontData"* %245, null
  br i1 %246, label %260, label %247

247:                                              ; preds = %243, %232
  %248 = phi %"class.blink::SimpleFontData"* [ %245, %243 ], [ %241, %232 ]
  %249 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %248, i64 0, i32 1, i32 9
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %248, i64 0, i32 1, i32 10
  %252 = load i32, i32* %251, align 4
  %253 = add nsw i32 %252, %250
  %254 = add nsw i32 %253, 1
  %255 = icmp sgt i32 %253, 33554430
  br i1 %255, label %260, label %256

256:                                              ; preds = %247
  %257 = icmp slt i32 %254, -33554432
  %258 = shl i32 %254, 6
  %259 = select i1 %257, i32 -2147483648, i32 %258
  br label %260

260:                                              ; preds = %256, %247, %243, %226
  %261 = phi i32 [ %231, %226 ], [ %259, %256 ], [ 0, %243 ], [ 2147483647, %247 ]
  %262 = icmp slt i32 %195, %261
  %263 = select i1 %262, i32 %261, i32 %195
  %264 = getelementptr inbounds %"class.blink::Member.4240", %"class.blink::Member.4240"* %196, i64 1
  %265 = icmp eq %"class.blink::Member.4240"* %264, %189
  br i1 %265, label %266, label %194

266:                                              ; preds = %260, %167, %171, %180, %184
  %267 = phi i32 [ %183, %180 ], [ 0, %167 ], [ 2147483647, %171 ], [ 0, %184 ], [ %263, %260 ]
  %268 = tail call i32 @_ZNK5blink17HTMLSelectElement11ListBoxSizeEv(%"class.blink::HTMLSelectElement"* nonnull %29) #20
  %269 = icmp ugt i32 %268, 33554430
  %270 = shl i32 %268, 6
  %271 = select i1 %269, i32 2147483647, i32 %270
  %272 = sext i32 %267 to i64
  %273 = sext i32 %271 to i64
  %274 = mul nsw i64 %273, %272
  %275 = sdiv i64 %274, 64
  %276 = ashr i64 %275, 32
  %277 = trunc i64 %276 to i32
  %278 = trunc i64 %275 to i32
  %279 = ashr i32 %278, 31
  %280 = icmp eq i32 %279, %277
  br i1 %280, label %285, label %281

281:                                              ; preds = %266
  %282 = xor i32 %271, %267
  %283 = lshr i32 %282, 31
  %284 = add nuw i32 %283, 2147483647
  br label %285

285:                                              ; preds = %266, %281
  %286 = phi i32 [ %278, %266 ], [ %284, %281 ]
  %287 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %0)
  %288 = extractvalue { i64, i64 } %287, 1
  %289 = trunc i64 %288 to i32
  %290 = lshr i64 %288, 32
  %291 = trunc i64 %290 to i32
  %292 = icmp slt i32 %291, 0
  %293 = select i1 %292, i32 -2147483648, i32 2147483647
  %294 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %289, i32 %291) #20
  %295 = extractvalue { i32, i1 } %294, 1
  %296 = extractvalue { i32, i1 } %294, 0
  %297 = select i1 %295, i32 %293, i32 %296, !prof !2
  %298 = icmp sgt i32 %297, -1
  %299 = select i1 %298, i32 -2147483648, i32 2147483647
  %300 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %286, i32 %297) #20
  %301 = extractvalue { i32, i1 } %300, 1
  %302 = extractvalue { i32, i1 } %300, 0
  %303 = select i1 %301, i32 %299, i32 %302, !prof !2
  br label %481

304:                                              ; preds = %17, %1, %8, %12
  %305 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %306 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %305, align 8
  %307 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %306, i64 92
  %308 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %307, align 8
  %309 = tail call zeroext i1 %308(%"class.blink::LayoutObject"* %2, i32 53) #20
  br i1 %309, label %315, label %310

310:                                              ; preds = %304
  %311 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %305, align 8
  %312 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %311, i64 92
  %313 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %312, align 8
  %314 = tail call zeroext i1 %313(%"class.blink::LayoutObject"* %2, i32 35) #20
  br i1 %314, label %315, label %349

315:                                              ; preds = %304, %310
  %316 = load i96, i96* %4, align 4
  %317 = and i96 %316, 16777216
  %318 = icmp eq i96 %317, 0
  br i1 %318, label %319, label %323

319:                                              ; preds = %315
  %320 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %321 = bitcast %"class.blink::Node"** %320 to %"class.blink::HTMLInputElement"**
  %322 = load %"class.blink::HTMLInputElement"*, %"class.blink::HTMLInputElement"** %321, align 8
  br label %323

323:                                              ; preds = %315, %319
  %324 = phi %"class.blink::HTMLInputElement"* [ %322, %319 ], [ null, %315 ]
  %325 = getelementptr inbounds %"class.blink::HTMLInputElement", %"class.blink::HTMLInputElement"* %324, i64 0, i32 0, i32 1, i32 0, i32 0
  %326 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %325, align 8
  %327 = icmp eq %"class.blink::TextControlInnerEditorElement"* %326, null
  br i1 %327, label %334, label %328

328:                                              ; preds = %323
  %329 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %326, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %329) #20
  %331 = icmp eq %"class.blink::LayoutBox"* %330, null
  br i1 %331, label %334, label %332

332:                                              ; preds = %328
  %333 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %329) #20
  br label %334

334:                                              ; preds = %323, %328, %332
  %335 = phi %"class.blink::LayoutBox"* [ %333, %332 ], [ %0, %328 ], [ %0, %323 ]
  %336 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %335, i64 0, i32 0, i32 0, i32 5, i32 0
  %337 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %336, align 8
  %338 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %337, i64 0, i32 0, i32 9
  %339 = bitcast [20 x i8]* %338 to i160*
  %340 = load i160, i160* %339, align 8
  %341 = and i160 %340, 15211807202738752817960438464512
  %342 = icmp ne i160 %341, 0
  %343 = zext i1 %342 to i32
  %344 = bitcast %"class.blink::LayoutBox"* %335 to i32 (%"class.blink::LayoutBox"*, i1, i32, i32)***
  %345 = load i32 (%"class.blink::LayoutBox"*, i1, i32, i32)**, i32 (%"class.blink::LayoutBox"*, i1, i32, i32)*** %344, align 8
  %346 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBox"*, i1, i32, i32)** %345, i64 133
  %347 = load i32 (%"class.blink::LayoutBox"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBox"*, i1, i32, i32)** %346, align 8
  %348 = tail call i32 %347(%"class.blink::LayoutBox"* %335, i1 zeroext true, i32 %343, i32 1) #20
  br label %481

349:                                              ; preds = %310
  %350 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %305, align 8
  %351 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %350, i64 92
  %352 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %351, align 8
  %353 = tail call zeroext i1 %352(%"class.blink::LayoutObject"* %2, i32 52) #20
  br i1 %353, label %359, label %354

354:                                              ; preds = %349
  %355 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %305, align 8
  %356 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %355, i64 92
  %357 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %356, align 8
  %358 = tail call zeroext i1 %357(%"class.blink::LayoutObject"* %2, i32 34) #20
  br i1 %358, label %359, label %481

359:                                              ; preds = %349, %354
  %360 = load i96, i96* %4, align 4
  %361 = and i96 %360, 16777216
  %362 = icmp eq i96 %361, 0
  br i1 %362, label %363, label %367

363:                                              ; preds = %359
  %364 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %365 = bitcast %"class.blink::Node"** %364 to %"class.blink::HTMLTextAreaElement"**
  %366 = load %"class.blink::HTMLTextAreaElement"*, %"class.blink::HTMLTextAreaElement"** %365, align 8
  br label %367

367:                                              ; preds = %359, %363
  %368 = phi %"class.blink::HTMLTextAreaElement"* [ %366, %363 ], [ null, %359 ]
  %369 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %368, i64 0, i32 0, i32 1, i32 0, i32 0
  %370 = load %"class.blink::TextControlInnerEditorElement"*, %"class.blink::TextControlInnerEditorElement"** %369, align 8
  %371 = icmp eq %"class.blink::TextControlInnerEditorElement"* %370, null
  br i1 %371, label %376, label %372

372:                                              ; preds = %367
  %373 = getelementptr inbounds %"class.blink::TextControlInnerEditorElement", %"class.blink::TextControlInnerEditorElement"* %370, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %374 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %373) #20
  %375 = icmp eq %"class.blink::LayoutBox"* %374, null
  br i1 %375, label %376, label %408

376:                                              ; preds = %372, %367
  %377 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %378 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %377, align 8
  %379 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %378, i64 0, i32 0, i32 9
  %380 = bitcast [20 x i8]* %379 to i160*
  %381 = load i160, i160* %380, align 8
  %382 = and i160 %381, 15211807202738752817960438464512
  %383 = icmp ne i160 %382, 0
  %384 = zext i1 %383 to i32
  %385 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*, i1, i32, i32)***
  %386 = load i32 (%"class.blink::LayoutBox"*, i1, i32, i32)**, i32 (%"class.blink::LayoutBox"*, i1, i32, i32)*** %385, align 8
  %387 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBox"*, i1, i32, i32)** %386, i64 133
  %388 = load i32 (%"class.blink::LayoutBox"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBox"*, i1, i32, i32)** %387, align 8
  %389 = tail call i32 %388(%"class.blink::LayoutBox"* %0, i1 zeroext true, i32 %384, i32 1) #20
  %390 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %368, i64 0, i32 1
  %391 = load i32, i32* %390, align 8
  %392 = icmp ugt i32 %391, 33554430
  %393 = shl i32 %391, 6
  %394 = select i1 %392, i32 2147483647, i32 %393
  %395 = sext i32 %389 to i64
  %396 = sext i32 %394 to i64
  %397 = mul nsw i64 %396, %395
  %398 = sdiv i64 %397, 64
  %399 = ashr i64 %398, 32
  %400 = trunc i64 %399 to i32
  %401 = trunc i64 %398 to i32
  %402 = ashr i32 %401, 31
  %403 = icmp eq i32 %402, %400
  br i1 %403, label %481, label %404

404:                                              ; preds = %376
  %405 = xor i32 %394, %389
  %406 = lshr i32 %405, 31
  %407 = add nuw i32 %406, 2147483647
  br label %481

408:                                              ; preds = %372
  %409 = tail call %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"* %373) #20
  %410 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %409, i64 0, i32 0, i32 0, i32 5, i32 0
  %411 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %410, align 8
  %412 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %413 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %412, align 8
  %414 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %413, i64 0, i32 0, i32 9
  %415 = bitcast [20 x i8]* %414 to i160*
  %416 = load i160, i160* %415, align 8
  %417 = and i160 %416, 15211807202738752817960438464512
  %418 = icmp eq i160 %417, 0
  %419 = select i1 %418, i160 74, i160 77
  %420 = lshr i160 %416, %419
  %421 = trunc i160 %420 to i32
  %422 = and i32 %421, 7
  switch i32 %422, label %433 [
    i32 4, label %431
    i32 1, label %423
  ]

423:                                              ; preds = %408
  %424 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %411, i64 0, i32 0, i32 1, i32 0, i32 0
  %425 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %424, align 8
  %426 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %425, i64 0, i32 23
  %427 = bitcast [5 x i8]* %426 to i40*
  %428 = load i40, i40* %427, align 8
  %429 = and i40 %428, 786432
  %430 = icmp eq i40 %429, 0
  br i1 %430, label %431, label %433

431:                                              ; preds = %423, %408
  %432 = tail call i32 @_ZN5blink17LayoutTextControl18ScrollbarThicknessERKNS_9LayoutBoxE(%"class.blink::LayoutBox"* dereferenceable(216) %0) #20
  br label %433

433:                                              ; preds = %431, %423, %408
  %434 = phi i32 [ %432, %431 ], [ 0, %423 ], [ 0, %408 ]
  %435 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %411, i64 0, i32 0, i32 9
  %436 = bitcast [20 x i8]* %435 to i160*
  %437 = load i160, i160* %436, align 8
  %438 = and i160 %437, 15211807202738752817960438464512
  %439 = icmp ne i160 %438, 0
  %440 = zext i1 %439 to i32
  %441 = bitcast %"class.blink::LayoutBox"* %409 to i32 (%"class.blink::LayoutBox"*, i1, i32, i32)***
  %442 = load i32 (%"class.blink::LayoutBox"*, i1, i32, i32)**, i32 (%"class.blink::LayoutBox"*, i1, i32, i32)*** %441, align 8
  %443 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBox"*, i1, i32, i32)** %442, i64 133
  %444 = load i32 (%"class.blink::LayoutBox"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBox"*, i1, i32, i32)** %443, align 8
  %445 = tail call i32 %444(%"class.blink::LayoutBox"* %409, i1 zeroext true, i32 %440, i32 1) #20
  %446 = getelementptr inbounds %"class.blink::HTMLTextAreaElement", %"class.blink::HTMLTextAreaElement"* %368, i64 0, i32 1
  %447 = load i32, i32* %446, align 8
  %448 = icmp ugt i32 %447, 33554430
  %449 = shl i32 %447, 6
  %450 = select i1 %448, i32 2147483647, i32 %449
  %451 = sext i32 %445 to i64
  %452 = sext i32 %450 to i64
  %453 = mul nsw i64 %452, %451
  %454 = sdiv i64 %453, 64
  %455 = ashr i64 %454, 32
  %456 = trunc i64 %455 to i32
  %457 = trunc i64 %454 to i32
  %458 = ashr i32 %457, 31
  %459 = icmp eq i32 %458, %456
  br i1 %459, label %464, label %460

460:                                              ; preds = %433
  %461 = xor i32 %450, %445
  %462 = lshr i32 %461, 31
  %463 = add nuw i32 %462, 2147483647
  br label %464

464:                                              ; preds = %460, %433
  %465 = phi i32 [ %457, %433 ], [ %463, %460 ]
  %466 = icmp sgt i32 %434, 33554431
  br i1 %466, label %474, label %467

467:                                              ; preds = %464
  %468 = icmp slt i32 %434, -33554432
  br i1 %468, label %472, label %469

469:                                              ; preds = %467
  %470 = shl i32 %434, 6
  %471 = icmp slt i32 %470, 0
  br i1 %471, label %472, label %474

472:                                              ; preds = %469, %467
  %473 = phi i32 [ %470, %469 ], [ -2147483648, %467 ]
  br label %474

474:                                              ; preds = %472, %469, %464
  %475 = phi i32 [ %473, %472 ], [ %470, %469 ], [ 2147483647, %464 ]
  %476 = phi i32 [ -2147483648, %472 ], [ 2147483647, %469 ], [ 2147483647, %464 ]
  %477 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %465, i32 %475) #20
  %478 = extractvalue { i32, i1 } %477, 1
  %479 = extractvalue { i32, i1 } %477, 0
  %480 = select i1 %478, i32 %476, i32 %479, !prof !2
  br label %481

481:                                              ; preds = %354, %474, %404, %376, %84, %35, %334, %285
  %482 = phi i32 [ %348, %334 ], [ %303, %285 ], [ %91, %84 ], [ -64, %35 ], [ %480, %474 ], [ %401, %376 ], [ %407, %404 ], [ -64, %354 ]
  ret i32 %482
}

declare i32 @_ZNK5blink17HTMLSelectElement11ListBoxSizeEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %86, label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 0, i32 0, i32 1)
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = trunc i64 %48 to i32
  %50 = lshr i64 %48, 32
  %51 = extractvalue { i64, i64 } %47, 1
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8
  %56 = lshr i160 %55, 102
  %57 = trunc i160 %56 to i8
  %58 = and i8 %57, 3
  switch i8 %58, label %72 [
    i8 0, label %59
    i8 1, label %65
    i8 3, label %65
    i8 2, label %68
  ]

59:                                               ; preds = %46
  %60 = lshr i64 %51, 32
  %61 = trunc i64 %60 to i32
  %62 = and i64 %48, 4294967295
  %63 = shl i64 %51, 32
  %64 = or i64 %63, %62
  br label %73

65:                                               ; preds = %46, %46
  %66 = and i64 %51, -4294967296
  %67 = or i64 %66, %50
  br label %73

68:                                               ; preds = %46
  %69 = lshr i64 %51, 32
  %70 = and i64 %48, -4294967296
  %71 = or i64 %70, %69
  br label %73

72:                                               ; preds = %46
  unreachable

73:                                               ; preds = %59, %65, %68
  %74 = phi i64 [ %71, %68 ], [ %67, %65 ], [ %64, %59 ]
  %75 = phi i64 [ %51, %68 ], [ %51, %65 ], [ %50, %59 ]
  %76 = phi i32 [ %49, %68 ], [ %49, %65 ], [ %61, %59 ]
  %77 = trunc i64 %75 to i32
  %78 = and i160 %55, 41538374868278621028243970633760768
  %79 = icmp ne i160 %78, 0
  %80 = select i1 %79, i32 %76, i32 %77
  %81 = select i1 %79, i32 %77, i32 %76
  %82 = zext i32 %80 to i64
  %83 = shl nuw i64 %82, 32
  %84 = zext i32 %81 to i64
  %85 = or i64 %83, %84
  br label %86

86:                                               ; preds = %39, %73
  %87 = phi i64 [ %74, %73 ], [ 0, %39 ]
  %88 = phi i64 [ %85, %73 ], [ 0, %39 ]
  %89 = insertvalue { i64, i64 } undef, i64 %88, 0
  %90 = insertvalue { i64, i64 } %89, i64 %87, 1
  ret { i64, i64 } %90
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxOverflowModel"* %3, null
  br i1 %4, label %35, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  br i1 %14, label %16, label %19

16:                                               ; preds = %9
  %17 = bitcast %"class.blink::ComputedStyle"** %15 to %"class.blink::ComputedStyleBase"**
  %18 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %17, align 8
  br label %28

19:                                               ; preds = %9
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = lshr i160 %23, 74
  %25 = trunc i160 %24 to i32
  %26 = and i32 %25, 7
  %27 = bitcast %"class.blink::ComputedStyle"* %20 to %"class.blink::ComputedStyleBase"*
  switch i32 %26, label %35 [
    i32 5, label %28
    i32 2, label %28
  ]

28:                                               ; preds = %16, %19, %19
  %29 = phi %"class.blink::ComputedStyleBase"* [ %18, %16 ], [ %27, %19 ], [ %27, %19 ]
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %29, i64 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = and i160 %32, 1057810092162800527867904
  %34 = icmp eq i160 %33, 755578637259143234191360
  br i1 %34, label %35, label %47

35:                                               ; preds = %5, %19, %1, %28
  %36 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8
  %41 = and i160 %40, 15211807202738752817960438464512
  %42 = icmp eq i160 %41, 0
  %43 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %45 = select i1 %42, i32* %43, i32* %44
  %46 = load i32, i32* %45, align 4
  br label %78

47:                                               ; preds = %28
  %48 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %49 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18LayoutOverflowRectEv(%"class.blink::LayoutBox"* %0)
  %50 = extractvalue { i64, i64 } %49, 0
  %51 = extractvalue { i64, i64 } %49, 1
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %48, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8
  %56 = and i160 %55, 15211807202738752817960438464512
  %57 = icmp eq i160 %56, 0
  br i1 %57, label %58, label %69

58:                                               ; preds = %47
  %59 = lshr i64 %50, 32
  %60 = trunc i64 %59 to i32
  %61 = lshr i64 %51, 32
  %62 = trunc i64 %61 to i32
  %63 = icmp slt i32 %62, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %60, i32 %62) #20
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !2
  br label %78

69:                                               ; preds = %47
  %70 = trunc i64 %50 to i32
  %71 = trunc i64 %51 to i32
  %72 = icmp slt i32 %71, 0
  %73 = select i1 %72, i32 -2147483648, i32 2147483647
  %74 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %70, i32 %71) #20
  %75 = extractvalue { i32, i1 } %74, 1
  %76 = extractvalue { i32, i1 } %74, 0
  %77 = select i1 %75, i32 %73, i32 %76, !prof !2
  br label %78

78:                                               ; preds = %58, %69, %35
  %79 = phi i32 [ %46, %35 ], [ %68, %58 ], [ %77, %69 ]
  ret i32 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox29ConstrainLogicalWidthByMinMaxENS_10LayoutUnitES1_PKNS_11LayoutBlockEb(%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBlock"*, i1 zeroext) local_unnamed_addr #4 align 2 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.blink::Length"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.blink::Length"*
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK5blink9LayoutBox41ShouldComputeLogicalHeightFromAspectRatioEv(%"class.blink::LayoutBox"* %0)
  br i1 %12, label %13, label %22

13:                                               ; preds = %5
  %14 = tail call i64 @_ZNK5blink9LayoutBox40ComputeMinMaxLogicalWidthFromAspectRatioEv(%"class.blink::LayoutBox"* %0)
  %15 = trunc i64 %14 to i32
  %16 = lshr i64 %14, 32
  %17 = trunc i64 %16 to i32
  %18 = icmp slt i32 %17, %1
  %19 = select i1 %18, i32 %17, i32 %1
  %20 = icmp sgt i32 %19, %15
  %21 = select i1 %20, i32 %19, i32 %15
  br label %22

22:                                               ; preds = %13, %5
  %23 = phi i32 [ %21, %13 ], [ %1, %5 ]
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8
  %27 = and i160 %26, 15211807202738752817960438464512
  %28 = icmp eq i160 %27, 0
  %29 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %30 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %30, i64 0, i32 5
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %30, i64 0, i32 4
  %33 = select i1 %28, %"class.blink::Length"* %31, %"class.blink::Length"* %32
  %34 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %33, i64 0, i32 2
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 12
  br i1 %36, label %46, label %37

37:                                               ; preds = %22
  br i1 %4, label %39, label %38

38:                                               ; preds = %37
  switch i8 %35, label %39 [
    i8 3, label %46
    i8 4, label %46
    i8 7, label %46
    i8 5, label %46
  ]

39:                                               ; preds = %38, %37
  %40 = tail call i32 @_ZNK5blink9LayoutBox24ComputeLogicalWidthUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitEPKNS_11LayoutBlockE(%"class.blink::LayoutBox"* %0, i32 2, %"class.blink::Length"* dereferenceable(8) %33, i32 %2, %"class.blink::LayoutBlock"* %3)
  %41 = icmp slt i32 %40, %23
  %42 = select i1 %41, i32 %40, i32 %23
  %43 = load i160, i160* %25, align 8
  %44 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %29, align 8
  %45 = and i160 %43, 15211807202738752817960438464512
  br label %46

46:                                               ; preds = %38, %38, %38, %38, %39, %22
  %47 = phi i160 [ %27, %38 ], [ %27, %38 ], [ %27, %38 ], [ %27, %38 ], [ %45, %39 ], [ %27, %22 ]
  %48 = phi i32 [ %23, %38 ], [ %23, %38 ], [ %23, %38 ], [ %23, %38 ], [ %42, %39 ], [ %23, %22 ]
  %49 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %30, %38 ], [ %30, %38 ], [ %30, %38 ], [ %30, %38 ], [ %44, %39 ], [ %30, %22 ]
  %50 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #20
  %51 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %52 = icmp eq i160 %47, 0
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %49, i64 0, i32 7
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %49, i64 0, i32 6
  %55 = select i1 %52, %"class.blink::Length"* %53, %"class.blink::Length"* %54
  %56 = bitcast %"class.blink::Length"* %55 to i64*
  %57 = load i64, i64* %56, align 4
  store i64 %57, i64* %6, align 8
  %58 = and i64 %57, 280375465082880
  %59 = icmp eq i64 %58, 8796093022208
  br i1 %59, label %60, label %62

60:                                               ; preds = %46
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #20
  %61 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %29, align 8
  br label %62

62:                                               ; preds = %46, %60
  %63 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %49, %46 ], [ %61, %60 ]
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %63, i64 0, i32 1, i32 1, i32 0
  %65 = load float, float* %64, align 4
  %66 = fcmp oeq float %65, 0.000000e+00
  br i1 %66, label %110, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %63, i64 0, i32 1, i32 1, i32 1
  %69 = load float, float* %68, align 4
  %70 = fcmp oeq float %69, 0.000000e+00
  %71 = fcmp olt float %65, 1.562500e-02
  %72 = or i1 %71, %70
  %73 = fcmp olt float %69, 1.562500e-02
  %74 = or i1 %73, %72
  br i1 %74, label %110, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %63, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 4
  %78 = and i8 %77, 3
  %79 = icmp ne i8 %78, 0
  %80 = load i8, i8* %51, align 1
  %81 = icmp eq i8 %80, 0
  %82 = and i1 %79, %81
  br i1 %82, label %83, label %110

83:                                               ; preds = %75
  %84 = load i160, i160* %25, align 8
  %85 = and i160 %84, 15211807202738752817960438464512
  %86 = icmp eq i160 %85, 0
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %63, i64 0, i32 8
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %63, i64 0, i32 3
  %89 = select i1 %86, %"class.blink::Length"* %87, %"class.blink::Length"* %88
  %90 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %89, i64 0, i32 2
  %91 = load i8, i8* %90, align 1
  switch i8 %91, label %110 [
    i8 0, label %92
    i8 3, label %92
    i8 4, label %92
  ]

92:                                               ; preds = %83, %83, %83
  %93 = select i1 %86, i160 74, i160 77
  %94 = lshr i160 %84, %93
  %95 = and i160 %94, 7
  %96 = icmp eq i160 %95, 2
  br i1 %96, label %97, label %110

97:                                               ; preds = %92
  %98 = call zeroext i1 @_ZNK5blink9LayoutBox40ShouldComputeLogicalWidthFromAspectRatioEPNS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutUnit"* null)
  br i1 %98, label %99, label %110

99:                                               ; preds = %97
  %100 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #20
  %101 = bitcast i64* %8 to i32*
  store i32 0, i32* %101, align 8, !alias.scope !19
  %102 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 1
  store i8 0, i8* %102, align 4, !alias.scope !19
  %103 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 2
  store i8 5, i8* %103, align 1, !alias.scope !19
  %104 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 3
  store i8 0, i8* %104, align 2, !alias.scope !19
  %105 = load i8, i8* %51, align 1
  %106 = icmp eq i8 %105, 8
  br i1 %106, label %107, label %108

107:                                              ; preds = %99
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #20
  br label %108

108:                                              ; preds = %99, %107
  %109 = load i64, i64* %8, align 8
  store i64 %109, i64* %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #20
  br label %110

110:                                              ; preds = %83, %75, %62, %67, %97, %108, %92
  br i1 %4, label %121, label %111

111:                                              ; preds = %110
  %112 = load i160, i160* %25, align 8
  %113 = and i160 %112, 15211807202738752817960438464512
  %114 = icmp eq i160 %113, 0
  %115 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %29, align 8
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %115, i64 0, i32 7
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %115, i64 0, i32 6
  %118 = select i1 %114, %"class.blink::Length"* %116, %"class.blink::Length"* %117
  %119 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %118, i64 0, i32 2
  %120 = load i8, i8* %119, align 1
  switch i8 %120, label %121 [
    i8 3, label %125
    i8 4, label %125
    i8 7, label %125
    i8 5, label %125
  ]

121:                                              ; preds = %111, %110
  %122 = call i32 @_ZNK5blink9LayoutBox24ComputeLogicalWidthUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitEPKNS_11LayoutBlockE(%"class.blink::LayoutBox"* %0, i32 1, %"class.blink::Length"* nonnull dereferenceable(8) %7, i32 %2, %"class.blink::LayoutBlock"* %3)
  %123 = icmp slt i32 %48, %122
  %124 = select i1 %123, i32 %122, i32 %48
  br label %125

125:                                              ; preds = %111, %111, %111, %111, %121
  %126 = phi i32 [ %124, %121 ], [ %48, %111 ], [ %48, %111 ], [ %48, %111 ], [ %48, %111 ]
  %127 = load i8, i8* %51, align 1
  %128 = icmp eq i8 %127, 8
  br i1 %128, label %129, label %130

129:                                              ; preds = %125
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %7) #20
  br label %130

130:                                              ; preds = %125, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #20
  ret i32 %126
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox41ShouldComputeLogicalHeightFromAspectRatioEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"class.blink::Length"*
  %4 = tail call zeroext i1 @_ZNK5blink9LayoutBox49ShouldComputeLogicalWidthFromAspectRatioAndInsetsEv(%"class.blink::LayoutBox"* %0)
  br i1 %4, label %73, label %5

5:                                                ; preds = %1
  %6 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #20
  %7 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 15211807202738752817960438464512
  %14 = icmp eq i160 %13, 0
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %16, i64 0, i32 3
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %16, i64 0, i32 8
  %19 = select i1 %14, %"class.blink::Length"* %17, %"class.blink::Length"* %18
  %20 = bitcast %"class.blink::Length"* %19 to i64*
  %21 = load i64, i64* %20, align 4
  store i64 %21, i64* %2, align 8
  %22 = and i64 %21, 280375465082880
  %23 = icmp eq i64 %22, 8796093022208
  br i1 %23, label %26, label %24

24:                                               ; preds = %5
  %25 = bitcast %"class.blink::ComputedStyle"* %9 to %"class.blink::ComputedStyleBase"*
  br label %29

26:                                               ; preds = %5
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %3) #20
  %27 = bitcast %"class.blink::ComputedStyle"** %8 to %"class.blink::ComputedStyleBase"**
  %28 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %27, align 8
  br label %29

29:                                               ; preds = %24, %26
  %30 = phi %"class.blink::ComputedStyleBase"* [ %25, %24 ], [ %28, %26 ]
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %30, i64 0, i32 5, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 1, i32 1, i32 0
  %34 = load float, float* %33, align 4
  %35 = fcmp oeq float %34, 0.000000e+00
  br i1 %35, label %62, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 1, i32 1, i32 1
  %38 = load float, float* %37, align 4
  %39 = fcmp oeq float %38, 0.000000e+00
  %40 = fcmp olt float %34, 1.562500e-02
  %41 = or i1 %40, %39
  %42 = fcmp olt float %38, 1.562500e-02
  %43 = or i1 %42, %41
  br i1 %43, label %62, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 4
  %47 = and i8 %46, 3
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %62, label %49

49:                                               ; preds = %44
  %50 = load i8, i8* %7, align 1
  %51 = icmp ult i8 %50, 8
  br i1 %51, label %67, label %52

52:                                               ; preds = %67, %49
  %53 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = and i96 %55, 113336795588871485128704
  %57 = icmp eq i96 %56, 75557863725914323419136
  br i1 %57, label %62, label %58

58:                                               ; preds = %52
  switch i8 %50, label %62 [
    i8 8, label %59
    i8 1, label %59
  ]

59:                                               ; preds = %58, %58
  %60 = call i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"* %0, %"class.blink::Length"* nonnull dereferenceable(8) %3)
  %61 = icmp eq i32 %60, -64
  br label %62

62:                                               ; preds = %58, %29, %36, %59, %52, %44
  %63 = phi i1 [ false, %29 ], [ false, %36 ], [ false, %44 ], [ false, %58 ], [ false, %52 ], [ %61, %59 ]
  %64 = load i8, i8* %7, align 1
  %65 = icmp eq i8 %64, 8
  br i1 %65, label %66, label %71

66:                                               ; preds = %62
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %3) #20
  br label %71

67:                                               ; preds = %49
  %68 = lshr i8 -103, %50
  %69 = and i8 %68, 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %52, label %71

71:                                               ; preds = %67, %62, %66
  %72 = phi i1 [ %63, %62 ], [ %63, %66 ], [ true, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #20
  br label %73

73:                                               ; preds = %1, %71
  %74 = phi i1 [ %72, %71 ], [ false, %1 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9LayoutBox40ComputeMinMaxLogicalWidthFromAspectRatioEv(%"class.blink::LayoutBox"*) local_unnamed_addr #9 align 2 {
  %2 = alloca %"class.blink::Length"*, align 8
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca <2 x float>, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca %"class.blink::Length"*, align 8
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = alloca i64, align 8
  %18 = bitcast i64* %17 to %"struct.blink::LogicalSize"*
  %19 = alloca %"struct.blink::NGBoxStrut", align 4
  %20 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #20
  %21 = bitcast i64* %17 to i32*
  store i32 -1431655766, i32* %21, align 8
  %22 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %18, i64 0, i32 1, i32 0
  store i32 -1431655766, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %24 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %25 = bitcast <2 x float>* %13 to %"class.blink::FloatSize"*
  %26 = bitcast <2 x float>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #20
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 5, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %28, i64 0, i32 1, i32 1
  %30 = bitcast %"class.blink::FloatSize"* %29 to i64*
  %31 = load i64, i64* %30, align 4
  %32 = bitcast <2 x float>* %13 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 9
  %34 = bitcast [20 x i8]* %33 to i160*
  %35 = load i160, i160* %34, align 8
  %36 = and i160 %35, 15211807202738752817960438464512
  %37 = icmp eq i160 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %1
  %39 = trunc i64 %31 to i32
  %40 = bitcast i32 %39 to float
  %41 = lshr i64 %31, 32
  %42 = trunc i64 %41 to i32
  %43 = bitcast i32 %42 to float
  %44 = insertelement <2 x float> undef, float %43, i32 0
  %45 = insertelement <2 x float> %44, float %40, i32 1
  store <2 x float> %45, <2 x float>* %13, align 8
  br label %46

46:                                               ; preds = %1, %38
  %47 = call i64 @_ZN5blink11LogicalSize24AspectRatioFromFloatSizeERKNS_9FloatSizeE(%"class.blink::FloatSize"* nonnull dereferenceable(8) %25) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #20
  store i64 %47, i64* %17, align 8
  %48 = call i32 @_ZNK5blink9LayoutBox30ConstrainLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %0, i32 0, i32 -64)
  %49 = call i32 @_ZNK5blink9LayoutBox30ConstrainLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %0, i32 2147483647, i32 -64)
  %50 = icmp eq i32 %49, -64
  %51 = select i1 %50, i32 2147483647, i32 %49
  %52 = bitcast %"struct.blink::NGBoxStrut"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #20
  %53 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %19, i64 0, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %19, i64 0, i32 1, i32 0
  %55 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %19, i64 0, i32 2, i32 0
  %56 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %19, i64 0, i32 3, i32 0
  %57 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %58 = bitcast %"struct.blink::NGBoxStrut"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %58, i8 -86, i64 16, i1 false)
  %59 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8, !noalias !22
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %59, i64 0, i32 0, i32 9
  %61 = bitcast [20 x i8]* %60 to i160*
  %62 = load i160, i160* %61, align 8, !noalias !22
  %63 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  %64 = and i160 %62, 15211807202738752817960438464512
  %65 = icmp eq i160 %64, 0
  %66 = and i160 %62, 41538374868278621028243970633760768
  %67 = icmp eq i160 %66, 0
  %68 = select i1 %67, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %69 = select i1 %67, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %70 = select i1 %65, { i64, i64 } %69, { i64, i64 } %68
  %71 = select i1 %65, { i64, i64 } %69, { i64, i64 } %68
  %72 = extractvalue { i64, i64 } %70, 0
  %73 = extractvalue { i64, i64 } %71, 1
  %74 = getelementptr inbounds i8, i8* %63, i64 %73
  %75 = bitcast i8* %74 to %"class.blink::LayoutBoxModelObject"*
  %76 = and i64 %72, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %46
  %79 = bitcast i8* %74 to i8**
  %80 = load i8*, i8** %79, align 8
  %81 = add i64 %72, -1
  %82 = getelementptr i8, i8* %80, i64 %81
  %83 = bitcast i8* %82 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %84 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %83, align 8
  br label %87

85:                                               ; preds = %46
  %86 = inttoptr i64 %72 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %87

87:                                               ; preds = %78, %85
  %88 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %84, %78 ], [ %86, %85 ]
  %89 = call i32 %88(%"class.blink::LayoutBoxModelObject"* %75) #20
  %90 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %91 = bitcast %"class.blink::Length"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91)
  %92 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93)
  %94 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94)
  %95 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %90, i64 0, i32 0, i32 9
  %96 = bitcast [20 x i8]* %95 to i160*
  %97 = load i160, i160* %96, align 8, !noalias !25
  %98 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %90, i64 0, i32 0, i32 7, i32 0, i32 0
  %99 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %98, align 8, !noalias !25
  %100 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %99, i64 0, i32 16
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %99, i64 0, i32 15
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %99, i64 0, i32 13
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %99, i64 0, i32 14
  store %"class.blink::Length"* %100, %"class.blink::Length"** %2, align 8, !alias.scope !25
  store %"class.blink::Length"* %101, %"class.blink::Length"** %3, align 8, !alias.scope !25
  store %"class.blink::Length"* %102, %"class.blink::Length"** %4, align 8, !alias.scope !25
  store %"class.blink::Length"* %103, %"class.blink::Length"** %5, align 8, !alias.scope !25
  %104 = and i160 %97, 15211807202738752817960438464512
  %105 = icmp eq i160 %104, 0
  %106 = and i160 %97, 41538374868278621028243970633760768
  %107 = icmp eq i160 %106, 0
  %108 = select i1 %107, %"class.blink::Length"** %5, %"class.blink::Length"** %3
  %109 = select i1 %107, %"class.blink::Length"** %2, %"class.blink::Length"** %4
  %110 = select i1 %105, %"class.blink::Length"** %108, %"class.blink::Length"** %109
  %111 = load %"class.blink::Length"*, %"class.blink::Length"** %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94)
  %112 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %57, %"class.blink::Length"* dereferenceable(8) %111) #20
  %113 = icmp slt i32 %112, 0
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %89, i32 %112) #20
  %116 = extractvalue { i32, i1 } %115, 1
  %117 = extractvalue { i32, i1 } %115, 0
  %118 = select i1 %116, i32 %114, i32 %117, !prof !2
  %119 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8, !noalias !28
  %120 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %119, i64 0, i32 0, i32 9
  %121 = bitcast [20 x i8]* %120 to i160*
  %122 = load i160, i160* %121, align 8, !noalias !28
  %123 = and i160 %122, 15211807202738752817960438464512
  %124 = icmp eq i160 %123, 0
  %125 = and i160 %122, 41538374868278621028243970633760768
  %126 = icmp eq i160 %125, 0
  %127 = select i1 %126, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %128 = select i1 %126, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %129 = select i1 %124, { i64, i64 } %128, { i64, i64 } %127
  %130 = select i1 %124, { i64, i64 } %128, { i64, i64 } %127
  %131 = extractvalue { i64, i64 } %129, 0
  %132 = extractvalue { i64, i64 } %130, 1
  %133 = getelementptr inbounds i8, i8* %63, i64 %132
  %134 = bitcast i8* %133 to %"class.blink::LayoutBoxModelObject"*
  %135 = and i64 %131, 1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %144, label %137

137:                                              ; preds = %87
  %138 = bitcast i8* %133 to i8**
  %139 = load i8*, i8** %138, align 8
  %140 = add i64 %131, -1
  %141 = getelementptr i8, i8* %139, i64 %140
  %142 = bitcast i8* %141 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %143 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %142, align 8
  br label %146

144:                                              ; preds = %87
  %145 = inttoptr i64 %131 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %146

146:                                              ; preds = %137, %144
  %147 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %143, %137 ], [ %145, %144 ]
  %148 = call i32 %147(%"class.blink::LayoutBoxModelObject"* %134) #20
  %149 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %150 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150)
  %151 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151)
  %152 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152)
  %153 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153)
  %154 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %149, i64 0, i32 0, i32 9
  %155 = bitcast [20 x i8]* %154 to i160*
  %156 = load i160, i160* %155, align 8, !noalias !31
  %157 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %149, i64 0, i32 0, i32 7, i32 0, i32 0
  %158 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %157, align 8, !noalias !31
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %158, i64 0, i32 16
  %160 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %158, i64 0, i32 15
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %158, i64 0, i32 13
  %162 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %158, i64 0, i32 14
  store %"class.blink::Length"* %159, %"class.blink::Length"** %6, align 8, !alias.scope !31
  store %"class.blink::Length"* %160, %"class.blink::Length"** %7, align 8, !alias.scope !31
  store %"class.blink::Length"* %161, %"class.blink::Length"** %8, align 8, !alias.scope !31
  store %"class.blink::Length"* %162, %"class.blink::Length"** %9, align 8, !alias.scope !31
  %163 = and i160 %156, 15211807202738752817960438464512
  %164 = icmp eq i160 %163, 0
  %165 = and i160 %156, 41538374868278621028243970633760768
  %166 = icmp eq i160 %165, 0
  %167 = select i1 %166, %"class.blink::Length"** %7, %"class.blink::Length"** %9
  %168 = select i1 %166, %"class.blink::Length"** %8, %"class.blink::Length"** %6
  %169 = select i1 %164, %"class.blink::Length"** %167, %"class.blink::Length"** %168
  %170 = load %"class.blink::Length"*, %"class.blink::Length"** %169, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153)
  %171 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %57, %"class.blink::Length"* dereferenceable(8) %170) #20
  %172 = icmp slt i32 %171, 0
  %173 = select i1 %172, i32 -2147483648, i32 2147483647
  %174 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %148, i32 %171) #20
  %175 = extractvalue { i32, i1 } %174, 1
  %176 = extractvalue { i32, i1 } %174, 0
  %177 = select i1 %175, i32 %173, i32 %176, !prof !2
  %178 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8, !noalias !34
  %179 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %178, i64 0, i32 0, i32 9
  %180 = bitcast [20 x i8]* %179 to i160*
  %181 = load i160, i160* %180, align 8, !noalias !34
  %182 = lshr i160 %181, 102
  %183 = trunc i160 %182 to i8
  %184 = and i8 %183, 3
  switch i8 %184, label %185 [
    i8 0, label %194
    i8 1, label %186
  ]

185:                                              ; preds = %146
  br label %186

186:                                              ; preds = %185, %146
  %187 = phi { i64, i64 } [ { i64 993, i64 0 }, %185 ], [ { i64 1001, i64 0 }, %146 ]
  %188 = extractvalue { i64, i64 } %187, 0
  %189 = extractvalue { i64, i64 } %187, 1
  %190 = getelementptr inbounds i8, i8* %63, i64 %189
  %191 = bitcast i8* %190 to %"class.blink::LayoutBoxModelObject"*
  %192 = and i64 %188, 1
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %204, label %194

194:                                              ; preds = %186, %146
  %195 = phi %"class.blink::LayoutBoxModelObject"* [ %191, %186 ], [ %57, %146 ]
  %196 = phi i8* [ %190, %186 ], [ %63, %146 ]
  %197 = phi i64 [ %188, %186 ], [ 977, %146 ]
  %198 = bitcast i8* %196 to i8**
  %199 = load i8*, i8** %198, align 8
  %200 = add i64 %197, -1
  %201 = getelementptr i8, i8* %199, i64 %200
  %202 = bitcast i8* %201 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %203 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %202, align 8
  br label %206

204:                                              ; preds = %186
  %205 = inttoptr i64 %188 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %206

206:                                              ; preds = %194, %204
  %207 = phi %"class.blink::LayoutBoxModelObject"* [ %195, %194 ], [ %191, %204 ]
  %208 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %203, %194 ], [ %205, %204 ]
  %209 = call i32 %208(%"class.blink::LayoutBoxModelObject"* %207) #20
  %210 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %211 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211)
  %212 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %212)
  %213 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213)
  %214 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %210, i64 0, i32 0, i32 9
  %215 = bitcast [20 x i8]* %214 to i160*
  %216 = load i160, i160* %215, align 8, !noalias !37
  %217 = lshr i160 %216, 102
  %218 = trunc i160 %217 to i8
  %219 = and i8 %218, 3
  %220 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %210, i64 0, i32 0, i32 7, i32 0, i32 0
  %221 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %220, align 8, !noalias !37
  %222 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %221, i64 0, i32 16
  %223 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %221, i64 0, i32 15
  %224 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %221, i64 0, i32 14
  store %"class.blink::Length"* %222, %"class.blink::Length"** %10, align 8, !alias.scope !37
  store %"class.blink::Length"* %223, %"class.blink::Length"** %11, align 8, !alias.scope !37
  store %"class.blink::Length"* %224, %"class.blink::Length"** %12, align 8, !alias.scope !37
  %225 = icmp eq i8 %219, 0
  %226 = icmp eq i8 %219, 1
  %227 = select i1 %226, %"class.blink::Length"** %11, %"class.blink::Length"** %12
  %228 = select i1 %225, %"class.blink::Length"** %10, %"class.blink::Length"** %227
  %229 = load %"class.blink::Length"*, %"class.blink::Length"** %228, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %212)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213)
  %230 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %57, %"class.blink::Length"* dereferenceable(8) %229) #20
  %231 = icmp slt i32 %230, 0
  %232 = select i1 %231, i32 -2147483648, i32 2147483647
  %233 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %209, i32 %230) #20
  %234 = extractvalue { i32, i1 } %233, 1
  %235 = extractvalue { i32, i1 } %233, 0
  %236 = select i1 %234, i32 %232, i32 %235, !prof !2
  %237 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8, !noalias !40
  %238 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %237, i64 0, i32 0, i32 9
  %239 = bitcast [20 x i8]* %238 to i160*
  %240 = load i160, i160* %239, align 8, !noalias !40
  %241 = lshr i160 %240, 102
  %242 = trunc i160 %241 to i8
  %243 = and i8 %242, 3
  switch i8 %243, label %244 [
    i8 0, label %253
    i8 1, label %245
  ]

244:                                              ; preds = %206
  br label %245

245:                                              ; preds = %244, %206
  %246 = phi { i64, i64 } [ { i64 1001, i64 0 }, %244 ], [ { i64 993, i64 0 }, %206 ]
  %247 = extractvalue { i64, i64 } %246, 0
  %248 = extractvalue { i64, i64 } %246, 1
  %249 = getelementptr inbounds i8, i8* %63, i64 %248
  %250 = bitcast i8* %249 to %"class.blink::LayoutBoxModelObject"*
  %251 = and i64 %247, 1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %245, %206
  %254 = phi %"class.blink::LayoutBoxModelObject"* [ %250, %245 ], [ %57, %206 ]
  %255 = phi i8* [ %249, %245 ], [ %63, %206 ]
  %256 = phi i64 [ %247, %245 ], [ 985, %206 ]
  %257 = bitcast i8* %255 to i8**
  %258 = load i8*, i8** %257, align 8
  %259 = add i64 %256, -1
  %260 = getelementptr i8, i8* %258, i64 %259
  %261 = bitcast i8* %260 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %262 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %261, align 8
  br label %265

263:                                              ; preds = %245
  %264 = inttoptr i64 %247 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %265

265:                                              ; preds = %253, %263
  %266 = phi %"class.blink::LayoutBoxModelObject"* [ %254, %253 ], [ %250, %263 ]
  %267 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %262, %253 ], [ %264, %263 ]
  %268 = call i32 %267(%"class.blink::LayoutBoxModelObject"* %266) #20
  %269 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %270 = bitcast %"class.blink::Length"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %270)
  %271 = bitcast %"class.blink::Length"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %271)
  %272 = bitcast %"class.blink::Length"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %272)
  %273 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %269, i64 0, i32 0, i32 9
  %274 = bitcast [20 x i8]* %273 to i160*
  %275 = load i160, i160* %274, align 8, !noalias !43
  %276 = lshr i160 %275, 102
  %277 = trunc i160 %276 to i8
  %278 = and i8 %277, 3
  %279 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %269, i64 0, i32 0, i32 7, i32 0, i32 0
  %280 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %279, align 8, !noalias !43
  %281 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %280, i64 0, i32 15
  %282 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %280, i64 0, i32 13
  %283 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %280, i64 0, i32 14
  store %"class.blink::Length"* %281, %"class.blink::Length"** %14, align 8, !alias.scope !43
  store %"class.blink::Length"* %282, %"class.blink::Length"** %15, align 8, !alias.scope !43
  store %"class.blink::Length"* %283, %"class.blink::Length"** %16, align 8, !alias.scope !43
  %284 = icmp eq i8 %278, 0
  %285 = icmp eq i8 %278, 1
  %286 = select i1 %285, %"class.blink::Length"** %16, %"class.blink::Length"** %14
  %287 = select i1 %284, %"class.blink::Length"** %15, %"class.blink::Length"** %286
  %288 = load %"class.blink::Length"*, %"class.blink::Length"** %287, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %270)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %271)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %272)
  %289 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %57, %"class.blink::Length"* dereferenceable(8) %288) #20
  %290 = icmp slt i32 %289, 0
  %291 = select i1 %290, i32 -2147483648, i32 2147483647
  %292 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %268, i32 %289) #20
  %293 = extractvalue { i32, i1 } %292, 1
  %294 = extractvalue { i32, i1 } %292, 0
  %295 = select i1 %293, i32 %291, i32 %294, !prof !2
  store i32 %118, i32* %53, align 4
  store i32 %177, i32* %54, align 4
  store i32 %236, i32* %55, align 4
  store i32 %295, i32* %56, align 4
  %296 = icmp sgt i32 %48, 0
  br i1 %296, label %297, label %326

297:                                              ; preds = %265
  %298 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %299 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %298, i64 0, i32 0, i32 5, i32 0, i32 0
  %300 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %299, align 8
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %300, i64 0, i32 1, i32 1, i32 0
  %302 = load float, float* %301, align 4
  %303 = fcmp oeq float %302, 0.000000e+00
  br i1 %303, label %323, label %304

304:                                              ; preds = %297
  %305 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %300, i64 0, i32 1, i32 1, i32 1
  %306 = load float, float* %305, align 4
  %307 = fcmp oeq float %306, 0.000000e+00
  %308 = fcmp olt float %302, 1.562500e-02
  %309 = or i1 %308, %307
  %310 = fcmp olt float %306, 1.562500e-02
  %311 = or i1 %310, %309
  br i1 %311, label %323, label %312

312:                                              ; preds = %304
  %313 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %300, i64 0, i32 1, i32 0
  %314 = load i8, i8* %313, align 4
  %315 = and i8 %314, 3
  %316 = icmp eq i8 %315, 2
  br i1 %316, label %317, label %323

317:                                              ; preds = %312
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %300, i64 0, i32 11
  %319 = load i8, i8* %318, align 4
  %320 = lshr i8 %319, 1
  %321 = and i8 %320, 1
  %322 = zext i8 %321 to i32
  br label %323

323:                                              ; preds = %297, %304, %312, %317
  %324 = phi i32 [ %322, %317 ], [ 1, %312 ], [ 1, %304 ], [ 1, %297 ]
  %325 = call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %19, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %18, i32 %324, i32 %48) #20
  br label %326

326:                                              ; preds = %323, %265
  %327 = phi i32 [ %325, %323 ], [ 0, %265 ]
  %328 = icmp eq i32 %51, 2147483647
  br i1 %328, label %358, label %329

329:                                              ; preds = %326
  %330 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %331 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %330, i64 0, i32 0, i32 5, i32 0, i32 0
  %332 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %331, align 8
  %333 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %332, i64 0, i32 1, i32 1, i32 0
  %334 = load float, float* %333, align 4
  %335 = fcmp oeq float %334, 0.000000e+00
  br i1 %335, label %355, label %336

336:                                              ; preds = %329
  %337 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %332, i64 0, i32 1, i32 1, i32 1
  %338 = load float, float* %337, align 4
  %339 = fcmp oeq float %338, 0.000000e+00
  %340 = fcmp olt float %334, 1.562500e-02
  %341 = or i1 %340, %339
  %342 = fcmp olt float %338, 1.562500e-02
  %343 = or i1 %342, %341
  br i1 %343, label %355, label %344

344:                                              ; preds = %336
  %345 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %332, i64 0, i32 1, i32 0
  %346 = load i8, i8* %345, align 4
  %347 = and i8 %346, 3
  %348 = icmp eq i8 %347, 2
  br i1 %348, label %349, label %355

349:                                              ; preds = %344
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %332, i64 0, i32 11
  %351 = load i8, i8* %350, align 4
  %352 = lshr i8 %351, 1
  %353 = and i8 %352, 1
  %354 = zext i8 %353 to i32
  br label %355

355:                                              ; preds = %329, %336, %344, %349
  %356 = phi i32 [ %354, %349 ], [ 1, %344 ], [ 1, %336 ], [ 1, %329 ]
  %357 = call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %19, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %18, i32 %356, i32 %51) #20
  br label %358

358:                                              ; preds = %326, %355
  %359 = phi i32 [ 2147483647, %326 ], [ %357, %355 ]
  %360 = icmp slt i32 %359, %327
  %361 = select i1 %360, i32 %327, i32 %359
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #20
  %362 = zext i32 %361 to i64
  %363 = shl nuw i64 %362, 32
  %364 = zext i32 %327 to i64
  %365 = or i64 %363, %364
  ret i64 %365
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox24ComputeLogicalWidthUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitEPKNS_11LayoutBlockE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"* dereferenceable(8), i32, %"class.blink::LayoutBlock"*) local_unnamed_addr #4 align 2 {
  %6 = alloca %"class.blink::LayoutUnit", align 4
  %7 = alloca %"class.blink::LayoutUnit", align 4
  %8 = icmp eq i32 %1, 1
  %9 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 0
  %12 = and i1 %8, %11
  br i1 %12, label %13, label %28

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %15 = tail call i32 @_ZNK5blink20LayoutBoxModelObject40CollapsedBorderAndCSSPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %14) #20
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %17 = bitcast %"class.blink::ComputedStyle"** %16 to %"class.blink::ComputedStyleBase"**
  %18 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %18, i64 0, i32 5, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %20, i64 0, i32 11
  %22 = load i8, i8* %21, align 4
  %23 = and i8 %22, 2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %132

25:                                               ; preds = %13
  %26 = icmp sgt i32 %15, 0
  %27 = select i1 %26, i32 %15, i32 0
  br label %132

28:                                               ; preds = %5
  switch i8 %10, label %62 [
    i8 2, label %29
    i8 1, label %29
    i8 8, label %29
  ]

29:                                               ; preds = %28, %28, %28
  %30 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %2, i32 %3) #20
  %31 = sitofp i32 %30 to float
  %32 = fmul float %31, 1.562500e-02
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %34 = tail call i32 @_ZNK5blink20LayoutBoxModelObject40CollapsedBorderAndCSSPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %33) #20
  %35 = fmul float %32, 6.400000e+01
  %36 = fcmp ult float %35, 0xC1E0000000000000
  %37 = fcmp ugt float %35, 0x41DFFFFFE0000000
  %38 = fcmp ogt float %35, 0xC1E0000000000000
  %39 = select i1 %38, float %35, float 0xC1E0000000000000
  %40 = fptosi float %39 to i32
  %41 = select i1 %36, i32 0, i32 2147483647
  %42 = select i1 %37, i32 %41, i32 %40
  %43 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %44 = bitcast %"class.blink::ComputedStyle"** %43 to %"class.blink::ComputedStyleBase"**
  %45 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %45, i64 0, i32 5, i32 0, i32 0
  %47 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %47, i64 0, i32 11
  %49 = load i8, i8* %48, align 4
  %50 = and i8 %49, 2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %29
  %53 = icmp slt i32 %34, 0
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %42, i32 %34) #20
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !2
  br label %132

59:                                               ; preds = %29
  %60 = icmp slt i32 %42, %34
  %61 = select i1 %60, i32 %34, i32 %42
  br label %132

62:                                               ; preds = %28
  %63 = add i8 %10, -3
  %64 = icmp ult i8 %63, 5
  br i1 %64, label %65, label %67

65:                                               ; preds = %62
  %66 = tail call i32 @_ZNK5blink9LayoutBox33ComputeIntrinsicLogicalWidthUsingERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, %"class.blink::Length"* dereferenceable(8) %2, i32 %3)
  br label %132

67:                                               ; preds = %62
  %68 = bitcast %"class.blink::LayoutUnit"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #20
  %69 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  store i32 0, i32* %69, align 4
  %70 = bitcast %"class.blink::LayoutUnit"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %70) #20
  %71 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 0, i32 0
  store i32 0, i32* %71, align 4
  %72 = call i32 @_ZNK5blink9LayoutBox20FillAvailableMeasureENS_10LayoutUnitERS1_S2_(%"class.blink::LayoutBox"* %0, i32 %3, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %6, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %7)
  %73 = icmp eq %"class.blink::LayoutBlock"* %4, null
  br i1 %73, label %74, label %76

74:                                               ; preds = %67
  %75 = tail call zeroext i1 @_ZNK5blink9LayoutBox19ShrinkToAvoidFloatsEv(%"class.blink::LayoutBox"* %0)
  br label %101

76:                                               ; preds = %67
  %77 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %4, i64 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.blink::LayoutBlock"* %4 to i1 (%"class.blink::LayoutObject"*)***
  %79 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %78, align 8
  %80 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %79, i64 24
  %81 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %80, align 8
  %82 = tail call zeroext i1 %81(%"class.blink::LayoutObject"* %77) #20
  %83 = bitcast %"class.blink::LayoutBlock"* %4 to %"class.blink::LayoutBlockFlow"*
  %84 = select i1 %82, %"class.blink::LayoutBlockFlow"* %83, %"class.blink::LayoutBlockFlow"* null
  %85 = tail call zeroext i1 @_ZNK5blink9LayoutBox19ShrinkToAvoidFloatsEv(%"class.blink::LayoutBox"* %0)
  %86 = and i1 %82, %85
  br i1 %86, label %87, label %101

87:                                               ; preds = %76
  %88 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %84, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %88, align 8
  %90 = icmp eq %"class.blink::FloatingObjects"* %89, null
  br i1 %90, label %101, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %89, i64 0, i32 0, i32 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %101, label %95

95:                                               ; preds = %91
  %96 = load i32, i32* %69, align 4
  %97 = load i32, i32* %71, align 4
  %98 = tail call i32 @_ZNK5blink9LayoutBox31ShrinkLogicalWidthToAvoidFloatsENS_10LayoutUnitES1_PKNS_15LayoutBlockFlowE(%"class.blink::LayoutBox"* %0, i32 %96, i32 %97, %"class.blink::LayoutBlockFlow"* nonnull %84)
  %99 = icmp slt i32 %98, %72
  %100 = select i1 %99, i32 %98, i32 %72
  br label %101

101:                                              ; preds = %91, %87, %74, %95, %76
  %102 = phi i32 [ %72, %91 ], [ %72, %87 ], [ %72, %74 ], [ %100, %95 ], [ %72, %76 ]
  %103 = icmp eq i32 %1, 0
  br i1 %103, label %104, label %130

104:                                              ; preds = %101
  %105 = tail call zeroext i1 @_ZNK5blink9LayoutBox29SizesLogicalWidthToFitContentERKNS_6LengthE(%"class.blink::LayoutBox"* %0, %"class.blink::Length"* dereferenceable(8) %2)
  br i1 %105, label %106, label %130

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %108 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %108, i64 0, i32 0, i32 9
  %110 = bitcast [20 x i8]* %109 to i160*
  %111 = load i160, i160* %110, align 8
  %112 = and i160 %111, 15211807202738752817960438464512
  %113 = icmp eq i160 %112, 0
  %114 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %115 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %116 = select i1 %113, i32* %114, i32* %115
  %117 = load i32, i32* %116, align 4
  tail call void @_ZN5blink9LayoutBox15SetLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 0)
  %118 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %119 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %118, align 8
  %120 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %119, i64 69
  %121 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %120, align 8
  %122 = tail call i64 %121(%"class.blink::LayoutBox"* %0) #20
  %123 = trunc i64 %122 to i32
  %124 = lshr i64 %122, 32
  %125 = trunc i64 %124 to i32
  %126 = icmp sgt i32 %102, %125
  %127 = select i1 %126, i32 %125, i32 %102
  %128 = icmp sgt i32 %127, %123
  %129 = select i1 %128, i32 %127, i32 %123
  tail call void @_ZN5blink9LayoutBox15SetLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 %117)
  br label %130

130:                                              ; preds = %101, %104, %106
  %131 = phi i32 [ %129, %106 ], [ %102, %104 ], [ %102, %101 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %70) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #20
  br label %132

132:                                              ; preds = %13, %59, %52, %25, %130, %65
  %133 = phi i32 [ %66, %65 ], [ %131, %130 ], [ %27, %25 ], [ %58, %52 ], [ %61, %59 ], [ %15, %13 ]
  ret i32 %133
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox40ShouldComputeLogicalWidthFromAspectRatioEPNS_10LayoutUnitE(%"class.blink::LayoutBox"*, %"class.blink::LayoutUnit"*) local_unnamed_addr #4 align 2 {
  %3 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %5 = bitcast %"class.blink::ComputedStyle"** %4 to %"class.blink::ComputedStyleBase"**
  %6 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %6, i64 0, i32 5, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %8, i64 0, i32 1, i32 1, i32 0
  %10 = load float, float* %9, align 4
  %11 = fcmp oeq float %10, 0.000000e+00
  br i1 %11, label %92, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %8, i64 0, i32 1, i32 1, i32 1
  %14 = load float, float* %13, align 4
  %15 = fcmp oeq float %14, 0.000000e+00
  %16 = fcmp olt float %10, 1.562500e-02
  %17 = or i1 %16, %15
  %18 = fcmp olt float %14, 1.562500e-02
  %19 = or i1 %18, %17
  br i1 %19, label %92, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %8, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 4
  %23 = and i8 %22, 3
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %92, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = icmp eq %"class.blink::LayoutObject"* %27, null
  br i1 %28, label %47, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.blink::LayoutObject"* %27 to i1 (%"class.blink::LayoutObject"*, i32)***
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %31, i64 92
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::LayoutObject"* nonnull %27, i32 10) #20
  br i1 %34, label %35, label %47

35:                                               ; preds = %29
  %36 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %5, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %36, i64 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %38, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %42, i64 0, i32 44, i32 0
  %44 = load i8, i8* %43, align 4
  %45 = and i8 %44, 15
  %46 = icmp eq i8 %45, 3
  br i1 %46, label %92, label %47

47:                                               ; preds = %25, %35, %29
  %48 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %49 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %48, align 8
  %50 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %49, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %53 = load i8, i8* %52, align 4, !range !4
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %79

55:                                               ; preds = %51, %47
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %57 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %56, align 8
  %58 = icmp eq %"struct.blink::LayoutBoxRareData"* %57, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %57, i64 0, i32 2, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, -64
  br i1 %62, label %63, label %79

63:                                               ; preds = %59, %55
  %64 = tail call zeroext i1 @_ZNK5blink9LayoutBox49ShouldComputeLogicalWidthFromAspectRatioAndInsetsEv(%"class.blink::LayoutBox"* %0)
  br i1 %64, label %79, label %65

65:                                               ; preds = %63
  %66 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %66, i64 0, i32 0, i32 9
  %68 = bitcast [20 x i8]* %67 to i160*
  %69 = load i160, i160* %68, align 8
  %70 = and i160 %69, 15211807202738752817960438464512
  %71 = icmp eq i160 %70, 0
  %72 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %66, i64 0, i32 0, i32 5, i32 0, i32 0
  %73 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %73, i64 0, i32 3
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %73, i64 0, i32 8
  %76 = select i1 %71, %"class.blink::Length"* %74, %"class.blink::Length"* %75
  %77 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %76, i64 0, i32 2
  %78 = load i8, i8* %77, align 1
  switch i8 %78, label %92 [
    i8 2, label %79
    i8 8, label %79
    i8 1, label %79
  ]

79:                                               ; preds = %59, %65, %65, %65, %51, %63
  %80 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %80) #20
  %81 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 1
  %83 = bitcast %"class.blink::LayoutUnit"* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %83, i8 0, i64 20, i1 false) #20
  store i32 -64, i32* %81, align 4
  call void @_ZNK5blink9LayoutBox20ComputeLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %0, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %3)
  %84 = load i32, i32* %81, align 4
  %85 = icmp eq i32 %84, -64
  br i1 %85, label %90, label %86

86:                                               ; preds = %79
  %87 = icmp eq %"class.blink::LayoutUnit"* %1, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1, i64 0, i32 0
  store i32 %84, i32* %89, align 4
  br label %90

90:                                               ; preds = %88, %86, %79
  %91 = phi i1 [ false, %79 ], [ true, %86 ], [ true, %88 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %80) #20
  br label %92

92:                                               ; preds = %65, %2, %12, %35, %20, %90
  %93 = phi i1 [ %91, %90 ], [ false, %20 ], [ false, %35 ], [ false, %12 ], [ false, %2 ], [ false, %65 ]
  ret i1 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox30ConstrainLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.blink::Length"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.blink::Length"*
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 15211807202738752817960438464512
  %16 = icmp eq i160 %15, 0
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %18, i64 0, i32 4
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %18, i64 0, i32 5
  %21 = select i1 %16, %"class.blink::Length"* %19, %"class.blink::Length"* %20
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %21, i64 0, i32 2
  %23 = load i8, i8* %22, align 1
  switch i8 %23, label %24 [
    i8 12, label %37
    i8 3, label %37
    i8 4, label %37
    i8 5, label %37
    i8 7, label %37
  ]

24:                                               ; preds = %3
  %25 = tail call i32 @_ZNK5blink9LayoutBox25ComputeLogicalHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 2, %"class.blink::Length"* dereferenceable(8) %21, i32 %2)
  %26 = icmp eq i32 %25, -64
  %27 = icmp slt i32 %25, %1
  %28 = select i1 %27, i32 %25, i32 %1
  %29 = select i1 %26, i32 %1, i32 %28
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %30, i64 0, i32 0, i32 9
  %32 = bitcast [20 x i8]* %31 to i160*
  %33 = load i160, i160* %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %30, i64 0, i32 0, i32 5, i32 0, i32 0
  %35 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %34, align 8
  %36 = and i160 %33, 15211807202738752817960438464512
  br label %37

37:                                               ; preds = %3, %3, %3, %3, %3, %24
  %38 = phi i160 [ %15, %3 ], [ %15, %3 ], [ %15, %3 ], [ %15, %3 ], [ %15, %3 ], [ %36, %24 ]
  %39 = phi i32 [ %1, %3 ], [ %1, %3 ], [ %1, %3 ], [ %1, %3 ], [ %1, %3 ], [ %29, %24 ]
  %40 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %18, %3 ], [ %18, %3 ], [ %18, %3 ], [ %18, %3 ], [ %18, %3 ], [ %35, %24 ]
  %41 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #20
  %42 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %43 = icmp eq i160 %38, 0
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %40, i64 0, i32 6
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %40, i64 0, i32 7
  %46 = select i1 %43, %"class.blink::Length"* %44, %"class.blink::Length"* %45
  %47 = bitcast %"class.blink::Length"* %46 to i64*
  %48 = load i64, i64* %47, align 4
  store i64 %48, i64* %4, align 8
  %49 = and i64 %48, 280375465082880
  %50 = icmp eq i64 %49, 8796093022208
  %51 = lshr i64 %48, 40
  %52 = trunc i64 %51 to i8
  br i1 %50, label %53, label %55

53:                                               ; preds = %37
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #20
  %54 = load i8, i8* %42, align 1
  br label %55

55:                                               ; preds = %37, %53
  %56 = phi i8 [ %52, %37 ], [ %54, %53 ]
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %87

58:                                               ; preds = %55
  %59 = call zeroext i1 @_ZNK5blink9LayoutBox41ShouldComputeLogicalHeightFromAspectRatioEv(%"class.blink::LayoutBox"* %0)
  br i1 %59, label %60, label %85

60:                                               ; preds = %58
  switch i32 %2, label %61 [
    i32 -64, label %85
    i32 2147483647, label %85
  ]

61:                                               ; preds = %60
  %62 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %62, i64 0, i32 0, i32 9
  %64 = bitcast [20 x i8]* %63 to i160*
  %65 = load i160, i160* %64, align 8
  %66 = and i160 %65, 15211807202738752817960438464512
  %67 = icmp eq i160 %66, 0
  %68 = select i1 %67, i160 77, i160 74
  %69 = lshr i160 %65, %68
  %70 = and i160 %69, 7
  %71 = icmp eq i160 %70, 2
  br i1 %71, label %72, label %85

72:                                               ; preds = %61
  %73 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #20
  %74 = bitcast i64* %6 to float*
  %75 = sitofp i32 %2 to float
  %76 = fmul float %75, 1.562500e-02
  store float %76, float* %74, align 8, !alias.scope !46
  %77 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 1
  store i8 0, i8* %77, align 4, !alias.scope !46
  %78 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  store i8 2, i8* %78, align 1, !alias.scope !46
  %79 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 3
  store i8 1, i8* %79, align 2, !alias.scope !46
  %80 = load i8, i8* %42, align 1
  %81 = icmp eq i8 %80, 8
  br i1 %81, label %82, label %83

82:                                               ; preds = %72
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #20
  br label %83

83:                                               ; preds = %72, %82
  %84 = load i64, i64* %6, align 8
  store i64 %84, i64* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #20
  br label %85

85:                                               ; preds = %60, %60, %58, %61, %83
  %86 = load i8, i8* %42, align 1
  br label %87

87:                                               ; preds = %85, %55
  %88 = phi i8 [ %86, %85 ], [ %56, %55 ]
  switch i8 %88, label %101 [
    i8 3, label %89
    i8 4, label %89
    i8 5, label %89
    i8 7, label %89
  ]

89:                                               ; preds = %87, %87, %87, %87
  %90 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 7, i1 false) #20, !alias.scope !49
  %91 = icmp eq i8 %88, 8
  br i1 %91, label %94, label %92

92:                                               ; preds = %89
  %93 = load i64, i64* %8, align 8
  store i64 %93, i64* %4, align 8
  br label %100

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 2
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #20
  %96 = load i8, i8* %95, align 1
  %97 = icmp eq i8 %96, 8
  %98 = load i64, i64* %8, align 8
  store i64 %98, i64* %4, align 8
  br i1 %97, label %99, label %100

99:                                               ; preds = %94
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %9) #20
  br label %100

100:                                              ; preds = %92, %94, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #20
  br label %101

101:                                              ; preds = %87, %100
  %102 = call i32 @_ZNK5blink9LayoutBox25ComputeLogicalHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 1, %"class.blink::Length"* nonnull dereferenceable(8) %5, i32 %2)
  %103 = icmp slt i32 %39, %102
  %104 = select i1 %103, i32 %102, i32 %39
  %105 = load i8, i8* %42, align 1
  %106 = icmp eq i8 %105, 8
  br i1 %106, label %107, label %108

107:                                              ; preds = %101
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #20
  br label %108

108:                                              ; preds = %101, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #20
  ret i32 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox25ComputeLogicalHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #4 align 2 {
  %5 = tail call i32 @_ZNK5blink9LayoutBox44ComputeContentAndScrollbarLogicalHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 %1, %"class.blink::Length"* dereferenceable(8) %2, i32 %3)
  %6 = icmp eq i32 %5, -64
  br i1 %6, label %51, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  switch i8 %9, label %42 [
    i8 2, label %10
    i8 1, label %10
    i8 8, label %10
  ]

10:                                               ; preds = %7, %7, %7
  %11 = sitofp i32 %5 to float
  %12 = fmul float %11, 1.562500e-02
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %14 = tail call i32 @_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %13) #20
  %15 = fmul float %12, 6.400000e+01
  %16 = fcmp ult float %15, 0xC1E0000000000000
  %17 = fcmp ugt float %15, 0x41DFFFFFE0000000
  %18 = fcmp ogt float %15, 0xC1E0000000000000
  %19 = select i1 %18, float %15, float 0xC1E0000000000000
  %20 = fptosi float %19 to i32
  %21 = select i1 %16, i32 0, i32 2147483647
  %22 = select i1 %17, i32 %21, i32 %20
  %23 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %24 = bitcast %"class.blink::ComputedStyle"** %23 to %"class.blink::ComputedStyleBase"**
  %25 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %25, i64 0, i32 5, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %27, i64 0, i32 11
  %29 = load i8, i8* %28, align 4
  %30 = and i8 %29, 2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %10
  %33 = icmp slt i32 %14, 0
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 %14) #20
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !2
  br label %51

39:                                               ; preds = %10
  %40 = icmp slt i32 %22, %14
  %41 = select i1 %40, i32 %14, i32 %22
  br label %51

42:                                               ; preds = %7
  %43 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %44 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %43)
  %45 = icmp slt i32 %44, 0
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %5, i32 %44) #20
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !2
  br label %51

51:                                               ; preds = %4, %39, %32, %42
  %52 = phi i32 [ %50, %42 ], [ -64, %4 ], [ %38, %32 ], [ %41, %39 ]
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 5, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %12, i64 0, i32 4
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %12, i64 0, i32 5
  %15 = select i1 %10, %"class.blink::Length"* %13, %"class.blink::Length"* %14
  %16 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %15, i64 0, i32 2
  %17 = load i8, i8* %16, align 1
  switch i8 %17, label %53 [
    i8 12, label %59
    i8 1, label %18
  ]

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %12, i64 0, i32 3
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %12, i64 0, i32 8
  %21 = select i1 %10, %"class.blink::Length"* %19, %"class.blink::Length"* %20
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %21, i64 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %25, label %53

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %21, i64 0, i32 3
  %27 = load i8, i8* %26, align 2, !range !4
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.blink::Length"* %21 to float*
  %31 = load float, float* %30, align 4
  br label %36

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %21, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sitofp i32 %34 to float
  br label %36

36:                                               ; preds = %29, %32
  %37 = phi float [ %31, %29 ], [ %35, %32 ]
  %38 = sitofp i32 %1 to float
  %39 = fmul float %38, 1.562500e-02
  %40 = fdiv float %39, %37
  %41 = fmul float %40, 1.000000e+02
  %42 = fmul float %41, 6.400000e+01
  %43 = fcmp ult float %42, 0xC1E0000000000000
  %44 = fcmp ugt float %42, 0x41DFFFFFE0000000
  %45 = fcmp ogt float %42, 0xC1E0000000000000
  %46 = select i1 %45, float %42, float 0xC1E0000000000000
  %47 = fptosi float %46 to i32
  %48 = select i1 %43, i32 0, i32 2147483647
  %49 = select i1 %44, i32 %48, i32 %47
  %50 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %15, i32 %49) #20
  %51 = icmp slt i32 %50, %1
  %52 = select i1 %51, i32 %50, i32 %1
  br label %59

53:                                               ; preds = %3, %18
  %54 = tail call i32 @_ZNK5blink9LayoutBox27ComputeContentLogicalHeightENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 2, %"class.blink::Length"* dereferenceable(8) %15, i32 %2)
  %55 = icmp eq i32 %54, -64
  br i1 %55, label %59, label %56

56:                                               ; preds = %53
  %57 = icmp slt i32 %54, %1
  %58 = select i1 %57, i32 %54, i32 %1
  br label %59

59:                                               ; preds = %56, %53, %3, %36
  %60 = phi i32 [ %1, %3 ], [ %52, %36 ], [ %1, %53 ], [ %58, %56 ]
  %61 = load i160, i160* %7, align 8
  %62 = and i160 %61, 15211807202738752817960438464512
  %63 = icmp eq i160 %62, 0
  %64 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %11, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %64, i64 0, i32 6
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %64, i64 0, i32 7
  %67 = select i1 %63, %"class.blink::Length"* %65, %"class.blink::Length"* %66
  %68 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %67, i64 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 1
  br i1 %70, label %71, label %104

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %64, i64 0, i32 3
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %64, i64 0, i32 8
  %74 = select i1 %63, %"class.blink::Length"* %72, %"class.blink::Length"* %73
  %75 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %74, i64 0, i32 2
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 1
  br i1 %77, label %78, label %104

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %74, i64 0, i32 3
  %80 = load i8, i8* %79, align 2, !range !4
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %78
  %83 = bitcast %"class.blink::Length"* %74 to float*
  %84 = load float, float* %83, align 4
  br label %89

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %74, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = sitofp i32 %87 to float
  br label %89

89:                                               ; preds = %82, %85
  %90 = phi float [ %84, %82 ], [ %88, %85 ]
  %91 = sitofp i32 %60 to float
  %92 = fmul float %91, 1.562500e-02
  %93 = fdiv float %92, %90
  %94 = fmul float %93, 1.000000e+02
  %95 = fmul float %94, 6.400000e+01
  %96 = fcmp ult float %95, 0xC1E0000000000000
  %97 = fcmp ugt float %95, 0x41DFFFFFE0000000
  %98 = fcmp ogt float %95, 0xC1E0000000000000
  %99 = select i1 %98, float %95, float 0xC1E0000000000000
  %100 = fptosi float %99 to i32
  %101 = select i1 %96, i32 0, i32 2147483647
  %102 = select i1 %97, i32 %101, i32 %100
  %103 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %67, i32 %102) #20
  br label %106

104:                                              ; preds = %71, %59
  %105 = tail call i32 @_ZNK5blink9LayoutBox27ComputeContentLogicalHeightENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 1, %"class.blink::Length"* dereferenceable(8) %67, i32 %2)
  br label %106

106:                                              ; preds = %104, %89
  %107 = phi i32 [ %105, %104 ], [ %103, %89 ]
  %108 = icmp slt i32 %60, %107
  %109 = select i1 %108, i32 %107, i32 %60
  ret i32 %109
}

declare i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox27ComputeContentLogicalHeightENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #4 align 2 {
  %5 = tail call i32 @_ZNK5blink9LayoutBox44ComputeContentAndScrollbarLogicalHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 %1, %"class.blink::Length"* dereferenceable(8) %2, i32 %3)
  %6 = icmp eq i32 %5, -64
  br i1 %6, label %64, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  switch i8 %9, label %43 [
    i8 2, label %10
    i8 1, label %10
    i8 8, label %10
  ]

10:                                               ; preds = %7, %7, %7
  %11 = sitofp i32 %5 to float
  %12 = fmul float %11, 1.562500e-02
  %13 = fmul float %12, 6.400000e+01
  %14 = fcmp ult float %13, 0xC1E0000000000000
  %15 = fcmp ugt float %13, 0x41DFFFFFE0000000
  %16 = fcmp ogt float %13, 0xC1E0000000000000
  %17 = select i1 %16, float %13, float 0xC1E0000000000000
  %18 = fptosi float %17 to i32
  %19 = select i1 %14, i32 0, i32 2147483647
  %20 = select i1 %15, i32 %19, i32 %18
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %22 = bitcast %"class.blink::ComputedStyle"** %21 to %"class.blink::ComputedStyleBase"**
  %23 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %23, i64 0, i32 5, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %25, i64 0, i32 11
  %27 = load i8, i8* %26, align 4
  %28 = and i8 %27, 2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %39

30:                                               ; preds = %10
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %32 = tail call i32 @_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %31) #20
  %33 = icmp sgt i32 %32, -1
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %20, i32 %32) #20
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !2
  br label %39

39:                                               ; preds = %10, %30
  %40 = phi i32 [ %38, %30 ], [ %20, %10 ]
  %41 = icmp sgt i32 %40, 0
  %42 = select i1 %41, i32 %40, i32 0
  br label %43

43:                                               ; preds = %7, %39
  %44 = phi i32 [ %42, %39 ], [ %5, %7 ]
  %45 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %0)
  %46 = extractvalue { i64, i64 } %45, 1
  %47 = trunc i64 %46 to i32
  %48 = lshr i64 %46, 32
  %49 = trunc i64 %48 to i32
  %50 = icmp slt i32 %49, 0
  %51 = select i1 %50, i32 -2147483648, i32 2147483647
  %52 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %47, i32 %49) #20
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 %51, i32 %54, !prof !2
  %56 = icmp sgt i32 %55, -1
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %44, i32 %55) #20
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !2
  %62 = icmp sgt i32 %61, 0
  %63 = select i1 %62, i32 %61, i32 0
  br label %64

64:                                               ; preds = %4, %43
  %65 = phi i32 [ %63, %43 ], [ -64, %4 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"*, %"class.blink::LayoutPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 4294967296
  %8 = icmp eq i96 %7, 0
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %10 = bitcast %"class.blink::LayoutRect"* %9 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = trunc i64 %11 to i32
  br i1 %8, label %13, label %29

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, %12
  br i1 %16, label %17, label %23

17:                                               ; preds = %13
  %18 = lshr i64 %11, 32
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, %19
  br i1 %22, label %175, label %23

23:                                               ; preds = %17, %13
  %24 = bitcast %"class.blink::LayoutPoint"* %1 to i64*
  %25 = load i64, i64* %24, align 4
  store i64 %25, i64* %10, align 4
  %26 = and i96 %6, 63
  %27 = icmp eq i96 %26, 0
  br i1 %27, label %28, label %175

28:                                               ; preds = %23
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #20
  br label %175

29:                                               ; preds = %2
  %30 = lshr i64 %11, 32
  %31 = trunc i64 %30 to i32
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %33 = bitcast %"class.blink::LayoutSize"* %32 to i64*
  %34 = load i64, i64* %33, align 4
  %35 = trunc i64 %34 to i32
  %36 = lshr i64 %34, 32
  %37 = trunc i64 %36 to i32
  %38 = srem i32 %12, 64
  %39 = icmp slt i32 %35, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %35) #20
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !2
  %45 = sdiv i32 %44, 64
  %46 = srem i32 %44, 64
  %47 = add nsw i32 %46, 32
  %48 = ashr i32 %47, 6
  %49 = add nsw i32 %38, 32
  %50 = ashr i32 %49, 6
  %51 = sub nsw i32 %45, %50
  %52 = add nsw i32 %48, %51
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %29
  %55 = add i32 %35, 4
  %56 = icmp ugt i32 %55, 8
  br i1 %56, label %57, label %60, !prof !13

57:                                               ; preds = %54
  %58 = icmp sgt i32 %35, 0
  %59 = select i1 %58, i32 1, i32 -1
  br label %60

60:                                               ; preds = %57, %54, %29
  %61 = phi i32 [ %59, %57 ], [ %52, %29 ], [ 0, %54 ]
  %62 = srem i32 %31, 64
  %63 = icmp slt i32 %37, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 %37) #20
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !2
  %69 = sdiv i32 %68, 64
  %70 = srem i32 %68, 64
  %71 = add nsw i32 %70, 32
  %72 = ashr i32 %71, 6
  %73 = add nsw i32 %62, 32
  %74 = ashr i32 %73, 6
  %75 = sub nsw i32 %69, %74
  %76 = add nsw i32 %72, %75
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %84

78:                                               ; preds = %60
  %79 = add i32 %37, 4
  %80 = icmp ugt i32 %79, 8
  br i1 %80, label %81, label %84, !prof !13

81:                                               ; preds = %78
  %82 = icmp sgt i32 %37, 0
  %83 = select i1 %82, i32 1, i32 -1
  br label %84

84:                                               ; preds = %60, %78, %81
  %85 = phi i32 [ %83, %81 ], [ %76, %60 ], [ 0, %78 ]
  %86 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, %12
  br i1 %88, label %89, label %93

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.blink::LayoutPoint", %"class.blink::LayoutPoint"* %1, i64 0, i32 1, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, %31
  br i1 %92, label %104, label %93

93:                                               ; preds = %89, %84
  %94 = bitcast %"class.blink::LayoutPoint"* %1 to i64*
  %95 = load i64, i64* %94, align 4
  store i64 %95, i64* %10, align 4
  %96 = and i96 %6, 63
  %97 = icmp eq i96 %96, 0
  br i1 %97, label %98, label %104

98:                                               ; preds = %93
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #20
  %99 = load i64, i64* %10, align 4
  %100 = load i64, i64* %33, align 4
  %101 = trunc i64 %100 to i32
  %102 = lshr i64 %100, 32
  %103 = trunc i64 %102 to i32
  br label %104

104:                                              ; preds = %89, %93, %98
  %105 = phi i32 [ %37, %89 ], [ %37, %93 ], [ %103, %98 ]
  %106 = phi i32 [ %35, %89 ], [ %35, %93 ], [ %101, %98 ]
  %107 = phi i64 [ %11, %89 ], [ %95, %93 ], [ %99, %98 ]
  %108 = trunc i64 %107 to i32
  %109 = lshr i64 %107, 32
  %110 = trunc i64 %109 to i32
  %111 = srem i32 %108, 64
  %112 = icmp slt i32 %106, 0
  %113 = select i1 %112, i32 -2147483648, i32 2147483647
  %114 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %111, i32 %106) #20
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 %113, i32 %116, !prof !2
  %118 = sdiv i32 %117, 64
  %119 = srem i32 %117, 64
  %120 = add nsw i32 %119, 32
  %121 = ashr i32 %120, 6
  %122 = add nsw i32 %111, 32
  %123 = ashr i32 %122, 6
  %124 = sub nsw i32 %118, %123
  %125 = add nsw i32 %121, %124
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %133

127:                                              ; preds = %104
  %128 = add i32 %106, 4
  %129 = icmp ugt i32 %128, 8
  br i1 %129, label %130, label %133, !prof !13

130:                                              ; preds = %127
  %131 = icmp sgt i32 %106, 0
  %132 = select i1 %131, i32 1, i32 -1
  br label %133

133:                                              ; preds = %130, %127, %104
  %134 = phi i32 [ %132, %130 ], [ %125, %104 ], [ 0, %127 ]
  %135 = srem i32 %110, 64
  %136 = icmp slt i32 %105, 0
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %135, i32 %105) #20
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !2
  %142 = sdiv i32 %141, 64
  %143 = srem i32 %141, 64
  %144 = add nsw i32 %143, 32
  %145 = ashr i32 %144, 6
  %146 = add nsw i32 %135, 32
  %147 = ashr i32 %146, 6
  %148 = sub nsw i32 %142, %147
  %149 = add nsw i32 %145, %148
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %157

151:                                              ; preds = %133
  %152 = add i32 %105, 4
  %153 = icmp ugt i32 %152, 8
  br i1 %153, label %154, label %157, !prof !13

154:                                              ; preds = %151
  %155 = icmp sgt i32 %105, 0
  %156 = select i1 %155, i32 1, i32 -1
  br label %157

157:                                              ; preds = %133, %151, %154
  %158 = phi i32 [ %156, %154 ], [ %149, %133 ], [ 0, %151 ]
  %159 = icmp ne i32 %134, %61
  %160 = icmp ne i32 %158, %85
  %161 = or i1 %159, %160
  br i1 %161, label %162, label %175

162:                                              ; preds = %157
  %163 = load i32, i32* @_ZN5blink24PaintLayerScrollableArea21FreezeScrollbarsScope6count_E, align 4
  %164 = add nsw i32 %163, 1
  store i32 %164, i32* @_ZN5blink24PaintLayerScrollableArea21FreezeScrollbarsScope6count_E, align 4
  %165 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %166 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %165, align 8
  %167 = icmp eq %"struct.blink::FragmentData::RareData"* %166, null
  br i1 %167, label %171, label %168

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %166, i64 0, i32 0, i32 0, i32 0, i32 0
  %170 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %169, align 8
  br label %171

171:                                              ; preds = %162, %168
  %172 = phi %"class.blink::PaintLayer"* [ %170, %168 ], [ null, %162 ]
  tail call void @_ZN5blink10PaintLayer33UpdateSizeAndScrollingAfterLayoutEv(%"class.blink::PaintLayer"* %172) #20
  %173 = load i32, i32* @_ZN5blink24PaintLayerScrollableArea21FreezeScrollbarsScope6count_E, align 4
  %174 = add nsw i32 %173, -1
  store i32 %174, i32* @_ZN5blink24PaintLayerScrollableArea21FreezeScrollbarsScope6count_E, align 4
  br label %175

175:                                              ; preds = %157, %171, %28, %23, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox19AbsoluteContentQuadEj(%"class.blink::FloatQuad"* noalias sret, %"class.blink::LayoutBox"*, i32) local_unnamed_addr #9 align 2 {
  %4 = alloca %"class.blink::FloatQuad", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %6 = tail call { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv(%"class.blink::LayoutBox"* %1)
  %7 = extractvalue { i64, i64 } %6, 0
  %8 = trunc i64 %7 to i32
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  %11 = extractvalue { i64, i64 } %6, 1
  %12 = bitcast %"class.blink::FloatQuad"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #20, !noalias !52
  %13 = sitofp i32 %8 to float
  %14 = fmul float %13, 1.562500e-02
  %15 = sitofp i32 %10 to float
  %16 = fmul float %15, 1.562500e-02
  %17 = trunc i64 %11 to i32
  %18 = sitofp i32 %17 to float
  %19 = fmul float %18, 1.562500e-02
  %20 = lshr i64 %11, 32
  %21 = trunc i64 %20 to i32
  %22 = sitofp i32 %21 to float
  %23 = fmul float %22, 1.562500e-02
  %24 = insertelement <2 x float> undef, float %14, i32 0
  %25 = insertelement <2 x float> %24, float %16, i32 1
  %26 = bitcast %"class.blink::FloatQuad"* %4 to <2 x float>*
  store <2 x float> %25, <2 x float>* %26, align 8, !noalias !52
  %27 = fadd float %14, %19
  %28 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 1, i32 0
  store float %27, float* %28, align 8, !noalias !52
  %29 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 1, i32 1
  store float %16, float* %29, align 4, !noalias !52
  %30 = fadd float %16, %23
  %31 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 2, i32 0
  store float %27, float* %31, align 8, !noalias !52
  %32 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 2, i32 1
  store float %30, float* %32, align 4, !noalias !52
  %33 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 3, i32 0
  store float %14, float* %33, align 8, !noalias !52
  %34 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %4, i64 0, i32 3, i32 1
  store float %30, float* %34, align 4, !noalias !52
  call void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* sret %0, %"class.blink::LayoutObject"* %5, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %4, %"class.blink::LayoutBoxModelObject"* null, i32 %2) #20
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #20, !noalias !52
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 comdat align 2 {
  %2 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0) #20
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %4 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %5 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %5, i64 120
  %7 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::LayoutBoxModelObject"* %3) #20
  %9 = icmp slt i32 %8, 0
  %10 = select i1 %9, i32 -2147483648, i32 2147483647
  %11 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %2, i32 %8) #20
  %12 = extractvalue { i32, i1 } %11, 1
  %13 = extractvalue { i32, i1 } %11, 0
  %14 = select i1 %12, i32 %10, i32 %13, !prof !2
  %15 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %0) #20
  %16 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %4, align 8
  %17 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, i64 118
  %18 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %17, align 8
  %19 = tail call i32 %18(%"class.blink::LayoutBoxModelObject"* %3) #20
  %20 = icmp slt i32 %19, 0
  %21 = select i1 %20, i32 -2147483648, i32 2147483647
  %22 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 %19) #20
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = select i1 %23, i32 %21, i32 %24, !prof !2
  %26 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #20
  %27 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %4, align 8
  %28 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, i64 120
  %29 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %28, align 8
  %30 = tail call i32 %29(%"class.blink::LayoutBoxModelObject"* %3) #20
  %31 = icmp sgt i32 %30, -1
  %32 = select i1 %31, i32 -2147483648, i32 2147483647
  %33 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %26, i32 %30) #20
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 %32, i32 %35, !prof !2
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %4, align 8
  %38 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %37, i64 121
  %39 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %38, align 8
  %40 = tail call i32 %39(%"class.blink::LayoutBoxModelObject"* %3) #20
  %41 = icmp sgt i32 %40, -1
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %36, i32 %40) #20
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !2
  %47 = icmp sgt i32 %46, 0
  %48 = select i1 %47, i32 %46, i32 0
  %49 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #20
  %50 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %4, align 8
  %51 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %50, i64 118
  %52 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %51, align 8
  %53 = tail call i32 %52(%"class.blink::LayoutBoxModelObject"* %3) #20
  %54 = icmp sgt i32 %53, -1
  %55 = select i1 %54, i32 -2147483648, i32 2147483647
  %56 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %49, i32 %53) #20
  %57 = extractvalue { i32, i1 } %56, 1
  %58 = extractvalue { i32, i1 } %56, 0
  %59 = select i1 %57, i32 %55, i32 %58, !prof !2
  %60 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %4, align 8
  %61 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %60, i64 119
  %62 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %61, align 8
  %63 = tail call i32 %62(%"class.blink::LayoutBoxModelObject"* %3) #20
  %64 = icmp sgt i32 %63, -1
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %59, i32 %63) #20
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !2
  %70 = icmp sgt i32 %69, 0
  %71 = select i1 %70, i32 %69, i32 0
  %72 = zext i32 %25 to i64
  %73 = shl nuw i64 %72, 32
  %74 = zext i32 %14 to i64
  %75 = or i64 %73, %74
  %76 = insertvalue { i64, i64 } undef, i64 %75, 0
  %77 = zext i32 %71 to i64
  %78 = shl nuw nsw i64 %77, 32
  %79 = zext i32 %48 to i64
  %80 = or i64 %78, %79
  %81 = insertvalue { i64, i64 } %76, i64 %80, 1
  ret { i64, i64 } %81
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalBackgroundRectENS_18BackgroundRectTypeE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = icmp eq i32 %1, 1
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %7 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject25BackgroundTransfersToViewEPKNS_13ComputedStyleE(%"class.blink::LayoutBoxModelObject"* %6, %"class.blink::ComputedStyle"* null) #20
  br i1 %7, label %137, label %8

8:                                                ; preds = %5, %2
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %12, i64 0, i32 2
  %14 = icmp eq %"class.blink::FillLayer"* %13, null
  br i1 %14, label %137, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %17 = icmp eq i32 %1, 0
  br label %18

18:                                               ; preds = %15, %112
  %19 = phi i32 [ %113, %112 ], [ 3, %15 ]
  %20 = phi %"class.blink::FillLayer"* [ %22, %112 ], [ %13, %15 ]
  %21 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %20, i64 0, i32 0
  %22 = load %"class.blink::FillLayer"*, %"class.blink::FillLayer"** %21, align 8
  br i1 %4, label %23, label %79

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %20, i64 0, i32 5
  %25 = bitcast [7 x i8]* %24 to i56*
  %26 = load i56, i56* %25, align 8
  %27 = and i56 %26, 8187904
  %28 = icmp eq i56 %27, 8192
  br i1 %28, label %29, label %112

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %20, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %30, align 8
  %32 = icmp eq %"class.blink::StyleImage"* %31, null
  br i1 %32, label %65, label %33

33:                                               ; preds = %29
  %34 = lshr i56 %26, 6
  %35 = trunc i56 %34 to i32
  %36 = and i32 %35, 7
  switch i32 %36, label %65 [
    i32 0, label %37
    i32 2, label %37
  ]

37:                                               ; preds = %33, %33
  %38 = lshr i56 %26, 9
  %39 = trunc i56 %38 to i32
  %40 = and i32 %39, 7
  switch i32 %40, label %65 [
    i32 0, label %41
    i32 2, label %41
  ]

41:                                               ; preds = %37, %37
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %43 = icmp eq %"class.blink::Node"* %42, null
  br i1 %43, label %44, label %51

44:                                               ; preds = %41, %44
  %45 = phi %"class.blink::LayoutObject"* [ %47, %44 ], [ %3, %41 ]
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 7
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 6, i32 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %44, label %51

51:                                               ; preds = %44, %41
  %52 = phi %"class.blink::Node"* [ %42, %41 ], [ %49, %44 ]
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %52, i64 0, i32 3, i32 0, i32 0
  %54 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %54, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::Document"*, %"class.blink::Document"** %55, align 8
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %58 = bitcast %"class.blink::StyleImage"* %31 to i1 (%"class.blink::StyleImage"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*)***
  %59 = load i1 (%"class.blink::StyleImage"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*)**, i1 (%"class.blink::StyleImage"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*)*** %58, align 8
  %60 = getelementptr inbounds i1 (%"class.blink::StyleImage"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*)*, i1 (%"class.blink::StyleImage"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*)** %59, i64 14
  %61 = load i1 (%"class.blink::StyleImage"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*)*, i1 (%"class.blink::StyleImage"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.blink::StyleImage"* nonnull %31, %"class.blink::Document"* dereferenceable(2848) %56, %"class.blink::ComputedStyle"* dereferenceable(104) %57) #20
  %63 = zext i1 %62 to i8
  %64 = load %"class.blink::FillLayer"*, %"class.blink::FillLayer"** %21, align 8
  br label %65

65:                                               ; preds = %37, %33, %51, %29
  %66 = phi %"class.blink::FillLayer"* [ %22, %29 ], [ %64, %51 ], [ %22, %33 ], [ %22, %37 ]
  %67 = phi i8 [ 0, %29 ], [ %63, %51 ], [ 0, %33 ], [ 0, %37 ]
  %68 = icmp eq %"class.blink::FillLayer"* %66, null
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #20
  %71 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %72 = tail call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %71, %"class.blink::CSSProperty"* dereferenceable(24) %70) #20
  %73 = icmp ult i32 %72, -16777216
  %74 = select i1 %73, i8 %67, i8 1
  br label %75

75:                                               ; preds = %65, %69
  %76 = phi i8 [ %67, %65 ], [ %74, %69 ]
  %77 = and i8 %76, 1
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %112, label %79

79:                                               ; preds = %18, %75
  %80 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %20, i64 0, i32 5
  %81 = bitcast [7 x i8]* %80 to i56*
  %82 = load i56, i56* %81, align 8
  %83 = lshr i56 %82, 2
  %84 = trunc i56 %83 to i32
  %85 = and i32 %84, 3
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %91

87:                                               ; preds = %79
  %88 = and i56 %82, 3
  %89 = icmp eq i56 %88, 1
  %90 = zext i1 %89 to i32
  br label %98

91:                                               ; preds = %79
  %92 = icmp eq i32 %85, 2
  %93 = and i1 %17, %92
  br i1 %93, label %94, label %98

94:                                               ; preds = %91
  %95 = and i56 %82, 3
  %96 = icmp eq i56 %95, 1
  %97 = select i1 %96, i32 1, i32 2
  br label %98

98:                                               ; preds = %87, %94, %91
  %99 = phi i32 [ %85, %91 ], [ %97, %94 ], [ %90, %87 ]
  %100 = icmp eq i32 %19, 0
  %101 = icmp eq i32 %99, 0
  %102 = or i1 %100, %101
  br i1 %102, label %112, label %103

103:                                              ; preds = %98
  %104 = icmp eq i32 %19, 1
  %105 = icmp eq i32 %99, 1
  %106 = or i1 %104, %105
  br i1 %106, label %112, label %107

107:                                              ; preds = %103
  %108 = icmp eq i32 %19, 2
  %109 = icmp eq i32 %99, 2
  %110 = or i1 %108, %109
  %111 = select i1 %110, i32 2, i32 3
  br label %112

112:                                              ; preds = %75, %107, %103, %98, %23
  %113 = phi i32 [ %19, %75 ], [ %19, %23 ], [ 0, %98 ], [ 1, %103 ], [ %111, %107 ]
  %114 = icmp eq %"class.blink::FillLayer"* %22, null
  br i1 %114, label %115, label %18

115:                                              ; preds = %112
  switch i32 %113, label %137 [
    i32 0, label %116
    i32 1, label %120
    i32 2, label %133
  ]

116:                                              ; preds = %115
  %117 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %118 = bitcast %"class.blink::LayoutSize"* %117 to i64*
  %119 = load i64, i64* %118, align 4
  br label %137

120:                                              ; preds = %115
  %121 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0) #20
  %122 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %0) #20
  %123 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #20
  %124 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #20
  %125 = zext i32 %122 to i64
  %126 = shl nuw i64 %125, 32
  %127 = zext i32 %121 to i64
  %128 = or i64 %126, %127
  %129 = zext i32 %124 to i64
  %130 = shl nuw i64 %129, 32
  %131 = zext i32 %123 to i64
  %132 = or i64 %130, %131
  br label %137

133:                                              ; preds = %115
  %134 = tail call { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv(%"class.blink::LayoutBox"* %0)
  %135 = extractvalue { i64, i64 } %134, 0
  %136 = extractvalue { i64, i64 } %134, 1
  br label %137

137:                                              ; preds = %8, %115, %5, %116, %120, %133
  %138 = phi i64 [ %136, %133 ], [ %132, %120 ], [ %119, %116 ], [ 0, %5 ], [ 0, %115 ], [ 0, %8 ]
  %139 = phi i64 [ %135, %133 ], [ %128, %120 ], [ 0, %116 ], [ 0, %5 ], [ 0, %115 ], [ 0, %8 ]
  %140 = insertvalue { i64, i64 } undef, i64 %139, 0
  %141 = insertvalue { i64, i64 } %140, i64 %138, 1
  ret { i64, i64 } %141
}

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBox"* nocapture readonly, %"class.WTF::Vector.4270"* nocapture dereferenceable(16), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), i32) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %6 = bitcast %"class.blink::LayoutSize"* %5 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = trunc i64 %7 to i32
  %9 = lshr i64 %7, 32
  %10 = trunc i64 %9 to i32
  %11 = getelementptr inbounds %"class.WTF::Vector.4270", %"class.WTF::Vector.4270"* %1, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.WTF::Vector.4270", %"class.WTF::Vector.4270"* %1, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %16, label %55, !prof !2

16:                                               ; preds = %4
  %17 = add i32 %12, 1
  %18 = lshr i32 %12, 2
  %19 = add i32 %17, %18
  %20 = icmp ugt i32 %19, 4
  %21 = select i1 %20, i32 %19, i32 4
  %22 = icmp ugt i32 %21, %17
  %23 = select i1 %22, i32 %21, i32 %17
  %24 = icmp ult i32 %12, %23
  br i1 %24, label %25, label %55, !prof !3

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.WTF::Vector.4270", %"class.WTF::Vector.4270"* %1, i64 0, i32 0, i32 0, i32 0
  %27 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %26, align 8
  %28 = icmp eq %"struct.blink::PhysicalRect"* %27, null
  %29 = zext i32 %23 to i64
  %30 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12PhysicalRectEEEmm(i64 %29) #20
  %31 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %30, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12PhysicalRectEEEPKcv, i64 0, i64 0)) #20
  br i1 %28, label %32, label %37

32:                                               ; preds = %25
  %33 = ptrtoint i8* %31 to i64
  %34 = bitcast %"class.WTF::Vector.4270"* %1 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = lshr i64 %30, 4
  %36 = trunc i64 %35 to i32
  store i32 %36, i32* %13, align 8
  br label %55

37:                                               ; preds = %25
  %38 = lshr i64 %30, 4
  %39 = ptrtoint i8* %31 to i64
  %40 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %26, align 8
  %41 = icmp ne i8* %31, null
  %42 = icmp ne %"struct.blink::PhysicalRect"* %40, null
  %43 = and i1 %41, %42
  %44 = bitcast %"struct.blink::PhysicalRect"* %40 to i8*
  br i1 %43, label %45, label %51, !prof !3

45:                                               ; preds = %37
  %46 = load i32, i32* %11, align 4
  %47 = zext i32 %46 to i64
  %48 = shl nuw nsw i64 %47, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* nonnull align 4 %44, i64 %48, i1 false) #20
  %49 = bitcast %"class.WTF::Vector.4270"* %1 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %45, %37
  %52 = phi i8* [ %50, %45 ], [ %44, %37 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #20
  %53 = bitcast %"class.WTF::Vector.4270"* %1 to i64*
  store atomic i64 %39, i64* %53 monotonic, align 8
  %54 = trunc i64 %38 to i32
  store i32 %54, i32* %13, align 8
  br label %55

55:                                               ; preds = %4, %16, %32, %51
  %56 = getelementptr inbounds %"class.WTF::Vector.4270", %"class.WTF::Vector.4270"* %1, i64 0, i32 0, i32 0, i32 0
  %57 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %56, align 8
  %58 = load i32, i32* %11, align 4
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %57, i64 %59
  %61 = bitcast %"struct.blink::PhysicalOffset"* %2 to i64*
  %62 = bitcast %"struct.blink::PhysicalRect"* %60 to i64*
  %63 = load i64, i64* %61, align 4
  store i64 %63, i64* %62, align 4
  %64 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %57, i64 %59, i32 1, i32 0, i32 0
  store i32 %8, i32* %64, align 4
  %65 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %57, i64 %59, i32 1, i32 1, i32 0
  store i32 %10, i32* %65, align 4
  %66 = load i32, i32* %11, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %11, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox9CanResizeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 8589934592
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = lshr i160 %13, 74
  %15 = trunc i160 %14 to i32
  %16 = and i32 %15, 7
  switch i32 %16, label %29 [
    i32 5, label %17
    i32 2, label %17
  ]

17:                                               ; preds = %8, %8, %1
  %18 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %19 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %19, i64 92
  %21 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::LayoutObject"* %2, i32 11) #20
  br i1 %22, label %23, label %44

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 9
  %27 = bitcast [20 x i8]* %26 to i160*
  %28 = load i160, i160* %27, align 8
  br label %29

29:                                               ; preds = %23, %8
  %30 = phi i160 [ %28, %23 ], [ %13, %8 ]
  %31 = phi %"class.blink::ComputedStyle"* [ %25, %23 ], [ %10, %8 ]
  %32 = and i160 %30, 2113929216
  %33 = icmp eq i160 %32, 0
  br i1 %33, label %34, label %44

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %38, i64 0, i32 13
  %40 = bitcast [3 x i8]* %39 to i24*
  %41 = load i24, i24* %40, align 8
  %42 = and i24 %41, 917504
  %43 = icmp ne i24 %42, 0
  br label %44

44:                                               ; preds = %34, %29, %17
  %45 = phi i1 [ false, %17 ], [ false, %29 ], [ %43, %34 ]
  ret i1 %45
}

declare i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16), %"struct.blink::LogicalSize"* dereferenceable(8), i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox19HasScrollbarGuttersENS_20ScrollbarOrientationE(%"class.blink::LayoutBox"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 270215977642229760
  %10 = icmp eq i160 %9, 0
  br i1 %10, label %180, label %11

11:                                               ; preds = %2
  %12 = and i160 %8, 18014398509481984
  %13 = icmp ne i160 %12, 0
  %14 = and i160 %8, 54043195528445952
  %15 = icmp eq i160 %14, 0
  br i1 %15, label %180, label %16

16:                                               ; preds = %11
  %17 = icmp eq i32 %1, 1
  %18 = and i160 %8, 144115188075855872
  %19 = icmp eq i160 %18, 0
  br i1 %17, label %20, label %100

20:                                               ; preds = %16
  br i1 %19, label %21, label %25

21:                                               ; preds = %20
  %22 = lshr i160 %8, 77
  %23 = trunc i160 %22 to i32
  %24 = and i32 %23, 7
  switch i32 %24, label %180 [
    i32 4, label %25
    i32 1, label %25
  ]

25:                                               ; preds = %20, %21, %21
  %26 = and i160 %8, 15211807202738752817960438464512
  %27 = icmp eq i160 %26, 0
  br i1 %27, label %28, label %180

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 16777216
  %33 = icmp eq i96 %32, 0
  %34 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = select i1 %33, %"class.blink::Node"* %35, %"class.blink::Node"* null
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %38 = icmp eq %"class.blink::Node"* %35, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %28, %39
  %40 = phi %"class.blink::LayoutObject"* [ %42, %39 ], [ %3, %28 ]
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 7
  %42 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 6, i32 0, i32 0
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %45 = icmp eq %"class.blink::Node"* %44, null
  br i1 %45, label %39, label %46

46:                                               ; preds = %39, %28
  %47 = phi %"class.blink::Node"* [ %35, %28 ], [ %44, %39 ]
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 0, i32 3, i32 0, i32 0
  %49 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %49, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::Document"*, %"class.blink::Document"** %50, align 8
  %52 = tail call %"class.blink::Element"* @_ZNK5blink8Document23ViewportDefiningElementEv(%"class.blink::Document"* %51) #20
  %53 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %52, i64 0, i32 0, i32 0
  %54 = icmp eq %"class.blink::Node"* %36, %53
  %55 = xor i1 %13, true
  %56 = or i1 %54, %55
  %57 = xor i1 %54, true
  br i1 %56, label %180, label %58

58:                                               ; preds = %46
  %59 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %59, i64 0, i32 0, i32 9
  %61 = bitcast [20 x i8]* %60 to i160*
  %62 = load i160, i160* %61, align 8
  %63 = trunc i160 %62 to i8
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %74

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %59, i64 0, i32 0, i32 3, i32 0, i32 0
  %67 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %67, i64 0, i32 3, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %69, i64 0, i32 39
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 6144
  %73 = icmp eq i32 %72, 2048
  br i1 %73, label %180, label %74

74:                                               ; preds = %65, %58
  %75 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %77, label %84

77:                                               ; preds = %74, %77
  %78 = phi %"class.blink::LayoutObject"* [ %80, %77 ], [ %3, %74 ]
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %78, i64 0, i32 7
  %80 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %80, i64 0, i32 6, i32 0, i32 0
  %82 = load %"class.blink::Node"*, %"class.blink::Node"** %81, align 8
  %83 = icmp eq %"class.blink::Node"* %82, null
  br i1 %83, label %77, label %84

84:                                               ; preds = %77, %74
  %85 = phi %"class.blink::Node"* [ %75, %74 ], [ %82, %77 ]
  %86 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %85, i64 0, i32 3, i32 0, i32 0
  %87 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %87, i64 0, i32 2, i32 0, i32 0
  %89 = load %"class.blink::Document"*, %"class.blink::Document"** %88, align 8
  %90 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %89) #20
  %91 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %90, i64 0, i32 0
  %92 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %91) #20
  %93 = tail call dereferenceable(8) %"class.blink::ScrollbarTheme"* @_ZNK5blink4Page17GetScrollbarThemeEv(%"class.blink::Page"* %92) #20
  %94 = bitcast %"class.blink::ScrollbarTheme"* %93 to i1 (%"class.blink::ScrollbarTheme"*)***
  %95 = load i1 (%"class.blink::ScrollbarTheme"*)**, i1 (%"class.blink::ScrollbarTheme"*)*** %94, align 8
  %96 = getelementptr inbounds i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %95, i64 7
  %97 = load i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %96, align 8
  %98 = tail call zeroext i1 %97(%"class.blink::ScrollbarTheme"* %93) #20
  %99 = xor i1 %98, true
  br label %180

100:                                              ; preds = %16
  br i1 %19, label %101, label %105

101:                                              ; preds = %100
  %102 = lshr i160 %8, 74
  %103 = trunc i160 %102 to i32
  %104 = and i32 %103, 7
  switch i32 %104, label %180 [
    i32 4, label %105
    i32 1, label %105
  ]

105:                                              ; preds = %100, %101, %101
  %106 = and i160 %8, 15211807202738752817960438464512
  %107 = icmp eq i160 %106, 0
  br i1 %107, label %180, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %110 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %109 to i96*
  %111 = load i96, i96* %110, align 4
  %112 = and i96 %111, 16777216
  %113 = icmp eq i96 %112, 0
  %114 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %115 = load %"class.blink::Node"*, %"class.blink::Node"** %114, align 8
  %116 = select i1 %113, %"class.blink::Node"* %115, %"class.blink::Node"* null
  %117 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %118 = icmp eq %"class.blink::Node"* %115, null
  br i1 %118, label %119, label %126

119:                                              ; preds = %108, %119
  %120 = phi %"class.blink::LayoutObject"* [ %122, %119 ], [ %3, %108 ]
  %121 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %120, i64 0, i32 7
  %122 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %122, i64 0, i32 6, i32 0, i32 0
  %124 = load %"class.blink::Node"*, %"class.blink::Node"** %123, align 8
  %125 = icmp eq %"class.blink::Node"* %124, null
  br i1 %125, label %119, label %126

126:                                              ; preds = %119, %108
  %127 = phi %"class.blink::Node"* [ %115, %108 ], [ %124, %119 ]
  %128 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %127, i64 0, i32 3, i32 0, i32 0
  %129 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %129, i64 0, i32 2, i32 0, i32 0
  %131 = load %"class.blink::Document"*, %"class.blink::Document"** %130, align 8
  %132 = tail call %"class.blink::Element"* @_ZNK5blink8Document23ViewportDefiningElementEv(%"class.blink::Document"* %131) #20
  %133 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %132, i64 0, i32 0, i32 0
  %134 = icmp eq %"class.blink::Node"* %116, %133
  %135 = xor i1 %13, true
  %136 = or i1 %134, %135
  %137 = xor i1 %134, true
  br i1 %136, label %180, label %138

138:                                              ; preds = %126
  %139 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %140 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %139, i64 0, i32 0, i32 9
  %141 = bitcast [20 x i8]* %140 to i160*
  %142 = load i160, i160* %141, align 8
  %143 = trunc i160 %142 to i8
  %144 = icmp slt i8 %143, 0
  br i1 %144, label %145, label %154

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %139, i64 0, i32 0, i32 3, i32 0, i32 0
  %147 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %147, i64 0, i32 3, i32 0, i32 0
  %149 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %149, i64 0, i32 39
  %151 = load i32, i32* %150, align 4
  %152 = and i32 %151, 6144
  %153 = icmp eq i32 %152, 2048
  br i1 %153, label %180, label %154

154:                                              ; preds = %145, %138
  %155 = load %"class.blink::Node"*, %"class.blink::Node"** %117, align 8
  %156 = icmp eq %"class.blink::Node"* %155, null
  br i1 %156, label %157, label %164

157:                                              ; preds = %154, %157
  %158 = phi %"class.blink::LayoutObject"* [ %160, %157 ], [ %3, %154 ]
  %159 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %158, i64 0, i32 7
  %160 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %160, i64 0, i32 6, i32 0, i32 0
  %162 = load %"class.blink::Node"*, %"class.blink::Node"** %161, align 8
  %163 = icmp eq %"class.blink::Node"* %162, null
  br i1 %163, label %157, label %164

164:                                              ; preds = %157, %154
  %165 = phi %"class.blink::Node"* [ %155, %154 ], [ %162, %157 ]
  %166 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %165, i64 0, i32 3, i32 0, i32 0
  %167 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %167, i64 0, i32 2, i32 0, i32 0
  %169 = load %"class.blink::Document"*, %"class.blink::Document"** %168, align 8
  %170 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %169) #20
  %171 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %170, i64 0, i32 0
  %172 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %171) #20
  %173 = tail call dereferenceable(8) %"class.blink::ScrollbarTheme"* @_ZNK5blink4Page17GetScrollbarThemeEv(%"class.blink::Page"* %172) #20
  %174 = bitcast %"class.blink::ScrollbarTheme"* %173 to i1 (%"class.blink::ScrollbarTheme"*)***
  %175 = load i1 (%"class.blink::ScrollbarTheme"*)**, i1 (%"class.blink::ScrollbarTheme"*)*** %174, align 8
  %176 = getelementptr inbounds i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %175, i64 7
  %177 = load i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %176, align 8
  %178 = tail call zeroext i1 %177(%"class.blink::ScrollbarTheme"* %173) #20
  %179 = xor i1 %178, true
  br label %180

180:                                              ; preds = %164, %145, %84, %65, %11, %126, %46, %21, %25, %101, %105, %2
  %181 = phi i1 [ false, %2 ], [ false, %11 ], [ %57, %46 ], [ false, %25 ], [ false, %21 ], [ %137, %126 ], [ false, %105 ], [ false, %101 ], [ true, %65 ], [ %99, %84 ], [ true, %145 ], [ %179, %164 ]
  ret i1 %181
}

declare %"class.blink::Element"* @_ZNK5blink8Document23ViewportDefiningElementEv(%"class.blink::Document"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_130HypotheticalScrollbarThicknessERKNS_9LayoutBoxENS_20ScrollbarOrientationEb(%"class.blink::LayoutBox"* dereferenceable(216), i32) unnamed_addr #4 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %5 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %4) #20
  %6 = icmp eq %"class.blink::PaintLayerScrollableArea"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = tail call i32 @_ZNK5blink24PaintLayerScrollableArea30HypotheticalScrollbarThicknessENS_20ScrollbarOrientationEb(%"class.blink::PaintLayerScrollableArea"* nonnull %5, i32 %1, i1 zeroext true) #20
  br label %74

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %13, label %20

13:                                               ; preds = %9, %13
  %14 = phi %"class.blink::LayoutObject"* [ %16, %13 ], [ %3, %9 ]
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 7
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %13, label %20

20:                                               ; preds = %13, %9
  %21 = phi %"class.blink::Node"* [ %11, %9 ], [ %18, %13 ]
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %25) #20
  %27 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %26, i64 0, i32 0
  %28 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %27) #20
  %29 = tail call dereferenceable(8) %"class.blink::ScrollbarTheme"* @_ZNK5blink4Page17GetScrollbarThemeEv(%"class.blink::Page"* %28) #20
  %30 = bitcast %"class.blink::ScrollbarTheme"* %29 to i1 (%"class.blink::ScrollbarTheme"*)***
  %31 = load i1 (%"class.blink::ScrollbarTheme"*)**, i1 (%"class.blink::ScrollbarTheme"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %31, i64 7
  %33 = load i1 (%"class.blink::ScrollbarTheme"*)*, i1 (%"class.blink::ScrollbarTheme"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::ScrollbarTheme"* %29) #20
  %35 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %28, i64 0, i32 7, i32 0, i32 0
  %36 = load %"class.blink::ChromeClient"*, %"class.blink::ChromeClient"** %35, align 8
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %38 = icmp eq %"class.blink::Node"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %20, %39
  %40 = phi %"class.blink::LayoutObject"* [ %42, %39 ], [ %3, %20 ]
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 7
  %42 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 6, i32 0, i32 0
  %44 = load %"class.blink::Node"*, %"class.blink::Node"** %43, align 8
  %45 = icmp eq %"class.blink::Node"* %44, null
  br i1 %45, label %39, label %46

46:                                               ; preds = %39, %20
  %47 = phi %"class.blink::Node"* [ %37, %20 ], [ %44, %39 ]
  %48 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 0, i32 3, i32 0, i32 0
  %49 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %49, i64 0, i32 2, i32 0, i32 0
  %51 = load %"class.blink::Document"*, %"class.blink::Document"** %50, align 8
  %52 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %51) #20
  %53 = bitcast %"class.blink::ChromeClient"* %36 to float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)***
  %54 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)**, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*** %53, align 8
  %55 = getelementptr inbounds float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %54, i64 3
  %56 = load float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)*, float (%"class.blink::ChromeClient"*, %"class.blink::LocalFrame"*, float)** %55, align 8
  %57 = tail call float %56(%"class.blink::ChromeClient"* %36, %"class.blink::LocalFrame"* %52, float 1.000000e+00) #20
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %59 = bitcast %"class.blink::ComputedStyle"** %58 to %"class.blink::ComputedStyleBase"**
  %60 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %60, i64 0, i32 3, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %62, i64 0, i32 3, i32 0, i32 0
  %64 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %64, i64 0, i32 39
  %66 = load i32, i32* %65, align 4
  %67 = lshr i32 %66, 11
  %68 = and i32 %67, 3
  %69 = bitcast %"class.blink::ScrollbarTheme"* %29 to i32 (%"class.blink::ScrollbarTheme"*, float, i32)***
  %70 = load i32 (%"class.blink::ScrollbarTheme"*, float, i32)**, i32 (%"class.blink::ScrollbarTheme"*, float, i32)*** %69, align 8
  %71 = getelementptr inbounds i32 (%"class.blink::ScrollbarTheme"*, float, i32)*, i32 (%"class.blink::ScrollbarTheme"*, float, i32)** %70, i64 4
  %72 = load i32 (%"class.blink::ScrollbarTheme"*, float, i32)*, i32 (%"class.blink::ScrollbarTheme"*, float, i32)** %71, align 8
  %73 = tail call i32 %72(%"class.blink::ScrollbarTheme"* %29, float %57, i32 %68) #20
  br label %74

74:                                               ; preds = %46, %7
  %75 = phi i32 [ %8, %7 ], [ %73, %46 ]
  ret i32 %75
}

declare i32 @_ZNK5blink24PaintLayerScrollableArea22VerticalScrollbarWidthENS_28OverlayScrollbarClipBehaviorE(%"class.blink::PaintLayerScrollableArea"*, i32) unnamed_addr #5

declare i32 @_ZNK5blink24PaintLayerScrollableArea25HorizontalScrollbarHeightENS_28OverlayScrollbarClipBehaviorE(%"class.blink::PaintLayerScrollableArea"*, i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox33CanBeScrolledAndHasScrollableAreaEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %3 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %3, i64 170
  %5 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::LayoutBox"* %0) #20
  br i1 %6, label %7, label %121

7:                                                ; preds = %1
  %8 = tail call i32 @_ZNK5blink9LayoutBox24PixelSnappedScrollHeightEv(%"class.blink::LayoutBox"* %0)
  %9 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #20
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %11 = bitcast %"class.blink::LayoutRect"* %10 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = lshr i64 %12, 32
  %14 = trunc i64 %13 to i32
  %15 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %0) #20
  %16 = icmp slt i32 %15, 0
  %17 = select i1 %16, i32 -2147483648, i32 63
  %18 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %15) #20
  %19 = extractvalue { i32, i1 } %18, 1
  %20 = extractvalue { i32, i1 } %18, 0
  %21 = select i1 %19, i32 %17, i32 %20, !prof !2
  %22 = srem i32 %21, 64
  %23 = icmp slt i32 %9, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 %9) #20
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  %29 = sdiv i32 %28, 64
  %30 = srem i32 %28, 64
  %31 = add nsw i32 %30, 32
  %32 = ashr i32 %31, 6
  %33 = add nsw i32 %22, 32
  %34 = ashr i32 %33, 6
  %35 = sub nsw i32 %29, %34
  %36 = add nsw i32 %32, %35
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %44

38:                                               ; preds = %7
  %39 = add i32 %9, 4
  %40 = icmp ugt i32 %39, 8
  br i1 %40, label %41, label %44, !prof !13

41:                                               ; preds = %38
  %42 = icmp sgt i32 %9, 0
  %43 = select i1 %42, i32 1, i32 -1
  br label %44

44:                                               ; preds = %7, %38, %41
  %45 = phi i32 [ %43, %41 ], [ %36, %7 ], [ 0, %38 ]
  %46 = icmp eq i32 %8, %45
  br i1 %46, label %47, label %121

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %49 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %49, i64 152
  %51 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %50, align 8
  %52 = tail call i32 %51(%"class.blink::LayoutBox"* %0) #20
  %53 = load i64, i64* %11, align 4
  %54 = trunc i64 %53 to i32
  %55 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0) #20
  %56 = icmp slt i32 %55, 0
  %57 = select i1 %56, i32 -2147483648, i32 63
  %58 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %54, i32 %55) #20
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !2
  %62 = srem i32 %61, 64
  %63 = icmp slt i32 %52, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 %52) #20
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !2
  %69 = sdiv i32 %68, 64
  %70 = srem i32 %68, 64
  %71 = add nsw i32 %70, 32
  %72 = ashr i32 %71, 6
  %73 = add nsw i32 %62, 32
  %74 = ashr i32 %73, 6
  %75 = sub nsw i32 %69, %74
  %76 = add nsw i32 %72, %75
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %84

78:                                               ; preds = %47
  %79 = add i32 %52, 4
  %80 = icmp ugt i32 %79, 8
  br i1 %80, label %81, label %84, !prof !13

81:                                               ; preds = %78
  %82 = icmp sgt i32 %52, 0
  %83 = select i1 %82, i32 1, i32 -1
  br label %84

84:                                               ; preds = %47, %78, %81
  %85 = phi i32 [ %83, %81 ], [ %76, %47 ], [ 0, %78 ]
  %86 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #20
  %87 = load i64, i64* %11, align 4
  %88 = trunc i64 %87 to i32
  %89 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0) #20
  %90 = icmp slt i32 %89, 0
  %91 = select i1 %90, i32 -2147483648, i32 63
  %92 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %88, i32 %89) #20
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 %91, i32 %94, !prof !2
  %96 = srem i32 %95, 64
  %97 = icmp slt i32 %86, 0
  %98 = select i1 %97, i32 -2147483648, i32 2147483647
  %99 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %96, i32 %86) #20
  %100 = extractvalue { i32, i1 } %99, 1
  %101 = extractvalue { i32, i1 } %99, 0
  %102 = select i1 %100, i32 %98, i32 %101, !prof !2
  %103 = sdiv i32 %102, 64
  %104 = srem i32 %102, 64
  %105 = add nsw i32 %104, 32
  %106 = ashr i32 %105, 6
  %107 = add nsw i32 %96, 32
  %108 = ashr i32 %107, 6
  %109 = sub nsw i32 %103, %108
  %110 = add nsw i32 %106, %109
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %118

112:                                              ; preds = %84
  %113 = add i32 %86, 4
  %114 = icmp ugt i32 %113, 8
  br i1 %114, label %115, label %118, !prof !13

115:                                              ; preds = %112
  %116 = icmp sgt i32 %86, 0
  %117 = select i1 %116, i32 1, i32 -1
  br label %118

118:                                              ; preds = %84, %112, %115
  %119 = phi i32 [ %117, %115 ], [ %110, %84 ], [ 0, %112 ]
  %120 = icmp ne i32 %85, %119
  br label %121

121:                                              ; preds = %44, %118, %1
  %122 = phi i1 [ false, %1 ], [ true, %44 ], [ %120, %118 ]
  ret i1 %122
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 16777216
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %7, label %18

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %9 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %10 = icmp eq %"class.blink::Node"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %15, i64 0, i32 0, i32 0
  %17 = icmp eq %"class.blink::Node"* %16, %9
  br i1 %17, label %193, label %18

18:                                               ; preds = %7, %1, %11
  %19 = phi i1 [ false, %11 ], [ true, %7 ], [ true, %1 ]
  %20 = phi %"class.blink::Node"* [ %9, %11 ], [ null, %7 ], [ null, %1 ]
  %21 = and i96 %4, 8589934592
  %22 = icmp eq i96 %21, 0
  br i1 %22, label %193, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 9
  %27 = bitcast [20 x i8]* %26 to i160*
  %28 = load i160, i160* %27, align 8
  %29 = lshr i160 %28, 74
  %30 = trunc i160 %29 to i32
  %31 = and i32 %30, 7
  switch i32 %31, label %32 [
    i32 5, label %193
    i32 2, label %193
  ]

32:                                               ; preds = %23
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %34 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %34, i64 173
  %36 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutBox"* %0) #20
  br i1 %37, label %38, label %114

38:                                               ; preds = %32
  %39 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %40 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %39, align 8
  %41 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %40, i64 152
  %42 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %41, align 8
  %43 = tail call i32 %42(%"class.blink::LayoutBox"* %0) #20
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %45 = bitcast %"class.blink::LayoutRect"* %44 to i64*
  %46 = load i64, i64* %45, align 4
  %47 = trunc i64 %46 to i32
  %48 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0) #20
  %49 = icmp slt i32 %48, 0
  %50 = select i1 %49, i32 -2147483648, i32 63
  %51 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %47, i32 %48) #20
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %50, i32 %53, !prof !2
  %55 = srem i32 %54, 64
  %56 = icmp slt i32 %43, 0
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %55, i32 %43) #20
  %59 = extractvalue { i32, i1 } %58, 1
  %60 = extractvalue { i32, i1 } %58, 0
  %61 = select i1 %59, i32 %57, i32 %60, !prof !2
  %62 = sdiv i32 %61, 64
  %63 = srem i32 %61, 64
  %64 = add nsw i32 %63, 32
  %65 = ashr i32 %64, 6
  %66 = add nsw i32 %55, 32
  %67 = ashr i32 %66, 6
  %68 = sub nsw i32 %62, %67
  %69 = add nsw i32 %65, %68
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %77

71:                                               ; preds = %38
  %72 = add i32 %43, 4
  %73 = icmp ugt i32 %72, 8
  br i1 %73, label %74, label %77, !prof !13

74:                                               ; preds = %71
  %75 = icmp sgt i32 %43, 0
  %76 = select i1 %75, i32 1, i32 -1
  br label %77

77:                                               ; preds = %38, %71, %74
  %78 = phi i32 [ %76, %74 ], [ %69, %38 ], [ 0, %71 ]
  %79 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #20
  %80 = load i64, i64* %45, align 4
  %81 = trunc i64 %80 to i32
  %82 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0) #20
  %83 = icmp slt i32 %82, 0
  %84 = select i1 %83, i32 -2147483648, i32 63
  %85 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %82) #20
  %86 = extractvalue { i32, i1 } %85, 1
  %87 = extractvalue { i32, i1 } %85, 0
  %88 = select i1 %86, i32 %84, i32 %87, !prof !2
  %89 = srem i32 %88, 64
  %90 = icmp slt i32 %79, 0
  %91 = select i1 %90, i32 -2147483648, i32 2147483647
  %92 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %89, i32 %79) #20
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 %91, i32 %94, !prof !2
  %96 = sdiv i32 %95, 64
  %97 = srem i32 %95, 64
  %98 = add nsw i32 %97, 32
  %99 = ashr i32 %98, 6
  %100 = add nsw i32 %89, 32
  %101 = ashr i32 %100, 6
  %102 = sub nsw i32 %96, %101
  %103 = add nsw i32 %99, %102
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %111

105:                                              ; preds = %77
  %106 = add i32 %79, 4
  %107 = icmp ugt i32 %106, 8
  br i1 %107, label %108, label %111, !prof !13

108:                                              ; preds = %105
  %109 = icmp sgt i32 %79, 0
  %110 = select i1 %109, i32 1, i32 -1
  br label %111

111:                                              ; preds = %108, %105, %77
  %112 = phi i32 [ %110, %108 ], [ %103, %77 ], [ 0, %105 ]
  %113 = icmp eq i32 %78, %112
  br i1 %113, label %114, label %159

114:                                              ; preds = %111, %32
  %115 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %33, align 8
  %116 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %115, i64 174
  %117 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %116, align 8
  %118 = tail call zeroext i1 %117(%"class.blink::LayoutBox"* %0) #20
  br i1 %118, label %119, label %159

119:                                              ; preds = %114
  %120 = tail call i32 @_ZNK5blink9LayoutBox24PixelSnappedScrollHeightEv(%"class.blink::LayoutBox"* %0) #20
  %121 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #20
  %122 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %123 = bitcast %"class.blink::LayoutRect"* %122 to i64*
  %124 = load i64, i64* %123, align 4
  %125 = lshr i64 %124, 32
  %126 = trunc i64 %125 to i32
  %127 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %0) #20
  %128 = icmp slt i32 %127, 0
  %129 = select i1 %128, i32 -2147483648, i32 63
  %130 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %126, i32 %127) #20
  %131 = extractvalue { i32, i1 } %130, 1
  %132 = extractvalue { i32, i1 } %130, 0
  %133 = select i1 %131, i32 %129, i32 %132, !prof !2
  %134 = srem i32 %133, 64
  %135 = icmp slt i32 %121, 0
  %136 = select i1 %135, i32 -2147483648, i32 2147483647
  %137 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %134, i32 %121) #20
  %138 = extractvalue { i32, i1 } %137, 1
  %139 = extractvalue { i32, i1 } %137, 0
  %140 = select i1 %138, i32 %136, i32 %139, !prof !2
  %141 = sdiv i32 %140, 64
  %142 = srem i32 %140, 64
  %143 = add nsw i32 %142, 32
  %144 = ashr i32 %143, 6
  %145 = add nsw i32 %134, 32
  %146 = ashr i32 %145, 6
  %147 = sub nsw i32 %141, %146
  %148 = add nsw i32 %144, %147
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %156

150:                                              ; preds = %119
  %151 = add i32 %121, 4
  %152 = icmp ugt i32 %151, 8
  br i1 %152, label %153, label %156, !prof !13

153:                                              ; preds = %150
  %154 = icmp sgt i32 %121, 0
  %155 = select i1 %154, i32 1, i32 -1
  br label %156

156:                                              ; preds = %119, %150, %153
  %157 = phi i32 [ %155, %153 ], [ %148, %119 ], [ 0, %150 ]
  %158 = icmp eq i32 %120, %157
  br label %159

159:                                              ; preds = %111, %156, %114
  %160 = phi i1 [ false, %111 ], [ true, %114 ], [ %158, %156 ]
  %161 = load i96, i96* %3, align 4
  %162 = and i96 %161, 8589934592
  %163 = icmp eq i96 %162, 0
  br i1 %163, label %186, label %164

164:                                              ; preds = %159
  %165 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %166 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %165, i64 0, i32 0, i32 9
  %167 = bitcast [20 x i8]* %166 to i160*
  %168 = load i160, i160* %167, align 8
  %169 = and i160 %168, 132226261520350065983488
  %170 = icmp eq i160 %169, 75557863725914323419136
  br i1 %170, label %186, label %171

171:                                              ; preds = %164
  %172 = lshr i160 %168, 74
  %173 = trunc i160 %172 to i32
  %174 = and i32 %173, 5
  %175 = or i32 %174, 2
  %176 = icmp eq i32 %175, 3
  %177 = and i160 %168, 1057810092162800527867904
  %178 = icmp eq i160 %177, 604462909807314587353088
  %179 = or i1 %178, %176
  br i1 %179, label %186, label %180

180:                                              ; preds = %171
  %181 = lshr i160 %168, 77
  %182 = trunc i160 %181 to i32
  %183 = and i32 %182, 5
  %184 = or i32 %183, 2
  %185 = icmp ne i32 %184, 3
  br label %186

186:                                              ; preds = %159, %164, %171, %180
  %187 = phi i1 [ true, %159 ], [ false, %171 ], [ %185, %180 ], [ false, %164 ]
  %188 = or i1 %160, %187
  %189 = xor i1 %188, true
  %190 = or i1 %19, %189
  br i1 %190, label %193, label %191

191:                                              ; preds = %186
  %192 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %20) #20
  br label %193

193:                                              ; preds = %23, %23, %18, %186, %191, %11
  %194 = phi i1 [ true, %11 ], [ false, %23 ], [ %189, %186 ], [ %192, %191 ], [ false, %18 ], [ false, %23 ]
  ret i1 %194
}

declare zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #4 align 2 {
  %3 = alloca %"struct.blink::PhysicalRect", align 8
  %4 = alloca %"class.mojo::StructPtr.4211", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %8, %10
  %11 = phi %"class.blink::LayoutObject"* [ %13, %10 ], [ %9, %8 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %2
  %18 = phi %"class.blink::Node"* [ %6, %2 ], [ %15, %10 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %22) #20
  %24 = icmp eq %"class.blink::LocalFrame"* %23, null
  br i1 %24, label %44, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %23, i64 0, i32 11, i32 0, i32 0
  %27 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %26, align 8
  %28 = icmp eq %"class.blink::LocalFrameView"* %27, null
  br i1 %28, label %44, label %29

29:                                               ; preds = %25
  %30 = tail call i64 @_ZNK5blink14LocalFrameView20ConvertFromRootFrameERKNS_14PhysicalOffsetE(%"class.blink::LocalFrameView"* nonnull %27, %"struct.blink::PhysicalOffset"* dereferenceable(8) %1) #20
  %31 = bitcast %"struct.blink::PhysicalRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #20
  %32 = bitcast %"struct.blink::PhysicalRect"* %3 to i64*
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1
  %34 = bitcast %"struct.blink::PhysicalSize"* %33 to i64*
  store i64 274877907008, i64* %34, align 8
  %35 = tail call dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment14ToEdgeIfNeededEv() #20
  %36 = tail call dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment14ToEdgeIfNeededEv() #20
  call void @_ZN5blink15ScrollAlignment26CreateScrollIntoViewParamsERKNS_5mojom5blink15ScrollAlignmentES5_NS1_10ScrollTypeEbNS1_14ScrollBehaviorEbb(%"class.mojo::StructPtr.4211"* nonnull sret %4, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12) %35, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12) %36, i32 0, i1 zeroext true, i32 0, i1 zeroext false, i1 zeroext false) #20
  %37 = call { i64, i64 } @_ZN5blink9LayoutBox28ScrollRectToVisibleRecursiveERKNS_12PhysicalRectEN4mojo9StructPtrINS_5mojom5blink20ScrollIntoViewParamsEEE(%"class.blink::LayoutBox"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %3, %"class.mojo::StructPtr.4211"* nonnull %4)
  %38 = getelementptr inbounds %"class.mojo::StructPtr.4211", %"class.mojo::StructPtr.4211"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::mojom::blink::ScrollIntoViewParams"*, %"class.blink::mojom::blink::ScrollIntoViewParams"** %38, align 8
  store %"class.blink::mojom::blink::ScrollIntoViewParams"* null, %"class.blink::mojom::blink::ScrollIntoViewParams"** %38, align 8
  %40 = icmp eq %"class.blink::mojom::blink::ScrollIntoViewParams"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %29
  call void @_ZN5blink5mojom5blink20ScrollIntoViewParamsD1Ev(%"class.blink::mojom::blink::ScrollIntoViewParams"* nonnull %39) #20
  %42 = bitcast %"class.blink::mojom::blink::ScrollIntoViewParams"* %39 to i8*
  call void @_ZdlPv(i8* %42) #22
  br label %43

43:                                               ; preds = %29, %41
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #20
  br label %44

44:                                               ; preds = %43, %25, %17
  ret void
}

declare i64 @_ZNK5blink14LocalFrameView20ConvertFromRootFrameERKNS_14PhysicalOffsetE(%"class.blink::LocalFrameView"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #5

declare void @_ZN5blink15ScrollAlignment26CreateScrollIntoViewParamsERKNS_5mojom5blink15ScrollAlignmentES5_NS1_10ScrollTypeEbNS1_14ScrollBehaviorEbb(%"class.mojo::StructPtr.4211"* sret, %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12), %"class.blink::mojom::blink::ScrollAlignment"* dereferenceable(12), i32, i1 zeroext, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #5

declare dereferenceable(12) %"class.blink::mojom::blink::ScrollAlignment"* @_ZN5blink15ScrollAlignment14ToEdgeIfNeededEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox13CanAutoscrollEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = tail call zeroext i1 @_ZNK5blink9LayoutBox33CanBeScrolledAndHasScrollableAreaEv(%"class.blink::LayoutBox"* %0)
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9LayoutBox28CalculateAutoscrollDirectionERKNS_10FloatPointE(%"class.blink::LayoutBox"*, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #9 align 2 {
  %3 = alloca %"struct.blink::PhysicalRect", align 4
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2, %8
  %9 = phi %"class.blink::LayoutObject"* [ %11, %8 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 7
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %8, label %15

15:                                               ; preds = %8, %2
  %16 = phi %"class.blink::Node"* [ %6, %2 ], [ %13, %8 ]
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %20) #20
  %22 = icmp eq %"class.blink::LocalFrame"* %21, null
  br i1 %22, label %213, label %23

23:                                               ; preds = %15
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %26, label %33

26:                                               ; preds = %23, %26
  %27 = phi %"class.blink::LayoutObject"* [ %29, %26 ], [ %4, %23 ]
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 7
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 6, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %26, label %33

33:                                               ; preds = %26, %23
  %34 = phi %"class.blink::Node"* [ %24, %23 ], [ %31, %26 ]
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::Document"*, %"class.blink::Document"** %37, align 8
  %39 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %38) #20
  %40 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %39, i64 0, i32 11, i32 0, i32 0
  %41 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %40, align 8
  %42 = icmp eq %"class.blink::LocalFrameView"* %41, null
  br i1 %42, label %213, label %43

43:                                               ; preds = %33
  %44 = bitcast %"struct.blink::PhysicalRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #20
  %45 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 0, i32 0
  %46 = bitcast %"struct.blink::PhysicalRect"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %46, i8 -86, i64 16, i1 false)
  %47 = tail call { i64, i64 } @_ZNK5blink12LayoutObject23AbsoluteBoundingBoxRectEj(%"class.blink::LayoutObject"* %4, i32 0) #20
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = extractvalue { i64, i64 } %47, 1
  %50 = trunc i64 %48 to i32
  %51 = lshr i64 %48, 32
  %52 = trunc i64 %51 to i32
  %53 = icmp sgt i32 %50, 33554431
  br i1 %53, label %58, label %54

54:                                               ; preds = %43
  %55 = icmp slt i32 %50, -33554432
  %56 = shl i32 %50, 6
  %57 = select i1 %55, i32 -2147483648, i32 %56
  br label %58

58:                                               ; preds = %54, %43
  %59 = phi i32 [ 2147483647, %43 ], [ %57, %54 ]
  store i32 %59, i32* %45, align 4
  %60 = icmp sgt i32 %52, 33554431
  br i1 %60, label %66, label %61

61:                                               ; preds = %58
  %62 = icmp slt i32 %52, -33554432
  br i1 %62, label %66, label %63

63:                                               ; preds = %61
  %64 = shl nuw nsw i64 %51, 6
  %65 = trunc i64 %64 to i32
  br label %66

66:                                               ; preds = %61, %58, %63
  %67 = phi i32 [ %65, %63 ], [ 2147483647, %58 ], [ -2147483648, %61 ]
  %68 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 1, i32 0
  store i32 %67, i32* %68, align 4
  %69 = trunc i64 %49 to i32
  %70 = lshr i64 %49, 32
  %71 = trunc i64 %70 to i32
  %72 = icmp sgt i32 %69, 33554431
  br i1 %72, label %77, label %73

73:                                               ; preds = %66
  %74 = icmp slt i32 %69, -33554432
  %75 = shl i32 %69, 6
  %76 = select i1 %74, i32 -2147483648, i32 %75
  br label %77

77:                                               ; preds = %73, %66
  %78 = phi i32 [ 2147483647, %66 ], [ %76, %73 ]
  %79 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 0, i32 0
  store i32 %78, i32* %79, align 4
  %80 = icmp sgt i32 %71, 33554431
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = icmp slt i32 %71, -33554432
  br i1 %82, label %86, label %83

83:                                               ; preds = %81
  %84 = shl nuw nsw i64 %70, 6
  %85 = trunc i64 %84 to i32
  br label %86

86:                                               ; preds = %81, %77, %83
  %87 = phi i32 [ %85, %83 ], [ 2147483647, %77 ], [ -2147483648, %81 ]
  %88 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 1, i32 0
  store i32 %87, i32* %88, align 4
  call void @_ZNK5blink9LayoutBox17ExcludeScrollbarsERNS_12PhysicalRectENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %3, i32 1, i32 1)
  %89 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %90 = icmp eq %"class.blink::Node"* %89, null
  br i1 %90, label %91, label %98

91:                                               ; preds = %86, %91
  %92 = phi %"class.blink::LayoutObject"* [ %94, %91 ], [ %4, %86 ]
  %93 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %92, i64 0, i32 7
  %94 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %94, i64 0, i32 6, i32 0, i32 0
  %96 = load %"class.blink::Node"*, %"class.blink::Node"** %95, align 8
  %97 = icmp eq %"class.blink::Node"* %96, null
  br i1 %97, label %91, label %98

98:                                               ; preds = %91, %86
  %99 = phi %"class.blink::Node"* [ %89, %86 ], [ %96, %91 ]
  %100 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %99, i64 0, i32 3, i32 0, i32 0
  %101 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %101, i64 0, i32 2, i32 0, i32 0
  %103 = load %"class.blink::Document"*, %"class.blink::Document"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %103, i64 0, i32 113
  %105 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %105, i64 0, i32 1, i32 0, i32 0
  %107 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %106, align 8
  %108 = call { i64, i64 } @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_12PhysicalRectE(%"class.blink::LocalFrameView"* %107, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %3) #20
  %109 = extractvalue { i64, i64 } %108, 0
  %110 = trunc i64 %109 to i32
  %111 = lshr i64 %109, 32
  %112 = trunc i64 %111 to i32
  %113 = extractvalue { i64, i64 } %108, 1
  %114 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 1280)
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 2147483647, i32 %116, !prof !2
  %118 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %110, i32 1280)
  %119 = extractvalue { i32, i1 } %118, 1
  %120 = extractvalue { i32, i1 } %118, 0
  %121 = select i1 %119, i32 2147483647, i32 %120, !prof !2
  %122 = trunc i64 %113 to i32
  %123 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %122, i32 -2560) #20
  %124 = lshr i64 %113, 32
  %125 = trunc i64 %124 to i32
  %126 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %125, i32 -2560) #20
  %127 = extractvalue { i32, i1 } %126, 1
  %128 = extractvalue { i32, i1 } %126, 0
  %129 = bitcast %"class.blink::FloatPoint"* %1 to <2 x i32>*
  %130 = load <2 x i32>, <2 x i32>* %129, align 4
  %131 = sitofp i32 %121 to float
  %132 = fmul float %131, 1.562500e-02
  %133 = bitcast <2 x i32> %130 to <2 x float>
  %134 = extractelement <2 x float> %133, i32 0
  %135 = fcmp ogt float %132, %134
  br i1 %135, label %136, label %139

136:                                              ; preds = %98
  %137 = fadd <2 x float> %133, <float -2.000000e+01, float 0.000000e+00>
  %138 = bitcast <2 x float> %137 to <2 x i32>
  br label %155

139:                                              ; preds = %98
  %140 = extractvalue { i32, i1 } %123, 1
  %141 = extractvalue { i32, i1 } %123, 0
  %142 = select i1 %140, i32 -2147483648, i32 %141, !prof !2
  %143 = icmp slt i32 %142, 0
  %144 = select i1 %143, i32 -2147483648, i32 2147483647
  %145 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %121, i32 %142) #20
  %146 = extractvalue { i32, i1 } %145, 1
  %147 = extractvalue { i32, i1 } %145, 0
  %148 = select i1 %146, i32 %144, i32 %147, !prof !2
  %149 = sitofp i32 %148 to float
  %150 = fmul float %149, 1.562500e-02
  %151 = fcmp olt float %150, %134
  br i1 %151, label %152, label %155

152:                                              ; preds = %139
  %153 = fadd <2 x float> %133, <float 2.000000e+01, float 0.000000e+00>
  %154 = bitcast <2 x float> %153 to <2 x i32>
  br label %155

155:                                              ; preds = %139, %152, %136
  %156 = phi <2 x i32> [ %138, %136 ], [ %154, %152 ], [ %130, %139 ]
  %157 = bitcast <2 x i32> %156 to <2 x float>
  %158 = extractelement <2 x float> %157, i32 1
  %159 = sitofp i32 %117 to float
  %160 = fmul float %159, 1.562500e-02
  %161 = fcmp ogt float %160, %158
  br i1 %161, label %162, label %167

162:                                              ; preds = %155
  %163 = bitcast <2 x i32> %156 to <2 x float>
  %164 = shufflevector <2 x float> %163, <2 x float> %157, <2 x i32> <i32 0, i32 3>
  %165 = fadd <2 x float> %164, <float 0.000000e+00, float -2.000000e+01>
  %166 = bitcast <2 x float> %165 to <2 x i32>
  br label %183

167:                                              ; preds = %155
  %168 = select i1 %127, i32 -2147483648, i32 %128, !prof !2
  %169 = icmp slt i32 %168, 0
  %170 = select i1 %169, i32 -2147483648, i32 2147483647
  %171 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %117, i32 %168) #20
  %172 = extractvalue { i32, i1 } %171, 1
  %173 = extractvalue { i32, i1 } %171, 0
  %174 = select i1 %172, i32 %170, i32 %173, !prof !2
  %175 = sitofp i32 %174 to float
  %176 = fmul float %175, 1.562500e-02
  %177 = fcmp olt float %176, %158
  br i1 %177, label %178, label %183

178:                                              ; preds = %167
  %179 = bitcast <2 x i32> %156 to <2 x float>
  %180 = shufflevector <2 x float> %179, <2 x float> %157, <2 x i32> <i32 0, i32 3>
  %181 = fadd <2 x float> %180, <float 0.000000e+00, float 2.000000e+01>
  %182 = bitcast <2 x float> %181 to <2 x i32>
  br label %183

183:                                              ; preds = %167, %178, %162
  %184 = phi <2 x i32> [ %166, %162 ], [ %182, %178 ], [ %156, %167 ]
  %185 = bitcast <2 x i32> %184 to <2 x float>
  %186 = extractelement <2 x float> %185, i32 0
  %187 = fsub float %186, %134
  %188 = bitcast <2 x i32> %184 to <2 x float>
  %189 = extractelement <2 x float> %188, i32 1
  %190 = extractelement <2 x float> %133, i32 1
  %191 = fsub float %189, %190
  %192 = fmul float %187, 6.400000e+01
  %193 = call float @llvm.round.f32(float %192) #20
  %194 = fcmp ult float %193, 0xC1E0000000000000
  %195 = fcmp ugt float %193, 0x41DFFFFFE0000000
  %196 = fcmp ogt float %193, 0xC1E0000000000000
  %197 = select i1 %196, float %193, float 0xC1E0000000000000
  %198 = fptosi float %197 to i32
  %199 = select i1 %194, i32 0, i32 2147483647
  %200 = select i1 %195, i32 %199, i32 %198
  %201 = fmul float %191, 6.400000e+01
  %202 = call float @llvm.round.f32(float %201) #20
  %203 = fcmp ult float %202, 0xC1E0000000000000
  %204 = fcmp ugt float %202, 0x41DFFFFFE0000000
  %205 = fcmp ogt float %202, 0xC1E0000000000000
  %206 = select i1 %205, float %202, float 0xC1E0000000000000
  %207 = fptosi float %206 to i32
  %208 = select i1 %203, i32 0, i32 2147483647
  %209 = select i1 %204, i32 %208, i32 %207
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #20
  %210 = zext i32 %209 to i64
  %211 = shl nuw i64 %210, 32
  %212 = zext i32 %200 to i64
  br label %213

213:                                              ; preds = %33, %15, %183
  %214 = phi i64 [ %212, %183 ], [ 0, %15 ], [ 0, %33 ]
  %215 = phi i64 [ %211, %183 ], [ 0, %15 ], [ 0, %33 ]
  %216 = or i64 %215, %214
  ret i64 %216
}

declare { i64, i64 } @_ZNK5blink12LayoutObject23AbsoluteBoundingBoxRectEj(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox17ExcludeScrollbarsERNS_12PhysicalRectENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* nocapture dereferenceable(16), i32, i32) local_unnamed_addr #4 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 1190036353683150593851392
  %13 = icmp eq i160 %12, 340010386766614455386112
  br i1 %13, label %44, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = load i96, i96* %16, align 4
  %18 = and i96 %17, 8589934592
  %19 = icmp eq i96 %18, 0
  br i1 %19, label %44, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %22 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %21) #20
  %23 = icmp eq %"class.blink::PaintLayerScrollableArea"* %22, null
  br i1 %23, label %51, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %21) #20
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %25, i64 0, i32 6, i32 3
  %27 = load i8, i8* %26, align 8
  %28 = and i8 %27, 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %25, i64 0, i32 6, i32 1, i32 0, i32 0
  %32 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %31, align 8
  %33 = icmp eq %"class.blink::Scrollbar"* %32, null
  br i1 %33, label %34, label %51

34:                                               ; preds = %30, %24
  %35 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %21) #20
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %35, i64 0, i32 6, i32 3
  %37 = load i8, i8* %36, align 8
  %38 = and i8 %37, 2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %35, i64 0, i32 6, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %41, align 8
  %43 = icmp eq %"class.blink::Scrollbar"* %42, null
  br i1 %43, label %44, label %51

44:                                               ; preds = %4, %14, %34, %40
  %45 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %45, i64 0, i32 0, i32 9
  %47 = bitcast [20 x i8]* %46 to i160*
  %48 = load i160, i160* %47, align 8
  %49 = and i160 %48, 270215977642229760
  %50 = icmp eq i160 %49, 0
  br i1 %50, label %121, label %51

51:                                               ; preds = %20, %30, %40, %44
  %52 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 0, i32 %2, i32 %3)
  %53 = extractvalue { i64, i64 } %52, 0
  %54 = trunc i64 %53 to i32
  %55 = lshr i64 %53, 32
  %56 = trunc i64 %55 to i32
  %57 = extractvalue { i64, i64 } %52, 1
  %58 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %54, 0
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %54) #20
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 %61, i32 %64, !prof !2
  store i32 %65, i32* %58, align 4
  %66 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = lshr i64 %57, 32
  %69 = trunc i64 %68 to i32
  %70 = icmp slt i32 %69, 0
  %71 = select i1 %70, i32 -2147483648, i32 2147483647
  %72 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %67, i32 %69) #20
  %73 = extractvalue { i32, i1 } %72, 1
  %74 = extractvalue { i32, i1 } %72, 0
  %75 = select i1 %73, i32 %71, i32 %74, !prof !2
  store i32 %75, i32* %66, align 4
  %76 = icmp slt i32 %56, 0
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %56) #20
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !2
  %82 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1
  %83 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %82, i64 0, i32 0
  %84 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %82, i64 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp sgt i32 %81, -1
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %85, i32 %81) #20
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 %87, i32 %90
  store i32 %91, i32* %84, align 4
  %92 = trunc i64 %57 to i32
  %93 = icmp slt i32 %92, 0
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %54, i32 %92) #20
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !2
  %99 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp sgt i32 %98, -1
  %102 = select i1 %101, i32 -2147483648, i32 2147483647
  %103 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %100, i32 %98) #20
  %104 = extractvalue { i32, i1 } %103, 1
  %105 = extractvalue { i32, i1 } %103, 0
  %106 = select i1 %104, i32 %102, i32 %105
  store i32 %106, i32* %99, align 4
  %107 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %107)
  store i32 0, i32* %5, align 4
  %108 = icmp slt i32 %91, 0
  %109 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %110 = select i1 %108, %"class.blink::LayoutUnit"* %109, %"class.blink::LayoutUnit"* %83
  %111 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %110, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  store i32 %112, i32* %84, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %107)
  %113 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1
  %114 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114)
  store i32 0, i32* %6, align 4
  %115 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %113, i64 0, i32 0
  %116 = icmp slt i32 %106, 0
  %117 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %118 = select i1 %116, %"class.blink::LayoutUnit"* %117, %"class.blink::LayoutUnit"* %113
  %119 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %118, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  store i32 %120, i32* %115, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114)
  br label %121

121:                                              ; preds = %44, %51
  ret void
}

declare { i64, i64 } @_ZNK5blink14LocalFrameView18ConvertToRootFrameERKNS_12PhysicalRectE(%"class.blink::LocalFrameView"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBox"* @_ZN5blink9LayoutBox18FindAutoscrollableEPNS_12LayoutObjectEb(%"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.blink::LayoutObject"* %0, null
  br i1 %3, label %124, label %4

4:                                                ; preds = %2, %114
  %5 = phi %"class.blink::LayoutObject"* [ %115, %114 ], [ %0, %2 ]
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 67108864
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.blink::LayoutObject"* %5 to %"class.blink::LayoutBox"*
  %13 = tail call zeroext i1 @_ZNK5blink9LayoutBox33CanBeScrolledAndHasScrollableAreaEv(%"class.blink::LayoutBox"* nonnull %12) #20
  br i1 %13, label %117, label %14

14:                                               ; preds = %4, %11
  br i1 %1, label %29, label %15

15:                                               ; preds = %14
  %16 = load i96, i96* %7, align 4
  %17 = and i96 %16, 4362076160
  %18 = icmp eq i96 %17, 4362076160
  br i1 %18, label %19, label %29

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %20, align 8
  %22 = icmp eq %"struct.blink::FragmentData::RareData"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %24, align 8
  br label %26

26:                                               ; preds = %19, %23
  %27 = phi %"class.blink::PaintLayer"* [ %25, %23 ], [ null, %19 ]
  %28 = tail call zeroext i1 @_ZNK5blink10PaintLayer15FixedToViewportEv(%"class.blink::PaintLayer"* %27) #20
  br i1 %28, label %124, label %29

29:                                               ; preds = %15, %26, %14
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 7
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = icmp eq %"class.blink::LayoutObject"* %31, null
  br i1 %32, label %33, label %114

33:                                               ; preds = %29
  %34 = load i96, i96* %7, align 4
  %35 = and i96 %34, 16777216
  %36 = icmp eq i96 %35, 0
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = select i1 %36, %"class.blink::Node"* %38, %"class.blink::Node"* null
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 6, i32 0, i32 0
  %41 = icmp eq %"class.blink::Node"* %38, null
  br i1 %41, label %42, label %52

42:                                               ; preds = %33
  %43 = load %"class.blink::Node"*, %"class.blink::Node"** inttoptr (i64 40 to %"class.blink::Node"**), align 8
  %44 = icmp eq %"class.blink::Node"* %43, null
  br i1 %44, label %45, label %52

45:                                               ; preds = %42, %45
  %46 = phi %"class.blink::LayoutObject"* [ %48, %45 ], [ null, %42 ]
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 7
  %48 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %48, i64 0, i32 6, i32 0, i32 0
  %50 = load %"class.blink::Node"*, %"class.blink::Node"** %49, align 8
  %51 = icmp eq %"class.blink::Node"* %50, null
  br i1 %51, label %45, label %52

52:                                               ; preds = %45, %42, %33
  %53 = phi %"class.blink::Node"* [ %38, %33 ], [ %43, %42 ], [ %50, %45 ]
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %55, i64 0, i32 2, i32 0, i32 0
  %57 = load %"class.blink::Document"*, %"class.blink::Document"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %57, i64 0, i32 0, i32 0
  %59 = icmp eq %"class.blink::Node"* %39, %58
  br i1 %59, label %60, label %111

60:                                               ; preds = %52
  br i1 %41, label %61, label %71

61:                                               ; preds = %60
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** inttoptr (i64 40 to %"class.blink::Node"**), align 8
  %63 = icmp eq %"class.blink::Node"* %62, null
  br i1 %63, label %64, label %71

64:                                               ; preds = %61, %64
  %65 = phi %"class.blink::LayoutObject"* [ %67, %64 ], [ null, %61 ]
  %66 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %65, i64 0, i32 7
  %67 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %67, i64 0, i32 6, i32 0, i32 0
  %69 = load %"class.blink::Node"*, %"class.blink::Node"** %68, align 8
  %70 = icmp eq %"class.blink::Node"* %69, null
  br i1 %70, label %64, label %71

71:                                               ; preds = %64, %61, %60
  %72 = phi %"class.blink::Node"* [ %38, %60 ], [ %62, %61 ], [ %69, %64 ]
  %73 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %72, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %74, i64 0, i32 2, i32 0, i32 0
  %76 = load %"class.blink::Document"*, %"class.blink::Document"** %75, align 8
  %77 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* %76) #20
  %78 = icmp eq %"class.blink::HTMLFrameOwnerElement"* %77, null
  br i1 %78, label %111, label %79

79:                                               ; preds = %71
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %82, label %89

82:                                               ; preds = %79, %82
  %83 = phi %"class.blink::LayoutObject"* [ %85, %82 ], [ %5, %79 ]
  %84 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %83, i64 0, i32 7
  %85 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %85, i64 0, i32 6, i32 0, i32 0
  %87 = load %"class.blink::Node"*, %"class.blink::Node"** %86, align 8
  %88 = icmp eq %"class.blink::Node"* %87, null
  br i1 %88, label %82, label %89

89:                                               ; preds = %82, %79
  %90 = phi %"class.blink::Node"* [ %80, %79 ], [ %87, %82 ]
  %91 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %90, i64 0, i32 3, i32 0, i32 0
  %92 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %92, i64 0, i32 2, i32 0, i32 0
  %94 = load %"class.blink::Document"*, %"class.blink::Document"** %93, align 8
  %95 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* %94) #20
  %96 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %95, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %99, label %105, label %101

101:                                              ; preds = %89
  %102 = bitcast %"class.blink::NodeData"** %100 to %"class.blink::NodeRareData"**
  %103 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %103, i64 0, i32 1, i32 0, i32 0
  br label %107

105:                                              ; preds = %89
  %106 = bitcast %"class.blink::NodeData"** %100 to %"class.blink::NodeRenderingData"**
  br label %107

107:                                              ; preds = %101, %105
  %108 = phi %"class.blink::NodeRenderingData"** [ %104, %101 ], [ %106, %105 ]
  %109 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %109, i64 0, i32 1
  br label %111

111:                                              ; preds = %107, %71, %52
  %112 = phi %"class.blink::LayoutObject"** [ %30, %52 ], [ %30, %71 ], [ %110, %107 ]
  %113 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %112, align 8
  br label %114

114:                                              ; preds = %111, %29
  %115 = phi %"class.blink::LayoutObject"* [ %113, %111 ], [ %31, %29 ]
  %116 = icmp eq %"class.blink::LayoutObject"* %115, null
  br i1 %116, label %124, label %4

117:                                              ; preds = %11
  %118 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %119 = bitcast %"class.blink::LayoutObject"* %5 to %"class.blink::LayoutBox"*
  %120 = load i96, i96* %118, align 4
  %121 = and i96 %120, 67108864
  %122 = icmp eq i96 %121, 0
  %123 = select i1 %122, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %119
  br label %124

124:                                              ; preds = %26, %114, %2, %117
  %125 = phi %"class.blink::LayoutBox"* [ %123, %117 ], [ null, %2 ], [ null, %114 ], [ null, %26 ]
  ret %"class.blink::LayoutBox"* %125
}

declare zeroext i1 @_ZNK5blink10PaintLayer15FixedToViewportEv(%"class.blink::PaintLayer"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9LayoutBox33HasHorizontallyScrollableAncestorEPNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #4 align 2 {
  %2 = icmp eq %"class.blink::LayoutObject"* %0, null
  br i1 %2, label %190, label %3

3:                                                ; preds = %1, %187
  %4 = phi %"class.blink::LayoutObject"* [ %188, %187 ], [ %0, %1 ]
  %5 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 67108864
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %93, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::LayoutObject"* %4 to %"class.blink::LayoutBox"*
  %12 = bitcast %"class.blink::LayoutObject"* %4 to i1 (%"class.blink::LayoutBox"*)***
  %13 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %13, i64 173
  %15 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutBox"* nonnull %11) #20
  br i1 %16, label %17, label %93

17:                                               ; preds = %10
  %18 = bitcast %"class.blink::LayoutObject"* %4 to i32 (%"class.blink::LayoutBox"*)***
  %19 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %19, i64 152
  %21 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %20, align 8
  %22 = tail call i32 %21(%"class.blink::LayoutBox"* nonnull %11) #20
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 1, i32 1, i32 1
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 4
  %26 = trunc i64 %25 to i32
  %27 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* nonnull %11) #20
  %28 = icmp slt i32 %27, 0
  %29 = select i1 %28, i32 -2147483648, i32 63
  %30 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %26, i32 %27) #20
  %31 = extractvalue { i32, i1 } %30, 1
  %32 = extractvalue { i32, i1 } %30, 0
  %33 = select i1 %31, i32 %29, i32 %32, !prof !2
  %34 = srem i32 %33, 64
  %35 = icmp slt i32 %22, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 %22) #20
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  %41 = sdiv i32 %40, 64
  %42 = srem i32 %40, 64
  %43 = add nsw i32 %42, 32
  %44 = ashr i32 %43, 6
  %45 = add nsw i32 %34, 32
  %46 = ashr i32 %45, 6
  %47 = sub nsw i32 %41, %46
  %48 = add nsw i32 %44, %47
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %17
  %51 = add i32 %22, 4
  %52 = icmp ugt i32 %51, 8
  br i1 %52, label %53, label %56, !prof !13

53:                                               ; preds = %50
  %54 = icmp sgt i32 %22, 0
  %55 = select i1 %54, i32 1, i32 -1
  br label %56

56:                                               ; preds = %17, %50, %53
  %57 = phi i32 [ %55, %53 ], [ %48, %17 ], [ 0, %50 ]
  %58 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* nonnull %11) #20
  %59 = load i64, i64* %24, align 4
  %60 = trunc i64 %59 to i32
  %61 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* nonnull %11) #20
  %62 = icmp slt i32 %61, 0
  %63 = select i1 %62, i32 -2147483648, i32 63
  %64 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %60, i32 %61) #20
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !2
  %68 = srem i32 %67, 64
  %69 = icmp slt i32 %58, 0
  %70 = select i1 %69, i32 -2147483648, i32 2147483647
  %71 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %68, i32 %58) #20
  %72 = extractvalue { i32, i1 } %71, 1
  %73 = extractvalue { i32, i1 } %71, 0
  %74 = select i1 %72, i32 %70, i32 %73, !prof !2
  %75 = sdiv i32 %74, 64
  %76 = srem i32 %74, 64
  %77 = add nsw i32 %76, 32
  %78 = ashr i32 %77, 6
  %79 = add nsw i32 %68, 32
  %80 = ashr i32 %79, 6
  %81 = sub nsw i32 %75, %80
  %82 = add nsw i32 %78, %81
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %90

84:                                               ; preds = %56
  %85 = add i32 %58, 4
  %86 = icmp ugt i32 %85, 8
  br i1 %86, label %87, label %90, !prof !13

87:                                               ; preds = %84
  %88 = icmp sgt i32 %58, 0
  %89 = select i1 %88, i32 1, i32 -1
  br label %90

90:                                               ; preds = %87, %84, %56
  %91 = phi i32 [ %89, %87 ], [ %82, %56 ], [ 0, %84 ]
  %92 = icmp eq i32 %57, %91
  br i1 %92, label %93, label %190

93:                                               ; preds = %90, %3, %10
  %94 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 5, i32 0
  %95 = bitcast %"class.blink::ComputedStyle"** %94 to %"class.blink::ComputedStyleBase"**
  %96 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %96, i64 0, i32 9
  %98 = bitcast [20 x i8]* %97 to i160*
  %99 = load i160, i160* %98, align 8
  %100 = and i160 %99, 237684487542793012780631851008
  %101 = icmp eq i160 %100, 79228162514264337593543950336
  br i1 %101, label %102, label %190

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 7
  %104 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %103, align 8
  %105 = icmp eq %"class.blink::LayoutObject"* %104, null
  br i1 %105, label %106, label %187

106:                                              ; preds = %102
  %107 = load i96, i96* %6, align 4
  %108 = and i96 %107, 16777216
  %109 = icmp eq i96 %108, 0
  %110 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 6, i32 0, i32 0
  %111 = load %"class.blink::Node"*, %"class.blink::Node"** %110, align 8
  %112 = select i1 %109, %"class.blink::Node"* %111, %"class.blink::Node"* null
  %113 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 6, i32 0, i32 0
  %114 = icmp eq %"class.blink::Node"* %111, null
  br i1 %114, label %115, label %125

115:                                              ; preds = %106
  %116 = load %"class.blink::Node"*, %"class.blink::Node"** inttoptr (i64 40 to %"class.blink::Node"**), align 8
  %117 = icmp eq %"class.blink::Node"* %116, null
  br i1 %117, label %118, label %125

118:                                              ; preds = %115, %118
  %119 = phi %"class.blink::LayoutObject"* [ %121, %118 ], [ null, %115 ]
  %120 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %119, i64 0, i32 7
  %121 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %121, i64 0, i32 6, i32 0, i32 0
  %123 = load %"class.blink::Node"*, %"class.blink::Node"** %122, align 8
  %124 = icmp eq %"class.blink::Node"* %123, null
  br i1 %124, label %118, label %125

125:                                              ; preds = %118, %115, %106
  %126 = phi %"class.blink::Node"* [ %111, %106 ], [ %116, %115 ], [ %123, %118 ]
  %127 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %126, i64 0, i32 3, i32 0, i32 0
  %128 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %128, i64 0, i32 2, i32 0, i32 0
  %130 = load %"class.blink::Document"*, %"class.blink::Document"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %130, i64 0, i32 0, i32 0
  %132 = icmp eq %"class.blink::Node"* %112, %131
  br i1 %132, label %133, label %184

133:                                              ; preds = %125
  br i1 %114, label %134, label %144

134:                                              ; preds = %133
  %135 = load %"class.blink::Node"*, %"class.blink::Node"** inttoptr (i64 40 to %"class.blink::Node"**), align 8
  %136 = icmp eq %"class.blink::Node"* %135, null
  br i1 %136, label %137, label %144

137:                                              ; preds = %134, %137
  %138 = phi %"class.blink::LayoutObject"* [ %140, %137 ], [ null, %134 ]
  %139 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %138, i64 0, i32 7
  %140 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %140, i64 0, i32 6, i32 0, i32 0
  %142 = load %"class.blink::Node"*, %"class.blink::Node"** %141, align 8
  %143 = icmp eq %"class.blink::Node"* %142, null
  br i1 %143, label %137, label %144

144:                                              ; preds = %137, %134, %133
  %145 = phi %"class.blink::Node"* [ %111, %133 ], [ %135, %134 ], [ %142, %137 ]
  %146 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %145, i64 0, i32 3, i32 0, i32 0
  %147 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %147, i64 0, i32 2, i32 0, i32 0
  %149 = load %"class.blink::Document"*, %"class.blink::Document"** %148, align 8
  %150 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* %149) #20
  %151 = icmp eq %"class.blink::HTMLFrameOwnerElement"* %150, null
  br i1 %151, label %184, label %152

152:                                              ; preds = %144
  %153 = load %"class.blink::Node"*, %"class.blink::Node"** %113, align 8
  %154 = icmp eq %"class.blink::Node"* %153, null
  br i1 %154, label %155, label %162

155:                                              ; preds = %152, %155
  %156 = phi %"class.blink::LayoutObject"* [ %158, %155 ], [ %4, %152 ]
  %157 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %156, i64 0, i32 7
  %158 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %158, i64 0, i32 6, i32 0, i32 0
  %160 = load %"class.blink::Node"*, %"class.blink::Node"** %159, align 8
  %161 = icmp eq %"class.blink::Node"* %160, null
  br i1 %161, label %155, label %162

162:                                              ; preds = %155, %152
  %163 = phi %"class.blink::Node"* [ %153, %152 ], [ %160, %155 ]
  %164 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %163, i64 0, i32 3, i32 0, i32 0
  %165 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %165, i64 0, i32 2, i32 0, i32 0
  %167 = load %"class.blink::Document"*, %"class.blink::Document"** %166, align 8
  %168 = tail call %"class.blink::HTMLFrameOwnerElement"* @_ZNK5blink8Document10LocalOwnerEv(%"class.blink::Document"* %167) #20
  %169 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = and i32 %170, 1
  %172 = icmp eq i32 %171, 0
  %173 = getelementptr inbounds %"class.blink::HTMLFrameOwnerElement", %"class.blink::HTMLFrameOwnerElement"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %172, label %178, label %174

174:                                              ; preds = %162
  %175 = bitcast %"class.blink::NodeData"** %173 to %"class.blink::NodeRareData"**
  %176 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %176, i64 0, i32 1, i32 0, i32 0
  br label %180

178:                                              ; preds = %162
  %179 = bitcast %"class.blink::NodeData"** %173 to %"class.blink::NodeRenderingData"**
  br label %180

180:                                              ; preds = %174, %178
  %181 = phi %"class.blink::NodeRenderingData"** [ %177, %174 ], [ %179, %178 ]
  %182 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %181, align 8
  %183 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %182, i64 0, i32 1
  br label %184

184:                                              ; preds = %180, %144, %125
  %185 = phi %"class.blink::LayoutObject"** [ %103, %125 ], [ %103, %144 ], [ %183, %180 ]
  %186 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %185, align 8
  br label %187

187:                                              ; preds = %184, %102
  %188 = phi %"class.blink::LayoutObject"* [ %186, %184 ], [ %104, %102 ]
  %189 = icmp eq %"class.blink::LayoutObject"* %188, null
  br i1 %189, label %190, label %3

190:                                              ; preds = %93, %187, %90, %1
  %191 = phi i1 [ false, %1 ], [ true, %90 ], [ false, %187 ], [ false, %93 ]
  ret i1 %191
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox19ScrollByRecursivelyERKNS_9FloatSizeE(%"class.blink::LayoutBox"*, %"class.blink::FloatSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #9 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = bitcast <2 x float>* %3 to %"class.blink::FloatSize"*
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %"class.blink::FloatSize"*
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp ogt float %9, 0xBE80000000000000
  %11 = fcmp olt float %9, 0x3E80000000000000
  %12 = and i1 %10, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %1, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = fcmp ogt float %15, 0xBE80000000000000
  %17 = fcmp olt float %15, 0x3E80000000000000
  %18 = and i1 %16, %17
  br i1 %18, label %92, label %19

19:                                               ; preds = %2, %13
  %20 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %21 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %20 to i96*
  %22 = load i96, i96* %21, align 4
  %23 = and i96 %22, 8589934592
  %24 = icmp eq i96 %23, 0
  br i1 %24, label %92, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = lshr i160 %30, 74
  %32 = trunc i160 %31 to i32
  %33 = and i32 %32, 7
  switch i32 %33, label %34 [
    i32 5, label %92
    i32 2, label %92
  ]

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %36 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %35) #20
  %37 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #20
  %38 = tail call <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"* %36) #20
  %39 = bitcast %"class.blink::FloatSize"* %1 to <2 x float>*
  %40 = load <2 x float>, <2 x float>* %39, align 4
  %41 = fadd <2 x float> %38, %40
  store <2 x float> %41, <2 x float>* %3, align 8
  %42 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %36, i64 0, i32 0
  call void @_ZN5blink14ScrollableArea15SetScrollOffsetERKNS_9FloatSizeENS_5mojom10ScrollTypeENS4_14ScrollBehaviorE(%"class.blink::ScrollableArea"* %42, %"class.blink::FloatSize"* nonnull dereferenceable(8) %4, i32 1, i32 1) #20
  %43 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #20
  %44 = call <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"* %36) #20
  %45 = load <2 x float>, <2 x float>* %3, align 8
  %46 = fsub <2 x float> %45, %44
  %47 = extractelement <2 x float> %46, i32 0
  %48 = extractelement <2 x float> %46, i32 1
  store <2 x float> %46, <2 x float>* %5, align 8
  %49 = fcmp ogt float %47, 0xBE80000000000000
  %50 = fcmp olt float %47, 0x3E80000000000000
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %56

52:                                               ; preds = %34
  %53 = fcmp ogt float %48, 0xBE80000000000000
  %54 = fcmp olt float %48, 0x3E80000000000000
  %55 = and i1 %53, %54
  br i1 %55, label %91, label %56

56:                                               ; preds = %34, %52
  %57 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %58 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %57, align 8
  %59 = icmp eq %"class.blink::LayoutObject"* %58, null
  br i1 %59, label %91, label %60

60:                                               ; preds = %56
  %61 = call %"class.blink::LayoutBox"* @_ZNK5blink12LayoutObject22EnclosingScrollableBoxEv(%"class.blink::LayoutObject"* %7) #20
  %62 = icmp eq %"class.blink::LayoutBox"* %61, null
  br i1 %62, label %64, label %63

63:                                               ; preds = %60
  call void @_ZN5blink9LayoutBox19ScrollByRecursivelyERKNS_9FloatSizeE(%"class.blink::LayoutBox"* nonnull %61, %"class.blink::FloatSize"* nonnull dereferenceable(8) %6)
  br label %64

64:                                               ; preds = %60, %63
  %65 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %66 = load %"class.blink::Node"*, %"class.blink::Node"** %65, align 8
  %67 = icmp eq %"class.blink::Node"* %66, null
  br i1 %67, label %68, label %75

68:                                               ; preds = %64, %68
  %69 = phi %"class.blink::LayoutObject"* [ %71, %68 ], [ %7, %64 ]
  %70 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %69, i64 0, i32 7
  %71 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 6, i32 0, i32 0
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %72, align 8
  %74 = icmp eq %"class.blink::Node"* %73, null
  br i1 %74, label %68, label %75

75:                                               ; preds = %68, %64
  %76 = phi %"class.blink::Node"* [ %66, %64 ], [ %73, %68 ]
  %77 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %76, i64 0, i32 3, i32 0, i32 0
  %78 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %78, i64 0, i32 2, i32 0, i32 0
  %80 = load %"class.blink::Document"*, %"class.blink::Document"** %79, align 8
  %81 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %80) #20
  %82 = icmp eq %"class.blink::LocalFrame"* %81, null
  br i1 %82, label %91, label %83

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %81, i64 0, i32 0
  %85 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %84) #20
  %86 = icmp eq %"class.blink::Page"* %85, null
  br i1 %86, label %91, label %87

87:                                               ; preds = %83
  %88 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %84) #20
  %89 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %88, i64 0, i32 6, i32 0, i32 0
  %90 = load %"class.blink::AutoscrollController"*, %"class.blink::AutoscrollController"** %89, align 8
  call void @_ZN5blink20AutoscrollController28UpdateAutoscrollLayoutObjectEv(%"class.blink::AutoscrollController"* %90) #20
  br label %91

91:                                               ; preds = %52, %87, %75, %83, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #20
  br label %92

92:                                               ; preds = %25, %25, %13, %19, %91
  ret void
}

declare void @_ZN5blink14ScrollableArea15SetScrollOffsetERKNS_9FloatSizeENS_5mojom10ScrollTypeENS4_14ScrollBehaviorE(%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"* dereferenceable(8), i32, i32) unnamed_addr #5

declare %"class.blink::LayoutBox"* @_ZNK5blink12LayoutObject22EnclosingScrollableBoxEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

declare void @_ZN5blink20AutoscrollController28UpdateAutoscrollLayoutObjectEv(%"class.blink::AutoscrollController"*) local_unnamed_addr #5

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox33NeedsPreferredWidthsRecalculationEv(%"class.blink::LayoutBox"* nocapture readonly) unnamed_addr #11 align 2 {
  %2 = alloca %"class.blink::Length"*, align 8
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = bitcast %"class.blink::Length"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8, !noalias !57
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 7, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %19, align 8, !noalias !57
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 16
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 15
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 13
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 14
  store %"class.blink::Length"* %21, %"class.blink::Length"** %2, align 8, !alias.scope !57
  store %"class.blink::Length"* %22, %"class.blink::Length"** %3, align 8, !alias.scope !57
  store %"class.blink::Length"* %23, %"class.blink::Length"** %4, align 8, !alias.scope !57
  store %"class.blink::Length"* %24, %"class.blink::Length"** %5, align 8, !alias.scope !57
  %25 = and i160 %18, 15211807202738752817960438464512
  %26 = icmp eq i160 %25, 0
  %27 = and i160 %18, 41538374868278621028243970633760768
  %28 = icmp eq i160 %27, 0
  %29 = select i1 %28, %"class.blink::Length"** %5, %"class.blink::Length"** %3
  %30 = select i1 %28, %"class.blink::Length"** %2, %"class.blink::Length"** %4
  %31 = select i1 %26, %"class.blink::Length"** %29, %"class.blink::Length"** %30
  %32 = load %"class.blink::Length"*, %"class.blink::Length"** %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %32, i64 0, i32 2
  %34 = load i8, i8* %33, align 1
  switch i8 %34, label %35 [
    i8 8, label %49
    i8 1, label %49
  ]

35:                                               ; preds = %1
  %36 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  store %"class.blink::Length"* %21, %"class.blink::Length"** %6, align 8, !alias.scope !60
  store %"class.blink::Length"* %22, %"class.blink::Length"** %7, align 8, !alias.scope !60
  store %"class.blink::Length"* %23, %"class.blink::Length"** %8, align 8, !alias.scope !60
  store %"class.blink::Length"* %24, %"class.blink::Length"** %9, align 8, !alias.scope !60
  %40 = select i1 %28, %"class.blink::Length"** %7, %"class.blink::Length"** %9
  %41 = select i1 %28, %"class.blink::Length"** %8, %"class.blink::Length"** %6
  %42 = select i1 %26, %"class.blink::Length"** %40, %"class.blink::Length"** %41
  %43 = load %"class.blink::Length"*, %"class.blink::Length"** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %43, i64 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 1
  %47 = icmp eq i8 %45, 8
  %48 = or i1 %46, %47
  br label %49

49:                                               ; preds = %1, %1, %35
  %50 = phi i1 [ true, %1 ], [ %48, %35 ], [ true, %1 ]
  ret i1 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9LayoutBox29OriginAdjustmentForScrollbarsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %58, label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1)
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = trunc i64 %48 to i32
  %50 = extractvalue { i64, i64 } %47, 1
  %51 = lshr i64 %50, 32
  %52 = trunc i64 %51 to i32
  %53 = sdiv i32 %52, 64
  %54 = sdiv i32 %49, 64
  %55 = zext i32 %54 to i64
  %56 = shl nuw i64 %55, 32
  %57 = zext i32 %53 to i64
  br label %58

58:                                               ; preds = %39, %46
  %59 = phi i64 [ %57, %46 ], [ 0, %39 ]
  %60 = phi i64 [ %56, %46 ], [ 0, %39 ]
  %61 = or i64 %60, %59
  ret i64 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9LayoutBox12ScrollOriginEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #20
  %4 = icmp eq %"class.blink::PaintLayerScrollableArea"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #20
  %7 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %6, i64 0, i32 3
  %8 = bitcast %"class.blink::IntPoint"* %7 to i64*
  %9 = load i64, i64* %8, align 4
  %10 = and i64 %9, -4294967296
  %11 = and i64 %9, 4294967295
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i64 [ %10, %5 ], [ 0, %1 ]
  %14 = phi i64 [ %11, %5 ], [ 0, %1 ]
  %15 = or i64 %14, %13
  ret i64 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9LayoutBox21ScrolledContentOffsetEv(%"class.blink::LayoutBox"*) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #20
  %4 = tail call <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"* %3) #20
  %5 = extractelement <2 x float> %4, i32 0
  %6 = fmul float %5, 6.400000e+01
  %7 = fcmp ult float %6, 0xC1E0000000000000
  %8 = fcmp ugt float %6, 0x41DFFFFFE0000000
  %9 = fcmp ogt float %6, 0xC1E0000000000000
  %10 = select i1 %9, float %6, float 0xC1E0000000000000
  %11 = fptosi float %10 to i32
  %12 = select i1 %7, i32 0, i32 2147483647
  %13 = select i1 %8, i32 %12, i32 %11
  %14 = extractelement <2 x float> %4, i32 1
  %15 = fmul float %14, 6.400000e+01
  %16 = fcmp ult float %15, 0xC1E0000000000000
  %17 = fcmp ugt float %15, 0x41DFFFFFE0000000
  %18 = fcmp ogt float %15, 0xC1E0000000000000
  %19 = select i1 %18, float %15, float 0xC1E0000000000000
  %20 = fptosi float %19 to i32
  %21 = select i1 %16, i32 0, i32 2147483647
  %22 = select i1 %17, i32 %21, i32 %20
  %23 = zext i32 %22 to i64
  %24 = shl nuw i64 %23, 32
  %25 = zext i32 %13 to i64
  %26 = or i64 %24, %25
  ret i64 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9LayoutBox33PixelSnappedScrolledContentOffsetEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #20
  %4 = tail call i64 @_ZNK5blink24PaintLayerScrollableArea15ScrollOffsetIntEv(%"class.blink::PaintLayerScrollableArea"* %3) #20
  %5 = trunc i64 %4 to i32
  %6 = lshr i64 %4, 32
  %7 = trunc i64 %6 to i32
  %8 = icmp sgt i32 %5, 33554431
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = icmp slt i32 %5, -33554432
  %11 = shl i64 %4, 6
  %12 = and i64 %11, 4294967232
  %13 = select i1 %10, i64 2147483648, i64 %12
  br label %14

14:                                               ; preds = %9, %1
  %15 = phi i64 [ 2147483647, %1 ], [ %13, %9 ]
  %16 = icmp sgt i32 %7, 33554431
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = icmp slt i32 %7, -33554432
  %19 = shl i64 %6, 38
  %20 = select i1 %18, i64 -9223372036854775808, i64 %19
  br label %21

21:                                               ; preds = %17, %14
  %22 = phi i64 [ 9223372032559808512, %14 ], [ %20, %17 ]
  %23 = or i64 %22, %15
  ret i64 %23
}

declare i64 @_ZNK5blink24PaintLayerScrollableArea15ScrollOffsetIntEv(%"class.blink::PaintLayerScrollableArea"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink9LayoutBox12ClippingRectERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %7 = bitcast { i64, i64 }* %3 to i32*
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %9 = bitcast i64* %8 to i32*
  %10 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17, !prof !5

13:                                               ; preds = %2
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #20
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  store <4 x i32> <i32 -16777215, i32 -16777215, i32 33554431, i32 33554431>, <4 x i32>* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to <4 x i32>*), align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #20
  br label %17

17:                                               ; preds = %2, %13, %16
  %18 = load i64, i64* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i64*), align 4
  %19 = load i64, i64* bitcast (%"class.blink::IntSize"* getelementptr inbounds (%"class.blink::IntRect", %"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect, i64 0, i32 1) to i64*), align 4
  %20 = trunc i64 %18 to i32
  %21 = lshr i64 %18, 32
  %22 = trunc i64 %21 to i32
  %23 = icmp sgt i32 %20, 33554431
  br i1 %23, label %28, label %24

24:                                               ; preds = %17
  %25 = icmp slt i32 %20, -33554432
  %26 = shl i32 %20, 6
  %27 = select i1 %25, i32 -2147483648, i32 %26
  br label %28

28:                                               ; preds = %24, %17
  %29 = phi i32 [ 2147483647, %17 ], [ %27, %24 ]
  store i32 %29, i32* %7, align 8
  %30 = icmp sgt i32 %22, 33554431
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = icmp slt i32 %22, -33554432
  br i1 %32, label %36, label %33

33:                                               ; preds = %31
  %34 = shl nuw nsw i64 %21, 6
  %35 = trunc i64 %34 to i32
  br label %36

36:                                               ; preds = %31, %28, %33
  %37 = phi i32 [ %35, %33 ], [ 2147483647, %28 ], [ -2147483648, %31 ]
  %38 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 1, i32 0
  store i32 %37, i32* %38, align 4
  %39 = trunc i64 %19 to i32
  %40 = lshr i64 %19, 32
  %41 = trunc i64 %40 to i32
  %42 = icmp sgt i32 %39, 33554431
  br i1 %42, label %47, label %43

43:                                               ; preds = %36
  %44 = icmp slt i32 %39, -33554432
  %45 = shl i32 %39, 6
  %46 = select i1 %44, i32 -2147483648, i32 %45
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 2147483647, %36 ], [ %46, %43 ]
  store i32 %48, i32* %9, align 8
  %49 = icmp sgt i32 %41, 33554431
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = icmp slt i32 %41, -33554432
  br i1 %51, label %55, label %52

52:                                               ; preds = %50
  %53 = shl nuw nsw i64 %40, 6
  %54 = trunc i64 %53 to i32
  br label %55

55:                                               ; preds = %50, %47, %52
  %56 = phi i32 [ %54, %52 ], [ 2147483647, %47 ], [ -2147483648, %50 ]
  %57 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1, i32 1, i32 0
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %59 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %58 to i96*
  %60 = load i96, i96* %59, align 4
  %61 = and i96 %60, 464227514732017603087171584
  %62 = icmp eq i96 %61, 0
  br i1 %62, label %73, label %63

63:                                               ; preds = %55
  %64 = bitcast %"class.blink::LayoutBox"* %0 to { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)***
  %65 = load { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)**, { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)*** %64, align 8
  %66 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)*, { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)** %65, i64 177
  %67 = load { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)*, { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)** %66, align 8
  %68 = tail call { i64, i64 } %67(%"class.blink::LayoutBox"* %0, %"struct.blink::PhysicalOffset"* dereferenceable(8) %1, i32 0) #20
  %69 = extractvalue { i64, i64 } %68, 0
  %70 = extractvalue { i64, i64 } %68, 1
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %69, i64* %71, align 8
  store i64 %70, i64* %8, align 8
  %72 = load i96, i96* %59, align 4
  br label %73

73:                                               ; preds = %55, %63
  %74 = phi i96 [ %60, %55 ], [ %72, %63 ]
  %75 = and i96 %74, 113336795588871485128704
  %76 = icmp eq i96 %75, 75557863725914323419136
  br i1 %76, label %77, label %94

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %79 = bitcast %"class.blink::ComputedStyle"** %78 to %"class.blink::ComputedStyleBase"**
  %80 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %80, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %82, i64 0, i32 3
  %84 = load i8, i8* %83, align 4
  %85 = and i8 %84, 16
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %94

87:                                               ; preds = %77
  %88 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %88) #20
  %89 = tail call { i64, i64 } @_ZNK5blink9LayoutBox8ClipRectERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"* %0, %"struct.blink::PhysicalOffset"* dereferenceable(8) %1)
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %91 = extractvalue { i64, i64 } %89, 0
  store i64 %91, i64* %90, align 8
  %92 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %93 = extractvalue { i64, i64 } %89, 1
  store i64 %93, i64* %92, align 8
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %4, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %88) #20
  br label %94

94:                                               ; preds = %73, %87, %77
  %95 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = insertvalue { i64, i64 } undef, i64 %96, 0
  %98 = load i64, i64* %8, align 8
  %99 = insertvalue { i64, i64 } %97, i64 %98, 1
  ret { i64, i64 } %99
}

declare void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink9LayoutBox8ClipRectERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"* nocapture readonly, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %4 = bitcast %"class.blink::LayoutSize"* %3 to i64*
  %5 = load i64, i64* %4, align 4
  %6 = trunc i64 %5 to i32
  %7 = lshr i64 %5, 32
  %8 = trunc i64 %7 to i32
  %9 = bitcast %"struct.blink::PhysicalOffset"* %1 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %17, i64 0, i32 1, i32 0, i32 2
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %39, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %17, i64 0, i32 1, i32 0
  %23 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %22, i32 %6) #20
  %24 = icmp slt i32 %23, 0
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 %23) #20
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !2
  %30 = icmp sgt i32 %23, -1
  %31 = select i1 %30, i32 -2147483648, i32 2147483647
  %32 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %6, i32 %23) #20
  %33 = extractvalue { i32, i1 } %32, 1
  %34 = extractvalue { i32, i1 } %32, 0
  %35 = select i1 %33, i32 %31, i32 %34, !prof !2
  %36 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %37, align 8
  br label %39

39:                                               ; preds = %21, %2
  %40 = phi %"class.blink::ComputedStyleBase::StyleVisualData"* [ %17, %2 ], [ %38, %21 ]
  %41 = phi i32 [ %11, %2 ], [ %29, %21 ]
  %42 = phi i32 [ %6, %2 ], [ %35, %21 ]
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %40, i64 0, i32 1, i32 1, i32 2
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %64, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %40, i64 0, i32 1, i32 1
  %48 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %47, i32 %6) #20
  %49 = icmp sgt i32 %48, -1
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  %51 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %6, i32 %48) #20
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %50, i32 %53, !prof !2
  %55 = icmp sgt i32 %54, -1
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %42, i32 %54) #20
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 %56, i32 %59, !prof !2
  %61 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %61, i64 0, i32 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %62, align 8
  br label %64

64:                                               ; preds = %46, %39
  %65 = phi %"class.blink::ComputedStyleBase::StyleVisualData"* [ %40, %39 ], [ %63, %46 ]
  %66 = phi i32 [ %42, %39 ], [ %60, %46 ]
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %65, i64 0, i32 1, i32 2, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %88, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %65, i64 0, i32 1, i32 2
  %72 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %71, i32 %8) #20
  %73 = icmp slt i32 %72, 0
  %74 = select i1 %73, i32 -2147483648, i32 2147483647
  %75 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 %72) #20
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = extractvalue { i32, i1 } %75, 0
  %78 = select i1 %76, i32 %74, i32 %77, !prof !2
  %79 = icmp sgt i32 %72, -1
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %8, i32 %72) #20
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 %80, i32 %83, !prof !2
  %85 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %85, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %86, align 8
  br label %88

88:                                               ; preds = %70, %64
  %89 = phi %"class.blink::ComputedStyleBase::StyleVisualData"* [ %65, %64 ], [ %87, %70 ]
  %90 = phi i32 [ %13, %64 ], [ %78, %70 ]
  %91 = phi i32 [ %8, %64 ], [ %84, %70 ]
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %89, i64 0, i32 1, i32 3, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %110, label %95

95:                                               ; preds = %88
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %89, i64 0, i32 1, i32 3
  %97 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %96, i32 %8) #20
  %98 = icmp sgt i32 %97, -1
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %8, i32 %97) #20
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 %99, i32 %102, !prof !2
  %104 = icmp sgt i32 %103, -1
  %105 = select i1 %104, i32 -2147483648, i32 2147483647
  %106 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %91, i32 %103) #20
  %107 = extractvalue { i32, i1 } %106, 1
  %108 = extractvalue { i32, i1 } %106, 0
  %109 = select i1 %107, i32 %105, i32 %108, !prof !2
  br label %110

110:                                              ; preds = %95, %88
  %111 = phi i32 [ %91, %88 ], [ %109, %95 ]
  %112 = zext i32 %90 to i64
  %113 = shl nuw i64 %112, 32
  %114 = zext i32 %41 to i64
  %115 = or i64 %113, %114
  %116 = insertvalue { i64, i64 } undef, i64 %115, 0
  %117 = zext i32 %111 to i64
  %118 = shl nuw i64 %117, 32
  %119 = zext i32 %66 to i64
  %120 = or i64 %118, %119
  %121 = insertvalue { i64, i64 } %116, i64 %120, 1
  ret { i64, i64 } %121
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox30ApplyVisibleOverflowToClipRectERNS_12PhysicalRectE(%"class.blink::LayoutBox"* nocapture readonly, %"struct.blink::PhysicalRect"* nocapture dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = lshr i96 %5, 87
  %7 = trunc i96 %6 to i8
  %8 = and i8 %7, 3
  %9 = zext i8 %8 to i32
  %10 = icmp eq i8 %8, 3
  br i1 %10, label %11, label %55

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %13 = bitcast %"class.blink::ComputedStyle"** %12 to %"class.blink::ComputedStyleBase"**
  %14 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %18, i64 0, i32 38, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %20, -1
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %20) #20
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  store i32 %28, i32* %21, align 4
  %29 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %30, i32 %20) #20
  %32 = extractvalue { i32, i1 } %31, 1
  %33 = extractvalue { i32, i1 } %31, 0
  %34 = select i1 %32, i32 %24, i32 %33, !prof !2
  store i32 %34, i32* %29, align 4
  %35 = icmp slt i32 %20, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %20, i32 %20) #20
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  %41 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %40, 0
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %42, i32 %40) #20
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 %44, i32 %47, !prof !2
  store i32 %48, i32* %41, align 4
  %49 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %50, i32 %40) #20
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %44, i32 %53, !prof !2
  store i32 %54, i32* %49, align 4
  br label %112

55:                                               ; preds = %2
  %56 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i8*) acquire, align 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %62, !prof !5

58:                                               ; preds = %55
  %59 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #20
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  store <4 x i32> <i32 -16777215, i32 -16777215, i32 33554431, i32 33554431>, <4 x i32>* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to <4 x i32>*), align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect) #20
  br label %62

62:                                               ; preds = %55, %58, %61
  %63 = load i64, i64* bitcast (%"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect to i64*), align 4
  %64 = load i64, i64* bitcast (%"class.blink::IntSize"* getelementptr inbounds (%"class.blink::IntRect", %"class.blink::IntRect"* @_ZZN5blink10LayoutRect15InfiniteIntRectEvE17infinite_int_rect, i64 0, i32 1) to i64*), align 4
  %65 = trunc i64 %63 to i32
  %66 = lshr i64 %63, 32
  %67 = trunc i64 %66 to i32
  %68 = icmp sgt i32 %65, 33554431
  br i1 %68, label %73, label %69

69:                                               ; preds = %62
  %70 = icmp slt i32 %65, -33554432
  %71 = shl i32 %65, 6
  %72 = select i1 %70, i32 -2147483648, i32 %71
  br label %73

73:                                               ; preds = %69, %62
  %74 = phi i32 [ 2147483647, %62 ], [ %72, %69 ]
  %75 = icmp sgt i32 %67, 33554431
  br i1 %75, label %81, label %76

76:                                               ; preds = %73
  %77 = icmp slt i32 %67, -33554432
  br i1 %77, label %81, label %78

78:                                               ; preds = %76
  %79 = shl nuw nsw i64 %66, 6
  %80 = trunc i64 %79 to i32
  br label %81

81:                                               ; preds = %76, %73, %78
  %82 = phi i32 [ %80, %78 ], [ 2147483647, %73 ], [ -2147483648, %76 ]
  %83 = trunc i64 %64 to i32
  %84 = lshr i64 %64, 32
  %85 = trunc i64 %84 to i32
  %86 = icmp sgt i32 %83, 33554431
  br i1 %86, label %91, label %87

87:                                               ; preds = %81
  %88 = icmp slt i32 %83, -33554432
  %89 = shl i32 %83, 6
  %90 = select i1 %88, i32 -2147483648, i32 %89
  br label %91

91:                                               ; preds = %87, %81
  %92 = phi i32 [ 2147483647, %81 ], [ %90, %87 ]
  %93 = icmp sgt i32 %85, 33554431
  br i1 %93, label %99, label %94

94:                                               ; preds = %91
  %95 = icmp slt i32 %85, -33554432
  br i1 %95, label %99, label %96

96:                                               ; preds = %94
  %97 = shl nuw nsw i64 %84, 6
  %98 = trunc i64 %97 to i32
  br label %99

99:                                               ; preds = %94, %91, %96
  %100 = phi i32 [ %98, %96 ], [ 2147483647, %91 ], [ -2147483648, %94 ]
  %101 = and i32 %9, 1
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  store i32 %74, i32* %104, align 4
  %105 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  store i32 %92, i32* %105, align 4
  br label %106

106:                                              ; preds = %103, %99
  %107 = and i32 %9, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  store i32 %82, i32* %110, align 4
  %111 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  store i32 %100, i32* %111, align 4
  br label %112

112:                                              ; preds = %106, %109, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK5blink9LayoutBox17PerspectiveOriginEPKNS_12PhysicalSizeE(%"class.blink::LayoutBox"* nocapture readonly, %"struct.blink::PhysicalSize"* readonly) local_unnamed_addr #9 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = bitcast <2 x float>* %3 to %"class.blink::FloatSize"*
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 17179869184
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %47, label %10

10:                                               ; preds = %2
  %11 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #20
  %12 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %12, align 8
  %13 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %13, align 4
  %14 = icmp eq %"struct.blink::PhysicalSize"* %1, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %1, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"struct.blink::PhysicalSize", %"struct.blink::PhysicalSize"* %1, i64 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  br label %27

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %22 = bitcast %"class.blink::LayoutSize"* %21 to i64*
  %23 = load i64, i64* %22, align 4
  %24 = trunc i64 %23 to i32
  %25 = lshr i64 %23, 32
  %26 = trunc i64 %25 to i32
  br label %27

27:                                               ; preds = %20, %15
  %28 = phi i32 [ %26, %20 ], [ %19, %15 ]
  %29 = phi i32 [ %24, %20 ], [ %17, %15 ]
  %30 = sitofp i32 %29 to float
  %31 = fmul float %30, 1.562500e-02
  %32 = sitofp i32 %28 to float
  %33 = fmul float %32, 1.562500e-02
  %34 = insertelement <2 x float> undef, float %31, i32 0
  %35 = insertelement <2 x float> %34, float %33, i32 1
  store <2 x float> %35, <2 x float>* %3, align 8
  %36 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %37 = bitcast %"class.blink::ComputedStyle"** %36 to %"class.blink::ComputedStyleBase"**
  %38 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %38, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %44, i64 0, i32 24
  %46 = call <2 x float> @_ZN5blink24FloatPointForLengthPointERKNS_11LengthPointERKNS_9FloatSizeE(%"struct.blink::LengthPoint"* dereferenceable(16) %45, %"class.blink::FloatSize"* nonnull dereferenceable(8) %4) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #20
  br label %47

47:                                               ; preds = %2, %27
  %48 = phi <2 x float> [ %46, %27 ], [ zeroinitializer, %2 ]
  ret <2 x float> %48
}

declare <2 x float> @_ZN5blink24FloatPointForLengthPointERKNS_11LengthPointERKNS_9FloatSizeE(%"struct.blink::LengthPoint"* dereferenceable(16), %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox24MapVisualRectToContainerEPKNS_12LayoutObjectERKNS_14PhysicalOffsetES3_NS_15VisualRectFlagsERNS_14TransformStateE(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::LayoutObject"* readnone, i32, %"class.blink::TransformState"* dereferenceable(64)) local_unnamed_addr #9 align 2 {
  %7 = alloca <2 x float>, align 8
  %8 = alloca %"class.blink::FloatQuad", align 4
  %9 = alloca %"class.blink::TransformationMatrix", align 8
  %10 = alloca %"class.blink::TransformationMatrix", align 8
  %11 = alloca %"class.blink::TransformationMatrix", align 8
  %12 = alloca %"class.blink::TransformationMatrix", align 8
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %21, i64 0, i32 15, i32 0
  %23 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %22, align 8
  %24 = icmp ne %"class.blink::StyleReflection"* %23, null
  %25 = tail call zeroext i1 @_ZNK5blink13ComputedStyle27HasStackingGroupingPropertyEb(%"class.blink::ComputedStyle"* %15, i1 zeroext %24) #20
  br i1 %25, label %51, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %28, i64 0, i32 3
  %30 = load i8, i8* %29, align 4
  %31 = and i8 %30, 16
  %32 = icmp eq i8 %31, 0
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %34 = bitcast [20 x i8]* %33 to i160*
  %35 = load i160, i160* %34, align 8
  %36 = and i160 %35, 7253554917687775048237056
  %37 = icmp eq i160 %36, 0
  %38 = and i1 %32, %37
  %39 = and i160 %35, 1190036353683150593851392
  %40 = icmp ne i160 %39, 340010386766614455386112
  %41 = or i1 %40, %38
  br i1 %41, label %51, label %42

42:                                               ; preds = %26
  %43 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %47, i64 0, i32 45
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %49, 0
  br label %51

51:                                               ; preds = %6, %26, %42
  %52 = phi i1 [ %50, %42 ], [ false, %6 ], [ false, %26 ]
  %53 = zext i1 %52 to i32
  %54 = tail call zeroext i1 @_ZNK5blink12LayoutObject31ShouldUseTransformFromContainerEPKS0_(%"class.blink::LayoutObject"* %13, %"class.blink::LayoutObject"* %1) #20
  br i1 %54, label %67, label %55

55:                                               ; preds = %51
  tail call void @_ZN5blink14TransformState4MoveERKNS_14PhysicalOffsetENS0_21TransformAccumulationE(%"class.blink::TransformState"* %5, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, i32 %53) #20
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %57 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %56 to i96*
  %58 = load i96, i96* %57, align 4
  %59 = and i96 %58, 67108864
  %60 = icmp eq i96 %59, 0
  %61 = icmp eq %"class.blink::LayoutObject"* %1, %3
  %62 = or i1 %61, %60
  br i1 %62, label %66, label %63

63:                                               ; preds = %55
  %64 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutBox"*
  %65 = tail call zeroext i1 @_ZNK5blink9LayoutBox25MapContentsRectToBoxSpaceERNS_14TransformStateENS1_21TransformAccumulationERKNS_12LayoutObjectENS_15VisualRectFlagsE(%"class.blink::LayoutBox"* %64, %"class.blink::TransformState"* dereferenceable(64) %5, i32 %53, %"class.blink::LayoutObject"* dereferenceable(88) %13, i32 %4)
  br i1 %65, label %66, label %370

66:                                               ; preds = %55, %63
  br label %370

67:                                               ; preds = %51
  %68 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %69 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %69, i64 0, i32 0, i32 3, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %71, i64 0, i32 2, i32 0, i32 0
  %73 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %73, i64 0, i32 2, i32 0, i32 0
  %75 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %75, i64 0, i32 15, i32 0
  %77 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %76, align 8
  %78 = icmp ne %"class.blink::StyleReflection"* %77, null
  %79 = tail call zeroext i1 @_ZNK5blink13ComputedStyle27HasStackingGroupingPropertyEb(%"class.blink::ComputedStyle"* %69, i1 zeroext %78) #20
  br i1 %79, label %105, label %80

80:                                               ; preds = %67
  %81 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %69, i64 0, i32 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %82, i64 0, i32 3
  %84 = load i8, i8* %83, align 4
  %85 = and i8 %84, 16
  %86 = icmp eq i8 %85, 0
  %87 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %69, i64 0, i32 0, i32 9
  %88 = bitcast [20 x i8]* %87 to i160*
  %89 = load i160, i160* %88, align 8
  %90 = and i160 %89, 7253554917687775048237056
  %91 = icmp eq i160 %90, 0
  %92 = and i1 %86, %91
  %93 = and i160 %89, 1190036353683150593851392
  %94 = icmp ne i160 %93, 340010386766614455386112
  %95 = or i1 %94, %92
  br i1 %95, label %105, label %96

96:                                               ; preds = %80
  %97 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %70, align 8
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %97, i64 0, i32 2, i32 0, i32 0
  %99 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %99, i64 0, i32 2, i32 0, i32 0
  %101 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %101, i64 0, i32 45
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 %103, 0
  br i1 %104, label %134, label %105

105:                                              ; preds = %80, %67, %96
  tail call void @_ZN5blink14TransformState7FlattenEv(%"class.blink::TransformState"* %5) #20
  %106 = bitcast %"class.blink::FloatQuad"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %106) #20
  %107 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %5, i64 0, i32 1
  %108 = bitcast %"class.blink::FloatQuad"* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %106, i8* align 8 %108, i64 32, i1 false) #20
  %109 = call { i64, i64 } @_ZNK5blink9FloatQuad20EnclosingBoundingBoxEv(%"class.blink::FloatQuad"* nonnull %8)
  %110 = extractvalue { i64, i64 } %109, 0
  %111 = trunc i64 %110 to i32
  %112 = lshr i64 %110, 32
  %113 = trunc i64 %112 to i32
  %114 = extractvalue { i64, i64 } %109, 1
  %115 = sitofp i32 %111 to float
  %116 = sitofp i32 %113 to float
  %117 = trunc i64 %114 to i32
  %118 = add nsw i32 %117, %111
  %119 = sitofp i32 %118 to float
  %120 = lshr i64 %114, 32
  %121 = trunc i64 %120 to i32
  %122 = add nsw i32 %121, %113
  %123 = sitofp i32 %122 to float
  %124 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %5, i64 0, i32 3
  %125 = bitcast %"struct.blink::PhysicalOffset"* %124 to i64*
  store i64 0, i64* %125, align 8
  %126 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %5, i64 0, i32 1, i32 0, i32 0
  store float %115, float* %126, align 8
  %127 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %5, i64 0, i32 1, i32 0, i32 1
  store float %116, float* %127, align 4
  %128 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %5, i64 0, i32 1, i32 1, i32 0
  store float %119, float* %128, align 8
  %129 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %5, i64 0, i32 1, i32 1, i32 1
  store float %116, float* %129, align 4
  %130 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %5, i64 0, i32 1, i32 2, i32 0
  store float %119, float* %130, align 8
  %131 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %5, i64 0, i32 1, i32 2, i32 1
  store float %123, float* %131, align 4
  %132 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %5, i64 0, i32 1, i32 3, i32 0
  store float %115, float* %132, align 8
  %133 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %5, i64 0, i32 1, i32 3, i32 1
  store float %123, float* %133, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #20
  br label %134

134:                                              ; preds = %105, %96
  %135 = bitcast %"class.blink::TransformationMatrix"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %135) #20
  %136 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %9, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %136, align 8
  %137 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %9, i64 0, i32 0, i32 0, i64 0, i64 1
  %138 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %9, i64 0, i32 0, i32 0, i64 1, i64 1
  %139 = bitcast double* %137 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 32, i1 false) #20
  store double 1.000000e+00, double* %138, align 8
  %140 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %9, i64 0, i32 0, i32 0, i64 1, i64 2
  %141 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %9, i64 0, i32 0, i32 0, i64 2, i64 2
  %142 = bitcast double* %140 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 32, i1 false) #20
  store double 1.000000e+00, double* %141, align 8
  %143 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %9, i64 0, i32 0, i32 0, i64 2, i64 3
  %144 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %9, i64 0, i32 0, i32 0, i64 3, i64 3
  %145 = bitcast double* %143 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 32, i1 false) #20
  store double 1.000000e+00, double* %144, align 8
  %146 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %147 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %146, align 8
  %148 = icmp eq %"struct.blink::FragmentData::RareData"* %147, null
  br i1 %148, label %164, label %149

149:                                              ; preds = %134
  %150 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %147, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %150, align 8
  %152 = icmp eq %"class.blink::PaintLayer"* %151, null
  br i1 %152, label %164, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %151, i64 0, i32 17, i32 0, i32 0, i32 0
  %155 = load %"struct.blink::PaintLayerRareData"*, %"struct.blink::PaintLayerRareData"** %154, align 8
  %156 = icmp eq %"struct.blink::PaintLayerRareData"* %155, null
  br i1 %156, label %164, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"struct.blink::PaintLayerRareData", %"struct.blink::PaintLayerRareData"* %155, i64 0, i32 1, i32 0, i32 0, i32 0
  %159 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %158, align 8
  %160 = icmp eq %"class.blink::TransformationMatrix"* %159, null
  br i1 %160, label %164, label %161

161:                                              ; preds = %157
  %162 = bitcast %"class.blink::TransformationMatrix"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %162) #20
  call void @_ZNK5blink10PaintLayer16CurrentTransformEv(%"class.blink::TransformationMatrix"* nonnull sret %10, %"class.blink::PaintLayer"* nonnull %151) #20
  %163 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* nonnull %9, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %10) #20
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %162) #20
  br label %164

164:                                              ; preds = %153, %134, %157, %149, %161
  %165 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = sitofp i32 %166 to float
  %168 = fmul float %167, 1.562500e-02
  %169 = fpext float %168 to double
  %170 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %171 = load i32, i32* %170, align 4
  %172 = sitofp i32 %171 to float
  %173 = fmul float %172, 1.562500e-02
  %174 = fpext float %173 to double
  %175 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix13PostTranslateEdd(%"class.blink::TransformationMatrix"* nonnull %9, double %169, double %174) #20
  %176 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %177 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %176 to i96*
  %178 = load i96, i96* %177, align 4
  %179 = and i96 %178, 67108864
  %180 = icmp eq i96 %179, 0
  %181 = icmp eq %"class.blink::LayoutObject"* %1, %3
  %182 = or i1 %181, %180
  br i1 %182, label %261, label %183

183:                                              ; preds = %164
  %184 = icmp eq %"class.blink::LayoutObject"* %1, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %183
  %186 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %187 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %186, align 8
  %188 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %187, i64 92
  %189 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %188, align 8
  %190 = call zeroext i1 %189(%"class.blink::LayoutObject"* nonnull %1, i32 55) #20
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %68, align 8
  %193 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %192, i64 0, i32 0, i32 9
  %194 = bitcast [20 x i8]* %193 to i160*
  %195 = load i160, i160* %194, align 8
  %196 = and i160 %195, 8462480737302404222943232
  %197 = icmp eq i160 %196, 1208925819614629174706176
  br i1 %197, label %263, label %198

198:                                              ; preds = %191, %185, %183
  %199 = load i96, i96* %177, align 4
  %200 = and i96 %199, 8589934592
  %201 = icmp eq i96 %200, 0
  br i1 %201, label %261, label %202

202:                                              ; preds = %198
  %203 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %204 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %203, i64 0, i32 0, i32 9
  %205 = bitcast [20 x i8]* %204 to i160*
  %206 = load i160, i160* %205, align 8
  %207 = lshr i160 %206, 74
  %208 = trunc i160 %207 to i32
  %209 = and i32 %208, 7
  switch i32 %209, label %210 [
    i32 5, label %261
    i32 2, label %261
  ]

210:                                              ; preds = %202
  %211 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutBoxModelObject"*
  %212 = call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %211) #20
  %213 = call <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"* %212) #20
  %214 = extractelement <2 x float> %213, i32 0
  %215 = fmul float %214, 6.400000e+01
  %216 = fcmp ult float %215, 0xC1E0000000000000
  %217 = fcmp ugt float %215, 0x41DFFFFFE0000000
  %218 = fcmp ogt float %215, 0xC1E0000000000000
  %219 = select i1 %218, float %215, float 0xC1E0000000000000
  %220 = fptosi float %219 to i32
  %221 = select i1 %216, i32 0, i32 2147483647
  %222 = select i1 %217, i32 %221, i32 %220
  %223 = extractelement <2 x float> %213, i32 1
  %224 = fmul float %223, 6.400000e+01
  %225 = fcmp ult float %224, 0xC1E0000000000000
  %226 = fcmp ugt float %224, 0x41DFFFFFE0000000
  %227 = fcmp ogt float %224, 0xC1E0000000000000
  %228 = select i1 %227, float %224, float 0xC1E0000000000000
  %229 = fptosi float %228 to i32
  %230 = select i1 %225, i32 0, i32 2147483647
  %231 = select i1 %226, i32 %230, i32 %229
  %232 = call i1 @llvm.is.constant.i32(i32 %222) #20
  br i1 %232, label %233, label %237

233:                                              ; preds = %210
  %234 = sub i32 0, %222
  %235 = icmp eq i32 %234, -2147483648
  %236 = select i1 %235, i32 2147483647, i32 %234
  br label %242

237:                                              ; preds = %210
  %238 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %222) #20
  %239 = extractvalue { i32, i1 } %238, 1
  %240 = extractvalue { i32, i1 } %238, 0
  %241 = select i1 %239, i32 2147483647, i32 %240
  br label %242

242:                                              ; preds = %237, %233
  %243 = phi i32 [ %236, %233 ], [ %241, %237 ]
  %244 = call i1 @llvm.is.constant.i32(i32 %231) #20
  br i1 %244, label %245, label %249

245:                                              ; preds = %242
  %246 = sub i32 0, %231
  %247 = icmp eq i32 %246, -2147483648
  %248 = select i1 %247, i32 2147483647, i32 %246
  br label %254

249:                                              ; preds = %242
  %250 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %231) #20
  %251 = extractvalue { i32, i1 } %250, 1
  %252 = extractvalue { i32, i1 } %250, 0
  %253 = select i1 %251, i32 2147483647, i32 %252
  br label %254

254:                                              ; preds = %245, %249
  %255 = phi i32 [ %248, %245 ], [ %253, %249 ]
  %256 = sitofp i32 %243 to double
  %257 = fmul double %256, 1.562500e-02
  %258 = sitofp i32 %255 to double
  %259 = fmul double %258, 1.562500e-02
  %260 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix13PostTranslateEdd(%"class.blink::TransformationMatrix"* nonnull %9, double %257, double %259) #20
  br label %261

261:                                              ; preds = %202, %202, %198, %164, %254
  %262 = icmp eq %"class.blink::LayoutObject"* %1, null
  br i1 %262, label %356, label %263

263:                                              ; preds = %191, %261
  %264 = load i96, i96* %177, align 4
  %265 = and i96 %264, 4294967296
  %266 = icmp eq i96 %265, 0
  br i1 %266, label %356, label %267

267:                                              ; preds = %263
  %268 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %269 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %268, i64 0, i32 0, i32 3, i32 0, i32 0
  %270 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %269, align 8
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %270, i64 0, i32 2, i32 0, i32 0
  %272 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %271, align 8
  %273 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %272, i64 0, i32 2, i32 0, i32 0
  %274 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %273, align 8
  %275 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %274, i64 0, i32 32
  %276 = load float, float* %275, align 4
  %277 = fcmp ogt float %276, 0.000000e+00
  br i1 %277, label %278, label %356

278:                                              ; preds = %267
  %279 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_transform_interop_enabled_E, align 1, !range !4
  %280 = icmp eq i8 %279, 0
  br i1 %280, label %286, label %281

281:                                              ; preds = %278
  %282 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject20NonAnonymousAncestorEv(%"class.blink::LayoutObject"* %13) #20
  %283 = icmp eq %"class.blink::LayoutObject"* %282, %1
  br i1 %283, label %284, label %356

284:                                              ; preds = %281
  %285 = load i96, i96* %177, align 4
  br label %286

286:                                              ; preds = %284, %278
  %287 = phi i96 [ %285, %284 ], [ %264, %278 ]
  %288 = and i96 %287, 67108864
  %289 = icmp eq i96 %288, 0
  %290 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutBox"*
  %291 = select i1 %289, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %290
  br i1 %289, label %324, label %292

292:                                              ; preds = %286
  %293 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %291, i64 0, i32 0, i32 0, i32 4
  %294 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %293 to i96*
  %295 = load i96, i96* %294, align 4
  %296 = and i96 %295, 17179869184
  %297 = icmp eq i96 %296, 0
  br i1 %297, label %324, label %298

298:                                              ; preds = %292
  %299 = bitcast <2 x float>* %7 to %"class.blink::FloatSize"*
  %300 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %300) #20
  %301 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %291, i64 0, i32 2, i32 1
  %302 = bitcast %"class.blink::LayoutSize"* %301 to i64*
  %303 = load i64, i64* %302, align 4
  %304 = trunc i64 %303 to i32
  %305 = lshr i64 %303, 32
  %306 = trunc i64 %305 to i32
  %307 = sitofp i32 %304 to float
  %308 = fmul float %307, 1.562500e-02
  %309 = sitofp i32 %306 to float
  %310 = fmul float %309, 1.562500e-02
  %311 = insertelement <2 x float> undef, float %308, i32 0
  %312 = insertelement <2 x float> %311, float %310, i32 1
  store <2 x float> %312, <2 x float>* %7, align 8
  %313 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %291, i64 0, i32 0, i32 0, i32 5, i32 0
  %314 = bitcast %"class.blink::ComputedStyle"** %313 to %"class.blink::ComputedStyleBase"**
  %315 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %314, align 8
  %316 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %315, i64 0, i32 3, i32 0, i32 0
  %317 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %316, align 8
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %317, i64 0, i32 2, i32 0, i32 0
  %319 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %318, align 8
  %320 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %319, i64 0, i32 2, i32 0, i32 0
  %321 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %320, align 8
  %322 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %321, i64 0, i32 24
  %323 = call <2 x float> @_ZN5blink24FloatPointForLengthPointERKNS_11LengthPointERKNS_9FloatSizeE(%"struct.blink::LengthPoint"* dereferenceable(16) %322, %"class.blink::FloatSize"* nonnull dereferenceable(8) %299) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %300) #20
  br label %324

324:                                              ; preds = %298, %292, %286
  %325 = phi <2 x float> [ zeroinitializer, %286 ], [ %323, %298 ], [ zeroinitializer, %292 ]
  %326 = bitcast %"class.blink::TransformationMatrix"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %326) #20
  %327 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %11, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %327, align 8
  %328 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %11, i64 0, i32 0, i32 0, i64 0, i64 1
  %329 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %11, i64 0, i32 0, i32 0, i64 1, i64 1
  %330 = bitcast double* %328 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %330, i8 0, i64 32, i1 false) #20
  store double 1.000000e+00, double* %329, align 8
  %331 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %11, i64 0, i32 0, i32 0, i64 1, i64 2
  %332 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %11, i64 0, i32 0, i32 0, i64 2, i64 2
  %333 = bitcast double* %331 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %333, i8 0, i64 32, i1 false) #20
  store double 1.000000e+00, double* %332, align 8
  %334 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %11, i64 0, i32 0, i32 0, i64 2, i64 3
  %335 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %11, i64 0, i32 0, i32 0, i64 3, i64 3
  %336 = bitcast double* %334 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %336, i8 0, i64 32, i1 false) #20
  store double 1.000000e+00, double* %335, align 8
  %337 = bitcast %"class.blink::ComputedStyle"** %14 to %"class.blink::ComputedStyleBase"**
  %338 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %337, align 8
  %339 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %338, i64 0, i32 3, i32 0, i32 0
  %340 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %339, align 8
  %341 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %340, i64 0, i32 2, i32 0, i32 0
  %342 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %341, align 8
  %343 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %342, i64 0, i32 2, i32 0, i32 0
  %344 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %343, align 8
  %345 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %344, i64 0, i32 32
  %346 = load float, float* %345, align 4
  %347 = fpext float %346 to double
  %348 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix16ApplyPerspectiveEd(%"class.blink::TransformationMatrix"* nonnull %11, double %347) #20
  %349 = extractelement <2 x float> %325, i32 0
  %350 = fpext float %349 to double
  %351 = extractelement <2 x float> %325, i32 1
  %352 = fpext float %351 to double
  %353 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix20ApplyTransformOriginEddd(%"class.blink::TransformationMatrix"* nonnull %11, double %350, double %352, double 0.000000e+00) #20
  %354 = bitcast %"class.blink::TransformationMatrix"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %354) #20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %354, i8* nonnull align 8 %326, i64 128, i1 false) #20
  %355 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* nonnull %12, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %9) #20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %135, i8* nonnull align 8 %354, i64 128, i1 false) #20
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %354) #20
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %326) #20
  br label %356

356:                                              ; preds = %263, %261, %267, %324, %281
  call void @_ZN5blink14TransformState14ApplyTransformERKNS_20TransformationMatrixENS0_21TransformAccumulationE(%"class.blink::TransformState"* %5, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %9, i32 %53) #20
  br i1 %52, label %358, label %357

357:                                              ; preds = %356
  call void @_ZN5blink14TransformState7FlattenEv(%"class.blink::TransformState"* %5) #20
  br label %358

358:                                              ; preds = %357, %356
  %359 = load i96, i96* %177, align 4
  %360 = and i96 %359, 67108864
  %361 = icmp eq i96 %360, 0
  %362 = or i1 %181, %361
  br i1 %362, label %368, label %363

363:                                              ; preds = %358
  %364 = call zeroext i1 @_ZNK5blink12LayoutObject22HasClipRelatedPropertyEv(%"class.blink::LayoutObject"* %1) #20
  br i1 %364, label %365, label %368

365:                                              ; preds = %363
  %366 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutBox"*
  %367 = call zeroext i1 @_ZNK5blink9LayoutBox13ApplyBoxClipsERNS_14TransformStateENS1_21TransformAccumulationENS_15VisualRectFlagsE(%"class.blink::LayoutBox"* %366, %"class.blink::TransformState"* dereferenceable(64) %5, i32 undef, i32 %4)
  br label %368

368:                                              ; preds = %363, %358, %365
  %369 = phi i1 [ %367, %365 ], [ true, %358 ], [ true, %363 ]
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %135) #20
  br label %370

370:                                              ; preds = %63, %368, %66
  %371 = phi i1 [ %369, %368 ], [ true, %66 ], [ false, %63 ]
  ret i1 %371
}

declare zeroext i1 @_ZNK5blink12LayoutObject31ShouldUseTransformFromContainerEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #5

declare void @_ZN5blink14TransformState4MoveERKNS_14PhysicalOffsetENS0_21TransformAccumulationE(%"class.blink::TransformState"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox25MapContentsRectToBoxSpaceERNS_14TransformStateENS1_21TransformAccumulationERKNS_12LayoutObjectENS_15VisualRectFlagsE(%"class.blink::LayoutBox"*, %"class.blink::TransformState"* dereferenceable(64), i32, %"class.blink::LayoutObject"* nocapture readonly dereferenceable(88), i32) local_unnamed_addr #9 align 2 {
  %6 = alloca %"struct.blink::PhysicalOffset", align 4
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZNK5blink12LayoutObject22HasClipRelatedPropertyEv(%"class.blink::LayoutObject"* %7) #20
  br i1 %8, label %9, label %91

9:                                                ; preds = %5
  %10 = icmp eq %"class.blink::LayoutBox"* %0, null
  br i1 %10, label %25, label %11

11:                                               ; preds = %9
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %13, i64 92
  %15 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutObject"* %7, i32 55) #20
  br i1 %16, label %17, label %25

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8
  %23 = and i160 %22, 8462480737302404222943232
  %24 = icmp eq i160 %23, 1208925819614629174706176
  br i1 %24, label %89, label %25

25:                                               ; preds = %17, %11, %9
  %26 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = and i96 %28, 8589934592
  %30 = icmp eq i96 %29, 0
  br i1 %30, label %89, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = lshr i160 %36, 74
  %38 = trunc i160 %37 to i32
  %39 = and i32 %38, 7
  switch i32 %39, label %40 [
    i32 5, label %89
    i32 2, label %89
  ]

40:                                               ; preds = %31
  %41 = bitcast %"struct.blink::PhysicalOffset"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #20
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %43 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %42) #20
  %44 = tail call <2 x float> @_ZNK5blink24PaintLayerScrollableArea15GetScrollOffsetEv(%"class.blink::PaintLayerScrollableArea"* %43) #20
  %45 = extractelement <2 x float> %44, i32 0
  %46 = fmul float %45, 6.400000e+01
  %47 = fcmp ult float %46, 0xC1E0000000000000
  %48 = fcmp ugt float %46, 0x41DFFFFFE0000000
  %49 = fcmp ogt float %46, 0xC1E0000000000000
  %50 = select i1 %49, float %46, float 0xC1E0000000000000
  %51 = fptosi float %50 to i32
  %52 = select i1 %47, i32 0, i32 2147483647
  %53 = select i1 %48, i32 %52, i32 %51
  %54 = extractelement <2 x float> %44, i32 1
  %55 = fmul float %54, 6.400000e+01
  %56 = fcmp ult float %55, 0xC1E0000000000000
  %57 = fcmp ugt float %55, 0x41DFFFFFE0000000
  %58 = fcmp ogt float %55, 0xC1E0000000000000
  %59 = select i1 %58, float %55, float 0xC1E0000000000000
  %60 = fptosi float %59 to i32
  %61 = select i1 %56, i32 0, i32 2147483647
  %62 = select i1 %57, i32 %61, i32 %60
  %63 = tail call i1 @llvm.is.constant.i32(i32 %53) #20
  br i1 %63, label %64, label %68

64:                                               ; preds = %40
  %65 = sub i32 0, %53
  %66 = icmp eq i32 %65, -2147483648
  %67 = select i1 %66, i32 2147483647, i32 %65
  br label %73

68:                                               ; preds = %40
  %69 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %53) #20
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 2147483647, i32 %71
  br label %73

73:                                               ; preds = %68, %64
  %74 = phi i32 [ %67, %64 ], [ %72, %68 ]
  %75 = tail call i1 @llvm.is.constant.i32(i32 %62) #20
  br i1 %75, label %76, label %80

76:                                               ; preds = %73
  %77 = sub i32 0, %62
  %78 = icmp eq i32 %77, -2147483648
  %79 = select i1 %78, i32 2147483647, i32 %77
  br label %85

80:                                               ; preds = %73
  %81 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %62) #20
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 2147483647, i32 %83
  br label %85

85:                                               ; preds = %76, %80
  %86 = phi i32 [ %79, %76 ], [ %84, %80 ]
  %87 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %6, i64 0, i32 0, i32 0
  store i32 %74, i32* %87, align 4
  %88 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %6, i64 0, i32 1, i32 0
  store i32 %86, i32* %88, align 4
  call void @_ZN5blink14TransformState4MoveERKNS_14PhysicalOffsetENS0_21TransformAccumulationE(%"class.blink::TransformState"* %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %6, i32 0) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #20
  br label %89

89:                                               ; preds = %31, %31, %25, %17, %85
  %90 = call zeroext i1 @_ZNK5blink9LayoutBox13ApplyBoxClipsERNS_14TransformStateENS1_21TransformAccumulationENS_15VisualRectFlagsE(%"class.blink::LayoutBox"* %0, %"class.blink::TransformState"* dereferenceable(64) %1, i32 undef, i32 %4)
  br label %91

91:                                               ; preds = %5, %89
  %92 = phi i1 [ %90, %89 ], [ true, %5 ]
  ret i1 %92
}

declare void @_ZN5blink14TransformState7FlattenEv(%"class.blink::TransformState"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9FloatQuad20EnclosingBoundingBoxEv(%"class.blink::FloatQuad"*) local_unnamed_addr #9 comdat align 2 {
  %2 = tail call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* %0) #20
  %3 = extractvalue { <2 x float>, <2 x float> } %2, 0
  %4 = extractvalue { <2 x float>, <2 x float> } %2, 1
  %5 = extractelement <2 x float> %3, i32 0
  %6 = tail call float @llvm.floor.f32(float %5) #20
  %7 = fpext float %6 to double
  %8 = fcmp ult double %7, 0x41DFFFFFFFC00000
  br i1 %8, label %9, label %14

9:                                                ; preds = %1
  %10 = fcmp ugt float %6, 0xC1E0000000000000
  br i1 %10, label %11, label %14

11:                                               ; preds = %9
  %12 = fptosi float %6 to i32
  %13 = zext i32 %12 to i64
  br label %14

14:                                               ; preds = %11, %9, %1
  %15 = phi i64 [ %13, %11 ], [ 2147483647, %1 ], [ 2147483648, %9 ]
  %16 = extractelement <2 x float> %3, i32 1
  %17 = tail call float @llvm.floor.f32(float %16) #20
  %18 = fpext float %17 to double
  %19 = fcmp ult double %18, 0x41DFFFFFFFC00000
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = fcmp ugt float %17, 0xC1E0000000000000
  br i1 %21, label %22, label %26

22:                                               ; preds = %20
  %23 = fptosi float %17 to i32
  %24 = zext i32 %23 to i64
  %25 = shl nuw i64 %24, 32
  br label %26

26:                                               ; preds = %22, %20, %14
  %27 = phi i64 [ %25, %22 ], [ 9223372032559808512, %14 ], [ -9223372036854775808, %20 ]
  %28 = trunc i64 %15 to i32
  %29 = lshr exact i64 %27, 32
  %30 = trunc i64 %29 to i32
  %31 = extractelement <2 x float> %4, i32 0
  %32 = fadd float %5, %31
  %33 = extractelement <2 x float> %4, i32 1
  %34 = fadd float %16, %33
  %35 = tail call float @llvm.ceil.f32(float %32) #20
  %36 = fpext float %35 to double
  %37 = fcmp ult double %36, 0x41DFFFFFFFC00000
  br i1 %37, label %38, label %42

38:                                               ; preds = %26
  %39 = fcmp ugt float %35, 0xC1E0000000000000
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = fptosi float %35 to i32
  br label %42

42:                                               ; preds = %40, %38, %26
  %43 = phi i32 [ %41, %40 ], [ 2147483647, %26 ], [ -2147483648, %38 ]
  %44 = tail call float @llvm.ceil.f32(float %34) #20
  %45 = fpext float %44 to double
  %46 = fcmp ult double %45, 0x41DFFFFFFFC00000
  br i1 %46, label %47, label %51

47:                                               ; preds = %42
  %48 = fcmp ugt float %44, 0xC1E0000000000000
  br i1 %48, label %49, label %51

49:                                               ; preds = %47
  %50 = fptosi float %44 to i32
  br label %51

51:                                               ; preds = %42, %47, %49
  %52 = phi i32 [ %50, %49 ], [ 2147483647, %42 ], [ -2147483648, %47 ]
  %53 = icmp sgt i32 %28, -1
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %28) #20
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !2
  %59 = icmp sgt i32 %30, -1
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %52, i32 %30) #20
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !2
  %65 = or i64 %27, %15
  %66 = zext i32 %64 to i64
  %67 = shl nuw i64 %66, 32
  %68 = zext i32 %58 to i64
  %69 = or i64 %67, %68
  %70 = insertvalue { i64, i64 } undef, i64 %65, 0
  %71 = insertvalue { i64, i64 } %70, i64 %69, 1
  ret { i64, i64 } %71
}

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #5

declare void @_ZNK5blink10PaintLayer16CurrentTransformEv(%"class.blink::TransformationMatrix"* sret, %"class.blink::PaintLayer"*) local_unnamed_addr #5

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix13PostTranslateEdd(%"class.blink::TransformationMatrix"*, double, double) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox23ContainedContentsScrollERKNS_12LayoutObjectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"* nocapture readonly dereferenceable(88)) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.blink::LayoutBox"* %0, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %6 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %7 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %7, i64 92
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::LayoutObject"* %5, i32 55) #20
  br i1 %10, label %11, label %19

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = and i160 %16, 8462480737302404222943232
  %18 = icmp eq i160 %17, 1208925819614629174706176
  br i1 %18, label %37, label %19

19:                                               ; preds = %2, %11, %4
  %20 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %21 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %20 to i96*
  %22 = load i96, i96* %21, align 4
  %23 = and i96 %22, 8589934592
  %24 = icmp eq i96 %23, 0
  br i1 %24, label %37, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = lshr i160 %30, 74
  %32 = trunc i160 %31 to i32
  %33 = and i32 %32, 7
  %34 = icmp ne i32 %33, 2
  %35 = icmp ne i32 %33, 5
  %36 = and i1 %34, %35
  br label %37

37:                                               ; preds = %25, %19, %11
  %38 = phi i1 [ false, %11 ], [ false, %19 ], [ %36, %25 ]
  ret i1 %38
}

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject20NonAnonymousAncestorEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix16ApplyPerspectiveEd(%"class.blink::TransformationMatrix"*, double) local_unnamed_addr #5

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix20ApplyTransformOriginEddd(%"class.blink::TransformationMatrix"*, double, double, double) local_unnamed_addr #5

declare void @_ZN5blink14TransformState14ApplyTransformERKNS_20TransformationMatrixENS0_21TransformAccumulationE(%"class.blink::TransformState"*, %"class.blink::TransformationMatrix"* dereferenceable(128), i32) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink12LayoutObject22HasClipRelatedPropertyEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox13ApplyBoxClipsERNS_14TransformStateENS1_21TransformAccumulationENS_15VisualRectFlagsE(%"class.blink::LayoutBox"*, %"class.blink::TransformState"* dereferenceable(64), i32, i32) local_unnamed_addr #9 align 2 {
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"struct.blink::PhysicalOffset"*
  %9 = alloca %"struct.blink::PhysicalRect", align 4
  %10 = alloca %"class.blink::FloatQuad", align 4
  %11 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #20
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %13 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #20
  store i64 0, i64* %7, align 8
  %14 = call { i64, i64 } @_ZNK5blink9LayoutBox12ClippingRectERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"* %0, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %8)
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %16 = extractvalue { i64, i64 } %14, 0
  store i64 %16, i64* %15, align 8
  %17 = extractvalue { i64, i64 } %14, 1
  store i64 %17, i64* %12, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #20
  call void @_ZN5blink14TransformState7FlattenEv(%"class.blink::TransformState"* %1) #20
  %18 = bitcast %"struct.blink::PhysicalRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #20
  %19 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 1, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 1, i32 1, i32 0
  %23 = bitcast %"class.blink::FloatQuad"* %10 to i8*
  %24 = bitcast %"struct.blink::PhysicalRect"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %24, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #20
  %25 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1
  %26 = bitcast %"class.blink::FloatQuad"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 8 %26, i64 32, i1 false) #20
  %27 = call { i64, i64 } @_ZNK5blink9FloatQuad20EnclosingBoundingBoxEv(%"class.blink::FloatQuad"* nonnull %10)
  %28 = extractvalue { i64, i64 } %27, 0
  %29 = extractvalue { i64, i64 } %27, 1
  %30 = trunc i64 %28 to i32
  %31 = lshr i64 %28, 32
  %32 = trunc i64 %31 to i32
  %33 = icmp sgt i32 %30, 33554431
  br i1 %33, label %38, label %34

34:                                               ; preds = %4
  %35 = icmp slt i32 %30, -33554432
  %36 = shl i32 %30, 6
  %37 = select i1 %35, i32 -2147483648, i32 %36
  br label %38

38:                                               ; preds = %34, %4
  %39 = phi i32 [ 2147483647, %4 ], [ %37, %34 ]
  store i32 %39, i32* %19, align 4
  %40 = icmp sgt i32 %32, 33554431
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  %42 = icmp slt i32 %32, -33554432
  br i1 %42, label %46, label %43

43:                                               ; preds = %41
  %44 = shl nuw nsw i64 %31, 6
  %45 = trunc i64 %44 to i32
  br label %46

46:                                               ; preds = %41, %38, %43
  %47 = phi i32 [ %45, %43 ], [ 2147483647, %38 ], [ -2147483648, %41 ]
  %48 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 0, i32 1, i32 0
  store i32 %47, i32* %48, align 4
  %49 = trunc i64 %29 to i32
  %50 = lshr i64 %29, 32
  %51 = trunc i64 %50 to i32
  %52 = icmp sgt i32 %49, 33554431
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  %54 = icmp slt i32 %49, -33554432
  %55 = shl i32 %49, 6
  %56 = select i1 %54, i32 -2147483648, i32 %55
  br label %57

57:                                               ; preds = %53, %46
  %58 = phi i32 [ 2147483647, %46 ], [ %56, %53 ]
  %59 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 1, i32 0, i32 0
  store i32 %58, i32* %59, align 4
  %60 = icmp sgt i32 %51, 33554431
  br i1 %60, label %66, label %61

61:                                               ; preds = %57
  %62 = icmp slt i32 %51, -33554432
  br i1 %62, label %66, label %63

63:                                               ; preds = %61
  %64 = shl nuw nsw i64 %50, 6
  %65 = trunc i64 %64 to i32
  br label %66

66:                                               ; preds = %61, %57, %63
  %67 = phi i32 [ %65, %63 ], [ 2147483647, %57 ], [ -2147483648, %61 ]
  %68 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 1, i32 1, i32 0
  store i32 %67, i32* %68, align 4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #20
  %69 = and i32 %3, 1
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %66
  %72 = call zeroext i1 @_ZN5blink12PhysicalRect18InclusiveIntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %9, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #20
  %73 = load i32, i32* %21, align 4
  %74 = load i32, i32* %22, align 4
  br label %81

75:                                               ; preds = %66
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %9, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #20
  %76 = load i32, i32* %21, align 4
  %77 = icmp ne i32 %76, 0
  %78 = load i32, i32* %22, align 4
  %79 = icmp ne i32 %78, 0
  %80 = and i1 %77, %79
  br label %81

81:                                               ; preds = %75, %71
  %82 = phi i32 [ %74, %71 ], [ %78, %75 ]
  %83 = phi i32 [ %73, %71 ], [ %76, %75 ]
  %84 = phi i1 [ %72, %71 ], [ %80, %75 ]
  %85 = load i32, i32* %19, align 4
  %86 = sitofp i32 %85 to float
  %87 = fmul float %86, 1.562500e-02
  %88 = load i32, i32* %20, align 4
  %89 = sitofp i32 %88 to float
  %90 = fmul float %89, 1.562500e-02
  %91 = sitofp i32 %83 to float
  %92 = fmul float %91, 1.562500e-02
  %93 = sitofp i32 %82 to float
  %94 = fmul float %93, 1.562500e-02
  %95 = insertelement <2 x float> undef, float %87, i32 0
  %96 = insertelement <2 x float> %95, float %90, i32 1
  %97 = fadd float %87, %92
  %98 = fadd float %90, %94
  %99 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 3
  %100 = bitcast %"struct.blink::PhysicalOffset"* %99 to i64*
  store i64 0, i64* %100, align 8
  %101 = bitcast %"class.blink::FloatQuad"* %25 to <2 x float>*
  store <2 x float> %96, <2 x float>* %101, align 8
  %102 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1, i32 1, i32 0
  store float %97, float* %102, align 8
  %103 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1, i32 1, i32 1
  store float %90, float* %103, align 4
  %104 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1, i32 2, i32 0
  store float %97, float* %104, align 8
  %105 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1, i32 2, i32 1
  store float %98, float* %105, align 4
  %106 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1, i32 3, i32 0
  store float %87, float* %106, align 8
  %107 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1, i32 3, i32 1
  store float %98, float* %107, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #20
  ret i1 %84
}

declare zeroext i1 @_ZN5blink12PhysicalRect18InclusiveIntersectERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK5blink9LayoutBox22PreferredLogicalWidthsEv(%"class.blink::LayoutBox"* nocapture readnone) unnamed_addr #12 align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9LayoutBox22IntrinsicLogicalWidthsENS_15MinMaxSizesTypeE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"struct.blink::MinMaxSizes"*
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %6 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %7 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %7, i64 169
  %9 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::LayoutBox"* %0) #20
  %11 = xor i1 %10, true
  %12 = icmp eq i32 %1, 0
  %13 = and i1 %12, %11
  br i1 %13, label %14, label %44

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %16 = bitcast %"class.blink::ComputedStyle"** %15 to %"class.blink::ComputedStyleBase"**
  %17 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %17, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %19, i64 0, i32 1, i32 1, i32 0
  %21 = load float, float* %20, align 4
  %22 = fcmp oeq float %21, 0.000000e+00
  br i1 %22, label %44, label %23

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %19, i64 0, i32 1, i32 1, i32 1
  %25 = load float, float* %24, align 4
  %26 = fcmp oeq float %25, 0.000000e+00
  %27 = fcmp olt float %21, 1.562500e-02
  %28 = or i1 %27, %26
  %29 = fcmp olt float %25, 1.562500e-02
  %30 = or i1 %29, %28
  br i1 %30, label %44, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %19, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 4
  %34 = and i8 %33, 3
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %44, label %36

36:                                               ; preds = %31
  %37 = bitcast i64* %3 to %"class.blink::LayoutUnit"*
  %38 = bitcast i64* %3 to i32*
  %39 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %4, i64 0, i32 1, i32 0
  store i32 0, i32* %38, align 8
  store i32 0, i32* %39, align 4
  %40 = call zeroext i1 @_ZNK5blink9LayoutBox34ComputeLogicalWidthFromAspectRatioEPNS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutUnit"* nonnull %37)
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = load i32, i32* %38, align 8
  store i32 %42, i32* %39, align 4
  %43 = load i64, i64* %3, align 8
  br label %63

44:                                               ; preds = %14, %23, %36, %2, %31
  %45 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %46 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %45 to i96*
  %47 = load i96, i96* %46, align 4
  %48 = and i96 %47, 256
  %49 = icmp eq i96 %48, 0
  br i1 %49, label %59, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %52 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %51, align 8
  %53 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %52, i64 186
  %54 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %53, align 8
  %55 = tail call i64 %54(%"class.blink::LayoutBox"* %0) #20
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 5
  %57 = bitcast %"struct.blink::MinMaxSizes"* %56 to i64*
  store i64 %55, i64* %57, align 4
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 6, i32 0
  store i32 -2147483648, i32* %58, align 4
  tail call void @_ZN5blink12LayoutObject32ClearIntrinsicLogicalWidthsDirtyEv(%"class.blink::LayoutObject"* %5) #20
  br label %59

59:                                               ; preds = %44, %50
  %60 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 5
  %61 = bitcast %"struct.blink::MinMaxSizes"* %60 to i64*
  %62 = load i64, i64* %61, align 4
  store i64 %62, i64* %3, align 8
  br label %63

63:                                               ; preds = %59, %41
  %64 = phi i64 [ %62, %59 ], [ %43, %41 ]
  ret i64 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox34ComputeLogicalWidthFromAspectRatioEPNS_10LayoutUnitE(%"class.blink::LayoutBox"*, %"class.blink::LayoutUnit"* nocapture) local_unnamed_addr #9 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca %"class.blink::Length"*, align 8
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = alloca %"class.blink::Length"*, align 8
  %18 = alloca %"class.blink::LayoutUnit", align 4
  %19 = alloca %"struct.blink::NGBoxStrut", align 4
  %20 = alloca i64, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %22 = bitcast %"class.blink::LayoutUnit"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #20
  %23 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %18, i64 0, i32 0
  store i32 0, i32* %23, align 4
  %24 = call zeroext i1 @_ZNK5blink9LayoutBox40ShouldComputeLogicalWidthFromAspectRatioEPNS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutUnit"* nonnull %18)
  br i1 %24, label %25, label %358

25:                                               ; preds = %2
  %26 = bitcast i64* %20 to %"struct.blink::LogicalSize"*
  %27 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %21, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %28 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %27, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %29 = bitcast %"class.blink::ComputedStyle"** %28 to %"class.blink::ComputedStyleBase"**
  %30 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %30, i64 0, i32 9
  %32 = bitcast [20 x i8]* %31 to i160*
  %33 = load i160, i160* %32, align 8
  %34 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %35 = bitcast %"class.blink::ComputedStyle"** %34 to %"class.blink::ComputedStyleBase"**
  %36 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %36, i64 0, i32 9
  %38 = bitcast [20 x i8]* %37 to i160*
  %39 = load i160, i160* %38, align 8
  %40 = and i160 %33, 15211807202738752817960438464512
  %41 = icmp ne i160 %40, 0
  %42 = and i160 %39, 15211807202738752817960438464512
  %43 = icmp eq i160 %42, 0
  %44 = xor i1 %41, %43
  br i1 %44, label %45, label %51

45:                                               ; preds = %25
  %46 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %47 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %46, align 8
  %48 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %47, i64 131
  %49 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %48, align 8
  %50 = call i32 %49(%"class.blink::LayoutBox"* %0) #20
  br label %53

51:                                               ; preds = %25
  %52 = call i32 @_ZNK5blink9LayoutBox41PerpendicularContainingBlockLogicalHeightEv(%"class.blink::LayoutBox"* %0) #20
  br label %53

53:                                               ; preds = %45, %51
  %54 = phi i32 [ %50, %45 ], [ %52, %51 ]
  %55 = icmp sgt i32 %54, 0
  %56 = select i1 %55, i32 %54, i32 0
  %57 = bitcast %"struct.blink::NGBoxStrut"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #20
  %58 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %19, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %19, i64 0, i32 1, i32 0
  %60 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %19, i64 0, i32 2, i32 0
  %61 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %19, i64 0, i32 3, i32 0
  %62 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %63 = bitcast %"struct.blink::NGBoxStrut"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %63, i8 -86, i64 16, i1 false)
  %64 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8, !noalias !63
  %65 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %64, i64 0, i32 0, i32 9
  %66 = bitcast [20 x i8]* %65 to i160*
  %67 = load i160, i160* %66, align 8, !noalias !63
  %68 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  %69 = and i160 %67, 15211807202738752817960438464512
  %70 = icmp eq i160 %69, 0
  %71 = and i160 %67, 41538374868278621028243970633760768
  %72 = icmp eq i160 %71, 0
  %73 = select i1 %72, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %74 = select i1 %72, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %75 = select i1 %70, { i64, i64 } %74, { i64, i64 } %73
  %76 = select i1 %70, { i64, i64 } %74, { i64, i64 } %73
  %77 = extractvalue { i64, i64 } %75, 0
  %78 = extractvalue { i64, i64 } %76, 1
  %79 = getelementptr inbounds i8, i8* %68, i64 %78
  %80 = bitcast i8* %79 to %"class.blink::LayoutBoxModelObject"*
  %81 = and i64 %77, 1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %90, label %83

83:                                               ; preds = %53
  %84 = bitcast i8* %79 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = add i64 %77, -1
  %87 = getelementptr i8, i8* %85, i64 %86
  %88 = bitcast i8* %87 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %89 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %88, align 8
  br label %92

90:                                               ; preds = %53
  %91 = inttoptr i64 %77 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %92

92:                                               ; preds = %83, %90
  %93 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %89, %83 ], [ %91, %90 ]
  %94 = call i32 %93(%"class.blink::LayoutBoxModelObject"* %80) #20
  %95 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %96 = bitcast %"class.blink::Length"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96)
  %97 = bitcast %"class.blink::Length"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97)
  %98 = bitcast %"class.blink::Length"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98)
  %99 = bitcast %"class.blink::Length"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99)
  %100 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %95, i64 0, i32 0, i32 9
  %101 = bitcast [20 x i8]* %100 to i160*
  %102 = load i160, i160* %101, align 8, !noalias !66
  %103 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %95, i64 0, i32 0, i32 7, i32 0, i32 0
  %104 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %103, align 8, !noalias !66
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %104, i64 0, i32 16
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %104, i64 0, i32 15
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %104, i64 0, i32 13
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %104, i64 0, i32 14
  store %"class.blink::Length"* %105, %"class.blink::Length"** %14, align 8, !alias.scope !66
  store %"class.blink::Length"* %106, %"class.blink::Length"** %15, align 8, !alias.scope !66
  store %"class.blink::Length"* %107, %"class.blink::Length"** %16, align 8, !alias.scope !66
  store %"class.blink::Length"* %108, %"class.blink::Length"** %17, align 8, !alias.scope !66
  %109 = and i160 %102, 15211807202738752817960438464512
  %110 = icmp eq i160 %109, 0
  %111 = and i160 %102, 41538374868278621028243970633760768
  %112 = icmp eq i160 %111, 0
  %113 = select i1 %112, %"class.blink::Length"** %17, %"class.blink::Length"** %15
  %114 = select i1 %112, %"class.blink::Length"** %14, %"class.blink::Length"** %16
  %115 = select i1 %110, %"class.blink::Length"** %113, %"class.blink::Length"** %114
  %116 = load %"class.blink::Length"*, %"class.blink::Length"** %115, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99)
  %117 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %62, %"class.blink::Length"* dereferenceable(8) %116) #20
  %118 = icmp slt i32 %117, 0
  %119 = select i1 %118, i32 -2147483648, i32 2147483647
  %120 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %94, i32 %117) #20
  %121 = extractvalue { i32, i1 } %120, 1
  %122 = extractvalue { i32, i1 } %120, 0
  %123 = select i1 %121, i32 %119, i32 %122, !prof !2
  %124 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8, !noalias !69
  %125 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %124, i64 0, i32 0, i32 9
  %126 = bitcast [20 x i8]* %125 to i160*
  %127 = load i160, i160* %126, align 8, !noalias !69
  %128 = and i160 %127, 15211807202738752817960438464512
  %129 = icmp eq i160 %128, 0
  %130 = and i160 %127, 41538374868278621028243970633760768
  %131 = icmp eq i160 %130, 0
  %132 = select i1 %131, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %133 = select i1 %131, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %134 = select i1 %129, { i64, i64 } %133, { i64, i64 } %132
  %135 = select i1 %129, { i64, i64 } %133, { i64, i64 } %132
  %136 = extractvalue { i64, i64 } %134, 0
  %137 = extractvalue { i64, i64 } %135, 1
  %138 = getelementptr inbounds i8, i8* %68, i64 %137
  %139 = bitcast i8* %138 to %"class.blink::LayoutBoxModelObject"*
  %140 = and i64 %136, 1
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %149, label %142

142:                                              ; preds = %92
  %143 = bitcast i8* %138 to i8**
  %144 = load i8*, i8** %143, align 8
  %145 = add i64 %136, -1
  %146 = getelementptr i8, i8* %144, i64 %145
  %147 = bitcast i8* %146 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %148 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %147, align 8
  br label %151

149:                                              ; preds = %92
  %150 = inttoptr i64 %136 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %151

151:                                              ; preds = %142, %149
  %152 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %148, %142 ], [ %150, %149 ]
  %153 = call i32 %152(%"class.blink::LayoutBoxModelObject"* %139) #20
  %154 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %155 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155)
  %156 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156)
  %157 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157)
  %158 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158)
  %159 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %154, i64 0, i32 0, i32 9
  %160 = bitcast [20 x i8]* %159 to i160*
  %161 = load i160, i160* %160, align 8, !noalias !72
  %162 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %154, i64 0, i32 0, i32 7, i32 0, i32 0
  %163 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %162, align 8, !noalias !72
  %164 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %163, i64 0, i32 16
  %165 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %163, i64 0, i32 15
  %166 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %163, i64 0, i32 13
  %167 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %163, i64 0, i32 14
  store %"class.blink::Length"* %164, %"class.blink::Length"** %10, align 8, !alias.scope !72
  store %"class.blink::Length"* %165, %"class.blink::Length"** %11, align 8, !alias.scope !72
  store %"class.blink::Length"* %166, %"class.blink::Length"** %12, align 8, !alias.scope !72
  store %"class.blink::Length"* %167, %"class.blink::Length"** %13, align 8, !alias.scope !72
  %168 = and i160 %161, 15211807202738752817960438464512
  %169 = icmp eq i160 %168, 0
  %170 = and i160 %161, 41538374868278621028243970633760768
  %171 = icmp eq i160 %170, 0
  %172 = select i1 %171, %"class.blink::Length"** %11, %"class.blink::Length"** %13
  %173 = select i1 %171, %"class.blink::Length"** %12, %"class.blink::Length"** %10
  %174 = select i1 %169, %"class.blink::Length"** %172, %"class.blink::Length"** %173
  %175 = load %"class.blink::Length"*, %"class.blink::Length"** %174, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158)
  %176 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %62, %"class.blink::Length"* dereferenceable(8) %175) #20
  %177 = icmp slt i32 %176, 0
  %178 = select i1 %177, i32 -2147483648, i32 2147483647
  %179 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %153, i32 %176) #20
  %180 = extractvalue { i32, i1 } %179, 1
  %181 = extractvalue { i32, i1 } %179, 0
  %182 = select i1 %180, i32 %178, i32 %181, !prof !2
  %183 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8, !noalias !75
  %184 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %183, i64 0, i32 0, i32 9
  %185 = bitcast [20 x i8]* %184 to i160*
  %186 = load i160, i160* %185, align 8, !noalias !75
  %187 = lshr i160 %186, 102
  %188 = trunc i160 %187 to i8
  %189 = and i8 %188, 3
  switch i8 %189, label %190 [
    i8 0, label %199
    i8 1, label %191
  ]

190:                                              ; preds = %151
  br label %191

191:                                              ; preds = %190, %151
  %192 = phi { i64, i64 } [ { i64 993, i64 0 }, %190 ], [ { i64 1001, i64 0 }, %151 ]
  %193 = extractvalue { i64, i64 } %192, 0
  %194 = extractvalue { i64, i64 } %192, 1
  %195 = getelementptr inbounds i8, i8* %68, i64 %194
  %196 = bitcast i8* %195 to %"class.blink::LayoutBoxModelObject"*
  %197 = and i64 %193, 1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %209, label %199

199:                                              ; preds = %191, %151
  %200 = phi %"class.blink::LayoutBoxModelObject"* [ %196, %191 ], [ %62, %151 ]
  %201 = phi i8* [ %195, %191 ], [ %68, %151 ]
  %202 = phi i64 [ %193, %191 ], [ 977, %151 ]
  %203 = bitcast i8* %201 to i8**
  %204 = load i8*, i8** %203, align 8
  %205 = add i64 %202, -1
  %206 = getelementptr i8, i8* %204, i64 %205
  %207 = bitcast i8* %206 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %208 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %207, align 8
  br label %211

209:                                              ; preds = %191
  %210 = inttoptr i64 %193 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %211

211:                                              ; preds = %199, %209
  %212 = phi %"class.blink::LayoutBoxModelObject"* [ %200, %199 ], [ %196, %209 ]
  %213 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %208, %199 ], [ %210, %209 ]
  %214 = call i32 %213(%"class.blink::LayoutBoxModelObject"* %212) #20
  %215 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %216 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216)
  %217 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217)
  %218 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218)
  %219 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %215, i64 0, i32 0, i32 9
  %220 = bitcast [20 x i8]* %219 to i160*
  %221 = load i160, i160* %220, align 8, !noalias !78
  %222 = lshr i160 %221, 102
  %223 = trunc i160 %222 to i8
  %224 = and i8 %223, 3
  %225 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %215, i64 0, i32 0, i32 7, i32 0, i32 0
  %226 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %225, align 8, !noalias !78
  %227 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %226, i64 0, i32 16
  %228 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %226, i64 0, i32 15
  %229 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %226, i64 0, i32 14
  store %"class.blink::Length"* %227, %"class.blink::Length"** %7, align 8, !alias.scope !78
  store %"class.blink::Length"* %228, %"class.blink::Length"** %8, align 8, !alias.scope !78
  store %"class.blink::Length"* %229, %"class.blink::Length"** %9, align 8, !alias.scope !78
  %230 = icmp eq i8 %224, 0
  %231 = icmp eq i8 %224, 1
  %232 = select i1 %231, %"class.blink::Length"** %8, %"class.blink::Length"** %9
  %233 = select i1 %230, %"class.blink::Length"** %7, %"class.blink::Length"** %232
  %234 = load %"class.blink::Length"*, %"class.blink::Length"** %233, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %216)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218)
  %235 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %62, %"class.blink::Length"* dereferenceable(8) %234) #20
  %236 = icmp slt i32 %235, 0
  %237 = select i1 %236, i32 -2147483648, i32 2147483647
  %238 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %214, i32 %235) #20
  %239 = extractvalue { i32, i1 } %238, 1
  %240 = extractvalue { i32, i1 } %238, 0
  %241 = select i1 %239, i32 %237, i32 %240, !prof !2
  %242 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8, !noalias !81
  %243 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %242, i64 0, i32 0, i32 9
  %244 = bitcast [20 x i8]* %243 to i160*
  %245 = load i160, i160* %244, align 8, !noalias !81
  %246 = lshr i160 %245, 102
  %247 = trunc i160 %246 to i8
  %248 = and i8 %247, 3
  switch i8 %248, label %249 [
    i8 0, label %258
    i8 1, label %250
  ]

249:                                              ; preds = %211
  br label %250

250:                                              ; preds = %249, %211
  %251 = phi { i64, i64 } [ { i64 1001, i64 0 }, %249 ], [ { i64 993, i64 0 }, %211 ]
  %252 = extractvalue { i64, i64 } %251, 0
  %253 = extractvalue { i64, i64 } %251, 1
  %254 = getelementptr inbounds i8, i8* %68, i64 %253
  %255 = bitcast i8* %254 to %"class.blink::LayoutBoxModelObject"*
  %256 = and i64 %252, 1
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %268, label %258

258:                                              ; preds = %250, %211
  %259 = phi %"class.blink::LayoutBoxModelObject"* [ %255, %250 ], [ %62, %211 ]
  %260 = phi i8* [ %254, %250 ], [ %68, %211 ]
  %261 = phi i64 [ %252, %250 ], [ 985, %211 ]
  %262 = bitcast i8* %260 to i8**
  %263 = load i8*, i8** %262, align 8
  %264 = add i64 %261, -1
  %265 = getelementptr i8, i8* %263, i64 %264
  %266 = bitcast i8* %265 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %267 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %266, align 8
  br label %270

268:                                              ; preds = %250
  %269 = inttoptr i64 %252 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %270

270:                                              ; preds = %258, %268
  %271 = phi %"class.blink::LayoutBoxModelObject"* [ %259, %258 ], [ %255, %268 ]
  %272 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %267, %258 ], [ %269, %268 ]
  %273 = call i32 %272(%"class.blink::LayoutBoxModelObject"* %271) #20
  %274 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %275 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %275)
  %276 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276)
  %277 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %277)
  %278 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %274, i64 0, i32 0, i32 9
  %279 = bitcast [20 x i8]* %278 to i160*
  %280 = load i160, i160* %279, align 8, !noalias !84
  %281 = lshr i160 %280, 102
  %282 = trunc i160 %281 to i8
  %283 = and i8 %282, 3
  %284 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %274, i64 0, i32 0, i32 7, i32 0, i32 0
  %285 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %284, align 8, !noalias !84
  %286 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %285, i64 0, i32 15
  %287 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %285, i64 0, i32 13
  %288 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %285, i64 0, i32 14
  store %"class.blink::Length"* %286, %"class.blink::Length"** %4, align 8, !alias.scope !84
  store %"class.blink::Length"* %287, %"class.blink::Length"** %5, align 8, !alias.scope !84
  store %"class.blink::Length"* %288, %"class.blink::Length"** %6, align 8, !alias.scope !84
  %289 = icmp eq i8 %283, 0
  %290 = icmp eq i8 %283, 1
  %291 = select i1 %290, %"class.blink::Length"** %6, %"class.blink::Length"** %4
  %292 = select i1 %289, %"class.blink::Length"** %5, %"class.blink::Length"** %291
  %293 = load %"class.blink::Length"*, %"class.blink::Length"** %292, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %277)
  %294 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %62, %"class.blink::Length"* dereferenceable(8) %293) #20
  %295 = icmp slt i32 %294, 0
  %296 = select i1 %295, i32 -2147483648, i32 2147483647
  %297 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %273, i32 %294) #20
  %298 = extractvalue { i32, i1 } %297, 1
  %299 = extractvalue { i32, i1 } %297, 0
  %300 = select i1 %298, i32 %296, i32 %299, !prof !2
  store i32 %123, i32* %58, align 4
  store i32 %182, i32* %59, align 4
  store i32 %241, i32* %60, align 4
  store i32 %300, i32* %61, align 4
  %301 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %301) #20
  %302 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %303 = bitcast <2 x float>* %3 to %"class.blink::FloatSize"*
  %304 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %304) #20
  %305 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %302, i64 0, i32 0, i32 5, i32 0, i32 0
  %306 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %305, align 8
  %307 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %306, i64 0, i32 1, i32 1
  %308 = bitcast %"class.blink::FloatSize"* %307 to i64*
  %309 = load i64, i64* %308, align 4
  %310 = bitcast <2 x float>* %3 to i64*
  store i64 %309, i64* %310, align 8
  %311 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %302, i64 0, i32 0, i32 9
  %312 = bitcast [20 x i8]* %311 to i160*
  %313 = load i160, i160* %312, align 8
  %314 = and i160 %313, 15211807202738752817960438464512
  %315 = icmp eq i160 %314, 0
  br i1 %315, label %324, label %316

316:                                              ; preds = %270
  %317 = trunc i64 %309 to i32
  %318 = bitcast i32 %317 to float
  %319 = lshr i64 %309, 32
  %320 = trunc i64 %319 to i32
  %321 = bitcast i32 %320 to float
  %322 = insertelement <2 x float> undef, float %321, i32 0
  %323 = insertelement <2 x float> %322, float %318, i32 1
  store <2 x float> %323, <2 x float>* %3, align 8
  br label %324

324:                                              ; preds = %270, %316
  %325 = call i64 @_ZN5blink11LogicalSize24AspectRatioFromFloatSizeERKNS_9FloatSizeE(%"class.blink::FloatSize"* nonnull dereferenceable(8) %303) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304) #20
  store i64 %325, i64* %20, align 8
  %326 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %327 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %326, i64 0, i32 0, i32 5, i32 0, i32 0
  %328 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %327, align 8
  %329 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %328, i64 0, i32 1, i32 1, i32 0
  %330 = load float, float* %329, align 4
  %331 = fcmp oeq float %330, 0.000000e+00
  br i1 %331, label %351, label %332

332:                                              ; preds = %324
  %333 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %328, i64 0, i32 1, i32 1, i32 1
  %334 = load float, float* %333, align 4
  %335 = fcmp oeq float %334, 0.000000e+00
  %336 = fcmp olt float %330, 1.562500e-02
  %337 = or i1 %336, %335
  %338 = fcmp olt float %334, 1.562500e-02
  %339 = or i1 %338, %337
  br i1 %339, label %351, label %340

340:                                              ; preds = %332
  %341 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %328, i64 0, i32 1, i32 0
  %342 = load i8, i8* %341, align 4
  %343 = and i8 %342, 3
  %344 = icmp eq i8 %343, 2
  br i1 %344, label %345, label %351

345:                                              ; preds = %340
  %346 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %328, i64 0, i32 11
  %347 = load i8, i8* %346, align 4
  %348 = lshr i8 %347, 1
  %349 = and i8 %348, 1
  %350 = zext i8 %349 to i32
  br label %351

351:                                              ; preds = %324, %332, %340, %345
  %352 = phi i32 [ %350, %345 ], [ 1, %340 ], [ 1, %332 ], [ 1, %324 ]
  %353 = load i32, i32* %23, align 4
  %354 = call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %19, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %26, i32 %352, i32 %353) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %301) #20
  %355 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %21, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %356 = call i32 @_ZNK5blink9LayoutBox29ConstrainLogicalWidthByMinMaxENS_10LayoutUnitES1_PKNS_11LayoutBlockEb(%"class.blink::LayoutBox"* %0, i32 %354, i32 %56, %"class.blink::LayoutBlock"* %355, i1 zeroext false)
  %357 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1, i64 0, i32 0
  store i32 %356, i32* %357, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #20
  br label %358

358:                                              ; preds = %2, %351
  %359 = phi i1 [ true, %351 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #20
  ret i1 %359
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox42UpdateCachedIntrinsicLogicalWidthsIfNeededEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 256
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %17, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %10 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %10, i64 186
  %12 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %11, align 8
  %13 = tail call i64 %12(%"class.blink::LayoutBox"* %0) #20
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 5
  %15 = bitcast %"struct.blink::MinMaxSizes"* %14 to i64*
  store i64 %13, i64* %15, align 4
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 6, i32 0
  store i32 -2147483648, i32* %16, align 4
  tail call void @_ZN5blink12LayoutObject32ClearIntrinsicLogicalWidthsDirtyEv(%"class.blink::LayoutObject"* %8) #20
  br label %17

17:                                               ; preds = %1, %7
  ret void
}

declare void @_ZN5blink12LayoutObject32ClearIntrinsicLogicalWidthsDirtyEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox20OverrideLogicalWidthEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %3 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %15

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %13 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %12, align 8
  %14 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %13, i64 0, i32 1, i32 0
  br label %15

15:                                               ; preds = %11, %9
  %16 = phi i32* [ %10, %9 ], [ %14, %11 ]
  %17 = load i32, i32* %16, align 4
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox21OverrideLogicalHeightEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %3 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %15

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %13 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %12, align 8
  %14 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %13, i64 0, i32 2, i32 0
  br label %15

15:                                               ; preds = %11, %9
  %16 = phi i32* [ %10, %9 ], [ %14, %11 ]
  %17 = load i32, i32* %16, align 4
  ret i32 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox31IsOverrideLogicalHeightDefiniteEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %3 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 3
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox23StretchInlineSizeIfAutoEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %3 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 4
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox22StretchBlockSizeIfAutoEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %3 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 5
  %7 = load i8, i8* %6, align 2, !range !4
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %3 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %5, %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %11 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %10, align 8
  %12 = icmp eq %"struct.blink::LayoutBoxRareData"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %11, i64 0, i32 2, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp ne i32 %15, -64
  br label %17

17:                                               ; preds = %9, %5, %13
  %18 = phi i1 [ true, %5 ], [ false, %9 ], [ %16, %13 ]
  ret i1 %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox23HasOverrideLogicalWidthEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %3 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %5, %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %11 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %10, align 8
  %12 = icmp eq %"struct.blink::LayoutBoxRareData"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %11, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp ne i32 %15, -64
  br label %17

17:                                               ; preds = %9, %5, %13
  %18 = phi i1 [ true, %5 ], [ false, %9 ], [ %16, %13 ]
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox24SetOverrideLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0
  %4 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %3, i64 0, i32 0
  %5 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  %6 = icmp eq %"struct.blink::LayoutBoxRareData"* %5, null
  br i1 %6, label %7, label %24

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %9 = bitcast i8* %8 to %"struct.blink::LayoutBoxRareData"*
  %10 = bitcast i8* %8 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 -64, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 -64, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, -16
  store i8 %17, i8* %15, align 8
  %18 = getelementptr inbounds i8, i8* %8, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 68, i1 false) #20
  %19 = getelementptr inbounds i8, i8* %8, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %3, %"struct.blink::LayoutBoxRareData"* %9) #20
  %23 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  br label %24

24:                                               ; preds = %2, %7
  %25 = phi %"struct.blink::LayoutBoxRareData"* [ %5, %2 ], [ %23, %7 ]
  %26 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %25, i64 0, i32 2, i32 0
  store i32 %1, i32* %26, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox23SetOverrideLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0
  %4 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %3, i64 0, i32 0
  %5 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  %6 = icmp eq %"struct.blink::LayoutBoxRareData"* %5, null
  br i1 %6, label %7, label %24

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %9 = bitcast i8* %8 to %"struct.blink::LayoutBoxRareData"*
  %10 = bitcast i8* %8 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 -64, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 -64, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, -16
  store i8 %17, i8* %15, align 8
  %18 = getelementptr inbounds i8, i8* %8, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 68, i1 false) #20
  %19 = getelementptr inbounds i8, i8* %8, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %3, %"struct.blink::LayoutBoxRareData"* %9) #20
  %23 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  br label %24

24:                                               ; preds = %2, %7
  %25 = phi %"struct.blink::LayoutBoxRareData"* [ %5, %2 ], [ %23, %7 ]
  %26 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %25, i64 0, i32 1, i32 0
  store i32 %1, i32* %26, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox26ClearOverrideLogicalHeightEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 2, i32 0
  store i32 -64, i32* %6, align 4
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox25ClearOverrideLogicalWidthEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 1, i32 0
  store i32 -64, i32* %6, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox27OverrideContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %3 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %15

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %13 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %12, align 8
  %14 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %13, i64 0, i32 1, i32 0
  br label %15

15:                                               ; preds = %9, %11
  %16 = phi i32* [ %10, %9 ], [ %14, %11 ]
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %19 = tail call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %18)
  %20 = icmp sgt i32 %19, -1
  %21 = select i1 %20, i32 -2147483648, i32 2147483647
  %22 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %17, i32 %19) #20
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = select i1 %23, i32 %21, i32 %24, !prof !2
  %26 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %0)
  %27 = extractvalue { i64, i64 } %26, 0
  %28 = trunc i64 %27 to i32
  %29 = lshr i64 %27, 32
  %30 = trunc i64 %29 to i32
  %31 = icmp slt i32 %30, 0
  %32 = select i1 %31, i32 -2147483648, i32 2147483647
  %33 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 %30) #20
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 %32, i32 %35, !prof !2
  %37 = icmp sgt i32 %36, -1
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %25, i32 %36) #20
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !2
  %43 = icmp sgt i32 %42, 0
  %44 = select i1 %43, i32 %42, i32 0
  ret i32 %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !87
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8, !noalias !87
  %7 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  %8 = and i160 %6, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = and i160 %6, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  %12 = select i1 %11, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %13 = select i1 %11, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %14 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %15 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %16 = extractvalue { i64, i64 } %14, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %7, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %16, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* %19) #20
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !90
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8, !noalias !90
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 0
  %40 = and i160 %37, 41538374868278621028243970633760768
  %41 = icmp eq i160 %40, 0
  %42 = select i1 %41, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %43 = select i1 %41, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %44 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %45 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %46 = extractvalue { i64, i64 } %44, 0
  %47 = extractvalue { i64, i64 } %45, 1
  %48 = getelementptr inbounds i8, i8* %7, i64 %47
  %49 = bitcast i8* %48 to %"class.blink::LayoutBoxModelObject"*
  %50 = and i64 %46, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %31
  %53 = bitcast i8* %48 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = add i64 %46, -1
  %56 = getelementptr i8, i8* %54, i64 %55
  %57 = bitcast i8* %56 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  br label %61

59:                                               ; preds = %31
  %60 = inttoptr i64 %46 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %61

61:                                               ; preds = %52, %59
  %62 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %58, %52 ], [ %60, %59 ]
  %63 = tail call i32 %62(%"class.blink::LayoutBoxModelObject"* %49) #20
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %63) #20
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !2
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !93
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8, !noalias !93
  %74 = and i160 %73, 15211807202738752817960438464512
  %75 = icmp eq i160 %74, 0
  %76 = and i160 %73, 41538374868278621028243970633760768
  %77 = icmp eq i160 %76, 0
  %78 = select i1 %77, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %79 = select i1 %77, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %80 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %81 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %82 = extractvalue { i64, i64 } %80, 0
  %83 = extractvalue { i64, i64 } %81, 1
  %84 = getelementptr inbounds i8, i8* %7, i64 %83
  %85 = bitcast i8* %84 to %"class.blink::LayoutBoxModelObject"*
  %86 = and i64 %82, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %61
  %89 = bitcast i8* %84 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = add i64 %82, -1
  %92 = getelementptr i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %94 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %93, align 8
  br label %97

95:                                               ; preds = %61
  %96 = inttoptr i64 %82 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %97

97:                                               ; preds = %88, %95
  %98 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %94, %88 ], [ %96, %95 ]
  %99 = tail call i32 %98(%"class.blink::LayoutBoxModelObject"* %85) #20
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %99) #20
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !2
  %106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !96
  %107 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %106, i64 0, i32 0, i32 9
  %108 = bitcast [20 x i8]* %107 to i160*
  %109 = load i160, i160* %108, align 8, !noalias !96
  %110 = and i160 %109, 15211807202738752817960438464512
  %111 = icmp eq i160 %110, 0
  %112 = and i160 %109, 41538374868278621028243970633760768
  %113 = icmp eq i160 %112, 0
  %114 = select i1 %113, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %115 = select i1 %113, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %116 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %117 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %118 = extractvalue { i64, i64 } %116, 0
  %119 = extractvalue { i64, i64 } %117, 1
  %120 = getelementptr inbounds i8, i8* %7, i64 %119
  %121 = bitcast i8* %120 to %"class.blink::LayoutBoxModelObject"*
  %122 = and i64 %118, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %131, label %124

124:                                              ; preds = %97
  %125 = bitcast i8* %120 to i8**
  %126 = load i8*, i8** %125, align 8
  %127 = add i64 %118, -1
  %128 = getelementptr i8, i8* %126, i64 %127
  %129 = bitcast i8* %128 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %130 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %129, align 8
  br label %133

131:                                              ; preds = %97
  %132 = inttoptr i64 %118 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %133

133:                                              ; preds = %124, %131
  %134 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %130, %124 ], [ %132, %131 ]
  %135 = tail call i32 %134(%"class.blink::LayoutBoxModelObject"* %121) #20
  %136 = icmp slt i32 %135, 0
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %135) #20
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !2
  ret i32 %141
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox28OverrideContentLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %3 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %15

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %13 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %12, align 8
  %14 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %13, i64 0, i32 2, i32 0
  br label %15

15:                                               ; preds = %9, %11
  %16 = phi i32* [ %10, %9 ], [ %14, %11 ]
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %19 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %18)
  %20 = icmp sgt i32 %19, -1
  %21 = select i1 %20, i32 -2147483648, i32 2147483647
  %22 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %17, i32 %19) #20
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = select i1 %23, i32 %21, i32 %24, !prof !2
  %26 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %0)
  %27 = extractvalue { i64, i64 } %26, 1
  %28 = trunc i64 %27 to i32
  %29 = lshr i64 %27, 32
  %30 = trunc i64 %29 to i32
  %31 = icmp slt i32 %30, 0
  %32 = select i1 %31, i32 -2147483648, i32 2147483647
  %33 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 %30) #20
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 %32, i32 %35, !prof !2
  %37 = icmp sgt i32 %36, -1
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %25, i32 %36) #20
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !2
  %43 = icmp sgt i32 %42, 0
  %44 = select i1 %43, i32 %42, i32 0
  ret i32 %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = and i16 %7, 240
  %15 = icmp ne i16 %14, 0
  %16 = and i1 %15, %13
  br i1 %16, label %49, label %17

17:                                               ; preds = %10, %1
  %18 = and i16 %7, 3584
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, 0
  %24 = and i16 %7, 3840
  %25 = icmp ne i16 %24, 0
  %26 = and i1 %25, %23
  br i1 %26, label %49, label %27

27:                                               ; preds = %20, %17
  %28 = icmp ult i16 %7, 8192
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %29, %27
  %34 = and i16 %7, 14
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ne i32 %38, 0
  %40 = and i16 %7, 15
  %41 = icmp ne i16 %40, 0
  %42 = and i1 %41, %39
  br i1 %42, label %49, label %43

43:                                               ; preds = %36, %33
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = and i160 %46, 89202980794122492566142873090593446023921664
  %48 = icmp eq i160 %47, 0
  br i1 %48, label %196, label %49

49:                                               ; preds = %43, %36, %20, %10, %29
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8, !noalias !99
  %53 = lshr i160 %52, 102
  %54 = trunc i160 %53 to i8
  %55 = and i8 %54, 3
  %56 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  switch i8 %55, label %57 [
    i8 0, label %66
    i8 1, label %58
  ]

57:                                               ; preds = %49
  br label %58

58:                                               ; preds = %57, %49
  %59 = phi { i64, i64 } [ { i64 993, i64 0 }, %57 ], [ { i64 1001, i64 0 }, %49 ]
  %60 = extractvalue { i64, i64 } %59, 0
  %61 = extractvalue { i64, i64 } %59, 1
  %62 = getelementptr inbounds i8, i8* %56, i64 %61
  %63 = bitcast i8* %62 to %"class.blink::LayoutBoxModelObject"*
  %64 = and i64 %60, 1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %58, %49
  %67 = phi %"class.blink::LayoutBoxModelObject"* [ %63, %58 ], [ %0, %49 ]
  %68 = phi i8* [ %62, %58 ], [ %56, %49 ]
  %69 = phi i64 [ %60, %58 ], [ 977, %49 ]
  %70 = bitcast i8* %68 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = add i64 %69, -1
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = bitcast i8* %73 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %75 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %74, align 8
  br label %78

76:                                               ; preds = %58
  %77 = inttoptr i64 %60 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %78

78:                                               ; preds = %76, %66
  %79 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %66 ], [ %63, %76 ]
  %80 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %75, %66 ], [ %77, %76 ]
  %81 = tail call i32 %80(%"class.blink::LayoutBoxModelObject"* %79) #20
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !102
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %84 = bitcast [20 x i8]* %83 to i160*
  %85 = load i160, i160* %84, align 8, !noalias !102
  %86 = lshr i160 %85, 102
  %87 = trunc i160 %86 to i8
  %88 = and i8 %87, 3
  switch i8 %88, label %89 [
    i8 0, label %98
    i8 1, label %90
  ]

89:                                               ; preds = %78
  br label %90

90:                                               ; preds = %89, %78
  %91 = phi { i64, i64 } [ { i64 961, i64 0 }, %89 ], [ { i64 969, i64 0 }, %78 ]
  %92 = extractvalue { i64, i64 } %91, 0
  %93 = extractvalue { i64, i64 } %91, 1
  %94 = getelementptr inbounds i8, i8* %56, i64 %93
  %95 = bitcast i8* %94 to %"class.blink::LayoutBoxModelObject"*
  %96 = and i64 %92, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %90, %78
  %99 = phi %"class.blink::LayoutBoxModelObject"* [ %95, %90 ], [ %0, %78 ]
  %100 = phi i8* [ %94, %90 ], [ %56, %78 ]
  %101 = phi i64 [ %92, %90 ], [ 945, %78 ]
  %102 = bitcast i8* %100 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = add i64 %101, -1
  %105 = getelementptr i8, i8* %103, i64 %104
  %106 = bitcast i8* %105 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %107 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %106, align 8
  br label %110

108:                                              ; preds = %90
  %109 = inttoptr i64 %92 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %110

110:                                              ; preds = %98, %108
  %111 = phi %"class.blink::LayoutBoxModelObject"* [ %99, %98 ], [ %95, %108 ]
  %112 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %107, %98 ], [ %109, %108 ]
  %113 = tail call i32 %112(%"class.blink::LayoutBoxModelObject"* %111) #20
  %114 = icmp slt i32 %113, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %113) #20
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %115, i32 %118, !prof !2
  %120 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !105
  %121 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %120, i64 0, i32 0, i32 9
  %122 = bitcast [20 x i8]* %121 to i160*
  %123 = load i160, i160* %122, align 8, !noalias !105
  %124 = lshr i160 %123, 102
  %125 = trunc i160 %124 to i8
  %126 = and i8 %125, 3
  switch i8 %126, label %127 [
    i8 0, label %136
    i8 1, label %128
  ]

127:                                              ; preds = %110
  br label %128

128:                                              ; preds = %127, %110
  %129 = phi { i64, i64 } [ { i64 1001, i64 0 }, %127 ], [ { i64 993, i64 0 }, %110 ]
  %130 = extractvalue { i64, i64 } %129, 0
  %131 = extractvalue { i64, i64 } %129, 1
  %132 = getelementptr inbounds i8, i8* %56, i64 %131
  %133 = bitcast i8* %132 to %"class.blink::LayoutBoxModelObject"*
  %134 = and i64 %130, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %146, label %136

136:                                              ; preds = %128, %110
  %137 = phi %"class.blink::LayoutBoxModelObject"* [ %133, %128 ], [ %0, %110 ]
  %138 = phi i8* [ %132, %128 ], [ %56, %110 ]
  %139 = phi i64 [ %130, %128 ], [ 985, %110 ]
  %140 = bitcast i8* %138 to i8**
  %141 = load i8*, i8** %140, align 8
  %142 = add i64 %139, -1
  %143 = getelementptr i8, i8* %141, i64 %142
  %144 = bitcast i8* %143 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %145 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %144, align 8
  br label %148

146:                                              ; preds = %128
  %147 = inttoptr i64 %130 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %148

148:                                              ; preds = %146, %136
  %149 = phi %"class.blink::LayoutBoxModelObject"* [ %137, %136 ], [ %133, %146 ]
  %150 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %145, %136 ], [ %147, %146 ]
  %151 = tail call i32 %150(%"class.blink::LayoutBoxModelObject"* %149) #20
  %152 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !108
  %153 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %152, i64 0, i32 0, i32 9
  %154 = bitcast [20 x i8]* %153 to i160*
  %155 = load i160, i160* %154, align 8, !noalias !108
  %156 = lshr i160 %155, 102
  %157 = trunc i160 %156 to i8
  %158 = and i8 %157, 3
  switch i8 %158, label %159 [
    i8 0, label %168
    i8 1, label %160
  ]

159:                                              ; preds = %148
  br label %160

160:                                              ; preds = %159, %148
  %161 = phi { i64, i64 } [ { i64 969, i64 0 }, %159 ], [ { i64 961, i64 0 }, %148 ]
  %162 = extractvalue { i64, i64 } %161, 0
  %163 = extractvalue { i64, i64 } %161, 1
  %164 = getelementptr inbounds i8, i8* %56, i64 %163
  %165 = bitcast i8* %164 to %"class.blink::LayoutBoxModelObject"*
  %166 = and i64 %162, 1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %178, label %168

168:                                              ; preds = %160, %148
  %169 = phi %"class.blink::LayoutBoxModelObject"* [ %165, %160 ], [ %0, %148 ]
  %170 = phi i8* [ %164, %160 ], [ %56, %148 ]
  %171 = phi i64 [ %162, %160 ], [ 953, %148 ]
  %172 = bitcast i8* %170 to i8**
  %173 = load i8*, i8** %172, align 8
  %174 = add i64 %171, -1
  %175 = getelementptr i8, i8* %173, i64 %174
  %176 = bitcast i8* %175 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %177 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %176, align 8
  br label %180

178:                                              ; preds = %160
  %179 = inttoptr i64 %162 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %180

180:                                              ; preds = %168, %178
  %181 = phi %"class.blink::LayoutBoxModelObject"* [ %169, %168 ], [ %165, %178 ]
  %182 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %177, %168 ], [ %179, %178 ]
  %183 = tail call i32 %182(%"class.blink::LayoutBoxModelObject"* %181) #20
  %184 = icmp slt i32 %183, 0
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %183) #20
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !2
  %190 = icmp slt i32 %189, 0
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %189) #20
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %191, i32 %194, !prof !2
  br label %196

196:                                              ; preds = %43, %180
  %197 = phi i32 [ %195, %180 ], [ 0, %43 ]
  ret i32 %197
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %3, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %12 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %11, align 8
  %13 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %12, null
  br i1 %10, label %14, label %21

14:                                               ; preds = %1
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %12, i64 0, i32 7, i32 0
  br label %28

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %19 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %18, align 8
  %20 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %19, i64 0, i32 4, i32 0
  br label %28

21:                                               ; preds = %1
  br i1 %13, label %24, label %22

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %12, i64 0, i32 8, i32 0
  br label %28

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %26 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %25, align 8
  %27 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %26, i64 0, i32 5, i32 0
  br label %28

28:                                               ; preds = %24, %22, %17, %15
  %29 = phi i32* [ %16, %15 ], [ %20, %17 ], [ %23, %22 ], [ %27, %24 ]
  %30 = load i32, i32* %29, align 4
  ret i32 %30
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox42OverrideContainingBlockContentLogicalWidthEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %3 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 7, i32 0
  br label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %9 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %8, align 8
  %10 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %9, i64 0, i32 4, i32 0
  br label %11

11:                                               ; preds = %7, %5
  %12 = phi i32* [ %6, %5 ], [ %10, %7 ]
  %13 = load i32, i32* %12, align 4
  ret i32 %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox43OverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %3 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 8, i32 0
  br label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %9 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %8, align 8
  %10 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %9, i64 0, i32 5, i32 0
  br label %11

11:                                               ; preds = %7, %5
  %12 = phi i32* [ %6, %5 ], [ %10, %7 ]
  %13 = load i32, i32* %12, align 4
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %3, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %12 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %11, align 8
  %13 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %12, null
  br i1 %10, label %14, label %21

14:                                               ; preds = %1
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %12, i64 0, i32 8, i32 0
  br label %28

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %19 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %18, align 8
  %20 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %19, i64 0, i32 5, i32 0
  br label %28

21:                                               ; preds = %1
  br i1 %13, label %24, label %22

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %12, i64 0, i32 7, i32 0
  br label %28

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %26 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %25, align 8
  %27 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %26, i64 0, i32 4, i32 0
  br label %28

28:                                               ; preds = %24, %22, %17, %15
  %29 = phi i32* [ %16, %15 ], [ %20, %17 ], [ %23, %22 ], [ %27, %24 ]
  %30 = load i32, i32* %29, align 4
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %4 = icmp eq %"class.blink::LayoutBlock"* %3, null
  br i1 %4, label %37, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %6, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 0
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %15 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %14, align 8
  %16 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %15, null
  br i1 %13, label %17, label %27

17:                                               ; preds = %5
  br i1 %16, label %18, label %37

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %20 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %19, align 8
  %21 = icmp eq %"struct.blink::LayoutBoxRareData"* %20, null
  br i1 %21, label %37, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %20, i64 0, i32 3
  %24 = load i8, i8* %23, align 8
  %25 = and i8 %24, 1
  %26 = icmp ne i8 %25, 0
  br label %37

27:                                               ; preds = %5
  br i1 %16, label %28, label %37

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %30 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %29, align 8
  %31 = icmp eq %"struct.blink::LayoutBoxRareData"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %30, i64 0, i32 3
  %34 = load i8, i8* %33, align 8
  %35 = and i8 %34, 2
  %36 = icmp ne i8 %35, 0
  br label %37

37:                                               ; preds = %32, %28, %27, %22, %18, %17, %1
  %38 = phi i1 [ false, %1 ], [ true, %17 ], [ false, %18 ], [ %26, %22 ], [ true, %27 ], [ false, %28 ], [ %36, %32 ]
  ret i1 %38
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox45HasOverrideContainingBlockContentLogicalWidthEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %3 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %7 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %6, align 8
  %8 = icmp eq %"struct.blink::LayoutBoxRareData"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %7, i64 0, i32 3
  %11 = load i8, i8* %10, align 8
  %12 = and i8 %11, 1
  %13 = icmp ne i8 %12, 0
  br label %14

14:                                               ; preds = %5, %9, %1
  %15 = phi i1 [ true, %1 ], [ false, %5 ], [ %13, %9 ]
  ret i1 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox46HasOverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %3 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %7 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %6, align 8
  %8 = icmp eq %"struct.blink::LayoutBoxRareData"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %7, i64 0, i32 3
  %11 = load i8, i8* %10, align 8
  %12 = and i8 %11, 2
  %13 = icmp ne i8 %12, 0
  br label %14

14:                                               ; preds = %5, %9, %1
  %15 = phi i1 [ true, %1 ], [ false, %5 ], [ %13, %9 ]
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %4 = icmp eq %"class.blink::LayoutBlock"* %3, null
  br i1 %4, label %37, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %6, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 0
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %15 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %14, align 8
  %16 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %15, null
  br i1 %13, label %17, label %27

17:                                               ; preds = %5
  br i1 %16, label %18, label %37

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %20 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %19, align 8
  %21 = icmp eq %"struct.blink::LayoutBoxRareData"* %20, null
  br i1 %21, label %37, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %20, i64 0, i32 3
  %24 = load i8, i8* %23, align 8
  %25 = and i8 %24, 2
  %26 = icmp ne i8 %25, 0
  br label %37

27:                                               ; preds = %5
  br i1 %16, label %28, label %37

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %30 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %29, align 8
  %31 = icmp eq %"struct.blink::LayoutBoxRareData"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %30, i64 0, i32 3
  %34 = load i8, i8* %33, align 8
  %35 = and i8 %34, 1
  %36 = icmp ne i8 %35, 0
  br label %37

37:                                               ; preds = %32, %28, %27, %22, %18, %17, %1
  %38 = phi i1 [ false, %1 ], [ true, %17 ], [ false, %18 ], [ %26, %22 ], [ true, %27 ], [ false, %28 ], [ %36, %32 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox45SetOverrideContainingBlockContentLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0
  %4 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %3, i64 0, i32 0
  %5 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  %6 = icmp eq %"struct.blink::LayoutBoxRareData"* %5, null
  br i1 %6, label %7, label %24

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %9 = bitcast i8* %8 to %"struct.blink::LayoutBoxRareData"*
  %10 = bitcast i8* %8 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 -64, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 -64, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, -16
  store i8 %17, i8* %15, align 8
  %18 = getelementptr inbounds i8, i8* %8, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 68, i1 false) #20
  %19 = getelementptr inbounds i8, i8* %8, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %3, %"struct.blink::LayoutBoxRareData"* %9) #20
  %23 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  br label %24

24:                                               ; preds = %2, %7
  %25 = phi %"struct.blink::LayoutBoxRareData"* [ %5, %2 ], [ %23, %7 ]
  %26 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %25, i64 0, i32 4, i32 0
  store i32 %1, i32* %26, align 4
  %27 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  %28 = icmp eq %"struct.blink::LayoutBoxRareData"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %31 = bitcast i8* %30 to %"struct.blink::LayoutBoxRareData"*
  %32 = bitcast i8* %30 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %30, i64 8
  %34 = bitcast i8* %33 to i32*
  store i32 -64, i32* %34, align 4
  %35 = getelementptr inbounds i8, i8* %30, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 -64, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %30, i64 16
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, -16
  store i8 %39, i8* %37, align 8
  %40 = getelementptr inbounds i8, i8* %30, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 68, i1 false) #20
  %41 = getelementptr inbounds i8, i8* %30, i64 -4
  %42 = bitcast i8* %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = or i16 %43, 1
  store atomic i16 %44, i16* %42 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %3, %"struct.blink::LayoutBoxRareData"* %31) #20
  %45 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  br label %46

46:                                               ; preds = %24, %29
  %47 = phi %"struct.blink::LayoutBoxRareData"* [ %27, %24 ], [ %45, %29 ]
  %48 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %47, i64 0, i32 3
  %49 = load i8, i8* %48, align 8
  %50 = or i8 %49, 1
  store i8 %50, i8* %48, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0
  %4 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %3, i64 0, i32 0
  %5 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  %6 = icmp eq %"struct.blink::LayoutBoxRareData"* %5, null
  br i1 %6, label %7, label %24

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %9 = bitcast i8* %8 to %"struct.blink::LayoutBoxRareData"*
  %10 = bitcast i8* %8 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 -64, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 -64, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, -16
  store i8 %17, i8* %15, align 8
  %18 = getelementptr inbounds i8, i8* %8, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 68, i1 false) #20
  %19 = getelementptr inbounds i8, i8* %8, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %3, %"struct.blink::LayoutBoxRareData"* %9) #20
  %23 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  br label %24

24:                                               ; preds = %2, %7
  %25 = phi %"struct.blink::LayoutBoxRareData"* [ %5, %2 ], [ %23, %7 ]
  %26 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %25, i64 0, i32 5, i32 0
  store i32 %1, i32* %26, align 8
  %27 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  %28 = icmp eq %"struct.blink::LayoutBoxRareData"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %31 = bitcast i8* %30 to %"struct.blink::LayoutBoxRareData"*
  %32 = bitcast i8* %30 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %32, align 8
  %33 = getelementptr inbounds i8, i8* %30, i64 8
  %34 = bitcast i8* %33 to i32*
  store i32 -64, i32* %34, align 4
  %35 = getelementptr inbounds i8, i8* %30, i64 12
  %36 = bitcast i8* %35 to i32*
  store i32 -64, i32* %36, align 4
  %37 = getelementptr inbounds i8, i8* %30, i64 16
  %38 = load i8, i8* %37, align 8
  %39 = and i8 %38, -16
  store i8 %39, i8* %37, align 8
  %40 = getelementptr inbounds i8, i8* %30, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 68, i1 false) #20
  %41 = getelementptr inbounds i8, i8* %30, i64 -4
  %42 = bitcast i8* %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = or i16 %43, 1
  store atomic i16 %44, i16* %42 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %3, %"struct.blink::LayoutBoxRareData"* %31) #20
  %45 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  br label %46

46:                                               ; preds = %24, %29
  %47 = phi %"struct.blink::LayoutBoxRareData"* [ %27, %24 ], [ %45, %29 ]
  %48 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %47, i64 0, i32 3
  %49 = load i8, i8* %48, align 8
  %50 = or i8 %49, 2
  store i8 %50, i8* %48, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox37OverridePercentageResolutionBlockSizeEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 6, i32 0
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox40HasOverridePercentageResolutionBlockSizeEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 3
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 4
  %9 = icmp ne i8 %8, 0
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i1 [ false, %1 ], [ %9, %5 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox40SetOverridePercentageResolutionBlockSizeENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0
  %4 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %3, i64 0, i32 0
  %5 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  %6 = icmp eq %"struct.blink::LayoutBoxRareData"* %5, null
  br i1 %6, label %7, label %24

7:                                                ; preds = %2
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %9 = bitcast i8* %8 to %"struct.blink::LayoutBoxRareData"*
  %10 = bitcast i8* %8 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to i32*
  store i32 -64, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %8, i64 12
  %14 = bitcast i8* %13 to i32*
  store i32 -64, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %8, i64 16
  %16 = load i8, i8* %15, align 8
  %17 = and i8 %16, -16
  store i8 %17, i8* %15, align 8
  %18 = getelementptr inbounds i8, i8* %8, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 68, i1 false) #20
  %19 = getelementptr inbounds i8, i8* %8, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %3, %"struct.blink::LayoutBoxRareData"* %9) #20
  %23 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  br label %24

24:                                               ; preds = %2, %7
  %25 = phi %"struct.blink::LayoutBoxRareData"* [ %5, %2 ], [ %23, %7 ]
  %26 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %25, i64 0, i32 6, i32 0
  store i32 %1, i32* %26, align 4
  %27 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %25, i64 0, i32 3
  %28 = load i8, i8* %27, align 8
  %29 = or i8 %28, 4
  store i8 %29, i8* %27, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox27OverrideAvailableInlineSizeEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %3 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %3, i64 0, i32 6, i32 0
  %7 = load i32, i32* %6, align 4
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox39AdjustBorderBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"*, float) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %4 = tail call i32 @_ZNK5blink20LayoutBoxModelObject40CollapsedBorderAndCSSPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %3)
  %5 = fmul float %1, 6.400000e+01
  %6 = fcmp ult float %5, 0xC1E0000000000000
  %7 = fcmp ugt float %5, 0x41DFFFFFE0000000
  %8 = fcmp ogt float %5, 0xC1E0000000000000
  %9 = select i1 %8, float %5, float 0xC1E0000000000000
  %10 = fptosi float %9 to i32
  %11 = select i1 %6, i32 0, i32 2147483647
  %12 = select i1 %7, i32 %11, i32 %10
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %14 = bitcast %"class.blink::ComputedStyle"** %13 to %"class.blink::ComputedStyleBase"**
  %15 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %15, i64 0, i32 5, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %17, i64 0, i32 11
  %19 = load i8, i8* %18, align 4
  %20 = and i8 %19, 2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %2
  %23 = icmp slt i32 %4, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 %4) #20
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  br label %32

29:                                               ; preds = %2
  %30 = icmp slt i32 %12, %4
  %31 = select i1 %30, i32 %4, i32 %12
  br label %32

32:                                               ; preds = %29, %22
  %33 = phi i32 [ %28, %22 ], [ %31, %29 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject40CollapsedBorderAndCSSPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.blink::Length"*, align 8
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8, !noalias !111
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 7, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %19, align 8, !noalias !111
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 16
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 15
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 13
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 14
  store %"class.blink::Length"* %21, %"class.blink::Length"** %6, align 8, !alias.scope !111
  store %"class.blink::Length"* %22, %"class.blink::Length"** %7, align 8, !alias.scope !111
  store %"class.blink::Length"* %23, %"class.blink::Length"** %8, align 8, !alias.scope !111
  store %"class.blink::Length"* %24, %"class.blink::Length"** %9, align 8, !alias.scope !111
  %25 = and i160 %18, 15211807202738752817960438464512
  %26 = icmp eq i160 %25, 0
  %27 = and i160 %18, 41538374868278621028243970633760768
  %28 = icmp eq i160 %27, 0
  %29 = select i1 %28, %"class.blink::Length"** %9, %"class.blink::Length"** %7
  %30 = select i1 %28, %"class.blink::Length"** %6, %"class.blink::Length"** %8
  %31 = select i1 %26, %"class.blink::Length"** %29, %"class.blink::Length"** %30
  %32 = load %"class.blink::Length"*, %"class.blink::Length"** %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  %33 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %32) #20
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %35 = bitcast %"class.blink::Length"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %40 = bitcast [20 x i8]* %39 to i160*
  %41 = load i160, i160* %40, align 8, !noalias !114
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 7, i32 0, i32 0
  %43 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %42, align 8, !noalias !114
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %43, i64 0, i32 16
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %43, i64 0, i32 15
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %43, i64 0, i32 13
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %43, i64 0, i32 14
  store %"class.blink::Length"* %44, %"class.blink::Length"** %2, align 8, !alias.scope !114
  store %"class.blink::Length"* %45, %"class.blink::Length"** %3, align 8, !alias.scope !114
  store %"class.blink::Length"* %46, %"class.blink::Length"** %4, align 8, !alias.scope !114
  store %"class.blink::Length"* %47, %"class.blink::Length"** %5, align 8, !alias.scope !114
  %48 = and i160 %41, 15211807202738752817960438464512
  %49 = icmp eq i160 %48, 0
  %50 = and i160 %41, 41538374868278621028243970633760768
  %51 = icmp eq i160 %50, 0
  %52 = select i1 %51, %"class.blink::Length"** %3, %"class.blink::Length"** %5
  %53 = select i1 %51, %"class.blink::Length"** %4, %"class.blink::Length"** %2
  %54 = select i1 %49, %"class.blink::Length"** %52, %"class.blink::Length"** %53
  %55 = load %"class.blink::Length"*, %"class.blink::Length"** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  %56 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %55) #20
  %57 = icmp slt i32 %56, 0
  %58 = select i1 %57, i32 -2147483648, i32 2147483647
  %59 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %56) #20
  %60 = extractvalue { i32, i1 } %59, 1
  %61 = extractvalue { i32, i1 } %59, 0
  %62 = select i1 %60, i32 %58, i32 %61, !prof !2
  %63 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8, !noalias !117
  %64 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %63, i64 0, i32 0, i32 9
  %65 = bitcast [20 x i8]* %64 to i160*
  %66 = load i160, i160* %65, align 8, !noalias !117
  %67 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  %68 = and i160 %66, 15211807202738752817960438464512
  %69 = icmp eq i160 %68, 0
  %70 = and i160 %66, 41538374868278621028243970633760768
  %71 = icmp eq i160 %70, 0
  %72 = select i1 %71, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %73 = select i1 %71, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %74 = select i1 %69, { i64, i64 } %73, { i64, i64 } %72
  %75 = select i1 %69, { i64, i64 } %73, { i64, i64 } %72
  %76 = extractvalue { i64, i64 } %74, 0
  %77 = extractvalue { i64, i64 } %75, 1
  %78 = getelementptr inbounds i8, i8* %67, i64 %77
  %79 = bitcast i8* %78 to %"class.blink::LayoutBoxModelObject"*
  %80 = and i64 %76, 1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %89, label %82

82:                                               ; preds = %1
  %83 = bitcast i8* %78 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = add i64 %76, -1
  %86 = getelementptr i8, i8* %84, i64 %85
  %87 = bitcast i8* %86 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %88 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %87, align 8
  br label %91

89:                                               ; preds = %1
  %90 = inttoptr i64 %76 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %91

91:                                               ; preds = %82, %89
  %92 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %88, %82 ], [ %90, %89 ]
  %93 = tail call i32 %92(%"class.blink::LayoutBoxModelObject"* %79) #20
  %94 = icmp slt i32 %93, 0
  %95 = select i1 %94, i32 -2147483648, i32 2147483647
  %96 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 %93) #20
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !2
  %100 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8, !noalias !120
  %101 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %100, i64 0, i32 0, i32 9
  %102 = bitcast [20 x i8]* %101 to i160*
  %103 = load i160, i160* %102, align 8, !noalias !120
  %104 = and i160 %103, 15211807202738752817960438464512
  %105 = icmp eq i160 %104, 0
  %106 = and i160 %103, 41538374868278621028243970633760768
  %107 = icmp eq i160 %106, 0
  %108 = select i1 %107, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %109 = select i1 %107, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %110 = select i1 %105, { i64, i64 } %109, { i64, i64 } %108
  %111 = select i1 %105, { i64, i64 } %109, { i64, i64 } %108
  %112 = extractvalue { i64, i64 } %110, 0
  %113 = extractvalue { i64, i64 } %111, 1
  %114 = getelementptr inbounds i8, i8* %67, i64 %113
  %115 = bitcast i8* %114 to %"class.blink::LayoutBoxModelObject"*
  %116 = and i64 %112, 1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %125, label %118

118:                                              ; preds = %91
  %119 = bitcast i8* %114 to i8**
  %120 = load i8*, i8** %119, align 8
  %121 = add i64 %112, -1
  %122 = getelementptr i8, i8* %120, i64 %121
  %123 = bitcast i8* %122 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %124 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %123, align 8
  br label %127

125:                                              ; preds = %91
  %126 = inttoptr i64 %112 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %127

127:                                              ; preds = %118, %125
  %128 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %124, %118 ], [ %126, %125 ]
  %129 = tail call i32 %128(%"class.blink::LayoutBoxModelObject"* %115) #20
  %130 = icmp slt i32 %129, 0
  %131 = select i1 %130, i32 -2147483648, i32 2147483647
  %132 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %99, i32 %129) #20
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = select i1 %133, i32 %131, i32 %134, !prof !2
  ret i32 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox40AdjustBorderBoxLogicalHeightForBoxSizingEf(%"class.blink::LayoutBox"*, float) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %4 = tail call i32 @_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %3)
  %5 = fmul float %1, 6.400000e+01
  %6 = fcmp ult float %5, 0xC1E0000000000000
  %7 = fcmp ugt float %5, 0x41DFFFFFE0000000
  %8 = fcmp ogt float %5, 0xC1E0000000000000
  %9 = select i1 %8, float %5, float 0xC1E0000000000000
  %10 = fptosi float %9 to i32
  %11 = select i1 %6, i32 0, i32 2147483647
  %12 = select i1 %7, i32 %11, i32 %10
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %14 = bitcast %"class.blink::ComputedStyle"** %13 to %"class.blink::ComputedStyleBase"**
  %15 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %15, i64 0, i32 5, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %17, i64 0, i32 11
  %19 = load i8, i8* %18, align 4
  %20 = and i8 %19, 2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %2
  %23 = icmp slt i32 %4, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 %4) #20
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  br label %32

29:                                               ; preds = %2
  %30 = icmp slt i32 %12, %4
  %31 = select i1 %30, i32 %4, i32 %12
  br label %32

32:                                               ; preds = %29, %22
  %33 = phi i32 [ %28, %22 ], [ %31, %29 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.blink::Length"*, align 8
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8, !noalias !123
  %16 = lshr i160 %15, 102
  %17 = trunc i160 %16 to i8
  %18 = and i8 %17, 3
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 7, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %19, align 8, !noalias !123
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 16
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 15
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 14
  store %"class.blink::Length"* %21, %"class.blink::Length"** %5, align 8, !alias.scope !123
  store %"class.blink::Length"* %22, %"class.blink::Length"** %6, align 8, !alias.scope !123
  store %"class.blink::Length"* %23, %"class.blink::Length"** %7, align 8, !alias.scope !123
  %24 = icmp eq i8 %18, 0
  %25 = icmp eq i8 %18, 1
  %26 = select i1 %25, %"class.blink::Length"** %6, %"class.blink::Length"** %7
  %27 = select i1 %24, %"class.blink::Length"** %5, %"class.blink::Length"** %26
  %28 = load %"class.blink::Length"*, %"class.blink::Length"** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  %29 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %28) #20
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %31 = bitcast %"class.blink::Length"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31)
  %32 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32)
  %33 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33)
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %30, i64 0, i32 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8, !noalias !126
  %37 = lshr i160 %36, 102
  %38 = trunc i160 %37 to i8
  %39 = and i8 %38, 3
  %40 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %30, i64 0, i32 0, i32 7, i32 0, i32 0
  %41 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %40, align 8, !noalias !126
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %41, i64 0, i32 15
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %41, i64 0, i32 13
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %41, i64 0, i32 14
  store %"class.blink::Length"* %42, %"class.blink::Length"** %2, align 8, !alias.scope !126
  store %"class.blink::Length"* %43, %"class.blink::Length"** %3, align 8, !alias.scope !126
  store %"class.blink::Length"* %44, %"class.blink::Length"** %4, align 8, !alias.scope !126
  %45 = icmp eq i8 %39, 0
  %46 = icmp eq i8 %39, 1
  %47 = select i1 %46, %"class.blink::Length"** %4, %"class.blink::Length"** %2
  %48 = select i1 %45, %"class.blink::Length"** %3, %"class.blink::Length"** %47
  %49 = load %"class.blink::Length"*, %"class.blink::Length"** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33)
  %50 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %49) #20
  %51 = icmp slt i32 %50, 0
  %52 = select i1 %51, i32 -2147483648, i32 2147483647
  %53 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %29, i32 %50) #20
  %54 = extractvalue { i32, i1 } %53, 1
  %55 = extractvalue { i32, i1 } %53, 0
  %56 = select i1 %54, i32 %52, i32 %55, !prof !2
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8, !noalias !129
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 9
  %59 = bitcast [20 x i8]* %58 to i160*
  %60 = load i160, i160* %59, align 8, !noalias !129
  %61 = lshr i160 %60, 102
  %62 = trunc i160 %61 to i8
  %63 = and i8 %62, 3
  %64 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  switch i8 %63, label %65 [
    i8 0, label %74
    i8 1, label %66
  ]

65:                                               ; preds = %1
  br label %66

66:                                               ; preds = %65, %1
  %67 = phi { i64, i64 } [ { i64 993, i64 0 }, %65 ], [ { i64 1001, i64 0 }, %1 ]
  %68 = extractvalue { i64, i64 } %67, 0
  %69 = extractvalue { i64, i64 } %67, 1
  %70 = getelementptr inbounds i8, i8* %64, i64 %69
  %71 = bitcast i8* %70 to %"class.blink::LayoutBoxModelObject"*
  %72 = and i64 %68, 1
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %84, label %74

74:                                               ; preds = %66, %1
  %75 = phi %"class.blink::LayoutBoxModelObject"* [ %71, %66 ], [ %0, %1 ]
  %76 = phi i8* [ %70, %66 ], [ %64, %1 ]
  %77 = phi i64 [ %68, %66 ], [ 977, %1 ]
  %78 = bitcast i8* %76 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = add i64 %77, -1
  %81 = getelementptr i8, i8* %79, i64 %80
  %82 = bitcast i8* %81 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %83 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %82, align 8
  br label %86

84:                                               ; preds = %66
  %85 = inttoptr i64 %68 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %86

86:                                               ; preds = %74, %84
  %87 = phi %"class.blink::LayoutBoxModelObject"* [ %75, %74 ], [ %71, %84 ]
  %88 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %83, %74 ], [ %85, %84 ]
  %89 = tail call i32 %88(%"class.blink::LayoutBoxModelObject"* %87) #20
  %90 = icmp slt i32 %89, 0
  %91 = select i1 %90, i32 -2147483648, i32 2147483647
  %92 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %56, i32 %89) #20
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 %91, i32 %94, !prof !2
  %96 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8, !noalias !132
  %97 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %96, i64 0, i32 0, i32 9
  %98 = bitcast [20 x i8]* %97 to i160*
  %99 = load i160, i160* %98, align 8, !noalias !132
  %100 = lshr i160 %99, 102
  %101 = trunc i160 %100 to i8
  %102 = and i8 %101, 3
  switch i8 %102, label %103 [
    i8 0, label %112
    i8 1, label %104
  ]

103:                                              ; preds = %86
  br label %104

104:                                              ; preds = %103, %86
  %105 = phi { i64, i64 } [ { i64 1001, i64 0 }, %103 ], [ { i64 993, i64 0 }, %86 ]
  %106 = extractvalue { i64, i64 } %105, 0
  %107 = extractvalue { i64, i64 } %105, 1
  %108 = getelementptr inbounds i8, i8* %64, i64 %107
  %109 = bitcast i8* %108 to %"class.blink::LayoutBoxModelObject"*
  %110 = and i64 %106, 1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %122, label %112

112:                                              ; preds = %104, %86
  %113 = phi %"class.blink::LayoutBoxModelObject"* [ %109, %104 ], [ %0, %86 ]
  %114 = phi i8* [ %108, %104 ], [ %64, %86 ]
  %115 = phi i64 [ %106, %104 ], [ 985, %86 ]
  %116 = bitcast i8* %114 to i8**
  %117 = load i8*, i8** %116, align 8
  %118 = add i64 %115, -1
  %119 = getelementptr i8, i8* %117, i64 %118
  %120 = bitcast i8* %119 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %121 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %120, align 8
  br label %124

122:                                              ; preds = %104
  %123 = inttoptr i64 %106 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %124

124:                                              ; preds = %112, %122
  %125 = phi %"class.blink::LayoutBoxModelObject"* [ %113, %112 ], [ %109, %122 ]
  %126 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %121, %112 ], [ %123, %122 ]
  %127 = tail call i32 %126(%"class.blink::LayoutBoxModelObject"* %125) #20
  %128 = icmp slt i32 %127, 0
  %129 = select i1 %128, i32 -2147483648, i32 2147483647
  %130 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %95, i32 %127) #20
  %131 = extractvalue { i32, i1 } %130, 1
  %132 = extractvalue { i32, i1 } %130, 0
  %133 = select i1 %131, i32 %129, i32 %132, !prof !2
  ret i32 %133
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox40AdjustContentBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"*, float) local_unnamed_addr #4 align 2 {
  %3 = fmul float %1, 6.400000e+01
  %4 = fcmp ult float %3, 0xC1E0000000000000
  %5 = fcmp ugt float %3, 0x41DFFFFFE0000000
  %6 = fcmp ogt float %3, 0xC1E0000000000000
  %7 = select i1 %6, float %3, float 0xC1E0000000000000
  %8 = fptosi float %7 to i32
  %9 = select i1 %4, i32 0, i32 2147483647
  %10 = select i1 %5, i32 %9, i32 %8
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %12 = bitcast %"class.blink::ComputedStyle"** %11 to %"class.blink::ComputedStyleBase"**
  %13 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %13, i64 0, i32 5, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 11
  %17 = load i8, i8* %16, align 4
  %18 = and i8 %17, 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %29

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %22 = tail call i32 @_ZNK5blink20LayoutBoxModelObject40CollapsedBorderAndCSSPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %21)
  %23 = icmp sgt i32 %22, -1
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %22) #20
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  br label %29

29:                                               ; preds = %20, %2
  %30 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %31 = icmp sgt i32 %30, 0
  %32 = select i1 %31, i32 %30, i32 0
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox41AdjustContentBoxLogicalHeightForBoxSizingEf(%"class.blink::LayoutBox"*, float) local_unnamed_addr #4 align 2 {
  %3 = fmul float %1, 6.400000e+01
  %4 = fcmp ult float %3, 0xC1E0000000000000
  %5 = fcmp ugt float %3, 0x41DFFFFFE0000000
  %6 = fcmp ogt float %3, 0xC1E0000000000000
  %7 = select i1 %6, float %3, float 0xC1E0000000000000
  %8 = fptosi float %7 to i32
  %9 = select i1 %4, i32 0, i32 2147483647
  %10 = select i1 %5, i32 %9, i32 %8
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %12 = bitcast %"class.blink::ComputedStyle"** %11 to %"class.blink::ComputedStyleBase"**
  %13 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %13, i64 0, i32 5, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 11
  %17 = load i8, i8* %16, align 4
  %18 = and i8 %17, 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %29

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %22 = tail call i32 @_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %21)
  %23 = icmp sgt i32 %22, -1
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %22) #20
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  br label %29

29:                                               ; preds = %20, %2
  %30 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %31 = icmp sgt i32 %30, 0
  %32 = select i1 %31, i32 %30, i32 0
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox12MayIntersectERKNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* nocapture readonly dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %5 = alloca %"struct.blink::PhysicalRect", align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = trunc i96 %11 to i64
  %13 = icmp slt i64 %12, 0
  br i1 %13, label %103, label %14, !prof !2

14:                                               ; preds = %4
  %15 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #20
  %16 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 16, i1 false) #20
  %18 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 65536
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %14
  %23 = tail call { i64, i64 } @_ZNK5blink9LayoutBox42PhysicalVisualOverflowRectIncludingFiltersEv(%"class.blink::LayoutBox"* %0)
  %24 = extractvalue { i64, i64 } %23, 0
  %25 = extractvalue { i64, i64 } %23, 1
  %26 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1
  %28 = bitcast %"struct.blink::PhysicalSize"* %27 to i64*
  store i64 %25, i64* %28, align 8
  %29 = trunc i64 %24 to i32
  %30 = lshr i64 %24, 32
  %31 = trunc i64 %30 to i32
  br label %78

32:                                               ; preds = %14
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %34 = bitcast %"class.blink::LayoutSize"* %33 to i64*
  %35 = load i64, i64* %34, align 4
  %36 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1
  %38 = bitcast %"struct.blink::PhysicalSize"* %37 to i64*
  store i64 %35, i64* %38, align 8
  %39 = and i96 %11, 464227514732017603087171584
  %40 = icmp eq i96 %39, 464227514732017603087171584
  br i1 %40, label %78, label %41

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %43 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %42, align 8
  %44 = icmp eq %"struct.blink::BoxOverflowModel"* %43, null
  br i1 %44, label %78, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %43, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 4, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %78, label %49

49:                                               ; preds = %45
  %50 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #20
  %51 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #20
  %52 = extractvalue { i64, i64 } %51, 0
  %53 = trunc i64 %52 to i32
  %54 = and i64 %52, -4294967296
  %55 = extractvalue { i64, i64 } %51, 1
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 9
  %59 = bitcast [20 x i8]* %58 to i160*
  %60 = load i160, i160* %59, align 8
  %61 = and i160 %60, 15211807202738752817960438464512
  %62 = icmp eq i160 %61, 5070602400912917605986812821504
  br i1 %62, label %63, label %70, !prof !2

63:                                               ; preds = %49
  %64 = trunc i64 %55 to i32
  %65 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %66 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %65, align 8
  %67 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %66, i64 106
  %68 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %67, align 8
  %69 = tail call i32 %68(%"class.blink::LayoutObject"* %8, i32 %53, i32 %64, %"class.blink::LayoutBox"* null) #20
  br label %70

70:                                               ; preds = %49, %63
  %71 = phi i32 [ %69, %63 ], [ %53, %49 ]
  %72 = zext i32 %71 to i64
  %73 = or i64 %54, %72
  %74 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %73, i64* %74, align 8
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %55, i64* %75, align 8
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %5, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #20
  %76 = load i32, i32* %16, align 8
  %77 = load i32, i32* %17, align 4
  br label %78

78:                                               ; preds = %45, %41, %32, %70, %22
  %79 = phi i64* [ %36, %45 ], [ %36, %41 ], [ %36, %32 ], [ %36, %70 ], [ %26, %22 ]
  %80 = phi i32 [ 0, %45 ], [ 0, %41 ], [ 0, %32 ], [ %77, %70 ], [ %31, %22 ]
  %81 = phi i32 [ 0, %45 ], [ 0, %41 ], [ 0, %32 ], [ %76, %70 ], [ %29, %22 ]
  %82 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp slt i32 %83, 0
  %85 = select i1 %84, i32 -2147483648, i32 2147483647
  %86 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %83) #20
  %87 = extractvalue { i32, i1 } %86, 1
  %88 = extractvalue { i32, i1 } %86, 0
  %89 = select i1 %87, i32 %85, i32 %88, !prof !2
  %90 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp slt i32 %91, 0
  %93 = select i1 %92, i32 -2147483648, i32 2147483647
  %94 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %80, i32 %91) #20
  %95 = extractvalue { i32, i1 } %94, 1
  %96 = extractvalue { i32, i1 } %94, 0
  %97 = select i1 %95, i32 %93, i32 %96, !prof !2
  %98 = zext i32 %97 to i64
  %99 = shl nuw i64 %98, 32
  %100 = zext i32 %89 to i64
  %101 = or i64 %99, %100
  store i64 %101, i64* %79, align 8
  %102 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #20
  br label %103

103:                                              ; preds = %4, %78
  %104 = phi i1 [ %102, %78 ], [ true, %4 ]
  ret i1 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink9LayoutBox42PhysicalVisualOverflowRectIncludingFiltersEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca { <2 x float>, <2 x float> }, align 8
  %3 = bitcast { <2 x float>, <2 x float> }* %2 to %"class.blink::FloatRect"*
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #20
  %6 = extractvalue { i64, i64 } %5, 0
  %7 = trunc i64 %6 to i32
  %8 = extractvalue { i64, i64 } %5, 1
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = and i160 %13, 15211807202738752817960438464512
  %15 = icmp eq i160 %14, 5070602400912917605986812821504
  br i1 %15, label %16, label %25, !prof !2

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %18 = trunc i64 %8 to i32
  %19 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %20 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %20, i64 106
  %22 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::LayoutObject"* %17, i32 %7, i32 %18, %"class.blink::LayoutBox"* null) #20
  %24 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  br label %25

25:                                               ; preds = %1, %16
  %26 = phi %"class.blink::ComputedStyle"* [ %24, %16 ], [ %10, %1 ]
  %27 = phi i32 [ %23, %16 ], [ %7, %1 ]
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %26, i64 0, i32 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %29, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %31, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::StyleFilterData"*, %"class.blink::StyleFilterData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::StyleFilterData", %"class.blink::StyleFilterData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %25
  %38 = and i64 %6, -4294967296
  %39 = zext i32 %27 to i64
  %40 = or i64 %38, %39
  br label %149

41:                                               ; preds = %25
  %42 = lshr i64 %6, 32
  %43 = trunc i64 %42 to i32
  %44 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.blink::FloatRect"*
  %45 = bitcast { <2 x float>, <2 x float> }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #20
  %46 = sitofp i32 %27 to float
  %47 = fmul float %46, 1.562500e-02
  %48 = sitofp i32 %43 to float
  %49 = fmul float %48, 1.562500e-02
  %50 = trunc i64 %8 to i32
  %51 = sitofp i32 %50 to float
  %52 = fmul float %51, 1.562500e-02
  %53 = lshr i64 %8, 32
  %54 = trunc i64 %53 to i32
  %55 = sitofp i32 %54 to float
  %56 = fmul float %55, 1.562500e-02
  %57 = insertelement <2 x float> undef, float %47, i32 0
  %58 = insertelement <2 x float> %57, float %49, i32 1
  %59 = insertelement <2 x float> undef, float %52, i32 0
  %60 = insertelement <2 x float> %59, float %56, i32 1
  %61 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 0
  store <2 x float> %58, <2 x float>* %61, align 8
  %62 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %2, i64 0, i32 1
  store <2 x float> %60, <2 x float>* %62, align 8
  %63 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #20
  %64 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %65 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %64, align 8
  %66 = icmp eq %"struct.blink::FragmentData::RareData"* %65, null
  br i1 %66, label %70, label %67

67:                                               ; preds = %41
  %68 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %65, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %68, align 8
  br label %70

70:                                               ; preds = %41, %67
  %71 = phi %"class.blink::PaintLayer"* [ %69, %67 ], [ null, %41 ]
  %72 = tail call { <2 x float>, <2 x float> } @_ZNK5blink10PaintLayer18FilterReferenceBoxEv(%"class.blink::PaintLayer"* %71) #20
  %73 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %74 = extractvalue { <2 x float>, <2 x float> } %72, 0
  store <2 x float> %74, <2 x float>* %73, align 8
  %75 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %76 = extractvalue { <2 x float>, <2 x float> } %72, 1
  store <2 x float> %76, <2 x float>* %75, align 8
  call void @_ZN5blink9FloatRect14UniteIfNonZeroERKS0_(%"class.blink::FloatRect"* nonnull %3, %"class.blink::FloatRect"* nonnull dereferenceable(16) %44) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #20
  %77 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %64, align 8
  %78 = icmp eq %"struct.blink::FragmentData::RareData"* %77, null
  br i1 %78, label %82, label %79

79:                                               ; preds = %70
  %80 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %80, align 8
  br label %82

82:                                               ; preds = %70, %79
  %83 = phi %"class.blink::PaintLayer"* [ %81, %79 ], [ null, %70 ]
  %84 = call { <2 x float>, <2 x float> } @_ZNK5blink10PaintLayer16MapRectForFilterERKNS_9FloatRectE(%"class.blink::PaintLayer"* %83, %"class.blink::FloatRect"* nonnull dereferenceable(16) %3) #20
  %85 = extractvalue { <2 x float>, <2 x float> } %84, 0
  %86 = extractvalue { <2 x float>, <2 x float> } %84, 1
  %87 = extractelement <2 x float> %85, i32 0
  %88 = fmul float %87, 6.400000e+01
  %89 = call float @llvm.floor.f32(float %88) #20
  %90 = fcmp ult float %89, 0xC1E0000000000000
  %91 = fcmp ugt float %89, 0x41DFFFFFE0000000
  %92 = fcmp ogt float %89, 0xC1E0000000000000
  %93 = select i1 %92, float %89, float 0xC1E0000000000000
  %94 = fptosi float %93 to i32
  %95 = select i1 %90, i32 0, i32 2147483647
  %96 = select i1 %91, i32 %95, i32 %94
  %97 = extractelement <2 x float> %85, i32 1
  %98 = fmul float %97, 6.400000e+01
  %99 = call float @llvm.floor.f32(float %98) #20
  %100 = fcmp ult float %99, 0xC1E0000000000000
  %101 = fcmp ugt float %99, 0x41DFFFFFE0000000
  %102 = fcmp ogt float %99, 0xC1E0000000000000
  %103 = select i1 %102, float %99, float 0xC1E0000000000000
  %104 = fptosi float %103 to i32
  %105 = select i1 %100, i32 0, i32 2147483647
  %106 = select i1 %101, i32 %105, i32 %104
  %107 = extractelement <2 x float> %86, i32 0
  %108 = fadd float %87, %107
  %109 = fmul float %108, 6.400000e+01
  %110 = call float @llvm.ceil.f32(float %109) #20
  %111 = fcmp ult float %110, 0xC1E0000000000000
  %112 = fcmp ugt float %110, 0x41DFFFFFE0000000
  %113 = fcmp ogt float %110, 0xC1E0000000000000
  %114 = select i1 %113, float %110, float 0xC1E0000000000000
  %115 = fptosi float %114 to i32
  %116 = select i1 %111, i32 0, i32 2147483647
  %117 = select i1 %112, i32 %116, i32 %115
  %118 = icmp sgt i32 %96, -1
  %119 = select i1 %118, i32 -2147483648, i32 2147483647
  %120 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %117, i32 %96) #20
  %121 = extractvalue { i32, i1 } %120, 1
  %122 = extractvalue { i32, i1 } %120, 0
  %123 = select i1 %121, i32 %119, i32 %122, !prof !2
  %124 = extractelement <2 x float> %86, i32 1
  %125 = fadd float %97, %124
  %126 = fmul float %125, 6.400000e+01
  %127 = call float @llvm.ceil.f32(float %126) #20
  %128 = fcmp ult float %127, 0xC1E0000000000000
  %129 = fcmp ugt float %127, 0x41DFFFFFE0000000
  %130 = fcmp ogt float %127, 0xC1E0000000000000
  %131 = select i1 %130, float %127, float 0xC1E0000000000000
  %132 = fptosi float %131 to i32
  %133 = select i1 %128, i32 0, i32 2147483647
  %134 = select i1 %129, i32 %133, i32 %132
  %135 = icmp sgt i32 %106, -1
  %136 = select i1 %135, i32 -2147483648, i32 2147483647
  %137 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %134, i32 %106) #20
  %138 = extractvalue { i32, i1 } %137, 1
  %139 = extractvalue { i32, i1 } %137, 0
  %140 = select i1 %138, i32 %136, i32 %139, !prof !2
  %141 = zext i32 %106 to i64
  %142 = shl nuw i64 %141, 32
  %143 = zext i32 %96 to i64
  %144 = or i64 %142, %143
  %145 = zext i32 %140 to i64
  %146 = shl nuw i64 %145, 32
  %147 = zext i32 %123 to i64
  %148 = or i64 %146, %147
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #20
  br label %149

149:                                              ; preds = %82, %37
  %150 = phi i64 [ %144, %82 ], [ %40, %37 ]
  %151 = phi i64 [ %148, %82 ], [ %8, %37 ]
  %152 = insertvalue { i64, i64 } undef, i64 %150, 0
  %153 = insertvalue { i64, i64 } %152, i64 %151, 1
  ret { i64, i64 } %153
}

declare void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0)
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = and i64 %3, -4294967296
  %6 = extractvalue { i64, i64 } %2, 1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 5070602400912917605986812821504
  br i1 %13, label %14, label %22, !prof !2

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %16 = trunc i64 %6 to i32
  %17 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %18 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %18, i64 106
  %20 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %19, align 8
  %21 = tail call i32 %20(%"class.blink::LayoutObject"* %15, i32 %4, i32 %16, %"class.blink::LayoutBox"* null) #20
  br label %22

22:                                               ; preds = %1, %14
  %23 = phi i32 [ %21, %14 ], [ %4, %1 ]
  %24 = zext i32 %23 to i64
  %25 = or i64 %5, %24
  %26 = insertvalue { i64, i64 } undef, i64 %25, 0
  %27 = insertvalue { i64, i64 } %26, i64 %6, 1
  ret { i64, i64 } %27
}

declare zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #4 align 2 {
  %6 = tail call zeroext i1 @_ZNK5blink9LayoutBox12MayIntersectERKNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"* %0, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3)
  br i1 %6, label %7, label %10

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZN5blink12LayoutObject16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutObject"* %8, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3, i32 %4) #20
  br label %10

10:                                               ; preds = %5, %7
  %11 = phi i1 [ %9, %7 ], [ false, %5 ]
  ret i1 %11
}

declare zeroext i1 @_ZN5blink12LayoutObject16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #4 align 2 {
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %"class.blink::FloatRoundedRect", align 4
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"struct.blink::PhysicalRect"*
  %10 = alloca %"struct.blink::PhysicalRect", align 8
  %11 = alloca %"class.blink::FloatRoundedRect", align 4
  %12 = alloca %"struct.blink::PhysicalRect", align 8
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"struct.blink::PhysicalOffset"*
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK5blink9LayoutBox12MayIntersectERKNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"* %0, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3)
  br i1 %16, label %17, label %381

17:                                               ; preds = %5
  %18 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*, i32)***
  %19 = load i1 (%"class.blink::LayoutBox"*, i32)**, i1 (%"class.blink::LayoutBox"*, i32)*** %18, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*, i32)*, i1 (%"class.blink::LayoutBox"*, i32)** %19, i64 157
  %21 = load i1 (%"class.blink::LayoutBox"*, i32)*, i1 (%"class.blink::LayoutBox"*, i32)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::LayoutBox"* %0, i32 %4) #20
  br i1 %22, label %23, label %44

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = and i96 %26, 8589934592
  %28 = icmp eq i96 %27, 0
  br i1 %28, label %44, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 9
  %33 = bitcast [20 x i8]* %32 to i160*
  %34 = load i160, i160* %33, align 8
  %35 = lshr i160 %34, 74
  %36 = trunc i160 %35 to i32
  %37 = and i32 %36, 7
  switch i32 %37, label %38 [
    i32 5, label %44
    i32 2, label %44
  ]

38:                                               ; preds = %29
  %39 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)***
  %40 = load i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)**, i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)*, i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)** %40, i64 185
  %42 = load i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)*, i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::LayoutBox"* %0, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3) #20
  br i1 %43, label %381, label %44

44:                                               ; preds = %29, %29, %23, %38, %17
  %45 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 0, i32 1
  %46 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  %47 = icmp eq %"class.blink::LayoutObject"* %46, %15
  br i1 %47, label %187, label %48

48:                                               ; preds = %44
  %49 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %72, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %53 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %52 to i96*
  %54 = load i96, i96* %53, align 4
  %55 = and i96 %54, 16777216
  %56 = icmp eq i96 %55, 0
  br i1 %56, label %57, label %72

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %59 = load %"class.blink::Node"*, %"class.blink::Node"** %58, align 8
  %60 = icmp eq %"class.blink::Node"* %59, null
  br i1 %60, label %72, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %59, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = and i32 %63, 67108876
  %65 = icmp eq i32 %64, 67108864
  br i1 %65, label %66, label %72, !prof !12

66:                                               ; preds = %61
  %67 = bitcast %"class.blink::Node"* %59 to %"class.blink::Element"*
  %68 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %67) #20
  %69 = icmp eq %"class.blink::DisplayLockContext"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  %71 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext19ShouldPaintChildrenEv(%"class.blink::DisplayLockContext"* nonnull %68) #20
  br i1 %71, label %72, label %187

72:                                               ; preds = %48, %70, %51, %57, %61, %66
  %73 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %74 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %73 to i96*
  %75 = load i96, i96* %74, align 4
  %76 = and i96 %75, 464227514732017603087171584
  %77 = icmp eq i96 %76, 0
  br i1 %77, label %181, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %80 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %79) #20
  %81 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #20
  br i1 %80, label %93, label %82

82:                                               ; preds = %78
  %83 = bitcast %"class.blink::LayoutBox"* %0 to { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)***
  %84 = load { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)**, { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)*** %83, align 8
  %85 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)*, { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)** %84, i64 177
  %86 = load { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)*, { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)** %85, align 8
  %87 = tail call { i64, i64 } %86(%"class.blink::LayoutBox"* %0, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3, i32 1) #20
  %88 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %89 = extractvalue { i64, i64 } %87, 0
  store i64 %89, i64* %88, align 8
  %90 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %91 = extractvalue { i64, i64 } %87, 1
  store i64 %91, i64* %90, align 8
  %92 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %9) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #20
  br i1 %92, label %94, label %187

93:                                               ; preds = %78
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #20
  br label %94

94:                                               ; preds = %82, %93
  %95 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %96 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %96, i64 0, i32 0, i32 7, i32 0, i32 0
  %98 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %98, i64 0, i32 5, i32 0
  %100 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %98, i64 0, i32 5, i32 0, i32 2
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, 8
  br i1 %102, label %166, label %103

103:                                              ; preds = %94
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %98, i64 0, i32 5, i32 0, i32 3
  %105 = load i8, i8* %104, align 2, !range !4
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %103
  %108 = bitcast %"class.blink::Length"* %99 to float*
  %109 = load float, float* %108, align 4
  %110 = fcmp oeq float %109, 0.000000e+00
  br i1 %110, label %115, label %166

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %99, i64 0, i32 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %166

115:                                              ; preds = %111, %107
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %98, i64 0, i32 6, i32 0
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %98, i64 0, i32 6, i32 0, i32 2
  %118 = load i8, i8* %117, align 1
  %119 = icmp eq i8 %118, 8
  br i1 %119, label %166, label %120

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %98, i64 0, i32 6, i32 0, i32 3
  %122 = load i8, i8* %121, align 2, !range !4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %128, label %124

124:                                              ; preds = %120
  %125 = bitcast %"class.blink::Length"* %116 to float*
  %126 = load float, float* %125, align 4
  %127 = fcmp oeq float %126, 0.000000e+00
  br i1 %127, label %132, label %166

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %116, i64 0, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %166

132:                                              ; preds = %128, %124
  %133 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %98, i64 0, i32 3, i32 0
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %98, i64 0, i32 3, i32 0, i32 2
  %135 = load i8, i8* %134, align 1
  %136 = icmp eq i8 %135, 8
  br i1 %136, label %166, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %98, i64 0, i32 3, i32 0, i32 3
  %139 = load i8, i8* %138, align 2, !range !4
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %145, label %141

141:                                              ; preds = %137
  %142 = bitcast %"class.blink::Length"* %133 to float*
  %143 = load float, float* %142, align 4
  %144 = fcmp oeq float %143, 0.000000e+00
  br i1 %144, label %149, label %166

145:                                              ; preds = %137
  %146 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %133, i64 0, i32 0, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %166

149:                                              ; preds = %145, %141
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %98, i64 0, i32 4, i32 0
  %151 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %98, i64 0, i32 4, i32 0, i32 2
  %152 = load i8, i8* %151, align 1
  %153 = icmp eq i8 %152, 8
  br i1 %153, label %166, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %98, i64 0, i32 4, i32 0, i32 3
  %156 = load i8, i8* %155, align 2, !range !4
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %162, label %158

158:                                              ; preds = %154
  %159 = bitcast %"class.blink::Length"* %150 to float*
  %160 = load float, float* %159, align 4
  %161 = fcmp oeq float %160, 0.000000e+00
  br i1 %161, label %181, label %166

162:                                              ; preds = %154
  %163 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %150, i64 0, i32 0, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %181, label %166

166:                                              ; preds = %149, %132, %115, %94, %158, %162, %141, %124, %107, %145, %128, %111
  %167 = bitcast %"struct.blink::PhysicalRect"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %167) #20
  %168 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %10, i64 0, i32 1, i32 0, i32 0
  %169 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %10, i64 0, i32 1, i32 1, i32 0
  %170 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %171 = bitcast %"class.blink::LayoutSize"* %170 to i64*
  %172 = load i64, i64* %171, align 4
  %173 = trunc i64 %172 to i32
  %174 = lshr i64 %172, 32
  %175 = trunc i64 %174 to i32
  %176 = bitcast %"struct.blink::PhysicalOffset"* %3 to i64*
  %177 = bitcast %"struct.blink::PhysicalRect"* %10 to i64*
  %178 = load i64, i64* %176, align 4
  store i64 %178, i64* %177, align 8
  store i32 %173, i32* %168, align 8
  store i32 %175, i32* %169, align 4
  %179 = bitcast %"class.blink::FloatRoundedRect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %179) #20
  call void @_ZN5blink21RoundedBorderGeometry30PixelSnappedRoundedInnerBorderERKNS_13ComputedStyleERKNS_12PhysicalRectENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* nonnull sret %11, %"class.blink::ComputedStyle"* dereferenceable(104) %96, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %10, i32 16843009) #20
  %180 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_16FloatRoundedRectE(%"class.blink::HitTestLocation"* %2, %"class.blink::FloatRoundedRect"* nonnull dereferenceable(48) %11) #20
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %179) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %167) #20
  br i1 %180, label %181, label %187

181:                                              ; preds = %72, %162, %158, %166
  %182 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)***
  %183 = load i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)**, i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*** %182, align 8
  %184 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*, i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)** %183, i64 192
  %185 = load i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*, i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)** %184, align 8
  %186 = call zeroext i1 %185(%"class.blink::LayoutBox"* %0, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3, i32 %4) #20
  br i1 %186, label %381, label %187

187:                                              ; preds = %70, %44, %82, %166, %181
  %188 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %189 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %189, i64 0, i32 0, i32 7, i32 0, i32 0
  %191 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %190, align 8
  %192 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %191, i64 0, i32 5, i32 0
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %191, i64 0, i32 5, i32 0, i32 2
  %194 = load i8, i8* %193, align 1
  %195 = icmp eq i8 %194, 8
  %196 = bitcast %"class.blink::ComputedStyle"* %189 to %"class.blink::ComputedStyleBase"*
  br i1 %195, label %260, label %197

197:                                              ; preds = %187
  %198 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %191, i64 0, i32 5, i32 0, i32 3
  %199 = load i8, i8* %198, align 2, !range !4
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %205, label %201

201:                                              ; preds = %197
  %202 = bitcast %"class.blink::Length"* %192 to float*
  %203 = load float, float* %202, align 4
  %204 = fcmp oeq float %203, 0.000000e+00
  br i1 %204, label %209, label %260

205:                                              ; preds = %197
  %206 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %192, i64 0, i32 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %260

209:                                              ; preds = %205, %201
  %210 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %191, i64 0, i32 6, i32 0
  %211 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %191, i64 0, i32 6, i32 0, i32 2
  %212 = load i8, i8* %211, align 1
  %213 = icmp eq i8 %212, 8
  br i1 %213, label %260, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %191, i64 0, i32 6, i32 0, i32 3
  %216 = load i8, i8* %215, align 2, !range !4
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %222, label %218

218:                                              ; preds = %214
  %219 = bitcast %"class.blink::Length"* %210 to float*
  %220 = load float, float* %219, align 4
  %221 = fcmp oeq float %220, 0.000000e+00
  br i1 %221, label %226, label %260

222:                                              ; preds = %214
  %223 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %210, i64 0, i32 0, i32 0
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %260

226:                                              ; preds = %222, %218
  %227 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %191, i64 0, i32 3, i32 0
  %228 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %191, i64 0, i32 3, i32 0, i32 2
  %229 = load i8, i8* %228, align 1
  %230 = icmp eq i8 %229, 8
  br i1 %230, label %260, label %231

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %191, i64 0, i32 3, i32 0, i32 3
  %233 = load i8, i8* %232, align 2, !range !4
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %239, label %235

235:                                              ; preds = %231
  %236 = bitcast %"class.blink::Length"* %227 to float*
  %237 = load float, float* %236, align 4
  %238 = fcmp oeq float %237, 0.000000e+00
  br i1 %238, label %243, label %260

239:                                              ; preds = %231
  %240 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %227, i64 0, i32 0, i32 0
  %241 = load i32, i32* %240, align 4
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %260

243:                                              ; preds = %239, %235
  %244 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %191, i64 0, i32 4, i32 0
  %245 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %191, i64 0, i32 4, i32 0, i32 2
  %246 = load i8, i8* %245, align 1
  %247 = icmp eq i8 %246, 8
  br i1 %247, label %260, label %248

248:                                              ; preds = %243
  %249 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %191, i64 0, i32 4, i32 0, i32 3
  %250 = load i8, i8* %249, align 2, !range !4
  %251 = icmp eq i8 %250, 0
  br i1 %251, label %256, label %252

252:                                              ; preds = %248
  %253 = bitcast %"class.blink::Length"* %244 to float*
  %254 = load float, float* %253, align 4
  %255 = fcmp oeq float %254, 0.000000e+00
  br i1 %255, label %282, label %260

256:                                              ; preds = %248
  %257 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %244, i64 0, i32 0, i32 0
  %258 = load i32, i32* %257, align 4
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %282, label %260

260:                                              ; preds = %205, %222, %239, %201, %218, %235, %256, %252, %187, %209, %226, %243
  %261 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %262 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %262) #20
  %263 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %264 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %265 = bitcast %"class.blink::LayoutSize"* %264 to i64*
  %266 = load i64, i64* %265, align 4
  %267 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 %266, i64* %263, align 8
  %268 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %269 = load i32, i32* %268, align 4
  %270 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %271 = load i32, i32* %270, align 4
  %272 = zext i32 %271 to i64
  %273 = shl nuw i64 %272, 32
  %274 = zext i32 %269 to i64
  %275 = or i64 %273, %274
  store i64 %275, i64* %267, align 8
  %276 = bitcast %"class.blink::FloatRoundedRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %276) #20
  call void @_ZN5blink21RoundedBorderGeometry25PixelSnappedRoundedBorderERKNS_13ComputedStyleERKNS_12PhysicalRectENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* nonnull sret %7, %"class.blink::ComputedStyle"* dereferenceable(104) %189, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %261, i32 16843009) #20
  %277 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_16FloatRoundedRectE(%"class.blink::HitTestLocation"* %2, %"class.blink::FloatRoundedRect"* nonnull dereferenceable(48) %7) #20
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %276) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %262) #20
  %278 = and i1 %22, %277
  br i1 %278, label %279, label %381

279:                                              ; preds = %260
  %280 = bitcast %"class.blink::ComputedStyle"** %188 to %"class.blink::ComputedStyleBase"**
  %281 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %280, align 8
  br label %283

282:                                              ; preds = %256, %252
  br i1 %22, label %283, label %381

283:                                              ; preds = %282, %279
  %284 = phi %"class.blink::ComputedStyleBase"* [ %281, %279 ], [ %196, %282 ]
  %285 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %284, i64 0, i32 9
  %286 = bitcast [20 x i8]* %285 to i160*
  %287 = load i160, i160* %286, align 8
  %288 = and i160 %287, 3802951800684688204490109616128
  %289 = icmp eq i160 %288, 1267650600228229401496703205376
  br i1 %289, label %290, label %381

290:                                              ; preds = %283
  %291 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 0, i32 0
  %292 = load i32, i32* %291, align 8
  %293 = and i32 %292, 1024
  %294 = icmp ne i32 %293, 0
  %295 = and i160 %287, 16888498602639360
  %296 = icmp ne i160 %295, 0
  %297 = or i1 %296, %294
  br i1 %297, label %298, label %381

298:                                              ; preds = %290
  %299 = bitcast %"struct.blink::PhysicalRect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %299) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %299, i8 0, i64 16, i1 false) #20
  %300 = and i32 %292, 65536
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %312, label %302

302:                                              ; preds = %298
  %303 = call { i64, i64 } @_ZNK5blink9LayoutBox42PhysicalVisualOverflowRectIncludingFiltersEv(%"class.blink::LayoutBox"* %0)
  %304 = extractvalue { i64, i64 } %303, 0
  %305 = extractvalue { i64, i64 } %303, 1
  %306 = bitcast %"struct.blink::PhysicalRect"* %12 to i64*
  store i64 %304, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %12, i64 0, i32 1
  %308 = bitcast %"struct.blink::PhysicalSize"* %307 to i64*
  store i64 %305, i64* %308, align 8
  %309 = trunc i64 %304 to i32
  %310 = lshr i64 %304, 32
  %311 = trunc i64 %310 to i32
  br label %319

312:                                              ; preds = %298
  %313 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %314 = bitcast %"class.blink::LayoutSize"* %313 to i64*
  %315 = load i64, i64* %314, align 4
  %316 = bitcast %"struct.blink::PhysicalRect"* %12 to i64*
  store i64 0, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %12, i64 0, i32 1
  %318 = bitcast %"struct.blink::PhysicalSize"* %317 to i64*
  store i64 %315, i64* %318, align 8
  br label %319

319:                                              ; preds = %312, %302
  %320 = phi i64* [ %316, %312 ], [ %306, %302 ]
  %321 = phi i32 [ 0, %312 ], [ %311, %302 ]
  %322 = phi i32 [ 0, %312 ], [ %309, %302 ]
  %323 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %324 = load i32, i32* %323, align 4
  %325 = icmp slt i32 %324, 0
  %326 = select i1 %325, i32 -2147483648, i32 2147483647
  %327 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %322, i32 %324) #20
  %328 = extractvalue { i32, i1 } %327, 1
  %329 = extractvalue { i32, i1 } %327, 0
  %330 = select i1 %328, i32 %326, i32 %329, !prof !2
  %331 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %332 = load i32, i32* %331, align 4
  %333 = icmp slt i32 %332, 0
  %334 = select i1 %333, i32 -2147483648, i32 2147483647
  %335 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %321, i32 %332) #20
  %336 = extractvalue { i32, i1 } %335, 1
  %337 = extractvalue { i32, i1 } %335, 0
  %338 = select i1 %336, i32 %334, i32 %337, !prof !2
  %339 = zext i32 %338 to i64
  %340 = shl nuw i64 %339, 32
  %341 = zext i32 %330 to i64
  %342 = or i64 %340, %341
  store i64 %342, i64* %320, align 8
  %343 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %12) #20
  br i1 %343, label %344, label %380

344:                                              ; preds = %319
  %345 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %345) #20
  %346 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 0, i32 0
  %347 = load i32, i32* %346, align 4
  %348 = load i32, i32* %323, align 4
  %349 = icmp sgt i32 %348, -1
  %350 = select i1 %349, i32 -2147483648, i32 2147483647
  %351 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %347, i32 %348) #20
  %352 = extractvalue { i32, i1 } %351, 1
  %353 = extractvalue { i32, i1 } %351, 0
  %354 = select i1 %352, i32 %350, i32 %353, !prof !2
  %355 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 1, i32 0
  %356 = load i32, i32* %355, align 4
  %357 = load i32, i32* %331, align 4
  %358 = icmp sgt i32 %357, -1
  %359 = select i1 %358, i32 -2147483648, i32 2147483647
  %360 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %356, i32 %357) #20
  %361 = extractvalue { i32, i1 } %360, 1
  %362 = extractvalue { i32, i1 } %360, 0
  %363 = select i1 %361, i32 %359, i32 %362, !prof !2
  %364 = zext i32 %363 to i64
  %365 = shl nuw i64 %364, 32
  %366 = zext i32 %354 to i64
  %367 = or i64 %365, %366
  store i64 %367, i64* %13, align 8
  %368 = bitcast %"class.blink::LayoutBox"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)***
  %369 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*** %368, align 8
  %370 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %369, i64 62
  %371 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %370, align 8
  call void %371(%"class.blink::LayoutObject"* %15, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %14) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %345) #20
  %372 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::Node"* (%"class.blink::LayoutObject"*)***
  %373 = load %"class.blink::Node"* (%"class.blink::LayoutObject"*)**, %"class.blink::Node"* (%"class.blink::LayoutObject"*)*** %372, align 8
  %374 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::LayoutObject"*)*, %"class.blink::Node"* (%"class.blink::LayoutObject"*)** %373, i64 61
  %375 = load %"class.blink::Node"* (%"class.blink::LayoutObject"*)*, %"class.blink::Node"* (%"class.blink::LayoutObject"*)** %374, align 8
  %376 = call %"class.blink::Node"* %375(%"class.blink::LayoutObject"* %15) #20
  %377 = call i32 @_ZN5blink13HitTestResult28AddNodeToListBasedTestResultEPNS_4NodeERKNS_15HitTestLocationERKNS_12PhysicalRectE(%"class.blink::HitTestResult"* %1, %"class.blink::Node"* %376, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %12) #20
  %378 = icmp eq i32 %377, 1
  br i1 %378, label %379, label %380

379:                                              ; preds = %344
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %299) #20
  br label %381

380:                                              ; preds = %319, %344
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %299) #20
  br label %381

381:                                              ; preds = %260, %290, %283, %38, %282, %380, %379, %181, %5
  %382 = phi i1 [ false, %5 ], [ true, %38 ], [ true, %379 ], [ true, %181 ], [ false, %260 ], [ false, %380 ], [ false, %282 ], [ false, %283 ], [ false, %290 ]
  ret i1 %382
}

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_16FloatRoundedRectE(%"class.blink::HitTestLocation"*, %"class.blink::FloatRoundedRect"* dereferenceable(48)) local_unnamed_addr #5

declare void @_ZN5blink21RoundedBorderGeometry30PixelSnappedRoundedInnerBorderERKNS_13ComputedStyleERKNS_12PhysicalRectENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* sret, %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::PhysicalRect"* dereferenceable(16), i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox25HitTestClippedOutByBorderERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"* nocapture readonly, %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"struct.blink::PhysicalRect"*
  %6 = alloca %"class.blink::FloatRoundedRect", align 4
  %7 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #20
  %8 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %10 = bitcast %"class.blink::LayoutSize"* %9 to i64*
  %11 = load i64, i64* %10, align 4
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %11, i64* %8, align 8
  %13 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = shl nuw i64 %17, 32
  %19 = zext i32 %14 to i64
  %20 = or i64 %18, %19
  store i64 %20, i64* %12, align 8
  %21 = bitcast %"class.blink::FloatRoundedRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #20
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  call void @_ZN5blink21RoundedBorderGeometry25PixelSnappedRoundedBorderERKNS_13ComputedStyleERKNS_12PhysicalRectENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* nonnull sret %6, %"class.blink::ComputedStyle"* dereferenceable(104) %23, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5, i32 16843009) #20
  %24 = call zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_16FloatRoundedRectE(%"class.blink::HitTestLocation"* %1, %"class.blink::FloatRoundedRect"* nonnull dereferenceable(48) %6) #20
  %25 = xor i1 %24, true
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #20
  ret i1 %25
}

declare i32 @_ZN5blink13HitTestResult28AddNodeToListBasedTestResultEPNS_4NodeERKNS_15HitTestLocationERKNS_12PhysicalRectE(%"class.blink::HitTestResult"*, %"class.blink::Node"*, %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9LayoutBox15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), i32) unnamed_addr #4 align 2 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.blink::PhysicalOffset"*
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %10 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %10, i64 13
  %12 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call %"class.blink::LayoutObjectChildList"* %12(%"class.blink::LayoutObject"* %8) #20
  %14 = icmp eq %"class.blink::LayoutObjectChildList"* %13, null
  br i1 %14, label %133, label %15

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %13, i64 0, i32 1
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %133, label %19

19:                                               ; preds = %15
  %20 = bitcast i64* %6 to i8*
  %21 = bitcast i64* %6 to i32*
  %22 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %7, i64 0, i32 1, i32 0
  %23 = bitcast %"struct.blink::PhysicalOffset"* %3 to i64*
  %24 = icmp eq %"class.blink::LayoutBox"* %0, null
  br label %25

25:                                               ; preds = %19, %129
  %26 = phi %"class.blink::LayoutObject"* [ %17, %19 ], [ %131, %129 ]
  %27 = bitcast %"class.blink::LayoutObject"* %26 to %"class.blink::LayoutBox"*
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 4
  %29 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %28 to i96*
  %30 = load i96, i96* %29, align 4
  %31 = and i96 %30, 4294967296
  %32 = icmp eq i96 %31, 0
  br i1 %32, label %47, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %35 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %34, align 8
  %36 = icmp eq %"struct.blink::FragmentData::RareData"* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %35, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %38, align 8
  br label %40

40:                                               ; preds = %33, %37
  %41 = phi %"class.blink::PaintLayer"* [ %39, %37 ], [ null, %33 ]
  %42 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %41, i64 0, i32 1
  %43 = bitcast [6 x i8]* %42 to i48*
  %44 = load i48, i48* %43, align 1
  %45 = and i48 %44, 1
  %46 = icmp eq i48 %45, 0
  br i1 %46, label %47, label %129

47:                                               ; preds = %40, %25
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #20
  %48 = load i64, i64* %23, align 4
  store i64 %48, i64* %6, align 8
  %49 = and i96 %30, 67108864
  %50 = icmp eq i96 %49, 0
  %51 = icmp eq %"class.blink::LayoutObject"* %26, null
  %52 = or i1 %51, %50
  br i1 %52, label %123, label %53

53:                                               ; preds = %47
  br i1 %24, label %54, label %61

54:                                               ; preds = %53
  %55 = bitcast %"class.blink::LayoutObject"* %26 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %56 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %56, i64 147
  %58 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %57, align 8
  %59 = call %"class.blink::LayoutBox"* %58(%"class.blink::LayoutBox"* nonnull %27) #20
  %60 = icmp eq %"class.blink::LayoutBox"* %59, null
  br i1 %60, label %70, label %61

61:                                               ; preds = %54, %53
  %62 = phi %"class.blink::LayoutBox"* [ %59, %54 ], [ %0, %53 ]
  %63 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %62, i64 0, i32 0, i32 0, i32 5, i32 0
  %64 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %64, i64 0, i32 0, i32 9
  %66 = bitcast [20 x i8]* %65 to i160*
  %67 = load i160, i160* %66, align 8
  %68 = and i160 %67, 15211807202738752817960438464512
  %69 = icmp eq i160 %68, 5070602400912917605986812821504
  br i1 %69, label %75, label %70, !prof !2

70:                                               ; preds = %61, %54
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 1, i32 1, i32 1
  %72 = bitcast i8* %71 to i64*
  %73 = load i64, i64* %72, align 4
  %74 = trunc i64 %73 to i32
  br label %100

75:                                               ; preds = %61
  %76 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %62, i64 0, i32 2, i32 1
  %77 = bitcast %"class.blink::LayoutSize"* %76 to i64*
  %78 = load i64, i64* %77, align 4
  %79 = trunc i64 %78 to i32
  %80 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 1, i32 4, i32 0, i64 4
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 4
  %83 = trunc i64 %82 to i32
  %84 = icmp sgt i32 %83, -1
  %85 = select i1 %84, i32 -2147483648, i32 2147483647
  %86 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %79, i32 %83) #20
  %87 = extractvalue { i32, i1 } %86, 1
  %88 = extractvalue { i32, i1 } %86, 0
  %89 = select i1 %87, i32 %85, i32 %88, !prof !2
  %90 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 1, i32 1, i32 1
  %91 = bitcast i8* %90 to i64*
  %92 = load i64, i64* %91, align 4
  %93 = trunc i64 %92 to i32
  %94 = icmp sgt i32 %93, -1
  %95 = select i1 %94, i32 -2147483648, i32 2147483647
  %96 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %89, i32 %93) #20
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !2
  br label %100

100:                                              ; preds = %70, %75
  %101 = phi i32 [ %74, %70 ], [ %99, %75 ]
  %102 = phi i64 [ %73, %70 ], [ %92, %75 ]
  %103 = lshr i64 %102, 32
  %104 = trunc i64 %103 to i32
  %105 = load i32, i32* %21, align 8
  %106 = icmp slt i32 %101, 0
  %107 = select i1 %106, i32 -2147483648, i32 2147483647
  %108 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %101) #20
  %109 = extractvalue { i32, i1 } %108, 1
  %110 = extractvalue { i32, i1 } %108, 0
  %111 = select i1 %109, i32 %107, i32 %110, !prof !2
  %112 = load i32, i32* %22, align 4
  %113 = icmp slt i32 %104, 0
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 %104) #20
  %116 = extractvalue { i32, i1 } %115, 1
  %117 = extractvalue { i32, i1 } %115, 0
  %118 = select i1 %116, i32 %114, i32 %117, !prof !2
  %119 = zext i32 %118 to i64
  %120 = shl nuw i64 %119, 32
  %121 = zext i32 %111 to i64
  %122 = or i64 %120, %121
  store i64 %122, i64* %6, align 8
  br label %123

123:                                              ; preds = %47, %100
  %124 = bitcast %"class.blink::LayoutObject"* %26 to i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)***
  %125 = load i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)**, i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*** %124, align 8
  %126 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*, i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)** %125, i64 63
  %127 = load i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*, i1 (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)** %126, align 8
  %128 = call zeroext i1 %127(%"class.blink::LayoutObject"* nonnull %26, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %7, i32 %4) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #20
  br i1 %128, label %133, label %129

129:                                              ; preds = %40, %123
  %130 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 8
  %131 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %130, align 8
  %132 = icmp eq %"class.blink::LayoutObject"* %131, null
  br i1 %132, label %133, label %25

133:                                              ; preds = %129, %123, %5, %15
  %134 = phi i1 [ false, %15 ], [ false, %5 ], [ true, %123 ], [ false, %129 ]
  ret i1 %134
}

declare void @_ZN5blink21RoundedBorderGeometry25PixelSnappedRoundedBorderERKNS_13ComputedStyleERKNS_12PhysicalRectENS_16PhysicalBoxSidesE(%"class.blink::FloatRoundedRect"* sret, %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::PhysicalRect"* dereferenceable(16), i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox5PaintERKNS_9PaintInfoE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*) unnamed_addr #4 align 2 {
  %3 = alloca %"class.blink::BoxPainter", align 8
  %4 = bitcast %"class.blink::BoxPainter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #20
  %5 = getelementptr inbounds %"class.blink::BoxPainter", %"class.blink::BoxPainter"* %3, i64 0, i32 0
  store %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBox"** %5, align 8
  call void @_ZN5blink10BoxPainter5PaintERKNS_9PaintInfoE(%"class.blink::BoxPainter"* nonnull %3, %"struct.blink::PaintInfo"* %1) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #20
  ret void
}

declare void @_ZN5blink10BoxPainter5PaintERKNS_9PaintInfoE(%"class.blink::BoxPainter"*, %"struct.blink::PaintInfo"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #4 align 2 {
  %4 = alloca %"class.blink::BoxPainter", align 8
  %5 = bitcast %"class.blink::BoxPainter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.blink::BoxPainter", %"class.blink::BoxPainter"* %4, i64 0, i32 0
  store %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBox"** %6, align 8
  call void @_ZN5blink10BoxPainter28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::BoxPainter"* nonnull %4, %"struct.blink::PaintInfo"* %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #20
  ret void
}

declare void @_ZN5blink10BoxPainter28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::BoxPainter"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox26GetBackgroundPaintedExtentERNS_12PhysicalRectE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* nocapture dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %5 = alloca %"class.blink::BackgroundImageGeometry", align 8
  %6 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #20
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %9 = bitcast %"class.blink::LayoutSize"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 0, i64* %11, align 8
  store i64 %10, i64* %7, align 8
  %12 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #20
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = tail call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %14, %"class.blink::CSSProperty"* dereferenceable(24) %12) #20
  %16 = icmp ult i32 %15, 16777216
  br i1 %16, label %19, label %17

17:                                               ; preds = %2
  %18 = bitcast %"struct.blink::PhysicalRect"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* nonnull align 8 %6, i64 16, i1 false)
  br label %45

19:                                               ; preds = %2
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 6, i32 0, i32 0
  %22 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %22, i64 0, i32 2
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %22, i64 0, i32 2, i32 1, i32 0, i32 0
  %25 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %24, align 8
  %26 = icmp eq %"class.blink::StyleImage"* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %23, i64 0, i32 0
  %29 = load %"class.blink::FillLayer"*, %"class.blink::FillLayer"** %28, align 8
  %30 = icmp eq %"class.blink::FillLayer"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27, %19
  %32 = bitcast %"struct.blink::PhysicalRect"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* nonnull align 8 %6, i64 16, i1 false)
  br label %45

33:                                               ; preds = %27
  %34 = bitcast %"class.blink::BackgroundImageGeometry"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %34) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 96, i1 false)
  %35 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  call void @_ZN5blink23BackgroundImageGeometryC1ERKNS_20LayoutBoxModelObjectE(%"class.blink::BackgroundImageGeometry"* nonnull %5, %"class.blink::LayoutBoxModelObject"* dereferenceable(88) %35) #20
  call void @_ZN5blink23BackgroundImageGeometry9CalculateEPKNS_20LayoutBoxModelObjectENS_10PaintPhaseERKNS_9FillLayerERKNS_12PhysicalRectE(%"class.blink::BackgroundImageGeometry"* nonnull %5, %"class.blink::LayoutBoxModelObject"* null, i32 0, %"class.blink::FillLayer"* dereferenceable(64) %23, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4) #20
  %36 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %5, i64 0, i32 9
  %37 = load i8, i8* %36, align 8, !range !4
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::BackgroundImageGeometry", %"class.blink::BackgroundImageGeometry"* %5, i64 0, i32 5
  %41 = bitcast %"struct.blink::PhysicalRect"* %1 to i8*
  %42 = bitcast %"struct.blink::PhysicalRect"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 8 %42, i64 16, i1 false)
  br label %43

43:                                               ; preds = %33, %39
  %44 = phi i1 [ true, %39 ], [ false, %33 ]
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %34) #20
  br label %45

45:                                               ; preds = %31, %43, %17
  %46 = phi i1 [ true, %17 ], [ true, %31 ], [ %44, %43 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #20
  ret i1 %46
}

declare void @_ZN5blink23BackgroundImageGeometryC1ERKNS_20LayoutBoxModelObjectE(%"class.blink::BackgroundImageGeometry"*, %"class.blink::LayoutBoxModelObject"* dereferenceable(88)) unnamed_addr #5

declare void @_ZN5blink23BackgroundImageGeometry9CalculateEPKNS_20LayoutBoxModelObjectENS_10PaintPhaseERKNS_9FillLayerERKNS_12PhysicalRectE(%"class.blink::BackgroundImageGeometry"*, %"class.blink::LayoutBoxModelObject"*, i32, %"class.blink::FillLayer"* dereferenceable(64), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #4 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %8, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %10, i64 0, i32 39
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 31
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %109

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 7, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %17, i64 0, i32 5, i32 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %17, i64 0, i32 5, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %109, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %17, i64 0, i32 5, i32 0, i32 3
  %24 = load i8, i8* %23, align 2, !range !4
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.blink::Length"* %18 to float*
  %28 = load float, float* %27, align 4
  %29 = fcmp oeq float %28, 0.000000e+00
  br i1 %29, label %34, label %109

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %18, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %109

34:                                               ; preds = %30, %26
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %17, i64 0, i32 6, i32 0
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %17, i64 0, i32 6, i32 0, i32 2
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 8
  br i1 %38, label %109, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %17, i64 0, i32 6, i32 0, i32 3
  %41 = load i8, i8* %40, align 2, !range !4
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.blink::Length"* %35 to float*
  %45 = load float, float* %44, align 4
  %46 = fcmp oeq float %45, 0.000000e+00
  br i1 %46, label %51, label %109

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %35, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %109

51:                                               ; preds = %47, %43
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %17, i64 0, i32 3, i32 0
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %17, i64 0, i32 3, i32 0, i32 2
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 8
  br i1 %55, label %109, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %17, i64 0, i32 3, i32 0, i32 3
  %58 = load i8, i8* %57, align 2, !range !4
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %64, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.blink::Length"* %52 to float*
  %62 = load float, float* %61, align 4
  %63 = fcmp oeq float %62, 0.000000e+00
  br i1 %63, label %68, label %109

64:                                               ; preds = %56
  %65 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %52, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %109

68:                                               ; preds = %64, %60
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %17, i64 0, i32 4, i32 0
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %17, i64 0, i32 4, i32 0, i32 2
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, 8
  br i1 %72, label %109, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %17, i64 0, i32 4, i32 0, i32 3
  %75 = load i8, i8* %74, align 2, !range !4
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %73
  %78 = bitcast %"class.blink::Length"* %69 to float*
  %79 = load float, float* %78, align 4
  %80 = fcmp oeq float %79, 0.000000e+00
  br i1 %80, label %85, label %109

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %69, i64 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %109

85:                                               ; preds = %81, %77
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %87, i64 0, i32 3
  %89 = load i8, i8* %88, align 4
  %90 = and i8 %89, 32
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %109

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %8, i64 0, i32 2, i32 0, i32 0
  %94 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %94, i64 0, i32 2, i32 0, i32 0
  %96 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %96, i64 0, i32 45
  %98 = load i32, i32* %97, align 4
  %99 = and i32 %98, 480
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %109

101:                                              ; preds = %92
  %102 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %102) #20
  %103 = tail call { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalBackgroundRectENS_18BackgroundRectTypeE(%"class.blink::LayoutBox"* %0, i32 1)
  %104 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %105 = extractvalue { i64, i64 } %103, 0
  store i64 %105, i64* %104, align 8
  %106 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %107 = extractvalue { i64, i64 } %103, 1
  store i64 %107, i64* %106, align 8
  %108 = call zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"* nonnull %4, %"struct.blink::PhysicalRect"* dereferenceable(16) %1) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %102) #20
  br label %109

109:                                              ; preds = %92, %85, %2, %68, %51, %34, %15, %77, %81, %60, %43, %26, %64, %47, %30, %101
  %110 = phi i1 [ %108, %101 ], [ false, %2 ], [ false, %85 ], [ false, %92 ], [ false, %30 ], [ false, %47 ], [ false, %64 ], [ false, %26 ], [ false, %43 ], [ false, %60 ], [ false, %81 ], [ false, %77 ], [ false, %15 ], [ false, %34 ], [ false, %51 ], [ false, %68 ]
  ret i1 %110
}

declare zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"struct.blink::PhysicalRect"*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.blink::PhysicalOffset"*
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"struct.blink::PhysicalRect"*
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 464227514732017603087171584
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %43, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %19, i64 0, i32 39
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 31
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %43

24:                                               ; preds = %13
  %25 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #20
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %27 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #20
  %28 = bitcast %"class.blink::LayoutBox"* %0 to { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)***
  store i64 0, i64* %4, align 8
  %29 = load { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)**, { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)*** %28, align 8
  %30 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)*, { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)** %29, i64 177
  %31 = load { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)*, { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)** %30, align 8
  %32 = call { i64, i64 } %31(%"class.blink::LayoutBox"* %0, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %5, i32 0) #20
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %34 = extractvalue { i64, i64 } %32, 0
  store i64 %34, i64* %33, align 8
  %35 = extractvalue { i64, i64 } %32, 1
  store i64 %35, i64* %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #20
  %36 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #20
  %37 = call { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalBackgroundRectENS_18BackgroundRectTypeE(%"class.blink::LayoutBox"* %0, i32 1)
  %38 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %39 = extractvalue { i64, i64 } %37, 0
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %41 = extractvalue { i64, i64 } %37, 1
  store i64 %41, i64* %40, align 8
  %42 = call zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"* nonnull %7, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %3) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #20
  br label %43

43:                                               ; preds = %13, %1, %24
  %44 = phi i1 [ %42, %24 ], [ false, %1 ], [ false, %13 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16), i32) unnamed_addr #4 align 2 {
  %4 = alloca %"struct.blink::PhysicalRect", align 8
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %215, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %8 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %9 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %9, i64 13
  %11 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %10, align 8
  %12 = tail call %"class.blink::LayoutObjectChildList"* %11(%"class.blink::LayoutObject"* %7) #20
  %13 = icmp eq %"class.blink::LayoutObjectChildList"* %12, null
  br i1 %13, label %215, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %12, i64 0, i32 0
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = icmp eq %"class.blink::LayoutObject"* %16, null
  br i1 %17, label %215, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.blink::PhysicalRect"* %4 to i8*
  %20 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1, i32 1, i32 0
  %24 = bitcast %"struct.blink::PhysicalRect"* %1 to i8*
  %25 = bitcast %"struct.blink::PhysicalRect"* %4 to i64*
  %26 = add i32 %2, -1
  br label %27

27:                                               ; preds = %18, %209
  %28 = phi %"class.blink::LayoutObject"* [ %16, %18 ], [ %211, %209 ]
  %29 = bitcast %"class.blink::LayoutObject"* %28 to %"class.blink::LayoutBox"*
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 4
  %31 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %30 to i96*
  %32 = load i96, i96* %31, align 4
  %33 = and i96 %32, 67108864
  %34 = icmp eq i96 %33, 0
  br i1 %34, label %209, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 4
  %37 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %36 to i96*
  %38 = load i96, i96* %37, align 4
  %39 = and i96 %38, 4294967296
  %40 = icmp eq i96 %39, 0
  br i1 %40, label %41, label %209

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = and i160 %46, 3802951800684688204490109616128
  %48 = icmp eq i160 %47, 1267650600228229401496703205376
  br i1 %48, label %49, label %209

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %51, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %53, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %55, i64 0, i32 17, i32 0, i32 0
  %57 = load %"class.blink::ShapeValue"*, %"class.blink::ShapeValue"** %56, align 8
  %58 = icmp eq %"class.blink::ShapeValue"* %57, null
  br i1 %58, label %59, label %209

59:                                               ; preds = %49
  %60 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 1, i32 4, i32 0, i64 4
  %61 = bitcast i8* %60 to i64*
  %62 = load i64, i64* %61, align 4
  %63 = trunc i64 %62 to i32
  %64 = icmp ne i32 %63, 0
  %65 = icmp ugt i64 %62, 4294967295
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %209

67:                                               ; preds = %59
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 4 %24, i64 16, i1 false)
  %68 = bitcast %"class.blink::LayoutObject"* %28 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %69 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %68, align 8
  %70 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %69, i64 147
  %71 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %70, align 8
  %72 = call %"class.blink::LayoutBox"* %71(%"class.blink::LayoutBox"* %29) #20
  %73 = icmp eq %"class.blink::LayoutBox"* %72, null
  br i1 %73, label %82, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %72, i64 0, i32 0, i32 0, i32 5, i32 0
  %76 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %76, i64 0, i32 0, i32 9
  %78 = bitcast [20 x i8]* %77 to i160*
  %79 = load i160, i160* %78, align 8
  %80 = and i160 %79, 15211807202738752817960438464512
  %81 = icmp eq i160 %80, 5070602400912917605986812821504
  br i1 %81, label %87, label %82, !prof !2

82:                                               ; preds = %74, %67
  %83 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 1, i32 1, i32 1
  %84 = bitcast i8* %83 to i64*
  %85 = load i64, i64* %84, align 4
  %86 = trunc i64 %85 to i32
  br label %110

87:                                               ; preds = %74
  %88 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %72, i64 0, i32 2, i32 1
  %89 = bitcast %"class.blink::LayoutSize"* %88 to i64*
  %90 = load i64, i64* %89, align 4
  %91 = trunc i64 %90 to i32
  %92 = load i64, i64* %61, align 4
  %93 = trunc i64 %92 to i32
  %94 = icmp sgt i32 %93, -1
  %95 = select i1 %94, i32 -2147483648, i32 2147483647
  %96 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %91, i32 %93) #20
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !2
  %100 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 1, i32 1, i32 1
  %101 = bitcast i8* %100 to i64*
  %102 = load i64, i64* %101, align 4
  %103 = trunc i64 %102 to i32
  %104 = icmp sgt i32 %103, -1
  %105 = select i1 %104, i32 -2147483648, i32 2147483647
  %106 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %99, i32 %103) #20
  %107 = extractvalue { i32, i1 } %106, 1
  %108 = extractvalue { i32, i1 } %106, 0
  %109 = select i1 %107, i32 %105, i32 %108, !prof !2
  br label %110

110:                                              ; preds = %82, %87
  %111 = phi i32 [ %86, %82 ], [ %109, %87 ]
  %112 = phi i64 [ %85, %82 ], [ %102, %87 ]
  %113 = lshr i64 %112, 32
  %114 = trunc i64 %113 to i32
  %115 = call i1 @llvm.is.constant.i32(i32 %111) #20
  br i1 %115, label %116, label %120

116:                                              ; preds = %110
  %117 = sub i32 0, %111
  %118 = icmp eq i32 %117, -2147483648
  %119 = select i1 %118, i32 2147483647, i32 %117
  br label %125

120:                                              ; preds = %110
  %121 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %111) #20
  %122 = extractvalue { i32, i1 } %121, 1
  %123 = extractvalue { i32, i1 } %121, 0
  %124 = select i1 %122, i32 2147483647, i32 %123
  br label %125

125:                                              ; preds = %120, %116
  %126 = phi i32 [ %119, %116 ], [ %124, %120 ]
  %127 = call i1 @llvm.is.constant.i32(i32 %114) #20
  br i1 %127, label %128, label %132

128:                                              ; preds = %125
  %129 = sub i32 0, %114
  %130 = icmp eq i32 %129, -2147483648
  %131 = select i1 %130, i32 2147483647, i32 %129
  br label %137

132:                                              ; preds = %125
  %133 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %114) #20
  %134 = extractvalue { i32, i1 } %133, 1
  %135 = extractvalue { i32, i1 } %133, 0
  %136 = select i1 %134, i32 2147483647, i32 %135
  br label %137

137:                                              ; preds = %128, %132
  %138 = phi i32 [ %131, %128 ], [ %136, %132 ]
  %139 = load i32, i32* %20, align 8
  %140 = icmp slt i32 %126, 0
  %141 = select i1 %140, i32 -2147483648, i32 2147483647
  %142 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %139, i32 %126) #20
  %143 = extractvalue { i32, i1 } %142, 1
  %144 = extractvalue { i32, i1 } %142, 0
  %145 = select i1 %143, i32 %141, i32 %144, !prof !2
  %146 = load i32, i32* %21, align 4
  %147 = icmp slt i32 %138, 0
  %148 = select i1 %147, i32 -2147483648, i32 2147483647
  %149 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %146, i32 %138) #20
  %150 = extractvalue { i32, i1 } %149, 1
  %151 = extractvalue { i32, i1 } %149, 0
  %152 = select i1 %150, i32 %148, i32 %151, !prof !2
  %153 = zext i32 %152 to i64
  %154 = shl nuw i64 %153, 32
  %155 = zext i32 %145 to i64
  %156 = or i64 %154, %155
  store i64 %156, i64* %25, align 8
  %157 = or i32 %152, %145
  %158 = icmp slt i32 %157, 0
  br i1 %158, label %213, label %159

159:                                              ; preds = %137
  %160 = load i32, i32* %23, align 4
  %161 = icmp slt i32 %160, 0
  %162 = select i1 %161, i32 -2147483648, i32 2147483647
  %163 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %152, i32 %160) #20
  %164 = extractvalue { i32, i1 } %163, 1
  %165 = extractvalue { i32, i1 } %163, 0
  %166 = select i1 %164, i32 %162, i32 %165, !prof !2
  %167 = load i64, i64* %61, align 4
  %168 = lshr i64 %167, 32
  %169 = trunc i64 %168 to i32
  %170 = icmp sgt i32 %166, %169
  br i1 %170, label %208, label %171

171:                                              ; preds = %159
  %172 = load i32, i32* %22, align 8
  %173 = icmp slt i32 %172, 0
  %174 = select i1 %173, i32 -2147483648, i32 2147483647
  %175 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %145, i32 %172) #20
  %176 = extractvalue { i32, i1 } %175, 1
  %177 = extractvalue { i32, i1 } %175, 0
  %178 = select i1 %176, i32 %174, i32 %177, !prof !2
  %179 = trunc i64 %167 to i32
  %180 = icmp sgt i32 %178, %179
  br i1 %180, label %208, label %181

181:                                              ; preds = %171
  %182 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_composite_bg_color_animation_enabled_E, align 1, !range !4
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %196, label %184

184:                                              ; preds = %181
  %185 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 5, i32 0
  %186 = bitcast %"class.blink::ComputedStyle"** %185 to %"class.blink::ComputedStyleBase"**
  %187 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %187, i64 0, i32 3, i32 0, i32 0
  %189 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %189, i64 0, i32 3, i32 0, i32 0
  %191 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %190, align 8
  %192 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %191, i64 0, i32 39
  %193 = load i32, i32* %192, align 4
  %194 = and i32 %193, 262144
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %213

196:                                              ; preds = %184, %181
  %197 = bitcast %"class.blink::LayoutObject"* %28 to i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)***
  %198 = load i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)**, i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)*** %197, align 8
  %199 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)*, i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)** %198, i64 135
  %200 = load i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)*, i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)** %199, align 8
  %201 = call zeroext i1 %200(%"class.blink::LayoutBox"* %29, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4) #20
  br i1 %201, label %213, label %202

202:                                              ; preds = %196
  %203 = bitcast %"class.blink::LayoutObject"* %28 to i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)***
  %204 = load i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)**, i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)*** %203, align 8
  %205 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)*, i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)** %204, i64 189
  %206 = load i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)*, i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)** %205, align 8
  %207 = call zeroext i1 %206(%"class.blink::LayoutBox"* %29, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4, i32 %26) #20
  br i1 %207, label %213, label %208

208:                                              ; preds = %202, %171, %159
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #20
  br label %209

209:                                              ; preds = %27, %35, %41, %49, %59, %208
  %210 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 9
  %211 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %210, align 8
  %212 = icmp eq %"class.blink::LayoutObject"* %211, null
  br i1 %212, label %215, label %27

213:                                              ; preds = %184, %202, %196, %137
  %214 = phi i1 [ false, %137 ], [ true, %196 ], [ false, %184 ], [ true, %202 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #20
  br label %215

215:                                              ; preds = %209, %6, %14, %3, %213
  %216 = phi i1 [ %214, %213 ], [ false, %3 ], [ false, %14 ], [ false, %6 ], [ false, %209 ]
  ret i1 %216
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = alloca %"struct.blink::PhysicalRect", align 4
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 8589934592
  %8 = icmp eq i96 %7, 0
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  br i1 %8, label %32, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 132226261520350065983488
  %16 = icmp eq i160 %15, 75557863725914323419136
  br i1 %16, label %91, label %17

17:                                               ; preds = %11
  %18 = lshr i160 %14, 74
  %19 = trunc i160 %18 to i32
  %20 = and i32 %19, 5
  %21 = or i32 %20, 2
  %22 = icmp eq i32 %21, 3
  %23 = and i160 %14, 1057810092162800527867904
  %24 = icmp eq i160 %23, 604462909807314587353088
  %25 = or i1 %24, %22
  br i1 %25, label %91, label %26

26:                                               ; preds = %17
  %27 = lshr i160 %14, 77
  %28 = trunc i160 %27 to i32
  %29 = and i32 %28, 5
  %30 = or i32 %29, 2
  %31 = icmp eq i32 %30, 3
  br i1 %31, label %91, label %32

32:                                               ; preds = %1, %26
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %34 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink29GetCSSPropertyBackgroundColorEv() #20
  %35 = tail call i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"* %10, %"class.blink::CSSProperty"* dereferenceable(24) %34) #20
  %36 = icmp ult i32 %35, 16777216
  br i1 %36, label %37, label %64

37:                                               ; preds = %32
  %38 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_composite_bg_color_animation_enabled_E, align 1, !range !4
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %49, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %42, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %44, i64 0, i32 39
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 262144
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %64

49:                                               ; preds = %40, %37
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 6, i32 0, i32 0
  %51 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %51, i64 0, i32 2, i32 5
  %53 = bitcast [7 x i8]* %52 to i56*
  %54 = load i56, i56* %53, align 8
  %55 = and i56 %54, 281474976710656
  %56 = icmp eq i56 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %51, i64 0, i32 2
  tail call void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"* %58) #20
  %59 = load i56, i56* %53, align 8
  br label %60

60:                                               ; preds = %49, %57
  %61 = phi i56 [ %54, %49 ], [ %59, %57 ]
  %62 = and i56 %61, 8796093022208
  %63 = icmp eq i56 %62, 0
  br i1 %63, label %91, label %64

64:                                               ; preds = %60, %40, %32
  %65 = icmp eq %"class.blink::LayoutBox"* %0, null
  br i1 %65, label %72, label %66

66:                                               ; preds = %64
  %67 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %68 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %67, align 8
  %69 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %68, i64 92
  %70 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %69, align 8
  %71 = tail call zeroext i1 %70(%"class.blink::LayoutObject"* %3, i32 55) #20
  br i1 %71, label %91, label %72

72:                                               ; preds = %64, %66
  %73 = bitcast %"class.blink::ComputedStyle"** %33 to %"class.blink::ComputedStyleBase"**
  %74 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %74, i64 0, i32 3, i32 0, i32 0
  %76 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %76, i64 0, i32 5, i32 0
  %78 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %77, align 8
  %79 = icmp eq %"class.blink::ShadowList"* %78, null
  br i1 %79, label %80, label %91

80:                                               ; preds = %72
  %81 = bitcast %"struct.blink::PhysicalRect"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %81, i8 0, i64 16, i1 false) #20
  %82 = call zeroext i1 @_ZNK5blink9LayoutBox26GetBackgroundPaintedExtentERNS_12PhysicalRectE(%"class.blink::LayoutBox"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %2)
  br i1 %82, label %83, label %89

83:                                               ; preds = %80
  %84 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)***
  %85 = load i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)**, i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)*** %84, align 8
  %86 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)*, i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)** %85, i64 189
  %87 = load i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)*, i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)** %86, align 8
  %88 = call zeroext i1 %87(%"class.blink::LayoutBox"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %2, i32 4) #20
  br label %89

89:                                               ; preds = %80, %83
  %90 = phi i1 [ %88, %83 ], [ false, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #20
  br label %91

91:                                               ; preds = %60, %11, %17, %72, %66, %26, %89
  %92 = phi i1 [ %90, %89 ], [ false, %26 ], [ false, %60 ], [ false, %66 ], [ false, %72 ], [ false, %17 ], [ false, %11 ]
  ret i1 %92
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #4 align 2 {
  %4 = alloca %"class.blink::BoxPainter", align 8
  %5 = bitcast %"class.blink::BoxPainter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.blink::BoxPainter", %"class.blink::BoxPainter"* %4, i64 0, i32 0
  store %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBox"** %6, align 8
  call void @_ZN5blink10BoxPainter9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::BoxPainter"* nonnull %4, %"struct.blink::PaintInfo"* %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #20
  ret void
}

declare void @_ZN5blink10BoxPainter9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::BoxPainter"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutBox"*, i8* readnone, i32) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = bitcast %"class.blink::ComputedStyle"** %5 to %"class.blink::ComputedStyleBase"**
  %7 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %7, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %11, i64 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %13, i64 0, i32 15, i32 0
  %15 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %14, align 8
  %16 = icmp eq %"class.blink::StyleReflection"* %15, null
  br i1 %16, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %19 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %20, align 8
  %22 = icmp eq %"class.blink::StyleImage"* %21, null
  br i1 %22, label %49, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.blink::StyleImage"* %21 to i8* (%"class.blink::StyleImage"*)***
  %25 = load i8* (%"class.blink::StyleImage"*)**, i8* (%"class.blink::StyleImage"*)*** %24, align 8
  %26 = getelementptr inbounds i8* (%"class.blink::StyleImage"*)*, i8* (%"class.blink::StyleImage"*)** %25, i64 12
  %27 = load i8* (%"class.blink::StyleImage"*)*, i8* (%"class.blink::StyleImage"*)** %26, align 8
  %28 = tail call i8* %27(%"class.blink::StyleImage"* nonnull %21) #20
  %29 = icmp eq i8* %28, %1
  br i1 %29, label %30, label %49

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %32 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %31 to i96*
  %33 = load i96, i96* %32, align 4
  %34 = and i96 %33, 4294967296
  %35 = icmp eq i96 %34, 0
  br i1 %35, label %49, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %38 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %37, align 8
  %39 = icmp eq %"struct.blink::FragmentData::RareData"* %38, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %41, align 8
  br label %43

43:                                               ; preds = %36, %40
  %44 = phi %"class.blink::PaintLayer"* [ %42, %40 ], [ null, %36 ]
  %45 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %44, i64 0, i32 1
  %46 = bitcast [6 x i8]* %45 to i48*
  %47 = load i48, i48* %46, align 1
  %48 = or i48 %47, 67108864
  store i48 %48, i48* %46, align 1
  tail call void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"* %4) #20
  br label %49

49:                                               ; preds = %30, %3, %17, %43, %23
  %50 = phi i1 [ true, %43 ], [ true, %30 ], [ false, %23 ], [ false, %17 ], [ false, %3 ]
  %51 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %6, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %51, i64 0, i32 7, i32 0, i32 0
  %53 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %53, i64 0, i32 2, i32 0, i32 0, i32 0
  %55 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %55, i64 0, i32 2, i32 0, i32 0
  %57 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %56, align 8
  %58 = icmp eq %"class.blink::StyleImage"* %57, null
  %59 = bitcast %"class.blink::ComputedStyleBase"* %51 to %"class.blink::ComputedStyle"*
  br i1 %58, label %69, label %60

60:                                               ; preds = %49
  %61 = bitcast %"class.blink::StyleImage"* %57 to i8* (%"class.blink::StyleImage"*)***
  %62 = load i8* (%"class.blink::StyleImage"*)**, i8* (%"class.blink::StyleImage"*)*** %61, align 8
  %63 = getelementptr inbounds i8* (%"class.blink::StyleImage"*)*, i8* (%"class.blink::StyleImage"*)** %62, i64 12
  %64 = load i8* (%"class.blink::StyleImage"*)*, i8* (%"class.blink::StyleImage"*)** %63, align 8
  %65 = tail call i8* %64(%"class.blink::StyleImage"* nonnull %57) #20
  %66 = icmp eq i8* %65, %1
  br i1 %66, label %91, label %67

67:                                               ; preds = %60
  %68 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  br label %69

69:                                               ; preds = %67, %49
  %70 = phi %"class.blink::ComputedStyle"* [ %68, %67 ], [ %59, %49 ]
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 3, i32 0, i32 0
  %72 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %72, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %74, i64 0, i32 14, i32 0, i32 0, i32 0
  %76 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %76, i64 0, i32 2, i32 0, i32 0
  %78 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %77, align 8
  %79 = icmp eq %"class.blink::StyleImage"* %78, null
  br i1 %79, label %90, label %80

80:                                               ; preds = %69
  %81 = bitcast %"class.blink::StyleImage"* %78 to i8* (%"class.blink::StyleImage"*)***
  %82 = load i8* (%"class.blink::StyleImage"*)**, i8* (%"class.blink::StyleImage"*)*** %81, align 8
  %83 = getelementptr inbounds i8* (%"class.blink::StyleImage"*)*, i8* (%"class.blink::StyleImage"*)** %82, i64 12
  %84 = load i8* (%"class.blink::StyleImage"*)*, i8* (%"class.blink::StyleImage"*)** %83, align 8
  %85 = tail call i8* %84(%"class.blink::StyleImage"* nonnull %78) #20
  %86 = icmp eq i8* %85, %1
  %87 = or i1 %50, %86
  br i1 %87, label %91, label %88

88:                                               ; preds = %80
  %89 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  br label %92

90:                                               ; preds = %69
  br i1 %50, label %91, label %92

91:                                               ; preds = %80, %90, %60
  tail call void @_ZN5blink12LayoutObject61SetShouldDoFullPaintInvalidationWithoutGeometryChangeInternalENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %4, i8 zeroext 19) #20
  br label %117

92:                                               ; preds = %88, %90
  %93 = phi %"class.blink::ComputedStyle"* [ %89, %88 ], [ %70, %90 ]
  %94 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %93, i64 0, i32 0, i32 3, i32 0, i32 0
  %95 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %97, i64 0, i32 13
  %99 = icmp eq %"class.blink::FillLayer"* %98, null
  br i1 %99, label %117, label %100

100:                                              ; preds = %92, %113
  %101 = phi %"class.blink::FillLayer"* [ %115, %113 ], [ %98, %92 ]
  %102 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %101, i64 0, i32 1, i32 0, i32 0
  %103 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %102, align 8
  %104 = icmp eq %"class.blink::StyleImage"* %103, null
  br i1 %104, label %113, label %105

105:                                              ; preds = %100
  %106 = bitcast %"class.blink::StyleImage"* %103 to i8* (%"class.blink::StyleImage"*)***
  %107 = load i8* (%"class.blink::StyleImage"*)**, i8* (%"class.blink::StyleImage"*)*** %106, align 8
  %108 = getelementptr inbounds i8* (%"class.blink::StyleImage"*)*, i8* (%"class.blink::StyleImage"*)** %107, i64 12
  %109 = load i8* (%"class.blink::StyleImage"*)*, i8* (%"class.blink::StyleImage"*)** %108, align 8
  %110 = tail call i8* %109(%"class.blink::StyleImage"* nonnull %103) #20
  %111 = icmp eq i8* %110, %1
  br i1 %111, label %112, label %113

112:                                              ; preds = %105
  tail call void @_ZN5blink12LayoutObject61SetShouldDoFullPaintInvalidationWithoutGeometryChangeInternalENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %4, i8 zeroext 19) #20
  br label %117

113:                                              ; preds = %100, %105
  %114 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %101, i64 0, i32 0
  %115 = load %"class.blink::FillLayer"*, %"class.blink::FillLayer"** %114, align 8
  %116 = icmp eq %"class.blink::FillLayer"* %115, null
  br i1 %116, label %117, label %100

117:                                              ; preds = %113, %92, %112, %91
  %118 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %119 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject25BackgroundTransfersToViewEPKNS_13ComputedStyleE(%"class.blink::LayoutBoxModelObject"* %118, %"class.blink::ComputedStyle"* null) #20
  br i1 %119, label %182, label %120

120:                                              ; preds = %117
  %121 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %122 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %121, i64 0, i32 0, i32 6, i32 0, i32 0
  %123 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %123, i64 0, i32 2
  %125 = icmp eq %"class.blink::FillLayer"* %124, null
  br i1 %125, label %182, label %126

126:                                              ; preds = %120, %178
  %127 = phi %"class.blink::FillLayer"* [ %180, %178 ], [ %124, %120 ]
  %128 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %127, i64 0, i32 1, i32 0, i32 0
  %129 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %128, align 8
  %130 = icmp eq %"class.blink::StyleImage"* %129, null
  br i1 %130, label %178, label %131

131:                                              ; preds = %126
  %132 = bitcast %"class.blink::StyleImage"* %129 to i8* (%"class.blink::StyleImage"*)***
  %133 = load i8* (%"class.blink::StyleImage"*)**, i8* (%"class.blink::StyleImage"*)*** %132, align 8
  %134 = getelementptr inbounds i8* (%"class.blink::StyleImage"*)*, i8* (%"class.blink::StyleImage"*)** %133, i64 12
  %135 = load i8* (%"class.blink::StyleImage"*)*, i8* (%"class.blink::StyleImage"*)** %134, align 8
  %136 = tail call i8* %135(%"class.blink::StyleImage"* nonnull %129) #20
  %137 = icmp eq i8* %136, %1
  br i1 %137, label %138, label %178

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %127, i64 0, i32 1, i32 0, i32 0
  %140 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %139, align 8
  %141 = bitcast %"class.blink::StyleImage"* %140 to %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)***
  %142 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)**, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*** %141, align 8
  %143 = getelementptr inbounds %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %142, i64 15
  %144 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %143, align 8
  %145 = tail call %"class.blink::ImageResourceContent"* %144(%"class.blink::StyleImage"* %140) #20
  %146 = icmp eq %"class.blink::ImageResourceContent"* %145, null
  br i1 %146, label %173, label %147

147:                                              ; preds = %138
  %148 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %139, align 8
  %149 = bitcast %"class.blink::StyleImage"* %148 to %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)***
  %150 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)**, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*** %149, align 8
  %151 = getelementptr inbounds %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %150, i64 15
  %152 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %151, align 8
  %153 = tail call %"class.blink::ImageResourceContent"* %152(%"class.blink::StyleImage"* %148) #20
  %154 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* %153) #20
  %155 = icmp eq %"class.blink::Image"* %154, null
  br i1 %155, label %173, label %156

156:                                              ; preds = %147
  %157 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %139, align 8
  %158 = bitcast %"class.blink::StyleImage"* %157 to %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)***
  %159 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)**, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*** %158, align 8
  %160 = getelementptr inbounds %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %159, i64 15
  %161 = load %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)*, %"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)** %160, align 8
  %162 = tail call %"class.blink::ImageResourceContent"* %161(%"class.blink::StyleImage"* %157) #20
  %163 = tail call %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"* %162) #20
  %164 = bitcast %"class.blink::Image"* %163 to i1 (%"class.blink::Image"*)***
  %165 = load i1 (%"class.blink::Image"*)**, i1 (%"class.blink::Image"*)*** %164, align 8
  %166 = getelementptr inbounds i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %165, i64 25
  %167 = load i1 (%"class.blink::Image"*)*, i1 (%"class.blink::Image"*)** %166, align 8
  %168 = tail call zeroext i1 %167(%"class.blink::Image"* %163) #20
  %169 = icmp ne i32 %2, 0
  %170 = xor i1 %168, true
  %171 = or i1 %169, %170
  br i1 %171, label %173, label %172

172:                                              ; preds = %156
  tail call void @_ZN5blink12LayoutObject50SetMayNeedPaintInvalidationAnimatedBackgroundImageEv(%"class.blink::LayoutObject"* %4) #20
  br label %182

173:                                              ; preds = %138, %147, %156
  tail call void @_ZN5blink12LayoutObject61SetShouldDoFullPaintInvalidationWithoutGeometryChangeInternalENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %4, i8 zeroext 16) #20
  %174 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %175 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %174 to i96*
  %176 = load i96, i96* %175, align 4
  %177 = or i96 %176, 4503599627370496
  store i96 %177, i96* %175, align 4
  br label %182

178:                                              ; preds = %126, %131
  %179 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %127, i64 0, i32 0
  %180 = load %"class.blink::FillLayer"*, %"class.blink::FillLayer"** %179, align 8
  %181 = icmp eq %"class.blink::FillLayer"* %180, null
  br i1 %181, label %182, label %126

182:                                              ; preds = %178, %120, %173, %172, %117
  %183 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %184 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %183, i64 0, i32 0, i32 3, i32 0, i32 0
  %185 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %184, align 8
  %186 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %185, i64 0, i32 2, i32 0, i32 0
  %187 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %186, align 8
  %188 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %187, i64 0, i32 2, i32 0, i32 0
  %189 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %189, i64 0, i32 17, i32 0, i32 0
  %191 = load %"class.blink::ShapeValue"*, %"class.blink::ShapeValue"** %190, align 8
  %192 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %193 = load %"class.blink::Node"*, %"class.blink::Node"** %192, align 8
  %194 = icmp eq %"class.blink::Node"* %193, null
  br i1 %194, label %195, label %202

195:                                              ; preds = %182, %195
  %196 = phi %"class.blink::LayoutObject"* [ %198, %195 ], [ %4, %182 ]
  %197 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %196, i64 0, i32 7
  %198 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %198, i64 0, i32 6, i32 0, i32 0
  %200 = load %"class.blink::Node"*, %"class.blink::Node"** %199, align 8
  %201 = icmp eq %"class.blink::Node"* %200, null
  br i1 %201, label %195, label %202

202:                                              ; preds = %195, %182
  %203 = phi %"class.blink::Node"* [ %193, %182 ], [ %200, %195 ]
  %204 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %203, i64 0, i32 3, i32 0, i32 0
  %205 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %204, align 8
  %206 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %205, i64 0, i32 2, i32 0, i32 0
  %207 = load %"class.blink::Document"*, %"class.blink::Document"** %206, align 8
  %208 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %207) #20
  %209 = tail call zeroext i1 @_ZNK5blink14LocalFrameView17IsInPerformLayoutEv(%"class.blink::LocalFrameView"* %208) #20
  br i1 %209, label %248, label %210

210:                                              ; preds = %202
  %211 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %212 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %211 to i96*
  %213 = load i96, i96* %212, align 4
  %214 = and i96 %213, 8388608
  %215 = icmp ne i96 %214, 0
  %216 = icmp ne %"class.blink::ShapeValue"* %191, null
  %217 = and i1 %216, %215
  br i1 %217, label %218, label %248

218:                                              ; preds = %210
  %219 = getelementptr inbounds %"class.blink::ShapeValue", %"class.blink::ShapeValue"* %191, i64 0, i32 4, i32 0, i32 0
  %220 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %219, align 8
  %221 = icmp eq %"class.blink::StyleImage"* %220, null
  br i1 %221, label %248, label %222

222:                                              ; preds = %218
  %223 = bitcast %"class.blink::StyleImage"* %220 to i8* (%"class.blink::StyleImage"*)***
  %224 = load i8* (%"class.blink::StyleImage"*)**, i8* (%"class.blink::StyleImage"*)*** %223, align 8
  %225 = getelementptr inbounds i8* (%"class.blink::StyleImage"*)*, i8* (%"class.blink::StyleImage"*)** %224, i64 12
  %226 = load i8* (%"class.blink::StyleImage"*)*, i8* (%"class.blink::StyleImage"*)** %225, align 8
  %227 = tail call i8* %226(%"class.blink::StyleImage"* nonnull %220) #20
  %228 = icmp eq i8* %227, %1
  br i1 %228, label %229, label %248

229:                                              ; preds = %222
  %230 = tail call dereferenceable(56) %"class.blink::ShapeOutsideInfo"* @_ZN5blink16ShapeOutsideInfo10EnsureInfoERKNS_9LayoutBoxE(%"class.blink::LayoutBox"* dereferenceable(216) %0)
  %231 = getelementptr inbounds %"class.blink::ShapeOutsideInfo", %"class.blink::ShapeOutsideInfo"* %230, i64 0, i32 5
  %232 = load i8, i8* %231, align 8, !range !4
  %233 = icmp eq i8 %232, 0
  br i1 %233, label %234, label %248

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.blink::ShapeOutsideInfo", %"class.blink::ShapeOutsideInfo"* %230, i64 0, i32 1, i32 0, i32 0, i32 0
  %236 = load %"class.blink::Shape"*, %"class.blink::Shape"** %235, align 8
  store %"class.blink::Shape"* null, %"class.blink::Shape"** %235, align 8
  %237 = icmp eq %"class.blink::Shape"* %236, null
  br i1 %237, label %243, label %238

238:                                              ; preds = %234
  %239 = bitcast %"class.blink::Shape"* %236 to void (%"class.blink::Shape"*)***
  %240 = load void (%"class.blink::Shape"*)**, void (%"class.blink::Shape"*)*** %239, align 8
  %241 = getelementptr inbounds void (%"class.blink::Shape"*)*, void (%"class.blink::Shape"*)** %240, i64 1
  %242 = load void (%"class.blink::Shape"*)*, void (%"class.blink::Shape"*)** %241, align 8
  tail call void %242(%"class.blink::Shape"* nonnull %236) #20
  br label %243

243:                                              ; preds = %234, %238
  %244 = load i96, i96* %212, align 4
  %245 = and i96 %244, 8388608
  %246 = icmp eq i96 %245, 0
  br i1 %246, label %248, label %247

247:                                              ; preds = %243
  tail call void @_ZN5blink9LayoutBox45RemoveFloatingOrPositionedChildFromBlockListsEv(%"class.blink::LayoutBox"* %0) #20
  br label %248

248:                                              ; preds = %229, %247, %243, %218, %222, %210, %202
  ret void
}

declare %"class.blink::Image"* @_ZNK5blink20ImageResourceContent8GetImageEv(%"class.blink::ImageResourceContent"*) local_unnamed_addr #5

declare void @_ZN5blink12LayoutObject50SetMayNeedPaintInvalidationAnimatedBackgroundImageEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink14LocalFrameView17IsInPerformLayoutEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv(%"class.blink::LayoutBox"*) unnamed_addr #9 align 2 {
  %2 = alloca <2 x float>, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %7 = alloca %"struct.blink::PhysicalRect", align 4
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #20
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %11 = bitcast %"class.blink::LayoutBox"* %0 to { i64, i64 } (%"class.blink::LayoutObject"*)***
  %12 = load { i64, i64 } (%"class.blink::LayoutObject"*)**, { i64, i64 } (%"class.blink::LayoutObject"*)*** %11, align 8
  %13 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutObject"*)*, { i64, i64 } (%"class.blink::LayoutObject"*)** %12, i64 85
  %14 = load { i64, i64 } (%"class.blink::LayoutObject"*)*, { i64, i64 } (%"class.blink::LayoutObject"*)** %13, align 8
  %15 = tail call { i64, i64 } %14(%"class.blink::LayoutObject"* %8) #20
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %17 = extractvalue { i64, i64 } %15, 0
  store i64 %17, i64* %16, align 8
  %18 = extractvalue { i64, i64 } %15, 1
  store i64 %18, i64* %10, align 8
  %19 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #20
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %21 = bitcast i64* %20 to i32*
  %22 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 1, i32 1, i32 0
  %23 = tail call { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv(%"class.blink::LayoutBox"* %0)
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %25 = extractvalue { i64, i64 } %23, 0
  %26 = extractvalue { i64, i64 } %23, 1
  store i64 %26, i64* %20, align 8
  %27 = bitcast <2 x float>* %2 to %"class.blink::FloatPoint"*
  %28 = bitcast <2 x float>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #20
  store <2 x float> zeroinitializer, <2 x float>* %2, align 8
  %29 = call <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"* %8, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %27, %"class.blink::LayoutBoxModelObject"* null, i32 4) #20
  %30 = extractelement <2 x float> %29, i32 0
  %31 = fmul float %30, 6.400000e+01
  %32 = call float @llvm.round.f32(float %31) #20
  %33 = fcmp ult float %32, 0xC1E0000000000000
  %34 = fcmp ugt float %32, 0x41DFFFFFE0000000
  %35 = fcmp ogt float %32, 0xC1E0000000000000
  %36 = select i1 %35, float %32, float 0xC1E0000000000000
  %37 = fptosi float %36 to i32
  %38 = select i1 %33, i32 0, i32 2147483647
  %39 = select i1 %34, i32 %38, i32 %37
  %40 = extractelement <2 x float> %29, i32 1
  %41 = fmul float %40, 6.400000e+01
  %42 = call float @llvm.round.f32(float %41) #20
  %43 = fcmp ult float %42, 0xC1E0000000000000
  %44 = fcmp ugt float %42, 0x41DFFFFFE0000000
  %45 = fcmp ogt float %42, 0xC1E0000000000000
  %46 = select i1 %45, float %42, float 0xC1E0000000000000
  %47 = fptosi float %46 to i32
  %48 = select i1 %43, i32 0, i32 2147483647
  %49 = select i1 %44, i32 %48, i32 %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #20
  %50 = trunc i64 %25 to i32
  %51 = icmp slt i32 %39, 0
  %52 = select i1 %51, i32 -2147483648, i32 2147483647
  %53 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %50, i32 %39) #20
  %54 = extractvalue { i32, i1 } %53, 1
  %55 = extractvalue { i32, i1 } %53, 0
  %56 = select i1 %54, i32 %52, i32 %55, !prof !2
  %57 = lshr i64 %25, 32
  %58 = trunc i64 %57 to i32
  %59 = icmp slt i32 %49, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %58, i32 %49) #20
  %62 = extractvalue { i32, i1 } %61, 1
  %63 = extractvalue { i32, i1 } %61, 0
  %64 = select i1 %62, i32 %60, i32 %63, !prof !2
  %65 = zext i32 %64 to i64
  %66 = shl nuw i64 %65, 32
  %67 = zext i32 %56 to i64
  %68 = or i64 %66, %67
  store i64 %68, i64* %24, align 8
  %69 = trunc i64 %26 to i32
  %70 = icmp eq i32 %69, 0
  %71 = icmp ult i64 %26, 4294967296
  %72 = or i1 %70, %71
  br i1 %72, label %75, label %73

73:                                               ; preds = %1
  %74 = call zeroext i1 @_ZNK5blink12PhysicalRect10IntersectsERKS0_(%"struct.blink::PhysicalRect"* nonnull %4, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #20
  br label %77

75:                                               ; preds = %1
  %76 = call zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"* nonnull %4, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #20
  br label %77

77:                                               ; preds = %75, %73
  %78 = phi i1 [ %76, %75 ], [ %74, %73 ]
  %79 = bitcast %"struct.blink::PhysicalRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #20
  %80 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %79, i8 0, i64 16, i1 false) #20
  %81 = load i32, i32* %21, align 8
  %82 = icmp eq i32 %81, 0
  %83 = load i32, i32* %22, align 4
  %84 = icmp eq i32 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %114, label %86

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 1, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %79, i8* nonnull align 8 %9, i64 16, i1 false)
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %7, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6) #20
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %114, label %90

90:                                               ; preds = %86
  %91 = load i32, i32* %80, align 4
  %92 = icmp eq i32 %91, 0
  %93 = xor i1 %78, true
  %94 = or i1 %92, %93
  br i1 %94, label %114, label %95

95:                                               ; preds = %90
  %96 = sext i32 %88 to i64
  %97 = sext i32 %91 to i64
  %98 = mul nsw i64 %97, %96
  %99 = sdiv i64 %98, 64
  %100 = ashr i64 %99, 32
  %101 = trunc i64 %100 to i32
  %102 = trunc i64 %99 to i32
  %103 = ashr i32 %102, 31
  %104 = icmp eq i32 %103, %101
  br i1 %104, label %109, label %105

105:                                              ; preds = %95
  %106 = xor i32 %91, %88
  %107 = lshr i32 %106, 31
  %108 = add nuw i32 %107, 2147483647
  br label %109

109:                                              ; preds = %95, %105
  %110 = phi i32 [ %102, %95 ], [ %108, %105 ]
  %111 = sdiv i32 %110, 64
  %112 = zext i32 %111 to i64
  %113 = shl nuw i64 %112, 32
  br label %114

114:                                              ; preds = %77, %86, %90, %109
  %115 = phi i64 [ 0, %90 ], [ %113, %109 ], [ 0, %86 ], [ 0, %77 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #20
  %116 = zext i1 %78 to i64
  %117 = or i64 %115, %116
  ret i64 %117
}

declare zeroext i1 @_ZNK5blink12PhysicalRect10IntersectsERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 63
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %8) #20
  br label %9

9:                                                ; preds = %1, %7
  ret void
}

declare void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 63
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %2) #20
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 15211807202738752817960438464512
  %16 = icmp eq i160 %15, 5070602400912917605986812821504
  br i1 %16, label %17, label %23

17:                                               ; preds = %9
  %18 = load i96, i96* %4, align 4
  %19 = and i96 %18, 17592186044416
  %20 = icmp eq i96 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  tail call void @_ZN5blink12LayoutObject39SetSubtreeShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %2, i8 zeroext 14) #20
  br label %23

22:                                               ; preds = %17
  tail call void @_ZN5blink12LayoutObject41SetSubtreeShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %2) #20
  br label %23

23:                                               ; preds = %21, %22, %9
  ret void
}

declare void @_ZN5blink12LayoutObject39SetSubtreeShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #5

declare void @_ZN5blink12LayoutObject41SetSubtreeShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox25IntersectsVisibleViewportEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"struct.blink::PhysicalRect"*
  %4 = alloca %"struct.blink::PhysicalRect", align 4
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %6 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #20
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %8 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #20
  %10 = extractvalue { i64, i64 } %9, 0
  %11 = trunc i64 %10 to i32
  %12 = and i64 %10, -4294967296
  %13 = extractvalue { i64, i64 } %9, 1
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = and i160 %18, 15211807202738752817960438464512
  %20 = icmp eq i160 %19, 5070602400912917605986812821504
  br i1 %20, label %21, label %28, !prof !2

21:                                               ; preds = %1
  %22 = trunc i64 %13 to i32
  %23 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %24 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %24, i64 106
  %26 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %25, align 8
  %27 = tail call i32 %26(%"class.blink::LayoutObject"* %5, i32 %11, i32 %22, %"class.blink::LayoutBox"* null) #20
  br label %28

28:                                               ; preds = %1, %21
  %29 = phi i32 [ %27, %21 ], [ %11, %1 ]
  %30 = zext i32 %29 to i64
  %31 = or i64 %12, %30
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 %31, i64* %32, align 8
  store i64 %13, i64* %7, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %33, align 8
  %35 = icmp eq %"class.blink::Node"* %34, null
  br i1 %35, label %36, label %43

36:                                               ; preds = %28, %36
  %37 = phi %"class.blink::LayoutObject"* [ %39, %36 ], [ %5, %28 ]
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 7
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %39, i64 0, i32 6, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %36, label %43

43:                                               ; preds = %36, %28
  %44 = phi %"class.blink::Node"* [ %34, %28 ], [ %41, %36 ]
  br label %45

45:                                               ; preds = %96, %43
  %46 = phi %"class.blink::Node"* [ %44, %43 ], [ %97, %96 ]
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %46, i64 0, i32 3, i32 0, i32 0
  %48 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %48, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::Document"*, %"class.blink::Document"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %50, i64 0, i32 113
  %52 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %56 = icmp eq %"class.blink::Node"* %55, null
  br i1 %56, label %57, label %64

57:                                               ; preds = %45, %57
  %58 = phi %"class.blink::LayoutObject"* [ %60, %57 ], [ %53, %45 ]
  %59 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 0, i32 7
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 6, i32 0, i32 0
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** %61, align 8
  %63 = icmp eq %"class.blink::Node"* %62, null
  br i1 %63, label %57, label %64

64:                                               ; preds = %57, %45
  %65 = phi %"class.blink::Node"* [ %55, %45 ], [ %62, %57 ]
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %65, i64 0, i32 3, i32 0, i32 0
  %67 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %67, i64 0, i32 2, i32 0, i32 0
  %69 = load %"class.blink::Document"*, %"class.blink::Document"** %68, align 8
  %70 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %69) #20
  %71 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %70, i64 0, i32 0
  %72 = tail call %"class.blink::LayoutEmbeddedContent"* @_ZNK5blink5Frame17OwnerLayoutObjectEv(%"class.blink::Frame"* %71) #20
  %73 = icmp eq %"class.blink::LayoutEmbeddedContent"* %72, null
  br i1 %73, label %107, label %74

74:                                               ; preds = %64
  %75 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %77, label %84

77:                                               ; preds = %74, %77
  %78 = phi %"class.blink::LayoutObject"* [ %80, %77 ], [ %53, %74 ]
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %78, i64 0, i32 7
  %80 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %80, i64 0, i32 6, i32 0, i32 0
  %82 = load %"class.blink::Node"*, %"class.blink::Node"** %81, align 8
  %83 = icmp eq %"class.blink::Node"* %82, null
  br i1 %83, label %77, label %84

84:                                               ; preds = %77, %74
  %85 = phi %"class.blink::Node"* [ %75, %74 ], [ %82, %77 ]
  %86 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %85, i64 0, i32 3, i32 0, i32 0
  %87 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %87, i64 0, i32 2, i32 0, i32 0
  %89 = load %"class.blink::Document"*, %"class.blink::Document"** %88, align 8
  %90 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %89) #20
  %91 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %90, i64 0, i32 0
  %92 = tail call %"class.blink::LayoutEmbeddedContent"* @_ZNK5blink5Frame17OwnerLayoutObjectEv(%"class.blink::Frame"* %91) #20
  %93 = getelementptr inbounds %"class.blink::LayoutEmbeddedContent", %"class.blink::LayoutEmbeddedContent"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %94 = load %"class.blink::Node"*, %"class.blink::Node"** %93, align 8
  %95 = icmp eq %"class.blink::Node"* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %100, %84
  %97 = phi %"class.blink::Node"* [ %94, %84 ], [ %105, %100 ]
  br label %45

98:                                               ; preds = %84
  %99 = getelementptr inbounds %"class.blink::LayoutEmbeddedContent", %"class.blink::LayoutEmbeddedContent"* %92, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %100

100:                                              ; preds = %98, %100
  %101 = phi %"class.blink::LayoutObject"* [ %103, %100 ], [ %99, %98 ]
  %102 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %101, i64 0, i32 7
  %103 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %103, i64 0, i32 6, i32 0, i32 0
  %105 = load %"class.blink::Node"*, %"class.blink::Node"** %104, align 8
  %106 = icmp eq %"class.blink::Node"* %105, null
  br i1 %106, label %100, label %96

107:                                              ; preds = %64
  %108 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = call zeroext i1 @_ZNK5blink12LayoutObject30MapToVisualRectInAncestorSpaceEPKNS_20LayoutBoxModelObjectERNS_12PhysicalRectENS_15VisualRectFlagsE(%"class.blink::LayoutObject"* %5, %"class.blink::LayoutBoxModelObject"* %108, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %3, i32 0) #20
  %110 = bitcast %"struct.blink::PhysicalRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #20
  %111 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %52, i64 0, i32 1, i32 0, i32 0
  %112 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %111, align 8
  %113 = call %"class.blink::ScrollableArea"* @_ZN5blink14LocalFrameView17GetScrollableAreaEv(%"class.blink::LocalFrameView"* %112) #20
  %114 = bitcast %"class.blink::ScrollableArea"* %113 to { i64, i64 } (%"class.blink::ScrollableArea"*, i32)***
  %115 = load { i64, i64 } (%"class.blink::ScrollableArea"*, i32)**, { i64, i64 } (%"class.blink::ScrollableArea"*, i32)*** %114, align 8
  %116 = getelementptr inbounds { i64, i64 } (%"class.blink::ScrollableArea"*, i32)*, { i64, i64 } (%"class.blink::ScrollableArea"*, i32)** %115, i64 52
  %117 = load { i64, i64 } (%"class.blink::ScrollableArea"*, i32)*, { i64, i64 } (%"class.blink::ScrollableArea"*, i32)** %116, align 8
  %118 = call { i64, i64 } %117(%"class.blink::ScrollableArea"* %113, i32 0) #20
  %119 = extractvalue { i64, i64 } %118, 0
  %120 = extractvalue { i64, i64 } %118, 1
  %121 = trunc i64 %119 to i32
  %122 = lshr i64 %119, 32
  %123 = trunc i64 %122 to i32
  %124 = icmp sgt i32 %121, 33554431
  br i1 %124, label %129, label %125

125:                                              ; preds = %107
  %126 = icmp slt i32 %121, -33554432
  %127 = shl i32 %121, 6
  %128 = select i1 %126, i32 -2147483648, i32 %127
  br label %129

129:                                              ; preds = %125, %107
  %130 = phi i32 [ 2147483647, %107 ], [ %128, %125 ]
  %131 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 %130, i32* %131, align 4
  %132 = icmp sgt i32 %123, 33554431
  br i1 %132, label %138, label %133

133:                                              ; preds = %129
  %134 = icmp slt i32 %123, -33554432
  br i1 %134, label %138, label %135

135:                                              ; preds = %133
  %136 = shl nuw nsw i64 %122, 6
  %137 = trunc i64 %136 to i32
  br label %138

138:                                              ; preds = %133, %129, %135
  %139 = phi i32 [ %137, %135 ], [ 2147483647, %129 ], [ -2147483648, %133 ]
  %140 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 0, i32 1, i32 0
  store i32 %139, i32* %140, align 4
  %141 = trunc i64 %120 to i32
  %142 = lshr i64 %120, 32
  %143 = trunc i64 %142 to i32
  %144 = icmp sgt i32 %141, 33554431
  br i1 %144, label %149, label %145

145:                                              ; preds = %138
  %146 = icmp slt i32 %141, -33554432
  %147 = shl i32 %141, 6
  %148 = select i1 %146, i32 -2147483648, i32 %147
  br label %149

149:                                              ; preds = %145, %138
  %150 = phi i32 [ 2147483647, %138 ], [ %148, %145 ]
  %151 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1, i32 0, i32 0
  store i32 %150, i32* %151, align 4
  %152 = icmp sgt i32 %143, 33554431
  br i1 %152, label %158, label %153

153:                                              ; preds = %149
  %154 = icmp slt i32 %143, -33554432
  br i1 %154, label %158, label %155

155:                                              ; preds = %153
  %156 = shl nuw nsw i64 %142, 6
  %157 = trunc i64 %156 to i32
  br label %158

158:                                              ; preds = %153, %149, %155
  %159 = phi i32 [ %157, %155 ], [ 2147483647, %149 ], [ -2147483648, %153 ]
  %160 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1, i32 1, i32 0
  store i32 %159, i32* %160, align 4
  %161 = call zeroext i1 @_ZNK5blink12PhysicalRect10IntersectsERKS0_(%"struct.blink::PhysicalRect"* nonnull %3, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #20
  ret i1 %161
}

declare %"class.blink::LayoutEmbeddedContent"* @_ZNK5blink5Frame17OwnerLayoutObjectEv(%"class.blink::Frame"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink12LayoutObject30MapToVisualRectInAncestorSpaceEPKNS_20LayoutBoxModelObjectERNS_12PhysicalRectENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"struct.blink::PhysicalRect"* dereferenceable(16), i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutObject"* %2) #20
  %3 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %4 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %4, i64 190
  %6 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::LayoutBox"* %0) #20
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 140737488355328
  %12 = icmp ne i96 %11, 0
  %13 = xor i1 %7, %12
  br i1 %13, label %14, label %21

14:                                               ; preds = %1
  %15 = zext i1 %7 to i96
  %16 = shl nuw nsw i96 %15, 47
  %17 = and i96 %10, -140737488355329
  %18 = or i96 %17, %16
  store i96 %18, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject61SetShouldDoFullPaintInvalidationWithoutGeometryChangeInternalENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %2, i8 zeroext 16) #20
  %19 = load i96, i96* %9, align 4
  %20 = or i96 %19, 4503599627370496
  store i96 %20, i96* %9, align 4
  br label %21

21:                                               ; preds = %14, %1
  %22 = phi i96 [ %20, %14 ], [ %10, %1 ]
  %23 = and i96 %22, 140737488486400
  %24 = icmp eq i96 %23, 131072
  %25 = trunc i96 %22 to i16
  br i1 %24, label %26, label %31

26:                                               ; preds = %21
  tail call void @_ZN5blink12LayoutObject61SetShouldDoFullPaintInvalidationWithoutGeometryChangeInternalENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %2, i8 zeroext 16) #20
  %27 = load i96, i96* %9, align 4
  %28 = or i96 %27, 4503599627370496
  store i96 %28, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject35SetShouldDelayFullPaintInvalidationEv(%"class.blink::LayoutObject"* %2) #20
  %29 = load i96, i96* %9, align 4
  %30 = trunc i96 %29 to i16
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i16 [ %25, %21 ], [ %30, %26 ]
  %33 = icmp slt i16 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %31
  %35 = tail call zeroext i1 @_ZNK5blink9LayoutBox25IntersectsVisibleViewportEv(%"class.blink::LayoutBox"* %0)
  br i1 %35, label %36, label %37

36:                                               ; preds = %34
  tail call void @_ZN5blink12LayoutObject37ClearShouldDelayFullPaintInvalidationEv(%"class.blink::LayoutObject"* %2) #20
  br label %37

37:                                               ; preds = %36, %34, %31
  ret void
}

declare void @_ZN5blink12LayoutObject33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutObject"*) unnamed_addr #5

declare void @_ZN5blink12LayoutObject35SetShouldDelayFullPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

declare void @_ZN5blink12LayoutObject37ClearShouldDelayFullPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #4 align 2 {
  %3 = alloca %"class.blink::BoxPaintInvalidator", align 8
  %4 = bitcast %"class.blink::BoxPaintInvalidator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #20
  %5 = getelementptr inbounds %"class.blink::BoxPaintInvalidator", %"class.blink::BoxPaintInvalidator"* %3, i64 0, i32 0
  store %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBox"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::BoxPaintInvalidator", %"class.blink::BoxPaintInvalidator"* %3, i64 0, i32 1
  store %"struct.blink::PaintInvalidatorContext"* %1, %"struct.blink::PaintInvalidatorContext"** %6, align 8
  call void @_ZN5blink19BoxPaintInvalidator15InvalidatePaintEv(%"class.blink::BoxPaintInvalidator"* nonnull %3) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #20
  ret void
}

declare void @_ZN5blink19BoxPaintInvalidator15InvalidatePaintEv(%"class.blink::BoxPaintInvalidator"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox15ClearPaintFlagsEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject15ClearPaintFlagsEv(%"class.blink::LayoutObject"* %2) #20
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %4 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %5 = icmp eq %"class.blink::PaintLayerScrollableArea"* %4, null
  br i1 %5, label %39, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %4, i64 0, i32 6, i32 3
  %8 = load i8, i8* %7, align 8
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %4, i64 0, i32 6, i32 1, i32 0, i32 0
  %13 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %12, align 8
  %14 = icmp eq %"class.blink::Scrollbar"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::Scrollbar"* %13 to i1 (%"class.blink::Scrollbar"*)***
  %17 = load i1 (%"class.blink::Scrollbar"*)**, i1 (%"class.blink::Scrollbar"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::Scrollbar"*)*, i1 (%"class.blink::Scrollbar"*)** %17, i64 5
  %19 = load i1 (%"class.blink::Scrollbar"*)*, i1 (%"class.blink::Scrollbar"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::Scrollbar"* nonnull %13) #20
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::Scrollbar"* %13 to %"class.blink::CustomScrollbar"*
  tail call void @_ZN5blink15CustomScrollbar15ClearPaintFlagsEv(%"class.blink::CustomScrollbar"* nonnull %22) #20
  br label %23

23:                                               ; preds = %15, %6, %11, %21
  %24 = load i8, i8* %7, align 8
  %25 = and i8 %24, 2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %4, i64 0, i32 6, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %28, align 8
  %30 = icmp eq %"class.blink::Scrollbar"* %29, null
  br i1 %30, label %39, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.blink::Scrollbar"* %29 to i1 (%"class.blink::Scrollbar"*)***
  %33 = load i1 (%"class.blink::Scrollbar"*)**, i1 (%"class.blink::Scrollbar"*)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::Scrollbar"*)*, i1 (%"class.blink::Scrollbar"*)** %33, i64 5
  %35 = load i1 (%"class.blink::Scrollbar"*)*, i1 (%"class.blink::Scrollbar"*)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::Scrollbar"* nonnull %29) #20
  br i1 %36, label %37, label %39

37:                                               ; preds = %31
  %38 = bitcast %"class.blink::Scrollbar"* %29 to %"class.blink::CustomScrollbar"*
  tail call void @_ZN5blink15CustomScrollbar15ClearPaintFlagsEv(%"class.blink::CustomScrollbar"* nonnull %38) #20
  br label %39

39:                                               ; preds = %31, %23, %27, %37, %1
  ret void
}

declare void @_ZN5blink12LayoutObject15ClearPaintFlagsEv(%"class.blink::LayoutObject"*) unnamed_addr #5

declare void @_ZN5blink15CustomScrollbar15ClearPaintFlagsEv(%"class.blink::CustomScrollbar"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), i32) unnamed_addr #4 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"struct.blink::PhysicalRect"*
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca { i64, i64 }, align 8
  %8 = bitcast { i64, i64 }* %7 to %"struct.blink::PhysicalRect"*
  %9 = alloca { i64, i64 }, align 8
  %10 = bitcast { i64, i64 }* %9 to %"struct.blink::PhysicalRect"*
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %13 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false) #20
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = trunc i96 %16 to i64
  %18 = icmp slt i64 %17, 0
  br i1 %18, label %19, label %43

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %23, label %30

23:                                               ; preds = %19, %23
  %24 = phi %"class.blink::LayoutObject"* [ %26, %23 ], [ %11, %19 ]
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 7
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 6, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %23, label %30

30:                                               ; preds = %23, %19
  %31 = phi %"class.blink::Node"* [ %21, %19 ], [ %28, %23 ]
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %35, i64 0, i32 113
  %37 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %36, align 8
  %38 = tail call { i64, i64 } @_ZNK5blink10LayoutView8ViewRectEv(%"class.blink::LayoutView"* %37) #20
  %39 = extractvalue { i64, i64 } %38, 1
  %40 = bitcast %"struct.blink::PhysicalOffset"* %1 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %41, i64* %42, align 8
  store i64 %39, i64* %12, align 8
  br label %88

43:                                               ; preds = %3
  %44 = bitcast { i64, i64 }* %4 to i32*
  %45 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 0, i32 1, i32 0
  %46 = bitcast { i64, i64 }* %6 to %"class.blink::LayoutRectOutsets"*
  %47 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %48 = bitcast %"class.blink::LayoutSize"* %47 to i64*
  %49 = load i64, i64* %48, align 4
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 0, i64* %50, align 8
  store i64 %49, i64* %12, align 8
  %51 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #20
  %52 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %53 = bitcast %"class.blink::LayoutBox"* %0 to { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)***
  %54 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)**, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*** %53, align 8
  %55 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %54, i64 126
  %56 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %55, align 8
  %57 = tail call { i64, i64 } %56(%"class.blink::LayoutBoxModelObject"* %52) #20
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %59 = extractvalue { i64, i64 } %57, 0
  store i64 %59, i64* %58, align 8
  %60 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %61 = extractvalue { i64, i64 } %57, 1
  store i64 %61, i64* %60, align 8
  call void @_ZN5blink12PhysicalRect8ContractERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"* nonnull %5, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %46) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #20
  %62 = load i32, i32* %44, align 8
  %63 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %64, 0
  %66 = select i1 %65, i32 -2147483648, i32 2147483647
  %67 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 %64) #20
  %68 = extractvalue { i32, i1 } %67, 1
  %69 = extractvalue { i32, i1 } %67, 0
  %70 = select i1 %68, i32 %66, i32 %69, !prof !2
  %71 = load i32, i32* %45, align 4
  %72 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 1, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp slt i32 %73, 0
  %75 = select i1 %74, i32 -2147483648, i32 2147483647
  %76 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %71, i32 %73) #20
  %77 = extractvalue { i32, i1 } %76, 1
  %78 = extractvalue { i32, i1 } %76, 0
  %79 = select i1 %77, i32 %75, i32 %78, !prof !2
  %80 = zext i32 %79 to i64
  %81 = shl nuw i64 %80, 32
  %82 = zext i32 %70 to i64
  %83 = or i64 %81, %82
  store i64 %83, i64* %50, align 8
  %84 = load i96, i96* %15, align 4
  %85 = and i96 %84, 8589934592
  %86 = icmp eq i96 %85, 0
  br i1 %86, label %88, label %87

87:                                               ; preds = %43
  call void @_ZNK5blink9LayoutBox30ApplyVisibleOverflowToClipRectERNS_12PhysicalRectE(%"class.blink::LayoutBox"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5)
  br label %88

88:                                               ; preds = %43, %87, %30
  %89 = load i96, i96* %15, align 4
  %90 = and i96 %89, 8589934592
  %91 = icmp eq i96 %90, 0
  br i1 %91, label %103, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %94 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %94, i64 0, i32 0, i32 9
  %96 = bitcast [20 x i8]* %95 to i160*
  %97 = load i160, i160* %96, align 8
  %98 = lshr i160 %97, 74
  %99 = trunc i160 %98 to i32
  %100 = and i32 %99, 7
  switch i32 %100, label %101 [
    i32 5, label %103
    i32 2, label %103
  ]

101:                                              ; preds = %92
  call void @_ZNK5blink9LayoutBox17ExcludeScrollbarsERNS_12PhysicalRectENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5, i32 %2, i32 0)
  %102 = load i96, i96* %15, align 4
  br label %103

103:                                              ; preds = %92, %92, %88, %101
  %104 = phi i96 [ %89, %92 ], [ %89, %92 ], [ %89, %88 ], [ %102, %101 ]
  %105 = and i96 %104, 16777216
  %106 = icmp eq i96 %105, 0
  br i1 %106, label %107, label %181

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %109 = load %"class.blink::Node"*, %"class.blink::Node"** %108, align 8
  %110 = icmp eq %"class.blink::Node"* %109, null
  br i1 %110, label %181, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %109, i64 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = and i32 %113, 48
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %181

116:                                              ; preds = %111
  %117 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %118 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %117, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %109, i64 1, i32 2
  %121 = bitcast %"class.blink::Member.318"* %120 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %122 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %122, i64 0, i32 3, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %119, i64 0, i32 3, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %124, %126
  br i1 %127, label %128, label %181, !prof !12

128:                                              ; preds = %116
  %129 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %130 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %129, align 8
  %131 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %130, i64 92
  %132 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %131, align 8
  %133 = call zeroext i1 %132(%"class.blink::LayoutObject"* %11, i32 53) #20
  br i1 %133, label %149, label %134

134:                                              ; preds = %128
  %135 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %129, align 8
  %136 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %135, i64 92
  %137 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %136, align 8
  %138 = call zeroext i1 %137(%"class.blink::LayoutObject"* %11, i32 35) #20
  br i1 %138, label %149, label %139

139:                                              ; preds = %134
  %140 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %129, align 8
  %141 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %140, i64 92
  %142 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %141, align 8
  %143 = call zeroext i1 %142(%"class.blink::LayoutObject"* %11, i32 1) #20
  br i1 %143, label %149, label %144

144:                                              ; preds = %139
  %145 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %129, align 8
  %146 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %145, i64 92
  %147 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %146, align 8
  %148 = call zeroext i1 %147(%"class.blink::LayoutObject"* %11, i32 23) #20
  br i1 %148, label %149, label %213

149:                                              ; preds = %139, %128, %144, %134
  %150 = bitcast { i64, i64 }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #20
  %151 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 1
  %152 = call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0) #20
  %153 = call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %0) #20
  %154 = call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #20
  %155 = call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #20
  %156 = zext i32 %155 to i64
  %157 = shl nuw i64 %156, 32
  %158 = zext i32 %154 to i64
  %159 = or i64 %157, %158
  %160 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %7, i64 0, i32 0
  store i64 %159, i64* %151, align 8
  %161 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = icmp slt i32 %162, 0
  %164 = select i1 %163, i32 -2147483648, i32 2147483647
  %165 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %152, i32 %162) #20
  %166 = extractvalue { i32, i1 } %165, 1
  %167 = extractvalue { i32, i1 } %165, 0
  %168 = select i1 %166, i32 %164, i32 %167, !prof !2
  %169 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 1, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = icmp slt i32 %170, 0
  %172 = select i1 %171, i32 -2147483648, i32 2147483647
  %173 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %153, i32 %170) #20
  %174 = extractvalue { i32, i1 } %173, 1
  %175 = extractvalue { i32, i1 } %173, 0
  %176 = select i1 %174, i32 %172, i32 %175, !prof !2
  %177 = zext i32 %176 to i64
  %178 = shl nuw i64 %177, 32
  %179 = zext i32 %168 to i64
  %180 = or i64 %178, %179
  store i64 %180, i64* %160, align 8
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %5, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %8) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #20
  br label %213

181:                                              ; preds = %116, %103, %107, %111
  %182 = call zeroext i1 @_ZN5blink10IsMenuListEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %11) #20
  br i1 %182, label %183, label %213, !prof !2

183:                                              ; preds = %181
  %184 = bitcast { i64, i64 }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %184) #20
  %185 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 1
  %186 = call { i64, i64 } @_ZNK5blink9LayoutBox22PhysicalContentBoxRectEv(%"class.blink::LayoutBox"* %0)
  %187 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i64 0, i32 0
  %188 = extractvalue { i64, i64 } %186, 0
  %189 = extractvalue { i64, i64 } %186, 1
  store i64 %189, i64* %185, align 8
  %190 = trunc i64 %188 to i32
  %191 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 0, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = icmp slt i32 %192, 0
  %194 = select i1 %193, i32 -2147483648, i32 2147483647
  %195 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %190, i32 %192) #20
  %196 = extractvalue { i32, i1 } %195, 1
  %197 = extractvalue { i32, i1 } %195, 0
  %198 = select i1 %196, i32 %194, i32 %197, !prof !2
  %199 = lshr i64 %188, 32
  %200 = trunc i64 %199 to i32
  %201 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 1, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = icmp slt i32 %202, 0
  %204 = select i1 %203, i32 -2147483648, i32 2147483647
  %205 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %200, i32 %202) #20
  %206 = extractvalue { i32, i1 } %205, 1
  %207 = extractvalue { i32, i1 } %205, 0
  %208 = select i1 %206, i32 %204, i32 %207, !prof !2
  %209 = zext i32 %208 to i64
  %210 = shl nuw i64 %209, 32
  %211 = zext i32 %198 to i64
  %212 = or i64 %210, %211
  store i64 %212, i64* %187, align 8
  call void @_ZN5blink12PhysicalRect9IntersectERKS0_(%"struct.blink::PhysicalRect"* nonnull %5, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %10) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %184) #20
  br label %213

213:                                              ; preds = %183, %181, %144, %149
  %214 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %215 = load i64, i64* %214, align 8
  %216 = insertvalue { i64, i64 } undef, i64 %215, 0
  %217 = load i64, i64* %12, align 8
  %218 = insertvalue { i64, i64 } %216, i64 %217, 1
  ret { i64, i64 } %218
}

declare { i64, i64 } @_ZNK5blink10LayoutView8ViewRectEv(%"class.blink::LayoutView"*) unnamed_addr #5

declare void @_ZN5blink12PhysicalRect8ContractERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"*, %"class.blink::LayoutRectOutsets"* dereferenceable(16)) local_unnamed_addr #5

declare zeroext i1 @_ZN5blink10IsMenuListEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox31ShrinkLogicalWidthToAvoidFloatsENS_10LayoutUnitES1_PKNS_15LayoutBlockFlowE(%"class.blink::LayoutBox"* nocapture readonly, i32, i32, %"class.blink::LayoutBlockFlow"*) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 0
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = select i1 %11, i32* %12, i32* %13
  %15 = load i32, i32* %14, align 4
  %16 = bitcast %"class.blink::LayoutBlockFlow"* %3 to %"class.blink::LayoutBlock"*
  %17 = tail call i32 @_ZNK5blink11LayoutBlock21StartOffsetForContentEv(%"class.blink::LayoutBlock"* %16)
  %18 = tail call i32 @_ZNK5blink11LayoutBlock19EndOffsetForContentEv(%"class.blink::LayoutBlock"* %16)
  %19 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %20 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %19 to i96*
  %21 = load i96, i96* %20, align 4
  %22 = trunc i96 %21 to i32
  %23 = icmp slt i32 %22, 0
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.blink::LayoutSize"* %24 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = lshr i64 %26, 32
  %28 = select i1 %23, i64 %27, i64 %26
  %29 = trunc i64 %28 to i32
  %30 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 9
  %33 = bitcast [20 x i8]* %32 to i160*
  %34 = load i160, i160* %33, align 8
  %35 = and i160 %34, 41538374868278621028243970633760768
  %36 = icmp eq i160 %35, 0
  br i1 %36, label %37, label %68

37:                                               ; preds = %4
  %38 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0
  br i1 %23, label %39, label %50

39:                                               ; preds = %37
  %40 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %38) #20
  %41 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0, i32 0
  %42 = bitcast %"class.blink::LayoutBlockFlow"* %3 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %43 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %42, align 8
  %44 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %43, i64 120
  %45 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, align 8
  %46 = tail call i32 %45(%"class.blink::LayoutBoxModelObject"* %41) #20
  %47 = icmp slt i32 %46, 0
  %48 = select i1 %47, i32 -2147483648, i32 2147483647
  %49 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %40, i32 %46) #20
  br label %61

50:                                               ; preds = %37
  %51 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %38) #20
  %52 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.blink::LayoutBlockFlow"* %3 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %54 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %53, align 8
  %55 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %54, i64 118
  %56 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %55, align 8
  %57 = tail call i32 %56(%"class.blink::LayoutBoxModelObject"* %52) #20
  %58 = icmp slt i32 %57, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %51, i32 %57) #20
  br label %61

61:                                               ; preds = %39, %50
  %62 = phi { i32, i1 } [ %49, %39 ], [ %60, %50 ]
  %63 = phi i32 [ %48, %39 ], [ %59, %50 ]
  %64 = extractvalue { i32, i1 } %62, 1
  %65 = extractvalue { i32, i1 } %62, 0
  %66 = select i1 %64, i32 %63, i32 %65
  %67 = tail call i32 @_ZNK5blink15LayoutBlockFlow39LogicalLeftFloatOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %3, i32 %15, i32 %66, i32 %29) #20
  br label %82

68:                                               ; preds = %4
  %69 = and i160 %34, 15211807202738752817960438464512
  %70 = icmp eq i160 %69, 0
  %71 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %72 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %73 = select i1 %70, i32* %71, i32* %72
  %74 = load i32, i32* %73, align 4
  %75 = tail call i32 @_ZNK5blink15LayoutBlockFlow35LogicalRightOffsetForAvoidingFloatsENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"* %3, i32 %15, i32 %29) #20
  %76 = icmp sgt i32 %75, -1
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %74, i32 %75) #20
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !2
  br label %82

82:                                               ; preds = %61, %68
  %83 = phi i32 [ %67, %61 ], [ %81, %68 ]
  %84 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %85 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %84, i64 0, i32 0, i32 9
  %86 = bitcast [20 x i8]* %85 to i160*
  %87 = load i160, i160* %86, align 8
  %88 = and i160 %87, 41538374868278621028243970633760768
  %89 = icmp eq i160 %88, 0
  br i1 %89, label %124, label %90

90:                                               ; preds = %82
  %91 = load i96, i96* %20, align 4
  %92 = trunc i96 %91 to i32
  %93 = icmp slt i32 %92, 0
  %94 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0
  br i1 %93, label %95, label %106

95:                                               ; preds = %90
  %96 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %94) #20
  %97 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.blink::LayoutBlockFlow"* %3 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %99 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %98, align 8
  %100 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %99, i64 120
  %101 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %100, align 8
  %102 = tail call i32 %101(%"class.blink::LayoutBoxModelObject"* %97) #20
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %96, i32 %102) #20
  br label %117

106:                                              ; preds = %90
  %107 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %94) #20
  %108 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.blink::LayoutBlockFlow"* %3 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %110 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %109, align 8
  %111 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %110, i64 118
  %112 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %111, align 8
  %113 = tail call i32 %112(%"class.blink::LayoutBoxModelObject"* %108) #20
  %114 = icmp slt i32 %113, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %107, i32 %113) #20
  br label %117

117:                                              ; preds = %95, %106
  %118 = phi { i32, i1 } [ %105, %95 ], [ %116, %106 ]
  %119 = phi i32 [ %104, %95 ], [ %115, %106 ]
  %120 = extractvalue { i32, i1 } %118, 1
  %121 = extractvalue { i32, i1 } %118, 0
  %122 = select i1 %120, i32 %119, i32 %121
  %123 = tail call i32 @_ZNK5blink15LayoutBlockFlow39LogicalLeftFloatOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %3, i32 %15, i32 %122, i32 %29) #20
  br label %138

124:                                              ; preds = %82
  %125 = and i160 %87, 15211807202738752817960438464512
  %126 = icmp eq i160 %125, 0
  %127 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %128 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %3, i64 0, i32 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %129 = select i1 %126, i32* %127, i32* %128
  %130 = load i32, i32* %129, align 4
  %131 = tail call i32 @_ZNK5blink15LayoutBlockFlow35LogicalRightOffsetForAvoidingFloatsENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"* %3, i32 %15, i32 %29) #20
  %132 = icmp sgt i32 %131, -1
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %130, i32 %131) #20
  %135 = extractvalue { i32, i1 } %134, 1
  %136 = extractvalue { i32, i1 } %134, 0
  %137 = select i1 %135, i32 %133, i32 %136, !prof !2
  br label %138

138:                                              ; preds = %117, %124
  %139 = phi i32 [ %137, %124 ], [ %123, %117 ]
  %140 = icmp eq i32 %17, %83
  %141 = icmp eq i32 %18, %139
  %142 = and i1 %140, %141
  %143 = tail call i32 @_ZNK5blink15LayoutBlockFlow38AvailableLogicalWidthForAvoidingFloatsENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"* %3, i32 %15, i32 %29)
  br i1 %142, label %144, label %154

144:                                              ; preds = %138
  %145 = icmp sgt i32 %1, -1
  %146 = select i1 %145, i32 -2147483648, i32 2147483647
  %147 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %143, i32 %1) #20
  %148 = extractvalue { i32, i1 } %147, 1
  %149 = extractvalue { i32, i1 } %147, 0
  %150 = select i1 %148, i32 %146, i32 %149, !prof !2
  %151 = icmp sgt i32 %2, -1
  %152 = select i1 %151, i32 -2147483648, i32 2147483647
  %153 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %150, i32 %2) #20
  br label %210

154:                                              ; preds = %138
  %155 = icmp sgt i32 %1, 0
  %156 = select i1 %155, i32 %1, i32 0
  %157 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %143, i32 %156) #20
  %158 = extractvalue { i32, i1 } %157, 1
  %159 = extractvalue { i32, i1 } %157, 0
  %160 = select i1 %158, i32 -2147483648, i32 %159, !prof !2
  %161 = icmp sgt i32 %2, 0
  %162 = select i1 %161, i32 %2, i32 0
  %163 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %160, i32 %162) #20
  %164 = extractvalue { i32, i1 } %163, 1
  %165 = extractvalue { i32, i1 } %163, 0
  %166 = select i1 %164, i32 -2147483648, i32 %165, !prof !2
  %167 = icmp slt i32 %1, 1
  br i1 %167, label %183, label %168

168:                                              ; preds = %154
  %169 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %1) #20
  %170 = extractvalue { i32, i1 } %169, 1
  %171 = extractvalue { i32, i1 } %169, 0
  %172 = select i1 %170, i32 2147483647, i32 %171, !prof !2
  %173 = icmp slt i32 %172, %83
  br i1 %173, label %183, label %174

174:                                              ; preds = %168
  %175 = icmp sgt i32 %17, -1
  %176 = select i1 %175, i32 -2147483648, i32 2147483647
  %177 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %83, i32 %17) #20
  %178 = extractvalue { i32, i1 } %177, 1
  %179 = extractvalue { i32, i1 } %177, 0
  %180 = select i1 %178, i32 %176, i32 %179, !prof !2
  %181 = icmp slt i32 %180, 0
  %182 = select i1 %181, i32 -2147483648, i32 2147483647
  br label %183

183:                                              ; preds = %174, %168, %154
  %184 = phi i32 [ %1, %168 ], [ 0, %154 ], [ %180, %174 ]
  %185 = phi i32 [ 2147483647, %168 ], [ 2147483647, %154 ], [ %182, %174 ]
  %186 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %166, i32 %184) #20
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !2
  %190 = icmp slt i32 %2, 1
  br i1 %190, label %206, label %191

191:                                              ; preds = %183
  %192 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %18, i32 %2) #20
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 2147483647, i32 %194, !prof !2
  %196 = icmp slt i32 %195, %139
  br i1 %196, label %206, label %197

197:                                              ; preds = %191
  %198 = icmp sgt i32 %18, -1
  %199 = select i1 %198, i32 -2147483648, i32 2147483647
  %200 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %139, i32 %18) #20
  %201 = extractvalue { i32, i1 } %200, 1
  %202 = extractvalue { i32, i1 } %200, 0
  %203 = select i1 %201, i32 %199, i32 %202, !prof !2
  %204 = icmp slt i32 %203, 0
  %205 = select i1 %204, i32 -2147483648, i32 2147483647
  br label %206

206:                                              ; preds = %197, %191, %183
  %207 = phi i32 [ %2, %191 ], [ 0, %183 ], [ %203, %197 ]
  %208 = phi i32 [ 2147483647, %191 ], [ 2147483647, %183 ], [ %205, %197 ]
  %209 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %189, i32 %207) #20
  br label %210

210:                                              ; preds = %206, %144
  %211 = phi { i32, i1 } [ %209, %206 ], [ %153, %144 ]
  %212 = phi i32 [ %208, %206 ], [ %152, %144 ]
  %213 = extractvalue { i32, i1 } %211, 1
  %214 = extractvalue { i32, i1 } %211, 0
  %215 = select i1 %213, i32 %212, i32 %214
  ret i32 %215
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutBlock21StartOffsetForContentEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41538374868278621028243970633760768
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %38

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = trunc i96 %12 to i32
  %14 = icmp slt i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  br i1 %14, label %16, label %27

16:                                               ; preds = %9
  %17 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %15) #20
  %18 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %19 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %20 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %20, i64 120
  %22 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::LayoutBoxModelObject"* %18) #20
  %24 = icmp slt i32 %23, 0
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %23) #20
  br label %89

27:                                               ; preds = %9
  %28 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %15) #20
  %29 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %31 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %30, align 8
  %32 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %31, i64 118
  %33 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %32, align 8
  %34 = tail call i32 %33(%"class.blink::LayoutBoxModelObject"* %29) #20
  %35 = icmp slt i32 %34, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 %34) #20
  br label %89

38:                                               ; preds = %1
  %39 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %40 = and i160 %6, 15211807202738752817960438464512
  %41 = icmp eq i160 %40, 0
  %42 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %44 = select i1 %41, i32* %42, i32* %43
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %47 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %46 to i96*
  %48 = load i96, i96* %47, align 4
  %49 = trunc i96 %48 to i32
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %62

51:                                               ; preds = %38
  %52 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %39) #20
  %53 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %55 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %54, align 8
  %56 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %55, i64 120
  %57 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %56, align 8
  %58 = tail call i32 %57(%"class.blink::LayoutBoxModelObject"* %53) #20
  %59 = icmp slt i32 %58, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %52, i32 %58) #20
  br label %73

62:                                               ; preds = %38
  %63 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %39) #20
  %64 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %65 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %66 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %65, align 8
  %67 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %66, i64 118
  %68 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %67, align 8
  %69 = tail call i32 %68(%"class.blink::LayoutBoxModelObject"* %64) #20
  %70 = icmp slt i32 %69, 0
  %71 = select i1 %70, i32 -2147483648, i32 2147483647
  %72 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %63, i32 %69) #20
  br label %73

73:                                               ; preds = %51, %62
  %74 = phi { i32, i1 } [ %61, %51 ], [ %72, %62 ]
  %75 = phi i32 [ %60, %51 ], [ %71, %62 ]
  %76 = extractvalue { i32, i1 } %74, 1
  %77 = extractvalue { i32, i1 } %74, 0
  %78 = select i1 %76, i32 %75, i32 %77
  %79 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %39) #20
  %80 = icmp slt i32 %79, 0
  %81 = select i1 %80, i32 -2147483648, i32 2147483647
  %82 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %78, i32 %79) #20
  %83 = extractvalue { i32, i1 } %82, 1
  %84 = extractvalue { i32, i1 } %82, 0
  %85 = select i1 %83, i32 %81, i32 %84, !prof !2
  %86 = icmp sgt i32 %85, -1
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %45, i32 %85) #20
  br label %89

89:                                               ; preds = %27, %16, %73
  %90 = phi { i32, i1 } [ %37, %27 ], [ %26, %16 ], [ %88, %73 ]
  %91 = phi i32 [ %36, %27 ], [ %25, %16 ], [ %87, %73 ]
  %92 = extractvalue { i32, i1 } %90, 1
  %93 = extractvalue { i32, i1 } %90, 0
  %94 = select i1 %92, i32 %91, i32 %93
  ret i32 %94
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutBlock19EndOffsetForContentEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41538374868278621028243970633760768
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %38, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = trunc i96 %12 to i32
  %14 = icmp slt i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  br i1 %14, label %16, label %27

16:                                               ; preds = %9
  %17 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %15) #20
  %18 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %19 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %20 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %20, i64 120
  %22 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::LayoutBoxModelObject"* %18) #20
  %24 = icmp slt i32 %23, 0
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %23) #20
  br label %89

27:                                               ; preds = %9
  %28 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %15) #20
  %29 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %31 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %30, align 8
  %32 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %31, i64 118
  %33 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %32, align 8
  %34 = tail call i32 %33(%"class.blink::LayoutBoxModelObject"* %29) #20
  %35 = icmp slt i32 %34, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 %34) #20
  br label %89

38:                                               ; preds = %1
  %39 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %40 = and i160 %6, 15211807202738752817960438464512
  %41 = icmp eq i160 %40, 0
  %42 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %43 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %44 = select i1 %41, i32* %42, i32* %43
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %47 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %46 to i96*
  %48 = load i96, i96* %47, align 4
  %49 = trunc i96 %48 to i32
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %62

51:                                               ; preds = %38
  %52 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %39) #20
  %53 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %55 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %54, align 8
  %56 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %55, i64 120
  %57 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %56, align 8
  %58 = tail call i32 %57(%"class.blink::LayoutBoxModelObject"* %53) #20
  %59 = icmp slt i32 %58, 0
  %60 = select i1 %59, i32 -2147483648, i32 2147483647
  %61 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %52, i32 %58) #20
  br label %73

62:                                               ; preds = %38
  %63 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %39) #20
  %64 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %65 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %66 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %65, align 8
  %67 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %66, i64 118
  %68 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %67, align 8
  %69 = tail call i32 %68(%"class.blink::LayoutBoxModelObject"* %64) #20
  %70 = icmp slt i32 %69, 0
  %71 = select i1 %70, i32 -2147483648, i32 2147483647
  %72 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %63, i32 %69) #20
  br label %73

73:                                               ; preds = %51, %62
  %74 = phi { i32, i1 } [ %61, %51 ], [ %72, %62 ]
  %75 = phi i32 [ %60, %51 ], [ %71, %62 ]
  %76 = extractvalue { i32, i1 } %74, 1
  %77 = extractvalue { i32, i1 } %74, 0
  %78 = select i1 %76, i32 %75, i32 %77
  %79 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %39) #20
  %80 = icmp slt i32 %79, 0
  %81 = select i1 %80, i32 -2147483648, i32 2147483647
  %82 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %78, i32 %79) #20
  %83 = extractvalue { i32, i1 } %82, 1
  %84 = extractvalue { i32, i1 } %82, 0
  %85 = select i1 %83, i32 %81, i32 %84, !prof !2
  %86 = icmp sgt i32 %85, -1
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %45, i32 %85) #20
  br label %89

89:                                               ; preds = %27, %16, %73
  %90 = phi { i32, i1 } [ %37, %27 ], [ %26, %16 ], [ %88, %73 ]
  %91 = phi i32 [ %36, %27 ], [ %25, %16 ], [ %87, %73 ]
  %92 = extractvalue { i32, i1 } %90, 1
  %93 = extractvalue { i32, i1 } %90, 0
  %94 = select i1 %92, i32 %91, i32 %93
  ret i32 %94
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow38AvailableLogicalWidthForAvoidingFloatsENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = tail call i32 @_ZNK5blink15LayoutBlockFlow35LogicalRightOffsetForAvoidingFloatsENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"* %0, i32 %1, i32 %2)
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = trunc i96 %7 to i32
  %9 = icmp slt i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  br i1 %9, label %11, label %22

11:                                               ; preds = %3
  %12 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %10) #20
  %13 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 120
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBoxModelObject"* %13) #20
  %19 = icmp slt i32 %18, 0
  %20 = select i1 %19, i32 -2147483648, i32 2147483647
  %21 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 %18) #20
  br label %33

22:                                               ; preds = %3
  %23 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %10) #20
  %24 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %26 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %25, align 8
  %27 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %26, i64 118
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  %29 = tail call i32 %28(%"class.blink::LayoutBoxModelObject"* %24) #20
  %30 = icmp slt i32 %29, 0
  %31 = select i1 %30, i32 -2147483648, i32 2147483647
  %32 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %23, i32 %29) #20
  br label %33

33:                                               ; preds = %11, %22
  %34 = phi { i32, i1 } [ %21, %11 ], [ %32, %22 ]
  %35 = phi i32 [ %20, %11 ], [ %31, %22 ]
  %36 = extractvalue { i32, i1 } %34, 1
  %37 = extractvalue { i32, i1 } %34, 0
  %38 = select i1 %36, i32 %35, i32 %37
  %39 = tail call i32 @_ZNK5blink15LayoutBlockFlow39LogicalLeftFloatOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %1, i32 %38, i32 %2) #20
  %40 = icmp sgt i32 %39, -1
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %4, i32 %39) #20
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !2
  %46 = icmp sgt i32 %45, 0
  %47 = select i1 %46, i32 %45, i32 0
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox47ContainingBlockLogicalHeightForGetComputedStyleEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %4 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %3, align 8
  %5 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %4, null
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %8 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %7, align 8
  %9 = icmp eq %"struct.blink::LayoutBoxRareData"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %8, i64 0, i32 3
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, 2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %22, label %17

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %4, i64 0, i32 8, i32 0
  br label %19

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %8, i64 0, i32 5, i32 0
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi i32* [ %16, %15 ], [ %18, %17 ]
  %21 = load i32, i32* %20, align 4
  br label %156

22:                                               ; preds = %10, %6
  %23 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %24 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %23 to i96*
  %25 = load i96, i96* %24, align 4
  %26 = and i96 %25, 113336795588871485128704
  %27 = icmp eq i96 %26, 0
  br i1 %27, label %28, label %67

28:                                               ; preds = %22
  br i1 %9, label %37, label %29

29:                                               ; preds = %28
  %30 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %8, i64 0, i32 3
  %31 = load i8, i8* %30, align 8
  %32 = and i8 %31, 2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %8, i64 0, i32 5, i32 0
  %36 = load i32, i32* %35, align 4
  br label %156

37:                                               ; preds = %29, %28
  %38 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %39 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %38, i64 0, i32 0
  %40 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %41 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %42 = or i8 %41, %40
  %43 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %44 = or i8 %42, %43
  %45 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %46 = or i8 %44, %45
  %47 = icmp eq i8 %46, 0
  %48 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %38, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %49 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %49, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8
  %53 = and i160 %52, 15211807202738752817960438464512
  %54 = icmp eq i160 %53, 0
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %49, i64 0, i32 0, i32 5, i32 0, i32 0
  %56 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %56, i64 0, i32 3
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %56, i64 0, i32 8
  %59 = select i1 %54, %"class.blink::Length"* %57, %"class.blink::Length"* %58
  %60 = tail call i32 @_ZNK5blink9LayoutBox27AvailableLogicalHeightUsingERKNS_6LengthENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"* %39, %"class.blink::Length"* dereferenceable(8) %59, i32 0) #20
  br i1 %47, label %65, label %61

61:                                               ; preds = %37
  %62 = icmp eq i32 %60, -64
  br i1 %62, label %156, label %63, !prof !2

63:                                               ; preds = %61
  %64 = tail call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %39, i32 %60, i32 -64) #20
  br label %156

65:                                               ; preds = %37
  %66 = tail call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %39, i32 %60, i32 -64) #20
  br label %156

67:                                               ; preds = %22
  %68 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %69 = bitcast %"class.blink::LayoutObject"* %68 to %"class.blink::LayoutBoxModelObject"*
  %70 = tail call i32 @_ZNK5blink9LayoutBox41ContainingBlockLogicalHeightForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutBoxModelObject"* %69, i1 zeroext false)
  %71 = load i96, i96* %24, align 4
  %72 = lshr i96 %71, 75
  %73 = trunc i96 %72 to i32
  %74 = and i32 %73, 1
  %75 = or i32 %74, 2
  %76 = icmp eq i32 %75, 3
  br i1 %76, label %77, label %156

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %68, i64 0, i32 5, i32 0
  %79 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %78, align 8, !noalias !135
  %80 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %79, i64 0, i32 0, i32 9
  %81 = bitcast [20 x i8]* %80 to i160*
  %82 = load i160, i160* %81, align 8, !noalias !135
  %83 = lshr i160 %82, 102
  %84 = trunc i160 %83 to i8
  %85 = and i8 %84, 3
  %86 = bitcast %"class.blink::LayoutObject"* %68 to i8*
  switch i8 %85, label %87 [
    i8 0, label %96
    i8 1, label %88
  ]

87:                                               ; preds = %77
  br label %88

88:                                               ; preds = %87, %77
  %89 = phi { i64, i64 } [ { i64 961, i64 0 }, %87 ], [ { i64 969, i64 0 }, %77 ]
  %90 = extractvalue { i64, i64 } %89, 0
  %91 = extractvalue { i64, i64 } %89, 1
  %92 = getelementptr inbounds i8, i8* %86, i64 %91
  %93 = bitcast i8* %92 to %"class.blink::LayoutBoxModelObject"*
  %94 = and i64 %90, 1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %106, label %96

96:                                               ; preds = %88, %77
  %97 = phi %"class.blink::LayoutBoxModelObject"* [ %93, %88 ], [ %69, %77 ]
  %98 = phi i8* [ %92, %88 ], [ %86, %77 ]
  %99 = phi i64 [ %90, %88 ], [ 945, %77 ]
  %100 = bitcast i8* %98 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = add i64 %99, -1
  %103 = getelementptr i8, i8* %101, i64 %102
  %104 = bitcast i8* %103 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %105 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %104, align 8
  br label %108

106:                                              ; preds = %88
  %107 = inttoptr i64 %90 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %108

108:                                              ; preds = %106, %96
  %109 = phi %"class.blink::LayoutBoxModelObject"* [ %97, %96 ], [ %93, %106 ]
  %110 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %105, %96 ], [ %107, %106 ]
  %111 = tail call i32 %110(%"class.blink::LayoutBoxModelObject"* %109) #20
  %112 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %78, align 8, !noalias !138
  %113 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %112, i64 0, i32 0, i32 9
  %114 = bitcast [20 x i8]* %113 to i160*
  %115 = load i160, i160* %114, align 8, !noalias !138
  %116 = lshr i160 %115, 102
  %117 = trunc i160 %116 to i8
  %118 = and i8 %117, 3
  switch i8 %118, label %119 [
    i8 0, label %128
    i8 1, label %120
  ]

119:                                              ; preds = %108
  br label %120

120:                                              ; preds = %119, %108
  %121 = phi { i64, i64 } [ { i64 969, i64 0 }, %119 ], [ { i64 961, i64 0 }, %108 ]
  %122 = extractvalue { i64, i64 } %121, 0
  %123 = extractvalue { i64, i64 } %121, 1
  %124 = getelementptr inbounds i8, i8* %86, i64 %123
  %125 = bitcast i8* %124 to %"class.blink::LayoutBoxModelObject"*
  %126 = and i64 %122, 1
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %138, label %128

128:                                              ; preds = %120, %108
  %129 = phi %"class.blink::LayoutBoxModelObject"* [ %125, %120 ], [ %69, %108 ]
  %130 = phi i8* [ %124, %120 ], [ %86, %108 ]
  %131 = phi i64 [ %122, %120 ], [ 953, %108 ]
  %132 = bitcast i8* %130 to i8**
  %133 = load i8*, i8** %132, align 8
  %134 = add i64 %131, -1
  %135 = getelementptr i8, i8* %133, i64 %134
  %136 = bitcast i8* %135 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %137 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %136, align 8
  br label %140

138:                                              ; preds = %120
  %139 = inttoptr i64 %122 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %140

140:                                              ; preds = %128, %138
  %141 = phi %"class.blink::LayoutBoxModelObject"* [ %129, %128 ], [ %125, %138 ]
  %142 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %137, %128 ], [ %139, %138 ]
  %143 = tail call i32 %142(%"class.blink::LayoutBoxModelObject"* %141) #20
  %144 = icmp slt i32 %143, 0
  %145 = select i1 %144, i32 -2147483648, i32 2147483647
  %146 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %111, i32 %143) #20
  %147 = extractvalue { i32, i1 } %146, 1
  %148 = extractvalue { i32, i1 } %146, 0
  %149 = select i1 %147, i32 %145, i32 %148, !prof !2
  %150 = icmp sgt i32 %149, -1
  %151 = select i1 %150, i32 -2147483648, i32 2147483647
  %152 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %70, i32 %149) #20
  %153 = extractvalue { i32, i1 } %152, 1
  %154 = extractvalue { i32, i1 } %152, 0
  %155 = select i1 %153, i32 %151, i32 %154, !prof !2
  br label %156

156:                                              ; preds = %67, %140, %34, %61, %63, %65, %19
  %157 = phi i32 [ %21, %19 ], [ %36, %34 ], [ %66, %65 ], [ %64, %63 ], [ -64, %61 ], [ %155, %140 ], [ %70, %67 ]
  ret i32 %157
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox38ContainingBlockLogicalHeightForContentENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %5 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %4, align 8
  %6 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %9 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %8, align 8
  %10 = icmp eq %"struct.blink::LayoutBoxRareData"* %9, null
  br i1 %10, label %23, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %9, i64 0, i32 3
  %13 = load i8, i8* %12, align 8
  %14 = and i8 %13, 2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %23, label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %5, i64 0, i32 8, i32 0
  br label %20

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %9, i64 0, i32 5, i32 0
  br label %20

20:                                               ; preds = %16, %18
  %21 = phi i32* [ %17, %16 ], [ %19, %18 ]
  %22 = load i32, i32* %21, align 4
  br label %27

23:                                               ; preds = %11, %7
  %24 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %25 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %24, i64 0, i32 0
  %26 = tail call i32 @_ZNK5blink9LayoutBox22AvailableLogicalHeightENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"* %25, i32 %1)
  br label %27

27:                                               ; preds = %23, %20
  %28 = phi i32 [ %22, %20 ], [ %26, %23 ]
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox41ContainingBlockLogicalHeightForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* nocapture readonly, %"class.blink::LayoutBoxModelObject"*, i1 zeroext) local_unnamed_addr #4 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::IntSize"*
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  br i1 %2, label %7, label %19

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = xor i96 %13, %10
  %15 = trunc i96 %14 to i32
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %7
  %18 = tail call i32 @_ZNK5blink9LayoutBox40ContainingBlockLogicalWidthForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutBoxModelObject"* %1, i1 zeroext false)
  br label %221

19:                                               ; preds = %7, %3
  %20 = icmp eq %"class.blink::LayoutBoxModelObject"* %1, null
  br i1 %20, label %30, label %21

21:                                               ; preds = %19
  %22 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0
  %23 = bitcast %"class.blink::LayoutBoxModelObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %24 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, i64 92
  %26 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::LayoutObject"* %22, i32 55) #20
  %28 = bitcast %"class.blink::LayoutBoxModelObject"* %1 to %"class.blink::LayoutView"*
  %29 = select i1 %27, %"class.blink::LayoutView"* %28, %"class.blink::LayoutView"* null
  br label %30

30:                                               ; preds = %19, %21
  %31 = phi %"class.blink::LayoutView"* [ %29, %21 ], [ null, %19 ]
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = and i160 %36, 8462480737302404222943232
  %38 = icmp eq i160 %37, 1208925819614629174706176
  %39 = icmp ne %"class.blink::LayoutView"* %31, null
  %40 = and i1 %39, %38
  br i1 %40, label %41, label %97

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %43 = load %"class.blink::Node"*, %"class.blink::Node"** %42, align 8
  %44 = icmp eq %"class.blink::Node"* %43, null
  br i1 %44, label %45, label %52

45:                                               ; preds = %41, %45
  %46 = phi %"class.blink::LayoutObject"* [ %48, %45 ], [ %6, %41 ]
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 7
  %48 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %48, i64 0, i32 6, i32 0, i32 0
  %50 = load %"class.blink::Node"*, %"class.blink::Node"** %49, align 8
  %51 = icmp eq %"class.blink::Node"* %50, null
  br i1 %51, label %45, label %52

52:                                               ; preds = %45, %41
  %53 = phi %"class.blink::Node"* [ %43, %41 ], [ %50, %45 ]
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %55, i64 0, i32 2, i32 0, i32 0
  %57 = load %"class.blink::Document"*, %"class.blink::Document"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %57, i64 0, i32 31
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 2
  br i1 %60, label %97, label %61

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %31, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %62, align 8
  %64 = icmp eq %"class.blink::LocalFrameView"* %63, null
  br i1 %64, label %97, label %65

65:                                               ; preds = %61
  %66 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"* nonnull %63) #20
  %67 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %66, i64 0, i32 0
  %68 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #20
  %69 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %63, i64 0, i32 0, i32 0, i32 1, i32 1
  %70 = bitcast %"class.blink::IntSize"* %69 to i64*
  %71 = load i64, i64* %70, align 4
  store i64 %71, i64* %4, align 8
  %72 = call i64 @_ZNK5blink14ScrollableArea17ExcludeScrollbarsERKNS_7IntSizeE(%"class.blink::ScrollableArea"* %67, %"class.blink::IntSize"* nonnull dereferenceable(8) %5) #20
  %73 = trunc i64 %72 to i32
  %74 = lshr i64 %72, 32
  %75 = trunc i64 %74 to i32
  %76 = icmp sgt i32 %73, 33554431
  br i1 %76, label %81, label %77

77:                                               ; preds = %65
  %78 = icmp slt i32 %73, -33554432
  %79 = shl i32 %73, 6
  %80 = select i1 %78, i32 -2147483648, i32 %79
  br label %81

81:                                               ; preds = %77, %65
  %82 = phi i32 [ 2147483647, %65 ], [ %80, %77 ]
  %83 = icmp sgt i32 %75, 33554431
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = icmp slt i32 %75, -33554432
  %86 = shl nuw nsw i64 %74, 6
  %87 = trunc i64 %86 to i32
  %88 = select i1 %85, i32 -2147483648, i32 %87
  br label %89

89:                                               ; preds = %84, %81
  %90 = phi i32 [ 2147483647, %81 ], [ %88, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #20
  %91 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0, i32 4
  %92 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %91 to i96*
  %93 = load i96, i96* %92, align 4
  %94 = trunc i96 %93 to i32
  %95 = icmp slt i32 %94, 0
  %96 = select i1 %95, i32 %90, i32 %82
  ret i32 %96

97:                                               ; preds = %61, %52, %30
  %98 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %99 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %98, align 8
  %100 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %99, null
  br i1 %100, label %101, label %110

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %103 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %102, align 8
  %104 = icmp eq %"struct.blink::LayoutBoxRareData"* %103, null
  br i1 %104, label %117, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %103, i64 0, i32 3
  %107 = load i8, i8* %106, align 8
  %108 = and i8 %107, 2
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %117, label %112

110:                                              ; preds = %97
  %111 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %99, i64 0, i32 8, i32 0
  br label %114

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %103, i64 0, i32 5, i32 0
  br label %114

114:                                              ; preds = %110, %112
  %115 = phi i32* [ %111, %110 ], [ %113, %112 ]
  %116 = load i32, i32* %115, align 4
  br label %221

117:                                              ; preds = %105, %101
  %118 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0, i32 4
  %119 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %118 to i96*
  %120 = load i96, i96* %119, align 4
  %121 = and i96 %120, 67108864
  %122 = icmp eq i96 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %117
  %124 = bitcast %"class.blink::LayoutBoxModelObject"* %1 to %"class.blink::LayoutBox"*
  %125 = trunc i96 %120 to i32
  %126 = icmp slt i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %123
  %128 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %124) #20
  br label %221

129:                                              ; preds = %123
  %130 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %124) #20
  br label %221

131:                                              ; preds = %117
  %132 = bitcast %"class.blink::LayoutBoxModelObject"* %1 to %"class.blink::LayoutInline"*
  %133 = tail call zeroext i1 @_ZNK5blink12LayoutInline18HasInlineFragmentsEv(%"class.blink::LayoutInline"* %132) #20
  br i1 %133, label %134, label %221

134:                                              ; preds = %131
  %135 = tail call { i64, i64 } @_ZNK5blink12LayoutInline24PhysicalLinesBoundingBoxEv(%"class.blink::LayoutInline"* %132) #20
  %136 = extractvalue { i64, i64 } %135, 1
  %137 = load i96, i96* %119, align 4
  %138 = trunc i96 %137 to i32
  %139 = icmp slt i32 %138, 0
  %140 = lshr i64 %136, 32
  %141 = select i1 %139, i64 %140, i64 %136
  %142 = trunc i64 %141 to i32
  %143 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0, i32 5, i32 0
  %144 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %143, align 8, !noalias !141
  %145 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %144, i64 0, i32 0, i32 9
  %146 = bitcast [20 x i8]* %145 to i160*
  %147 = load i160, i160* %146, align 8, !noalias !141
  %148 = lshr i160 %147, 102
  %149 = trunc i160 %148 to i8
  %150 = and i8 %149, 3
  %151 = bitcast %"class.blink::LayoutBoxModelObject"* %1 to i8*
  switch i8 %150, label %152 [
    i8 0, label %161
    i8 1, label %153
  ]

152:                                              ; preds = %134
  br label %153

153:                                              ; preds = %152, %134
  %154 = phi { i64, i64 } [ { i64 993, i64 0 }, %152 ], [ { i64 1001, i64 0 }, %134 ]
  %155 = extractvalue { i64, i64 } %154, 0
  %156 = extractvalue { i64, i64 } %154, 1
  %157 = getelementptr inbounds i8, i8* %151, i64 %156
  %158 = bitcast i8* %157 to %"class.blink::LayoutBoxModelObject"*
  %159 = and i64 %155, 1
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %171, label %161

161:                                              ; preds = %153, %134
  %162 = phi %"class.blink::LayoutBoxModelObject"* [ %158, %153 ], [ %1, %134 ]
  %163 = phi i8* [ %157, %153 ], [ %151, %134 ]
  %164 = phi i64 [ %155, %153 ], [ 977, %134 ]
  %165 = bitcast i8* %163 to i8**
  %166 = load i8*, i8** %165, align 8
  %167 = add i64 %164, -1
  %168 = getelementptr i8, i8* %166, i64 %167
  %169 = bitcast i8* %168 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %170 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %169, align 8
  br label %173

171:                                              ; preds = %153
  %172 = inttoptr i64 %155 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %173

173:                                              ; preds = %161, %171
  %174 = phi %"class.blink::LayoutBoxModelObject"* [ %162, %161 ], [ %158, %171 ]
  %175 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %170, %161 ], [ %172, %171 ]
  %176 = tail call i32 %175(%"class.blink::LayoutBoxModelObject"* %174) #20
  %177 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %143, align 8, !noalias !144
  %178 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %177, i64 0, i32 0, i32 9
  %179 = bitcast [20 x i8]* %178 to i160*
  %180 = load i160, i160* %179, align 8, !noalias !144
  %181 = lshr i160 %180, 102
  %182 = trunc i160 %181 to i8
  %183 = and i8 %182, 3
  switch i8 %183, label %184 [
    i8 0, label %193
    i8 1, label %185
  ]

184:                                              ; preds = %173
  br label %185

185:                                              ; preds = %184, %173
  %186 = phi { i64, i64 } [ { i64 1001, i64 0 }, %184 ], [ { i64 993, i64 0 }, %173 ]
  %187 = extractvalue { i64, i64 } %186, 0
  %188 = extractvalue { i64, i64 } %186, 1
  %189 = getelementptr inbounds i8, i8* %151, i64 %188
  %190 = bitcast i8* %189 to %"class.blink::LayoutBoxModelObject"*
  %191 = and i64 %187, 1
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %203, label %193

193:                                              ; preds = %185, %173
  %194 = phi %"class.blink::LayoutBoxModelObject"* [ %190, %185 ], [ %1, %173 ]
  %195 = phi i8* [ %189, %185 ], [ %151, %173 ]
  %196 = phi i64 [ %187, %185 ], [ 985, %173 ]
  %197 = bitcast i8* %195 to i8**
  %198 = load i8*, i8** %197, align 8
  %199 = add i64 %196, -1
  %200 = getelementptr i8, i8* %198, i64 %199
  %201 = bitcast i8* %200 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %202 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %201, align 8
  br label %205

203:                                              ; preds = %185
  %204 = inttoptr i64 %187 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %205

205:                                              ; preds = %193, %203
  %206 = phi %"class.blink::LayoutBoxModelObject"* [ %194, %193 ], [ %190, %203 ]
  %207 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %202, %193 ], [ %204, %203 ]
  %208 = tail call i32 %207(%"class.blink::LayoutBoxModelObject"* %206) #20
  %209 = icmp slt i32 %208, 0
  %210 = select i1 %209, i32 -2147483648, i32 2147483647
  %211 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %176, i32 %208) #20
  %212 = extractvalue { i32, i1 } %211, 1
  %213 = extractvalue { i32, i1 } %211, 0
  %214 = select i1 %212, i32 %210, i32 %213, !prof !2
  %215 = icmp sgt i32 %214, -1
  %216 = select i1 %215, i32 -2147483648, i32 2147483647
  %217 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %142, i32 %214) #20
  %218 = extractvalue { i32, i1 } %217, 1
  %219 = extractvalue { i32, i1 } %217, 0
  %220 = select i1 %218, i32 %216, i32 %219, !prof !2
  br label %221

221:                                              ; preds = %131, %129, %127, %114, %205, %17
  %222 = phi i32 [ %18, %17 ], [ %116, %114 ], [ %220, %205 ], [ %128, %127 ], [ %130, %129 ], [ 0, %131 ]
  ret i32 %222
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %4 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %3, align 8
  %5 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %4, null
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %8 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %7, align 8
  %9 = icmp eq %"struct.blink::LayoutBoxRareData"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %8, i64 0, i32 3
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %22, label %17

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %4, i64 0, i32 7, i32 0
  br label %19

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %8, i64 0, i32 4, i32 0
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi i32* [ %16, %15 ], [ %18, %17 ]
  %21 = load i32, i32* %20, align 4
  br label %42

22:                                               ; preds = %10, %6
  %23 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = and i96 %26, 113336795588871485128704
  %28 = icmp eq i96 %27, 75557863725914323419136
  %29 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %23, i64 0, i32 0
  br i1 %28, label %30, label %40

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %23, i64 0, i32 0, i32 0, i32 0, i32 4
  %32 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %31 to i96*
  %33 = load i96, i96* %32, align 4
  %34 = trunc i96 %33 to i32
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %30
  %37 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %29) #20
  br label %42

38:                                               ; preds = %30
  %39 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %29) #20
  br label %42

40:                                               ; preds = %22
  %41 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %29) #20
  br label %42

42:                                               ; preds = %38, %36, %40, %19
  %43 = phi i32 [ %21, %19 ], [ %41, %40 ], [ %37, %36 ], [ %39, %38 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox22AvailableLogicalHeightENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %4 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %5 = or i8 %4, %3
  %6 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %7 = or i8 %5, %6
  %8 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %9 = or i8 %7, %8
  %10 = icmp ne i8 %9, 0
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = and i160 %15, 15211807202738752817960438464512
  %17 = icmp eq i160 %16, 0
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 5, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %19, i64 0, i32 3
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %19, i64 0, i32 8
  %22 = select i1 %17, %"class.blink::Length"* %20, %"class.blink::Length"* %21
  %23 = tail call i32 @_ZNK5blink9LayoutBox27AvailableLogicalHeightUsingERKNS_6LengthENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"* %0, %"class.blink::Length"* dereferenceable(8) %22, i32 %1)
  %24 = icmp eq i32 %23, -64
  %25 = and i1 %10, %24
  br i1 %25, label %28, label %26, !prof !12

26:                                               ; preds = %2
  %27 = tail call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %0, i32 %23, i32 -64)
  br label %28

28:                                               ; preds = %2, %26
  %29 = phi i32 [ %27, %26 ], [ -64, %2 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox33ContainingBlockAvailableLineWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %4 = icmp eq %"class.blink::LayoutBlock"* %3, null
  br i1 %4, label %46, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.blink::LayoutBlock"* %3 to i1 (%"class.blink::LayoutObject"*)***
  %8 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %8, i64 24
  %10 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* %6) #20
  %12 = bitcast %"class.blink::LayoutBlock"* %3 to %"class.blink::LayoutBlockFlow"*
  br i1 %11, label %13, label %46

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = and i160 %18, 15211807202738752817960438464512
  %20 = icmp eq i160 %19, 0
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = select i1 %20, i32* %21, i32* %22
  %24 = load i32, i32* %23, align 4
  %25 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %26 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %27 = or i8 %26, %25
  %28 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %29 = or i8 %27, %28
  %30 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %31 = or i8 %29, %30
  %32 = icmp ne i8 %31, 0
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 5, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %34, i64 0, i32 3
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %34, i64 0, i32 8
  %37 = select i1 %20, %"class.blink::Length"* %35, %"class.blink::Length"* %36
  %38 = tail call i32 @_ZNK5blink9LayoutBox27AvailableLogicalHeightUsingERKNS_6LengthENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"* %0, %"class.blink::Length"* dereferenceable(8) %37, i32 1) #20
  %39 = icmp eq i32 %38, -64
  %40 = and i1 %32, %39
  br i1 %40, label %43, label %41, !prof !12

41:                                               ; preds = %13
  %42 = tail call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %0, i32 %38, i32 -64) #20
  br label %43

43:                                               ; preds = %13, %41
  %44 = phi i32 [ %42, %41 ], [ -64, %13 ]
  %45 = tail call i32 @_ZNK5blink15LayoutBlockFlow38AvailableLogicalWidthForAvoidingFloatsENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"* nonnull %12, i32 %24, i32 %44)
  br label %46

46:                                               ; preds = %5, %1, %43
  %47 = phi i32 [ %45, %43 ], [ 0, %5 ], [ 0, %1 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox41PerpendicularContainingBlockLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %4 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %3, align 8
  %5 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %4, null
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %8 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %7, align 8
  %9 = icmp eq %"struct.blink::LayoutBoxRareData"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %8, i64 0, i32 3
  %12 = load i8, i8* %11, align 8
  %13 = and i8 %12, 2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %22, label %17

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %4, i64 0, i32 8, i32 0
  br label %19

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %8, i64 0, i32 5, i32 0
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi i32* [ %16, %15 ], [ %18, %17 ]
  %21 = load i32, i32* %20, align 4
  br label %213

22:                                               ; preds = %10, %6
  %23 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %24 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %23, i64 0, i32 0
  %25 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %23, i64 0, i32 0, i32 10
  %26 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %25, align 8
  %27 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 4, !range !4
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %48

32:                                               ; preds = %28, %22
  %33 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %23, i64 0, i32 0, i32 12, i32 0, i32 0
  %34 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %33, align 8
  %35 = icmp eq %"struct.blink::LayoutBoxRareData"* %34, null
  br i1 %35, label %83, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %34, i64 0, i32 2, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, -64
  br i1 %39, label %83, label %40

40:                                               ; preds = %36
  br i1 %27, label %50, label %41

41:                                               ; preds = %40
  %42 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %43 = load i8, i8* %42, align 4, !range !4
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %23, i64 0, i32 0, i32 12, i32 0, i32 0
  %47 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %46, align 8
  br label %50

48:                                               ; preds = %28, %41
  %49 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %53

50:                                               ; preds = %45, %40
  %51 = phi %"struct.blink::LayoutBoxRareData"* [ %47, %45 ], [ %34, %40 ]
  %52 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %51, i64 0, i32 2, i32 0
  br label %53

53:                                               ; preds = %48, %50
  %54 = phi i32* [ %49, %48 ], [ %52, %50 ]
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %23, i64 0, i32 0, i32 0
  %57 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %56) #20
  %58 = icmp sgt i32 %57, -1
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %55, i32 %57) #20
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !2
  %64 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %24) #20
  %65 = extractvalue { i64, i64 } %64, 1
  %66 = trunc i64 %65 to i32
  %67 = lshr i64 %65, 32
  %68 = trunc i64 %67 to i32
  %69 = icmp slt i32 %68, 0
  %70 = select i1 %69, i32 -2147483648, i32 2147483647
  %71 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %66, i32 %68) #20
  %72 = extractvalue { i32, i1 } %71, 1
  %73 = extractvalue { i32, i1 } %71, 0
  %74 = select i1 %72, i32 %70, i32 %73, !prof !2
  %75 = icmp sgt i32 %74, -1
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %63, i32 %74) #20
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !2
  %81 = icmp sgt i32 %80, 0
  %82 = select i1 %81, i32 %80, i32 0
  br label %213

83:                                               ; preds = %36, %32
  %84 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %23, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %85 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %85, i64 0, i32 0, i32 9
  %87 = bitcast [20 x i8]* %86 to i160*
  %88 = load i160, i160* %87, align 8
  %89 = and i160 %88, 15211807202738752817960438464512
  %90 = icmp eq i160 %89, 0
  %91 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %85, i64 0, i32 0, i32 5, i32 0, i32 0
  %92 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %92, i64 0, i32 3
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %92, i64 0, i32 8
  %95 = select i1 %90, %"class.blink::Length"* %93, %"class.blink::Length"* %94
  %96 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %95, i64 0, i32 2
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 2
  br i1 %98, label %165, label %99

99:                                               ; preds = %83
  %100 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %101 = load %"class.blink::Node"*, %"class.blink::Node"** %100, align 8
  %102 = icmp eq %"class.blink::Node"* %101, null
  br i1 %102, label %103, label %110

103:                                              ; preds = %99, %103
  %104 = phi %"class.blink::LayoutObject"* [ %106, %103 ], [ %2, %99 ]
  %105 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %104, i64 0, i32 7
  %106 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %106, i64 0, i32 6, i32 0, i32 0
  %108 = load %"class.blink::Node"*, %"class.blink::Node"** %107, align 8
  %109 = icmp eq %"class.blink::Node"* %108, null
  br i1 %109, label %103, label %110

110:                                              ; preds = %103, %99
  %111 = phi %"class.blink::Node"* [ %101, %99 ], [ %108, %103 ]
  %112 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %111, i64 0, i32 3, i32 0, i32 0
  %113 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %113, i64 0, i32 2, i32 0, i32 0
  %115 = load %"class.blink::Document"*, %"class.blink::Document"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %115, i64 0, i32 113
  %117 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %117, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"class.blink::LocalFrameView"** %118 to %"class.blink::EmbeddedContentView"**
  %120 = load %"class.blink::EmbeddedContentView"*, %"class.blink::EmbeddedContentView"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::EmbeddedContentView", %"class.blink::EmbeddedContentView"* %120, i64 0, i32 1, i32 1
  %122 = bitcast %"class.blink::IntSize"* %121 to i64*
  %123 = load i64, i64* %122, align 4
  %124 = lshr i64 %123, 32
  %125 = select i1 %90, i64 %124, i64 %123
  %126 = trunc i64 %125 to i32
  %127 = icmp sgt i32 %126, 33554431
  br i1 %127, label %132, label %128

128:                                              ; preds = %110
  %129 = icmp slt i32 %126, -33554432
  %130 = shl i32 %126, 6
  %131 = select i1 %129, i32 -2147483648, i32 %130
  br label %132

132:                                              ; preds = %128, %110
  %133 = phi i32 [ 2147483647, %110 ], [ %131, %128 ]
  %134 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %135 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %134, i64 0, i32 0
  %136 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %137 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %138 = or i8 %137, %136
  %139 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %140 = or i8 %138, %139
  %141 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %142 = or i8 %140, %141
  %143 = icmp ne i8 %142, 0
  %144 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %134, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %145 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %145, i64 0, i32 0, i32 9
  %147 = bitcast [20 x i8]* %146 to i160*
  %148 = load i160, i160* %147, align 8
  %149 = and i160 %148, 15211807202738752817960438464512
  %150 = icmp eq i160 %149, 0
  %151 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %145, i64 0, i32 0, i32 5, i32 0, i32 0
  %152 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %151, align 8
  %153 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %152, i64 0, i32 3
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %152, i64 0, i32 8
  %155 = select i1 %150, %"class.blink::Length"* %153, %"class.blink::Length"* %154
  %156 = tail call i32 @_ZNK5blink9LayoutBox27AvailableLogicalHeightUsingERKNS_6LengthENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"* %135, %"class.blink::Length"* dereferenceable(8) %155, i32 0) #20
  %157 = icmp eq i32 %156, -64
  %158 = and i1 %143, %157
  br i1 %158, label %213, label %159, !prof !12

159:                                              ; preds = %132
  %160 = tail call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %135, i32 %156, i32 -64) #20
  %161 = icmp eq i32 %160, -64
  br i1 %161, label %213, label %162

162:                                              ; preds = %159
  %163 = icmp slt i32 %133, %160
  %164 = select i1 %163, i32 %133, i32 %160
  br label %213

165:                                              ; preds = %83
  %166 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %95, i64 0, i32 3
  %167 = load i8, i8* %166, align 2, !range !4
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %172, label %169

169:                                              ; preds = %165
  %170 = bitcast %"class.blink::Length"* %95 to float*
  %171 = load float, float* %170, align 4
  br label %176

172:                                              ; preds = %165
  %173 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %95, i64 0, i32 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = sitofp i32 %174 to float
  br label %176

176:                                              ; preds = %169, %172
  %177 = phi float [ %171, %169 ], [ %175, %172 ]
  %178 = fmul float %177, 6.400000e+01
  %179 = fcmp ult float %178, 0xC1E0000000000000
  %180 = fcmp ugt float %178, 0x41DFFFFFE0000000
  %181 = fcmp ogt float %178, 0xC1E0000000000000
  %182 = select i1 %181, float %178, float 0xC1E0000000000000
  %183 = fptosi float %182 to i32
  %184 = select i1 %179, i32 0, i32 2147483647
  %185 = select i1 %180, i32 %184, i32 %183
  %186 = sitofp i32 %185 to float
  %187 = fmul float %186, 1.562500e-02
  %188 = fmul float %187, 6.400000e+01
  %189 = fcmp ult float %188, 0xC1E0000000000000
  %190 = fcmp ugt float %188, 0x41DFFFFFE0000000
  %191 = fcmp ogt float %188, 0xC1E0000000000000
  %192 = select i1 %191, float %188, float 0xC1E0000000000000
  %193 = fptosi float %192 to i32
  %194 = select i1 %189, i32 0, i32 2147483647
  %195 = select i1 %190, i32 %194, i32 %193
  %196 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %92, i64 0, i32 11
  %197 = load i8, i8* %196, align 4
  %198 = and i8 %197, 2
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %200, label %209

200:                                              ; preds = %176
  %201 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %23, i64 0, i32 0, i32 0
  %202 = tail call i32 @_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %201) #20
  %203 = icmp sgt i32 %202, -1
  %204 = select i1 %203, i32 -2147483648, i32 2147483647
  %205 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %195, i32 %202) #20
  %206 = extractvalue { i32, i1 } %205, 1
  %207 = extractvalue { i32, i1 } %205, 0
  %208 = select i1 %206, i32 %204, i32 %207, !prof !2
  br label %209

209:                                              ; preds = %176, %200
  %210 = phi i32 [ %208, %200 ], [ %195, %176 ]
  %211 = icmp sgt i32 %210, 0
  %212 = select i1 %211, i32 %210, i32 0
  br label %213

213:                                              ; preds = %132, %162, %159, %53, %209, %19
  %214 = phi i32 [ %21, %19 ], [ %82, %53 ], [ %212, %209 ], [ %164, %162 ], [ %133, %159 ], [ %133, %132 ]
  ret i32 %214
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = and i160 %10, 8462480737302404222943232
  %12 = icmp eq i160 %11, 1208925819614629174706176
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = and i96 %15, 68719476736
  %17 = icmp eq i96 %16, 0
  %18 = or i1 %12, %17
  %19 = and i32 %3, -2
  %20 = zext i1 %12 to i32
  %21 = or i32 %20, %3
  %22 = select i1 %18, i32 %21, i32 %19
  tail call void @_ZNK5blink12LayoutObject18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutObject"* %5, %"class.blink::LayoutBoxModelObject"* %1, %"class.blink::TransformState"* dereferenceable(64) %2, i32 %22) #20
  ret void
}

declare void @_ZNK5blink12LayoutObject18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %6 = icmp eq %"class.blink::LayoutBoxModelObject"* %5, %1
  br i1 %6, label %26, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = and i160 %13, 8462480737302404222943232
  %15 = icmp eq i160 %14, 1208925819614629174706176
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = and i96 %18, 68719476736
  %20 = icmp eq i96 %19, 0
  %21 = or i1 %15, %20
  %22 = and i32 %3, -2
  %23 = zext i1 %15 to i32
  %24 = or i32 %23, %3
  %25 = select i1 %21, i32 %24, i32 %22
  tail call void @_ZNK5blink12LayoutObject18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutObject"* %8, %"class.blink::LayoutBoxModelObject"* %1, %"class.blink::TransformState"* dereferenceable(64) %2, i32 %25) #20
  br label %26

26:                                               ; preds = %4, %7
  ret void
}

declare void @_ZNK5blink12LayoutObject18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = lshr i96 %7, 75
  %9 = trunc i96 %8 to i32
  %10 = and i32 %9, 1
  %11 = or i32 %10, 2
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %13, label %19

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %15 = tail call i64 @_ZNK5blink20LayoutBoxModelObject23OffsetForInFlowPositionEv(%"class.blink::LayoutBoxModelObject"* %14) #20
  %16 = lshr i64 %15, 32
  %17 = trunc i64 %16 to i32
  %18 = trunc i64 %15 to i32
  br label %19

19:                                               ; preds = %13, %3
  %20 = phi i32 [ %18, %13 ], [ 0, %3 ]
  %21 = phi i32 [ %17, %13 ], [ 0, %3 ]
  %22 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %23 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %23, i64 147
  %25 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %24, align 8
  %26 = tail call %"class.blink::LayoutBox"* %25(%"class.blink::LayoutBox"* %0) #20
  %27 = icmp eq %"class.blink::LayoutBox"* %26, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %26, i64 0, i32 0, i32 0, i32 5, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %30, i64 0, i32 0, i32 9
  %32 = bitcast [20 x i8]* %31 to i160*
  %33 = load i160, i160* %32, align 8
  %34 = and i160 %33, 15211807202738752817960438464512
  %35 = icmp eq i160 %34, 5070602400912917605986812821504
  br i1 %35, label %41, label %36, !prof !2

36:                                               ; preds = %28, %19
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %38 = bitcast %"class.blink::LayoutRect"* %37 to i64*
  %39 = load i64, i64* %38, align 4
  %40 = trunc i64 %39 to i32
  br label %66

41:                                               ; preds = %28
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %26, i64 0, i32 2, i32 1
  %43 = bitcast %"class.blink::LayoutSize"* %42 to i64*
  %44 = load i64, i64* %43, align 4
  %45 = trunc i64 %44 to i32
  %46 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %47 = bitcast %"class.blink::LayoutSize"* %46 to i64*
  %48 = load i64, i64* %47, align 4
  %49 = trunc i64 %48 to i32
  %50 = icmp sgt i32 %49, -1
  %51 = select i1 %50, i32 -2147483648, i32 2147483647
  %52 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %45, i32 %49) #20
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 %51, i32 %54, !prof !2
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %57 = bitcast %"class.blink::LayoutRect"* %56 to i64*
  %58 = load i64, i64* %57, align 4
  %59 = trunc i64 %58 to i32
  %60 = icmp sgt i32 %59, -1
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %55, i32 %59) #20
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 %61, i32 %64, !prof !2
  br label %66

66:                                               ; preds = %36, %41
  %67 = phi i32 [ %40, %36 ], [ %65, %41 ]
  %68 = phi i64 [ %39, %36 ], [ %58, %41 ]
  %69 = lshr i64 %68, 32
  %70 = trunc i64 %69 to i32
  %71 = icmp slt i32 %67, 0
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %20, i32 %67) #20
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !2
  %77 = icmp slt i32 %70, 0
  %78 = select i1 %77, i32 -2147483648, i32 2147483647
  %79 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %70) #20
  %80 = extractvalue { i32, i1 } %79, 1
  %81 = extractvalue { i32, i1 } %79, 0
  %82 = select i1 %80, i32 %78, i32 %81, !prof !2
  %83 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %84 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %83 to i96*
  %85 = load i96, i96* %84, align 4
  %86 = and i96 %85, 8589934592
  %87 = icmp eq i96 %86, 0
  br i1 %87, label %114, label %88

88:                                               ; preds = %66
  %89 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %90 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %90, i64 0, i32 0, i32 9
  %92 = bitcast [20 x i8]* %91 to i160*
  %93 = load i160, i160* %92, align 8
  %94 = lshr i160 %93, 74
  %95 = trunc i160 %94 to i32
  %96 = and i32 %95, 7
  switch i32 %96, label %97 [
    i32 5, label %114
    i32 2, label %114
  ]

97:                                               ; preds = %88
  %98 = tail call i64 @_ZNK5blink12LayoutObject29OffsetFromScrollableContainerEPKS0_b(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"* %1, i1 zeroext %2) #20
  %99 = trunc i64 %98 to i32
  %100 = lshr i64 %98, 32
  %101 = trunc i64 %100 to i32
  %102 = icmp slt i32 %99, 0
  %103 = select i1 %102, i32 -2147483648, i32 2147483647
  %104 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %76, i32 %99) #20
  %105 = extractvalue { i32, i1 } %104, 1
  %106 = extractvalue { i32, i1 } %104, 0
  %107 = select i1 %105, i32 %103, i32 %106, !prof !2
  %108 = icmp slt i32 %101, 0
  %109 = select i1 %108, i32 -2147483648, i32 2147483647
  %110 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %82, i32 %101) #20
  %111 = extractvalue { i32, i1 } %110, 1
  %112 = extractvalue { i32, i1 } %110, 0
  %113 = select i1 %111, i32 %109, i32 %112, !prof !2
  br label %114

114:                                              ; preds = %88, %88, %66, %97
  %115 = phi i32 [ %107, %97 ], [ %76, %88 ], [ %76, %66 ], [ %76, %88 ]
  %116 = phi i32 [ %113, %97 ], [ %82, %88 ], [ %82, %66 ], [ %82, %88 ]
  %117 = load i96, i96* %6, align 4
  %118 = and i96 %117, 113336795588871485128704
  %119 = icmp eq i96 %118, 75557863725914323419136
  br i1 %119, label %120, label %181

120:                                              ; preds = %114
  %121 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %122 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %121, align 8
  %123 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %122, i64 26
  %124 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %123, align 8
  %125 = tail call zeroext i1 %124(%"class.blink::LayoutObject"* %1) #20
  br i1 %125, label %126, label %181

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %128 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %128, i64 0, i32 0, i32 9
  %130 = bitcast [20 x i8]* %129 to i160*
  %131 = load i160, i160* %130, align 8
  %132 = lshr i160 %131, 80
  %133 = trunc i160 %132 to i32
  %134 = and i32 %133, 7
  %135 = icmp eq i32 %134, 4
  %136 = and i160 %131, 128849018880
  %137 = icmp eq i160 %136, 42949672960
  %138 = and i1 %137, %135
  %139 = select i1 %138, i32 3, i32 %134
  switch i32 %139, label %181 [
    i32 0, label %140
    i32 1, label %159
  ]

140:                                              ; preds = %126
  %141 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %142 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %142, i64 0, i32 0, i32 9
  %144 = bitcast [20 x i8]* %143 to i160*
  %145 = load i160, i160* %144, align 8
  %146 = lshr i160 %145, 80
  %147 = trunc i160 %146 to i32
  %148 = and i32 %147, 7
  %149 = icmp eq i32 %148, 4
  %150 = and i160 %145, 128849018880
  %151 = icmp eq i160 %150, 42949672960
  %152 = and i1 %151, %149
  %153 = icmp ne i32 %148, 3
  %154 = xor i1 %153, %152
  br i1 %154, label %163, label %155

155:                                              ; preds = %140
  %156 = load i96, i96* %84, align 4
  %157 = and i96 %156, 68719476736
  %158 = icmp eq i96 %157, 0
  br i1 %158, label %181, label %163

159:                                              ; preds = %126
  %160 = load i96, i96* %84, align 4
  %161 = and i96 %160, 68719476736
  %162 = icmp eq i96 %161, 0
  br i1 %162, label %181, label %163

163:                                              ; preds = %155, %159, %140
  %164 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutInline"*
  %165 = tail call i64 @_ZNK5blink12LayoutInline31OffsetForInFlowPositionedInlineERKNS_9LayoutBoxE(%"class.blink::LayoutInline"* %164, %"class.blink::LayoutBox"* dereferenceable(216) %0) #20
  %166 = trunc i64 %165 to i32
  %167 = lshr i64 %165, 32
  %168 = trunc i64 %167 to i32
  %169 = icmp slt i32 %166, 0
  %170 = select i1 %169, i32 -2147483648, i32 2147483647
  %171 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %115, i32 %166) #20
  %172 = extractvalue { i32, i1 } %171, 1
  %173 = extractvalue { i32, i1 } %171, 0
  %174 = select i1 %172, i32 %170, i32 %173, !prof !2
  %175 = icmp slt i32 %168, 0
  %176 = select i1 %175, i32 -2147483648, i32 2147483647
  %177 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %116, i32 %168) #20
  %178 = extractvalue { i32, i1 } %177, 1
  %179 = extractvalue { i32, i1 } %177, 0
  %180 = select i1 %178, i32 %176, i32 %179, !prof !2
  br label %181

181:                                              ; preds = %155, %159, %126, %163, %120, %114
  %182 = phi i32 [ %174, %163 ], [ %115, %159 ], [ %115, %120 ], [ %115, %114 ], [ %115, %155 ], [ %115, %126 ]
  %183 = phi i32 [ %180, %163 ], [ %116, %159 ], [ %116, %120 ], [ %116, %114 ], [ %116, %155 ], [ %116, %126 ]
  %184 = zext i32 %183 to i64
  %185 = shl nuw i64 %184, 32
  %186 = zext i32 %182 to i64
  %187 = or i64 %185, %186
  ret i64 %187
}

declare i64 @_ZNK5blink20LayoutBoxModelObject23OffsetForInFlowPositionEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #5

declare i64 @_ZNK5blink12LayoutObject29OffsetFromScrollableContainerEPKS0_b(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #5

declare i64 @_ZNK5blink12LayoutInline31OffsetForInFlowPositionedInlineERKNS_9LayoutBoxE(%"class.blink::LayoutInline"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InlineBox"* @_ZN5blink9LayoutBox15CreateInlineBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = tail call i8* @_ZN5blink9InlineBoxnwEm(i64 64) #20
  %4 = bitcast i8* %3 to %"class.blink::InlineBox"*
  %5 = bitcast i8* %3 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  store i8 21, i8* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [35 x i8*] }, { [35 x i8*] }* @_ZTVN5blink9InlineBoxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  %8 = getelementptr inbounds i8, i8* %3, i64 40
  %9 = bitcast i8* %8 to %"class.blink::LayoutObject"**
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #20
  store %"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject"** %9, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 48
  %11 = bitcast i8* %10 to i32*
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %3, i64 52
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %3, i64 56
  %15 = bitcast i8* %14 to i32*
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %3, i64 60
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, -1073741824
  %20 = or i32 %19, 18432
  store i32 %20, i32* %17, align 4
  ret %"class.blink::InlineBox"* %4
}

declare i8* @_ZN5blink9InlineBoxnwEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox14DirtyLineBoxesEb(%"class.blink::LayoutBox"* nocapture, i1 zeroext) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 268435456
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %8, label %21

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11, i32 0
  %10 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %9, align 8
  %11 = icmp eq %"class.blink::InlineBox"* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::InlineBox"* %10 to void (%"class.blink::InlineBox"*)***
  %14 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %13, align 8
  br i1 %1, label %15, label %18

15:                                               ; preds = %12
  %16 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %14, i64 5
  %17 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %16, align 8
  tail call void %17(%"class.blink::InlineBox"* nonnull %10) #20
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %9, align 8
  br label %21

18:                                               ; preds = %12
  %19 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %14, i64 29
  %20 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %19, align 8
  tail call void %20(%"class.blink::InlineBox"* nonnull %10) #20
  br label %21

21:                                               ; preds = %2, %8, %15, %18
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox18HasInlineFragmentsEv(%"class.blink::LayoutBox"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  br i1 %6, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %union.anon.3279, %union.anon.3279* %7, i64 0, i32 0
  %10 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %9, align 8
  %11 = icmp ne %"class.blink::InlineBox"* %10, null
  br label %16

12:                                               ; preds = %1
  %13 = bitcast %union.anon.3279* %7 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = icmp ne i32 %14, 0
  br label %16

16:                                               ; preds = %12, %8
  %17 = phi i1 [ %15, %12 ], [ %11, %8 ]
  ret i1 %17
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_12LayoutObjectE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutBox"*, i32) unnamed_addr #4 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 268435456
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #20
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 3189, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #20
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #20
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN5blinklsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_12LayoutObjectE(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, %"class.blink::LayoutObject"* dereferenceable(88) %10) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #20
  br label %14

14:                                               ; preds = %2, %9
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %16 = bitcast %union.anon.3279* %15 to i32*
  store i32 %1, i32* %16, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutBox"*, i1 zeroext) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 268435456
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %11 = bitcast %union.anon.3279* %10 to i32*
  store i32 0, i32* %11, align 8
  br label %44

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11, i32 0
  %14 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %13, align 8
  %15 = icmp eq %"class.blink::InlineBox"* %14, null
  br i1 %15, label %44, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %20, label %27

20:                                               ; preds = %16, %20
  %21 = phi %"class.blink::LayoutObject"* [ %23, %20 ], [ %3, %16 ]
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 7
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 6, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %20, label %27

27:                                               ; preds = %20, %16
  %28 = phi %"class.blink::Node"* [ %18, %16 ], [ %25, %20 ]
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %32, i64 0, i32 5, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, 19
  br i1 %35, label %38, label %36

36:                                               ; preds = %27
  tail call void @_ZN5blink9InlineBox6RemoveENS_13MarkLineBoxesE(%"class.blink::InlineBox"* nonnull %14, i32 0) #20
  %37 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %13, align 8
  br label %38

38:                                               ; preds = %36, %27
  %39 = phi %"class.blink::InlineBox"* [ %37, %36 ], [ %14, %27 ]
  %40 = bitcast %"class.blink::InlineBox"* %39 to void (%"class.blink::InlineBox"*)***
  %41 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %41, i64 5
  %43 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %42, align 8
  tail call void %43(%"class.blink::InlineBox"* %39) #20
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %13, align 8
  br label %44

44:                                               ; preds = %38, %12, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox20DeleteLineBoxWrapperEv(%"class.blink::LayoutBox"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 268435456
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %8, label %40

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11, i32 0
  %10 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %9, align 8
  %11 = icmp eq %"class.blink::InlineBox"* %10, null
  br i1 %11, label %40, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %16, label %23

16:                                               ; preds = %12, %16
  %17 = phi %"class.blink::LayoutObject"* [ %19, %16 ], [ %2, %12 ]
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 7
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 6, i32 0, i32 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %16, label %23

23:                                               ; preds = %16, %12
  %24 = phi %"class.blink::Node"* [ %14, %12 ], [ %21, %16 ]
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 5, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, 19
  br i1 %31, label %34, label %32

32:                                               ; preds = %23
  tail call void @_ZN5blink9InlineBox6RemoveENS_13MarkLineBoxesE(%"class.blink::InlineBox"* nonnull %10, i32 0) #20
  %33 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %9, align 8
  br label %34

34:                                               ; preds = %32, %23
  %35 = phi %"class.blink::InlineBox"* [ %33, %32 ], [ %10, %23 ]
  %36 = bitcast %"class.blink::InlineBox"* %35 to void (%"class.blink::InlineBox"*)***
  %37 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %37, i64 5
  %39 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %38, align 8
  tail call void %39(%"class.blink::InlineBox"* %35) #20
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %9, align 8
  br label %40

40:                                               ; preds = %1, %8, %34
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox22NGPhysicalFragmentList16HasFragmentItemsEv(%"class.blink::LayoutBox::NGPhysicalFragmentList"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox::NGPhysicalFragmentList", %"class.blink::LayoutBox::NGPhysicalFragmentList"* %0, i64 0, i32 0
  %3 = load %"class.WTF::Vector.3248"*, %"class.WTF::Vector.3248"** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %3, i64 0, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %26, label %13

11:                                               ; preds = %13
  %12 = icmp eq %class.scoped_refptr.3247* %25, %9
  br i1 %12, label %26, label %13

13:                                               ; preds = %1, %11
  %14 = phi %class.scoped_refptr.3247* [ %25, %11 ], [ %5, %1 ]
  %15 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %14, i64 0, i32 0
  %16 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %16, i64 0, i32 3, i32 0
  %18 = bitcast %"class.blink::NGPhysicalFragment"** %17 to %"class.blink::NGPhysicalBoxFragment"**
  %19 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %19, i64 0, i32 1
  %21 = bitcast i24* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %14, i64 1
  br i1 %24, label %11, label %26

26:                                               ; preds = %13, %11, %1
  %27 = phi i1 [ false, %1 ], [ false, %11 ], [ true, %13 ]
  ret i1 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(72) %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox22NGPhysicalFragmentList8IteratordeEv(%"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator", %"class.blink::LayoutBox::NGPhysicalFragmentList::Iterator"* %0, i64 0, i32 0
  %3 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %2, align 8
  %4 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %3, i64 0, i32 0
  %5 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %5, i64 0, i32 3, i32 0
  %7 = bitcast %"class.blink::NGPhysicalFragment"** %6 to %"class.blink::NGPhysicalBoxFragment"**
  %8 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %7, align 8
  ret %"class.blink::NGPhysicalBoxFragment"* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox22NGPhysicalFragmentList7IndexOfERKNS_21NGPhysicalBoxFragmentE(%"class.blink::LayoutBox::NGPhysicalFragmentList"* nocapture readonly, %"class.blink::NGPhysicalBoxFragment"* readnone dereferenceable(72)) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox::NGPhysicalFragmentList", %"class.blink::LayoutBox::NGPhysicalFragmentList"* %0, i64 0, i32 0
  %4 = load %"class.WTF::Vector.3248"*, %"class.WTF::Vector.3248"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %4, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %26, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 0
  br label %14

14:                                               ; preds = %12, %22
  %15 = phi %class.scoped_refptr.3247* [ %6, %12 ], [ %24, %22 ]
  %16 = phi i32 [ 0, %12 ], [ %23, %22 ]
  %17 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %15, i64 0, i32 0
  %18 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %18, i64 0, i32 3, i32 0
  %20 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %19, align 8
  %21 = icmp eq %"class.blink::NGPhysicalFragment"* %20, %13
  br i1 %21, label %26, label %22

22:                                               ; preds = %14
  %23 = add i32 %16, 1
  %24 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %15, i64 1
  %25 = icmp eq %class.scoped_refptr.3247* %24, %10
  br i1 %25, label %26, label %14

26:                                               ; preds = %22, %14, %2
  %27 = phi i32 [ -1, %2 ], [ %16, %14 ], [ -1, %22 ]
  ret i32 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox22NGPhysicalFragmentList8ContainsERKNS_21NGPhysicalBoxFragmentE(%"class.blink::LayoutBox::NGPhysicalFragmentList"* nocapture readonly, %"class.blink::NGPhysicalBoxFragment"* readnone dereferenceable(72)) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox::NGPhysicalFragmentList", %"class.blink::LayoutBox::NGPhysicalFragmentList"* %0, i64 0, i32 0
  %4 = load %"class.WTF::Vector.3248"*, %"class.WTF::Vector.3248"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %4, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %6, i64 %9
  %11 = icmp eq i32 %8, 0
  br i1 %11, label %26, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 0
  br label %14

14:                                               ; preds = %22, %12
  %15 = phi %class.scoped_refptr.3247* [ %6, %12 ], [ %24, %22 ]
  %16 = phi i32 [ 0, %12 ], [ %23, %22 ]
  %17 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %15, i64 0, i32 0
  %18 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %18, i64 0, i32 3, i32 0
  %20 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %19, align 8
  %21 = icmp eq %"class.blink::NGPhysicalFragment"* %20, %13
  br i1 %21, label %26, label %22

22:                                               ; preds = %14
  %23 = add i32 %16, 1
  %24 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %15, i64 1
  %25 = icmp eq %class.scoped_refptr.3247* %24, %10
  br i1 %25, label %26, label %14

26:                                               ; preds = %14, %22, %2
  %27 = phi i32 [ -1, %2 ], [ -1, %22 ], [ %16, %14 ]
  %28 = icmp ne i32 %27, -1
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox21SetCachedLayoutResultE13scoped_refptrIKNS_14NGLayoutResultEE(%"class.blink::LayoutBox"*, %"class.blink::NGLayoutResult"*) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.blink::ObjectPaintInvalidator", align 8
  %4 = alloca %"class.blink::ObjectPaintInvalidator", align 8
  %5 = ptrtoint %"class.blink::NGLayoutResult"* %1 to i64
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 2, i32 3, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 65536
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 7
  %12 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %11, i64 0, i32 0
  %13 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %12, align 8
  %14 = icmp ne %"class.blink::NGLayoutResult"* %13, null
  br i1 %10, label %56, label %15

15:                                               ; preds = %2
  br i1 %14, label %16, label %28

16:                                               ; preds = %15
  %17 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %13, i64 0, i32 3, i32 0
  %18 = bitcast %"class.blink::NGPhysicalFragment"** %17 to %"class.blink::NGPhysicalBoxFragment"**
  %19 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %19, i64 0, i32 1
  %21 = bitcast i24* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %16
  %26 = bitcast %"class.blink::ObjectPaintInvalidator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #20
  %27 = getelementptr inbounds %"class.blink::ObjectPaintInvalidator", %"class.blink::ObjectPaintInvalidator"* %4, i64 0, i32 0
  store %"class.blink::LayoutObject"* %6, %"class.blink::LayoutObject"** %27, align 8
  call void @_ZN5blink22ObjectPaintInvalidator32SlowSetPaintingLayerNeedsRepaintEv(%"class.blink::ObjectPaintInvalidator"* nonnull %4) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #20
  br label %28

28:                                               ; preds = %25, %16, %15
  %29 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %30 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, i64 92
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %31, align 8
  %33 = call zeroext i1 %32(%"class.blink::LayoutObject"* %6, i32 46) #20
  br i1 %33, label %34, label %41

34:                                               ; preds = %28
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %29, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, i64 92
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %36, align 8
  %38 = call zeroext i1 %37(%"class.blink::LayoutObject"* %6, i32 47) #20
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::LayoutNGTableCell"*
  call void @_ZNK5blink17LayoutNGTableCell39InvalidateLayoutResultCacheAfterMeasureEv(%"class.blink::LayoutNGTableCell"* %40) #20
  br label %41

41:                                               ; preds = %39, %34, %28
  %42 = icmp eq %"class.blink::NGLayoutResult"* %1, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %44) #20
  br label %45

45:                                               ; preds = %41, %43
  %46 = bitcast %class.scoped_refptr.3247* %11 to i64*
  %47 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %12, align 8
  store i64 %5, i64* %46, align 8
  %48 = icmp eq %"class.blink::NGLayoutResult"* %47, null
  br i1 %48, label %102, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %47, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %50) #20
  %51 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %94

54:                                               ; preds = %49
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %47) #20
  %55 = bitcast %"class.blink::NGLayoutResult"* %47 to i8*
  call void @free(i8* %55) #20
  br label %94

56:                                               ; preds = %2
  br i1 %14, label %57, label %102

57:                                               ; preds = %56
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %59 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %58 to i96*
  %60 = load i96, i96* %59, align 4
  %61 = and i96 %60, 63
  %62 = icmp eq i96 %61, 0
  br i1 %62, label %94, label %63

63:                                               ; preds = %57
  %64 = and i96 %60, 48
  %65 = icmp ne i96 %64, 0
  %66 = and i96 %60, 13
  %67 = icmp eq i96 %66, 0
  %68 = and i1 %67, %65
  br i1 %68, label %94, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %13, i64 0, i32 3, i32 0
  %71 = bitcast %"class.blink::NGPhysicalFragment"** %70 to %"class.blink::NGPhysicalBoxFragment"**
  %72 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %72, i64 0, i32 1
  %74 = bitcast i24* %73 to i32*
  %75 = load i32, i32* %74, align 8
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %80

78:                                               ; preds = %69
  %79 = bitcast %class.scoped_refptr.3247* %11 to i64*
  store i64 0, i64* %79, align 8
  br label %86

80:                                               ; preds = %69
  %81 = bitcast %"class.blink::ObjectPaintInvalidator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #20
  %82 = getelementptr inbounds %"class.blink::ObjectPaintInvalidator", %"class.blink::ObjectPaintInvalidator"* %3, i64 0, i32 0
  store %"class.blink::LayoutObject"* %6, %"class.blink::LayoutObject"** %82, align 8
  call void @_ZN5blink22ObjectPaintInvalidator32SlowSetPaintingLayerNeedsRepaintEv(%"class.blink::ObjectPaintInvalidator"* nonnull %3) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #20
  %83 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %12, align 8
  %84 = bitcast %class.scoped_refptr.3247* %11 to i64*
  store i64 0, i64* %84, align 8
  %85 = icmp eq %"class.blink::NGLayoutResult"* %83, null
  br i1 %85, label %102, label %86

86:                                               ; preds = %78, %80
  %87 = phi %"class.blink::NGLayoutResult"* [ %13, %78 ], [ %83, %80 ]
  %88 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %87, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #20
  %89 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %94

92:                                               ; preds = %86
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %87) #20
  %93 = bitcast %"class.blink::NGLayoutResult"* %87 to i8*
  call void @free(i8* %93) #20
  br label %94

94:                                               ; preds = %92, %86, %54, %49, %63, %57
  %95 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %12, align 8
  %96 = icmp ne %"class.blink::NGLayoutResult"* %95, null
  %97 = icmp ne %"class.blink::NGLayoutResult"* %95, %1
  %98 = and i1 %96, %97
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %95, i64 0, i32 3, i32 0
  %101 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %100, align 8
  call void @_ZNK5blink18NGPhysicalFragment18SetChildrenInvalidEv(%"class.blink::NGPhysicalFragment"* %101) #20
  br label %102

102:                                              ; preds = %45, %80, %56, %99, %94
  %103 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %104 = load i32, i32* %103, align 4
  switch i32 %104, label %105 [
    i32 0, label %107
    i32 1, label %106
  ]

105:                                              ; preds = %102
  call void @_ZN5blink9LayoutBox19ShrinkLayoutResultsEj(%"class.blink::LayoutBox"* %0, i32 1) #20
  br label %106

106:                                              ; preds = %102, %105
  call void @_ZN5blink9LayoutBox19ReplaceLayoutResultE13scoped_refptrIKNS_14NGLayoutResultEEj(%"class.blink::LayoutBox"* %0, %"class.blink::NGLayoutResult"* %1, i32 0) #20
  br label %108

107:                                              ; preds = %102
  call void @_ZN5blink9LayoutBox15AddLayoutResultE13scoped_refptrIKNS_14NGLayoutResultEE(%"class.blink::LayoutBox"* %0, %"class.blink::NGLayoutResult"* %1) #20
  br label %108

108:                                              ; preds = %107, %106
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox15InvalidateItemsERKNS_14NGLayoutResultE(%"class.blink::LayoutBox"*, %"class.blink::NGLayoutResult"* nocapture readonly dereferenceable(64)) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.blink::ObjectPaintInvalidator", align 8
  %4 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 3, i32 0
  %5 = bitcast %"class.blink::NGPhysicalFragment"** %4 to %"class.blink::NGPhysicalBoxFragment"**
  %6 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %6, i64 0, i32 1
  %8 = bitcast i24* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %14 = bitcast %"class.blink::ObjectPaintInvalidator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #20
  %15 = getelementptr inbounds %"class.blink::ObjectPaintInvalidator", %"class.blink::ObjectPaintInvalidator"* %3, i64 0, i32 0
  store %"class.blink::LayoutObject"* %13, %"class.blink::LayoutObject"** %15, align 8
  call void @_ZN5blink22ObjectPaintInvalidator32SlowSetPaintingLayerNeedsRepaintEv(%"class.blink::ObjectPaintInvalidator"* nonnull %3) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #20
  br label %16

16:                                               ; preds = %2, %12
  ret void
}

declare void @_ZNK5blink17LayoutNGTableCell39InvalidateLayoutResultCacheAfterMeasureEv(%"class.blink::LayoutNGTableCell"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox15AddLayoutResultE13scoped_refptrIKNS_14NGLayoutResultEEj(%"class.blink::LayoutBox"*, %"class.blink::NGLayoutResult"*, i32) local_unnamed_addr #4 align 2 {
  %4 = icmp eq i32 %2, -1
  br i1 %4, label %14, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ugt i32 %7, %2
  br i1 %8, label %9, label %14

9:                                                ; preds = %5
  %10 = add nuw i32 %2, 1
  %11 = icmp ugt i32 %7, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %9
  tail call void @_ZN5blink9LayoutBox19ShrinkLayoutResultsEj(%"class.blink::LayoutBox"* %0, i32 %10)
  br label %13

13:                                               ; preds = %12, %9
  tail call void @_ZN5blink9LayoutBox19ReplaceLayoutResultE13scoped_refptrIKNS_14NGLayoutResultEEj(%"class.blink::LayoutBox"* %0, %"class.blink::NGLayoutResult"* %1, i32 %2)
  br label %15

14:                                               ; preds = %3, %5
  tail call void @_ZN5blink9LayoutBox15AddLayoutResultE13scoped_refptrIKNS_14NGLayoutResultEE(%"class.blink::LayoutBox"* %0, %"class.blink::NGLayoutResult"* %1)
  br label %15

15:                                               ; preds = %13, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox19ShrinkLayoutResultsEj(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.blink::ObjectPaintInvalidator", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp ugt i32 %7, %1
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::ObjectPaintInvalidator"* %3 to i8*
  %11 = getelementptr inbounds %"class.blink::ObjectPaintInvalidator", %"class.blink::ObjectPaintInvalidator"* %3, i64 0, i32 0
  br label %17

12:                                               ; preds = %31, %2
  %13 = phi i32 [ %7, %2 ], [ %33, %31 ]
  %14 = icmp ne i32 %1, 0
  %15 = icmp eq i32 %13, 0
  %16 = or i1 %14, %15
  br i1 %16, label %48, label %35

17:                                               ; preds = %9, %31
  %18 = phi i32 [ %1, %9 ], [ %32, %31 ]
  %19 = call dereferenceable(8) %class.scoped_refptr.3247* @_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %5, i32 %18) #20
  %20 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %19, i64 0, i32 0
  %21 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %21, i64 0, i32 3, i32 0
  %23 = bitcast %"class.blink::NGPhysicalFragment"** %22 to %"class.blink::NGPhysicalBoxFragment"**
  %24 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %24, i64 0, i32 1
  %26 = bitcast i24* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #20
  store %"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"** %11, align 8
  call void @_ZN5blink22ObjectPaintInvalidator32SlowSetPaintingLayerNeedsRepaintEv(%"class.blink::ObjectPaintInvalidator"* nonnull %3) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #20
  br label %31

31:                                               ; preds = %17, %30
  %32 = add nuw i32 %18, 1
  %33 = load i32, i32* %6, align 4
  %34 = icmp ult i32 %32, %33
  br i1 %34, label %17, label %12

35:                                               ; preds = %12
  %36 = call dereferenceable(8) %class.scoped_refptr.3247* @_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %5, i32 0) #20
  %37 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %36, i64 0, i32 0
  %38 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %38, i64 0, i32 3, i32 0
  %40 = bitcast %"class.blink::NGPhysicalFragment"** %39 to %"class.blink::NGPhysicalBoxFragment"**
  %41 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %41, i64 0, i32 1
  %43 = bitcast i24* %42 to i32*
  %44 = load i32, i32* %43, align 8
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %35
  call void @_ZN5blink15NGFragmentItems24ClearAssociatedFragmentsEPNS_12LayoutObjectE(%"class.blink::LayoutObject"* %4) #20
  br label %48

48:                                               ; preds = %35, %12, %47
  %49 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %5, i64 0, i32 0, i32 0, i32 0
  %50 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %49, align 8
  %51 = load i32, i32* %6, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %50, i64 %52
  %54 = icmp eq i32 %51, %1
  br i1 %54, label %73, label %55

55:                                               ; preds = %48
  %56 = zext i32 %1 to i64
  %57 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %50, i64 %56
  br label %58

58:                                               ; preds = %70, %55
  %59 = phi %class.scoped_refptr.3247* [ %71, %70 ], [ %57, %55 ]
  %60 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %59, i64 0, i32 0
  %61 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %60, align 8
  %62 = icmp eq %"class.blink::NGLayoutResult"* %61, null
  br i1 %62, label %70, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %61, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %64) #20
  %65 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %61) #20
  %69 = bitcast %"class.blink::NGLayoutResult"* %61 to i8*
  call void @free(i8* %69) #20
  br label %70

70:                                               ; preds = %68, %63, %58
  %71 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %59, i64 1
  %72 = icmp eq %class.scoped_refptr.3247* %71, %53
  br i1 %72, label %73, label %58

73:                                               ; preds = %70, %48
  store i32 %1, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox19ReplaceLayoutResultE13scoped_refptrIKNS_14NGLayoutResultEEj(%"class.blink::LayoutBox"*, %"class.blink::NGLayoutResult"*, i32) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.blink::ObjectPaintInvalidator", align 8
  %5 = ptrtoint %"class.blink::NGLayoutResult"* %1 to i64
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8
  %8 = tail call dereferenceable(8) %class.scoped_refptr.3247* @_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %7, i32 %2) #20
  %9 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %8, i64 0, i32 0
  %10 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %9, align 8
  %11 = icmp eq %"class.blink::NGLayoutResult"* %10, %1
  br i1 %11, label %106, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 3, i32 0
  %14 = bitcast %"class.blink::NGPhysicalFragment"** %13 to %"class.blink::NGPhysicalBoxFragment"**
  %15 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %10, i64 0, i32 3, i32 0
  %17 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %15, i64 0, i32 0
  %19 = icmp eq %"class.blink::NGPhysicalFragment"* %17, %18
  br i1 %19, label %93, label %20

20:                                               ; preds = %12
  %21 = tail call dereferenceable(8) %class.scoped_refptr.3247* @_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %7, i32 0) #20
  %22 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %21, i64 0, i32 0
  %23 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %23, i64 0, i32 3, i32 0
  %25 = bitcast %"class.blink::NGPhysicalFragment"** %24 to %"class.blink::NGPhysicalBoxFragment"**
  %26 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %26, i64 0, i32 1
  %28 = bitcast i24* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %46, label %32

32:                                               ; preds = %20
  %33 = icmp eq i32 %2, 0
  br i1 %33, label %34, label %45

34:                                               ; preds = %32
  %35 = bitcast %"class.blink::NGPhysicalFragment"** %16 to %"class.blink::NGPhysicalBoxFragment"**
  %36 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %36, i64 0, i32 1
  %38 = bitcast i24* %37 to i32*
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %34
  %43 = bitcast %"class.blink::ObjectPaintInvalidator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #20
  %44 = getelementptr inbounds %"class.blink::ObjectPaintInvalidator", %"class.blink::ObjectPaintInvalidator"* %4, i64 0, i32 0
  store %"class.blink::LayoutObject"* %6, %"class.blink::LayoutObject"** %44, align 8
  call void @_ZN5blink22ObjectPaintInvalidator32SlowSetPaintingLayerNeedsRepaintEv(%"class.blink::ObjectPaintInvalidator"* nonnull %4) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #20
  br label %45

45:                                               ; preds = %42, %34, %32
  call void @_ZN5blink15NGFragmentItems24ClearAssociatedFragmentsEPNS_12LayoutObjectE(%"class.blink::LayoutObject"* %6) #20
  br label %46

46:                                               ; preds = %20, %45
  %47 = call dereferenceable(8) %class.scoped_refptr.3247* @_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %7, i32 %2) #20
  %48 = bitcast %class.scoped_refptr.3247* %47 to i64*
  %49 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %47, i64 0, i32 0
  %50 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %49, align 8
  store i64 %5, i64* %48, align 8
  %51 = icmp eq %"class.blink::NGLayoutResult"* %50, null
  br i1 %51, label %59, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %50, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %53) #20
  %54 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %50, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %52
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %50) #20
  %58 = bitcast %"class.blink::NGLayoutResult"* %50 to i8*
  call void @free(i8* %58) #20
  br label %59

59:                                               ; preds = %57, %52, %46
  %60 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %15, i64 0, i32 0, i32 4, i32 0
  %61 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %60, align 8
  %62 = icmp eq %"class.blink::NGBreakToken"* %61, null
  br i1 %62, label %63, label %115

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %65 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %64 to i96*
  %66 = load i96, i96* %65, align 4
  %67 = and i96 %66, 17592186044416
  %68 = icmp eq i96 %67, 0
  br i1 %68, label %115, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %71 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %70, align 8
  %72 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %71, i64 %74
  %76 = icmp eq i32 %73, 0
  br i1 %76, label %115, label %79

77:                                               ; preds = %79
  %78 = icmp eq %class.scoped_refptr.3247* %91, %75
  br i1 %78, label %115, label %79

79:                                               ; preds = %69, %77
  %80 = phi %class.scoped_refptr.3247* [ %91, %77 ], [ %71, %69 ]
  %81 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %80, i64 0, i32 0
  %82 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %82, i64 0, i32 3, i32 0
  %84 = bitcast %"class.blink::NGPhysicalFragment"** %83 to %"class.blink::NGPhysicalBoxFragment"**
  %85 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %85, i64 0, i32 1
  %87 = bitcast i24* %86 to i32*
  %88 = load i32, i32* %87, align 8
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %80, i64 1
  br i1 %90, label %77, label %92

92:                                               ; preds = %79
  call void @_ZN5blink15NGFragmentItems19FinalizeAfterLayoutERKN3WTF6VectorI13scoped_refptrIKNS_14NGLayoutResultEELj1ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.3248"* dereferenceable(24) %7) #20
  br label %115

93:                                               ; preds = %12
  %94 = tail call dereferenceable(8) %class.scoped_refptr.3247* @_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %7, i32 %2) #20
  %95 = bitcast %class.scoped_refptr.3247* %94 to i64*
  %96 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %94, i64 0, i32 0
  %97 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %96, align 8
  store i64 %5, i64* %95, align 8
  %98 = icmp eq %"class.blink::NGLayoutResult"* %97, null
  br i1 %98, label %115, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %97, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %100) #20
  %101 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %115

104:                                              ; preds = %99
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %97) #20
  %105 = bitcast %"class.blink::NGLayoutResult"* %97 to i8*
  tail call void @free(i8* %105) #20
  br label %115

106:                                              ; preds = %3
  %107 = icmp eq %"class.blink::NGLayoutResult"* %1, null
  br i1 %107, label %115, label %108

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %109) #20
  %110 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %108
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %1) #20
  %114 = bitcast %"class.blink::NGLayoutResult"* %1 to i8*
  tail call void @free(i8* %114) #20
  br label %115

115:                                              ; preds = %77, %69, %63, %104, %99, %93, %59, %92, %106, %108, %113
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox15AddLayoutResultE13scoped_refptrIKNS_14NGLayoutResultEE(%"class.blink::LayoutBox"*, %"class.blink::NGLayoutResult"*) local_unnamed_addr #4 align 2 {
  %3 = alloca %class.scoped_refptr.3247, align 8
  %4 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %3, i64 0, i32 0
  store %"class.blink::NGLayoutResult"* %1, %"class.blink::NGLayoutResult"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %1, i64 0, i32 3, i32 0
  %6 = bitcast %"class.blink::NGPhysicalFragment"** %5 to %"class.blink::NGPhysicalBoxFragment"**
  %7 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %23, label %14, !prof !2

14:                                               ; preds = %2
  %15 = ptrtoint %"class.blink::NGLayoutResult"* %1 to i64
  %16 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %8, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %16, align 8
  %18 = zext i32 %10 to i64
  %19 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %17, i64 %18
  %20 = bitcast %class.scoped_refptr.3247* %19 to i64*
  store i64 %15, i64* %20, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %4, align 8
  %21 = load i32, i32* %9, align 4
  %22 = add i32 %21, 1
  store i32 %22, i32* %9, align 4
  br label %24

23:                                               ; preds = %2
  call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.3248"* %8, %class.scoped_refptr.3247* nonnull dereferenceable(8) %3) #20
  br label %24

24:                                               ; preds = %14, %23
  %25 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %7, i64 0, i32 0, i32 4, i32 0
  %26 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %25, align 8
  %27 = icmp eq %"class.blink::NGBreakToken"* %26, null
  br i1 %27, label %28, label %57

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 17592186044416
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %57, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %36 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %35, align 8
  %37 = load i32, i32* %9, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %57, label %43

41:                                               ; preds = %43
  %42 = icmp eq %class.scoped_refptr.3247* %55, %39
  br i1 %42, label %57, label %43

43:                                               ; preds = %34, %41
  %44 = phi %class.scoped_refptr.3247* [ %55, %41 ], [ %36, %34 ]
  %45 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %44, i64 0, i32 0
  %46 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %46, i64 0, i32 3, i32 0
  %48 = bitcast %"class.blink::NGPhysicalFragment"** %47 to %"class.blink::NGPhysicalBoxFragment"**
  %49 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %49, i64 0, i32 1
  %51 = bitcast i24* %50 to i32*
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %44, i64 1
  br i1 %54, label %41, label %56

56:                                               ; preds = %43
  call void @_ZN5blink15NGFragmentItems19FinalizeAfterLayoutERKN3WTF6VectorI13scoped_refptrIKNS_14NGLayoutResultEELj1ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.3248"* dereferenceable(24) %8) #20
  br label %57

57:                                               ; preds = %41, %34, %28, %24, %56
  %58 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %4, align 8
  %59 = icmp eq %"class.blink::NGLayoutResult"* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %58, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #20
  %62 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %60
  call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %58) #20
  %66 = bitcast %"class.blink::NGLayoutResult"* %58 to i8*
  call void @free(i8* %66) #20
  br label %67

67:                                               ; preds = %57, %60, %65
  ret void
}

declare void @_ZN5blink15NGFragmentItems19FinalizeAfterLayoutERKN3WTF6VectorI13scoped_refptrIKNS_14NGLayoutResultEELj1ENS1_18PartitionAllocatorEEE(%"class.WTF::Vector.3248"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZN5blink15NGFragmentItems24ClearAssociatedFragmentsEPNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox19ReplaceLayoutResultE13scoped_refptrIKNS_14NGLayoutResultEERKNS_21NGPhysicalBoxFragmentE(%"class.blink::LayoutBox"*, %"class.blink::NGLayoutResult"*, %"class.blink::NGPhysicalBoxFragment"* readnone dereferenceable(72)) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %2, i64 0, i32 0
  br label %13

13:                                               ; preds = %21, %11
  %14 = phi %class.scoped_refptr.3247* [ %5, %11 ], [ %23, %21 ]
  %15 = phi i32 [ 0, %11 ], [ %22, %21 ]
  %16 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %14, i64 0, i32 0
  %17 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %17, i64 0, i32 3, i32 0
  %19 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %18, align 8
  %20 = icmp eq %"class.blink::NGPhysicalFragment"* %19, %12
  br i1 %20, label %25, label %21

21:                                               ; preds = %13
  %22 = add i32 %15, 1
  %23 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %14, i64 1
  %24 = icmp eq %class.scoped_refptr.3247* %23, %9
  br i1 %24, label %28, label %13

25:                                               ; preds = %13
  %26 = icmp eq i32 %15, -1
  br i1 %26, label %28, label %27

27:                                               ; preds = %25
  tail call void @_ZN5blink9LayoutBox19ReplaceLayoutResultE13scoped_refptrIKNS_14NGLayoutResultEEj(%"class.blink::LayoutBox"* %0, %"class.blink::NGLayoutResult"* %1, i32 %15)
  br label %29

28:                                               ; preds = %21, %3, %25
  tail call void @_ZN5blink9LayoutBox15AddLayoutResultE13scoped_refptrIKNS_14NGLayoutResultEE(%"class.blink::LayoutBox"* %0, %"class.blink::NGLayoutResult"* %1)
  br label %29

29:                                               ; preds = %27, %28
  ret void
}

declare void @_ZN5blink22ObjectPaintInvalidator32SlowSetPaintingLayerNeedsRepaintEv(%"class.blink::ObjectPaintInvalidator"*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::NGLayoutResult"* @_ZNK5blink9LayoutBox22GetCachedMeasureResultEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 7, i32 0
  %3 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %2, align 8
  %4 = icmp eq %"class.blink::NGLayoutResult"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %3, i64 0, i32 3, i32 0
  %7 = bitcast %"class.blink::NGPhysicalFragment"** %6 to %"class.blink::NGPhysicalBoxFragment"**
  %8 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %8, i64 0, i32 1
  %10 = bitcast i24* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 16384
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %8, i64 0, i32 0, i32 4, i32 0
  %16 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %15, align 8
  %17 = icmp eq %"class.blink::NGBreakToken"* %16, null
  %18 = select i1 %17, %"class.blink::NGLayoutResult"* %3, %"class.blink::NGLayoutResult"* null
  ret %"class.blink::NGLayoutResult"* %18

19:                                               ; preds = %1, %5
  ret %"class.blink::NGLayoutResult"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGLayoutResult"* @_ZN5blink9LayoutBox18CachedLayoutResultERKNS_17NGConstraintSpaceEPKNS_12NGBreakTokenEPKNS_12NGEarlyBreakEPN4absl8optionalINS_18NGFragmentGeometryEEEPNS_19NGLayoutCacheStatusE(%"class.blink::LayoutBox"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBreakToken"* readnone, %"class.blink::NGEarlyBreak"* readnone, %"class.absl::optional.4376"*, i32* nocapture) local_unnamed_addr #4 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %class.scoped_refptr.3672, align 8
  %12 = alloca %"class.blink::NGBlockNode", align 8
  %13 = alloca i64, align 8
  %14 = bitcast i64* %13 to %"class.absl::optional.3274"*
  %15 = alloca %"class.blink::LayoutUnit", align 4
  %16 = alloca <2 x i64>, align 16
  %17 = bitcast <2 x i64>* %16 to %"struct.blink::NGMarginStrut"*
  %18 = alloca <2 x i64>, align 16
  %19 = bitcast <2 x i64>* %18 to %"struct.blink::NGMarginStrut"*
  %20 = alloca <2 x i64>, align 16
  %21 = bitcast <2 x i64>* %20 to %"struct.blink::NGMarginStrut"*
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %23 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 65536
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %50

27:                                               ; preds = %6
  %28 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %50, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8
  %33 = tail call dereferenceable(8) %class.scoped_refptr.3247* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %32, i32 0) #20
  %34 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %33, i64 0, i32 0
  %35 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %35, i64 0, i32 3, i32 0
  %37 = bitcast %"class.blink::NGPhysicalFragment"** %36 to %"class.blink::NGPhysicalBoxFragment"**
  %38 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %38, i64 0, i32 1
  %40 = bitcast i24* %39 to i32*
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 16384
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %833, label %44

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %38, i64 0, i32 0, i32 4, i32 0
  %46 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %45, align 8
  %47 = icmp ne %"class.blink::NGBreakToken"* %46, null
  %48 = icmp eq %"class.blink::NGLayoutResult"* %35, null
  %49 = or i1 %48, %47
  br i1 %49, label %833, label %67

50:                                               ; preds = %27, %6
  %51 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 7, i32 0
  %52 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %51, align 8
  %53 = icmp eq %"class.blink::NGLayoutResult"* %52, null
  br i1 %53, label %833, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %52, i64 0, i32 3, i32 0
  %56 = bitcast %"class.blink::NGPhysicalFragment"** %55 to %"class.blink::NGPhysicalBoxFragment"**
  %57 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %57, i64 0, i32 1
  %59 = bitcast i24* %58 to i32*
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, 16384
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %833, label %63

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %57, i64 0, i32 0, i32 4, i32 0
  %65 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %64, align 8
  %66 = icmp eq %"class.blink::NGBreakToken"* %65, null
  br i1 %66, label %67, label %833

67:                                               ; preds = %44, %63
  %68 = phi %"class.blink::NGLayoutResult"* [ %52, %63 ], [ %35, %44 ]
  %69 = phi i1 [ false, %63 ], [ true, %44 ]
  %70 = icmp eq %"class.blink::NGBreakToken"* %2, null
  %71 = icmp eq %"class.blink::NGEarlyBreak"* %3, null
  %72 = and i1 %70, %71
  br i1 %72, label %73, label %833

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %75 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %74 to i96*
  %76 = load i96, i96* %75, align 4
  %77 = and i96 %76, 16777216
  %78 = icmp eq i96 %77, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %81 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %80, align 8
  %82 = icmp eq %"class.blink::LayoutObject"* %81, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %79
  %84 = bitcast %"class.blink::LayoutObject"* %81 to i1 (%"class.blink::LayoutObject"*, i32)***
  %85 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %84, align 8
  %86 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %85, i64 92
  %87 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.blink::LayoutObject"* nonnull %81, i32 25) #20
  br i1 %88, label %833, label %89, !prof !2

89:                                               ; preds = %73, %79, %83
  %90 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !4
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %113, label %92

92:                                               ; preds = %89
  %93 = load i96, i96* %75, align 4
  %94 = and i96 %93, 16777216
  %95 = icmp eq i96 %94, 0
  br i1 %95, label %96, label %113

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %98 = load %"class.blink::Node"*, %"class.blink::Node"** %97, align 8
  %99 = icmp eq %"class.blink::Node"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %98, i64 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = and i32 %102, 67108876
  %104 = icmp eq i32 %103, 67108864
  br i1 %104, label %105, label %113, !prof !12

105:                                              ; preds = %100
  %106 = bitcast %"class.blink::Node"* %98 to %"class.blink::Element"*
  %107 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %106) #20
  %108 = icmp eq %"class.blink::DisplayLockContext"* %107, null
  br i1 %108, label %113, label %109

109:                                              ; preds = %105
  %110 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %107) #20
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = load i96, i96* %75, align 4
  br label %124

113:                                              ; preds = %109, %92, %96, %100, %89, %105
  %114 = load i96, i96* %75, align 4
  %115 = and i96 %114, 16
  %116 = icmp eq i96 %115, 0
  br i1 %116, label %121, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 3, i32 0
  %119 = bitcast %"class.blink::NGPhysicalFragment"** %118 to %"class.blink::NGPhysicalBoxFragment"**
  %120 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %119, align 8
  br label %140

121:                                              ; preds = %113
  %122 = and i96 %114, 8
  %123 = icmp ne i96 %122, 0
  br label %124

124:                                              ; preds = %111, %121
  %125 = phi i96 [ %112, %111 ], [ %114, %121 ]
  %126 = phi i1 [ true, %111 ], [ false, %121 ]
  %127 = phi i1 [ false, %111 ], [ %123, %121 ]
  %128 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 3, i32 0
  %129 = bitcast %"class.blink::NGPhysicalFragment"** %128 to %"class.blink::NGPhysicalBoxFragment"**
  %130 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %129, align 8
  %131 = and i96 %125, 33
  %132 = icmp ne i96 %131, 0
  %133 = or i1 %127, %132
  br i1 %133, label %140, label %134

134:                                              ; preds = %124
  %135 = and i96 %125, 4
  %136 = icmp eq i96 %135, 0
  %137 = and i96 %125, 63
  %138 = icmp eq i96 %137, 4
  %139 = or i1 %136, %138
  br i1 %139, label %205, label %140

140:                                              ; preds = %134, %117, %124
  %141 = phi i96 [ %114, %117 ], [ %125, %124 ], [ %125, %134 ]
  %142 = phi %"class.blink::NGPhysicalBoxFragment"* [ %120, %117 ], [ %130, %124 ], [ %130, %134 ]
  %143 = phi i1 [ false, %117 ], [ %126, %124 ], [ %126, %134 ]
  %144 = and i96 %141, 17592186044416
  %145 = icmp eq i96 %144, 0
  %146 = and i96 %141, 48
  %147 = icmp eq i96 %146, 0
  %148 = and i96 %141, 9
  %149 = icmp ne i96 %148, 0
  %150 = or i1 %149, %147
  br i1 %150, label %154, label %151

151:                                              ; preds = %140
  %152 = and i96 %141, 4
  %153 = icmp eq i96 %152, 0
  br label %154

154:                                              ; preds = %140, %151
  %155 = phi i1 [ %153, %151 ], [ false, %140 ]
  br i1 %145, label %156, label %157

156:                                              ; preds = %154
  br i1 %155, label %205, label %833

157:                                              ; preds = %154
  %158 = xor i1 %155, true
  %159 = and i96 %141, 32
  %160 = icmp ne i96 %159, 0
  %161 = or i1 %160, %158
  br i1 %161, label %162, label %205

162:                                              ; preds = %157
  %163 = xor i1 %69, true
  %164 = and i96 %141, 3
  %165 = icmp ne i96 %164, 0
  %166 = or i1 %165, %163
  br i1 %166, label %833, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %142, i64 0, i32 1
  %169 = bitcast i24* %168 to i32*
  %170 = load i32, i32* %169, align 8
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %833, label %173

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %142, i64 0, i32 0, i32 5, i32 0, i32 0, i32 0
  %175 = load %"class.WTF::Vector.3752"*, %"class.WTF::Vector.3752"** %174, align 8
  %176 = icmp eq %"class.WTF::Vector.3752"* %175, null
  br i1 %176, label %177, label %833

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 6, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %186, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 4, i32 0
  %184 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %183, align 8
  %185 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %184, i64 0, i32 9
  br label %188

186:                                              ; preds = %177
  %187 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 2, i32 2
  br label %188

188:                                              ; preds = %182, %186
  %189 = phi %"class.blink::NGExclusionSpace"* [ %185, %182 ], [ %187, %186 ]
  %190 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %189, i64 0, i32 0, i32 0, i32 0, i32 0
  %191 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %190, align 8
  %192 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %191, null
  br i1 %192, label %197, label %193

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %191, i64 0, i32 1
  %195 = load i32, i32* %194, align 8
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %833

197:                                              ; preds = %188, %193
  %198 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %199 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %198, align 8
  %200 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %199, null
  br i1 %200, label %205, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %199, i64 0, i32 1
  %203 = load i32, i32* %202, align 8
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %833

205:                                              ; preds = %201, %157, %134, %197, %156
  %206 = phi %"class.blink::NGPhysicalBoxFragment"* [ %130, %134 ], [ %142, %156 ], [ %142, %201 ], [ %142, %197 ], [ %142, %157 ]
  %207 = phi i1 [ %126, %134 ], [ %143, %156 ], [ %143, %201 ], [ %143, %197 ], [ %143, %157 ]
  %208 = phi i1 [ %69, %134 ], [ %69, %156 ], [ true, %201 ], [ true, %197 ], [ %69, %157 ]
  %209 = phi i32 [ 0, %134 ], [ 2, %156 ], [ 3, %201 ], [ 3, %197 ], [ 2, %157 ]
  %210 = bitcast %"class.blink::NGBlockNode"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %210) #20
  %211 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %12, i64 0, i32 0, i32 0
  %212 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %12, i64 0, i32 0, i32 1
  %213 = bitcast %"class.blink::NGBlockNode"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %213, i8 -86, i64 16, i1 false)
  store %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBox"** %211, align 8
  store i8 -86, i8* %212, align 8
  %214 = call i32 @_ZN5blink35CalculateSizeBasedLayoutCacheStatusERKNS_11NGBlockNodeERKNS_14NGLayoutResultERKNS_17NGConstraintSpaceEPN4absl8optionalINS_18NGFragmentGeometryEEE(%"class.blink::NGBlockNode"* nonnull dereferenceable(16) %12, %"class.blink::NGLayoutResult"* nonnull dereferenceable(64) %68, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.absl::optional.4376"* %4) #20
  %215 = icmp eq i32 %214, 1
  br i1 %215, label %831, label %216

216:                                              ; preds = %205
  %217 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %206, i64 0, i32 0, i32 3
  %218 = bitcast i24* %217 to i32*
  %219 = load i32, i32* %218, align 8
  %220 = and i32 %219, 8
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %226

222:                                              ; preds = %216
  %223 = icmp eq i32 %214, 2
  %224 = icmp eq i32 %209, 2
  %225 = or i1 %224, %223
  br i1 %225, label %831, label %226

226:                                              ; preds = %216, %222
  %227 = icmp eq i32 %214, 2
  %228 = icmp eq i32 %209, 0
  %229 = and i1 %228, %227
  %230 = select i1 %229, i32 2, i32 %209
  %231 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %232 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %233 = or i8 %232, %231
  %234 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %235 = or i8 %233, %234
  %236 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %237 = or i8 %235, %236
  %238 = icmp ne i8 %237, 0
  %239 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_layout_ng_replaced_enabled_E, align 1
  %240 = icmp ne i8 %239, 0
  %241 = and i1 %240, %238
  %242 = icmp eq i32 %230, 2
  %243 = and i1 %242, %241
  br i1 %243, label %244, label %250

244:                                              ; preds = %226
  %245 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %246 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %245, align 8
  %247 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %246, i64 92
  %248 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %247, align 8
  %249 = call zeroext i1 %248(%"class.blink::LayoutObject"* %22, i32 39) #20
  br i1 %249, label %831, label %250

250:                                              ; preds = %244, %226
  %251 = load i32, i32* %23, align 8
  %252 = and i32 %251, 1
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1
  br i1 %253, label %259, label %255

255:                                              ; preds = %250
  %256 = getelementptr inbounds %union.anon.3665, %union.anon.3665* %254, i64 0, i32 0
  %257 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %256, align 8
  %258 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %257, i64 0, i32 3
  br label %261

259:                                              ; preds = %250
  %260 = bitcast %union.anon.3665* %254 to %"struct.blink::NGBfcOffset"*
  br label %261

261:                                              ; preds = %255, %259
  %262 = phi %"struct.blink::NGBfcOffset"* [ %258, %255 ], [ %260, %259 ]
  %263 = bitcast %"struct.blink::NGBfcOffset"* %262 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = trunc i64 %264 to i32
  %266 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %266) #20
  store i64 -6148914691236517206, i64* %13, align 8
  %267 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 6, i32 0
  %268 = load i32, i32* %267, align 4
  %269 = and i32 %268, 1
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %281, label %271

271:                                              ; preds = %261
  %272 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 4, i32 0
  %273 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %272, align 8
  %274 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %273, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %275 = bitcast i8* %274 to i64*
  %276 = load i64, i64* %275, align 4
  %277 = lshr i64 %276, 32
  %278 = trunc i64 %277 to i32
  %279 = and i64 %276, 4294967040
  %280 = and i64 %276, 255
  br label %292

281:                                              ; preds = %261
  %282 = and i32 %268, 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %284, label %292

284:                                              ; preds = %281
  %285 = and i32 %268, 16
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %287, label %292

287:                                              ; preds = %284
  %288 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 4
  %289 = bitcast %union.anon.3761* %288 to %"struct.blink::NGBfcOffset"*
  %290 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %289, i64 0, i32 1, i32 0
  %291 = load i32, i32* %290, align 4
  br label %292

292:                                              ; preds = %271, %281, %284, %287
  %293 = phi i32 [ %278, %271 ], [ %291, %287 ], [ 0, %281 ], [ undef, %284 ]
  %294 = phi i64 [ %280, %271 ], [ 1, %287 ], [ 1, %281 ], [ 0, %284 ]
  %295 = phi i64 [ %279, %271 ], [ 0, %287 ], [ 0, %281 ], [ 0, %284 ]
  %296 = zext i32 %293 to i64
  %297 = shl nuw i64 %296, 32
  %298 = or i64 %295, %294
  %299 = or i64 %298, %297
  store i64 %299, i64* %13, align 8
  %300 = bitcast %"class.blink::LayoutUnit"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %300) #20
  %301 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %15, i64 0, i32 0
  store i32 0, i32* %301, align 4
  %302 = bitcast <2 x i64>* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %302) #20
  %303 = bitcast <2 x i64>* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %303, i8 -86, i64 16, i1 false)
  br i1 %270, label %310, label %304

304:                                              ; preds = %292
  %305 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 4, i32 0
  %306 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %305, align 8
  %307 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %306, i64 0, i32 5
  %308 = bitcast %"struct.blink::NGMarginStrut"* %307 to <2 x i64>*
  %309 = load <2 x i64>, <2 x i64>* %308, align 4
  br label %310

310:                                              ; preds = %292, %304
  %311 = phi <2 x i64> [ %309, %304 ], [ zeroinitializer, %292 ]
  store <2 x i64> %311, <2 x i64>* %16, align 16
  br i1 %253, label %316, label %312

312:                                              ; preds = %310
  %313 = getelementptr inbounds %union.anon.3665, %union.anon.3665* %254, i64 0, i32 0
  %314 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %313, align 8
  %315 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %314, i64 0, i32 3
  br label %318

316:                                              ; preds = %310
  %317 = bitcast %union.anon.3665* %254 to %"struct.blink::NGBfcOffset"*
  br label %318

318:                                              ; preds = %312, %316
  %319 = phi %"struct.blink::NGBfcOffset"* [ %315, %312 ], [ %317, %316 ]
  %320 = bitcast %"struct.blink::NGBfcOffset"* %319 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = trunc i64 %321 to i32
  %323 = lshr i64 %321, 32
  %324 = trunc i64 %323 to i32
  %325 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 2, i32 3, i32 0
  %326 = load i32, i32* %325, align 8
  %327 = and i32 %326, 1
  %328 = icmp eq i32 %327, 0
  %329 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 2, i32 1
  br i1 %328, label %334, label %330

330:                                              ; preds = %318
  %331 = getelementptr inbounds %union.anon.3665, %union.anon.3665* %329, i64 0, i32 0
  %332 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %331, align 8
  %333 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %332, i64 0, i32 3
  br label %336

334:                                              ; preds = %318
  %335 = bitcast %union.anon.3665* %329 to %"struct.blink::NGBfcOffset"*
  br label %336

336:                                              ; preds = %330, %334
  %337 = phi %"struct.blink::NGBfcOffset"* [ %333, %330 ], [ %335, %334 ]
  %338 = bitcast %"struct.blink::NGBfcOffset"* %337 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = trunc i64 %339 to i32
  %341 = lshr i64 %339, 32
  %342 = trunc i64 %341 to i32
  %343 = icmp eq i32 %340, %322
  %344 = icmp eq i32 %342, %324
  %345 = and i1 %343, %344
  br i1 %345, label %346, label %483

346:                                              ; preds = %336
  br i1 %253, label %347, label %351

347:                                              ; preds = %346
  %348 = bitcast %union.anon.3665* %254 to %"struct.blink::NGBfcOffset"*
  %349 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %348, i64 0, i32 1, i32 0
  %350 = load i32, i32* %349, align 4
  br label %388

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %353 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %352, align 8
  %354 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %353, i64 0, i32 6
  %355 = load i16, i16* %354, align 8
  %356 = and i16 %355, 7
  %357 = icmp eq i16 %356, 1
  br i1 %357, label %360, label %358

358:                                              ; preds = %351
  %359 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %359) #20
  br label %377

360:                                              ; preds = %351
  %361 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %353, i64 0, i32 7, i32 1, i64 16
  %362 = bitcast i8* %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = and i64 %363, 255
  %365 = lshr i64 %363, 32
  %366 = trunc i64 %365 to i32
  %367 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %367) #20
  %368 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %353, i64 0, i32 7, i32 1, i64 8
  %369 = bitcast i8* %368 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = and i64 %370, 255
  %372 = icmp eq i64 %371, 0
  %373 = select i1 %372, i32* %8, i32* %7
  %374 = lshr i64 %370, 32
  %375 = trunc i64 %374 to i32
  %376 = icmp eq i64 %364, 0
  br label %377

377:                                              ; preds = %360, %358
  %378 = phi i8* [ %367, %360 ], [ %359, %358 ]
  %379 = phi i1 [ %376, %360 ], [ true, %358 ]
  %380 = phi i32 [ %366, %360 ], [ 0, %358 ]
  %381 = phi i32 [ %375, %360 ], [ 0, %358 ]
  %382 = phi i32* [ %373, %360 ], [ %8, %358 ]
  store i32 %381, i32* %7, align 4
  %383 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %383)
  %384 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %353, i64 0, i32 3, i32 1, i32 0
  %385 = load i32, i32* %384, align 4
  store i32 %385, i32* %8, align 4
  %386 = load i32, i32* %382, align 4
  %387 = select i1 %379, i32 %386, i32 %380
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %383)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %378) #20
  br label %388

388:                                              ; preds = %347, %377
  %389 = phi i32 [ %387, %377 ], [ %350, %347 ]
  br i1 %328, label %390, label %394

390:                                              ; preds = %388
  %391 = bitcast %union.anon.3665* %329 to %"struct.blink::NGBfcOffset"*
  %392 = getelementptr inbounds %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset"* %391, i64 0, i32 1, i32 0
  %393 = load i32, i32* %392, align 4
  br label %431

394:                                              ; preds = %388
  %395 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 2, i32 1, i32 0
  %396 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %395, align 8
  %397 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %396, i64 0, i32 6
  %398 = load i16, i16* %397, align 8
  %399 = and i16 %398, 7
  %400 = icmp eq i16 %399, 1
  br i1 %400, label %403, label %401

401:                                              ; preds = %394
  %402 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %402) #20
  br label %420

403:                                              ; preds = %394
  %404 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %396, i64 0, i32 7, i32 1, i64 16
  %405 = bitcast i8* %404 to i64*
  %406 = load i64, i64* %405, align 8
  %407 = and i64 %406, 255
  %408 = lshr i64 %406, 32
  %409 = trunc i64 %408 to i32
  %410 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %410) #20
  %411 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %396, i64 0, i32 7, i32 1, i64 8
  %412 = bitcast i8* %411 to i64*
  %413 = load i64, i64* %412, align 8
  %414 = and i64 %413, 255
  %415 = icmp eq i64 %414, 0
  %416 = select i1 %415, i32* %10, i32* %9
  %417 = lshr i64 %413, 32
  %418 = trunc i64 %417 to i32
  %419 = icmp eq i64 %407, 0
  br label %420

420:                                              ; preds = %403, %401
  %421 = phi i8* [ %410, %403 ], [ %402, %401 ]
  %422 = phi i1 [ %419, %403 ], [ true, %401 ]
  %423 = phi i32 [ %409, %403 ], [ 0, %401 ]
  %424 = phi i32 [ %418, %403 ], [ 0, %401 ]
  %425 = phi i32* [ %416, %403 ], [ %10, %401 ]
  store i32 %424, i32* %9, align 4
  %426 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %426)
  %427 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %396, i64 0, i32 3, i32 1, i32 0
  %428 = load i32, i32* %427, align 4
  store i32 %428, i32* %10, align 4
  %429 = load i32, i32* %425, align 4
  %430 = select i1 %422, i32 %429, i32 %423
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %426)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %421) #20
  br label %431

431:                                              ; preds = %390, %420
  %432 = phi i32 [ %430, %420 ], [ %393, %390 ]
  %433 = icmp eq i32 %389, %432
  br i1 %433, label %434, label %483

434:                                              ; preds = %431
  br i1 %253, label %448, label %435

435:                                              ; preds = %434
  %436 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %437 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %436, align 8
  %438 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %437, i64 0, i32 6
  %439 = load i16, i16* %438, align 8
  %440 = and i16 %439, 7
  %441 = icmp eq i16 %440, 1
  br i1 %441, label %442, label %448

442:                                              ; preds = %435
  %443 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %437, i64 0, i32 7, i32 1, i64 16
  %444 = bitcast i8* %443 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = and i64 %445, -256
  %447 = and i64 %445, 255
  br label %448

448:                                              ; preds = %434, %435, %442
  %449 = phi i64 [ 0, %434 ], [ %446, %442 ], [ 0, %435 ]
  %450 = phi i64 [ 0, %434 ], [ %447, %442 ], [ 0, %435 ]
  %451 = lshr i64 %449, 32
  %452 = trunc i64 %451 to i32
  br i1 %328, label %466, label %453

453:                                              ; preds = %448
  %454 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 2, i32 1, i32 0
  %455 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %454, align 8
  %456 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %455, i64 0, i32 6
  %457 = load i16, i16* %456, align 8
  %458 = and i16 %457, 7
  %459 = icmp eq i16 %458, 1
  br i1 %459, label %460, label %466

460:                                              ; preds = %453
  %461 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %455, i64 0, i32 7, i32 1, i64 16
  %462 = bitcast i8* %461 to i64*
  %463 = load i64, i64* %462, align 8
  %464 = and i64 %463, -256
  %465 = and i64 %463, 255
  br label %466

466:                                              ; preds = %448, %453, %460
  %467 = phi i64 [ 0, %448 ], [ %464, %460 ], [ 0, %453 ]
  %468 = phi i64 [ 0, %448 ], [ %465, %460 ], [ 0, %453 ]
  %469 = trunc i64 %468 to i8
  %470 = lshr i64 %467, 32
  %471 = trunc i64 %470 to i32
  %472 = icmp ne i64 %450, 0
  %473 = icmp ne i8 %469, 0
  %474 = xor i1 %472, %473
  %475 = xor i1 %472, true
  %476 = or i1 %474, %475
  br i1 %476, label %482, label %477

477:                                              ; preds = %466
  %478 = icmp eq i8 %469, 0
  br i1 %478, label %479, label %480, !prof !2

479:                                              ; preds = %477
  call void @llvm.trap() #20
  unreachable

480:                                              ; preds = %477
  %481 = icmp eq i32 %452, %471
  br i1 %481, label %495, label %483

482:                                              ; preds = %466
  br i1 %474, label %483, label %495

483:                                              ; preds = %482, %336, %431, %480
  br i1 %253, label %484, label %486

484:                                              ; preds = %483
  %485 = bitcast <2 x i64>* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %485) #20
  br label %513

486:                                              ; preds = %483
  %487 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %488 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %487, align 8
  %489 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %488, i64 0, i32 6
  %490 = load i16, i16* %489, align 8
  %491 = and i16 %490, 384
  %492 = icmp eq i16 %491, 0
  br i1 %492, label %493, label %829, !prof !3

493:                                              ; preds = %486
  %494 = bitcast <2 x i64>* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %494) #20
  br label %502

495:                                              ; preds = %482, %480
  %496 = bitcast <2 x i64>* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %496) #20
  br i1 %253, label %513, label %497

497:                                              ; preds = %495
  %498 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %499 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %498, align 8
  %500 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %499, i64 0, i32 6
  %501 = load i16, i16* %500, align 8
  br label %502

502:                                              ; preds = %497, %493
  %503 = phi i16 [ %490, %493 ], [ %501, %497 ]
  %504 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %488, %493 ], [ %499, %497 ]
  %505 = phi i8* [ %494, %493 ], [ %496, %497 ]
  %506 = phi i1 [ false, %493 ], [ true, %497 ]
  %507 = and i16 %503, 7
  %508 = icmp eq i16 %507, 1
  br i1 %508, label %509, label %513

509:                                              ; preds = %502
  %510 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %504, i64 0, i32 7
  %511 = bitcast %union.anon.3666* %510 to <2 x i64>*
  %512 = load <2 x i64>, <2 x i64>* %511, align 8
  br label %513

513:                                              ; preds = %484, %495, %502, %509
  %514 = phi i8* [ %496, %495 ], [ %505, %509 ], [ %505, %502 ], [ %485, %484 ]
  %515 = phi i1 [ true, %495 ], [ %506, %509 ], [ %506, %502 ], [ false, %484 ]
  %516 = phi <2 x i64> [ zeroinitializer, %495 ], [ %512, %509 ], [ zeroinitializer, %502 ], [ zeroinitializer, %484 ]
  store <2 x i64> %516, <2 x i64>* %18, align 16
  %517 = bitcast <2 x i64>* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %517) #20
  br i1 %328, label %529, label %518

518:                                              ; preds = %513
  %519 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 2, i32 1, i32 0
  %520 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %519, align 8
  %521 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %520, i64 0, i32 6
  %522 = load i16, i16* %521, align 8
  %523 = and i16 %522, 7
  %524 = icmp eq i16 %523, 1
  br i1 %524, label %525, label %529

525:                                              ; preds = %518
  %526 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %520, i64 0, i32 7
  %527 = bitcast %union.anon.3666* %526 to <2 x i64>*
  %528 = load <2 x i64>, <2 x i64>* %527, align 8
  br label %529

529:                                              ; preds = %513, %518, %525
  %530 = phi <2 x i64> [ zeroinitializer, %513 ], [ %528, %525 ], [ zeroinitializer, %518 ]
  store <2 x i64> %530, <2 x i64>* %20, align 16
  %531 = call zeroext i1 @_ZNK5blink13NGMarginStruteqERKS0_(%"struct.blink::NGMarginStrut"* nonnull %19, %"struct.blink::NGMarginStrut"* nonnull dereferenceable(16) %21) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %517) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %514) #20
  %532 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %533 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %532, align 8
  %534 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 2, i32 2, i32 0, i32 0, i32 0, i32 0
  %535 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %534, align 8
  %536 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %533, %535
  br i1 %536, label %543, label %537

537:                                              ; preds = %529
  %538 = icmp ne %"class.blink::NGExclusionSpaceInternal"* %533, null
  %539 = icmp ne %"class.blink::NGExclusionSpaceInternal"* %535, null
  %540 = and i1 %538, %539
  br i1 %540, label %541, label %543

541:                                              ; preds = %537
  %542 = call zeroext i1 @_ZNK5blink24NGExclusionSpaceInternaleqERKS0_(%"class.blink::NGExclusionSpaceInternal"* nonnull %533, %"class.blink::NGExclusionSpaceInternal"* nonnull dereferenceable(40) %535) #20
  br label %543

543:                                              ; preds = %529, %537, %541
  %544 = phi i1 [ %542, %541 ], [ true, %529 ], [ false, %537 ]
  %545 = load i32, i32* %23, align 8
  %546 = and i32 %545, 1
  %547 = icmp eq i32 %546, 0
  br i1 %547, label %559, label %548

548:                                              ; preds = %543
  %549 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %550 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %549, align 8
  %551 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %550, i64 0, i32 6
  %552 = load i16, i16* %551, align 8
  %553 = and i16 %552, 7
  %554 = icmp eq i16 %553, 1
  br i1 %554, label %555, label %559

555:                                              ; preds = %548
  %556 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %550, i64 0, i32 7, i32 1, i64 24
  %557 = bitcast i8* %556 to i32*
  %558 = load i32, i32* %557, align 8
  br label %559

559:                                              ; preds = %543, %548, %555
  %560 = phi i32 [ %558, %555 ], [ -2147483648, %548 ], [ -2147483648, %543 ]
  %561 = load i32, i32* %325, align 8
  %562 = and i32 %561, 1
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %575, label %564

564:                                              ; preds = %559
  %565 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 2, i32 1, i32 0
  %566 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %565, align 8
  %567 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %566, i64 0, i32 6
  %568 = load i16, i16* %567, align 8
  %569 = and i16 %568, 7
  %570 = icmp eq i16 %569, 1
  br i1 %570, label %571, label %575

571:                                              ; preds = %564
  %572 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %566, i64 0, i32 7, i32 1, i64 24
  %573 = bitcast i8* %572 to i32*
  %574 = load i32, i32* %573, align 8
  br label %575

575:                                              ; preds = %559, %564, %571
  %576 = phi i32 [ %574, %571 ], [ -2147483648, %564 ], [ -2147483648, %559 ]
  %577 = load i32, i32* %218, align 8
  %578 = and i32 %577, 64
  %579 = icmp eq i32 %578, 0
  %580 = and i32 %577, 896
  %581 = icmp ugt i32 %580, 256
  %582 = and i1 %579, %581
  %583 = and i32 %577, 524288
  %584 = icmp ne i32 %583, 0
  %585 = or i1 %584, %582
  br i1 %585, label %597, label %586

586:                                              ; preds = %575
  %587 = icmp ne i32 %560, %576
  %588 = and i1 %515, %544
  %589 = and i1 %531, %588
  %590 = xor i1 %589, true
  %591 = or i1 %587, %590
  br i1 %591, label %592, label %597

592:                                              ; preds = %586
  %593 = or i32 %230, 1
  %594 = icmp eq i32 %593, 3
  br i1 %594, label %829, label %595

595:                                              ; preds = %592
  %596 = call zeroext i1 @_ZN5blink41MaySkipLayoutWithinBlockFormattingContextERKNS_14NGLayoutResultERKNS_17NGConstraintSpaceEPN4absl8optionalINS_10LayoutUnitEEEPS8_PNS_13NGMarginStrutE(%"class.blink::NGLayoutResult"* nonnull dereferenceable(64) %68, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.absl::optional.3274"* nonnull %14, %"class.blink::LayoutUnit"* nonnull %15, %"struct.blink::NGMarginStrut"* nonnull %17) #20
  br i1 %596, label %597, label %829

597:                                              ; preds = %575, %586, %595
  store i32 %230, i32* %5, align 4
  %598 = or i32 %230, 1
  %599 = icmp eq i32 %598, 3
  br i1 %599, label %600, label %603

600:                                              ; preds = %597
  %601 = ptrtoint %"class.blink::NGLayoutResult"* %68 to i64
  %602 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %68, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %602) #20
  br label %829

603:                                              ; preds = %597
  %604 = load i96, i96* %75, align 4
  %605 = and i96 %604, 63
  %606 = icmp eq i96 %605, 0
  br i1 %606, label %608, label %607

607:                                              ; preds = %603
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %22)
  br label %608

608:                                              ; preds = %603, %607
  %609 = xor i1 %208, true
  %610 = or i1 %207, %609
  br i1 %610, label %654, label %611

611:                                              ; preds = %608
  %612 = load i96, i96* %75, align 4
  %613 = and i96 %612, 192
  %614 = icmp eq i96 %613, 0
  br i1 %614, label %654, label %615

615:                                              ; preds = %611
  %616 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %617 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %618 = or i8 %617, %616
  %619 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %620 = or i8 %618, %619
  %621 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %622 = or i8 %620, %621
  %623 = icmp ne i8 %622, 0
  %624 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase44is_layout_ng_layout_overflow_recalc_enabled_E, align 1
  %625 = icmp ne i8 %624, 0
  %626 = and i1 %625, %623
  br i1 %626, label %627, label %654

627:                                              ; preds = %615
  %628 = bitcast %"class.blink::LayoutBox"* %0 to i16 (%"class.blink::LayoutObject"*)***
  %629 = load i16 (%"class.blink::LayoutObject"*)**, i16 (%"class.blink::LayoutObject"*)*** %628, align 8
  %630 = getelementptr inbounds i16 (%"class.blink::LayoutObject"*)*, i16 (%"class.blink::LayoutObject"*)** %629, i64 52
  %631 = load i16 (%"class.blink::LayoutObject"*)*, i16 (%"class.blink::LayoutObject"*)** %630, align 8
  %632 = call i16 %631(%"class.blink::LayoutObject"* %22) #20
  %633 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %634 = load i32, i32* %633, align 4
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %654, label %636

636:                                              ; preds = %627
  %637 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8
  %638 = call dereferenceable(8) %class.scoped_refptr.3247* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %637, i32 0) #20
  %639 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %638, i64 0, i32 0
  %640 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %639, align 8
  %641 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %640, i64 0, i32 3, i32 0
  %642 = bitcast %"class.blink::NGPhysicalFragment"** %641 to %"class.blink::NGPhysicalBoxFragment"**
  %643 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %642, align 8
  %644 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %643, i64 0, i32 1
  %645 = bitcast i24* %644 to i32*
  %646 = load i32, i32* %645, align 8
  %647 = and i32 %646, 16384
  %648 = icmp eq i32 %647, 0
  br i1 %648, label %654, label %649

649:                                              ; preds = %636
  %650 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %643, i64 0, i32 0, i32 4, i32 0
  %651 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %650, align 8
  %652 = icmp eq %"class.blink::NGBreakToken"* %651, null
  %653 = select i1 %652, %"class.blink::NGLayoutResult"* %640, %"class.blink::NGLayoutResult"* null
  br label %654

654:                                              ; preds = %611, %649, %636, %627, %608, %615
  %655 = phi %"class.blink::NGLayoutResult"* [ %68, %615 ], [ %68, %611 ], [ %68, %608 ], [ %653, %649 ], [ null, %636 ], [ null, %627 ]
  %656 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %657 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %656, align 8
  %658 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %657, i64 92
  %659 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %658, align 8
  %660 = call zeroext i1 %659(%"class.blink::LayoutObject"* %22, i32 49) #20
  br i1 %660, label %661, label %711

661:                                              ; preds = %654
  %662 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %656, align 8
  %663 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %662, i64 92
  %664 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %663, align 8
  %665 = call zeroext i1 %664(%"class.blink::LayoutObject"* %22, i32 30) #20
  br i1 %665, label %666, label %711

666:                                              ; preds = %661
  %667 = load i32, i32* %23, align 8
  %668 = and i32 %667, 1
  %669 = icmp eq i32 %668, 0
  br i1 %669, label %670, label %674

670:                                              ; preds = %666
  %671 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %655, i64 0, i32 2, i32 1, i32 0
  %672 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %671, align 8
  %673 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %672, i64 0, i32 7
  br label %699

674:                                              ; preds = %666
  %675 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %676 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %675, align 8
  %677 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %676, i64 0, i32 6
  %678 = load i16, i16* %677, align 8
  %679 = and i16 %678, 7
  switch i16 %679, label %684 [
    i16 3, label %680
    i16 4, label %688
  ]

680:                                              ; preds = %674
  %681 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %676, i64 0, i32 7, i32 1
  %682 = bitcast [40 x i8]* %681 to i32*
  %683 = load i32, i32* %682, align 8
  br label %688

684:                                              ; preds = %674
  %685 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %655, i64 0, i32 2, i32 1, i32 0
  %686 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %685, align 8
  %687 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %686, i64 0, i32 7
  br label %699

688:                                              ; preds = %674, %680
  %689 = phi i32 [ %683, %680 ], [ -1, %674 ]
  %690 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %676, i64 0, i32 7
  %691 = bitcast %union.anon.3666* %690 to %"class.blink::NGTableConstraintSpaceData"**
  %692 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %691, align 8
  %693 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %655, i64 0, i32 2, i32 1, i32 0
  %694 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %693, align 8
  %695 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %694, i64 0, i32 7
  %696 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %692, null
  br i1 %696, label %699, label %697

697:                                              ; preds = %688
  %698 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %692, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %698) #20
  br label %699

699:                                              ; preds = %684, %670, %688, %697
  %700 = phi %union.anon.3666* [ %673, %670 ], [ %695, %688 ], [ %695, %697 ], [ %687, %684 ]
  %701 = phi %"struct.blink::NGConstraintSpace::RareData"* [ %672, %670 ], [ %694, %688 ], [ %694, %697 ], [ %686, %684 ]
  %702 = phi i32 [ -1, %670 ], [ %689, %688 ], [ %689, %697 ], [ -1, %684 ]
  %703 = phi %"class.blink::NGTableConstraintSpaceData"* [ null, %670 ], [ null, %688 ], [ %692, %697 ], [ null, %684 ]
  %704 = bitcast %class.scoped_refptr.3672* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %704) #20
  %705 = bitcast %union.anon.3666* %700 to i64*
  %706 = load i64, i64* %705, align 8
  %707 = bitcast %class.scoped_refptr.3672* %11 to i64*
  %708 = ptrtoint %"class.blink::NGTableConstraintSpaceData"* %703 to i64
  store i64 %708, i64* %705, align 8
  store i64 %706, i64* %707, align 8
  call void @_ZN13scoped_refptrIKN5blink26NGTableConstraintSpaceDataEED2Ev(%class.scoped_refptr.3672* nonnull %11) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %704) #20
  %709 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %701, i64 0, i32 7, i32 1
  %710 = bitcast [40 x i8]* %709 to i32*
  store i32 %702, i32* %710, align 8
  br label %711

711:                                              ; preds = %699, %661, %654
  %712 = load i8, i8* %212, align 8
  %713 = and i8 %712, 1
  %714 = icmp eq i8 %713, 0
  br i1 %714, label %715, label %786

715:                                              ; preds = %711
  %716 = bitcast %"class.blink::NGBlockNode"* %12 to %"class.blink::LayoutObject"**
  %717 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %716, align 8
  %718 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %717, i64 0, i32 4
  %719 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %718 to i96*
  %720 = load i96, i96* %719, align 4
  %721 = and i96 %720, 113336795588871485128704
  %722 = icmp eq i96 %721, 75557863725914323419136
  br i1 %722, label %723, label %786

723:                                              ; preds = %715
  %724 = load i32, i32* %23, align 8
  %725 = lshr i32 %724, 26
  %726 = and i32 %725, 3
  switch i32 %726, label %727 [
    i32 0, label %728
    i32 1, label %737
    i32 2, label %731
    i32 3, label %732
  ]

727:                                              ; preds = %723
  unreachable

728:                                              ; preds = %723
  %729 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 0, i32 0
  %730 = load i32, i32* %729, align 8
  br label %737

731:                                              ; preds = %723
  br label %737

732:                                              ; preds = %723
  %733 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %734 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %733 to i32**
  %735 = load i32*, i32** %734, align 8
  %736 = load i32, i32* %735, align 8
  br label %737

737:                                              ; preds = %732, %731, %728, %723
  %738 = phi i32 [ %736, %732 ], [ -64, %731 ], [ %730, %728 ], [ 0, %723 ]
  %739 = lshr i32 %724, 28
  %740 = and i32 %739, 3
  switch i32 %740, label %741 [
    i32 0, label %742
    i32 1, label %751
    i32 2, label %745
    i32 3, label %746
  ]

741:                                              ; preds = %737
  unreachable

742:                                              ; preds = %737
  %743 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 1, i32 0
  %744 = load i32, i32* %743, align 4
  br label %751

745:                                              ; preds = %737
  br label %751

746:                                              ; preds = %737
  %747 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %748 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %747, align 8
  %749 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %748, i64 0, i32 0, i32 1, i32 0
  %750 = load i32, i32* %749, align 4
  br label %751

751:                                              ; preds = %737, %742, %745, %746
  %752 = phi i32 [ %750, %746 ], [ -64, %745 ], [ %744, %742 ], [ 0, %737 ]
  %753 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %655, i64 0, i32 2, i32 3, i32 0
  %754 = load i32, i32* %753, align 8
  %755 = lshr i32 %754, 26
  %756 = and i32 %755, 3
  switch i32 %756, label %757 [
    i32 0, label %758
    i32 1, label %767
    i32 2, label %761
    i32 3, label %762
  ]

757:                                              ; preds = %751
  unreachable

758:                                              ; preds = %751
  %759 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %655, i64 0, i32 2, i32 0, i32 0, i32 0
  %760 = load i32, i32* %759, align 8
  br label %767

761:                                              ; preds = %751
  br label %767

762:                                              ; preds = %751
  %763 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %655, i64 0, i32 2, i32 1, i32 0
  %764 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %763 to i32**
  %765 = load i32*, i32** %764, align 8
  %766 = load i32, i32* %765, align 8
  br label %767

767:                                              ; preds = %762, %761, %758, %751
  %768 = phi i32 [ %766, %762 ], [ -64, %761 ], [ %760, %758 ], [ 0, %751 ]
  %769 = lshr i32 %754, 28
  %770 = and i32 %769, 3
  switch i32 %770, label %771 [
    i32 0, label %772
    i32 1, label %781
    i32 2, label %775
    i32 3, label %776
  ]

771:                                              ; preds = %767
  unreachable

772:                                              ; preds = %767
  %773 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %655, i64 0, i32 2, i32 0, i32 1, i32 0
  %774 = load i32, i32* %773, align 4
  br label %781

775:                                              ; preds = %767
  br label %781

776:                                              ; preds = %767
  %777 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %655, i64 0, i32 2, i32 1, i32 0
  %778 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %777, align 8
  %779 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %778, i64 0, i32 0, i32 1, i32 0
  %780 = load i32, i32* %779, align 4
  br label %781

781:                                              ; preds = %767, %772, %775, %776
  %782 = phi i32 [ %780, %776 ], [ -64, %775 ], [ %774, %772 ], [ 0, %767 ]
  %783 = icmp eq i32 %768, %738
  br i1 %783, label %784, label %817

784:                                              ; preds = %781
  %785 = icmp ne i32 %782, %752
  br label %786

786:                                              ; preds = %711, %784, %715
  %787 = phi i1 [ false, %715 ], [ %785, %784 ], [ false, %711 ]
  %788 = and i1 %515, %544
  %789 = and i1 %531, %788
  %790 = xor i1 %789, true
  %791 = or i1 %787, %790
  br i1 %791, label %817, label %792

792:                                              ; preds = %786
  %793 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %655, i64 0, i32 6, i32 0
  %794 = load i32, i32* %793, align 4
  %795 = and i32 %794, 2
  %796 = icmp eq i32 %795, 0
  br i1 %796, label %801, label %797

797:                                              ; preds = %792
  %798 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %655, i64 0, i32 4, i32 0
  %799 = load %"struct.blink::NGLayoutResult::RareData"*, %"struct.blink::NGLayoutResult::RareData"** %798, align 8
  %800 = getelementptr inbounds %"struct.blink::NGLayoutResult::RareData", %"struct.blink::NGLayoutResult::RareData"* %799, i64 0, i32 9
  br label %803

801:                                              ; preds = %792
  %802 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %655, i64 0, i32 2, i32 2
  br label %803

803:                                              ; preds = %797, %801
  %804 = phi %"class.blink::NGExclusionSpace"* [ %800, %797 ], [ %802, %801 ]
  %805 = getelementptr inbounds %"class.blink::NGExclusionSpace", %"class.blink::NGExclusionSpace"* %804, i64 0, i32 0, i32 0, i32 0, i32 0
  %806 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %805, align 8
  %807 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %806, null
  br i1 %807, label %812, label %808

808:                                              ; preds = %803
  %809 = load %"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"** %532, align 8
  %810 = icmp eq %"class.blink::NGExclusionSpaceInternal"* %809, null
  br i1 %810, label %812, label %811

811:                                              ; preds = %808
  call void @_ZN5blink24NGExclusionSpaceInternal28MoveAndUpdateDerivedGeometryERKS0_(%"class.blink::NGExclusionSpaceInternal"* nonnull %806, %"class.blink::NGExclusionSpaceInternal"* nonnull dereferenceable(40) %809) #20
  br label %812

812:                                              ; preds = %803, %808, %811
  %813 = ptrtoint %"class.blink::NGLayoutResult"* %655 to i64
  %814 = icmp eq %"class.blink::NGLayoutResult"* %655, null
  br i1 %814, label %829, label %815

815:                                              ; preds = %812
  %816 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %655, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %816) #20
  br label %829

817:                                              ; preds = %781, %786
  %818 = phi i1 [ %787, %786 ], [ true, %781 ]
  %819 = call noalias i8* @malloc(i64 64) #20
  %820 = bitcast i8* %819 to %"class.blink::NGLayoutResult"*
  %821 = load i64, i64* %13, align 8
  %822 = load i32, i32* %301, align 4
  call void @_ZN5blink14NGLayoutResultC1ERKS0_RKNS_17NGConstraintSpaceERKNS_13NGMarginStrutENS_10LayoutUnitEN4absl8optionalIS9_EES9_(%"class.blink::NGLayoutResult"* %820, %"class.blink::NGLayoutResult"* dereferenceable(64) %655, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"struct.blink::NGMarginStrut"* nonnull dereferenceable(16) %17, i32 %265, i64 %821, i32 %822) #20
  %823 = ptrtoint i8* %819 to i64
  br i1 %818, label %824, label %829

824:                                              ; preds = %817
  %825 = icmp eq i8* %819, null
  br i1 %825, label %828, label %826

826:                                              ; preds = %824
  %827 = bitcast i8* %819 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %827) #20
  br label %828

828:                                              ; preds = %824, %826
  call void @_ZN5blink9LayoutBox21SetCachedLayoutResultE13scoped_refptrIKNS_14NGLayoutResultEE(%"class.blink::LayoutBox"* %0, %"class.blink::NGLayoutResult"* %820)
  br label %829

829:                                              ; preds = %486, %595, %828, %817, %815, %812, %592, %600
  %830 = phi i64 [ %601, %600 ], [ 0, %592 ], [ 0, %486 ], [ %813, %812 ], [ %813, %815 ], [ %823, %817 ], [ %823, %828 ], [ 0, %595 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %302) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %300) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %266) #20
  br label %831

831:                                              ; preds = %244, %222, %205, %829
  %832 = phi i64 [ %830, %829 ], [ 0, %205 ], [ 0, %222 ], [ 0, %244 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %210) #20
  br label %833

833:                                              ; preds = %201, %173, %167, %162, %44, %50, %54, %63, %31, %193, %156, %83, %67, %831
  %834 = phi i64 [ %832, %831 ], [ 0, %67 ], [ 0, %83 ], [ 0, %156 ], [ 0, %162 ], [ 0, %167 ], [ 0, %173 ], [ 0, %201 ], [ 0, %193 ], [ 0, %44 ], [ 0, %31 ], [ 0, %63 ], [ 0, %54 ], [ 0, %50 ]
  %835 = inttoptr i64 %834 to %"class.blink::NGLayoutResult"*
  ret %"class.blink::NGLayoutResult"* %835
}

declare i32 @_ZN5blink35CalculateSizeBasedLayoutCacheStatusERKNS_11NGBlockNodeERKNS_14NGLayoutResultERKNS_17NGConstraintSpaceEPN4absl8optionalINS_18NGFragmentGeometryEEE(%"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGLayoutResult"* dereferenceable(64), %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.absl::optional.4376"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink13NGMarginStruteqERKS0_(%"struct.blink::NGMarginStrut"*, %"struct.blink::NGMarginStrut"* dereferenceable(16)) local_unnamed_addr #5

declare zeroext i1 @_ZN5blink41MaySkipLayoutWithinBlockFormattingContextERKNS_14NGLayoutResultERKNS_17NGConstraintSpaceEPN4absl8optionalINS_10LayoutUnitEEEPS8_PNS_13NGMarginStrutE(%"class.blink::NGLayoutResult"* dereferenceable(64), %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.absl::optional.3274"*, %"class.blink::LayoutUnit"*, %"struct.blink::NGMarginStrut"*) local_unnamed_addr #5

declare void @_ZN5blink14NGLayoutResultC1ERKS0_RKNS_17NGConstraintSpaceERKNS_13NGMarginStrutENS_10LayoutUnitEN4absl8optionalIS9_EES9_(%"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"* dereferenceable(64), %"class.blink::NGConstraintSpace"* dereferenceable(32), %"struct.blink::NGMarginStrut"* dereferenceable(16), i32, i64, i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox19GetPhysicalFragmentEj(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8
  %4 = tail call dereferenceable(8) %class.scoped_refptr.3247* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %3, i32 %1) #20
  %5 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %4, i64 0, i32 0
  %6 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %6, i64 0, i32 3, i32 0
  %8 = bitcast %"class.blink::NGPhysicalFragment"** %7 to %"class.blink::NGPhysicalBoxFragment"**
  %9 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %8, align 8
  ret %"class.blink::NGPhysicalBoxFragment"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox22NGPhysicalFragmentList5frontEv(%"class.blink::LayoutBox::NGPhysicalFragmentList"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox::NGPhysicalFragmentList", %"class.blink::LayoutBox::NGPhysicalFragmentList"* %0, i64 0, i32 0
  %3 = load %"class.WTF::Vector.3248"*, %"class.WTF::Vector.3248"** %2, align 8
  %4 = tail call dereferenceable(8) %class.scoped_refptr.3247* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %3, i32 0) #20
  %5 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %4, i64 0, i32 0
  %6 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %6, i64 0, i32 3, i32 0
  %8 = bitcast %"class.blink::NGPhysicalFragment"** %7 to %"class.blink::NGPhysicalBoxFragment"**
  %9 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %8, align 8
  ret %"class.blink::NGPhysicalBoxFragment"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox22NGPhysicalFragmentList4backEv(%"class.blink::LayoutBox::NGPhysicalFragmentList"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox::NGPhysicalFragmentList", %"class.blink::LayoutBox::NGPhysicalFragmentList"* %0, i64 0, i32 0
  %3 = load %"class.WTF::Vector.3248"*, %"class.WTF::Vector.3248"** %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %3, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, -1
  %7 = tail call dereferenceable(8) %class.scoped_refptr.3247* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %3, i32 %6) #20
  %8 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %7, i64 0, i32 0
  %9 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %9, i64 0, i32 3, i32 0
  %11 = bitcast %"class.blink::NGPhysicalFragment"** %10 to %"class.blink::NGPhysicalBoxFragment"**
  %12 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %11, align 8
  ret %"class.blink::NGPhysicalBoxFragment"* %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::FragmentData"* @_ZNK5blink9LayoutBox32FragmentDataFromPhysicalFragmentERKNS_21NGPhysicalBoxFragmentE(%"class.blink::LayoutBox"* readonly, %"class.blink::NGPhysicalBoxFragment"* readnone dereferenceable(72)) local_unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 10
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %5, i64 %8
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %32, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %1, i64 0, i32 0
  br label %13

13:                                               ; preds = %11, %28
  %14 = phi %class.scoped_refptr.3247* [ %5, %11 ], [ %30, %28 ]
  %15 = phi %"class.blink::FragmentData"* [ %3, %11 ], [ %29, %28 ]
  %16 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %14, i64 0, i32 0
  %17 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %17, i64 0, i32 3, i32 0
  %19 = load %"class.blink::NGPhysicalFragment"*, %"class.blink::NGPhysicalFragment"** %18, align 8
  %20 = icmp eq %"class.blink::NGPhysicalFragment"* %19, %12
  br i1 %20, label %32, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::FragmentData", %"class.blink::FragmentData"* %15, i64 0, i32 1, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %22, align 8
  %24 = icmp eq %"struct.blink::FragmentData::RareData"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %23, i64 0, i32 11, i32 0, i32 0, i32 0
  %27 = load %"class.blink::FragmentData"*, %"class.blink::FragmentData"** %26, align 8
  br label %28

28:                                               ; preds = %21, %25
  %29 = phi %"class.blink::FragmentData"* [ null, %21 ], [ %27, %25 ]
  %30 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %14, i64 1
  %31 = icmp eq %class.scoped_refptr.3247* %30, %9
  br i1 %31, label %32, label %13

32:                                               ; preds = %13, %28, %2
  %33 = phi %"class.blink::FragmentData"* [ %3, %2 ], [ %29, %28 ], [ %15, %13 ]
  ret %"class.blink::FragmentData"* %33
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox15PositionLineBoxEPNS_9InlineBoxE(%"class.blink::LayoutBox"*, %"class.blink::InlineBox"*) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 113336795588871485128704
  %9 = icmp eq i96 %8, 75557863725914323419136
  br i1 %9, label %10, label %92

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = lshr i160 %15, 37
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 31
  switch i32 %18, label %31 [
    i32 0, label %19
    i32 25, label %19
    i32 19, label %19
    i32 17, label %19
    i32 15, label %19
    i32 5, label %19
    i32 3, label %19
    i32 24, label %19
  ]

19:                                               ; preds = %10, %10, %10, %10, %10, %10, %10, %10
  %20 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %1) #20
  %21 = tail call %"class.blink::LayoutObject"* @_ZNK5blink13RootInlineBox5BlockEv(%"class.blink::RootInlineBox"* %20) #20
  %22 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 7, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 2048
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 5, i32 0, i32 0
  %27 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 5, i32 1, i32 0
  %28 = select i1 %25, i32* %27, i32* %26
  %29 = load i32, i32* %28, align 4
  %30 = bitcast %"class.blink::LayoutObject"* %21 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlow31SetStaticInlinePositionForChildERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"* %30, %"class.blink::LayoutBox"* dereferenceable(216) %0, i32 %29) #20
  br label %49

31:                                               ; preds = %10
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %33 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %32, align 8
  %34 = icmp eq %"struct.blink::FragmentData::RareData"* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %36, align 8
  br label %38

38:                                               ; preds = %31, %35
  %39 = phi %"class.blink::PaintLayer"* [ %37, %35 ], [ null, %31 ]
  %40 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 7, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, 2048
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 5, i32 1, i32 0
  %45 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 5, i32 0, i32 0
  %46 = select i1 %43, i32* %45, i32* %44
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %39, i64 0, i32 11, i32 0
  store i32 %47, i32* %48, align 4
  br label %49

49:                                               ; preds = %38, %19
  %50 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %51 = bitcast %"class.blink::LayoutObject"* %50 to i1 (%"class.blink::LayoutObject"*)***
  %52 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %52, i64 26
  %54 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* %50) #20
  br i1 %55, label %56, label %87

56:                                               ; preds = %49
  %57 = load i96, i96* %6, align 4
  %58 = and i96 %57, 8
  %59 = icmp eq i96 %58, 0
  br i1 %59, label %60, label %87

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 7, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 2048
  %64 = icmp eq i32 %63, 0
  %65 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %65, i64 0, i32 0, i32 7, i32 0, i32 0
  %67 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %66, align 8
  br i1 %64, label %76, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %67, i64 0, i32 8, i32 2
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %67, i64 0, i32 17, i32 2
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %87, label %84

76:                                               ; preds = %60
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %67, i64 0, i32 18, i32 2
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %67, i64 0, i32 7, i32 2
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %87, label %84

84:                                               ; preds = %80, %76, %72, %68
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %4, i32 1) #20
  %85 = load i96, i96* %6, align 4
  %86 = or i96 %85, 1180591620717411303432
  store i96 %86, i96* %6, align 4
  br label %87

87:                                               ; preds = %84, %80, %72, %56, %49
  tail call void @_ZN5blink9InlineBox6RemoveENS_13MarkLineBoxesE(%"class.blink::InlineBox"* %1, i32 1) #20
  %88 = bitcast %"class.blink::InlineBox"* %1 to void (%"class.blink::InlineBox"*)***
  %89 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %89, i64 5
  %91 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %90, align 8
  tail call void %91(%"class.blink::InlineBox"* %1) #20
  br label %143

92:                                               ; preds = %2
  %93 = and i96 %7, 1073741824
  %94 = icmp eq i96 %93, 0
  br i1 %94, label %143, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 5
  tail call void @_ZN5blink9LayoutBox44SetLocationAndUpdateOverflowControlsIfNeededERKNS_11LayoutPointE(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutPoint"* dereferenceable(8) %96)
  %97 = load i96, i96* %6, align 4
  %98 = and i96 %97, 268435456
  %99 = icmp eq i96 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #20
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.15, i64 0, i64 0), i32 2455, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.16, i64 0, i64 0)) #20
  %102 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #20
  br label %103

103:                                              ; preds = %100, %95
  %104 = icmp eq %"class.blink::InlineBox"* %1, null
  br i1 %104, label %141, label %105

105:                                              ; preds = %103
  %106 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11, i32 0
  %107 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %106, align 8
  %108 = icmp eq %"class.blink::InlineBox"* %107, null
  br i1 %108, label %141, label %109, !prof !3

109:                                              ; preds = %105
  %110 = load i96, i96* %6, align 4
  %111 = and i96 %110, 268435456
  %112 = icmp eq i96 %111, 0
  br i1 %112, label %113, label %141

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %115 = load %"class.blink::Node"*, %"class.blink::Node"** %114, align 8
  %116 = icmp eq %"class.blink::Node"* %115, null
  br i1 %116, label %117, label %124

117:                                              ; preds = %113, %117
  %118 = phi %"class.blink::LayoutObject"* [ %120, %117 ], [ %4, %113 ]
  %119 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %118, i64 0, i32 7
  %120 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %120, i64 0, i32 6, i32 0, i32 0
  %122 = load %"class.blink::Node"*, %"class.blink::Node"** %121, align 8
  %123 = icmp eq %"class.blink::Node"* %122, null
  br i1 %123, label %117, label %124

124:                                              ; preds = %117, %113
  %125 = phi %"class.blink::Node"* [ %115, %113 ], [ %122, %117 ]
  %126 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %125, i64 0, i32 3, i32 0, i32 0
  %127 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %127, i64 0, i32 2, i32 0, i32 0
  %129 = load %"class.blink::Document"*, %"class.blink::Document"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %129, i64 0, i32 5, i32 0
  %131 = load i32, i32* %130, align 4
  %132 = icmp sgt i32 %131, 19
  br i1 %132, label %135, label %133

133:                                              ; preds = %124
  call void @_ZN5blink9InlineBox6RemoveENS_13MarkLineBoxesE(%"class.blink::InlineBox"* nonnull %107, i32 0) #20
  %134 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %106, align 8
  br label %135

135:                                              ; preds = %133, %124
  %136 = phi %"class.blink::InlineBox"* [ %134, %133 ], [ %107, %124 ]
  %137 = bitcast %"class.blink::InlineBox"* %136 to void (%"class.blink::InlineBox"*)***
  %138 = load void (%"class.blink::InlineBox"*)**, void (%"class.blink::InlineBox"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %138, i64 5
  %140 = load void (%"class.blink::InlineBox"*)*, void (%"class.blink::InlineBox"*)** %139, align 8
  call void %140(%"class.blink::InlineBox"* %136) #20
  store %"class.blink::InlineBox"* null, %"class.blink::InlineBox"** %106, align 8
  br label %141

141:                                              ; preds = %103, %105, %109, %135
  %142 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11, i32 0
  store %"class.blink::InlineBox"* %1, %"class.blink::InlineBox"** %142, align 8
  br label %143

143:                                              ; preds = %92, %141, %87
  ret void
}

declare dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"*) local_unnamed_addr #5

declare %"class.blink::LayoutObject"* @_ZNK5blink13RootInlineBox5BlockEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox40MoveWithEdgeOfInlineContainerIfNecessaryEb(%"class.blink::LayoutBox"*, i1 zeroext) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 8
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 7, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %12, align 8
  br i1 %1, label %14, label %22

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 8, i32 2
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 17, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %33, label %30

22:                                               ; preds = %9
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 18, i32 2
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %13, i64 0, i32 7, i32 2
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %22, %14, %18, %26
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %3, i32 1) #20
  %31 = load i96, i96* %5, align 4
  %32 = or i96 %31, 1180591620717411303432
  store i96 %32, i96* %5, align 4
  br label %33

33:                                               ; preds = %2, %18, %30, %26
  ret void
}

declare void @_ZN5blink9InlineBox6RemoveENS_13MarkLineBoxesE(%"class.blink::InlineBox"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox21SetSpannerPlaceholderERNS_35LayoutMultiColumnSpannerPlaceholderE(%"class.blink::LayoutBox"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* dereferenceable(224)) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0
  %5 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %4, i64 0, i32 0
  %6 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %5, align 8
  %7 = icmp eq %"struct.blink::LayoutBoxRareData"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %6, i64 0, i32 0
  %10 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %9, align 8
  %11 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %10, null
  br i1 %11, label %34, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #20
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 3790, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0)) #20
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #20
  %15 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %5, align 8
  %16 = icmp eq %"struct.blink::LayoutBoxRareData"* %15, null
  br i1 %16, label %17, label %34

17:                                               ; preds = %2, %12
  %18 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %19 = bitcast i8* %18 to %"struct.blink::LayoutBoxRareData"*
  %20 = bitcast i8* %18 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %20, align 8
  %21 = getelementptr inbounds i8, i8* %18, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 -64, i32* %22, align 4
  %23 = getelementptr inbounds i8, i8* %18, i64 12
  %24 = bitcast i8* %23 to i32*
  store i32 -64, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %18, i64 16
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, -16
  store i8 %27, i8* %25, align 8
  %28 = getelementptr inbounds i8, i8* %18, i64 20
  call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 68, i1 false) #20
  %29 = getelementptr inbounds i8, i8* %18, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %4, %"struct.blink::LayoutBoxRareData"* %19) #20
  %33 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %5, align 8
  br label %34

34:                                               ; preds = %8, %12, %17
  %35 = phi %"struct.blink::LayoutBoxRareData"* [ %15, %12 ], [ %33, %17 ], [ %6, %8 ]
  %36 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %35, i64 0, i32 0
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %1, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %36, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox23ClearSpannerPlaceholderEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 0
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %6, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox18SetPaginationStrutENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %5 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  br i1 %3, label %6, label %8

6:                                                ; preds = %2
  %7 = icmp eq %"struct.blink::LayoutBoxRareData"* %5, null
  br i1 %7, label %32, label %29

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0
  %10 = icmp eq %"struct.blink::LayoutBoxRareData"* %5, null
  br i1 %10, label %11, label %29

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %9, i64 0, i32 0
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %14 = bitcast i8* %13 to %"struct.blink::LayoutBoxRareData"*
  %15 = bitcast i8* %13 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %15, align 8
  %16 = getelementptr inbounds i8, i8* %13, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 -64, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %13, i64 12
  %19 = bitcast i8* %18 to i32*
  store i32 -64, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %13, i64 16
  %21 = load i8, i8* %20, align 8
  %22 = and i8 %21, -16
  store i8 %22, i8* %20, align 8
  %23 = getelementptr inbounds i8, i8* %13, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 68, i1 false) #20
  %24 = getelementptr inbounds i8, i8* %13, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %9, %"struct.blink::LayoutBoxRareData"* %14) #20
  %28 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %12, align 8
  br label %29

29:                                               ; preds = %6, %8, %11
  %30 = phi %"struct.blink::LayoutBoxRareData"* [ %5, %8 ], [ %28, %11 ], [ %5, %6 ]
  %31 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %30, i64 0, i32 8, i32 0
  store i32 %1, i32* %31, align 4
  br label %32

32:                                               ; preds = %6, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox26IsBreakBetweenControllableENS_13EBreakBetweenE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = icmp eq i32 %1, 2
  br i1 %4, label %83, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 134217728
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %11, label %83

11:                                               ; preds = %5
  %12 = and i96 %8, 8388608
  %13 = icmp ne i96 %12, 0
  %14 = and i96 %8, 113336795588871485128704
  %15 = icmp eq i96 %14, 75557863725914323419136
  %16 = or i1 %15, %13
  br i1 %16, label %83, label %17

17:                                               ; preds = %11
  %18 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %19 = icmp eq %"class.blink::LayoutBlock"* %18, null
  br i1 %19, label %83, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %18, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.blink::LayoutBlock"* %18 to i1 (%"class.blink::LayoutObject"*)***
  %23 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %23, i64 24
  %25 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* %21) #20
  br i1 %26, label %27, label %83

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = icmp eq %"class.blink::Node"* %29, null
  br i1 %30, label %31, label %38

31:                                               ; preds = %27, %31
  %32 = phi %"class.blink::LayoutObject"* [ %34, %31 ], [ %3, %27 ]
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %32, i64 0, i32 7
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 6, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %31, label %38

38:                                               ; preds = %31, %27
  %39 = phi %"class.blink::Node"* [ %29, %27 ], [ %36, %31 ]
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %43, i64 0, i32 113
  %45 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %45, i64 0, i32 4, i32 0, i32 0, i32 0
  %47 = load %"class.blink::ViewFragmentationContext"*, %"class.blink::ViewFragmentationContext"** %46, align 8
  %48 = icmp ne %"class.blink::ViewFragmentationContext"* %47, null
  br i1 %48, label %56, label %49

49:                                               ; preds = %38
  %50 = load i96, i96* %7, align 4
  %51 = and i96 %50, 1099511627776
  %52 = icmp eq i96 %51, 0
  br i1 %52, label %83, label %53

53:                                               ; preds = %49
  %54 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %3) #20
  %55 = icmp eq %"class.blink::LayoutFlowThread"* %54, null
  br i1 %55, label %83, label %56

56:                                               ; preds = %38, %53
  %57 = bitcast %"class.blink::LayoutView"* %45 to %"class.blink::LayoutBlock"*
  br label %58

58:                                               ; preds = %56, %80
  %59 = phi %"class.blink::LayoutBlock"* [ %18, %56 ], [ %81, %80 ]
  %60 = icmp eq %"class.blink::LayoutBlock"* %59, %57
  br i1 %60, label %61, label %66

61:                                               ; preds = %58
  %62 = icmp ne i32 %1, 4
  %63 = and i1 %62, %48
  %64 = icmp ne i32 %1, 9
  %65 = and i1 %64, %63
  br label %83

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %59, i64 0, i32 0, i32 0, i32 0
  %68 = bitcast %"class.blink::LayoutBlock"* %59 to i1 (%"class.blink::LayoutObject"*)***
  %69 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %68, align 8
  %70 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %69, i64 25
  %71 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %70, align 8
  %72 = tail call zeroext i1 %71(%"class.blink::LayoutObject"* %67) #20
  br i1 %72, label %73, label %74

73:                                               ; preds = %66
  switch i32 %1, label %74 [
    i32 3, label %83
    i32 9, label %83
    i32 4, label %83
  ]

74:                                               ; preds = %73, %66
  %75 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %59, i64 0, i32 0, i32 0, i32 0, i32 4
  %76 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %75 to i96*
  %77 = load i96, i96* %76, align 4
  %78 = and i96 %77, 113336795588871485128704
  %79 = icmp eq i96 %78, 75557863725914323419136
  br i1 %79, label %83, label %80

80:                                               ; preds = %74
  %81 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %67, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %82 = icmp eq %"class.blink::LayoutBlock"* %81, null
  br i1 %82, label %83, label %58

83:                                               ; preds = %74, %80, %73, %73, %73, %5, %49, %17, %20, %53, %61, %11, %2
  %84 = phi i1 [ true, %2 ], [ false, %11 ], [ false, %5 ], [ false, %17 ], [ false, %20 ], [ %65, %61 ], [ false, %53 ], [ false, %49 ], [ false, %74 ], [ false, %80 ], [ true, %73 ], [ true, %73 ], [ true, %73 ]
  ret i1 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox25IsBreakInsideControllableENS_12EBreakInsideE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %44, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 1099511627776
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %3) #20
  br label %13

13:                                               ; preds = %5, %11
  %14 = phi %"class.blink::LayoutFlowThread"* [ %12, %11 ], [ null, %5 ]
  %15 = icmp eq i32 %1, 3
  br i1 %15, label %16, label %18

16:                                               ; preds = %13
  %17 = icmp ne %"class.blink::LayoutFlowThread"* %14, null
  br label %44

18:                                               ; preds = %13
  %19 = icmp eq i32 %1, 1
  %20 = icmp ne %"class.blink::LayoutFlowThread"* %14, null
  %21 = and i1 %19, %20
  br i1 %21, label %44, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %26, label %33

26:                                               ; preds = %22, %26
  %27 = phi %"class.blink::LayoutObject"* [ %29, %26 ], [ %3, %22 ]
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 7
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 6, i32 0, i32 0
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %30, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %26, label %33

33:                                               ; preds = %26, %22
  %34 = phi %"class.blink::Node"* [ %24, %22 ], [ %31, %26 ]
  %35 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %34, i64 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::Document"*, %"class.blink::Document"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %38, i64 0, i32 113
  %40 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::ViewFragmentationContext"*, %"class.blink::ViewFragmentationContext"** %41, align 8
  %43 = icmp ne %"class.blink::ViewFragmentationContext"* %42, null
  br label %44

44:                                               ; preds = %16, %18, %33, %2
  %45 = phi i1 [ true, %2 ], [ %17, %16 ], [ true, %18 ], [ %43, %33 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox10BreakAfterEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = lshr i160 %7, 42
  %9 = trunc i160 %8 to i32
  %10 = and i32 %9, 15
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = tail call zeroext i1 @_ZNK5blink9LayoutBox26IsBreakBetweenControllableENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %0, i32 %10)
  %14 = select i1 %13, i32 %10, i32 2
  ret i32 %14

15:                                               ; preds = %1
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox11BreakBeforeEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = lshr i160 %7, 46
  %9 = trunc i160 %8 to i32
  %10 = and i32 %9, 15
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = tail call zeroext i1 @_ZNK5blink9LayoutBox26IsBreakBetweenControllableENS_13EBreakBetweenE(%"class.blink::LayoutBox"* %0, i32 %10)
  %14 = select i1 %13, i32 %10, i32 2
  ret i32 %14

15:                                               ; preds = %1
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox11BreakInsideEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = bitcast %"class.blink::ComputedStyle"** %3 to %"class.blink::ComputedStyleBase"**
  %5 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %5, i64 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = lshr i160 %8, 62
  %10 = trunc i160 %9 to i32
  %11 = and i32 %10, 3
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %53, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = and i96 %16, 1099511627776
  %18 = icmp eq i96 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %2) #20
  br label %21

21:                                               ; preds = %19, %13
  %22 = phi %"class.blink::LayoutFlowThread"* [ %20, %19 ], [ null, %13 ]
  %23 = icmp eq i32 %11, 3
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = icmp eq %"class.blink::LayoutFlowThread"* %22, null
  br i1 %25, label %53, label %52

26:                                               ; preds = %21
  %27 = icmp eq i32 %11, 1
  %28 = icmp ne %"class.blink::LayoutFlowThread"* %22, null
  %29 = and i1 %27, %28
  br i1 %29, label %52, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %34, label %41

34:                                               ; preds = %30, %34
  %35 = phi %"class.blink::LayoutObject"* [ %37, %34 ], [ %2, %30 ]
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 7
  %37 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %37, i64 0, i32 6, i32 0, i32 0
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %38, align 8
  %40 = icmp eq %"class.blink::Node"* %39, null
  br i1 %40, label %34, label %41

41:                                               ; preds = %34, %30
  %42 = phi %"class.blink::Node"* [ %32, %30 ], [ %39, %34 ]
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %44, i64 0, i32 2, i32 0, i32 0
  %46 = load %"class.blink::Document"*, %"class.blink::Document"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %46, i64 0, i32 113
  %48 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %48, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.blink::ViewFragmentationContext"*, %"class.blink::ViewFragmentationContext"** %49, align 8
  %51 = icmp eq %"class.blink::ViewFragmentationContext"* %50, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %24, %41, %26
  br label %53

53:                                               ; preds = %24, %41, %1, %52
  %54 = phi i32 [ %11, %52 ], [ 0, %41 ], [ 0, %24 ], [ 0, %1 ]
  ret i32 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox21ClassABreakPointValueENS_13EBreakBetweenE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %4 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %4, i64 160
  %6 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %5, align 8
  %7 = tail call i32 %6(%"class.blink::LayoutBox"* %0) #20
  %8 = tail call i32 @_ZN5blink28JoinFragmentainerBreakValuesENS_13EBreakBetweenES0_(i32 %1, i32 %7) #20
  ret i32 %8
}

declare i32 @_ZN5blink28JoinFragmentainerBreakValuesENS_13EBreakBetweenES0_(i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox22NeedsForcedBreakBeforeENS_13EBreakBetweenE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 8388608
  %7 = icmp ne i96 %6, 0
  %8 = and i96 %5, 113336795588871485128704
  %9 = icmp eq i96 %8, 75557863725914323419136
  %10 = or i1 %9, %7
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %13 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %13, i64 160
  %15 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBox"* %0) #20
  %17 = tail call i32 @_ZN5blink28JoinFragmentainerBreakValuesENS_13EBreakBetweenES0_(i32 %1, i32 %16) #20
  br label %18

18:                                               ; preds = %2, %11
  %19 = phi i32 [ %17, %11 ], [ %1, %2 ]
  %20 = icmp ult i32 %19, 9
  br i1 %20, label %21, label %26

21:                                               ; preds = %18
  %22 = trunc i32 %19 to i9
  %23 = lshr i9 -45, %22
  %24 = and i9 %23, 1
  %25 = icmp ne i9 %24, 0
  ret i1 %25

26:                                               ; preds = %18
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9LayoutBox13StartPageNameEv(%"class.blink::LayoutBox"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %10, i64 0, i32 9, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #20
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #20
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %1, %14, %29
  ret %"class.WTF::StringImpl"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink9LayoutBox11EndPageNameEv(%"class.blink::LayoutBox"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %10, i64 0, i32 9, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #20
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #20
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %1, %14, %29
  ret %"class.WTF::StringImpl"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %3, align 8
  %5 = icmp eq %"struct.blink::BoxOverflowModel"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 4, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast %"class.blink::LayoutRect"* %11 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  br label %17

15:                                               ; preds = %6, %1
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  br label %17

17:                                               ; preds = %15, %10
  %18 = phi i64 [ %13, %10 ], [ 0, %15 ]
  %19 = phi %"class.blink::LayoutSize"* [ %14, %10 ], [ %16, %15 ]
  %20 = bitcast %"class.blink::LayoutSize"* %19 to i64*
  %21 = load i64, i64* %20, align 4
  %22 = trunc i64 %18 to i32
  %23 = and i64 %18, -4294967296
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 9
  %27 = bitcast [20 x i8]* %26 to i160*
  %28 = load i160, i160* %27, align 8
  %29 = and i160 %28, 15211807202738752817960438464512
  %30 = icmp eq i160 %29, 5070602400912917605986812821504
  br i1 %30, label %31, label %38, !prof !2

31:                                               ; preds = %17
  %32 = trunc i64 %21 to i32
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %34 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %34, i64 106
  %36 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutObject"* %2, i32 %22, i32 %32, %"class.blink::LayoutBox"* null) #20
  br label %38

38:                                               ; preds = %17, %31
  %39 = phi i32 [ %37, %31 ], [ %22, %17 ]
  %40 = zext i32 %39 to i64
  %41 = or i64 %23, %40
  %42 = insertvalue { i64, i64 } undef, i64 %41, 0
  %43 = insertvalue { i64, i64 } %42, i64 %21, 1
  ret { i64, i64 } %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox40InflateVisualRectForFilterUnderContainerERNS_14TransformStateERKNS_12LayoutObjectEPKNS_20LayoutBoxModelObjectE(%"class.blink::LayoutBox"*, %"class.blink::TransformState"* dereferenceable(64), %"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::LayoutBoxModelObject"* readnone) local_unnamed_addr #4 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.blink::PhysicalOffset"*
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"struct.blink::PhysicalOffset"*
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"struct.blink::PhysicalOffset"*
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"struct.blink::PhysicalOffset"*
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink14TransformState7FlattenEv(%"class.blink::TransformState"* %1) #20
  %14 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #20
  %15 = bitcast i64* %5 to i32*
  %16 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %6, i64 0, i32 1, i32 0
  %17 = tail call i64 @_ZNK5blink12LayoutObject19OffsetFromContainerEPKS0_b(%"class.blink::LayoutObject"* %13, %"class.blink::LayoutObject"* %2, i1 zeroext false) #20
  store i64 %17, i64* %5, align 8
  call void @_ZN5blink14TransformState4MoveERKNS_14PhysicalOffsetENS0_21TransformAccumulationE(%"class.blink::TransformState"* %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %6, i32 0) #20
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp ne %"class.blink::LayoutObject"* %19, null
  %21 = icmp ne %"class.blink::LayoutObject"* %19, %2
  %22 = and i1 %20, %21
  br i1 %22, label %23, label %78

23:                                               ; preds = %4
  %24 = bitcast i64* %7 to i8*
  %25 = bitcast i64* %7 to i32*
  %26 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %8, i64 0, i32 1, i32 0
  %27 = bitcast i64* %9 to i8*
  %28 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0
  br label %35

29:                                               ; preds = %76
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 7
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = icmp ne %"class.blink::LayoutObject"* %31, null
  %33 = icmp ne %"class.blink::LayoutObject"* %31, %2
  %34 = and i1 %32, %33
  br i1 %34, label %35, label %78

35:                                               ; preds = %23, %29
  %36 = phi %"class.blink::LayoutObject"* [ %19, %23 ], [ %31, %29 ]
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 4
  %38 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %37 to i96*
  %39 = load i96, i96* %38, align 4
  %40 = and i96 %39, 67108864
  %41 = icmp eq i96 %40, 0
  br i1 %41, label %76, label %42

42:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #20
  store i32 -1431655766, i32* %25, align 8
  store i32 -1431655766, i32* %26, align 4
  %43 = call i64 @_ZNK5blink12LayoutObject18OffsetFromAncestorEPKS0_(%"class.blink::LayoutObject"* nonnull %36, %"class.blink::LayoutObject"* %2) #20
  store i64 %43, i64* %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #20
  %44 = trunc i64 %43 to i32
  %45 = call i1 @llvm.is.constant.i32(i32 %44) #20
  %46 = lshr i64 %43, 32
  %47 = trunc i64 %46 to i32
  br i1 %45, label %48, label %52

48:                                               ; preds = %42
  %49 = sub i32 0, %44
  %50 = icmp eq i32 %49, -2147483648
  %51 = select i1 %50, i32 2147483647, i32 %49
  br label %57

52:                                               ; preds = %42
  %53 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %44) #20
  %54 = extractvalue { i32, i1 } %53, 1
  %55 = extractvalue { i32, i1 } %53, 0
  %56 = select i1 %54, i32 2147483647, i32 %55
  br label %57

57:                                               ; preds = %52, %48
  %58 = phi i32 [ %51, %48 ], [ %56, %52 ]
  %59 = call i1 @llvm.is.constant.i32(i32 %47) #20
  br i1 %59, label %60, label %64

60:                                               ; preds = %57
  %61 = sub i32 0, %47
  %62 = icmp eq i32 %61, -2147483648
  %63 = select i1 %62, i32 2147483647, i32 %61
  br label %69

64:                                               ; preds = %57
  %65 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %47) #20
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 2147483647, i32 %67
  br label %69

69:                                               ; preds = %60, %64
  %70 = phi i32 [ %63, %60 ], [ %68, %64 ]
  %71 = zext i32 %70 to i64
  %72 = shl nuw i64 %71, 32
  %73 = zext i32 %58 to i64
  %74 = or i64 %72, %73
  store i64 %74, i64* %9, align 8
  call void @_ZN5blink14TransformState4MoveERKNS_14PhysicalOffsetENS0_21TransformAccumulationE(%"class.blink::TransformState"* %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %10, i32 0) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #20
  %75 = bitcast %"class.blink::LayoutObject"* %36 to %"class.blink::LayoutBox"*
  call void @_ZNK5blink9LayoutBox26InflateVisualRectForFilterERNS_14TransformStateE(%"class.blink::LayoutBox"* nonnull %75, %"class.blink::TransformState"* dereferenceable(64) %1)
  call void @_ZN5blink14TransformState4MoveERKNS_14PhysicalOffsetENS0_21TransformAccumulationE(%"class.blink::TransformState"* %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %8, i32 0) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #20
  br label %76

76:                                               ; preds = %35, %69
  %77 = icmp eq %"class.blink::LayoutObject"* %36, %28
  br i1 %77, label %78, label %29

78:                                               ; preds = %76, %29, %4
  %79 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #20
  %80 = load i32, i32* %15, align 8
  %81 = call i1 @llvm.is.constant.i32(i32 %80) #20
  br i1 %81, label %82, label %86

82:                                               ; preds = %78
  %83 = sub i32 0, %80
  %84 = icmp eq i32 %83, -2147483648
  %85 = select i1 %84, i32 2147483647, i32 %83
  br label %91

86:                                               ; preds = %78
  %87 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %80) #20
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 2147483647, i32 %89
  br label %91

91:                                               ; preds = %86, %82
  %92 = phi i32 [ %85, %82 ], [ %90, %86 ]
  %93 = load i32, i32* %16, align 4
  %94 = call i1 @llvm.is.constant.i32(i32 %93) #20
  br i1 %94, label %95, label %99

95:                                               ; preds = %91
  %96 = sub i32 0, %93
  %97 = icmp eq i32 %96, -2147483648
  %98 = select i1 %97, i32 2147483647, i32 %96
  br label %104

99:                                               ; preds = %91
  %100 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %93) #20
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 2147483647, i32 %102
  br label %104

104:                                              ; preds = %95, %99
  %105 = phi i32 [ %98, %95 ], [ %103, %99 ]
  %106 = zext i32 %105 to i64
  %107 = shl nuw i64 %106, 32
  %108 = zext i32 %92 to i64
  %109 = or i64 %107, %108
  store i64 %109, i64* %11, align 8
  call void @_ZN5blink14TransformState4MoveERKNS_14PhysicalOffsetENS0_21TransformAccumulationE(%"class.blink::TransformState"* %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %12, i32 0) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #20
  ret void
}

declare i64 @_ZNK5blink12LayoutObject19OffsetFromContainerEPKS0_b(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #5

declare i64 @_ZNK5blink12LayoutObject18OffsetFromAncestorEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox26InflateVisualRectForFilterERNS_14TransformStateE(%"class.blink::LayoutBox"* nocapture readonly, %"class.blink::TransformState"* dereferenceable(64)) local_unnamed_addr #9 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %5 = alloca %"class.blink::FloatQuad", align 4
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %6, align 8
  %8 = icmp eq %"struct.blink::FragmentData::RareData"* %7, null
  br i1 %8, label %124, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %10, align 8
  %12 = icmp eq %"class.blink::PaintLayer"* %11, null
  br i1 %12, label %124, label %13

13:                                               ; preds = %9
  %14 = tail call zeroext i1 @_ZNK5blink10PaintLayer17PaintsWithFiltersEv(%"class.blink::PaintLayer"* nonnull %11) #20
  br i1 %14, label %15, label %124

15:                                               ; preds = %13
  tail call void @_ZN5blink14TransformState7FlattenEv(%"class.blink::TransformState"* %1) #20
  %16 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #20
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %18 = bitcast %"class.blink::FloatQuad"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #20
  %19 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1
  %20 = bitcast %"class.blink::FloatQuad"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %18, i8* align 8 %20, i64 32, i1 false) #20
  %21 = call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* nonnull %5) #20
  %22 = extractvalue { <2 x float>, <2 x float> } %21, 0
  %23 = extractvalue { <2 x float>, <2 x float> } %21, 1
  %24 = extractelement <2 x float> %22, i32 0
  %25 = fmul float %24, 6.400000e+01
  %26 = call float @llvm.floor.f32(float %25) #20
  %27 = fcmp ult float %26, 0xC1E0000000000000
  %28 = fcmp ugt float %26, 0x41DFFFFFE0000000
  %29 = fcmp ogt float %26, 0xC1E0000000000000
  %30 = select i1 %29, float %26, float 0xC1E0000000000000
  %31 = fptosi float %30 to i32
  %32 = select i1 %27, i32 0, i32 2147483647
  %33 = select i1 %28, i32 %32, i32 %31
  %34 = extractelement <2 x float> %22, i32 1
  %35 = fmul float %34, 6.400000e+01
  %36 = call float @llvm.floor.f32(float %35) #20
  %37 = fcmp ult float %36, 0xC1E0000000000000
  %38 = fcmp ugt float %36, 0x41DFFFFFE0000000
  %39 = fcmp ogt float %36, 0xC1E0000000000000
  %40 = select i1 %39, float %36, float 0xC1E0000000000000
  %41 = fptosi float %40 to i32
  %42 = select i1 %37, i32 0, i32 2147483647
  %43 = select i1 %38, i32 %42, i32 %41
  %44 = extractelement <2 x float> %23, i32 0
  %45 = fadd float %24, %44
  %46 = fmul float %45, 6.400000e+01
  %47 = call float @llvm.ceil.f32(float %46) #20
  %48 = fcmp ult float %47, 0xC1E0000000000000
  %49 = fcmp ugt float %47, 0x41DFFFFFE0000000
  %50 = fcmp ogt float %47, 0xC1E0000000000000
  %51 = select i1 %50, float %47, float 0xC1E0000000000000
  %52 = fptosi float %51 to i32
  %53 = select i1 %48, i32 0, i32 2147483647
  %54 = select i1 %49, i32 %53, i32 %52
  %55 = icmp sgt i32 %33, -1
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %54, i32 %33) #20
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 %56, i32 %59, !prof !2
  %61 = extractelement <2 x float> %23, i32 1
  %62 = fadd float %34, %61
  %63 = fmul float %62, 6.400000e+01
  %64 = call float @llvm.ceil.f32(float %63) #20
  %65 = fcmp ult float %64, 0xC1E0000000000000
  %66 = fcmp ugt float %64, 0x41DFFFFFE0000000
  %67 = fcmp ogt float %64, 0xC1E0000000000000
  %68 = select i1 %67, float %64, float 0xC1E0000000000000
  %69 = fptosi float %68 to i32
  %70 = select i1 %65, i32 0, i32 2147483647
  %71 = select i1 %66, i32 %70, i32 %69
  %72 = icmp sgt i32 %43, -1
  %73 = select i1 %72, i32 -2147483648, i32 2147483647
  %74 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %71, i32 %43) #20
  %75 = extractvalue { i32, i1 } %74, 1
  %76 = extractvalue { i32, i1 } %74, 0
  %77 = select i1 %75, i32 %73, i32 %76, !prof !2
  %78 = zext i32 %43 to i64
  %79 = shl nuw i64 %78, 32
  %80 = zext i32 %33 to i64
  %81 = or i64 %79, %80
  %82 = zext i32 %77 to i64
  %83 = shl nuw i64 %82, 32
  %84 = zext i32 %60 to i64
  %85 = or i64 %83, %84
  %86 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %81, i64* %86, align 8
  store i64 %85, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #20
  %87 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %6, align 8
  %88 = icmp eq %"struct.blink::FragmentData::RareData"* %87, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %15
  %90 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %90, align 8
  br label %92

92:                                               ; preds = %15, %89
  %93 = phi %"class.blink::PaintLayer"* [ %91, %89 ], [ null, %15 ]
  %94 = call { i64, i64 } @_ZNK5blink10PaintLayer16MapRectForFilterERKNS_12PhysicalRectE(%"class.blink::PaintLayer"* %93, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4) #20
  %95 = extractvalue { i64, i64 } %94, 0
  %96 = trunc i64 %95 to i32
  %97 = lshr i64 %95, 32
  %98 = trunc i64 %97 to i32
  %99 = extractvalue { i64, i64 } %94, 1
  %100 = sitofp i32 %96 to float
  %101 = fmul float %100, 1.562500e-02
  %102 = sitofp i32 %98 to float
  %103 = fmul float %102, 1.562500e-02
  %104 = trunc i64 %99 to i32
  %105 = sitofp i32 %104 to float
  %106 = fmul float %105, 1.562500e-02
  %107 = lshr i64 %99, 32
  %108 = trunc i64 %107 to i32
  %109 = sitofp i32 %108 to float
  %110 = fmul float %109, 1.562500e-02
  %111 = insertelement <2 x float> undef, float %101, i32 0
  %112 = insertelement <2 x float> %111, float %103, i32 1
  %113 = fadd float %101, %106
  %114 = fadd float %103, %110
  %115 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 3
  %116 = bitcast %"struct.blink::PhysicalOffset"* %115 to i64*
  store i64 0, i64* %116, align 8
  %117 = bitcast %"class.blink::FloatQuad"* %19 to <2 x float>*
  store <2 x float> %112, <2 x float>* %117, align 8
  %118 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1, i32 1, i32 0
  store float %113, float* %118, align 8
  %119 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1, i32 1, i32 1
  store float %103, float* %119, align 4
  %120 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1, i32 2, i32 0
  store float %113, float* %120, align 8
  %121 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1, i32 2, i32 1
  store float %114, float* %121, align 4
  %122 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1, i32 3, i32 0
  store float %101, float* %122, align 8
  %123 = getelementptr inbounds %"class.blink::TransformState", %"class.blink::TransformState"* %1, i64 0, i32 1, i32 3, i32 1
  store float %114, float* %123, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #20
  br label %124

124:                                              ; preds = %2, %9, %13, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #4 align 2 {
  %5 = alloca %"class.blink::LayoutObject::AncestorSkipInfo", align 8
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.blink::PhysicalOffset"*
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"struct.blink::PhysicalOffset"*
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink9LayoutBox26InflateVisualRectForFilterERNS_14TransformStateE(%"class.blink::LayoutBox"* %0, %"class.blink::TransformState"* dereferenceable(64) %2)
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = icmp eq %"class.blink::LayoutBoxModelObject"* %11, %1
  br i1 %12, label %446, label %13

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::LayoutObject::AncestorSkipInfo"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #20
  %15 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %5, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %5, i64 0, i32 1
  %17 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %5, i64 0, i32 2
  %18 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %5, i64 0, i32 3
  %19 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0
  %20 = bitcast %"class.blink::LayoutObject::AncestorSkipInfo"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  store %"class.blink::LayoutObject"* %19, %"class.blink::LayoutObject"** %15, align 8
  store i8 1, i8* %16, align 8
  store i8 0, i8* %17, align 1
  store i8 0, i8* %18, align 2
  %21 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %10, %"class.blink::LayoutObject::AncestorSkipInfo"* nonnull %5) #20
  %22 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, i64 92
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, align 8
  %26 = call zeroext i1 %25(%"class.blink::LayoutObject"* %10, i32 46) #20
  br i1 %26, label %27, label %33

27:                                               ; preds = %13
  %28 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %29 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %29, i64 28
  %31 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %30, align 8
  %32 = call zeroext i1 %31(%"class.blink::LayoutObject"* %10) #20
  br i1 %32, label %33, label %38

33:                                               ; preds = %27, %13
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, i64 92
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, align 8
  %37 = call zeroext i1 %36(%"class.blink::LayoutObject"* %10, i32 47) #20
  br i1 %37, label %38, label %45

38:                                               ; preds = %33, %27
  %39 = icmp eq %"class.blink::LayoutObject"* %21, %19
  br i1 %39, label %43, label %40

40:                                               ; preds = %38
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 7
  %42 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  br label %45

43:                                               ; preds = %38
  %44 = bitcast %"class.blink::LayoutBoxModelObject"* %1 to %"class.blink::LayoutBox"*
  br label %45

45:                                               ; preds = %40, %43, %33
  %46 = phi %"class.blink::LayoutBox"* [ null, %40 ], [ %44, %43 ], [ null, %33 ]
  %47 = phi %"class.blink::LayoutObject"* [ %42, %40 ], [ %19, %43 ], [ %21, %33 ]
  %48 = icmp eq %"class.blink::LayoutObject"* %47, null
  br i1 %48, label %444, label %49

49:                                               ; preds = %45
  %50 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #20
  %51 = bitcast i64* %6 to i32*
  %52 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %7, i64 0, i32 1, i32 0
  store i32 0, i32* %51, align 8
  store i32 0, i32* %52, align 4
  %53 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = and i96 %55, 67108864
  %57 = icmp eq i96 %56, 0
  %58 = bitcast %"class.blink::LayoutObject"* %47 to %"class.blink::LayoutBox"*
  %59 = select i1 %57, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %58
  br i1 %57, label %159, label %60

60:                                               ; preds = %49
  %61 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %59, i64 0, i32 0, i32 0, i32 5, i32 0
  %62 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %62, i64 0, i32 0, i32 9
  %64 = bitcast [20 x i8]* %63 to i160*
  %65 = load i160, i160* %64, align 8
  %66 = and i160 %65, 15211807202738752817960438464512
  %67 = icmp eq i160 %66, 5070602400912917605986812821504
  br i1 %67, label %73, label %68, !prof !2

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %70 = bitcast %"class.blink::LayoutRect"* %69 to i64*
  %71 = load i64, i64* %70, align 4
  %72 = trunc i64 %71 to i32
  br label %98

73:                                               ; preds = %60
  %74 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %59, i64 0, i32 2, i32 1
  %75 = bitcast %"class.blink::LayoutSize"* %74 to i64*
  %76 = load i64, i64* %75, align 4
  %77 = trunc i64 %76 to i32
  %78 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %79 = bitcast %"class.blink::LayoutSize"* %78 to i64*
  %80 = load i64, i64* %79, align 4
  %81 = trunc i64 %80 to i32
  %82 = icmp sgt i32 %81, -1
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %77, i32 %81) #20
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 %83, i32 %86, !prof !2
  %88 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %89 = bitcast %"class.blink::LayoutRect"* %88 to i64*
  %90 = load i64, i64* %89, align 4
  %91 = trunc i64 %90 to i32
  %92 = icmp sgt i32 %91, -1
  %93 = select i1 %92, i32 -2147483648, i32 2147483647
  %94 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %87, i32 %91) #20
  %95 = extractvalue { i32, i1 } %94, 1
  %96 = extractvalue { i32, i1 } %94, 0
  %97 = select i1 %95, i32 %93, i32 %96, !prof !2
  br label %98

98:                                               ; preds = %68, %73
  %99 = phi i32 [ %72, %68 ], [ %97, %73 ]
  %100 = phi i64 [ %71, %68 ], [ %90, %73 ]
  %101 = lshr i64 %100, 32
  %102 = trunc i64 %101 to i32
  %103 = and i64 %100, -4294967296
  %104 = zext i32 %99 to i64
  %105 = or i64 %103, %104
  store i64 %105, i64* %6, align 8
  %106 = icmp eq %"class.blink::LayoutBox"* %46, null
  br i1 %106, label %227, label %107

107:                                              ; preds = %98
  br i1 %67, label %113, label %108, !prof !2

108:                                              ; preds = %107
  %109 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %46, i64 0, i32 2
  %110 = bitcast %"class.blink::LayoutRect"* %109 to i64*
  %111 = load i64, i64* %110, align 4
  %112 = trunc i64 %111 to i32
  br label %138

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %59, i64 0, i32 2, i32 1
  %115 = bitcast %"class.blink::LayoutSize"* %114 to i64*
  %116 = load i64, i64* %115, align 4
  %117 = trunc i64 %116 to i32
  %118 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %46, i64 0, i32 2, i32 1
  %119 = bitcast %"class.blink::LayoutSize"* %118 to i64*
  %120 = load i64, i64* %119, align 4
  %121 = trunc i64 %120 to i32
  %122 = icmp sgt i32 %121, -1
  %123 = select i1 %122, i32 -2147483648, i32 2147483647
  %124 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %117, i32 %121) #20
  %125 = extractvalue { i32, i1 } %124, 1
  %126 = extractvalue { i32, i1 } %124, 0
  %127 = select i1 %125, i32 %123, i32 %126, !prof !2
  %128 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %46, i64 0, i32 2
  %129 = bitcast %"class.blink::LayoutRect"* %128 to i64*
  %130 = load i64, i64* %129, align 4
  %131 = trunc i64 %130 to i32
  %132 = icmp sgt i32 %131, -1
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %127, i32 %131) #20
  %135 = extractvalue { i32, i1 } %134, 1
  %136 = extractvalue { i32, i1 } %134, 0
  %137 = select i1 %135, i32 %133, i32 %136, !prof !2
  br label %138

138:                                              ; preds = %108, %113
  %139 = phi i32 [ %112, %108 ], [ %137, %113 ]
  %140 = phi i64 [ %111, %108 ], [ %130, %113 ]
  %141 = lshr i64 %140, 32
  %142 = trunc i64 %141 to i32
  %143 = icmp sgt i32 %139, -1
  %144 = select i1 %143, i32 -2147483648, i32 2147483647
  %145 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %99, i32 %139) #20
  %146 = extractvalue { i32, i1 } %145, 1
  %147 = extractvalue { i32, i1 } %145, 0
  %148 = select i1 %146, i32 %144, i32 %147, !prof !2
  %149 = icmp sgt i32 %142, -1
  %150 = select i1 %149, i32 -2147483648, i32 2147483647
  %151 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %102, i32 %142) #20
  %152 = extractvalue { i32, i1 } %151, 1
  %153 = extractvalue { i32, i1 } %151, 0
  %154 = select i1 %152, i32 %150, i32 %153, !prof !2
  %155 = zext i32 %154 to i64
  %156 = shl nuw i64 %155, 32
  %157 = zext i32 %148 to i64
  %158 = or i64 %156, %157
  store i64 %158, i64* %6, align 8
  br label %227

159:                                              ; preds = %49
  %160 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %161 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %160, align 8
  %162 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %161, i64 147
  %163 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %162, align 8
  %164 = call %"class.blink::LayoutBox"* %163(%"class.blink::LayoutBox"* %0) #20
  %165 = icmp eq %"class.blink::LayoutBox"* %164, null
  br i1 %165, label %174, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %164, i64 0, i32 0, i32 0, i32 5, i32 0
  %168 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %168, i64 0, i32 0, i32 9
  %170 = bitcast [20 x i8]* %169 to i160*
  %171 = load i160, i160* %170, align 8
  %172 = and i160 %171, 15211807202738752817960438464512
  %173 = icmp eq i160 %172, 5070602400912917605986812821504
  br i1 %173, label %179, label %174, !prof !2

174:                                              ; preds = %166, %159
  %175 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %176 = bitcast %"class.blink::LayoutRect"* %175 to i64*
  %177 = load i64, i64* %176, align 4
  %178 = trunc i64 %177 to i32
  br label %204

179:                                              ; preds = %166
  %180 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %164, i64 0, i32 2, i32 1
  %181 = bitcast %"class.blink::LayoutSize"* %180 to i64*
  %182 = load i64, i64* %181, align 4
  %183 = trunc i64 %182 to i32
  %184 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %185 = bitcast %"class.blink::LayoutSize"* %184 to i64*
  %186 = load i64, i64* %185, align 4
  %187 = trunc i64 %186 to i32
  %188 = icmp sgt i32 %187, -1
  %189 = select i1 %188, i32 -2147483648, i32 2147483647
  %190 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %183, i32 %187) #20
  %191 = extractvalue { i32, i1 } %190, 1
  %192 = extractvalue { i32, i1 } %190, 0
  %193 = select i1 %191, i32 %189, i32 %192, !prof !2
  %194 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %195 = bitcast %"class.blink::LayoutRect"* %194 to i64*
  %196 = load i64, i64* %195, align 4
  %197 = trunc i64 %196 to i32
  %198 = icmp sgt i32 %197, -1
  %199 = select i1 %198, i32 -2147483648, i32 2147483647
  %200 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %193, i32 %197) #20
  %201 = extractvalue { i32, i1 } %200, 1
  %202 = extractvalue { i32, i1 } %200, 0
  %203 = select i1 %201, i32 %199, i32 %202, !prof !2
  br label %204

204:                                              ; preds = %174, %179
  %205 = phi i32 [ %178, %174 ], [ %203, %179 ]
  %206 = phi i64 [ %177, %174 ], [ %196, %179 ]
  %207 = lshr i64 %206, 32
  %208 = trunc i64 %207 to i32
  %209 = load i32, i32* %51, align 8
  %210 = icmp slt i32 %205, 0
  %211 = select i1 %210, i32 -2147483648, i32 2147483647
  %212 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %209, i32 %205) #20
  %213 = extractvalue { i32, i1 } %212, 1
  %214 = extractvalue { i32, i1 } %212, 0
  %215 = select i1 %213, i32 %211, i32 %214, !prof !2
  %216 = load i32, i32* %52, align 4
  %217 = icmp slt i32 %208, 0
  %218 = select i1 %217, i32 -2147483648, i32 2147483647
  %219 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %216, i32 %208) #20
  %220 = extractvalue { i32, i1 } %219, 1
  %221 = extractvalue { i32, i1 } %219, 0
  %222 = select i1 %220, i32 %218, i32 %221, !prof !2
  %223 = zext i32 %222 to i64
  %224 = shl nuw i64 %223, 32
  %225 = zext i32 %215 to i64
  %226 = or i64 %224, %225
  store i64 %226, i64* %6, align 8
  br label %227

227:                                              ; preds = %98, %138, %204
  %228 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %229 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %228, align 8
  %230 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %229, i64 0, i32 0, i32 9
  %231 = bitcast [20 x i8]* %230 to i160*
  %232 = load i160, i160* %231, align 8
  %233 = lshr i160 %232, 80
  %234 = trunc i160 %233 to i32
  %235 = and i32 %234, 7
  %236 = icmp eq i32 %235, 4
  %237 = and i160 %232, 128849018880
  %238 = icmp eq i160 %237, 42949672960
  %239 = and i1 %238, %236
  %240 = select i1 %239, i32 3, i32 %235
  %241 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %242 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %241 to i96*
  %243 = load i96, i96* %242, align 4
  %244 = and i96 %243, 113336795588871485128704
  %245 = icmp eq i96 %244, 75557863725914323419136
  br i1 %245, label %246, label %300

246:                                              ; preds = %227
  %247 = bitcast %"class.blink::LayoutObject"* %47 to i1 (%"class.blink::LayoutObject"*)***
  %248 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %247, align 8
  %249 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %248, i64 26
  %250 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %249, align 8
  %251 = call zeroext i1 %250(%"class.blink::LayoutObject"* nonnull %47) #20
  br i1 %251, label %252, label %300

252:                                              ; preds = %246
  switch i32 %240, label %300 [
    i32 0, label %253
    i32 1, label %272
  ]

253:                                              ; preds = %252
  %254 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 5, i32 0
  %255 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %255, i64 0, i32 0, i32 9
  %257 = bitcast [20 x i8]* %256 to i160*
  %258 = load i160, i160* %257, align 8
  %259 = lshr i160 %258, 80
  %260 = trunc i160 %259 to i32
  %261 = and i32 %260, 7
  %262 = icmp eq i32 %261, 4
  %263 = and i160 %258, 128849018880
  %264 = icmp eq i160 %263, 42949672960
  %265 = and i1 %264, %262
  %266 = icmp ne i32 %261, 3
  %267 = xor i1 %266, %265
  br i1 %267, label %276, label %268

268:                                              ; preds = %253
  %269 = load i96, i96* %54, align 4
  %270 = and i96 %269, 68719476736
  %271 = icmp eq i96 %270, 0
  br i1 %271, label %300, label %276

272:                                              ; preds = %252
  %273 = load i96, i96* %54, align 4
  %274 = and i96 %273, 68719476736
  %275 = icmp eq i96 %274, 0
  br i1 %275, label %300, label %276

276:                                              ; preds = %268, %272, %253
  %277 = bitcast %"class.blink::LayoutObject"* %47 to %"class.blink::LayoutInline"*
  %278 = call i64 @_ZNK5blink12LayoutInline31OffsetForInFlowPositionedInlineERKNS_9LayoutBoxE(%"class.blink::LayoutInline"* nonnull %277, %"class.blink::LayoutBox"* dereferenceable(216) %0) #20
  %279 = trunc i64 %278 to i32
  %280 = lshr i64 %278, 32
  %281 = trunc i64 %280 to i32
  %282 = load i32, i32* %51, align 8
  %283 = icmp slt i32 %279, 0
  %284 = select i1 %283, i32 -2147483648, i32 2147483647
  %285 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %282, i32 %279) #20
  %286 = extractvalue { i32, i1 } %285, 1
  %287 = extractvalue { i32, i1 } %285, 0
  %288 = select i1 %286, i32 %284, i32 %287, !prof !2
  %289 = load i32, i32* %52, align 4
  %290 = icmp slt i32 %281, 0
  %291 = select i1 %290, i32 -2147483648, i32 2147483647
  %292 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %289, i32 %281) #20
  %293 = extractvalue { i32, i1 } %292, 1
  %294 = extractvalue { i32, i1 } %292, 0
  %295 = select i1 %293, i32 %291, i32 %294, !prof !2
  %296 = zext i32 %295 to i64
  %297 = shl nuw i64 %296, 32
  %298 = zext i32 %288 to i64
  %299 = or i64 %297, %298
  store i64 %299, i64* %6, align 8
  br label %341

300:                                              ; preds = %268, %272, %252, %246, %227
  %301 = load i160, i160* %231, align 8
  %302 = lshr i160 %301, 80
  %303 = trunc i160 %302 to i32
  %304 = and i32 %303, 7
  %305 = icmp eq i32 %304, 4
  %306 = and i160 %301, 128849018880
  %307 = icmp eq i160 %306, 42949672960
  %308 = and i1 %307, %305
  %309 = select i1 %308, i32 3, i32 %304
  switch i32 %309, label %341 [
    i32 4, label %310
    i32 2, label %310
  ]

310:                                              ; preds = %300, %300
  %311 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %312 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %311, align 8
  %313 = icmp eq %"struct.blink::FragmentData::RareData"* %312, null
  br i1 %313, label %341, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %312, i64 0, i32 0, i32 0, i32 0, i32 0
  %316 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %315, align 8
  %317 = icmp eq %"class.blink::PaintLayer"* %316, null
  br i1 %317, label %341, label %318

318:                                              ; preds = %314
  %319 = call i64 @_ZNK5blink20LayoutBoxModelObject23OffsetForInFlowPositionEv(%"class.blink::LayoutBoxModelObject"* %11) #20
  %320 = trunc i64 %319 to i32
  %321 = lshr i64 %319, 32
  %322 = trunc i64 %321 to i32
  %323 = load i32, i32* %51, align 8
  %324 = icmp slt i32 %320, 0
  %325 = select i1 %324, i32 -2147483648, i32 2147483647
  %326 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %323, i32 %320) #20
  %327 = extractvalue { i32, i1 } %326, 1
  %328 = extractvalue { i32, i1 } %326, 0
  %329 = select i1 %327, i32 %325, i32 %328, !prof !2
  %330 = load i32, i32* %52, align 4
  %331 = icmp slt i32 %322, 0
  %332 = select i1 %331, i32 -2147483648, i32 2147483647
  %333 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %330, i32 %322) #20
  %334 = extractvalue { i32, i1 } %333, 1
  %335 = extractvalue { i32, i1 } %333, 0
  %336 = select i1 %334, i32 %332, i32 %335, !prof !2
  %337 = zext i32 %336 to i64
  %338 = shl nuw i64 %337, 32
  %339 = zext i32 %329 to i64
  %340 = or i64 %338, %339
  store i64 %340, i64* %6, align 8
  br label %341

341:                                              ; preds = %300, %310, %314, %318, %276
  %342 = load i8, i8* %18, align 2, !range !4
  %343 = icmp eq i8 %342, 0
  br i1 %343, label %345, label %344

344:                                              ; preds = %341
  call void @_ZNK5blink9LayoutBox40InflateVisualRectForFilterUnderContainerERNS_14TransformStateERKNS_12LayoutObjectEPKNS_20LayoutBoxModelObjectE(%"class.blink::LayoutBox"* %0, %"class.blink::TransformState"* dereferenceable(64) %2, %"class.blink::LayoutObject"* nonnull dereferenceable(88) %47, %"class.blink::LayoutBoxModelObject"* %1)
  br label %345

345:                                              ; preds = %341, %344
  %346 = call zeroext i1 @_ZNK5blink9LayoutBox24MapVisualRectToContainerEPKNS_12LayoutObjectERKNS_14PhysicalOffsetES3_NS_15VisualRectFlagsERNS_14TransformStateE(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutObject"* nonnull %47, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %7, %"class.blink::LayoutObject"* %19, i32 %3, %"class.blink::TransformState"* dereferenceable(64) %2)
  br i1 %346, label %347, label %442

347:                                              ; preds = %345
  %348 = load i8, i8* %17, align 1, !range !4
  %349 = icmp eq i8 %348, 0
  br i1 %349, label %423, label %350

350:                                              ; preds = %347
  %351 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 5, i32 0
  %352 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %351, align 8
  %353 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %352, i64 0, i32 0, i32 3, i32 0, i32 0
  %354 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %353, align 8
  %355 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %354, i64 0, i32 2, i32 0, i32 0
  %356 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %355, align 8
  %357 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %356, i64 0, i32 2, i32 0, i32 0
  %358 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %357, align 8
  %359 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %358, i64 0, i32 15, i32 0
  %360 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %359, align 8
  %361 = icmp ne %"class.blink::StyleReflection"* %360, null
  %362 = call zeroext i1 @_ZNK5blink13ComputedStyle27HasStackingGroupingPropertyEb(%"class.blink::ComputedStyle"* %352, i1 zeroext %361) #20
  br i1 %362, label %388, label %363

363:                                              ; preds = %350
  %364 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %352, i64 0, i32 0, i32 2, i32 0, i32 0
  %365 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %364, align 8
  %366 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %365, i64 0, i32 3
  %367 = load i8, i8* %366, align 4
  %368 = and i8 %367, 16
  %369 = icmp eq i8 %368, 0
  %370 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %352, i64 0, i32 0, i32 9
  %371 = bitcast [20 x i8]* %370 to i160*
  %372 = load i160, i160* %371, align 8
  %373 = and i160 %372, 7253554917687775048237056
  %374 = icmp eq i160 %373, 0
  %375 = and i1 %369, %374
  %376 = and i160 %372, 1190036353683150593851392
  %377 = icmp ne i160 %376, 340010386766614455386112
  %378 = or i1 %377, %375
  br i1 %378, label %388, label %379

379:                                              ; preds = %363
  %380 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %353, align 8
  %381 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %380, i64 0, i32 2, i32 0, i32 0
  %382 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %381, align 8
  %383 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %382, i64 0, i32 2, i32 0, i32 0
  %384 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %383, align 8
  %385 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %384, i64 0, i32 45
  %386 = load i32, i32* %385, align 4
  %387 = lshr i32 %386, 31
  br label %388

388:                                              ; preds = %350, %363, %379
  %389 = phi i32 [ %387, %379 ], [ 0, %350 ], [ 0, %363 ]
  %390 = call i64 @_ZNK5blink12LayoutObject18OffsetFromAncestorEPKS0_(%"class.blink::LayoutObject"* %19, %"class.blink::LayoutObject"* nonnull %47) #20
  %391 = trunc i64 %390 to i32
  %392 = lshr i64 %390, 32
  %393 = trunc i64 %392 to i32
  %394 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %394) #20
  %395 = call i1 @llvm.is.constant.i32(i32 %391) #20
  br i1 %395, label %396, label %400

396:                                              ; preds = %388
  %397 = sub i32 0, %391
  %398 = icmp eq i32 %397, -2147483648
  %399 = select i1 %398, i32 2147483647, i32 %397
  br label %405

400:                                              ; preds = %388
  %401 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %391) #20
  %402 = extractvalue { i32, i1 } %401, 1
  %403 = extractvalue { i32, i1 } %401, 0
  %404 = select i1 %402, i32 2147483647, i32 %403
  br label %405

405:                                              ; preds = %400, %396
  %406 = phi i32 [ %399, %396 ], [ %404, %400 ]
  %407 = call i1 @llvm.is.constant.i32(i32 %393) #20
  br i1 %407, label %408, label %412

408:                                              ; preds = %405
  %409 = sub i32 0, %393
  %410 = icmp eq i32 %409, -2147483648
  %411 = select i1 %410, i32 2147483647, i32 %409
  br label %417

412:                                              ; preds = %405
  %413 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %393) #20
  %414 = extractvalue { i32, i1 } %413, 1
  %415 = extractvalue { i32, i1 } %413, 0
  %416 = select i1 %414, i32 2147483647, i32 %415
  br label %417

417:                                              ; preds = %408, %412
  %418 = phi i32 [ %411, %408 ], [ %416, %412 ]
  %419 = zext i32 %418 to i64
  %420 = shl nuw i64 %419, 32
  %421 = zext i32 %406 to i64
  %422 = or i64 %420, %421
  store i64 %422, i64* %8, align 8
  call void @_ZN5blink14TransformState4MoveERKNS_14PhysicalOffsetENS0_21TransformAccumulationE(%"class.blink::TransformState"* %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %9, i32 %389) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %394) #20
  br label %442

423:                                              ; preds = %347
  %424 = bitcast %"class.blink::LayoutObject"* %47 to i1 (%"class.blink::LayoutObject"*, i32)***
  %425 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %424, align 8
  %426 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %425, i64 92
  %427 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %426, align 8
  %428 = call zeroext i1 %427(%"class.blink::LayoutObject"* nonnull %47, i32 55) #20
  br i1 %428, label %429, label %436

429:                                              ; preds = %423
  %430 = bitcast %"class.blink::LayoutObject"* %47 to %"class.blink::LayoutView"*
  %431 = icmp eq i32 %240, 1
  %432 = icmp eq %"class.blink::LayoutObject"* %47, %19
  %433 = and i1 %432, %431
  %434 = zext i1 %433 to i32
  %435 = call zeroext i1 @_ZNK5blink10LayoutView38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEjNS_15VisualRectFlagsE(%"class.blink::LayoutView"* nonnull %430, %"class.blink::LayoutBoxModelObject"* %1, %"class.blink::TransformState"* dereferenceable(64) %2, i32 %434, i32 %3) #20
  br label %442

436:                                              ; preds = %423
  %437 = bitcast %"class.blink::LayoutObject"* %47 to i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)***
  %438 = load i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)**, i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)*** %437, align 8
  %439 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)*, i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)** %438, i64 72
  %440 = load i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)*, i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)** %439, align 8
  %441 = call zeroext i1 %440(%"class.blink::LayoutObject"* nonnull %47, %"class.blink::LayoutBoxModelObject"* %1, %"class.blink::TransformState"* dereferenceable(64) %2, i32 %3) #20
  br label %442

442:                                              ; preds = %429, %436, %345, %417
  %443 = phi i1 [ true, %417 ], [ false, %345 ], [ %435, %429 ], [ %441, %436 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #20
  br label %444

444:                                              ; preds = %45, %442
  %445 = phi i1 [ %443, %442 ], [ true, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #20
  br label %446

446:                                              ; preds = %4, %444
  %447 = phi i1 [ %445, %444 ], [ true, %4 ]
  ret i1 %447
}

declare zeroext i1 @_ZNK5blink10LayoutView38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEjNS_15VisualRectFlagsE(%"class.blink::LayoutView"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32, i32) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink10PaintLayer17PaintsWithFiltersEv(%"class.blink::PaintLayer"*) local_unnamed_addr #5

declare { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"*) local_unnamed_addr #5

declare { i64, i64 } @_ZNK5blink10PaintLayer16MapRectForFilterERKNS_12PhysicalRectE(%"class.blink::PaintLayer"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox18UpdateLogicalWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %5 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %5, i64 183
  %7 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::LayoutBox"* %0) #20
  br i1 %8, label %9, label %44

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 256
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %15, label %44

15:                                               ; preds = %9
  %16 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %17 = icmp eq %"class.blink::LayoutBlock"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0
  %20 = bitcast %"class.blink::LayoutBlock"* %16 to i1 (%"class.blink::LayoutBox"*)***
  %21 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %21, i64 183
  %23 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::LayoutBox"* %19) #20
  br i1 %24, label %25, label %31

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 0, i32 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = and i96 %28, 256
  %30 = icmp eq i96 %29, 0
  br i1 %30, label %44, label %31

31:                                               ; preds = %25, %18, %15
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %3, i32 0) #20
  %32 = load i96, i96* %11, align 4
  %33 = and i96 %32, 256
  %34 = icmp eq i96 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %37 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %36, align 8
  %38 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %37, i64 186
  %39 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %38, align 8
  %40 = tail call i64 %39(%"class.blink::LayoutBox"* %0) #20
  %41 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 5
  %42 = bitcast %"struct.blink::MinMaxSizes"* %41 to i64*
  store i64 %40, i64* %42, align 4
  %43 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 6, i32 0
  store i32 -2147483648, i32* %43, align 4
  tail call void @_ZN5blink12LayoutObject32ClearIntrinsicLogicalWidthsDirtyEv(%"class.blink::LayoutObject"* %3) #20
  br label %44

44:                                               ; preds = %9, %25, %35, %31, %1
  %45 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #20
  %46 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 1, i32 0
  %48 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 2, i32 2, i32 0
  %49 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 2, i32 3, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %45, i8 0, i64 24, i1 false) #20
  call void @_ZNK5blink9LayoutBox19ComputeLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %0, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %2)
  %50 = load i32, i32* %46, align 4
  call void @_ZN5blink9LayoutBox15SetLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 %50)
  %51 = load i32, i32* %47, align 4
  %52 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %53 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %53, i64 0, i32 0, i32 9
  %55 = bitcast [20 x i8]* %54 to i160*
  %56 = load i160, i160* %55, align 8
  %57 = and i160 %56, 15211807202738752817960438464512
  %58 = icmp eq i160 %57, 0
  br i1 %58, label %59, label %70

59:                                               ; preds = %44
  %60 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, %51
  br i1 %62, label %81, label %63

63:                                               ; preds = %59
  store i32 %51, i32* %60, align 4
  %64 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %65 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %64 to i96*
  %66 = load i96, i96* %65, align 4
  %67 = and i96 %66, 63
  %68 = icmp eq i96 %67, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %63
  call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #20
  br label %81

70:                                               ; preds = %44
  %71 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, %51
  br i1 %73, label %81, label %74

74:                                               ; preds = %70
  store i32 %51, i32* %71, align 4
  %75 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %76 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %75 to i96*
  %77 = load i96, i96* %76, align 4
  %78 = and i96 %77, 63
  %79 = icmp eq i96 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %74
  call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #20
  br label %81

81:                                               ; preds = %59, %63, %69, %70, %74, %80
  %82 = load i32, i32* %48, align 4
  %83 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %52, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %83, i64 0, i32 0, i32 9
  %85 = bitcast [20 x i8]* %84 to i160*
  %86 = load i160, i160* %85, align 8, !noalias !147
  %87 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  %88 = and i160 %86, 15211807202738752817960438464512
  %89 = icmp eq i160 %88, 0
  %90 = and i160 %86, 41538374868278621028243970633760768
  %91 = icmp eq i160 %90, 0
  %92 = select i1 %91, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), i64 0 }
  %93 = select i1 %91, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }
  %94 = select i1 %89, { i64, i64 } %93, { i64, i64 } %92
  %95 = select i1 %89, { i64, i64 } %93, { i64, i64 } %92
  %96 = extractvalue { i64, i64 } %94, 0
  %97 = extractvalue { i64, i64 } %95, 1
  %98 = getelementptr inbounds i8, i8* %87, i64 %97
  %99 = bitcast i8* %98 to %"class.blink::LayoutBox"*
  %100 = and i64 %96, 1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %109, label %102

102:                                              ; preds = %81
  %103 = bitcast i8* %98 to i8**
  %104 = load i8*, i8** %103, align 8
  %105 = add i64 %96, -1
  %106 = getelementptr i8, i8* %104, i64 %105
  %107 = bitcast i8* %106 to void (%"class.blink::LayoutBox"*, i32)**
  %108 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %107, align 8
  br label %111

109:                                              ; preds = %81
  %110 = inttoptr i64 %96 to void (%"class.blink::LayoutBox"*, i32)*
  br label %111

111:                                              ; preds = %102, %109
  %112 = phi void (%"class.blink::LayoutBox"*, i32)* [ %108, %102 ], [ %110, %109 ]
  call void %112(%"class.blink::LayoutBox"* %99, i32 %82) #20
  %113 = load i32, i32* %49, align 4
  %114 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %52, align 8
  %115 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %114, i64 0, i32 0, i32 9
  %116 = bitcast [20 x i8]* %115 to i160*
  %117 = load i160, i160* %116, align 8, !noalias !150
  %118 = and i160 %117, 15211807202738752817960438464512
  %119 = icmp eq i160 %118, 0
  %120 = and i160 %117, 41538374868278621028243970633760768
  %121 = icmp eq i160 %120, 0
  %122 = select i1 %121, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), i64 0 }
  %123 = select i1 %121, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }
  %124 = select i1 %119, { i64, i64 } %123, { i64, i64 } %122
  %125 = select i1 %119, { i64, i64 } %123, { i64, i64 } %122
  %126 = extractvalue { i64, i64 } %124, 0
  %127 = extractvalue { i64, i64 } %125, 1
  %128 = getelementptr inbounds i8, i8* %87, i64 %127
  %129 = bitcast i8* %128 to %"class.blink::LayoutBox"*
  %130 = and i64 %126, 1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %139, label %132

132:                                              ; preds = %111
  %133 = bitcast i8* %128 to i8**
  %134 = load i8*, i8** %133, align 8
  %135 = add i64 %126, -1
  %136 = getelementptr i8, i8* %134, i64 %135
  %137 = bitcast i8* %136 to void (%"class.blink::LayoutBox"*, i32)**
  %138 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %137, align 8
  br label %141

139:                                              ; preds = %111
  %140 = inttoptr i64 %126 to void (%"class.blink::LayoutBox"*, i32)*
  br label %141

141:                                              ; preds = %132, %139
  %142 = phi void (%"class.blink::LayoutBox"*, i32)* [ %138, %132 ], [ %140, %139 ]
  call void %142(%"class.blink::LayoutBox"* %129, i32 %113) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #20
  ret void
}

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox19ComputeLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca %"class.blink::Length"*, align 8
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = alloca %"class.blink::Length"*, align 8
  %18 = alloca %"class.blink::Length"*, align 8
  %19 = alloca %"class.blink::Length"*, align 8
  %20 = alloca %"class.blink::Length"*, align 8
  %21 = alloca %"class.blink::Length"*, align 8
  %22 = alloca %"class.blink::Length"*, align 8
  %23 = alloca i64, align 8
  %24 = bitcast i64* %23 to %"class.blink::Length"*
  %25 = alloca i64, align 8
  %26 = bitcast i64* %25 to %"class.blink::Length"*
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = and i160 %32, 15211807202738752817960438464512
  %34 = icmp eq i160 %33, 0
  %35 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %37 = select i1 %34, i32* %35, i32* %36
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 1, i32 0
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %41, i64 0, i32 0, i32 9
  %43 = bitcast [20 x i8]* %42 to i160*
  %44 = load i160, i160* %43, align 8, !noalias !153
  %45 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  %46 = and i160 %44, 15211807202738752817960438464512
  %47 = icmp eq i160 %46, 0
  %48 = and i160 %44, 41538374868278621028243970633760768
  %49 = icmp eq i160 %48, 0
  %50 = select i1 %49, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %51 = select i1 %49, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %52 = select i1 %47, { i64, i64 } %51, { i64, i64 } %50
  %53 = select i1 %47, { i64, i64 } %51, { i64, i64 } %50
  %54 = extractvalue { i64, i64 } %52, 0
  %55 = extractvalue { i64, i64 } %53, 1
  %56 = getelementptr inbounds i8, i8* %45, i64 %55
  %57 = bitcast i8* %56 to %"class.blink::LayoutBoxModelObject"*
  %58 = and i64 %54, 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %67, label %60

60:                                               ; preds = %2
  %61 = bitcast i8* %56 to i8**
  %62 = load i8*, i8** %61, align 8
  %63 = add i64 %54, -1
  %64 = getelementptr i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %66 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %65, align 8
  br label %69

67:                                               ; preds = %2
  %68 = inttoptr i64 %54 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %69

69:                                               ; preds = %60, %67
  %70 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %66, %60 ], [ %68, %67 ]
  %71 = tail call i32 %70(%"class.blink::LayoutBoxModelObject"* %57) #20
  %72 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2, i32 2, i32 0
  store i32 %71, i32* %72, align 4
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8, !noalias !156
  %77 = and i160 %76, 15211807202738752817960438464512
  %78 = icmp eq i160 %77, 0
  %79 = and i160 %76, 41538374868278621028243970633760768
  %80 = icmp eq i160 %79, 0
  %81 = select i1 %80, { i64, i64 } { i64 1025, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %82 = select i1 %80, { i64, i64 } { i64 1041, i64 0 }, { i64, i64 } { i64 1033, i64 0 }
  %83 = select i1 %78, { i64, i64 } %82, { i64, i64 } %81
  %84 = select i1 %78, { i64, i64 } %82, { i64, i64 } %81
  %85 = extractvalue { i64, i64 } %83, 0
  %86 = extractvalue { i64, i64 } %84, 1
  %87 = getelementptr inbounds i8, i8* %45, i64 %86
  %88 = bitcast i8* %87 to %"class.blink::LayoutBoxModelObject"*
  %89 = and i64 %85, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %69
  %92 = bitcast i8* %87 to i8**
  %93 = load i8*, i8** %92, align 8
  %94 = add i64 %85, -1
  %95 = getelementptr i8, i8* %93, i64 %94
  %96 = bitcast i8* %95 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %97 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %96, align 8
  br label %100

98:                                               ; preds = %69
  %99 = inttoptr i64 %85 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %100

100:                                              ; preds = %91, %98
  %101 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %97, %91 ], [ %99, %98 ]
  %102 = tail call i32 %101(%"class.blink::LayoutBoxModelObject"* %88) #20
  %103 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2, i32 3, i32 0
  store i32 %102, i32* %103, align 4
  %104 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %105 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %104, align 8
  %106 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %105, null
  br i1 %106, label %111, label %107

107:                                              ; preds = %100
  %108 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %105, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %109 = load i8, i8* %108, align 4, !range !4
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %127

111:                                              ; preds = %107, %100
  %112 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %113 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %112, align 8
  %114 = icmp eq %"struct.blink::LayoutBoxRareData"* %113, null
  br i1 %114, label %136, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %113, i64 0, i32 1, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, -64
  br i1 %118, label %136, label %119

119:                                              ; preds = %115
  br i1 %106, label %129, label %120

120:                                              ; preds = %119
  %121 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %105, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %122 = load i8, i8* %121, align 4, !range !4
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %126 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %125, align 8
  br label %129

127:                                              ; preds = %107, %120
  %128 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %105, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %132

129:                                              ; preds = %124, %119
  %130 = phi %"struct.blink::LayoutBoxRareData"* [ %126, %124 ], [ %113, %119 ]
  %131 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %130, i64 0, i32 1, i32 0
  br label %132

132:                                              ; preds = %127, %129
  %133 = phi i32* [ %128, %127 ], [ %131, %129 ]
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 0, i32 0
  store i32 %134, i32* %135, align 4
  br label %796

136:                                              ; preds = %115, %111
  %137 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %138 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %137 to i96*
  %139 = load i96, i96* %138, align 4
  %140 = and i96 %139, 113336795588871485128704
  %141 = icmp eq i96 %140, 75557863725914323419136
  br i1 %141, label %142, label %147

142:                                              ; preds = %136
  %143 = bitcast %"class.blink::LayoutBox"* %0 to void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)***
  %144 = load void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)**, void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %144, i64 191
  %146 = load void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %145, align 8
  tail call void %146(%"class.blink::LayoutBox"* %0, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24) %1) #20
  br label %796

147:                                              ; preds = %136
  %148 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %149 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %148, align 8
  %150 = bitcast %"class.blink::LayoutObject"* %149 to i1 (%"class.blink::LayoutObject"*)***
  %151 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %150, align 8
  %152 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %151, i64 77
  %153 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %152, align 8
  %154 = tail call zeroext i1 %153(%"class.blink::LayoutObject"* %149) #20
  %155 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %148, align 8
  %156 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %155, i64 0, i32 5, i32 0
  %157 = bitcast %"class.blink::ComputedStyle"** %156 to %"class.blink::ComputedStyleBase"**
  %158 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %158, i64 0, i32 3, i32 0, i32 0
  %160 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %160, i64 0, i32 2, i32 0, i32 0
  %162 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %162, i64 0, i32 13
  %164 = bitcast [3 x i8]* %163 to i24*
  %165 = load i24, i24* %164, align 8
  %166 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %167 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %166, align 8
  %168 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %167, i64 169
  %169 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %168, align 8
  %170 = tail call zeroext i1 %169(%"class.blink::LayoutBox"* %0) #20
  br i1 %170, label %171, label %190

171:                                              ; preds = %147
  %172 = icmp slt i24 %165, 0
  %173 = and i1 %154, %172
  %174 = and i24 %165, 14336
  %175 = icmp ne i24 %174, 4096
  %176 = xor i1 %173, true
  %177 = or i1 %175, %176
  br i1 %177, label %178, label %190

178:                                              ; preds = %171
  %179 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %148, align 8
  %180 = icmp eq %"class.blink::LayoutObject"* %179, null
  br i1 %180, label %190, label %181

181:                                              ; preds = %178
  %182 = bitcast %"class.blink::LayoutObject"* %179 to i1 (%"class.blink::LayoutObject"*, i32)***
  %183 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %182, align 8
  %184 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %183, i64 92
  %185 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %184, align 8
  %186 = tail call zeroext i1 %185(%"class.blink::LayoutObject"* nonnull %179, i32 10) #20
  br i1 %186, label %187, label %190

187:                                              ; preds = %181
  %188 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasStretchedLogicalWidthEv(%"class.blink::LayoutBox"* %0)
  %189 = xor i1 %188, true
  br label %190

190:                                              ; preds = %178, %171, %181, %187, %147
  %191 = phi i1 [ false, %147 ], [ true, %181 ], [ %189, %187 ], [ false, %171 ], [ true, %178 ]
  %192 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %193 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %194 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %193, align 8
  %195 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %194, i64 131
  %196 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %195, align 8
  %197 = tail call i32 %196(%"class.blink::LayoutBox"* %0) #20
  %198 = icmp sgt i32 %197, 0
  %199 = select i1 %198, i32 %197, i32 0
  %200 = load i96, i96* %138, align 4
  %201 = and i96 %200, 134217728
  %202 = icmp eq i96 %201, 0
  br i1 %202, label %327, label %203

203:                                              ; preds = %190
  %204 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %205 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %204, align 8
  %206 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %205, i64 22
  %207 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %206, align 8
  %208 = tail call zeroext i1 %207(%"class.blink::LayoutObject"* %27) #20
  br i1 %208, label %327, label %209

209:                                              ; preds = %203
  %210 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %210)
  %211 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211)
  %212 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %212)
  %213 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213)
  %214 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %192, i64 0, i32 0, i32 9
  %215 = bitcast [20 x i8]* %214 to i160*
  %216 = load i160, i160* %215, align 8, !noalias !159
  %217 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %192, i64 0, i32 0, i32 7, i32 0, i32 0
  %218 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %217, align 8, !noalias !159
  %219 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %218, i64 0, i32 12
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %218, i64 0, i32 11
  %221 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %218, i64 0, i32 9
  %222 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %218, i64 0, i32 10
  store %"class.blink::Length"* %219, %"class.blink::Length"** %7, align 8, !alias.scope !159
  store %"class.blink::Length"* %220, %"class.blink::Length"** %8, align 8, !alias.scope !159
  store %"class.blink::Length"* %221, %"class.blink::Length"** %9, align 8, !alias.scope !159
  store %"class.blink::Length"* %222, %"class.blink::Length"** %10, align 8, !alias.scope !159
  %223 = and i160 %216, 15211807202738752817960438464512
  %224 = icmp eq i160 %223, 0
  %225 = and i160 %216, 41538374868278621028243970633760768
  %226 = icmp eq i160 %225, 0
  %227 = select i1 %226, %"class.blink::Length"** %10, %"class.blink::Length"** %8
  %228 = select i1 %226, %"class.blink::Length"** %7, %"class.blink::Length"** %9
  %229 = select i1 %224, %"class.blink::Length"** %227, %"class.blink::Length"** %228
  %230 = load %"class.blink::Length"*, %"class.blink::Length"** %229, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %210)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %212)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213)
  %231 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %230, i64 0, i32 2
  %232 = load i8, i8* %231, align 1
  %233 = icmp eq i8 %232, 2
  br i1 %233, label %234, label %255, !prof !3

234:                                              ; preds = %209
  %235 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %230, i64 0, i32 3
  %236 = load i8, i8* %235, align 2, !range !4
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %241, label %238

238:                                              ; preds = %234
  %239 = bitcast %"class.blink::Length"* %230 to float*
  %240 = load float, float* %239, align 4
  br label %245

241:                                              ; preds = %234
  %242 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %230, i64 0, i32 0, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = sitofp i32 %243 to float
  br label %245

245:                                              ; preds = %241, %238
  %246 = phi float [ %240, %238 ], [ %244, %241 ]
  %247 = fmul float %246, 6.400000e+01
  %248 = fcmp ult float %247, 0xC1E0000000000000
  %249 = fcmp ugt float %247, 0x41DFFFFFE0000000
  %250 = fcmp ogt float %247, 0xC1E0000000000000
  %251 = select i1 %250, float %247, float 0xC1E0000000000000
  %252 = fptosi float %251 to i32
  %253 = select i1 %248, i32 0, i32 2147483647
  %254 = select i1 %249, i32 %253, i32 %252
  br label %257

255:                                              ; preds = %209
  %256 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %230, i32 %199) #20
  br label %257

257:                                              ; preds = %245, %255
  %258 = phi i32 [ %254, %245 ], [ %256, %255 ]
  store i32 %258, i32* %72, align 4
  %259 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %259)
  %260 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %260)
  %261 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261)
  %262 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %262)
  %263 = load i160, i160* %215, align 8, !noalias !162
  %264 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %217, align 8, !noalias !162
  %265 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %264, i64 0, i32 12
  %266 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %264, i64 0, i32 11
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %264, i64 0, i32 9
  %268 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %264, i64 0, i32 10
  store %"class.blink::Length"* %265, %"class.blink::Length"** %3, align 8, !alias.scope !162
  store %"class.blink::Length"* %266, %"class.blink::Length"** %4, align 8, !alias.scope !162
  store %"class.blink::Length"* %267, %"class.blink::Length"** %5, align 8, !alias.scope !162
  store %"class.blink::Length"* %268, %"class.blink::Length"** %6, align 8, !alias.scope !162
  %269 = and i160 %263, 15211807202738752817960438464512
  %270 = icmp eq i160 %269, 0
  %271 = and i160 %263, 41538374868278621028243970633760768
  %272 = icmp eq i160 %271, 0
  %273 = select i1 %272, %"class.blink::Length"** %4, %"class.blink::Length"** %6
  %274 = select i1 %272, %"class.blink::Length"** %5, %"class.blink::Length"** %3
  %275 = select i1 %270, %"class.blink::Length"** %273, %"class.blink::Length"** %274
  %276 = load %"class.blink::Length"*, %"class.blink::Length"** %275, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %259)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %260)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %262)
  %277 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %276, i64 0, i32 2
  %278 = load i8, i8* %277, align 1
  %279 = icmp eq i8 %278, 2
  br i1 %279, label %280, label %301, !prof !3

280:                                              ; preds = %257
  %281 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %276, i64 0, i32 3
  %282 = load i8, i8* %281, align 2, !range !4
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %287, label %284

284:                                              ; preds = %280
  %285 = bitcast %"class.blink::Length"* %276 to float*
  %286 = load float, float* %285, align 4
  br label %291

287:                                              ; preds = %280
  %288 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %276, i64 0, i32 0, i32 0
  %289 = load i32, i32* %288, align 4
  %290 = sitofp i32 %289 to float
  br label %291

291:                                              ; preds = %287, %284
  %292 = phi float [ %286, %284 ], [ %290, %287 ]
  %293 = fmul float %292, 6.400000e+01
  %294 = fcmp ult float %293, 0xC1E0000000000000
  %295 = fcmp ugt float %293, 0x41DFFFFFE0000000
  %296 = fcmp ogt float %293, 0xC1E0000000000000
  %297 = select i1 %296, float %293, float 0xC1E0000000000000
  %298 = fptosi float %297 to i32
  %299 = select i1 %294, i32 0, i32 2147483647
  %300 = select i1 %295, i32 %299, i32 %298
  br label %303

301:                                              ; preds = %257
  %302 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %276, i32 %199) #20
  br label %303

303:                                              ; preds = %291, %301
  %304 = phi i32 [ %300, %291 ], [ %302, %301 ]
  store i32 %304, i32* %103, align 4
  br i1 %191, label %305, label %796

305:                                              ; preds = %303
  %306 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*, i32)***
  %307 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %306, align 8
  %308 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %307, i64 167
  %309 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %308, align 8
  %310 = tail call i32 %309(%"class.blink::LayoutBox"* %0, i32 0) #20
  %311 = tail call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %40)
  %312 = icmp slt i32 %311, 0
  %313 = select i1 %312, i32 -2147483648, i32 2147483647
  %314 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %310, i32 %311) #20
  %315 = extractvalue { i32, i1 } %314, 1
  %316 = extractvalue { i32, i1 } %314, 0
  %317 = select i1 %315, i32 %313, i32 %316
  %318 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %319 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %318, align 8
  %320 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %319, i64 69
  %321 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %320, align 8
  %322 = tail call i64 %321(%"class.blink::LayoutBox"* %0) #20
  %323 = trunc i64 %322 to i32
  %324 = icmp slt i32 %317, %323
  %325 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 0, i32 0
  %326 = select i1 %324, i32 %323, i32 %317
  store i32 %326, i32* %325, align 4
  br label %796

327:                                              ; preds = %190, %203
  %328 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %27, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %329 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %328, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %330 = bitcast %"class.blink::ComputedStyle"** %329 to %"class.blink::ComputedStyleBase"**
  %331 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %330, align 8
  %332 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %331, i64 0, i32 9
  %333 = bitcast [20 x i8]* %332 to i160*
  %334 = load i160, i160* %333, align 8
  %335 = bitcast %"class.blink::ComputedStyle"** %28 to %"class.blink::ComputedStyleBase"**
  %336 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %335, align 8
  %337 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %336, i64 0, i32 9
  %338 = bitcast [20 x i8]* %337 to i160*
  %339 = load i160, i160* %338, align 8
  %340 = and i160 %334, 15211807202738752817960438464512
  %341 = icmp ne i160 %340, 0
  %342 = and i160 %339, 15211807202738752817960438464512
  %343 = icmp eq i160 %342, 0
  %344 = xor i1 %341, %343
  br i1 %344, label %345, label %350

345:                                              ; preds = %327
  %346 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %193, align 8
  %347 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %346, i64 131
  %348 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %347, align 8
  %349 = tail call i32 %348(%"class.blink::LayoutBox"* %0) #20
  br label %352

350:                                              ; preds = %327
  %351 = tail call i32 @_ZNK5blink9LayoutBox41PerpendicularContainingBlockLogicalHeightEv(%"class.blink::LayoutBox"* %0) #20
  br label %352

352:                                              ; preds = %345, %350
  %353 = phi i32 [ %349, %345 ], [ %351, %350 ]
  %354 = icmp sgt i32 %353, 0
  %355 = select i1 %354, i32 %353, i32 0
  %356 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %27, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  br i1 %191, label %357, label %371

357:                                              ; preds = %352
  %358 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*, i32)***
  %359 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %358, align 8
  %360 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %359, i64 167
  %361 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %360, align 8
  %362 = tail call i32 %361(%"class.blink::LayoutBox"* %0, i32 0) #20
  %363 = tail call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %40)
  %364 = icmp slt i32 %363, 0
  %365 = select i1 %364, i32 -2147483648, i32 2147483647
  %366 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %362, i32 %363) #20
  %367 = extractvalue { i32, i1 } %366, 1
  %368 = extractvalue { i32, i1 } %366, 0
  %369 = select i1 %367, i32 %365, i32 %368, !prof !2
  %370 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 0, i32 0
  store i32 %369, i32* %370, align 4
  br label %419

371:                                              ; preds = %352
  %372 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %373 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %372, i64 0, i32 0, i32 9
  %374 = bitcast [20 x i8]* %373 to i160*
  %375 = load i160, i160* %374, align 8
  %376 = and i160 %375, 15211807202738752817960438464512
  %377 = icmp eq i160 %376, 0
  %378 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %372, i64 0, i32 0, i32 5, i32 0, i32 0
  %379 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %378, align 8
  %380 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %379, i64 0, i32 8
  %381 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %379, i64 0, i32 3
  %382 = select i1 %377, %"class.blink::Length"* %380, %"class.blink::Length"* %381
  %383 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %382, i64 0, i32 2
  %384 = load i8, i8* %383, align 1
  %385 = icmp eq i8 %384, 0
  br i1 %385, label %386, label %405

386:                                              ; preds = %371
  %387 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %148, align 8
  %388 = icmp eq %"class.blink::LayoutObject"* %387, null
  br i1 %388, label %399, label %389

389:                                              ; preds = %386
  %390 = bitcast %"class.blink::LayoutObject"* %387 to i1 (%"class.blink::LayoutObject"*, i32)***
  %391 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %390, align 8
  %392 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %391, i64 92
  %393 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %392, align 8
  %394 = tail call zeroext i1 %393(%"class.blink::LayoutObject"* nonnull %387, i32 10) #20
  br i1 %394, label %395, label %399

395:                                              ; preds = %389
  %396 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasStretchedLogicalWidthEv(%"class.blink::LayoutBox"* %0)
  br i1 %396, label %397, label %399

397:                                              ; preds = %395
  %398 = tail call zeroext i1 @_ZNK5blink9LayoutBox25HasStretchedLogicalHeightEv(%"class.blink::LayoutBox"* %0)
  br i1 %398, label %405, label %399

399:                                              ; preds = %386, %397, %395, %389
  %400 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 0
  %401 = tail call zeroext i1 @_ZNK5blink9LayoutBox34ComputeLogicalWidthFromAspectRatioEPNS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutUnit"* %400)
  br i1 %401, label %402, label %405

402:                                              ; preds = %399
  %403 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 0, i32 0
  %404 = load i32, i32* %403, align 4
  br label %419

405:                                              ; preds = %399, %397, %371
  %406 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %192, i64 0, i32 0, i32 9
  %407 = bitcast [20 x i8]* %406 to i160*
  %408 = load i160, i160* %407, align 8
  %409 = and i160 %408, 15211807202738752817960438464512
  %410 = icmp eq i160 %409, 0
  %411 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %192, i64 0, i32 0, i32 5, i32 0, i32 0
  %412 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %411, align 8
  %413 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %412, i64 0, i32 8
  %414 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %412, i64 0, i32 3
  %415 = select i1 %410, %"class.blink::Length"* %413, %"class.blink::Length"* %414
  %416 = tail call i32 @_ZNK5blink9LayoutBox24ComputeLogicalWidthUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitEPKNS_11LayoutBlockE(%"class.blink::LayoutBox"* %0, i32 0, %"class.blink::Length"* dereferenceable(8) %415, i32 %355, %"class.blink::LayoutBlock"* %356)
  %417 = tail call i32 @_ZNK5blink9LayoutBox29ConstrainLogicalWidthByMinMaxENS_10LayoutUnitES1_PKNS_11LayoutBlockEb(%"class.blink::LayoutBox"* %0, i32 %416, i32 %355, %"class.blink::LayoutBlock"* %356, i1 zeroext true)
  %418 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 0, i32 0
  store i32 %417, i32* %418, align 4
  br label %419

419:                                              ; preds = %402, %405, %357
  %420 = phi i32 [ %404, %402 ], [ %417, %405 ], [ %369, %357 ]
  %421 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 0, i32 0
  %422 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2, i32 2
  %423 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2, i32 3
  %424 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %425 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %425)
  %426 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %426)
  %427 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %427)
  %428 = bitcast %"class.blink::Length"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %428)
  %429 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %424, i64 0, i32 0, i32 9
  %430 = bitcast [20 x i8]* %429 to i160*
  %431 = load i160, i160* %430, align 8, !noalias !165
  %432 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %424, i64 0, i32 0, i32 7, i32 0, i32 0
  %433 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %432, align 8, !noalias !165
  %434 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %433, i64 0, i32 12
  %435 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %433, i64 0, i32 11
  %436 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %433, i64 0, i32 9
  %437 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %433, i64 0, i32 10
  store %"class.blink::Length"* %434, %"class.blink::Length"** %11, align 8, !alias.scope !165
  store %"class.blink::Length"* %435, %"class.blink::Length"** %12, align 8, !alias.scope !165
  store %"class.blink::Length"* %436, %"class.blink::Length"** %13, align 8, !alias.scope !165
  store %"class.blink::Length"* %437, %"class.blink::Length"** %14, align 8, !alias.scope !165
  %438 = and i160 %431, 15211807202738752817960438464512
  %439 = icmp eq i160 %438, 0
  %440 = and i160 %431, 41538374868278621028243970633760768
  %441 = icmp eq i160 %440, 0
  %442 = select i1 %441, %"class.blink::Length"** %14, %"class.blink::Length"** %12
  %443 = select i1 %441, %"class.blink::Length"** %11, %"class.blink::Length"** %13
  %444 = select i1 %439, %"class.blink::Length"** %442, %"class.blink::Length"** %443
  %445 = bitcast %"class.blink::Length"** %444 to i64**
  %446 = load i64*, i64** %445, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %425)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %426)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %427)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %428)
  %447 = load i64, i64* %446, align 4
  store i64 %447, i64* %23, align 8
  %448 = and i64 %447, 280375465082880
  %449 = icmp eq i64 %448, 8796093022208
  br i1 %449, label %450, label %459

450:                                              ; preds = %419
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %24) #20
  %451 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %452 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %451, i64 0, i32 0, i32 9
  %453 = bitcast [20 x i8]* %452 to i160*
  %454 = load i160, i160* %453, align 8, !noalias !168
  %455 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %451, i64 0, i32 0, i32 7, i32 0, i32 0
  %456 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %455, align 8, !noalias !168
  %457 = and i160 %454, 15211807202738752817960438464512
  %458 = and i160 %454, 41538374868278621028243970633760768
  br label %459

459:                                              ; preds = %419, %450
  %460 = phi i160 [ %440, %419 ], [ %458, %450 ]
  %461 = phi i160 [ %438, %419 ], [ %457, %450 ]
  %462 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %433, %419 ], [ %456, %450 ]
  %463 = bitcast %"class.blink::Length"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %463)
  %464 = bitcast %"class.blink::Length"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %464)
  %465 = bitcast %"class.blink::Length"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %465)
  %466 = bitcast %"class.blink::Length"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %466)
  %467 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %462, i64 0, i32 12
  %468 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %462, i64 0, i32 11
  %469 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %462, i64 0, i32 9
  %470 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %462, i64 0, i32 10
  store %"class.blink::Length"* %467, %"class.blink::Length"** %15, align 8, !alias.scope !168
  store %"class.blink::Length"* %468, %"class.blink::Length"** %16, align 8, !alias.scope !168
  store %"class.blink::Length"* %469, %"class.blink::Length"** %17, align 8, !alias.scope !168
  store %"class.blink::Length"* %470, %"class.blink::Length"** %18, align 8, !alias.scope !168
  %471 = icmp eq i160 %461, 0
  %472 = icmp eq i160 %460, 0
  %473 = select i1 %472, %"class.blink::Length"** %16, %"class.blink::Length"** %18
  %474 = select i1 %472, %"class.blink::Length"** %17, %"class.blink::Length"** %15
  %475 = select i1 %471, %"class.blink::Length"** %473, %"class.blink::Length"** %474
  %476 = bitcast %"class.blink::Length"** %475 to i64**
  %477 = load i64*, i64** %476, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %463)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %464)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %465)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %466)
  %478 = load i64, i64* %477, align 4
  store i64 %478, i64* %25, align 8
  %479 = and i64 %478, 280375465082880
  %480 = icmp eq i64 %479, 8796093022208
  br i1 %480, label %481, label %482

481:                                              ; preds = %459
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %26) #20
  br label %482

482:                                              ; preds = %459, %481
  call void @_ZNK5blink9LayoutBox26ComputeMarginsForDirectionENS_15MarginDirectionEPKNS_11LayoutBlockENS_10LayoutUnitES5_RS5_S6_NS_6LengthES7_(%"class.blink::LayoutBox"* %0, i32 1, %"class.blink::LayoutBlock"* %356, i32 %199, i32 %420, %"class.blink::LayoutUnit"* dereferenceable(4) %422, %"class.blink::LayoutUnit"* dereferenceable(4) %423, %"class.blink::Length"* nonnull %24, %"class.blink::Length"* nonnull %26)
  %483 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %26, i64 0, i32 2
  %484 = load i8, i8* %483, align 1
  %485 = icmp eq i8 %484, 8
  br i1 %485, label %486, label %487

486:                                              ; preds = %482
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %26) #20
  br label %487

487:                                              ; preds = %482, %486
  %488 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %24, i64 0, i32 2
  %489 = load i8, i8* %488, align 1
  %490 = icmp eq i8 %489, 8
  br i1 %490, label %491, label %492

491:                                              ; preds = %487
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %24) #20
  br label %492

492:                                              ; preds = %487, %491
  %493 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %356, i64 0, i32 0, i32 0, i32 0
  %494 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %356, i64 0, i32 0, i32 0, i32 0, i32 4
  %495 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %494 to i96*
  %496 = load i96, i96* %495, align 4
  %497 = load i96, i96* %138, align 4
  %498 = xor i96 %497, %496
  %499 = trunc i96 %498 to i32
  %500 = icmp sgt i32 %499, -1
  %501 = and i1 %198, %500
  br i1 %501, label %502, label %579

502:                                              ; preds = %492
  %503 = load i32, i32* %421, align 4
  %504 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %422, i64 0, i32 0
  %505 = load i32, i32* %504, align 4
  %506 = icmp slt i32 %505, 0
  %507 = select i1 %506, i32 -2147483648, i32 2147483647
  %508 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %503, i32 %505) #20
  %509 = extractvalue { i32, i1 } %508, 1
  %510 = extractvalue { i32, i1 } %508, 0
  %511 = select i1 %509, i32 %507, i32 %510, !prof !2
  %512 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %423, i64 0, i32 0
  %513 = load i32, i32* %512, align 4
  %514 = icmp slt i32 %513, 0
  %515 = select i1 %514, i32 -2147483648, i32 2147483647
  %516 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %511, i32 %513) #20
  %517 = extractvalue { i32, i1 } %516, 1
  %518 = extractvalue { i32, i1 } %516, 0
  %519 = select i1 %517, i32 %515, i32 %518, !prof !2
  %520 = icmp eq i32 %199, %519
  %521 = and i96 %497, 142606336
  %522 = icmp ne i96 %521, 0
  %523 = or i1 %522, %520
  br i1 %523, label %579, label %524

524:                                              ; preds = %502
  %525 = bitcast %"class.blink::LayoutBlock"* %356 to i1 (%"class.blink::LayoutObject"*)***
  %526 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %525, align 8
  %527 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %526, i64 79
  %528 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %527, align 8
  %529 = call zeroext i1 %528(%"class.blink::LayoutObject"* %493) #20
  br i1 %529, label %579, label %530

530:                                              ; preds = %524
  %531 = bitcast %"class.blink::LayoutBlock"* %356 to i1 (%"class.blink::LayoutObject"*, i32)***
  %532 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %531, align 8
  %533 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %532, i64 92
  %534 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %533, align 8
  %535 = call zeroext i1 %534(%"class.blink::LayoutObject"* %493, i32 10) #20
  br i1 %535, label %579, label %536

536:                                              ; preds = %530
  %537 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %531, align 8
  %538 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %537, i64 92
  %539 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %538, align 8
  %540 = call zeroext i1 %539(%"class.blink::LayoutObject"* %493, i32 27) #20
  br i1 %540, label %579, label %541

541:                                              ; preds = %536
  %542 = load i32, i32* %421, align 4
  %543 = icmp sgt i32 %542, -1
  %544 = select i1 %543, i32 -2147483648, i32 2147483647
  %545 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %199, i32 %542) #20
  %546 = extractvalue { i32, i1 } %545, 1
  %547 = extractvalue { i32, i1 } %545, 0
  %548 = select i1 %546, i32 %544, i32 %547, !prof !2
  %549 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %356, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %550 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %549, align 8
  %551 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %550, i64 0, i32 0, i32 9
  %552 = bitcast [20 x i8]* %551 to i160*
  %553 = load i160, i160* %552, align 8
  %554 = and i160 %553, 41538374868278621028243970633760768
  %555 = icmp eq i160 %554, 0
  %556 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %557 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %556, i64 0, i32 0, i32 9
  %558 = bitcast [20 x i8]* %557 to i160*
  %559 = load i160, i160* %558, align 8
  %560 = and i160 %559, 41538374868278621028243970633760768
  %561 = icmp eq i160 %560, 0
  %562 = xor i1 %555, %561
  br i1 %562, label %563, label %571

563:                                              ; preds = %541
  %564 = load i32, i32* %512, align 4
  %565 = icmp sgt i32 %564, -1
  %566 = select i1 %565, i32 -2147483648, i32 2147483647
  %567 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %548, i32 %564) #20
  %568 = extractvalue { i32, i1 } %567, 1
  %569 = extractvalue { i32, i1 } %567, 0
  %570 = select i1 %568, i32 %566, i32 %569, !prof !2
  store i32 %570, i32* %72, align 4
  br label %579

571:                                              ; preds = %541
  %572 = load i32, i32* %504, align 4
  %573 = icmp sgt i32 %572, -1
  %574 = select i1 %573, i32 -2147483648, i32 2147483647
  %575 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %548, i32 %572) #20
  %576 = extractvalue { i32, i1 } %575, 1
  %577 = extractvalue { i32, i1 } %575, 0
  %578 = select i1 %576, i32 %574, i32 %577, !prof !2
  store i32 %578, i32* %103, align 4
  br label %579

579:                                              ; preds = %502, %492, %530, %524, %563, %571, %536
  %580 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %192, i64 0, i32 0, i32 0, i32 0, i32 0
  %581 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %580, align 8
  %582 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %581, i64 0, i32 3
  %583 = load float, float* %582, align 8
  %584 = fcmp une float %583, 1.000000e+00
  br i1 %584, label %585, label %796

585:                                              ; preds = %579
  %586 = bitcast %"class.blink::Length"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %586)
  %587 = bitcast %"class.blink::Length"** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %587)
  %588 = bitcast %"class.blink::Length"** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %588)
  %589 = bitcast %"class.blink::Length"** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %589)
  %590 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %192, i64 0, i32 0, i32 9
  %591 = bitcast [20 x i8]* %590 to i160*
  %592 = load i160, i160* %591, align 8, !noalias !171
  %593 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %192, i64 0, i32 0, i32 7, i32 0, i32 0
  %594 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %593, align 8, !noalias !171
  %595 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %594, i64 0, i32 12
  %596 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %594, i64 0, i32 11
  %597 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %594, i64 0, i32 9
  %598 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %594, i64 0, i32 10
  store %"class.blink::Length"* %595, %"class.blink::Length"** %19, align 8, !alias.scope !171
  store %"class.blink::Length"* %596, %"class.blink::Length"** %20, align 8, !alias.scope !171
  store %"class.blink::Length"* %597, %"class.blink::Length"** %21, align 8, !alias.scope !171
  store %"class.blink::Length"* %598, %"class.blink::Length"** %22, align 8, !alias.scope !171
  %599 = and i160 %592, 15211807202738752817960438464512
  %600 = icmp eq i160 %599, 0
  %601 = and i160 %592, 41538374868278621028243970633760768
  %602 = icmp eq i160 %601, 0
  %603 = select i1 %602, %"class.blink::Length"** %22, %"class.blink::Length"** %20
  %604 = select i1 %602, %"class.blink::Length"** %19, %"class.blink::Length"** %21
  %605 = select i1 %600, %"class.blink::Length"** %603, %"class.blink::Length"** %604
  %606 = load %"class.blink::Length"*, %"class.blink::Length"** %605, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %586)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %587)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %588)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %589)
  %607 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %606, i64 0, i32 2
  %608 = load i8, i8* %607, align 1
  %609 = icmp eq i8 %608, 2
  br i1 %609, label %610, label %796

610:                                              ; preds = %585
  %611 = load i96, i96* %138, align 4
  %612 = and i96 %611, 16777216
  %613 = icmp eq i96 %612, 0
  br i1 %613, label %614, label %626

614:                                              ; preds = %610
  %615 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %616 = load %"class.blink::Node"*, %"class.blink::Node"** %615, align 8
  %617 = icmp eq %"class.blink::Node"* %616, null
  br i1 %617, label %626, label %618

618:                                              ; preds = %614
  %619 = bitcast %"class.blink::Node"* %616 to i8 (%"class.blink::Node"*)***
  %620 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %619, align 8
  %621 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %620, i64 34
  %622 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %621, align 8
  %623 = call zeroext i8 %622(%"class.blink::Node"* nonnull %616) #20
  %624 = icmp ne i8 %623, 0
  %625 = load i96, i96* %138, align 4
  br label %626

626:                                              ; preds = %618, %614, %610
  %627 = phi i96 [ %611, %614 ], [ %625, %618 ], [ %611, %610 ]
  %628 = phi i1 [ false, %614 ], [ %624, %618 ], [ false, %610 ]
  %629 = and i96 %627, 16777216
  %630 = icmp eq i96 %629, 0
  br i1 %630, label %631, label %634

631:                                              ; preds = %626
  %632 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %633 = load %"class.blink::Node"*, %"class.blink::Node"** %632, align 8
  br label %634

634:                                              ; preds = %631, %626
  %635 = phi %"class.blink::Node"* [ %633, %631 ], [ null, %626 ]
  br i1 %628, label %636, label %641

636:                                              ; preds = %634
  %637 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %635, i64 0, i32 2, i32 0, i32 0
  %638 = bitcast %"class.blink::Node"** %637 to %"class.blink::ContainerNode"**
  %639 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %638, align 8
  %640 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %639, i64 0, i32 0
  br label %641

641:                                              ; preds = %634, %636
  %642 = phi %"class.blink::Node"* [ %640, %636 ], [ %635, %634 ]
  %643 = icmp eq %"class.blink::Node"* %642, null
  br i1 %643, label %796, label %644

644:                                              ; preds = %641
  %645 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %642, i64 0, i32 1
  %646 = load i32, i32* %645, align 8
  %647 = and i32 %646, 48
  %648 = icmp eq i32 %647, 0
  br i1 %648, label %649, label %796

649:                                              ; preds = %644
  %650 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE, align 8
  %651 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %650, i64 0, i32 0, i32 0, i32 0
  %652 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %651, align 8
  %653 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %642, i64 1, i32 2
  %654 = bitcast %"class.blink::Member.318"* %653 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %655 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %654, align 8
  %656 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %655, i64 0, i32 3, i32 0, i32 0, i32 0
  %657 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %656, align 8
  %658 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %652, i64 0, i32 3, i32 0, i32 0, i32 0
  %659 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %658, align 8
  %660 = icmp eq %"class.WTF::StringImpl"* %657, %659
  br i1 %660, label %668, label %661

661:                                              ; preds = %649
  %662 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE, align 8
  %663 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %662, i64 0, i32 0, i32 0, i32 0
  %664 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %663, align 8
  %665 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %664, i64 0, i32 3, i32 0, i32 0, i32 0
  %666 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %665, align 8
  %667 = icmp eq %"class.WTF::StringImpl"* %657, %666
  br i1 %667, label %668, label %796

668:                                              ; preds = %661, %649
  %669 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %580, align 8
  %670 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %669, i64 0, i32 3
  %671 = load float, float* %670, align 8
  %672 = fpext float %671 to double
  %673 = fdiv double 1.000000e+00, %672
  %674 = fsub double 1.000000e+00, %673
  %675 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %676 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %675, align 8
  %677 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %676, i64 13
  %678 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %677, align 8
  %679 = call %"class.blink::LayoutObjectChildList"* %678(%"class.blink::LayoutObject"* %27) #20
  %680 = icmp eq %"class.blink::LayoutObjectChildList"* %679, null
  br i1 %680, label %749, label %681

681:                                              ; preds = %668
  %682 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %679, i64 0, i32 0
  %683 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %682, align 8
  %684 = icmp eq %"class.blink::LayoutObject"* %683, null
  br i1 %684, label %749, label %685

685:                                              ; preds = %681, %744
  %686 = phi float [ %745, %744 ], [ 0.000000e+00, %681 ]
  %687 = phi %"class.blink::LayoutObject"* [ %747, %744 ], [ %683, %681 ]
  %688 = bitcast %"class.blink::LayoutObject"* %687 to i1 (%"class.blink::LayoutObject"*, i32)***
  %689 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %688, align 8
  %690 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %689, i64 92
  %691 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %690, align 8
  %692 = call zeroext i1 %691(%"class.blink::LayoutObject"* nonnull %687, i32 14) #20
  br i1 %692, label %693, label %744

693:                                              ; preds = %685
  %694 = bitcast %"class.blink::LayoutObject"* %687 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %695 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %694, align 8
  %696 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %695, i64 13
  %697 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %696, align 8
  %698 = call %"class.blink::LayoutObjectChildList"* %697(%"class.blink::LayoutObject"* nonnull %687) #20
  %699 = icmp eq %"class.blink::LayoutObjectChildList"* %698, null
  br i1 %699, label %744, label %700

700:                                              ; preds = %693
  %701 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %698, i64 0, i32 0
  %702 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %701, align 8
  %703 = icmp eq %"class.blink::LayoutObject"* %702, null
  br i1 %703, label %744, label %704

704:                                              ; preds = %700, %740
  %705 = phi %"class.blink::LayoutObject"* [ %742, %740 ], [ %702, %700 ]
  %706 = bitcast %"class.blink::LayoutObject"* %705 to i1 (%"class.blink::LayoutObject"*, i32)***
  %707 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %706, align 8
  %708 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %707, i64 92
  %709 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %708, align 8
  %710 = call zeroext i1 %709(%"class.blink::LayoutObject"* nonnull %705, i32 15) #20
  br i1 %710, label %711, label %740

711:                                              ; preds = %704
  %712 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %705, i64 0, i32 4
  %713 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %712 to i96*
  %714 = load i96, i96* %713, align 4
  %715 = and i96 %714, 63
  %716 = icmp eq i96 %715, 0
  br i1 %716, label %723, label %717

717:                                              ; preds = %711
  %718 = bitcast %"class.blink::LayoutObject"* %705 to %"class.blink::LayoutBox"*
  %719 = bitcast %"class.blink::LayoutObject"* %705 to void (%"class.blink::LayoutBox"*)***
  %720 = load void (%"class.blink::LayoutBox"*)**, void (%"class.blink::LayoutBox"*)*** %719, align 8
  %721 = getelementptr inbounds void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %720, i64 54
  %722 = load void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %721, align 8
  call void %722(%"class.blink::LayoutBox"* nonnull %718) #20
  br label %723

723:                                              ; preds = %717, %711
  %724 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %705, i64 0, i32 5, i32 0
  %725 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %724, align 8
  %726 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %725, i64 0, i32 0, i32 9
  %727 = bitcast [20 x i8]* %726 to i160*
  %728 = load i160, i160* %727, align 8
  %729 = and i160 %728, 15211807202738752817960438464512
  %730 = icmp eq i160 %729, 0
  %731 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %705, i64 1, i32 4, i32 0, i64 4
  %732 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %705, i64 1, i32 4, i32 0, i64 8
  %733 = select i1 %730, i8* %731, i8* %732
  %734 = bitcast i8* %733 to i32*
  %735 = load i32, i32* %734, align 4
  %736 = sitofp i32 %735 to float
  %737 = fmul float %736, 1.562500e-02
  %738 = fcmp olt float %686, %737
  %739 = select i1 %738, float %737, float %686
  br label %744

740:                                              ; preds = %704
  %741 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %705, i64 0, i32 9
  %742 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %741, align 8
  %743 = icmp eq %"class.blink::LayoutObject"* %742, null
  br i1 %743, label %744, label %704

744:                                              ; preds = %740, %723, %700, %693, %685
  %745 = phi float [ %739, %723 ], [ %686, %685 ], [ %686, %700 ], [ %686, %693 ], [ %686, %740 ]
  %746 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %687, i64 0, i32 9
  %747 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %746, align 8
  %748 = icmp eq %"class.blink::LayoutObject"* %747, null
  br i1 %748, label %749, label %685

749:                                              ; preds = %744, %668, %681
  %750 = phi float [ 0.000000e+00, %681 ], [ 0.000000e+00, %668 ], [ %745, %744 ]
  %751 = fpext float %750 to double
  %752 = fmul double %674, %751
  %753 = fptrunc double %752 to float
  %754 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %356, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %755 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %754, align 8
  %756 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %755, i64 0, i32 0, i32 9
  %757 = bitcast [20 x i8]* %756 to i160*
  %758 = load i160, i160* %757, align 8
  %759 = and i160 %758, 41538374868278621028243970633760768
  %760 = icmp eq i160 %759, 0
  %761 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %762 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %761, i64 0, i32 0, i32 9
  %763 = bitcast [20 x i8]* %762 to i160*
  %764 = load i160, i160* %763, align 8
  %765 = and i160 %764, 41538374868278621028243970633760768
  %766 = icmp eq i160 %765, 0
  %767 = xor i1 %760, %766
  br i1 %767, label %768, label %782

768:                                              ; preds = %749
  %769 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %423, i64 0, i32 0
  %770 = load i32, i32* %769, align 4
  %771 = sitofp i32 %770 to float
  %772 = fmul float %771, 1.562500e-02
  %773 = fadd float %772, %753
  %774 = fmul float %773, 6.400000e+01
  %775 = fcmp ult float %774, 0xC1E0000000000000
  %776 = fcmp ugt float %774, 0x41DFFFFFE0000000
  %777 = fcmp ogt float %774, 0xC1E0000000000000
  %778 = select i1 %777, float %774, float 0xC1E0000000000000
  %779 = fptosi float %778 to i32
  %780 = select i1 %775, i32 0, i32 2147483647
  %781 = select i1 %776, i32 %780, i32 %779
  store i32 %781, i32* %769, align 4
  br label %796

782:                                              ; preds = %749
  %783 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %422, i64 0, i32 0
  %784 = load i32, i32* %783, align 4
  %785 = sitofp i32 %784 to float
  %786 = fmul float %785, 1.562500e-02
  %787 = fadd float %786, %753
  %788 = fmul float %787, 6.400000e+01
  %789 = fcmp ult float %788, 0xC1E0000000000000
  %790 = fcmp ugt float %788, 0x41DFFFFFE0000000
  %791 = fcmp ogt float %788, 0xC1E0000000000000
  %792 = select i1 %791, float %788, float 0xC1E0000000000000
  %793 = fptosi float %792 to i32
  %794 = select i1 %789, i32 0, i32 2147483647
  %795 = select i1 %790, i32 %794, i32 %793
  store i32 %795, i32* %783, align 4
  br label %796

796:                                              ; preds = %644, %305, %303, %661, %641, %782, %768, %585, %579, %132, %142
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox15SetLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  br i1 %10, label %11, label %36

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, %1
  br i1 %14, label %61, label %15

15:                                               ; preds = %11
  store i32 %1, i32* %12, align 4
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = and i96 %18, 63
  %20 = icmp eq i96 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #20
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  br label %23

23:                                               ; preds = %21, %15
  %24 = phi %"class.blink::ComputedStyle"* [ %22, %21 ], [ %5, %15 ]
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8
  %28 = and i160 %27, 15211807202738752817960438464512
  %29 = icmp eq i160 %28, 5070602400912917605986812821504
  br i1 %29, label %30, label %61

30:                                               ; preds = %23
  %31 = load i96, i96* %17, align 4
  %32 = and i96 %31, 17592186044416
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  tail call void @_ZN5blink12LayoutObject39SetSubtreeShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %3, i8 zeroext 14) #20
  br label %61

35:                                               ; preds = %30
  tail call void @_ZN5blink12LayoutObject41SetSubtreeShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #20
  br label %61

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, %1
  br i1 %39, label %61, label %40

40:                                               ; preds = %36
  store i32 %1, i32* %37, align 4
  %41 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %42 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %41 to i96*
  %43 = load i96, i96* %42, align 4
  %44 = and i96 %43, 63
  %45 = icmp eq i96 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #20
  %47 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi %"class.blink::ComputedStyle"* [ %47, %46 ], [ %5, %40 ]
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %49, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8
  %53 = and i160 %52, 15211807202738752817960438464512
  %54 = icmp eq i160 %53, 5070602400912917605986812821504
  br i1 %54, label %55, label %61

55:                                               ; preds = %48
  %56 = load i96, i96* %42, align 4
  %57 = and i96 %56, 17592186044416
  %58 = icmp eq i96 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %55
  tail call void @_ZN5blink12LayoutObject39SetSubtreeShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %3, i8 zeroext 14) #20
  br label %61

60:                                               ; preds = %55
  tail call void @_ZN5blink12LayoutObject41SetSubtreeShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #20
  br label %61

61:                                               ; preds = %60, %59, %48, %36, %35, %34, %23, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox31ContainerWidthInInlineDirectionEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %3, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = bitcast %"class.blink::ComputedStyle"** %4 to %"class.blink::ComputedStyleBase"**
  %6 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %6, i64 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %11 = bitcast %"class.blink::ComputedStyle"** %10 to %"class.blink::ComputedStyleBase"**
  %12 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %12, i64 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = and i160 %9, 15211807202738752817960438464512
  %17 = icmp ne i160 %16, 0
  %18 = and i160 %15, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  %20 = xor i1 %17, %19
  br i1 %20, label %21, label %27

21:                                               ; preds = %1
  %22 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %23 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %23, i64 131
  %25 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBox"* %0) #20
  br label %29

27:                                               ; preds = %1
  %28 = tail call i32 @_ZNK5blink9LayoutBox41PerpendicularContainingBlockLogicalHeightEv(%"class.blink::LayoutBox"* %0)
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi i32 [ %28, %27 ], [ %26, %21 ]
  %31 = icmp sgt i32 %30, 0
  %32 = select i1 %31, i32 %30, i32 0
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox49ShouldComputeLogicalWidthFromAspectRatioAndInsetsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.blink::Length"*, align 8
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %11, i64 0, i32 1, i32 1, i32 0
  %13 = load float, float* %12, align 4
  %14 = fcmp oeq float %13, 0.000000e+00
  br i1 %14, label %89, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %11, i64 0, i32 1, i32 1, i32 1
  %17 = load float, float* %16, align 4
  %18 = fcmp oeq float %17, 0.000000e+00
  %19 = fcmp olt float %13, 1.562500e-02
  %20 = or i1 %19, %18
  %21 = fcmp olt float %17, 1.562500e-02
  %22 = or i1 %21, %20
  br i1 %22, label %89, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %11, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 4
  %26 = and i8 %25, 3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %89, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 113336795588871485128704
  %33 = icmp eq i96 %32, 75557863725914323419136
  br i1 %33, label %34, label %89

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %11, i64 0, i32 8, i32 2
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %88

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %11, i64 0, i32 3, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %88

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::Length"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %47 = bitcast [20 x i8]* %46 to i160*
  %48 = load i160, i160* %47, align 8, !noalias !174
  %49 = lshr i160 %48, 102
  %50 = trunc i160 %49 to i8
  %51 = and i8 %50, 3
  %52 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 7, i32 0, i32 0
  %53 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %52, align 8, !noalias !174
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %53, i64 0, i32 18
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %53, i64 0, i32 17
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %53, i64 0, i32 8
  store %"class.blink::Length"* %54, %"class.blink::Length"** %2, align 8, !alias.scope !174
  store %"class.blink::Length"* %55, %"class.blink::Length"** %3, align 8, !alias.scope !174
  store %"class.blink::Length"* %56, %"class.blink::Length"** %4, align 8, !alias.scope !174
  %57 = icmp eq i8 %51, 0
  %58 = icmp eq i8 %51, 1
  %59 = select i1 %58, %"class.blink::Length"** %3, %"class.blink::Length"** %4
  %60 = select i1 %57, %"class.blink::Length"** %2, %"class.blink::Length"** %59
  %61 = load %"class.blink::Length"*, %"class.blink::Length"** %60, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  %62 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %61, i64 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %88, label %65

65:                                               ; preds = %42
  %66 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66)
  %67 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67)
  %68 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68)
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %53, i64 0, i32 7
  store %"class.blink::Length"* %55, %"class.blink::Length"** %5, align 8, !alias.scope !177
  store %"class.blink::Length"* %69, %"class.blink::Length"** %6, align 8, !alias.scope !177
  store %"class.blink::Length"* %56, %"class.blink::Length"** %7, align 8, !alias.scope !177
  %70 = select i1 %58, %"class.blink::Length"** %7, %"class.blink::Length"** %5
  %71 = select i1 %57, %"class.blink::Length"** %6, %"class.blink::Length"** %70
  %72 = load %"class.blink::Length"*, %"class.blink::Length"** %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68)
  %73 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %72, i64 0, i32 2
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %88, label %76

76:                                               ; preds = %65
  %77 = and i160 %48, 15211807202738752817960438464512
  %78 = icmp eq i160 %77, 0
  %79 = select i1 %78, %"class.blink::Length"* %56, %"class.blink::Length"* %54
  %80 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %79, i64 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %76
  %84 = select i1 %78, %"class.blink::Length"* %55, %"class.blink::Length"* %69
  %85 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %84, i64 0, i32 2
  %86 = load i8, i8* %85, align 1
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %83, %65, %42, %38, %34
  br label %89

89:                                               ; preds = %1, %15, %76, %83, %23, %28, %88
  %90 = phi i1 [ false, %88 ], [ false, %28 ], [ false, %23 ], [ true, %83 ], [ true, %76 ], [ false, %15 ], [ false, %1 ]
  ret i1 %90
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox20ComputeLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #20
  br i1 %12, label %15, label %83

13:                                               ; preds = %2
  %14 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #20
  br i1 %14, label %15, label %83

15:                                               ; preds = %11, %13
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = and i160 %19, 15211807202738752817960438464512
  %21 = icmp eq i160 %20, 0
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 5, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %22, align 8
  br i1 %21, label %24, label %36

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %23, i64 0, i32 2, i32 1
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %23, i64 0, i32 2, i32 1, i32 3
  %27 = load i8, i8* %26, align 2, !range !4
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Length"* %25 to float*
  %31 = load float, float* %30, align 4
  br label %48

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %25, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sitofp i32 %34 to float
  br label %48

36:                                               ; preds = %15
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %23, i64 0, i32 2, i32 0
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %23, i64 0, i32 2, i32 0, i32 3
  %39 = load i8, i8* %38, align 2, !range !4
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.blink::Length"* %37 to float*
  %43 = load float, float* %42, align 4
  br label %48

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %37, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = sitofp i32 %46 to float
  br label %48

48:                                               ; preds = %41, %44, %29, %32
  %49 = phi float [ %31, %29 ], [ %35, %32 ], [ %43, %41 ], [ %47, %44 ]
  %50 = fmul float %49, 6.400000e+01
  %51 = fcmp ult float %50, 0xC1E0000000000000
  %52 = fcmp ugt float %50, 0x41DFFFFFE0000000
  %53 = fcmp ogt float %50, 0xC1E0000000000000
  %54 = select i1 %53, float %50, float 0xC1E0000000000000
  %55 = fptosi float %54 to i32
  %56 = select i1 %51, i32 0, i32 2147483647
  %57 = select i1 %52, i32 %56, i32 %55
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %59 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %58)
  %60 = icmp slt i32 %59, 0
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %59) #20
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 %61, i32 %64, !prof !2
  %66 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %0)
  %67 = extractvalue { i64, i64 } %66, 1
  %68 = trunc i64 %67 to i32
  %69 = lshr i64 %67, 32
  %70 = trunc i64 %69 to i32
  %71 = icmp slt i32 %70, 0
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %68, i32 %70) #20
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !2
  %77 = icmp slt i32 %76, 0
  %78 = select i1 %77, i32 -2147483648, i32 2147483647
  %79 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %65, i32 %76) #20
  %80 = extractvalue { i32, i1 } %79, 1
  %81 = extractvalue { i32, i1 } %79, 0
  %82 = select i1 %80, i32 %78, i32 %81, !prof !2
  br label %236

83:                                               ; preds = %11, %13
  %84 = tail call i32 @_ZNK5blink9LayoutBox32DefaultIntrinsicContentBlockSizeEv(%"class.blink::LayoutBox"* %0)
  %85 = icmp eq i32 %84, -64
  br i1 %85, label %141, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %88 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %87)
  %89 = icmp slt i32 %88, 0
  %90 = select i1 %89, i32 -2147483648, i32 2147483647
  %91 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %84, i32 %88) #20
  %92 = extractvalue { i32, i1 } %91, 1
  %93 = extractvalue { i32, i1 } %91, 0
  %94 = select i1 %92, i32 %90, i32 %93, !prof !2
  %95 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %96 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %95, align 8
  %97 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %96, i64 92
  %98 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %97, align 8
  %99 = tail call zeroext i1 %98(%"class.blink::LayoutObject"* %3, i32 52) #20
  br i1 %99, label %123, label %100

100:                                              ; preds = %86
  %101 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %95, align 8
  %102 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %101, i64 92
  %103 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %102, align 8
  %104 = tail call zeroext i1 %103(%"class.blink::LayoutObject"* %3, i32 34) #20
  br i1 %104, label %123, label %105

105:                                              ; preds = %100
  %106 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %0)
  %107 = extractvalue { i64, i64 } %106, 1
  %108 = trunc i64 %107 to i32
  %109 = lshr i64 %107, 32
  %110 = trunc i64 %109 to i32
  %111 = icmp slt i32 %110, 0
  %112 = select i1 %111, i32 -2147483648, i32 2147483647
  %113 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %108, i32 %110) #20
  %114 = extractvalue { i32, i1 } %113, 1
  %115 = extractvalue { i32, i1 } %113, 0
  %116 = select i1 %114, i32 %112, i32 %115, !prof !2
  %117 = icmp slt i32 %116, 0
  %118 = select i1 %117, i32 -2147483648, i32 2147483647
  %119 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %94, i32 %116) #20
  %120 = extractvalue { i32, i1 } %119, 1
  %121 = extractvalue { i32, i1 } %119, 0
  %122 = select i1 %120, i32 %118, i32 %121, !prof !2
  br label %123

123:                                              ; preds = %86, %105, %100
  %124 = phi i32 [ %94, %100 ], [ %122, %105 ], [ %94, %86 ]
  %125 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %95, align 8
  %126 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %125, i64 92
  %127 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %126, align 8
  %128 = tail call zeroext i1 %127(%"class.blink::LayoutObject"* %3, i32 51) #20
  br i1 %128, label %139, label %129

129:                                              ; preds = %123
  %130 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %95, align 8
  %131 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %130, i64 92
  %132 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %131, align 8
  %133 = tail call zeroext i1 %132(%"class.blink::LayoutObject"* %3, i32 34) #20
  br i1 %133, label %139, label %134

134:                                              ; preds = %129
  %135 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %95, align 8
  %136 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %135, i64 92
  %137 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %136, align 8
  %138 = tail call zeroext i1 %137(%"class.blink::LayoutObject"* %3, i32 35) #20
  br i1 %138, label %139, label %236

139:                                              ; preds = %123, %129, %134
  %140 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 4, i32 0
  store i32 %84, i32* %140, align 8
  br label %236

141:                                              ; preds = %83
  %142 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %143 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %142, i64 0, i32 0, i32 3, i32 0, i32 0
  %144 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %144, i64 0, i32 2, i32 0, i32 0
  %146 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %146, i64 0, i32 2, i32 0, i32 0
  %148 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %148, i64 0, i32 45
  %150 = load i32, i32* %149, align 4
  %151 = and i32 %150, 24
  %152 = icmp eq i32 %151, 24
  br i1 %152, label %153, label %225

153:                                              ; preds = %141
  %154 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %155 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %154 to i96*
  %156 = load i96, i96* %155, align 4
  %157 = and i96 %156, 1207959552
  %158 = icmp eq i96 %157, 134217728
  br i1 %158, label %225, label %159

159:                                              ; preds = %153
  %160 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %161 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %160, align 8
  %162 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %161, i64 92
  %163 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %162, align 8
  %164 = tail call zeroext i1 %163(%"class.blink::LayoutObject"* %3, i32 43) #20
  br i1 %164, label %225, label %165

165:                                              ; preds = %159
  %166 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %160, align 8
  %167 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %166, i64 92
  %168 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %167, align 8
  %169 = tail call zeroext i1 %168(%"class.blink::LayoutObject"* %3, i32 46) #20
  br i1 %169, label %190, label %170

170:                                              ; preds = %165
  %171 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %160, align 8
  %172 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %171, i64 92
  %173 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %172, align 8
  %174 = tail call zeroext i1 %173(%"class.blink::LayoutObject"* %3, i32 48) #20
  br i1 %174, label %190, label %175

175:                                              ; preds = %170
  %176 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %160, align 8
  %177 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %176, i64 92
  %178 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %177, align 8
  %179 = tail call zeroext i1 %178(%"class.blink::LayoutObject"* %3, i32 45) #20
  br i1 %179, label %190, label %180

180:                                              ; preds = %175
  %181 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %160, align 8
  %182 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %181, i64 92
  %183 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %182, align 8
  %184 = tail call zeroext i1 %183(%"class.blink::LayoutObject"* %3, i32 49) #20
  br i1 %184, label %190, label %185

185:                                              ; preds = %180
  %186 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %160, align 8
  %187 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %186, i64 92
  %188 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %187, align 8
  %189 = tail call zeroext i1 %188(%"class.blink::LayoutObject"* %3, i32 50) #20
  br i1 %189, label %190, label %195

190:                                              ; preds = %185, %180, %175, %170, %165
  %191 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %160, align 8
  %192 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %191, i64 92
  %193 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %192, align 8
  %194 = tail call zeroext i1 %193(%"class.blink::LayoutObject"* %3, i32 45) #20
  br i1 %194, label %195, label %225

195:                                              ; preds = %185, %190
  %196 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %160, align 8
  %197 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %196, i64 92
  %198 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %197, align 8
  %199 = tail call zeroext i1 %198(%"class.blink::LayoutObject"* %3, i32 44) #20
  br i1 %199, label %225, label %200

200:                                              ; preds = %195
  %201 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %160, align 8
  %202 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %201, i64 92
  %203 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %202, align 8
  %204 = tail call zeroext i1 %203(%"class.blink::LayoutObject"* %3, i32 10) #20
  br i1 %204, label %225, label %205

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %207 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %206)
  %208 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %0)
  %209 = extractvalue { i64, i64 } %208, 1
  %210 = trunc i64 %209 to i32
  %211 = lshr i64 %209, 32
  %212 = trunc i64 %211 to i32
  %213 = icmp slt i32 %212, 0
  %214 = select i1 %213, i32 -2147483648, i32 2147483647
  %215 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %210, i32 %212) #20
  %216 = extractvalue { i32, i1 } %215, 1
  %217 = extractvalue { i32, i1 } %215, 0
  %218 = select i1 %216, i32 %214, i32 %217, !prof !2
  %219 = icmp slt i32 %218, 0
  %220 = select i1 %219, i32 -2147483648, i32 2147483647
  %221 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %207, i32 %218) #20
  %222 = extractvalue { i32, i1 } %221, 1
  %223 = extractvalue { i32, i1 } %221, 0
  %224 = select i1 %222, i32 %220, i32 %223, !prof !2
  br label %236

225:                                              ; preds = %195, %153, %159, %190, %141, %200
  %226 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %227 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %226, i64 0, i32 0, i32 9
  %228 = bitcast [20 x i8]* %227 to i160*
  %229 = load i160, i160* %228, align 8
  %230 = and i160 %229, 15211807202738752817960438464512
  %231 = icmp eq i160 %230, 0
  %232 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %233 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %234 = select i1 %231, i32* %232, i32* %233
  %235 = load i32, i32* %234, align 4
  br label %236

236:                                              ; preds = %139, %134, %225, %205, %48
  %237 = phi i32 [ %82, %48 ], [ %124, %139 ], [ %124, %134 ], [ %235, %225 ], [ %224, %205 ]
  %238 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %239 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %238, i64 0, i32 0, i32 9
  %240 = bitcast [20 x i8]* %239 to i160*
  %241 = load i160, i160* %240, align 8
  %242 = and i160 %241, 15211807202738752817960438464512
  %243 = icmp eq i160 %242, 0
  %244 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %245 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %246 = select i1 %243, i32* %244, i32* %245
  %247 = load i32, i32* %246, align 4
  %248 = bitcast %"class.blink::LayoutBox"* %0 to void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)***
  %249 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)**, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*** %248, align 8
  %250 = getelementptr inbounds void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %249, i64 164
  %251 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %250, align 8
  tail call void %251(%"class.blink::LayoutBox"* %0, i32 %237, i32 %247, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24) %1) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox24HasStretchedLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.blink::Length"*, align 8
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = and i160 %15, 15211807202738752817960438464512
  %17 = icmp eq i160 %16, 0
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 5, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %19, i64 0, i32 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %19, i64 0, i32 3
  %22 = select i1 %17, %"class.blink::Length"* %20, %"class.blink::Length"* %21
  %23 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %22, i64 0, i32 2
  %24 = load i8, i8* %23, align 1
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %87

26:                                               ; preds = %1
  %27 = bitcast %"class.blink::Length"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28)
  %29 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  %30 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 7, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %31, align 8, !noalias !180
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 12
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 11
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 9
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 10
  store %"class.blink::Length"* %33, %"class.blink::Length"** %2, align 8, !alias.scope !180
  store %"class.blink::Length"* %34, %"class.blink::Length"** %3, align 8, !alias.scope !180
  store %"class.blink::Length"* %35, %"class.blink::Length"** %4, align 8, !alias.scope !180
  store %"class.blink::Length"* %36, %"class.blink::Length"** %5, align 8, !alias.scope !180
  %37 = and i160 %15, 41538374868278621028243970633760768
  %38 = icmp eq i160 %37, 0
  %39 = select i1 %38, %"class.blink::Length"** %5, %"class.blink::Length"** %3
  %40 = select i1 %38, %"class.blink::Length"** %2, %"class.blink::Length"** %4
  %41 = select i1 %17, %"class.blink::Length"** %39, %"class.blink::Length"** %40
  %42 = load %"class.blink::Length"*, %"class.blink::Length"** %41, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  %43 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %42, i64 0, i32 2
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %87, label %46

46:                                               ; preds = %26
  %47 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47)
  %48 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49)
  %50 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  store %"class.blink::Length"* %33, %"class.blink::Length"** %6, align 8, !alias.scope !183
  store %"class.blink::Length"* %34, %"class.blink::Length"** %7, align 8, !alias.scope !183
  store %"class.blink::Length"* %35, %"class.blink::Length"** %8, align 8, !alias.scope !183
  store %"class.blink::Length"* %36, %"class.blink::Length"** %9, align 8, !alias.scope !183
  %51 = select i1 %38, %"class.blink::Length"** %7, %"class.blink::Length"** %9
  %52 = select i1 %38, %"class.blink::Length"** %8, %"class.blink::Length"** %6
  %53 = select i1 %17, %"class.blink::Length"** %51, %"class.blink::Length"** %52
  %54 = load %"class.blink::Length"*, %"class.blink::Length"** %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %54, i64 0, i32 2
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %87, label %58

58:                                               ; preds = %46
  %59 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %10, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %60 = icmp eq %"class.blink::LayoutBlock"* %59, null
  br i1 %60, label %87, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %59, i64 0, i32 0, i32 0, i32 0, i32 4
  %63 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %62 to i96*
  %64 = load i96, i96* %63, align 4
  %65 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %66 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %65 to i96*
  %67 = load i96, i96* %66, align 4
  %68 = xor i96 %67, %64
  %69 = trunc i96 %68 to i32
  %70 = icmp slt i32 %69, 0
  %71 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %59, i64 0, i32 0
  %72 = bitcast %"class.blink::LayoutBlock"* %59 to i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)***
  %73 = load i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*** %72, align 8
  %74 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)** %73, i64 188
  %75 = load i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)** %74, align 8
  %76 = tail call i32 %75(%"class.blink::LayoutBox"* %71, %"class.blink::LayoutBox"* %0) #20
  %77 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %59, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %78 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %77, align 8
  br i1 %70, label %79, label %83

79:                                               ; preds = %61
  %80 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %12, i32 %76, %"class.blink::ComputedStyle"* %78) #20
  %81 = and i32 %80, 15
  %82 = icmp eq i32 %81, 3
  br label %87

83:                                               ; preds = %61
  %84 = tail call i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %12, i32 %76, %"class.blink::ComputedStyle"* %78) #20
  %85 = and i32 %84, 15
  %86 = icmp eq i32 %85, 3
  br label %87

87:                                               ; preds = %79, %83, %58, %1, %26, %46
  %88 = phi i1 [ false, %46 ], [ false, %26 ], [ false, %1 ], [ %82, %79 ], [ %86, %83 ], [ false, %58 ]
  ret i1 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox25HasStretchedLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.blink::Length"*, align 8
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = and i160 %13, 15211807202738752817960438464512
  %15 = icmp eq i160 %14, 0
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 5, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %17, i64 0, i32 3
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %17, i64 0, i32 8
  %20 = select i1 %15, %"class.blink::Length"* %18, %"class.blink::Length"* %19
  %21 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %20, i64 0, i32 2
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %84

24:                                               ; preds = %1
  %25 = bitcast %"class.blink::Length"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = lshr i160 %13, 102
  %29 = trunc i160 %28 to i8
  %30 = and i8 %29, 3
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 7, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %31, align 8, !noalias !186
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 12
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 11
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 10
  store %"class.blink::Length"* %33, %"class.blink::Length"** %2, align 8, !alias.scope !186
  store %"class.blink::Length"* %34, %"class.blink::Length"** %3, align 8, !alias.scope !186
  store %"class.blink::Length"* %35, %"class.blink::Length"** %4, align 8, !alias.scope !186
  %36 = icmp eq i8 %30, 0
  %37 = icmp eq i8 %30, 1
  %38 = select i1 %37, %"class.blink::Length"** %3, %"class.blink::Length"** %4
  %39 = select i1 %36, %"class.blink::Length"** %2, %"class.blink::Length"** %38
  %40 = load %"class.blink::Length"*, %"class.blink::Length"** %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  %41 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %40, i64 0, i32 2
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %84, label %44

44:                                               ; preds = %24
  %45 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46)
  %47 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47)
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 9
  store %"class.blink::Length"* %34, %"class.blink::Length"** %5, align 8, !alias.scope !189
  store %"class.blink::Length"* %48, %"class.blink::Length"** %6, align 8, !alias.scope !189
  store %"class.blink::Length"* %35, %"class.blink::Length"** %7, align 8, !alias.scope !189
  %49 = select i1 %37, %"class.blink::Length"** %7, %"class.blink::Length"** %5
  %50 = select i1 %36, %"class.blink::Length"** %6, %"class.blink::Length"** %49
  %51 = load %"class.blink::Length"*, %"class.blink::Length"** %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  %52 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %51, i64 0, i32 2
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %84, label %55

55:                                               ; preds = %44
  %56 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %8, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %57 = icmp eq %"class.blink::LayoutBlock"* %56, null
  br i1 %57, label %84, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %56, i64 0, i32 0, i32 0, i32 0, i32 4
  %60 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %59 to i96*
  %61 = load i96, i96* %60, align 4
  %62 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %63 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %62 to i96*
  %64 = load i96, i96* %63, align 4
  %65 = xor i96 %64, %61
  %66 = trunc i96 %65 to i32
  %67 = icmp slt i32 %66, 0
  %68 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %56, i64 0, i32 0
  %69 = bitcast %"class.blink::LayoutBlock"* %56 to i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)***
  %70 = load i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*** %69, align 8
  %71 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)** %70, i64 188
  %72 = load i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)** %71, align 8
  %73 = tail call i32 %72(%"class.blink::LayoutBox"* %68, %"class.blink::LayoutBox"* %0) #20
  %74 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %56, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %75 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %74, align 8
  br i1 %67, label %76, label %80

76:                                               ; preds = %58
  %77 = tail call i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %10, i32 %73, %"class.blink::ComputedStyle"* %75) #20
  %78 = and i32 %77, 15
  %79 = icmp eq i32 %78, 3
  br label %84

80:                                               ; preds = %58
  %81 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %10, i32 %73, %"class.blink::ComputedStyle"* %75) #20
  %82 = and i32 %81, 15
  %83 = icmp eq i32 %82, 3
  br label %84

84:                                               ; preds = %76, %80, %55, %1, %24, %44
  %85 = phi i1 [ false, %44 ], [ false, %24 ], [ false, %1 ], [ %79, %76 ], [ %83, %80 ], [ false, %55 ]
  ret i1 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox26ComputeMarginsForDirectionENS_15MarginDirectionEPKNS_11LayoutBlockENS_10LayoutUnitES5_RS5_S6_NS_6LengthES7_(%"class.blink::LayoutBox"*, i32, %"class.blink::LayoutBlock"*, i32, i32, %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::Length"*, %"class.blink::Length"*) local_unnamed_addr #4 align 2 {
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"class.blink::Length"*
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %"class.blink::Length"*
  %14 = alloca i64, align 8
  %15 = bitcast i64* %14 to %"class.blink::Length"*
  %16 = alloca i64, align 8
  %17 = bitcast i64* %16 to %"class.blink::Length"*
  %18 = icmp eq i32 %1, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %21 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %20 to i96*
  %22 = load i96, i96* %21, align 4
  %23 = and i96 %22, 142606336
  %24 = icmp eq i96 %23, 0
  br i1 %24, label %81, label %25

25:                                               ; preds = %19, %9
  %26 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %50, !prof !3

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 3
  %31 = load i8, i8* %30, align 2, !range !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.blink::Length"* %7 to float*
  %35 = load float, float* %34, align 4
  br label %40

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = sitofp i32 %38 to float
  br label %40

40:                                               ; preds = %36, %33
  %41 = phi float [ %35, %33 ], [ %39, %36 ]
  %42 = fmul float %41, 6.400000e+01
  %43 = fcmp ult float %42, 0xC1E0000000000000
  %44 = fcmp ugt float %42, 0x41DFFFFFE0000000
  %45 = fcmp ogt float %42, 0xC1E0000000000000
  %46 = select i1 %45, float %42, float 0xC1E0000000000000
  %47 = fptosi float %46 to i32
  %48 = select i1 %43, i32 0, i32 2147483647
  %49 = select i1 %44, i32 %48, i32 %47
  br label %52

50:                                               ; preds = %25
  %51 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %7, i32 %3) #20
  br label %52

52:                                               ; preds = %40, %50
  %53 = phi i32 [ %49, %40 ], [ %51, %50 ]
  %54 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 2
  br i1 %57, label %58, label %79, !prof !3

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 3
  %60 = load i8, i8* %59, align 2, !range !4
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = bitcast %"class.blink::Length"* %8 to float*
  %64 = load float, float* %63, align 4
  br label %69

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = sitofp i32 %67 to float
  br label %69

69:                                               ; preds = %65, %62
  %70 = phi float [ %64, %62 ], [ %68, %65 ]
  %71 = fmul float %70, 6.400000e+01
  %72 = fcmp ult float %71, 0xC1E0000000000000
  %73 = fcmp ugt float %71, 0x41DFFFFFE0000000
  %74 = fcmp ogt float %71, 0xC1E0000000000000
  %75 = select i1 %74, float %71, float 0xC1E0000000000000
  %76 = fptosi float %75 to i32
  %77 = select i1 %72, i32 0, i32 2147483647
  %78 = select i1 %73, i32 %77, i32 %76
  br label %384

79:                                               ; preds = %52
  %80 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %8, i32 %3) #20
  br label %384

81:                                               ; preds = %19
  %82 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %2, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.blink::LayoutBlock"* %2 to i1 (%"class.blink::LayoutObject"*)***
  %84 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %83, align 8
  %85 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %84, i64 80
  %86 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %85, align 8
  %87 = tail call zeroext i1 %86(%"class.blink::LayoutObject"* %82) #20
  br i1 %87, label %88, label %112

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %90 = load i8, i8* %89, align 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %100

92:                                               ; preds = %88
  %93 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #20
  %94 = bitcast i64* %10 to i32*
  store i32 0, i32* %94, align 8, !alias.scope !192
  %95 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %11, i64 0, i32 1
  store i8 0, i8* %95, align 4, !alias.scope !192
  %96 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %11, i64 0, i32 2
  store i8 2, i8* %96, align 1, !alias.scope !192
  %97 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %11, i64 0, i32 3
  store i8 0, i8* %97, align 2, !alias.scope !192
  %98 = bitcast %"class.blink::Length"* %7 to i64*
  %99 = load i64, i64* %10, align 8
  store i64 %99, i64* %98, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #20
  br label %100

100:                                              ; preds = %92, %88
  %101 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 0
  br i1 %103, label %104, label %112

104:                                              ; preds = %100
  %105 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #20
  %106 = bitcast i64* %12 to i32*
  store i32 0, i32* %106, align 8, !alias.scope !195
  %107 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 1
  store i8 0, i8* %107, align 4, !alias.scope !195
  %108 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 2
  store i8 2, i8* %108, align 1, !alias.scope !195
  %109 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 3
  store i8 0, i8* %109, align 2, !alias.scope !195
  %110 = bitcast %"class.blink::Length"* %8 to i64*
  %111 = load i64, i64* %12, align 8
  store i64 %111, i64* %110, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #20
  br label %112

112:                                              ; preds = %100, %104, %81
  %113 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %114 = load i8, i8* %113, align 1
  %115 = icmp eq i8 %114, 2
  br i1 %115, label %116, label %137, !prof !3

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 3
  %118 = load i8, i8* %117, align 2, !range !4
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %116
  %121 = bitcast %"class.blink::Length"* %7 to float*
  %122 = load float, float* %121, align 4
  br label %127

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = sitofp i32 %125 to float
  br label %127

127:                                              ; preds = %123, %120
  %128 = phi float [ %122, %120 ], [ %126, %123 ]
  %129 = fmul float %128, 6.400000e+01
  %130 = fcmp ult float %129, 0xC1E0000000000000
  %131 = fcmp ugt float %129, 0x41DFFFFFE0000000
  %132 = fcmp ogt float %129, 0xC1E0000000000000
  %133 = select i1 %132, float %129, float 0xC1E0000000000000
  %134 = fptosi float %133 to i32
  %135 = select i1 %130, i32 0, i32 2147483647
  %136 = select i1 %131, i32 %135, i32 %134
  br label %139

137:                                              ; preds = %112
  %138 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %7, i32 %3) #20
  br label %139

139:                                              ; preds = %127, %137
  %140 = phi i32 [ %136, %127 ], [ %138, %137 ]
  %141 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  %142 = load i8, i8* %141, align 1
  %143 = icmp eq i8 %142, 2
  br i1 %143, label %144, label %165, !prof !3

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 3
  %146 = load i8, i8* %145, align 2, !range !4
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %144
  %149 = bitcast %"class.blink::Length"* %8 to float*
  %150 = load float, float* %149, align 4
  br label %155

151:                                              ; preds = %144
  %152 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 0, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = sitofp i32 %153 to float
  br label %155

155:                                              ; preds = %151, %148
  %156 = phi float [ %150, %148 ], [ %154, %151 ]
  %157 = fmul float %156, 6.400000e+01
  %158 = fcmp ult float %157, 0xC1E0000000000000
  %159 = fcmp ugt float %157, 0x41DFFFFFE0000000
  %160 = fcmp ogt float %157, 0xC1E0000000000000
  %161 = select i1 %160, float %157, float 0xC1E0000000000000
  %162 = fptosi float %161 to i32
  %163 = select i1 %158, i32 0, i32 2147483647
  %164 = select i1 %159, i32 %163, i32 %162
  br label %167

165:                                              ; preds = %139
  %166 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %8, i32 %3) #20
  br label %167

167:                                              ; preds = %155, %165
  %168 = phi i32 [ %164, %155 ], [ %166, %165 ]
  %169 = icmp eq %"class.blink::LayoutBlock"* %2, null
  br i1 %169, label %177, label %170

170:                                              ; preds = %167
  %171 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %83, align 8
  %172 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %171, i64 24
  %173 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %172, align 8
  %174 = call zeroext i1 %173(%"class.blink::LayoutObject"* %82) #20
  %175 = bitcast %"class.blink::LayoutBlock"* %2 to %"class.blink::LayoutBlockFlow"*
  %176 = select i1 %174, %"class.blink::LayoutBlockFlow"* %175, %"class.blink::LayoutBlockFlow"* null
  br label %177

177:                                              ; preds = %167, %170
  %178 = phi %"class.blink::LayoutBlockFlow"* [ %176, %170 ], [ null, %167 ]
  %179 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %180 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %179, align 8
  %181 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %180, i64 182
  %182 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %181, align 8
  %183 = call zeroext i1 %182(%"class.blink::LayoutBox"* %0) #20
  %184 = icmp ne %"class.blink::LayoutBlockFlow"* %178, null
  %185 = and i1 %184, %183
  br i1 %185, label %186, label %206

186:                                              ; preds = %177
  %187 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %178, i64 0, i32 3, i32 0, i32 0, i32 0
  %188 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %187, align 8
  %189 = icmp eq %"class.blink::FloatingObjects"* %188, null
  br i1 %189, label %206, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %188, i64 0, i32 0, i32 0, i32 2
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %206, label %194

194:                                              ; preds = %190
  %195 = call i32 @_ZNK5blink9LayoutBox33ContainingBlockAvailableLineWidthEv(%"class.blink::LayoutBox"* %0)
  %196 = call zeroext i1 @_ZNK5blink9LayoutBox19ShrinkToAvoidFloatsEv(%"class.blink::LayoutBox"* %0)
  %197 = icmp slt i32 %195, %3
  %198 = and i1 %196, %197
  br i1 %198, label %199, label %206

199:                                              ; preds = %194
  %200 = icmp sgt i32 %140, 0
  %201 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  %202 = select i1 %200, i32 %140, i32 0
  store i32 %202, i32* %201, align 4
  %203 = icmp sgt i32 %168, 0
  %204 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  %205 = select i1 %203, i32 %168, i32 0
  store i32 %205, i32* %204, align 4
  br label %206

206:                                              ; preds = %190, %186, %194, %199, %177
  %207 = phi i32 [ %195, %199 ], [ %195, %194 ], [ %3, %190 ], [ %3, %177 ], [ %3, %186 ]
  %208 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %209 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %208, align 8
  %210 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %209, i64 0, i32 0, i32 5, i32 0, i32 0
  %211 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %210, align 8
  %212 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %211, i64 0, i32 8, i32 2
  %213 = load i8, i8* %212, align 1
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %224, label %215

215:                                              ; preds = %206
  %216 = icmp slt i32 %168, 0
  %217 = select i1 %216, i32 -2147483648, i32 2147483647
  %218 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %140, i32 %168) #20
  %219 = extractvalue { i32, i1 } %218, 1
  %220 = extractvalue { i32, i1 } %218, 0
  %221 = select i1 %219, i32 %217, i32 %220, !prof !2
  %222 = icmp slt i32 %221, 0
  %223 = select i1 %222, i32 -2147483648, i32 2147483647
  br label %224

224:                                              ; preds = %215, %206
  %225 = phi i32 [ 0, %206 ], [ %221, %215 ]
  %226 = phi i32 [ 2147483647, %206 ], [ %223, %215 ]
  %227 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 %225) #20
  %228 = extractvalue { i32, i1 } %227, 1
  %229 = extractvalue { i32, i1 } %227, 0
  %230 = select i1 %228, i32 %226, i32 %229, !prof !2
  %231 = icmp slt i32 %230, %207
  br i1 %231, label %232, label %382

232:                                              ; preds = %224
  %233 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %2, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %234 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %233, align 8
  %235 = load i8, i8* %113, align 1
  %236 = icmp eq i8 %235, 0
  %237 = load i8, i8* %141, align 1
  %238 = icmp eq i8 %237, 0
  br i1 %236, label %239, label %240

239:                                              ; preds = %232
  br i1 %238, label %247, label %298

240:                                              ; preds = %232
  br i1 %238, label %298, label %241

241:                                              ; preds = %240
  %242 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %234, i64 0, i32 0, i32 9
  %243 = bitcast [20 x i8]* %242 to i160*
  %244 = load i160, i160* %243, align 8
  %245 = and i160 %244, 4323455642275676160
  %246 = icmp eq i160 %245, 1729382256910270464
  br i1 %246, label %247, label %298

247:                                              ; preds = %241, %239
  %248 = icmp sgt i32 %4, -1
  %249 = select i1 %248, i32 -2147483648, i32 2147483647
  %250 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %207, i32 %4) #20
  %251 = extractvalue { i32, i1 } %250, 1
  %252 = extractvalue { i32, i1 } %250, 0
  %253 = select i1 %251, i32 %249, i32 %252, !prof !2
  %254 = icmp sgt i32 %140, -1
  %255 = select i1 %254, i32 -2147483648, i32 2147483647
  %256 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %253, i32 %140) #20
  %257 = extractvalue { i32, i1 } %256, 1
  %258 = extractvalue { i32, i1 } %256, 0
  %259 = select i1 %257, i32 %255, i32 %258, !prof !2
  %260 = icmp sgt i32 %168, -1
  %261 = select i1 %260, i32 -2147483648, i32 2147483647
  %262 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %259, i32 %168) #20
  %263 = extractvalue { i32, i1 } %262, 1
  %264 = extractvalue { i32, i1 } %262, 0
  %265 = select i1 %263, i32 %261, i32 %264, !prof !2
  %266 = sdiv i32 %265, 2
  %267 = sext i32 %266 to i64
  %268 = call i1 @llvm.is.constant.i64(i64 %267) #20
  br i1 %268, label %275, label %269

269:                                              ; preds = %247
  %270 = icmp slt i32 %265, -1
  %271 = select i1 %270, i32 -2147483648, i32 2147483647
  %272 = add nsw i64 %267, 2147483648
  %273 = icmp ult i64 %272, 4294967296
  %274 = select i1 %273, i32 %266, i32 %271, !prof !3
  br label %275

275:                                              ; preds = %247, %269
  %276 = phi i32 [ %274, %269 ], [ %266, %247 ]
  %277 = icmp sgt i32 %276, 0
  %278 = select i1 %277, i32 %276, i32 0
  %279 = icmp slt i32 %140, 0
  %280 = select i1 %279, i32 -2147483648, i32 2147483647
  %281 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %278, i32 %140) #20
  %282 = extractvalue { i32, i1 } %281, 1
  %283 = extractvalue { i32, i1 } %281, 0
  %284 = select i1 %282, i32 %280, i32 %283, !prof !2
  %285 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  store i32 %284, i32* %285, align 4
  %286 = icmp sgt i32 %284, -1
  %287 = select i1 %286, i32 -2147483648, i32 2147483647
  %288 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %253, i32 %284) #20
  %289 = extractvalue { i32, i1 } %288, 1
  %290 = extractvalue { i32, i1 } %288, 0
  %291 = select i1 %289, i32 %287, i32 %290, !prof !2
  %292 = icmp slt i32 %168, 0
  %293 = select i1 %292, i32 -2147483648, i32 2147483647
  %294 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %291, i32 %168) #20
  %295 = extractvalue { i32, i1 } %294, 1
  %296 = extractvalue { i32, i1 } %294, 0
  %297 = select i1 %295, i32 %293, i32 %296, !prof !2
  br label %384

298:                                              ; preds = %239, %241, %240
  %299 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %234, i64 0, i32 0, i32 9
  %300 = bitcast [20 x i8]* %299 to i160*
  %301 = load i160, i160* %300, align 8
  %302 = and i160 %301, 41538374868278621028243970633760768
  %303 = icmp eq i160 %302, 0
  %304 = lshr i160 %301, 58
  %305 = trunc i160 %304 to i32
  %306 = and i32 %305, 15
  br i1 %303, label %309, label %307

307:                                              ; preds = %298
  %308 = icmp eq i32 %306, 4
  br i1 %308, label %311, label %348

309:                                              ; preds = %298
  %310 = icmp eq i32 %306, 5
  br i1 %310, label %311, label %348

311:                                              ; preds = %309, %307
  %312 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %209, i64 0, i32 0, i32 9
  %313 = bitcast [20 x i8]* %312 to i160*
  %314 = load i160, i160* %313, align 8
  %315 = and i160 %314, 41538374868278621028243970633760768
  %316 = icmp eq i160 %315, 0
  %317 = xor i1 %303, %316
  br i1 %317, label %318, label %333

318:                                              ; preds = %311
  br i1 %236, label %348, label %319

319:                                              ; preds = %318
  %320 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %320) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %320, i8 0, i64 7, i1 false) #20, !alias.scope !198
  %321 = icmp eq i8 %237, 8
  br i1 %321, label %325, label %322

322:                                              ; preds = %319
  %323 = bitcast %"class.blink::Length"* %8 to i64*
  %324 = load i64, i64* %14, align 8
  store i64 %324, i64* %323, align 4
  br label %332

325:                                              ; preds = %319
  %326 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %15, i64 0, i32 2
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %8) #20
  %327 = load i8, i8* %326, align 1
  %328 = icmp eq i8 %327, 8
  %329 = bitcast %"class.blink::Length"* %8 to i64*
  %330 = load i64, i64* %14, align 8
  store i64 %330, i64* %329, align 4
  br i1 %328, label %331, label %332

331:                                              ; preds = %325
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %15) #20
  br label %332

332:                                              ; preds = %322, %325, %331
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %320) #20
  br label %348

333:                                              ; preds = %311
  br i1 %238, label %351, label %334

334:                                              ; preds = %333
  %335 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %335) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %335, i8 0, i64 7, i1 false) #20, !alias.scope !201
  %336 = icmp eq i8 %235, 8
  br i1 %336, label %340, label %337

337:                                              ; preds = %334
  %338 = bitcast %"class.blink::Length"* %7 to i64*
  %339 = load i64, i64* %16, align 8
  store i64 %339, i64* %338, align 4
  br label %347

340:                                              ; preds = %334
  %341 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %17, i64 0, i32 2
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %7) #20
  %342 = load i8, i8* %341, align 1
  %343 = icmp eq i8 %342, 8
  %344 = bitcast %"class.blink::Length"* %7 to i64*
  %345 = load i64, i64* %16, align 8
  store i64 %345, i64* %344, align 4
  br i1 %343, label %346, label %347

346:                                              ; preds = %340
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %17) #20
  br label %347

347:                                              ; preds = %337, %340, %346
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %335) #20
  br label %348

348:                                              ; preds = %307, %332, %318, %347, %309
  %349 = load i8, i8* %141, align 1
  %350 = icmp eq i8 %349, 0
  br i1 %350, label %351, label %365

351:                                              ; preds = %333, %348
  %352 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  store i32 %140, i32* %352, align 4
  %353 = icmp sgt i32 %4, -1
  %354 = select i1 %353, i32 -2147483648, i32 2147483647
  %355 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %207, i32 %4) #20
  %356 = extractvalue { i32, i1 } %355, 1
  %357 = extractvalue { i32, i1 } %355, 0
  %358 = select i1 %356, i32 %354, i32 %357, !prof !2
  %359 = icmp sgt i32 %140, -1
  %360 = select i1 %359, i32 -2147483648, i32 2147483647
  %361 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %358, i32 %140) #20
  %362 = extractvalue { i32, i1 } %361, 1
  %363 = extractvalue { i32, i1 } %361, 0
  %364 = select i1 %362, i32 %360, i32 %363, !prof !2
  br label %384

365:                                              ; preds = %348
  %366 = load i8, i8* %113, align 1
  %367 = icmp eq i8 %366, 0
  br i1 %367, label %368, label %382

368:                                              ; preds = %365
  %369 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  store i32 %168, i32* %369, align 4
  %370 = icmp sgt i32 %4, -1
  %371 = select i1 %370, i32 -2147483648, i32 2147483647
  %372 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %207, i32 %4) #20
  %373 = extractvalue { i32, i1 } %372, 1
  %374 = extractvalue { i32, i1 } %372, 0
  %375 = select i1 %373, i32 %371, i32 %374, !prof !2
  %376 = icmp sgt i32 %168, -1
  %377 = select i1 %376, i32 -2147483648, i32 2147483647
  %378 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %375, i32 %168) #20
  %379 = extractvalue { i32, i1 } %378, 1
  %380 = extractvalue { i32, i1 } %378, 0
  %381 = select i1 %379, i32 %377, i32 %380, !prof !2
  br label %384

382:                                              ; preds = %365, %224
  %383 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  store i32 %140, i32* %383, align 4
  br label %384

384:                                              ; preds = %79, %69, %382, %275, %351, %368
  %385 = phi %"class.blink::LayoutUnit"* [ %6, %382 ], [ %6, %275 ], [ %6, %351 ], [ %5, %368 ], [ %6, %69 ], [ %6, %79 ]
  %386 = phi i32 [ %168, %382 ], [ %297, %275 ], [ %364, %351 ], [ %381, %368 ], [ %78, %69 ], [ %80, %79 ]
  %387 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %385, i64 0, i32 0
  store i32 %386, i32* %387, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox20FillAvailableMeasureENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.blink::LayoutUnit", align 4
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = bitcast %"class.blink::LayoutUnit"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 0, i32* %6, align 4
  %7 = bitcast %"class.blink::LayoutUnit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #20
  %8 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  store i32 0, i32* %8, align 4
  %9 = call i32 @_ZNK5blink9LayoutBox20FillAvailableMeasureENS_10LayoutUnitERS1_S2_(%"class.blink::LayoutBox"* %0, i32 %1, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %3, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #20
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox20FillAvailableMeasureENS_10LayoutUnitERS1_S2_(%"class.blink::LayoutBox"*, i32, %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) local_unnamed_addr #4 align 2 {
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %13, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %18 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %17, i64 0, i32 0, i32 0, i32 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = xor i96 %20, %16
  %22 = trunc i96 %21 to i32
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %4
  %25 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %26 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %25, align 8
  %27 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %26, i64 131
  %28 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %27, align 8
  %29 = tail call i32 %28(%"class.blink::LayoutBox"* %0) #20
  br label %30

30:                                               ; preds = %4, %24
  %31 = phi i32 [ %29, %24 ], [ %1, %4 ]
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %34 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8, !noalias !204
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 7, i32 0, i32 0
  %42 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %41, align 8, !noalias !204
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %42, i64 0, i32 12
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %42, i64 0, i32 11
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %42, i64 0, i32 9
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %42, i64 0, i32 10
  store %"class.blink::Length"* %43, %"class.blink::Length"** %5, align 8, !alias.scope !204
  store %"class.blink::Length"* %44, %"class.blink::Length"** %6, align 8, !alias.scope !204
  store %"class.blink::Length"* %45, %"class.blink::Length"** %7, align 8, !alias.scope !204
  store %"class.blink::Length"* %46, %"class.blink::Length"** %8, align 8, !alias.scope !204
  %47 = and i160 %40, 15211807202738752817960438464512
  %48 = icmp eq i160 %47, 0
  %49 = and i160 %40, 41538374868278621028243970633760768
  %50 = icmp eq i160 %49, 0
  %51 = select i1 %50, %"class.blink::Length"** %8, %"class.blink::Length"** %6
  %52 = select i1 %50, %"class.blink::Length"** %5, %"class.blink::Length"** %7
  %53 = select i1 %48, %"class.blink::Length"** %51, %"class.blink::Length"** %52
  %54 = load %"class.blink::Length"*, %"class.blink::Length"** %53, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %54, i64 0, i32 2
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 2
  br i1 %57, label %58, label %79, !prof !3

58:                                               ; preds = %30
  %59 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %54, i64 0, i32 3
  %60 = load i8, i8* %59, align 2, !range !4
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = bitcast %"class.blink::Length"* %54 to float*
  %64 = load float, float* %63, align 4
  br label %69

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %54, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = sitofp i32 %67 to float
  br label %69

69:                                               ; preds = %65, %62
  %70 = phi float [ %64, %62 ], [ %68, %65 ]
  %71 = fmul float %70, 6.400000e+01
  %72 = fcmp ult float %71, 0xC1E0000000000000
  %73 = fcmp ugt float %71, 0x41DFFFFFE0000000
  %74 = fcmp ogt float %71, 0xC1E0000000000000
  %75 = select i1 %74, float %71, float 0xC1E0000000000000
  %76 = fptosi float %75 to i32
  %77 = select i1 %72, i32 0, i32 2147483647
  %78 = select i1 %73, i32 %77, i32 %76
  br label %81

79:                                               ; preds = %30
  %80 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %54, i32 %31) #20
  br label %81

81:                                               ; preds = %69, %79
  %82 = phi i32 [ %78, %69 ], [ %80, %79 ]
  %83 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  store i32 %82, i32* %83, align 4
  %84 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %85 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85)
  %86 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86)
  %87 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87)
  %88 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88)
  %89 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %84, i64 0, i32 0, i32 9
  %90 = bitcast [20 x i8]* %89 to i160*
  %91 = load i160, i160* %90, align 8, !noalias !207
  %92 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %84, i64 0, i32 0, i32 7, i32 0, i32 0
  %93 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %92, align 8, !noalias !207
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %93, i64 0, i32 12
  %95 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %93, i64 0, i32 11
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %93, i64 0, i32 9
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %93, i64 0, i32 10
  store %"class.blink::Length"* %94, %"class.blink::Length"** %9, align 8, !alias.scope !207
  store %"class.blink::Length"* %95, %"class.blink::Length"** %10, align 8, !alias.scope !207
  store %"class.blink::Length"* %96, %"class.blink::Length"** %11, align 8, !alias.scope !207
  store %"class.blink::Length"* %97, %"class.blink::Length"** %12, align 8, !alias.scope !207
  %98 = and i160 %91, 15211807202738752817960438464512
  %99 = icmp eq i160 %98, 0
  %100 = and i160 %91, 41538374868278621028243970633760768
  %101 = icmp eq i160 %100, 0
  %102 = select i1 %101, %"class.blink::Length"** %10, %"class.blink::Length"** %12
  %103 = select i1 %101, %"class.blink::Length"** %11, %"class.blink::Length"** %9
  %104 = select i1 %99, %"class.blink::Length"** %102, %"class.blink::Length"** %103
  %105 = load %"class.blink::Length"*, %"class.blink::Length"** %104, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %85)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88)
  %106 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %105, i64 0, i32 2
  %107 = load i8, i8* %106, align 1
  %108 = icmp eq i8 %107, 2
  br i1 %108, label %109, label %130, !prof !3

109:                                              ; preds = %81
  %110 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %105, i64 0, i32 3
  %111 = load i8, i8* %110, align 2, !range !4
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = bitcast %"class.blink::Length"* %105 to float*
  %115 = load float, float* %114, align 4
  br label %120

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %105, i64 0, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = sitofp i32 %118 to float
  br label %120

120:                                              ; preds = %116, %113
  %121 = phi float [ %115, %113 ], [ %119, %116 ]
  %122 = fmul float %121, 6.400000e+01
  %123 = fcmp ult float %122, 0xC1E0000000000000
  %124 = fcmp ugt float %122, 0x41DFFFFFE0000000
  %125 = fcmp ogt float %122, 0xC1E0000000000000
  %126 = select i1 %125, float %122, float 0xC1E0000000000000
  %127 = fptosi float %126 to i32
  %128 = select i1 %123, i32 0, i32 2147483647
  %129 = select i1 %124, i32 %128, i32 %127
  br label %132

130:                                              ; preds = %81
  %131 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %105, i32 %31) #20
  br label %132

132:                                              ; preds = %120, %130
  %133 = phi i32 [ %129, %120 ], [ %131, %130 ]
  %134 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %133, i32* %134, align 4
  %135 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %136 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %135, align 8
  %137 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %136, null
  br i1 %137, label %141, label %138

138:                                              ; preds = %132
  %139 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %136, i64 0, i32 6, i32 0
  %140 = load i32, i32* %139, align 4
  br label %141

141:                                              ; preds = %132, %138
  %142 = phi i32 [ %140, %138 ], [ %1, %132 ]
  %143 = load i32, i32* %83, align 4
  %144 = icmp sgt i32 %143, -1
  %145 = select i1 %144, i32 -2147483648, i32 2147483647
  %146 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %142, i32 %143) #20
  %147 = extractvalue { i32, i1 } %146, 1
  %148 = extractvalue { i32, i1 } %146, 0
  %149 = select i1 %147, i32 %145, i32 %148, !prof !2
  %150 = icmp sgt i32 %133, -1
  %151 = select i1 %150, i32 -2147483648, i32 2147483647
  %152 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %149, i32 %133) #20
  %153 = extractvalue { i32, i1 } %152, 1
  %154 = extractvalue { i32, i1 } %152, 0
  %155 = select i1 %153, i32 %151, i32 %154, !prof !2
  %156 = icmp sgt i32 %155, 0
  %157 = select i1 %156, i32 %155, i32 0
  ret i32 %157
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox33ComputeIntrinsicLogicalWidthUsingERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, %"class.blink::Length"* nocapture readonly dereferenceable(8), i32) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.blink::LayoutUnit", align 4
  %5 = alloca %"class.blink::LayoutUnit", align 4
  %6 = alloca %"class.blink::LayoutUnit", align 4
  %7 = alloca %"class.blink::LayoutUnit", align 4
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %10, 6
  br i1 %11, label %12, label %69

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = and i96 %15, 16777216
  %17 = icmp eq i96 %16, 0
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %17, label %21, label %39

21:                                               ; preds = %12
  br i1 %20, label %40, label %22

22:                                               ; preds = %21
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 48
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %48

27:                                               ; preds = %22
  %28 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kMarqueeTagE, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %19, i64 1, i32 2
  %32 = bitcast %"class.blink::Member.318"* %31 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %35, %37
  br i1 %38, label %59, label %48

39:                                               ; preds = %12
  br i1 %20, label %40, label %48

40:                                               ; preds = %21, %39
  br label %41

41:                                               ; preds = %40, %41
  %42 = phi %"class.blink::LayoutObject"* [ %44, %41 ], [ %8, %40 ]
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %42, i64 0, i32 7
  %44 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %44, i64 0, i32 6, i32 0, i32 0
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  %47 = icmp eq %"class.blink::Node"* %46, null
  br i1 %47, label %41, label %48

48:                                               ; preds = %41, %27, %22, %39
  %49 = phi %"class.blink::Node"* [ %19, %39 ], [ %19, %22 ], [ %19, %27 ], [ %46, %41 ]
  %50 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %49, i64 0, i32 3, i32 0, i32 0
  %51 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %51, i64 0, i32 2, i32 0, i32 0
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %53, i64 0, i32 2
  %55 = bitcast %"class.blink::UseCounter"* %54 to void (%"class.blink::UseCounter"*, i32)***
  %56 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %56, i64 3
  %58 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %57, align 8
  tail call void %58(%"class.blink::UseCounter"* %54, i32 2507) #20
  br label %59

59:                                               ; preds = %48, %27
  %60 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %61 = tail call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %60)
  %62 = bitcast %"class.blink::LayoutUnit"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #20
  %63 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  store i32 0, i32* %63, align 4
  %64 = bitcast %"class.blink::LayoutUnit"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64) #20
  %65 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 0, i32 0
  store i32 0, i32* %65, align 4
  %66 = call i32 @_ZNK5blink9LayoutBox20FillAvailableMeasureENS_10LayoutUnitERS1_S2_(%"class.blink::LayoutBox"* %0, i32 %2, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %6, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %7) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #20
  %67 = icmp slt i32 %61, %66
  %68 = select i1 %67, i32 %66, i32 %61
  br label %89

69:                                               ; preds = %3
  %70 = icmp eq i8 %10, 5
  %71 = zext i1 %70 to i32
  %72 = tail call i64 @_ZNK5blink9LayoutBox22IntrinsicLogicalWidthsENS_15MinMaxSizesTypeE(%"class.blink::LayoutBox"* %0, i32 %71)
  %73 = trunc i64 %72 to i32
  %74 = lshr i64 %72, 32
  %75 = trunc i64 %74 to i32
  %76 = load i8, i8* %9, align 1
  switch i8 %76, label %88 [
    i8 3, label %89
    i8 5, label %89
    i8 4, label %87
    i8 7, label %77
  ]

77:                                               ; preds = %69
  %78 = bitcast %"class.blink::LayoutUnit"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78) #20
  %79 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  store i32 0, i32* %79, align 4
  %80 = bitcast %"class.blink::LayoutUnit"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #20
  %81 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %5, i64 0, i32 0
  store i32 0, i32* %81, align 4
  %82 = call i32 @_ZNK5blink9LayoutBox20FillAvailableMeasureENS_10LayoutUnitERS1_S2_(%"class.blink::LayoutBox"* %0, i32 %2, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %4, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %5) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #20
  %83 = icmp sgt i32 %82, %75
  %84 = select i1 %83, i32 %75, i32 %82
  %85 = icmp sgt i32 %84, %73
  %86 = select i1 %85, i32 %84, i32 %73
  br label %89

87:                                               ; preds = %69
  br label %89

88:                                               ; preds = %69
  br label %89

89:                                               ; preds = %77, %87, %88, %69, %69, %59
  %90 = phi i32 [ %68, %59 ], [ %86, %77 ], [ %73, %69 ], [ %73, %69 ], [ %75, %87 ], [ 0, %88 ]
  ret i32 %90
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox19ShrinkToAvoidFloatsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 134217728
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %8, label %54

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %10 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %10, i64 182
  %12 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutBox"* %0) #20
  br i1 %13, label %14, label %54

14:                                               ; preds = %8
  %15 = load i96, i96* %4, align 4
  %16 = and i96 %15, 8388608
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %18, label %54

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %20 = bitcast %"class.blink::ComputedStyle"** %19 to %"class.blink::ComputedStyleBase"**
  %21 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %21, i64 0, i32 5, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %23, i64 0, i32 8, i32 2
  %25 = load i8, i8* %24, align 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %54

27:                                               ; preds = %18
  %28 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %29 = icmp eq %"class.blink::LayoutBlock"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %28, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.blink::LayoutBlock"* %28 to i1 (%"class.blink::LayoutObject"*, i32)***
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %32, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, i64 92
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* %31, i32 30) #20
  br i1 %36, label %54, label %37

37:                                               ; preds = %30, %27
  %38 = load i96, i96* %4, align 4
  %39 = and i96 %38, 73786976294838206464
  %40 = icmp eq i96 %39, 0
  %41 = and i96 %38, 113336795588871485128704
  %42 = icmp eq i96 %41, 75557863725914323419136
  %43 = or i1 %40, %42
  br i1 %43, label %54, label %44

44:                                               ; preds = %37
  %45 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %45, i64 0, i32 0, i32 9
  %47 = bitcast [20 x i8]* %46 to i160*
  %48 = load i160, i160* %47, align 8
  %49 = and i160 %48, 16528282690043758247936
  %50 = icmp eq i160 %49, 0
  br i1 %50, label %51, label %54, !prof !2

51:                                               ; preds = %44
  %52 = tail call zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"* %2) #20
  %53 = xor i1 %52, true
  ret i1 %53

54:                                               ; preds = %14, %1, %8, %18, %30, %37, %44
  %55 = phi i1 [ true, %44 ], [ true, %37 ], [ false, %30 ], [ false, %18 ], [ false, %1 ], [ false, %8 ], [ false, %14 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox29SizesLogicalWidthToFitContentERKNS_6LengthE(%"class.blink::LayoutBox"*, %"class.blink::Length"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 8388608
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %9, label %216

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %11 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, i64 22
  %13 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::LayoutObject"* %3) #20
  br i1 %14, label %216, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = and i160 %20, 7253554917687775048237056
  %22 = icmp eq i160 %21, 0
  br i1 %22, label %216, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = icmp eq %"class.blink::LayoutObject"* %25, null
  br i1 %26, label %39, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::LayoutObject"* %25 to i1 (%"class.blink::LayoutObject"*, i32)***
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, i64 92
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* nonnull %25, i32 10) #20
  br i1 %32, label %36, label %33

33:                                               ; preds = %27
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %35 = bitcast %"class.blink::LayoutObject"* %34 to i1 (%"class.blink::LayoutObject"*)***
  br label %39

36:                                               ; preds = %27
  %37 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasStretchedLogicalWidthEv(%"class.blink::LayoutBox"* %0)
  %38 = xor i1 %37, true
  br label %216

39:                                               ; preds = %33, %23
  %40 = phi i1 (%"class.blink::LayoutObject"*)*** [ %35, %33 ], [ null, %23 ]
  %41 = phi %"class.blink::LayoutObject"* [ %34, %33 ], [ null, %23 ]
  %42 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %40, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %42, i64 80
  %44 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::LayoutObject"* %41) #20
  br i1 %45, label %46, label %83

46:                                               ; preds = %39
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 5, i32 0
  %49 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %49, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8
  %53 = lshr i160 %52, 32
  %54 = trunc i160 %53 to i32
  %55 = and i32 %54, 30
  %56 = or i32 %55, 1
  %57 = icmp eq i32 %56, 15
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %49, i64 0, i32 0, i32 3, i32 0, i32 0
  %59 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %58, align 8
  br i1 %57, label %60, label %70

60:                                               ; preds = %46
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %59, i64 0, i32 2, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %62, i64 0, i32 13
  %64 = bitcast [3 x i8]* %63 to i24*
  %65 = load i24, i24* %64, align 8
  %66 = icmp slt i24 %65, 0
  br i1 %66, label %67, label %216

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %59, i64 0, i32 12
  %69 = load i16, i16* %68, align 4
  br label %77

70:                                               ; preds = %46
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %59, i64 0, i32 12
  %72 = load i16, i16* %71, align 4
  %73 = lshr i16 %72, 5
  %74 = and i16 %73, 2
  %75 = or i16 %74, 1
  %76 = icmp eq i16 %75, 3
  br i1 %76, label %77, label %216

77:                                               ; preds = %67, %70
  %78 = phi i16 [ %69, %67 ], [ %72, %70 ]
  %79 = and i16 %78, 384
  %80 = icmp eq i16 %79, 0
  br i1 %80, label %81, label %216

81:                                               ; preds = %77
  %82 = tail call zeroext i1 @_ZNK5blink9LayoutBox33ColumnFlexItemHasStretchAlignmentEv(%"class.blink::LayoutBox"* %0)
  br i1 %82, label %83, label %216

83:                                               ; preds = %81, %39
  %84 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %85 = bitcast %"class.blink::LayoutObject"* %84 to i1 (%"class.blink::LayoutObject"*)***
  %86 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %85, align 8
  %87 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %86, i64 77
  %88 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %87, align 8
  %89 = tail call zeroext i1 %88(%"class.blink::LayoutObject"* %84) #20
  br i1 %89, label %108, label %90

90:                                               ; preds = %83
  %91 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %91, i64 0, i32 5, i32 0
  %93 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %93, i64 0, i32 0, i32 9
  %95 = bitcast [20 x i8]* %94 to i160*
  %96 = load i160, i160* %95, align 8
  %97 = lshr i160 %96, 32
  %98 = trunc i160 %97 to i32
  %99 = and i32 %98, 30
  %100 = or i32 %99, 1
  %101 = icmp eq i32 %100, 15
  br i1 %101, label %102, label %122

102:                                              ; preds = %90
  %103 = bitcast %"class.blink::LayoutObject"* %91 to i1 (%"class.blink::LayoutObject"*)***
  %104 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %103, align 8
  %105 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %104, i64 78
  %106 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %105, align 8
  %107 = tail call zeroext i1 %106(%"class.blink::LayoutObject"* %91) #20
  br i1 %107, label %108, label %122

108:                                              ; preds = %102, %83
  %109 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %110 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %109, i64 0, i32 5, i32 0
  %111 = bitcast %"class.blink::ComputedStyle"** %110 to %"class.blink::ComputedStyleBase"**
  %112 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %112, i64 0, i32 3, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %114, i64 0, i32 2, i32 0, i32 0
  %116 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %116, i64 0, i32 13
  %118 = bitcast [3 x i8]* %117 to i24*
  %119 = load i24, i24* %118, align 8
  %120 = and i24 %119, -8374272
  %121 = icmp eq i24 %120, -8384512
  br i1 %121, label %122, label %216

122:                                              ; preds = %108, %102, %90
  %123 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %124 = load i8, i8* %123, align 1
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %187

126:                                              ; preds = %122
  %127 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %128 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %127, i64 0, i32 5, i32 0
  %129 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %129, i64 0, i32 0, i32 9
  %131 = bitcast [20 x i8]* %130 to i160*
  %132 = load i160, i160* %131, align 8
  %133 = lshr i160 %132, 32
  %134 = trunc i160 %133 to i32
  %135 = and i32 %134, 30
  %136 = or i32 %135, 1
  %137 = icmp eq i32 %136, 15
  br i1 %137, label %138, label %148

138:                                              ; preds = %126
  %139 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %129, i64 0, i32 0, i32 3, i32 0, i32 0
  %140 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %140, i64 0, i32 2, i32 0, i32 0
  %142 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %142, i64 0, i32 13
  %144 = bitcast [3 x i8]* %143 to i24*
  %145 = load i24, i24* %144, align 8
  %146 = and i24 %145, -8374272
  %147 = icmp eq i24 %146, -8384512
  br i1 %147, label %187, label %148

148:                                              ; preds = %138, %126
  %149 = bitcast %"class.blink::LayoutObject"* %127 to i1 (%"class.blink::LayoutObject"*)***
  %150 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %149, align 8
  %151 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %150, i64 80
  %152 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %151, align 8
  %153 = tail call zeroext i1 %152(%"class.blink::LayoutObject"* %127) #20
  br i1 %153, label %154, label %185

154:                                              ; preds = %148
  %155 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %128, align 8
  %156 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %155, i64 0, i32 0, i32 3, i32 0, i32 0
  %157 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %156, align 8
  %158 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %157, i64 0, i32 12
  %159 = load i16, i16* %158, align 4
  %160 = and i16 %159, 384
  %161 = icmp eq i16 %160, 0
  br i1 %161, label %162, label %185

162:                                              ; preds = %154
  %163 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %155, i64 0, i32 0, i32 9
  %164 = bitcast [20 x i8]* %163 to i160*
  %165 = load i160, i160* %164, align 8
  %166 = lshr i160 %165, 32
  %167 = trunc i160 %166 to i32
  %168 = and i32 %167, 30
  %169 = or i32 %168, 1
  %170 = icmp eq i32 %169, 15
  br i1 %170, label %171, label %178

171:                                              ; preds = %162
  %172 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %157, i64 0, i32 2, i32 0, i32 0
  %173 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %172, align 8
  %174 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %173, i64 0, i32 13
  %175 = bitcast [3 x i8]* %174 to i24*
  %176 = load i24, i24* %175, align 8
  %177 = icmp slt i24 %176, 0
  br i1 %177, label %183, label %185

178:                                              ; preds = %162
  %179 = lshr i16 %159, 5
  %180 = and i16 %179, 2
  %181 = or i16 %180, 1
  %182 = icmp eq i16 %181, 3
  br i1 %182, label %183, label %185

183:                                              ; preds = %178, %171
  %184 = tail call zeroext i1 @_ZNK5blink9LayoutBox33ColumnFlexItemHasStretchAlignmentEv(%"class.blink::LayoutBox"* %0) #20
  br i1 %184, label %187, label %185

185:                                              ; preds = %183, %178, %171, %154, %148
  %186 = tail call zeroext i1 @_ZNK5blink9LayoutBox25AutoWidthShouldFitContentEv(%"class.blink::LayoutBox"* %0)
  br i1 %186, label %216, label %187

187:                                              ; preds = %138, %183, %185, %122
  %188 = load i96, i96* %5, align 4
  %189 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %190 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %189, i64 0, i32 0, i32 0, i32 0, i32 4
  %191 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %190 to i96*
  %192 = load i96, i96* %191, align 4
  %193 = xor i96 %192, %188
  %194 = trunc i96 %193 to i32
  %195 = icmp slt i32 %194, 0
  br i1 %195, label %216, label %196

196:                                              ; preds = %187
  %197 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %198 = icmp eq %"class.blink::LayoutObject"* %197, null
  br i1 %198, label %216, label %199

199:                                              ; preds = %196
  %200 = bitcast %"class.blink::LayoutObject"* %197 to i1 (%"class.blink::LayoutObject"*, i32)***
  %201 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %200, align 8
  %202 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %201, i64 92
  %203 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %202, align 8
  %204 = tail call zeroext i1 %203(%"class.blink::LayoutObject"* nonnull %197, i32 24) #20
  br i1 %204, label %205, label %216

205:                                              ; preds = %199
  %206 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %197, i64 3, i32 4, i32 0, i64 4
  %207 = bitcast i8* %206 to i32*
  %208 = load i32, i32* %207, align 8
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %216, label %210

210:                                              ; preds = %205
  %211 = bitcast %"class.blink::LayoutObject"** %24 to %"class.blink::LayoutNGCustom"**
  %212 = load %"class.blink::LayoutNGCustom"*, %"class.blink::LayoutNGCustom"** %211, align 8
  %213 = getelementptr inbounds %"class.blink::LayoutNGCustom", %"class.blink::LayoutNGCustom"* %212, i64 0, i32 1
  %214 = load i32, i32* %213, align 8
  %215 = icmp ne i32 %214, 0
  br label %216

216:                                              ; preds = %108, %205, %2, %196, %199, %60, %187, %185, %81, %70, %77, %9, %15, %210, %36
  %217 = phi i1 [ %38, %36 ], [ %215, %210 ], [ true, %15 ], [ true, %9 ], [ true, %2 ], [ true, %77 ], [ true, %70 ], [ true, %81 ], [ true, %108 ], [ true, %185 ], [ true, %187 ], [ false, %205 ], [ true, %60 ], [ false, %199 ], [ false, %196 ]
  ret i1 %217
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox33ColumnFlexItemHasStretchAlignmentEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.blink::Length"*, align 8
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = bitcast %"class.blink::Length"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20)
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8, !noalias !210
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 7, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %24, align 8, !noalias !210
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %25, i64 0, i32 12
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %25, i64 0, i32 11
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %25, i64 0, i32 9
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %25, i64 0, i32 10
  store %"class.blink::Length"* %26, %"class.blink::Length"** %2, align 8, !alias.scope !210
  store %"class.blink::Length"* %27, %"class.blink::Length"** %3, align 8, !alias.scope !210
  store %"class.blink::Length"* %28, %"class.blink::Length"** %4, align 8, !alias.scope !210
  store %"class.blink::Length"* %29, %"class.blink::Length"** %5, align 8, !alias.scope !210
  %30 = and i160 %23, 15211807202738752817960438464512
  %31 = icmp eq i160 %30, 0
  %32 = and i160 %23, 41538374868278621028243970633760768
  %33 = icmp eq i160 %32, 0
  %34 = select i1 %33, %"class.blink::Length"** %5, %"class.blink::Length"** %3
  %35 = select i1 %33, %"class.blink::Length"** %2, %"class.blink::Length"** %4
  %36 = select i1 %31, %"class.blink::Length"** %34, %"class.blink::Length"** %35
  %37 = load %"class.blink::Length"*, %"class.blink::Length"** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20)
  %38 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %37, i64 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %64, label %41

41:                                               ; preds = %1
  %42 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  store %"class.blink::Length"* %26, %"class.blink::Length"** %6, align 8, !alias.scope !213
  store %"class.blink::Length"* %27, %"class.blink::Length"** %7, align 8, !alias.scope !213
  store %"class.blink::Length"* %28, %"class.blink::Length"** %8, align 8, !alias.scope !213
  store %"class.blink::Length"* %29, %"class.blink::Length"** %9, align 8, !alias.scope !213
  %46 = select i1 %33, %"class.blink::Length"** %7, %"class.blink::Length"** %9
  %47 = select i1 %33, %"class.blink::Length"** %8, %"class.blink::Length"** %6
  %48 = select i1 %31, %"class.blink::Length"** %46, %"class.blink::Length"** %47
  %49 = load %"class.blink::Length"*, %"class.blink::Length"** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  %50 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %49, i64 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %64, label %53

53:                                               ; preds = %41
  %54 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %10, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %55 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %54, i64 0, i32 0
  %56 = bitcast %"class.blink::LayoutBlock"* %54 to i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)***
  %57 = load i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*** %56, align 8
  %58 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)** %57, i64 188
  %59 = load i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)** %58, align 8
  %60 = tail call i32 %59(%"class.blink::LayoutBox"* %55, %"class.blink::LayoutBox"* null) #20
  %61 = tail call i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"* %16, i32 %60, %"class.blink::ComputedStyle"* %14) #20
  %62 = and i32 %61, 15
  %63 = icmp eq i32 %62, 3
  br label %64

64:                                               ; preds = %1, %41, %53
  %65 = phi i1 [ %63, %53 ], [ false, %41 ], [ false, %1 ]
  ret i1 %65
}

declare i32 @_ZNK5blink13ComputedStyle17ResolvedAlignSelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"*, i32, %"class.blink::ComputedStyle"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox26IsStretchingColumnFlexItemEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = lshr i160 %8, 32
  %10 = trunc i160 %9 to i32
  %11 = and i32 %10, 30
  %12 = or i32 %11, 1
  %13 = icmp eq i32 %12, 15
  br i1 %13, label %14, label %24

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %18, i64 0, i32 13
  %20 = bitcast [3 x i8]* %19 to i24*
  %21 = load i24, i24* %20, align 8
  %22 = and i24 %21, -8374272
  %23 = icmp eq i24 %22, -8384512
  br i1 %23, label %62, label %24

24:                                               ; preds = %14, %1
  %25 = bitcast %"class.blink::LayoutObject"* %3 to i1 (%"class.blink::LayoutObject"*)***
  %26 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %26, i64 80
  %28 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::LayoutObject"* %3) #20
  br i1 %29, label %30, label %61

30:                                               ; preds = %24
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %33, i64 0, i32 12
  %35 = load i16, i16* %34, align 4
  %36 = and i16 %35, 384
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %38, label %61

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 9
  %40 = bitcast [20 x i8]* %39 to i160*
  %41 = load i160, i160* %40, align 8
  %42 = lshr i160 %41, 32
  %43 = trunc i160 %42 to i32
  %44 = and i32 %43, 30
  %45 = or i32 %44, 1
  %46 = icmp eq i32 %45, 15
  br i1 %46, label %47, label %54

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %33, i64 0, i32 2, i32 0, i32 0
  %49 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %49, i64 0, i32 13
  %51 = bitcast [3 x i8]* %50 to i24*
  %52 = load i24, i24* %51, align 8
  %53 = icmp slt i24 %52, 0
  br i1 %53, label %59, label %61

54:                                               ; preds = %38
  %55 = lshr i16 %35, 5
  %56 = and i16 %55, 2
  %57 = or i16 %56, 1
  %58 = icmp eq i16 %57, 3
  br i1 %58, label %59, label %61

59:                                               ; preds = %47, %54
  %60 = tail call zeroext i1 @_ZNK5blink9LayoutBox33ColumnFlexItemHasStretchAlignmentEv(%"class.blink::LayoutBox"* %0)
  br i1 %60, label %62, label %61

61:                                               ; preds = %47, %59, %54, %30, %24
  br label %62

62:                                               ; preds = %14, %59, %61
  %63 = phi i1 [ false, %61 ], [ true, %59 ], [ true, %14 ]
  ret i1 %63
}

declare i32 @_ZNK5blink13ComputedStyle19ResolvedJustifySelfENS_12ItemPositionEPKS0_(%"class.blink::ComputedStyle"*, i32, %"class.blink::ComputedStyle"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox25AutoWidthShouldFitContentEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 16777216
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %8, label %81

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %81, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 48
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %65

17:                                               ; preds = %12
  %18 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %19 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %22 = bitcast %"class.blink::Member.318"* %21 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %23, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %25, %27
  br i1 %28, label %81, label %29

29:                                               ; preds = %17
  %30 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kSelectTagE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %34 = bitcast %"class.blink::Member.318"* %33 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %35 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %35, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %32, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, %39
  br i1 %40, label %81, label %41

41:                                               ; preds = %29
  %42 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kButtonTagE, align 8
  %43 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %46 = bitcast %"class.blink::Member.318"* %45 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %47 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %49, %51
  br i1 %52, label %81, label %53

53:                                               ; preds = %41
  %54 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kTextareaTagE, align 8
  %55 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %10, i64 1, i32 2
  %58 = bitcast %"class.blink::Member.318"* %57 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %61, %63
  br i1 %64, label %81, label %65

65:                                               ; preds = %12, %53
  %66 = and i96 %5, 73786976294838206464
  %67 = icmp eq i96 %66, 0
  %68 = and i96 %5, 113336795588871485128704
  %69 = icmp eq i96 %68, 75557863725914323419136
  %70 = or i1 %67, %69
  br i1 %70, label %81, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 16528282690043758247936
  %78 = icmp eq i160 %77, 0
  br i1 %78, label %79, label %81, !prof !2

79:                                               ; preds = %71
  %80 = tail call zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"* %2) #20
  br label %81

81:                                               ; preds = %1, %79, %71, %65, %8, %17, %29, %41, %53
  %82 = phi i1 [ false, %8 ], [ true, %53 ], [ true, %41 ], [ true, %29 ], [ true, %17 ], [ %80, %79 ], [ false, %71 ], [ false, %65 ], [ false, %1 ]
  ret i1 %82
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox23IsCustomItemShrinkToFitEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %3 = bitcast %"class.blink::LayoutObject"** %2 to %"class.blink::LayoutNGCustom"**
  %4 = load %"class.blink::LayoutNGCustom"*, %"class.blink::LayoutNGCustom"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutNGCustom", %"class.blink::LayoutNGCustom"* %4, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp ne i32 %6, 0
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox19UpdateLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %4 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %3, align 8
  %5 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 4, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %12 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %11, align 8
  %13 = icmp eq %"struct.blink::LayoutBoxRareData"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %12, i64 0, i32 2, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, -64
  br i1 %17, label %18, label %21

18:                                               ; preds = %14, %10
  %19 = tail call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %0)
  %20 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 4, i32 0
  store i32 %19, i32* %20, align 8
  br label %21

21:                                               ; preds = %14, %6, %18
  %22 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #20
  %23 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 2, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 2, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %22, i8 0, i64 24, i1 false) #20
  call void @_ZNK5blink9LayoutBox20ComputeLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %0, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %2)
  %27 = load i32, i32* %23, align 4
  call void @_ZN5blink9LayoutBox16SetLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 %27)
  %28 = load i32, i32* %24, align 4
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 9
  %33 = bitcast [20 x i8]* %32 to i160*
  %34 = load i160, i160* %33, align 8
  %35 = and i160 %34, 15211807202738752817960438464512
  %36 = icmp eq i160 %35, 0
  br i1 %36, label %37, label %48

37:                                               ; preds = %21
  %38 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, %28
  br i1 %40, label %59, label %41

41:                                               ; preds = %37
  store i32 %28, i32* %38, align 4
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %43 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %42 to i96*
  %44 = load i96, i96* %43, align 4
  %45 = and i96 %44, 63
  %46 = icmp eq i96 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %41
  call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %29) #20
  br label %59

48:                                               ; preds = %21
  %49 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %28
  br i1 %51, label %59, label %52

52:                                               ; preds = %48
  store i32 %28, i32* %49, align 4
  %53 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = and i96 %55, 63
  %57 = icmp eq i96 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %52
  call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %29) #20
  br label %59

59:                                               ; preds = %37, %41, %47, %48, %52, %58
  %60 = load i32, i32* %25, align 4
  %61 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %61, i64 0, i32 0, i32 9
  %63 = bitcast [20 x i8]* %62 to i160*
  %64 = load i160, i160* %63, align 8, !noalias !216
  %65 = lshr i160 %64, 102
  %66 = trunc i160 %65 to i8
  %67 = and i8 %66, 3
  %68 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %67, label %69 [
    i8 0, label %74
    i8 1, label %70
  ]

69:                                               ; preds = %59
  br label %70

70:                                               ; preds = %69, %59
  %71 = phi { i64, i64 } [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, %69 ], [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, %59 ]
  %72 = extractvalue { i64, i64 } %71, 0
  %73 = extractvalue { i64, i64 } %71, 1
  br label %74

74:                                               ; preds = %70, %59
  %75 = phi i64 [ %72, %70 ], [ ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), %59 ]
  %76 = phi i64 [ %73, %70 ], [ 0, %59 ]
  %77 = getelementptr inbounds i8, i8* %68, i64 %76
  %78 = bitcast i8* %77 to %"class.blink::LayoutBox"*
  %79 = and i64 %75, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %88, label %81

81:                                               ; preds = %74
  %82 = bitcast i8* %77 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = add i64 %75, -1
  %85 = getelementptr i8, i8* %83, i64 %84
  %86 = bitcast i8* %85 to void (%"class.blink::LayoutBox"*, i32)**
  %87 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %86, align 8
  br label %90

88:                                               ; preds = %74
  %89 = inttoptr i64 %75 to void (%"class.blink::LayoutBox"*, i32)*
  br label %90

90:                                               ; preds = %81, %88
  %91 = phi void (%"class.blink::LayoutBox"*, i32)* [ %87, %81 ], [ %89, %88 ]
  call void %91(%"class.blink::LayoutBox"* %78, i32 %60) #20
  %92 = load i32, i32* %26, align 4
  %93 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %93, i64 0, i32 0, i32 9
  %95 = bitcast [20 x i8]* %94 to i160*
  %96 = load i160, i160* %95, align 8, !noalias !219
  %97 = lshr i160 %96, 102
  %98 = trunc i160 %97 to i8
  %99 = and i8 %98, 3
  switch i8 %99, label %100 [
    i8 0, label %105
    i8 1, label %101
  ]

100:                                              ; preds = %90
  br label %101

101:                                              ; preds = %100, %90
  %102 = phi { i64, i64 } [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, %100 ], [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, %90 ]
  %103 = extractvalue { i64, i64 } %102, 0
  %104 = extractvalue { i64, i64 } %102, 1
  br label %105

105:                                              ; preds = %101, %90
  %106 = phi i64 [ %103, %101 ], [ ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), %90 ]
  %107 = phi i64 [ %104, %101 ], [ 0, %90 ]
  %108 = getelementptr inbounds i8, i8* %68, i64 %107
  %109 = bitcast i8* %108 to %"class.blink::LayoutBox"*
  %110 = and i64 %106, 1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %119, label %112

112:                                              ; preds = %105
  %113 = bitcast i8* %108 to i8**
  %114 = load i8*, i8** %113, align 8
  %115 = add i64 %106, -1
  %116 = getelementptr i8, i8* %114, i64 %115
  %117 = bitcast i8* %116 to void (%"class.blink::LayoutBox"*, i32)**
  %118 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %117, align 8
  br label %121

119:                                              ; preds = %105
  %120 = inttoptr i64 %106 to void (%"class.blink::LayoutBox"*, i32)*
  br label %121

121:                                              ; preds = %112, %119
  %122 = phi void (%"class.blink::LayoutBox"*, i32)* [ %118, %112 ], [ %120, %119 ]
  call void %122(%"class.blink::LayoutBox"* %109, i32 %92) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #20
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 118
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #20
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #20
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !2
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 119
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #20
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #20
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #20
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 120
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #20
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #20
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !2
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 121
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #20
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #20
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox16SetLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  br i1 %10, label %11, label %36

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, %1
  br i1 %14, label %61, label %15

15:                                               ; preds = %11
  store i32 %1, i32* %12, align 4
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = and i96 %18, 63
  %20 = icmp eq i96 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %15
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #20
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  br label %23

23:                                               ; preds = %21, %15
  %24 = phi %"class.blink::ComputedStyle"* [ %22, %21 ], [ %5, %15 ]
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8
  %28 = and i160 %27, 15211807202738752817960438464512
  %29 = icmp eq i160 %28, 5070602400912917605986812821504
  br i1 %29, label %30, label %61

30:                                               ; preds = %23
  %31 = load i96, i96* %17, align 4
  %32 = and i96 %31, 17592186044416
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %30
  tail call void @_ZN5blink12LayoutObject39SetSubtreeShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %3, i8 zeroext 14) #20
  br label %61

35:                                               ; preds = %30
  tail call void @_ZN5blink12LayoutObject41SetSubtreeShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #20
  br label %61

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, %1
  br i1 %39, label %61, label %40

40:                                               ; preds = %36
  store i32 %1, i32* %37, align 4
  %41 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %42 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %41 to i96*
  %43 = load i96, i96* %42, align 4
  %44 = and i96 %43, 63
  %45 = icmp eq i96 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %40
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #20
  %47 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  br label %48

48:                                               ; preds = %46, %40
  %49 = phi %"class.blink::ComputedStyle"* [ %47, %46 ], [ %5, %40 ]
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %49, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8
  %53 = and i160 %52, 15211807202738752817960438464512
  %54 = icmp eq i160 %53, 5070602400912917605986812821504
  br i1 %54, label %55, label %61

55:                                               ; preds = %48
  %56 = load i96, i96* %42, align 4
  %57 = and i96 %56, 17592186044416
  %58 = icmp eq i96 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %55
  tail call void @_ZN5blink12LayoutObject39SetSubtreeShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %3, i8 zeroext 14) #20
  br label %61

60:                                               ; preds = %55
  tail call void @_ZN5blink12LayoutObject41SetSubtreeShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #20
  br label %61

61:                                               ; preds = %60, %59, %48, %36, %35, %34, %23, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #9 align 2 {
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca <2 x float>, align 8
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = alloca %"class.blink::Length"*, align 8
  %18 = alloca %"class.blink::Length"*, align 8
  %19 = alloca %"class.blink::Length"*, align 8
  %20 = alloca %"class.blink::Length"*, align 8
  %21 = alloca %"class.blink::Length"*, align 8
  %22 = alloca %"class.blink::Length"*, align 8
  %23 = alloca %"class.blink::Length"*, align 8
  %24 = alloca %"class.blink::Length"*, align 8
  %25 = alloca %"class.blink::Length"*, align 8
  %26 = alloca %"class.blink::Length"*, align 8
  %27 = alloca %"class.blink::Length"*, align 8
  %28 = alloca %"class.blink::Length"*, align 8
  %29 = alloca %"class.blink::Length"*, align 8
  %30 = alloca %"class.blink::Length"*, align 8
  %31 = alloca %"class.blink::Length"*, align 8
  %32 = alloca i64, align 8
  %33 = bitcast i64* %32 to %"class.blink::Length"*
  %34 = alloca i64, align 8
  %35 = bitcast i64* %34 to %"class.blink::Length"*
  %36 = alloca i64, align 8
  %37 = bitcast i64* %36 to %"class.blink::Length"*
  %38 = alloca i64, align 8
  %39 = bitcast i64* %38 to %"class.blink::Length"*
  %40 = alloca i64, align 8
  %41 = bitcast i64* %40 to %"class.blink::Length"*
  %42 = alloca %"struct.blink::NGBoxStrut", align 4
  %43 = alloca i64, align 8
  %44 = bitcast i64* %43 to %"struct.blink::LogicalSize"*
  %45 = alloca i64, align 8
  %46 = bitcast i64* %45 to %"class.blink::Length"*
  %47 = alloca i64, align 8
  %48 = bitcast i64* %47 to %"class.blink::Length"*
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 0, i32 0
  store i32 %1, i32* %52, align 4
  %53 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 1, i32 0
  store i32 %2, i32* %53, align 4
  %54 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %55, i64 92
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LayoutObject"* %51, i32 46) #20
  br i1 %58, label %1014, label %59

59:                                               ; preds = %4
  %60 = bitcast i64* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #20
  %61 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %33, i64 0, i32 2
  store i64 -6148914691236517206, i64* %32, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 7, i1 false) #20
  %62 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %63 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %62 to i96*
  %64 = load i96, i96* %63, align 4
  %65 = and i96 %64, 113336795588871485128704
  %66 = icmp eq i96 %65, 75557863725914323419136
  br i1 %66, label %67, label %103

67:                                               ; preds = %59
  %68 = bitcast %"class.blink::LayoutBox"* %0 to void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)***
  %69 = load void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)**, void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %69, i64 193
  %71 = load void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %70, align 8
  tail call void %71(%"class.blink::LayoutBox"* %0, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24) %3) #20
  %72 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %73 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %72, align 8
  %74 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %73, null
  br i1 %74, label %79, label %75

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 4, !range !4
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %95

79:                                               ; preds = %75, %67
  %80 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %81 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %80, align 8
  %82 = icmp eq %"struct.blink::LayoutBoxRareData"* %81, null
  br i1 %82, label %706, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %81, i64 0, i32 2, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, -64
  br i1 %86, label %706, label %87

87:                                               ; preds = %83
  br i1 %74, label %97, label %88

88:                                               ; preds = %87
  %89 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %90 = load i8, i8* %89, align 4, !range !4
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %94 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %93, align 8
  br label %97

95:                                               ; preds = %75, %88
  %96 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %100

97:                                               ; preds = %92, %87
  %98 = phi %"struct.blink::LayoutBoxRareData"* [ %94, %92 ], [ %81, %87 ]
  %99 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %98, i64 0, i32 2, i32 0
  br label %100

100:                                              ; preds = %95, %97
  %101 = phi i32* [ %96, %95 ], [ %99, %97 ]
  %102 = load i32, i32* %101, align 4
  store i32 %102, i32* %52, align 4
  br label %706

103:                                              ; preds = %59
  %104 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %51, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %105 = load i96, i96* %63, align 4
  %106 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %104, i64 0, i32 0, i32 0, i32 0, i32 4
  %107 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %106 to i96*
  %108 = load i96, i96* %107, align 4
  %109 = xor i96 %108, %105
  %110 = trunc i96 %109 to i32
  %111 = lshr i32 %110, 31
  %112 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %54, align 8
  %113 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %112, i64 92
  %114 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %113, align 8
  %115 = tail call zeroext i1 %114(%"class.blink::LayoutObject"* %51, i32 44) #20
  br i1 %115, label %116, label %189

116:                                              ; preds = %103
  %117 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %118 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %117, align 8
  %119 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %118, i64 131
  %120 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %119, align 8
  %121 = tail call i32 %120(%"class.blink::LayoutBox"* %0) #20
  %122 = load i32, i32* %52, align 4
  %123 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 2, i32 0
  %124 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 2, i32 1
  %125 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %126 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %125, align 8
  %127 = bitcast %"class.blink::Length"** %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127)
  %128 = bitcast %"class.blink::Length"** %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128)
  %129 = bitcast %"class.blink::Length"** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129)
  %130 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %126, i64 0, i32 0, i32 9
  %131 = bitcast [20 x i8]* %130 to i160*
  %132 = load i160, i160* %131, align 8, !noalias !222
  %133 = lshr i160 %132, 102
  %134 = trunc i160 %133 to i8
  %135 = and i8 %134, 3
  %136 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %126, i64 0, i32 0, i32 7, i32 0, i32 0
  %137 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %136, align 8, !noalias !222
  %138 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %137, i64 0, i32 12
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %137, i64 0, i32 11
  %140 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %137, i64 0, i32 10
  store %"class.blink::Length"* %138, %"class.blink::Length"** %29, align 8, !alias.scope !222
  store %"class.blink::Length"* %139, %"class.blink::Length"** %30, align 8, !alias.scope !222
  store %"class.blink::Length"* %140, %"class.blink::Length"** %31, align 8, !alias.scope !222
  %141 = icmp eq i8 %135, 0
  %142 = icmp eq i8 %135, 1
  %143 = select i1 %142, %"class.blink::Length"** %30, %"class.blink::Length"** %31
  %144 = select i1 %141, %"class.blink::Length"** %29, %"class.blink::Length"** %143
  %145 = bitcast %"class.blink::Length"** %144 to i64**
  %146 = load i64*, i64** %145, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129)
  %147 = load i64, i64* %146, align 4
  store i64 %147, i64* %34, align 8
  %148 = and i64 %147, 280375465082880
  %149 = icmp eq i64 %148, 8796093022208
  br i1 %149, label %150, label %160

150:                                              ; preds = %116
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %35) #20
  %151 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %125, align 8
  %152 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %151, i64 0, i32 0, i32 9
  %153 = bitcast [20 x i8]* %152 to i160*
  %154 = load i160, i160* %153, align 8, !noalias !225
  %155 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %151, i64 0, i32 0, i32 7, i32 0, i32 0
  %156 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %155, align 8, !noalias !225
  %157 = lshr i160 %154, 102
  %158 = trunc i160 %157 to i8
  %159 = and i8 %158, 3
  br label %160

160:                                              ; preds = %116, %150
  %161 = phi i8 [ %135, %116 ], [ %159, %150 ]
  %162 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %137, %116 ], [ %156, %150 ]
  %163 = bitcast %"class.blink::Length"** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163)
  %164 = bitcast %"class.blink::Length"** %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %164)
  %165 = bitcast %"class.blink::Length"** %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165)
  %166 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %162, i64 0, i32 11
  %167 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %162, i64 0, i32 9
  %168 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %162, i64 0, i32 10
  store %"class.blink::Length"* %166, %"class.blink::Length"** %26, align 8, !alias.scope !225
  store %"class.blink::Length"* %167, %"class.blink::Length"** %27, align 8, !alias.scope !225
  store %"class.blink::Length"* %168, %"class.blink::Length"** %28, align 8, !alias.scope !225
  %169 = icmp eq i8 %161, 0
  %170 = icmp eq i8 %161, 1
  %171 = select i1 %170, %"class.blink::Length"** %28, %"class.blink::Length"** %26
  %172 = select i1 %169, %"class.blink::Length"** %27, %"class.blink::Length"** %171
  %173 = bitcast %"class.blink::Length"** %172 to i64**
  %174 = load i64*, i64** %173, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %164)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165)
  %175 = load i64, i64* %174, align 4
  store i64 %175, i64* %36, align 8
  %176 = and i64 %175, 280375465082880
  %177 = icmp eq i64 %176, 8796093022208
  br i1 %177, label %178, label %179

178:                                              ; preds = %160
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %37) #20
  br label %179

179:                                              ; preds = %160, %178
  call void @_ZNK5blink9LayoutBox26ComputeMarginsForDirectionENS_15MarginDirectionEPKNS_11LayoutBlockENS_10LayoutUnitES5_RS5_S6_NS_6LengthES7_(%"class.blink::LayoutBox"* %0, i32 %111, %"class.blink::LayoutBlock"* %104, i32 %121, i32 %122, %"class.blink::LayoutUnit"* dereferenceable(4) %123, %"class.blink::LayoutUnit"* dereferenceable(4) %124, %"class.blink::Length"* nonnull %35, %"class.blink::Length"* nonnull %37)
  %180 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %37, i64 0, i32 2
  %181 = load i8, i8* %180, align 1
  %182 = icmp eq i8 %181, 8
  br i1 %182, label %183, label %184

183:                                              ; preds = %179
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %37) #20
  br label %184

184:                                              ; preds = %179, %183
  %185 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %35, i64 0, i32 2
  %186 = load i8, i8* %185, align 1
  %187 = icmp eq i8 %186, 8
  br i1 %187, label %188, label %1009

188:                                              ; preds = %184
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %35) #20
  br label %1009

189:                                              ; preds = %103
  %190 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %191 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %190, align 8
  %192 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %191, null
  br i1 %192, label %199, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %195 = load i8, i8* %194, align 4, !range !4
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %199, label %197

197:                                              ; preds = %193
  %198 = bitcast i64* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #20
  br label %216

199:                                              ; preds = %193, %189
  %200 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %201 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %200, align 8
  %202 = icmp eq %"struct.blink::LayoutBoxRareData"* %201, null
  br i1 %202, label %233, label %203

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %201, i64 0, i32 2, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, -64
  br i1 %206, label %233, label %207

207:                                              ; preds = %203
  %208 = bitcast i64* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #20
  br i1 %192, label %219, label %209

209:                                              ; preds = %207
  %210 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %211 = load i8, i8* %210, align 4, !range !4
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %213, label %216

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %215 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %214, align 8
  br label %219

216:                                              ; preds = %197, %209
  %217 = phi i8* [ %198, %197 ], [ %208, %209 ]
  %218 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %222

219:                                              ; preds = %213, %207
  %220 = phi %"struct.blink::LayoutBoxRareData"* [ %215, %213 ], [ %201, %207 ]
  %221 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %220, i64 0, i32 2, i32 0
  br label %222

222:                                              ; preds = %219, %216
  %223 = phi i8* [ %217, %216 ], [ %208, %219 ]
  %224 = phi i32* [ %218, %216 ], [ %221, %219 ]
  %225 = load i32, i32* %224, align 4
  %226 = bitcast i64* %38 to float*
  %227 = sitofp i32 %225 to float
  %228 = fmul float %227, 1.562500e-02
  store float %228, float* %226, align 8, !alias.scope !228
  %229 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %39, i64 0, i32 1
  store i8 0, i8* %229, align 4, !alias.scope !228
  %230 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %39, i64 0, i32 2
  store i8 2, i8* %230, align 1, !alias.scope !228
  %231 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %39, i64 0, i32 3
  store i8 1, i8* %231, align 2, !alias.scope !228
  %232 = load i64, i64* %38, align 8
  br label %615

233:                                              ; preds = %203, %199
  %234 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %235 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %234, align 8
  %236 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %235, i64 169
  %237 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %236, align 8
  %238 = tail call zeroext i1 %237(%"class.blink::LayoutBox"* %0) #20
  br i1 %238, label %239, label %261

239:                                              ; preds = %233
  %240 = bitcast i64* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %240) #20
  %241 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*, i32)***
  %242 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %241, align 8
  %243 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %242, i64 168
  %244 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %243, align 8
  %245 = tail call i32 %244(%"class.blink::LayoutBox"* %0, i32 0) #20
  %246 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %247 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %246)
  %248 = icmp slt i32 %247, 0
  %249 = select i1 %248, i32 -2147483648, i32 2147483647
  %250 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %245, i32 %247) #20
  %251 = extractvalue { i32, i1 } %250, 1
  %252 = extractvalue { i32, i1 } %250, 0
  %253 = select i1 %251, i32 %249, i32 %252, !prof !2
  %254 = bitcast i64* %40 to float*
  %255 = sitofp i32 %253 to float
  %256 = fmul float %255, 1.562500e-02
  store float %256, float* %254, align 8, !alias.scope !231
  %257 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %41, i64 0, i32 1
  store i8 0, i8* %257, align 4, !alias.scope !231
  %258 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %41, i64 0, i32 2
  store i8 2, i8* %258, align 1, !alias.scope !231
  %259 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %41, i64 0, i32 3
  store i8 1, i8* %259, align 2, !alias.scope !231
  %260 = load i64, i64* %40, align 8
  br label %615

261:                                              ; preds = %233
  %262 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %263 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %263, i64 0, i32 0, i32 9
  %265 = bitcast [20 x i8]* %264 to i160*
  %266 = load i160, i160* %265, align 8
  %267 = and i160 %266, 15211807202738752817960438464512
  %268 = icmp eq i160 %267, 0
  %269 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %263, i64 0, i32 0, i32 5, i32 0, i32 0
  %270 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %269, align 8
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %270, i64 0, i32 3
  %272 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %270, i64 0, i32 8
  %273 = select i1 %268, %"class.blink::Length"* %271, %"class.blink::Length"* %272
  %274 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %273, i64 0, i32 2
  %275 = load i8, i8* %274, align 1
  %276 = icmp eq i8 %275, 8
  br i1 %276, label %277, label %278

277:                                              ; preds = %261
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %273) #20
  br label %278

278:                                              ; preds = %277, %261
  %279 = bitcast %"class.blink::Length"* %273 to i64*
  %280 = load i64, i64* %279, align 4
  store i64 %280, i64* %32, align 8
  %281 = call zeroext i1 @_ZNK5blink9LayoutBox41ShouldComputeLogicalHeightFromAspectRatioEv(%"class.blink::LayoutBox"* %0)
  br i1 %281, label %282, label %589

282:                                              ; preds = %278
  %283 = bitcast %"struct.blink::NGBoxStrut"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %283) #20
  %284 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %42, i64 0, i32 0, i32 0
  %285 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %42, i64 0, i32 1, i32 0
  %286 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %42, i64 0, i32 2, i32 0
  %287 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %42, i64 0, i32 3, i32 0
  %288 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %289 = bitcast %"struct.blink::NGBoxStrut"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %289, i8 -86, i64 16, i1 false)
  %290 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %262, align 8, !noalias !234
  %291 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %290, i64 0, i32 0, i32 9
  %292 = bitcast [20 x i8]* %291 to i160*
  %293 = load i160, i160* %292, align 8, !noalias !234
  %294 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  %295 = and i160 %293, 15211807202738752817960438464512
  %296 = icmp eq i160 %295, 0
  %297 = and i160 %293, 41538374868278621028243970633760768
  %298 = icmp eq i160 %297, 0
  %299 = select i1 %298, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %300 = select i1 %298, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %301 = select i1 %296, { i64, i64 } %300, { i64, i64 } %299
  %302 = select i1 %296, { i64, i64 } %300, { i64, i64 } %299
  %303 = extractvalue { i64, i64 } %301, 0
  %304 = extractvalue { i64, i64 } %302, 1
  %305 = getelementptr inbounds i8, i8* %294, i64 %304
  %306 = bitcast i8* %305 to %"class.blink::LayoutBoxModelObject"*
  %307 = and i64 %303, 1
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %316, label %309

309:                                              ; preds = %282
  %310 = bitcast i8* %305 to i8**
  %311 = load i8*, i8** %310, align 8
  %312 = add i64 %303, -1
  %313 = getelementptr i8, i8* %311, i64 %312
  %314 = bitcast i8* %313 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %315 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %314, align 8
  br label %318

316:                                              ; preds = %282
  %317 = inttoptr i64 %303 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %318

318:                                              ; preds = %309, %316
  %319 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %315, %309 ], [ %317, %316 ]
  %320 = call i32 %319(%"class.blink::LayoutBoxModelObject"* %306) #20
  %321 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %262, align 8
  %322 = bitcast %"class.blink::Length"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %322)
  %323 = bitcast %"class.blink::Length"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %323)
  %324 = bitcast %"class.blink::Length"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %324)
  %325 = bitcast %"class.blink::Length"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %325)
  %326 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %321, i64 0, i32 0, i32 9
  %327 = bitcast [20 x i8]* %326 to i160*
  %328 = load i160, i160* %327, align 8, !noalias !237
  %329 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %321, i64 0, i32 0, i32 7, i32 0, i32 0
  %330 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %329, align 8, !noalias !237
  %331 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %330, i64 0, i32 16
  %332 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %330, i64 0, i32 15
  %333 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %330, i64 0, i32 13
  %334 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %330, i64 0, i32 14
  store %"class.blink::Length"* %331, %"class.blink::Length"** %16, align 8, !alias.scope !237
  store %"class.blink::Length"* %332, %"class.blink::Length"** %17, align 8, !alias.scope !237
  store %"class.blink::Length"* %333, %"class.blink::Length"** %18, align 8, !alias.scope !237
  store %"class.blink::Length"* %334, %"class.blink::Length"** %19, align 8, !alias.scope !237
  %335 = and i160 %328, 15211807202738752817960438464512
  %336 = icmp eq i160 %335, 0
  %337 = and i160 %328, 41538374868278621028243970633760768
  %338 = icmp eq i160 %337, 0
  %339 = select i1 %338, %"class.blink::Length"** %19, %"class.blink::Length"** %17
  %340 = select i1 %338, %"class.blink::Length"** %16, %"class.blink::Length"** %18
  %341 = select i1 %336, %"class.blink::Length"** %339, %"class.blink::Length"** %340
  %342 = load %"class.blink::Length"*, %"class.blink::Length"** %341, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %322)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %323)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %324)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %325)
  %343 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %288, %"class.blink::Length"* dereferenceable(8) %342) #20
  %344 = icmp slt i32 %343, 0
  %345 = select i1 %344, i32 -2147483648, i32 2147483647
  %346 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %320, i32 %343) #20
  %347 = extractvalue { i32, i1 } %346, 1
  %348 = extractvalue { i32, i1 } %346, 0
  %349 = select i1 %347, i32 %345, i32 %348, !prof !2
  %350 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %262, align 8, !noalias !240
  %351 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %350, i64 0, i32 0, i32 9
  %352 = bitcast [20 x i8]* %351 to i160*
  %353 = load i160, i160* %352, align 8, !noalias !240
  %354 = and i160 %353, 15211807202738752817960438464512
  %355 = icmp eq i160 %354, 0
  %356 = and i160 %353, 41538374868278621028243970633760768
  %357 = icmp eq i160 %356, 0
  %358 = select i1 %357, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %359 = select i1 %357, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %360 = select i1 %355, { i64, i64 } %359, { i64, i64 } %358
  %361 = select i1 %355, { i64, i64 } %359, { i64, i64 } %358
  %362 = extractvalue { i64, i64 } %360, 0
  %363 = extractvalue { i64, i64 } %361, 1
  %364 = getelementptr inbounds i8, i8* %294, i64 %363
  %365 = bitcast i8* %364 to %"class.blink::LayoutBoxModelObject"*
  %366 = and i64 %362, 1
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %375, label %368

368:                                              ; preds = %318
  %369 = bitcast i8* %364 to i8**
  %370 = load i8*, i8** %369, align 8
  %371 = add i64 %362, -1
  %372 = getelementptr i8, i8* %370, i64 %371
  %373 = bitcast i8* %372 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %374 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %373, align 8
  br label %377

375:                                              ; preds = %318
  %376 = inttoptr i64 %362 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %377

377:                                              ; preds = %368, %375
  %378 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %374, %368 ], [ %376, %375 ]
  %379 = call i32 %378(%"class.blink::LayoutBoxModelObject"* %365) #20
  %380 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %262, align 8
  %381 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %381)
  %382 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %382)
  %383 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %383)
  %384 = bitcast %"class.blink::Length"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %384)
  %385 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %380, i64 0, i32 0, i32 9
  %386 = bitcast [20 x i8]* %385 to i160*
  %387 = load i160, i160* %386, align 8, !noalias !243
  %388 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %380, i64 0, i32 0, i32 7, i32 0, i32 0
  %389 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %388, align 8, !noalias !243
  %390 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %389, i64 0, i32 16
  %391 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %389, i64 0, i32 15
  %392 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %389, i64 0, i32 13
  %393 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %389, i64 0, i32 14
  store %"class.blink::Length"* %390, %"class.blink::Length"** %11, align 8, !alias.scope !243
  store %"class.blink::Length"* %391, %"class.blink::Length"** %12, align 8, !alias.scope !243
  store %"class.blink::Length"* %392, %"class.blink::Length"** %13, align 8, !alias.scope !243
  store %"class.blink::Length"* %393, %"class.blink::Length"** %14, align 8, !alias.scope !243
  %394 = and i160 %387, 15211807202738752817960438464512
  %395 = icmp eq i160 %394, 0
  %396 = and i160 %387, 41538374868278621028243970633760768
  %397 = icmp eq i160 %396, 0
  %398 = select i1 %397, %"class.blink::Length"** %12, %"class.blink::Length"** %14
  %399 = select i1 %397, %"class.blink::Length"** %13, %"class.blink::Length"** %11
  %400 = select i1 %395, %"class.blink::Length"** %398, %"class.blink::Length"** %399
  %401 = load %"class.blink::Length"*, %"class.blink::Length"** %400, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %381)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %382)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %383)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %384)
  %402 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %288, %"class.blink::Length"* dereferenceable(8) %401) #20
  %403 = icmp slt i32 %402, 0
  %404 = select i1 %403, i32 -2147483648, i32 2147483647
  %405 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %379, i32 %402) #20
  %406 = extractvalue { i32, i1 } %405, 1
  %407 = extractvalue { i32, i1 } %405, 0
  %408 = select i1 %406, i32 %404, i32 %407, !prof !2
  %409 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %262, align 8, !noalias !246
  %410 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %409, i64 0, i32 0, i32 9
  %411 = bitcast [20 x i8]* %410 to i160*
  %412 = load i160, i160* %411, align 8, !noalias !246
  %413 = lshr i160 %412, 102
  %414 = trunc i160 %413 to i8
  %415 = and i8 %414, 3
  switch i8 %415, label %416 [
    i8 0, label %425
    i8 1, label %417
  ]

416:                                              ; preds = %377
  br label %417

417:                                              ; preds = %416, %377
  %418 = phi { i64, i64 } [ { i64 993, i64 0 }, %416 ], [ { i64 1001, i64 0 }, %377 ]
  %419 = extractvalue { i64, i64 } %418, 0
  %420 = extractvalue { i64, i64 } %418, 1
  %421 = getelementptr inbounds i8, i8* %294, i64 %420
  %422 = bitcast i8* %421 to %"class.blink::LayoutBoxModelObject"*
  %423 = and i64 %419, 1
  %424 = icmp eq i64 %423, 0
  br i1 %424, label %435, label %425

425:                                              ; preds = %417, %377
  %426 = phi %"class.blink::LayoutBoxModelObject"* [ %422, %417 ], [ %288, %377 ]
  %427 = phi i8* [ %421, %417 ], [ %294, %377 ]
  %428 = phi i64 [ %419, %417 ], [ 977, %377 ]
  %429 = bitcast i8* %427 to i8**
  %430 = load i8*, i8** %429, align 8
  %431 = add i64 %428, -1
  %432 = getelementptr i8, i8* %430, i64 %431
  %433 = bitcast i8* %432 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %434 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %433, align 8
  br label %437

435:                                              ; preds = %417
  %436 = inttoptr i64 %419 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %437

437:                                              ; preds = %425, %435
  %438 = phi %"class.blink::LayoutBoxModelObject"* [ %426, %425 ], [ %422, %435 ]
  %439 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %434, %425 ], [ %436, %435 ]
  %440 = call i32 %439(%"class.blink::LayoutBoxModelObject"* %438) #20
  %441 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %262, align 8
  %442 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %442)
  %443 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %443)
  %444 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %444)
  %445 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %441, i64 0, i32 0, i32 9
  %446 = bitcast [20 x i8]* %445 to i160*
  %447 = load i160, i160* %446, align 8, !noalias !249
  %448 = lshr i160 %447, 102
  %449 = trunc i160 %448 to i8
  %450 = and i8 %449, 3
  %451 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %441, i64 0, i32 0, i32 7, i32 0, i32 0
  %452 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %451, align 8, !noalias !249
  %453 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %452, i64 0, i32 16
  %454 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %452, i64 0, i32 15
  %455 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %452, i64 0, i32 14
  store %"class.blink::Length"* %453, %"class.blink::Length"** %5, align 8, !alias.scope !249
  store %"class.blink::Length"* %454, %"class.blink::Length"** %6, align 8, !alias.scope !249
  store %"class.blink::Length"* %455, %"class.blink::Length"** %7, align 8, !alias.scope !249
  %456 = icmp eq i8 %450, 0
  %457 = icmp eq i8 %450, 1
  %458 = select i1 %457, %"class.blink::Length"** %6, %"class.blink::Length"** %7
  %459 = select i1 %456, %"class.blink::Length"** %5, %"class.blink::Length"** %458
  %460 = load %"class.blink::Length"*, %"class.blink::Length"** %459, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %442)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %443)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %444)
  %461 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %288, %"class.blink::Length"* dereferenceable(8) %460) #20
  %462 = icmp slt i32 %461, 0
  %463 = select i1 %462, i32 -2147483648, i32 2147483647
  %464 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %440, i32 %461) #20
  %465 = extractvalue { i32, i1 } %464, 1
  %466 = extractvalue { i32, i1 } %464, 0
  %467 = select i1 %465, i32 %463, i32 %466, !prof !2
  %468 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %262, align 8, !noalias !252
  %469 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %468, i64 0, i32 0, i32 9
  %470 = bitcast [20 x i8]* %469 to i160*
  %471 = load i160, i160* %470, align 8, !noalias !252
  %472 = lshr i160 %471, 102
  %473 = trunc i160 %472 to i8
  %474 = and i8 %473, 3
  switch i8 %474, label %475 [
    i8 0, label %484
    i8 1, label %476
  ]

475:                                              ; preds = %437
  br label %476

476:                                              ; preds = %475, %437
  %477 = phi { i64, i64 } [ { i64 1001, i64 0 }, %475 ], [ { i64 993, i64 0 }, %437 ]
  %478 = extractvalue { i64, i64 } %477, 0
  %479 = extractvalue { i64, i64 } %477, 1
  %480 = getelementptr inbounds i8, i8* %294, i64 %479
  %481 = bitcast i8* %480 to %"class.blink::LayoutBoxModelObject"*
  %482 = and i64 %478, 1
  %483 = icmp eq i64 %482, 0
  br i1 %483, label %494, label %484

484:                                              ; preds = %476, %437
  %485 = phi %"class.blink::LayoutBoxModelObject"* [ %481, %476 ], [ %288, %437 ]
  %486 = phi i8* [ %480, %476 ], [ %294, %437 ]
  %487 = phi i64 [ %478, %476 ], [ 985, %437 ]
  %488 = bitcast i8* %486 to i8**
  %489 = load i8*, i8** %488, align 8
  %490 = add i64 %487, -1
  %491 = getelementptr i8, i8* %489, i64 %490
  %492 = bitcast i8* %491 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %493 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %492, align 8
  br label %496

494:                                              ; preds = %476
  %495 = inttoptr i64 %478 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %496

496:                                              ; preds = %484, %494
  %497 = phi %"class.blink::LayoutBoxModelObject"* [ %485, %484 ], [ %481, %494 ]
  %498 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %493, %484 ], [ %495, %494 ]
  %499 = call i32 %498(%"class.blink::LayoutBoxModelObject"* %497) #20
  %500 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %262, align 8
  %501 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %501)
  %502 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %502)
  %503 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %503)
  %504 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %500, i64 0, i32 0, i32 9
  %505 = bitcast [20 x i8]* %504 to i160*
  %506 = load i160, i160* %505, align 8, !noalias !255
  %507 = lshr i160 %506, 102
  %508 = trunc i160 %507 to i8
  %509 = and i8 %508, 3
  %510 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %500, i64 0, i32 0, i32 7, i32 0, i32 0
  %511 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %510, align 8, !noalias !255
  %512 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %511, i64 0, i32 15
  %513 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %511, i64 0, i32 13
  %514 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %511, i64 0, i32 14
  store %"class.blink::Length"* %512, %"class.blink::Length"** %8, align 8, !alias.scope !255
  store %"class.blink::Length"* %513, %"class.blink::Length"** %9, align 8, !alias.scope !255
  store %"class.blink::Length"* %514, %"class.blink::Length"** %10, align 8, !alias.scope !255
  %515 = icmp eq i8 %509, 0
  %516 = icmp eq i8 %509, 1
  %517 = select i1 %516, %"class.blink::Length"** %10, %"class.blink::Length"** %8
  %518 = select i1 %515, %"class.blink::Length"** %9, %"class.blink::Length"** %517
  %519 = load %"class.blink::Length"*, %"class.blink::Length"** %518, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %501)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %502)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %503)
  %520 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %288, %"class.blink::Length"* dereferenceable(8) %519) #20
  %521 = icmp slt i32 %520, 0
  %522 = select i1 %521, i32 -2147483648, i32 2147483647
  %523 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %499, i32 %520) #20
  %524 = extractvalue { i32, i1 } %523, 1
  %525 = extractvalue { i32, i1 } %523, 0
  %526 = select i1 %524, i32 %522, i32 %525, !prof !2
  store i32 %349, i32* %284, align 4
  store i32 %408, i32* %285, align 4
  store i32 %467, i32* %286, align 4
  store i32 %526, i32* %287, align 4
  %527 = bitcast i64* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %527) #20
  %528 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %262, align 8
  %529 = bitcast <2 x float>* %15 to %"class.blink::FloatSize"*
  %530 = bitcast <2 x float>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %530) #20
  %531 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %528, i64 0, i32 0, i32 5, i32 0, i32 0
  %532 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %531, align 8
  %533 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %532, i64 0, i32 1, i32 1
  %534 = bitcast %"class.blink::FloatSize"* %533 to i64*
  %535 = load i64, i64* %534, align 4
  %536 = bitcast <2 x float>* %15 to i64*
  store i64 %535, i64* %536, align 8
  %537 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %528, i64 0, i32 0, i32 9
  %538 = bitcast [20 x i8]* %537 to i160*
  %539 = load i160, i160* %538, align 8
  %540 = and i160 %539, 15211807202738752817960438464512
  %541 = icmp eq i160 %540, 0
  br i1 %541, label %550, label %542

542:                                              ; preds = %496
  %543 = trunc i64 %535 to i32
  %544 = bitcast i32 %543 to float
  %545 = lshr i64 %535, 32
  %546 = trunc i64 %545 to i32
  %547 = bitcast i32 %546 to float
  %548 = insertelement <2 x float> undef, float %547, i32 0
  %549 = insertelement <2 x float> %548, float %544, i32 1
  store <2 x float> %549, <2 x float>* %15, align 8
  br label %550

550:                                              ; preds = %496, %542
  %551 = call i64 @_ZN5blink11LogicalSize24AspectRatioFromFloatSizeERKNS_9FloatSizeE(%"class.blink::FloatSize"* nonnull dereferenceable(8) %529) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %530) #20
  store i64 %551, i64* %43, align 8
  %552 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %262, align 8
  %553 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %552, i64 0, i32 0, i32 5, i32 0, i32 0
  %554 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %553, align 8
  %555 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %554, i64 0, i32 1, i32 1, i32 0
  %556 = load float, float* %555, align 4
  %557 = fcmp oeq float %556, 0.000000e+00
  br i1 %557, label %577, label %558

558:                                              ; preds = %550
  %559 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %554, i64 0, i32 1, i32 1, i32 1
  %560 = load float, float* %559, align 4
  %561 = fcmp oeq float %560, 0.000000e+00
  %562 = fcmp olt float %556, 1.562500e-02
  %563 = or i1 %562, %561
  %564 = fcmp olt float %560, 1.562500e-02
  %565 = or i1 %564, %563
  br i1 %565, label %577, label %566

566:                                              ; preds = %558
  %567 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %554, i64 0, i32 1, i32 0
  %568 = load i8, i8* %567, align 4
  %569 = and i8 %568, 3
  %570 = icmp eq i8 %569, 2
  br i1 %570, label %571, label %577

571:                                              ; preds = %566
  %572 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %554, i64 0, i32 11
  %573 = load i8, i8* %572, align 4
  %574 = lshr i8 %573, 1
  %575 = and i8 %574, 1
  %576 = zext i8 %575 to i32
  br label %577

577:                                              ; preds = %550, %558, %566, %571
  %578 = phi i32 [ %576, %571 ], [ 1, %566 ], [ 1, %558 ], [ 1, %550 ]
  %579 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %552, i64 0, i32 0, i32 9
  %580 = bitcast [20 x i8]* %579 to i160*
  %581 = load i160, i160* %580, align 8
  %582 = and i160 %581, 15211807202738752817960438464512
  %583 = icmp eq i160 %582, 0
  %584 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %585 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %586 = select i1 %583, i32* %584, i32* %585
  %587 = load i32, i32* %586, align 4
  %588 = call i32 @_ZN5blink24BlockSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %42, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %44, i32 %578, i32 %587) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %527) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %283) #20
  br label %600

589:                                              ; preds = %278
  %590 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %591 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %590)
  %592 = load i32, i32* %52, align 4
  %593 = icmp sgt i32 %591, -1
  %594 = select i1 %593, i32 -2147483648, i32 2147483647
  %595 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %592, i32 %591) #20
  %596 = extractvalue { i32, i1 } %595, 1
  %597 = extractvalue { i32, i1 } %595, 0
  %598 = select i1 %596, i32 %594, i32 %597, !prof !2
  %599 = call i32 @_ZNK5blink9LayoutBox25ComputeLogicalHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 0, %"class.blink::Length"* nonnull dereferenceable(8) %33, i32 %598)
  br label %600

600:                                              ; preds = %589, %577
  %601 = phi i32 [ %588, %577 ], [ %599, %589 ]
  %602 = icmp eq i32 %601, -64
  %603 = load i32, i32* %52, align 4
  %604 = select i1 %602, i32 %603, i32 %601
  %605 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %606 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %605)
  %607 = load i32, i32* %52, align 4
  %608 = icmp sgt i32 %606, -1
  %609 = select i1 %608, i32 -2147483648, i32 2147483647
  %610 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %607, i32 %606) #20
  %611 = extractvalue { i32, i1 } %610, 1
  %612 = extractvalue { i32, i1 } %610, 0
  %613 = select i1 %611, i32 %609, i32 %612, !prof !2
  %614 = call i32 @_ZNK5blink9LayoutBox30ConstrainLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %0, i32 %604, i32 %613)
  br label %632

615:                                              ; preds = %222, %239
  %616 = phi i64 [ %232, %222 ], [ %260, %239 ]
  %617 = phi i8* [ %223, %222 ], [ %240, %239 ]
  store i64 %616, i64* %32, align 8
  %618 = trunc i64 %616 to i32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %617) #20
  %619 = bitcast i32 %618 to float
  %620 = and i64 %616, 71776119061217280
  %621 = icmp eq i64 %620, 0
  %622 = sitofp i32 %618 to float
  %623 = select i1 %621, float %622, float %619
  %624 = fmul float %623, 6.400000e+01
  %625 = fcmp ult float %624, 0xC1E0000000000000
  %626 = fcmp ugt float %624, 0x41DFFFFFE0000000
  %627 = fcmp ogt float %624, 0xC1E0000000000000
  %628 = select i1 %627, float %624, float 0xC1E0000000000000
  %629 = fptosi float %628 to i32
  %630 = select i1 %625, i32 0, i32 2147483647
  %631 = select i1 %626, i32 %630, i32 %629
  br label %632

632:                                              ; preds = %615, %600
  %633 = phi i32 [ %614, %600 ], [ %631, %615 ]
  store i32 %633, i32* %52, align 4
  %634 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %635 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %634, align 8
  %636 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %635, i64 131
  %637 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %636, align 8
  %638 = call i32 %637(%"class.blink::LayoutBox"* %0) #20
  %639 = load i32, i32* %52, align 4
  %640 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 2, i32 0
  %641 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 2, i32 1
  %642 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %643 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %642, align 8
  %644 = bitcast %"class.blink::Length"** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %644)
  %645 = bitcast %"class.blink::Length"** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %645)
  %646 = bitcast %"class.blink::Length"** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %646)
  %647 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %643, i64 0, i32 0, i32 9
  %648 = bitcast [20 x i8]* %647 to i160*
  %649 = load i160, i160* %648, align 8, !noalias !258
  %650 = lshr i160 %649, 102
  %651 = trunc i160 %650 to i8
  %652 = and i8 %651, 3
  %653 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %643, i64 0, i32 0, i32 7, i32 0, i32 0
  %654 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %653, align 8, !noalias !258
  %655 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %654, i64 0, i32 12
  %656 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %654, i64 0, i32 11
  %657 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %654, i64 0, i32 10
  store %"class.blink::Length"* %655, %"class.blink::Length"** %20, align 8, !alias.scope !258
  store %"class.blink::Length"* %656, %"class.blink::Length"** %21, align 8, !alias.scope !258
  store %"class.blink::Length"* %657, %"class.blink::Length"** %22, align 8, !alias.scope !258
  %658 = icmp eq i8 %652, 0
  %659 = icmp eq i8 %652, 1
  %660 = select i1 %659, %"class.blink::Length"** %21, %"class.blink::Length"** %22
  %661 = select i1 %658, %"class.blink::Length"** %20, %"class.blink::Length"** %660
  %662 = bitcast %"class.blink::Length"** %661 to i64**
  %663 = load i64*, i64** %662, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %644)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %645)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %646)
  %664 = load i64, i64* %663, align 4
  store i64 %664, i64* %45, align 8
  %665 = and i64 %664, 280375465082880
  %666 = icmp eq i64 %665, 8796093022208
  br i1 %666, label %667, label %677

667:                                              ; preds = %632
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %46) #20
  %668 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %642, align 8
  %669 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %668, i64 0, i32 0, i32 9
  %670 = bitcast [20 x i8]* %669 to i160*
  %671 = load i160, i160* %670, align 8, !noalias !261
  %672 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %668, i64 0, i32 0, i32 7, i32 0, i32 0
  %673 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %672, align 8, !noalias !261
  %674 = lshr i160 %671, 102
  %675 = trunc i160 %674 to i8
  %676 = and i8 %675, 3
  br label %677

677:                                              ; preds = %632, %667
  %678 = phi i8 [ %652, %632 ], [ %676, %667 ]
  %679 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %654, %632 ], [ %673, %667 ]
  %680 = bitcast %"class.blink::Length"** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %680)
  %681 = bitcast %"class.blink::Length"** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %681)
  %682 = bitcast %"class.blink::Length"** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %682)
  %683 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %679, i64 0, i32 11
  %684 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %679, i64 0, i32 9
  %685 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %679, i64 0, i32 10
  store %"class.blink::Length"* %683, %"class.blink::Length"** %23, align 8, !alias.scope !261
  store %"class.blink::Length"* %684, %"class.blink::Length"** %24, align 8, !alias.scope !261
  store %"class.blink::Length"* %685, %"class.blink::Length"** %25, align 8, !alias.scope !261
  %686 = icmp eq i8 %678, 0
  %687 = icmp eq i8 %678, 1
  %688 = select i1 %687, %"class.blink::Length"** %25, %"class.blink::Length"** %23
  %689 = select i1 %686, %"class.blink::Length"** %24, %"class.blink::Length"** %688
  %690 = bitcast %"class.blink::Length"** %689 to i64**
  %691 = load i64*, i64** %690, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %680)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %681)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %682)
  %692 = load i64, i64* %691, align 4
  store i64 %692, i64* %47, align 8
  %693 = and i64 %692, 280375465082880
  %694 = icmp eq i64 %693, 8796093022208
  br i1 %694, label %695, label %696

695:                                              ; preds = %677
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %48) #20
  br label %696

696:                                              ; preds = %677, %695
  call void @_ZNK5blink9LayoutBox26ComputeMarginsForDirectionENS_15MarginDirectionEPKNS_11LayoutBlockENS_10LayoutUnitES5_RS5_S6_NS_6LengthES7_(%"class.blink::LayoutBox"* %0, i32 %111, %"class.blink::LayoutBlock"* %104, i32 %638, i32 %639, %"class.blink::LayoutUnit"* dereferenceable(4) %640, %"class.blink::LayoutUnit"* dereferenceable(4) %641, %"class.blink::Length"* nonnull %46, %"class.blink::Length"* nonnull %48)
  %697 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 0, i32 2
  %698 = load i8, i8* %697, align 1
  %699 = icmp eq i8 %698, 8
  br i1 %699, label %700, label %701

700:                                              ; preds = %696
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %48) #20
  br label %701

701:                                              ; preds = %696, %700
  %702 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %46, i64 0, i32 2
  %703 = load i8, i8* %702, align 1
  %704 = icmp eq i8 %703, 8
  br i1 %704, label %705, label %706

705:                                              ; preds = %701
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %46) #20
  br label %706

706:                                              ; preds = %83, %79, %705, %701, %100
  %707 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %708 = load %"class.blink::Node"*, %"class.blink::Node"** %707, align 8
  %709 = icmp eq %"class.blink::Node"* %708, null
  br i1 %709, label %710, label %717

710:                                              ; preds = %706, %710
  %711 = phi %"class.blink::LayoutObject"* [ %713, %710 ], [ %51, %706 ]
  %712 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %711, i64 0, i32 7
  %713 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %712, align 8
  %714 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %713, i64 0, i32 6, i32 0, i32 0
  %715 = load %"class.blink::Node"*, %"class.blink::Node"** %714, align 8
  %716 = icmp eq %"class.blink::Node"* %715, null
  br i1 %716, label %710, label %717

717:                                              ; preds = %710, %706
  %718 = phi %"class.blink::Node"* [ %708, %706 ], [ %715, %710 ]
  %719 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %718, i64 0, i32 3, i32 0, i32 0
  %720 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %719, align 8
  %721 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %720, i64 0, i32 2, i32 0, i32 0
  %722 = load %"class.blink::Document"*, %"class.blink::Document"** %721, align 8
  %723 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %722, i64 0, i32 31
  %724 = load i32, i32* %723, align 8
  %725 = icmp eq i32 %724, 2
  br i1 %725, label %726, label %808

726:                                              ; preds = %717
  %727 = load i8, i8* %61, align 1
  switch i8 %727, label %808 [
    i8 8, label %728
    i8 1, label %728
  ]

728:                                              ; preds = %726, %726
  br i1 %709, label %729, label %736

729:                                              ; preds = %728, %729
  %730 = phi %"class.blink::LayoutObject"* [ %732, %729 ], [ %51, %728 ]
  %731 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %730, i64 0, i32 7
  %732 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %731, align 8
  %733 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %732, i64 0, i32 6, i32 0, i32 0
  %734 = load %"class.blink::Node"*, %"class.blink::Node"** %733, align 8
  %735 = icmp eq %"class.blink::Node"* %734, null
  br i1 %735, label %729, label %736

736:                                              ; preds = %729, %728
  %737 = phi %"class.blink::Node"* [ %708, %728 ], [ %734, %729 ]
  %738 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %737, i64 0, i32 3, i32 0, i32 0
  %739 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %738, align 8
  %740 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %739, i64 0, i32 2, i32 0, i32 0
  %741 = load %"class.blink::Document"*, %"class.blink::Document"** %740, align 8
  %742 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %741, i64 0, i32 47, i32 0, i32 0
  %743 = load %"class.blink::Element"*, %"class.blink::Element"** %742, align 8
  %744 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %743, i64 0, i32 0, i32 0
  %745 = icmp eq %"class.blink::Node"* %744, %708
  %746 = load i96, i96* %63, align 4
  br i1 %745, label %805, label %747

747:                                              ; preds = %736
  %748 = and i96 %746, 16777216
  %749 = icmp ne i96 %748, 0
  %750 = or i1 %709, %749
  br i1 %750, label %808, label %751

751:                                              ; preds = %747
  %752 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %708, i64 0, i32 1
  %753 = load i32, i32* %752, align 8
  %754 = and i32 %753, 48
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %756, label %808

756:                                              ; preds = %751
  %757 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %758 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %757, i64 0, i32 0, i32 0, i32 0
  %759 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %758, align 8
  %760 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %708, i64 1, i32 2
  %761 = bitcast %"class.blink::Member.318"* %760 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %762 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %761, align 8
  %763 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %762, i64 0, i32 3, i32 0, i32 0, i32 0
  %764 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %763, align 8
  %765 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %759, i64 0, i32 3, i32 0, i32 0, i32 0
  %766 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %765, align 8
  %767 = icmp eq %"class.WTF::StringImpl"* %764, %766
  br i1 %767, label %768, label %808

768:                                              ; preds = %756
  %769 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %708, i64 0, i32 3, i32 0, i32 0
  %770 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %769, align 8
  %771 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %770, i64 0, i32 2, i32 0, i32 0
  %772 = load %"class.blink::Document"*, %"class.blink::Document"** %771, align 8
  %773 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %772, i64 0, i32 47, i32 0, i32 0
  %774 = load %"class.blink::Element"*, %"class.blink::Element"** %773, align 8
  %775 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %774, i64 0, i32 0, i32 0, i32 1
  %776 = load i32, i32* %775, align 8
  %777 = and i32 %776, 1
  %778 = icmp eq i32 %777, 0
  %779 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %774, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %778, label %784, label %780

780:                                              ; preds = %768
  %781 = bitcast %"class.blink::NodeData"** %779 to %"class.blink::NodeRareData"**
  %782 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %781, align 8
  %783 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %782, i64 0, i32 1, i32 0, i32 0
  br label %786

784:                                              ; preds = %768
  %785 = bitcast %"class.blink::NodeData"** %779 to %"class.blink::NodeRenderingData"**
  br label %786

786:                                              ; preds = %780, %784
  %787 = phi %"class.blink::NodeRenderingData"** [ %783, %780 ], [ %785, %784 ]
  %788 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %787, align 8
  %789 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %788, i64 0, i32 1
  %790 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %789, align 8
  %791 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %790, i64 0, i32 5, i32 0
  %792 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %791, align 8
  %793 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %792, i64 0, i32 0, i32 9
  %794 = bitcast [20 x i8]* %793 to i160*
  %795 = load i160, i160* %794, align 8
  %796 = and i160 %795, 15211807202738752817960438464512
  %797 = icmp eq i160 %796, 0
  %798 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %792, i64 0, i32 0, i32 5, i32 0, i32 0
  %799 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %798, align 8
  %800 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %799, i64 0, i32 3
  %801 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %799, i64 0, i32 8
  %802 = select i1 %797, %"class.blink::Length"* %800, %"class.blink::Length"* %801
  %803 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %802, i64 0, i32 2
  %804 = load i8, i8* %803, align 1
  switch i8 %804, label %808 [
    i8 8, label %805
    i8 1, label %805
  ]

805:                                              ; preds = %736, %786, %786
  %806 = and i96 %746, 134217728
  %807 = icmp eq i96 %806, 0
  br label %808

808:                                              ; preds = %786, %747, %726, %751, %805, %756, %717
  %809 = phi i1 [ false, %786 ], [ false, %756 ], [ false, %726 ], [ false, %717 ], [ %807, %805 ], [ false, %751 ], [ false, %747 ]
  br i1 %709, label %810, label %817

810:                                              ; preds = %808, %810
  %811 = phi %"class.blink::LayoutObject"* [ %813, %810 ], [ %51, %808 ]
  %812 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %811, i64 0, i32 7
  %813 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %812, align 8
  %814 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %813, i64 0, i32 6, i32 0, i32 0
  %815 = load %"class.blink::Node"*, %"class.blink::Node"** %814, align 8
  %816 = icmp eq %"class.blink::Node"* %815, null
  br i1 %816, label %810, label %817

817:                                              ; preds = %810, %808
  %818 = phi %"class.blink::Node"* [ %708, %808 ], [ %815, %810 ]
  %819 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %818, i64 0, i32 3, i32 0, i32 0
  %820 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %819, align 8
  %821 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %820, i64 0, i32 2, i32 0, i32 0
  %822 = load %"class.blink::Document"*, %"class.blink::Document"** %821, align 8
  %823 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %822, i64 0, i32 33
  %824 = load i32, i32* %823, align 8
  %825 = icmp eq i32 %824, 0
  br i1 %825, label %826, label %828

826:                                              ; preds = %817
  %827 = call zeroext i1 @_ZNK5blink9LayoutBox31StretchesToViewportInQuirksModeEv(%"class.blink::LayoutBox"* %0) #20
  br label %828

828:                                              ; preds = %817, %826
  %829 = phi i1 [ false, %817 ], [ %827, %826 ]
  %830 = or i1 %809, %829
  br i1 %830, label %831, label %1009

831:                                              ; preds = %828
  %832 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %833 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %832, align 8
  %834 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %833, i64 155
  %835 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %834, align 8
  %836 = call i32 %835(%"class.blink::LayoutBox"* %0) #20
  %837 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %832, align 8
  %838 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %837, i64 156
  %839 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %838, align 8
  %840 = call i32 %839(%"class.blink::LayoutBox"* %0) #20
  %841 = icmp slt i32 %840, 0
  %842 = select i1 %841, i32 -2147483648, i32 2147483647
  %843 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %836, i32 %840) #20
  %844 = extractvalue { i32, i1 } %843, 1
  %845 = extractvalue { i32, i1 } %843, 0
  %846 = select i1 %844, i32 %842, i32 %845, !prof !2
  %847 = load %"class.blink::Node"*, %"class.blink::Node"** %707, align 8
  %848 = icmp eq %"class.blink::Node"* %847, null
  br i1 %848, label %849, label %856

849:                                              ; preds = %831, %849
  %850 = phi %"class.blink::LayoutObject"* [ %852, %849 ], [ %51, %831 ]
  %851 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %850, i64 0, i32 7
  %852 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %851, align 8
  %853 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %852, i64 0, i32 6, i32 0, i32 0
  %854 = load %"class.blink::Node"*, %"class.blink::Node"** %853, align 8
  %855 = icmp eq %"class.blink::Node"* %854, null
  br i1 %855, label %849, label %856

856:                                              ; preds = %849, %831
  %857 = phi %"class.blink::Node"* [ %847, %831 ], [ %854, %849 ]
  %858 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %857, i64 0, i32 3, i32 0, i32 0
  %859 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %858, align 8
  %860 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %859, i64 0, i32 2, i32 0, i32 0
  %861 = load %"class.blink::Document"*, %"class.blink::Document"** %860, align 8
  %862 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %861, i64 0, i32 113
  %863 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %862, align 8
  %864 = call i32 @_ZNK5blink10LayoutView31ViewLogicalHeightForPercentagesEv(%"class.blink::LayoutView"* %863) #20
  %865 = load %"class.blink::Node"*, %"class.blink::Node"** %707, align 8
  %866 = icmp eq %"class.blink::Node"* %865, null
  br i1 %866, label %867, label %874

867:                                              ; preds = %856, %867
  %868 = phi %"class.blink::LayoutObject"* [ %870, %867 ], [ %51, %856 ]
  %869 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %868, i64 0, i32 7
  %870 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %869, align 8
  %871 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %870, i64 0, i32 6, i32 0, i32 0
  %872 = load %"class.blink::Node"*, %"class.blink::Node"** %871, align 8
  %873 = icmp eq %"class.blink::Node"* %872, null
  br i1 %873, label %867, label %874

874:                                              ; preds = %867, %856
  %875 = phi %"class.blink::Node"* [ %865, %856 ], [ %872, %867 ]
  %876 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %875, i64 0, i32 3, i32 0, i32 0
  %877 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %876, align 8
  %878 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %877, i64 0, i32 2, i32 0, i32 0
  %879 = load %"class.blink::Document"*, %"class.blink::Document"** %878, align 8
  %880 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %879, i64 0, i32 47, i32 0, i32 0
  %881 = load %"class.blink::Element"*, %"class.blink::Element"** %880, align 8
  %882 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %881, i64 0, i32 0, i32 0
  %883 = icmp eq %"class.blink::Node"* %882, %865
  br i1 %883, label %884, label %899

884:                                              ; preds = %874
  %885 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 0
  %886 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %886)
  %887 = icmp sgt i32 %846, -1
  %888 = select i1 %887, i32 -2147483648, i32 2147483647
  %889 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %864, i32 %846) #20
  %890 = extractvalue { i32, i1 } %889, 1
  %891 = extractvalue { i32, i1 } %889, 0
  %892 = select i1 %890, i32 %888, i32 %891, !prof !2
  store i32 %892, i32* %49, align 4
  %893 = load i32, i32* %52, align 4
  %894 = icmp slt i32 %893, %892
  %895 = bitcast i32* %49 to %"class.blink::LayoutUnit"*
  %896 = select i1 %894, %"class.blink::LayoutUnit"* %895, %"class.blink::LayoutUnit"* %885
  %897 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %896, i64 0, i32 0
  %898 = load i32, i32* %897, align 4
  store i32 %898, i32* %52, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %886)
  br label %1009

899:                                              ; preds = %874
  %900 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %901 = bitcast %"class.blink::LayoutObject"** %900 to %"class.blink::LayoutBox"**
  %902 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %901, align 8
  %903 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %902, i64 0, i32 0
  %904 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %902, i64 0, i32 0, i32 0, i32 5, i32 0
  %905 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %904, align 8
  %906 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %905, i64 0, i32 0, i32 9
  %907 = bitcast [20 x i8]* %906 to i160*
  %908 = load i160, i160* %907, align 8, !noalias !264
  %909 = lshr i160 %908, 102
  %910 = trunc i160 %909 to i8
  %911 = and i8 %910, 3
  %912 = bitcast %"class.blink::LayoutBox"* %902 to i8*
  switch i8 %911, label %913 [
    i8 0, label %922
    i8 1, label %914
  ]

913:                                              ; preds = %899
  br label %914

914:                                              ; preds = %913, %899
  %915 = phi { i64, i64 } [ { i64 1033, i64 0 }, %913 ], [ { i64 1041, i64 0 }, %899 ]
  %916 = extractvalue { i64, i64 } %915, 0
  %917 = extractvalue { i64, i64 } %915, 1
  %918 = getelementptr inbounds i8, i8* %912, i64 %917
  %919 = bitcast i8* %918 to %"class.blink::LayoutBoxModelObject"*
  %920 = and i64 %916, 1
  %921 = icmp eq i64 %920, 0
  br i1 %921, label %932, label %922

922:                                              ; preds = %914, %899
  %923 = phi %"class.blink::LayoutBoxModelObject"* [ %919, %914 ], [ %903, %899 ]
  %924 = phi i8* [ %918, %914 ], [ %912, %899 ]
  %925 = phi i64 [ %916, %914 ], [ 1017, %899 ]
  %926 = bitcast i8* %924 to i8**
  %927 = load i8*, i8** %926, align 8
  %928 = add i64 %925, -1
  %929 = getelementptr i8, i8* %927, i64 %928
  %930 = bitcast i8* %929 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %931 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %930, align 8
  br label %934

932:                                              ; preds = %914
  %933 = inttoptr i64 %916 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %934

934:                                              ; preds = %922, %932
  %935 = phi %"class.blink::LayoutBoxModelObject"* [ %923, %922 ], [ %919, %932 ]
  %936 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %931, %922 ], [ %933, %932 ]
  %937 = call i32 %936(%"class.blink::LayoutBoxModelObject"* %935) #20
  %938 = icmp slt i32 %937, 0
  %939 = select i1 %938, i32 -2147483648, i32 2147483647
  %940 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %846, i32 %937) #20
  %941 = extractvalue { i32, i1 } %940, 1
  %942 = extractvalue { i32, i1 } %940, 0
  %943 = select i1 %941, i32 %939, i32 %942, !prof !2
  %944 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %901, align 8
  %945 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %944, i64 0, i32 0
  %946 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %944, i64 0, i32 0, i32 0, i32 5, i32 0
  %947 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %946, align 8
  %948 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %947, i64 0, i32 0, i32 9
  %949 = bitcast [20 x i8]* %948 to i160*
  %950 = load i160, i160* %949, align 8, !noalias !267
  %951 = lshr i160 %950, 102
  %952 = trunc i160 %951 to i8
  %953 = and i8 %952, 3
  %954 = bitcast %"class.blink::LayoutBox"* %944 to i8*
  switch i8 %953, label %955 [
    i8 0, label %964
    i8 1, label %956
  ]

955:                                              ; preds = %934
  br label %956

956:                                              ; preds = %955, %934
  %957 = phi { i64, i64 } [ { i64 1041, i64 0 }, %955 ], [ { i64 1033, i64 0 }, %934 ]
  %958 = extractvalue { i64, i64 } %957, 0
  %959 = extractvalue { i64, i64 } %957, 1
  %960 = getelementptr inbounds i8, i8* %954, i64 %959
  %961 = bitcast i8* %960 to %"class.blink::LayoutBoxModelObject"*
  %962 = and i64 %958, 1
  %963 = icmp eq i64 %962, 0
  br i1 %963, label %974, label %964

964:                                              ; preds = %956, %934
  %965 = phi %"class.blink::LayoutBoxModelObject"* [ %961, %956 ], [ %945, %934 ]
  %966 = phi i8* [ %960, %956 ], [ %954, %934 ]
  %967 = phi i64 [ %958, %956 ], [ 1025, %934 ]
  %968 = bitcast i8* %966 to i8**
  %969 = load i8*, i8** %968, align 8
  %970 = add i64 %967, -1
  %971 = getelementptr i8, i8* %969, i64 %970
  %972 = bitcast i8* %971 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %973 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %972, align 8
  br label %976

974:                                              ; preds = %956
  %975 = inttoptr i64 %958 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %976

976:                                              ; preds = %964, %974
  %977 = phi %"class.blink::LayoutBoxModelObject"* [ %965, %964 ], [ %961, %974 ]
  %978 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %973, %964 ], [ %975, %974 ]
  %979 = call i32 %978(%"class.blink::LayoutBoxModelObject"* %977) #20
  %980 = icmp slt i32 %979, 0
  %981 = select i1 %980, i32 -2147483648, i32 2147483647
  %982 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %943, i32 %979) #20
  %983 = extractvalue { i32, i1 } %982, 1
  %984 = extractvalue { i32, i1 } %982, 0
  %985 = select i1 %983, i32 %981, i32 %984, !prof !2
  %986 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %901, align 8
  %987 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %986, i64 0, i32 0
  %988 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %987)
  %989 = icmp slt i32 %988, 0
  %990 = select i1 %989, i32 -2147483648, i32 2147483647
  %991 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %985, i32 %988) #20
  %992 = extractvalue { i32, i1 } %991, 1
  %993 = extractvalue { i32, i1 } %991, 0
  %994 = select i1 %992, i32 %990, i32 %993, !prof !2
  %995 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %3, i64 0, i32 0
  %996 = bitcast i32* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %996)
  %997 = icmp sgt i32 %994, -1
  %998 = select i1 %997, i32 -2147483648, i32 2147483647
  %999 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %864, i32 %994) #20
  %1000 = extractvalue { i32, i1 } %999, 1
  %1001 = extractvalue { i32, i1 } %999, 0
  %1002 = select i1 %1000, i32 %998, i32 %1001, !prof !2
  store i32 %1002, i32* %50, align 4
  %1003 = load i32, i32* %52, align 4
  %1004 = icmp slt i32 %1003, %1002
  %1005 = bitcast i32* %50 to %"class.blink::LayoutUnit"*
  %1006 = select i1 %1004, %"class.blink::LayoutUnit"* %1005, %"class.blink::LayoutUnit"* %995
  %1007 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1006, i64 0, i32 0
  %1008 = load i32, i32* %1007, align 4
  store i32 %1008, i32* %52, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %996)
  br label %1009

1009:                                             ; preds = %884, %976, %188, %184, %828
  %1010 = load i8, i8* %61, align 1
  %1011 = icmp eq i8 %1010, 8
  br i1 %1011, label %1012, label %1013

1012:                                             ; preds = %1009
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %33) #20
  br label %1013

1013:                                             ; preds = %1009, %1012
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #20
  br label %1014

1014:                                             ; preds = %4, %1013
  ret void
}

declare i32 @_ZN5blink24BlockSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16), %"struct.blink::LogicalSize"* dereferenceable(8), i32, i32) local_unnamed_addr #5

declare i32 @_ZNK5blink10LayoutView31ViewLogicalHeightForPercentagesEv(%"class.blink::LayoutView"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox33ComputeLogicalHeightWithoutLayoutEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %3 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #20
  %4 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %3, i8 0, i64 24, i1 false) #20
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 3
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %10, label %77

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = and i160 %15, 15211807202738752817960438464512
  %17 = icmp eq i160 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %10
  %19 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #20
  br i1 %19, label %22, label %77

20:                                               ; preds = %10
  %21 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #20
  br i1 %21, label %22, label %77

22:                                               ; preds = %18, %20
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8
  %27 = and i160 %26, 15211807202738752817960438464512
  %28 = icmp eq i160 %27, 0
  %29 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 5, i32 0, i32 0
  %30 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %29, align 8
  br i1 %28, label %31, label %43

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %30, i64 0, i32 2, i32 1
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %30, i64 0, i32 2, i32 1, i32 3
  %34 = load i8, i8* %33, align 2, !range !4
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::Length"* %32 to float*
  %38 = load float, float* %37, align 4
  br label %55

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %32, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = sitofp i32 %41 to float
  br label %55

43:                                               ; preds = %22
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %30, i64 0, i32 2, i32 0
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %30, i64 0, i32 2, i32 0, i32 3
  %46 = load i8, i8* %45, align 2, !range !4
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::Length"* %44 to float*
  %50 = load float, float* %49, align 4
  br label %55

51:                                               ; preds = %43
  %52 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %44, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = sitofp i32 %53 to float
  br label %55

55:                                               ; preds = %48, %51, %36, %39
  %56 = phi float [ %38, %36 ], [ %42, %39 ], [ %50, %48 ], [ %54, %51 ]
  %57 = fmul float %56, 6.400000e+01
  %58 = fcmp ult float %57, 0xC1E0000000000000
  %59 = fcmp ugt float %57, 0x41DFFFFFE0000000
  %60 = fcmp ogt float %57, 0xC1E0000000000000
  %61 = select i1 %60, float %57, float 0xC1E0000000000000
  %62 = fptosi float %61 to i32
  %63 = select i1 %58, i32 0, i32 2147483647
  %64 = select i1 %59, i32 %63, i32 %62
  %65 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %66 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %65)
  %67 = icmp slt i32 %66, 0
  %68 = select i1 %67, i32 -2147483648, i32 2147483647
  %69 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %64, i32 %66) #20
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 %68, i32 %71, !prof !2
  %73 = bitcast %"class.blink::LayoutBox"* %0 to void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)***
  %74 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)**, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %74, i64 164
  %76 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %75, align 8
  call void %76(%"class.blink::LayoutBox"* %0, i32 %72, i32 0, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %2) #20
  br label %84

77:                                               ; preds = %1, %18, %20
  %78 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %79 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %78)
  %80 = bitcast %"class.blink::LayoutBox"* %0 to void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)***
  %81 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)**, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %81, i64 164
  %83 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %82, align 8
  call void %83(%"class.blink::LayoutBox"* %0, i32 %79, i32 0, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %2) #20
  br label %84

84:                                               ; preds = %77, %55
  %85 = load i32, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #20
  ret i32 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox44ComputeContentAndScrollbarLogicalHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %4
  %9 = icmp eq i32 %1, 1
  %10 = select i1 %9, i32 0, i32 -64
  ret i32 %10

11:                                               ; preds = %4
  %12 = add i8 %6, -3
  %13 = icmp ult i8 %12, 5
  br i1 %13, label %14, label %37

14:                                               ; preds = %11
  %15 = icmp eq i32 %3, -64
  br i1 %15, label %61, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %18 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %17)
  %19 = tail call i32 @_ZNK5blink9LayoutBox41ComputeIntrinsicLogicalContentHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitES5_(%"class.blink::LayoutBox"* %0, i32 %1, %"class.blink::Length"* dereferenceable(8) %2, i32 %3, i32 %18)
  %20 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %0)
  %21 = extractvalue { i64, i64 } %20, 1
  %22 = trunc i64 %21 to i32
  %23 = lshr i64 %21, 32
  %24 = trunc i64 %23 to i32
  %25 = icmp slt i32 %24, 0
  %26 = select i1 %25, i32 -2147483648, i32 2147483647
  %27 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 %24) #20
  %28 = extractvalue { i32, i1 } %27, 1
  %29 = extractvalue { i32, i1 } %27, 0
  %30 = select i1 %28, i32 %26, i32 %29, !prof !2
  %31 = icmp slt i32 %30, 0
  %32 = select i1 %31, i32 -2147483648, i32 2147483647
  %33 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %30) #20
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 %32, i32 %35, !prof !2
  br label %61

37:                                               ; preds = %11
  switch i8 %6, label %61 [
    i8 2, label %38
    i8 8, label %59
    i8 1, label %59
  ]

38:                                               ; preds = %37
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 3
  %40 = load i8, i8* %39, align 2, !range !4
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::Length"* %2 to float*
  %44 = load float, float* %43, align 4
  br label %49

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = sitofp i32 %47 to float
  br label %49

49:                                               ; preds = %42, %45
  %50 = phi float [ %44, %42 ], [ %48, %45 ]
  %51 = fmul float %50, 6.400000e+01
  %52 = fcmp ult float %51, 0xC1E0000000000000
  %53 = fcmp ugt float %51, 0x41DFFFFFE0000000
  %54 = fcmp ogt float %51, 0xC1E0000000000000
  %55 = select i1 %54, float %51, float 0xC1E0000000000000
  %56 = fptosi float %55 to i32
  %57 = select i1 %52, i32 0, i32 2147483647
  %58 = select i1 %53, i32 %57, i32 %56
  br label %61

59:                                               ; preds = %37, %37
  %60 = tail call i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"* %0, %"class.blink::Length"* dereferenceable(8) %2)
  br label %61

61:                                               ; preds = %37, %14, %59, %49, %16
  %62 = phi i32 [ %36, %16 ], [ %58, %49 ], [ %60, %59 ], [ -64, %14 ], [ -64, %37 ]
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox41ComputeIntrinsicLogicalContentHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitES5_(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"* nocapture readonly dereferenceable(8), i32, i32) local_unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %8 = load i8, i8* %7, align 1
  switch i8 %8, label %101 [
    i8 3, label %9
    i8 4, label %9
    i8 5, label %9
    i8 7, label %9
    i8 6, label %40
  ]

9:                                                ; preds = %5, %5, %5, %5
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 1073741824
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %101, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %17 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %17, i64 80
  %19 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::LayoutObject"* %6) #20
  br i1 %20, label %101, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, i64 92
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* %6, i32 10) #20
  br i1 %26, label %101, label %27

27:                                               ; preds = %21
  %28 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %28, i64 92
  %30 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::LayoutObject"* %6, i32 27) #20
  br i1 %31, label %101, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %34 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %33, align 8
  %35 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %34, i64 165
  %36 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %35, align 8
  %37 = tail call i64 %36(%"class.blink::LayoutBox"* %0) #20
  %38 = lshr i64 %37, 32
  %39 = trunc i64 %38 to i32
  br label %101

40:                                               ; preds = %5
  %41 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %42 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %41 to i96*
  %43 = load i96, i96* %42, align 4
  %44 = and i96 %43, 16777216
  %45 = icmp eq i96 %44, 0
  %46 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %47 = load %"class.blink::Node"*, %"class.blink::Node"** %46, align 8
  %48 = icmp eq %"class.blink::Node"* %47, null
  br i1 %45, label %49, label %67

49:                                               ; preds = %40
  br i1 %48, label %68, label %50

50:                                               ; preds = %49
  %51 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = and i32 %52, 48
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %76

55:                                               ; preds = %50
  %56 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kMarqueeTagE, align 8
  %57 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %47, i64 1, i32 2
  %60 = bitcast %"class.blink::Member.318"* %59 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %58, i64 0, i32 3, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %63, %65
  br i1 %66, label %87, label %76

67:                                               ; preds = %40
  br i1 %48, label %68, label %76

68:                                               ; preds = %49, %67
  br label %69

69:                                               ; preds = %68, %69
  %70 = phi %"class.blink::LayoutObject"* [ %72, %69 ], [ %6, %68 ]
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %70, i64 0, i32 7
  %72 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %72, i64 0, i32 6, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %69, label %76

76:                                               ; preds = %69, %55, %50, %67
  %77 = phi %"class.blink::Node"* [ %47, %67 ], [ %47, %50 ], [ %47, %55 ], [ %74, %69 ]
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %77, i64 0, i32 3, i32 0, i32 0
  %79 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %79, i64 0, i32 2, i32 0, i32 0
  %81 = load %"class.blink::Document"*, %"class.blink::Document"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %81, i64 0, i32 2
  %83 = bitcast %"class.blink::UseCounter"* %82 to void (%"class.blink::UseCounter"*, i32)***
  %84 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %84, i64 3
  %86 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %85, align 8
  tail call void %86(%"class.blink::UseCounter"* %82, i32 2508) #20
  br label %87

87:                                               ; preds = %76, %55
  %88 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %6, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %89 = tail call i32 @_ZN5blink14LayoutBoxUtils22AvailableLogicalHeightERKNS_9LayoutBoxEPKNS_11LayoutBlockE(%"class.blink::LayoutBox"* dereferenceable(216) %0, %"class.blink::LayoutBlock"* %88) #20
  %90 = icmp eq i32 %89, -64
  br i1 %90, label %91, label %94

91:                                               ; preds = %87
  switch i32 %1, label %93 [
    i32 1, label %101
    i32 0, label %92
  ]

92:                                               ; preds = %91
  br label %101

93:                                               ; preds = %91
  br label %101

94:                                               ; preds = %87
  %95 = icmp sgt i32 %4, -1
  %96 = select i1 %95, i32 -2147483648, i32 2147483647
  %97 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %89, i32 %4) #20
  %98 = extractvalue { i32, i1 } %97, 1
  %99 = extractvalue { i32, i1 } %97, 0
  %100 = select i1 %98, i32 %96, i32 %99, !prof !2
  br label %101

101:                                              ; preds = %9, %5, %21, %92, %93, %94, %91, %15, %27, %32
  %102 = phi i32 [ %39, %32 ], [ %3, %27 ], [ %3, %15 ], [ %3, %9 ], [ 2147483647, %93 ], [ %3, %92 ], [ %100, %94 ], [ 0, %91 ], [ %3, %21 ], [ 0, %5 ]
  ret i32 %102
}

declare i32 @_ZN5blink14LayoutBoxUtils22AvailableLogicalHeightERKNS_9LayoutBoxEPKNS_11LayoutBlockE(%"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::LayoutBlock"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.blink::LayoutBlock"*, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #20
  store i8 0, i8* %3, align 1
  %5 = bitcast %"class.blink::LayoutBlock"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #20
  store %"class.blink::LayoutBlock"* null, %"class.blink::LayoutBlock"** %4, align 8
  %6 = call i32 @_ZNK5blink9LayoutBox51ContainingBlockLogicalHeightForPercentageResolutionEPPNS_11LayoutBlockEPb(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutBlock"** nonnull %4, i8* nonnull %3)
  %7 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %4, align 8
  call void @_ZN5blink11LayoutBlock26AddPercentHeightDescendantEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %7, %"class.blink::LayoutBox"* %0) #20
  %8 = icmp eq i32 %6, -64
  br i1 %8, label %76, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %11 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %1, i32 %6) #20
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %13, i64 92
  %15 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, align 8
  %16 = call zeroext i1 %15(%"class.blink::LayoutObject"* %10, i32 44) #20
  br i1 %16, label %65, label %17

17:                                               ; preds = %9
  %18 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %19 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %20 = or i8 %19, %18
  %21 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %22 = or i8 %20, %21
  %23 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %24 = or i8 %22, %23
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %76

26:                                               ; preds = %17
  %27 = bitcast %"class.blink::LayoutBlock"** %4 to %"class.blink::LayoutObject"**
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = bitcast %"class.blink::LayoutObject"* %28 to i1 (%"class.blink::LayoutObject"*, i32)***
  %30 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, i64 92
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %31, align 8
  %33 = call zeroext i1 %32(%"class.blink::LayoutObject"* %28, i32 46) #20
  %34 = load i8, i8* %3, align 1
  %35 = icmp eq i8 %34, 0
  %36 = and i1 %33, %35
  br i1 %36, label %37, label %76

37:                                               ; preds = %26
  %38 = bitcast %"class.blink::LayoutBlock"** %4 to %"class.blink::LayoutBox"**
  %39 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %39, i64 0, i32 10
  %41 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %40, align 8
  %42 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %41, null
  br i1 %42, label %47, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 4, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %55

47:                                               ; preds = %43, %37
  %48 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %39, i64 0, i32 12, i32 0, i32 0
  %49 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %48, align 8
  %50 = icmp eq %"struct.blink::LayoutBoxRareData"* %49, null
  br i1 %50, label %76, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %49, i64 0, i32 2, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, -64
  br i1 %54, label %76, label %55

55:                                               ; preds = %51, %43
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %57 = bitcast %"class.blink::ComputedStyle"** %56 to %"class.blink::ComputedStyleBase"**
  %58 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %58, i64 0, i32 5, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %60, i64 0, i32 11
  %62 = load i8, i8* %61, align 4
  %63 = and i8 %62, 2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %76, label %65

65:                                               ; preds = %55, %9
  %66 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %67 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %66)
  %68 = icmp sgt i32 %67, -1
  %69 = select i1 %68, i32 -2147483648, i32 2147483647
  %70 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %11, i32 %67) #20
  %71 = extractvalue { i32, i1 } %70, 1
  %72 = extractvalue { i32, i1 } %70, 0
  %73 = select i1 %71, i32 %69, i32 %72, !prof !2
  %74 = icmp sgt i32 %73, 0
  %75 = select i1 %74, i32 %73, i32 0
  br label %76

76:                                               ; preds = %65, %26, %47, %17, %55, %51, %2
  %77 = phi i32 [ -64, %2 ], [ %75, %65 ], [ %11, %17 ], [ %11, %26 ], [ %11, %51 ], [ %11, %55 ], [ %11, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #20
  ret i32 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox31StretchesToViewportInQuirksModeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %13

6:                                                ; preds = %1, %6
  %7 = phi %"class.blink::LayoutObject"* [ %9, %6 ], [ %2, %1 ]
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 7
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %6, label %13

13:                                               ; preds = %6, %1
  %14 = phi %"class.blink::Node"* [ %4, %1 ], [ %11, %6 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 47, i32 0, i32 0
  %20 = load %"class.blink::Element"*, %"class.blink::Element"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %20, i64 0, i32 0, i32 0
  %22 = icmp eq %"class.blink::Node"* %21, %4
  br i1 %22, label %47, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = and i96 %26, 16777216
  %28 = icmp ne i96 %27, 0
  %29 = or i1 %5, %28
  br i1 %29, label %81, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 48
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %81

35:                                               ; preds = %30
  %36 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %37 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %4, i64 1, i32 2
  %40 = bitcast %"class.blink::Member.318"* %39 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %43, %45
  br i1 %46, label %47, label %81

47:                                               ; preds = %35, %13
  %48 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %49 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %49, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8
  %53 = and i160 %52, 15211807202738752817960438464512
  %54 = icmp eq i160 %53, 0
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %49, i64 0, i32 0, i32 5, i32 0, i32 0
  %56 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %56, i64 0, i32 3
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %56, i64 0, i32 8
  %59 = select i1 %54, %"class.blink::Length"* %57, %"class.blink::Length"* %58
  %60 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %59, i64 0, i32 2
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %81

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %65 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %64 to i96*
  %66 = load i96, i96* %65, align 4
  %67 = and i96 %66, 113336795588871485128704
  %68 = icmp eq i96 %67, 75557863725914323419136
  %69 = and i96 %66, 142606336
  %70 = icmp ne i96 %69, 0
  %71 = or i1 %70, %68
  br i1 %71, label %81, label %72

72:                                               ; preds = %63
  %73 = tail call zeroext i1 @_ZNK5blink9LayoutBox41ShouldComputeLogicalHeightFromAspectRatioEv(%"class.blink::LayoutBox"* %0)
  br i1 %73, label %81, label %74

74:                                               ; preds = %72
  %75 = load i96, i96* %65, align 4
  %76 = and i96 %75, 1099511627776
  %77 = icmp eq i96 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %74
  %79 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %2) #20
  %80 = icmp eq %"class.blink::LayoutFlowThread"* %79, null
  br label %81

81:                                               ; preds = %78, %74, %23, %30, %47, %63, %72, %35
  %82 = phi i1 [ false, %35 ], [ false, %72 ], [ false, %63 ], [ false, %47 ], [ false, %30 ], [ false, %23 ], [ %80, %78 ], [ true, %74 ]
  ret i1 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9LayoutBox46SkipContainingBlockForPercentHeightCalculationEPKS0_(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %13

6:                                                ; preds = %1, %6
  %7 = phi %"class.blink::LayoutObject"* [ %9, %6 ], [ %2, %1 ]
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 7
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %6, label %13

13:                                               ; preds = %6, %1
  %14 = phi %"class.blink::Node"* [ %4, %1 ], [ %11, %6 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 33
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %23 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %22 to i96*
  %24 = load i96, i96* %23, align 4
  %25 = and i96 %24, 16777216
  %26 = icmp eq i96 %25, 0
  br i1 %26, label %52, label %27

27:                                               ; preds = %13
  br i1 %21, label %38, label %28

28:                                               ; preds = %27
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %29, align 8
  %31 = icmp eq %"class.blink::LayoutObject"* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.blink::LayoutObject"* %30 to i1 (%"class.blink::LayoutObject"*, i32)***
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, i64 92
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutObject"* nonnull %30, i32 25) #20
  br i1 %37, label %153, label %38

38:                                               ; preds = %28, %32, %27
  %39 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %40 = bitcast %"class.blink::ComputedStyle"** %39 to %"class.blink::ComputedStyleBase"**
  %41 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %41, i64 0, i32 9
  %43 = bitcast [20 x i8]* %42 to i160*
  %44 = load i160, i160* %43, align 8
  %45 = lshr i160 %44, 32
  %46 = trunc i160 %45 to i32
  %47 = and i32 %46, 31
  %48 = or i32 %47, 2
  %49 = icmp eq i32 %48, 3
  %50 = icmp eq i32 %47, 21
  %51 = or i1 %50, %49
  br label %153

52:                                               ; preds = %13
  br i1 %21, label %53, label %153

53:                                               ; preds = %52
  %54 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %55 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %55, i64 0, i32 0, i32 9
  %57 = bitcast [20 x i8]* %56 to i160*
  %58 = load i160, i160* %57, align 8
  %59 = and i160 %58, 15211807202738752817960438464512
  %60 = icmp eq i160 %59, 0
  %61 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %55, i64 0, i32 0, i32 5, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %62, i64 0, i32 3
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %62, i64 0, i32 8
  %65 = select i1 %60, %"class.blink::Length"* %63, %"class.blink::Length"* %64
  %66 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %65, i64 0, i32 2
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %153

69:                                               ; preds = %53
  %70 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %4) #20
  %71 = icmp eq %"class.blink::ShadowRoot"* %70, null
  br i1 %71, label %112, label %72

72:                                               ; preds = %69
  %73 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %4) #20
  %74 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %73, i64 0, i32 4
  %75 = load i32, i32* %74, align 8
  %76 = and i32 %75, 196608
  %77 = icmp eq i32 %76, 131072
  br i1 %77, label %78, label %112, !prof !2

78:                                               ; preds = %72
  %79 = tail call %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"* %4) #20
  %80 = icmp eq %"class.blink::Element"* %79, null
  br i1 %80, label %112, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %79, i64 0, i32 0, i32 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = and i32 %83, 48
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %112

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %79, i64 0, i32 0, i32 0
  %88 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names9kInputTagE, align 8
  %89 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %87, i64 1, i32 2
  %92 = bitcast %"class.blink::Member.318"* %91 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %93 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %93, i64 0, i32 3, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %90, i64 0, i32 3, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %95, %97
  br i1 %98, label %99, label %112

99:                                               ; preds = %86
  %100 = bitcast %"class.blink::Element"* %79 to %"class.blink::HTMLFormControlElement"*
  %101 = bitcast %"class.blink::Element"* %79 to %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)***
  %102 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*** %101, align 8
  %103 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %102, i64 171
  %104 = load %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::HTMLFormControlElement"*)** %103, align 8
  %105 = tail call dereferenceable(8) %"class.WTF::AtomicString"* %104(%"class.blink::HTMLFormControlElement"* nonnull %100) #20
  %106 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16input_type_names6kRangeE, align 8
  %107 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %105, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %106, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %108, %110
  br i1 %111, label %153, label %112

112:                                              ; preds = %86, %78, %81, %99, %69, %72
  %113 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %114 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %113, align 8
  %115 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %114, i64 92
  %116 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %115, align 8
  %117 = tail call zeroext i1 %116(%"class.blink::LayoutObject"* %2, i32 46) #20
  br i1 %117, label %153, label %118

118:                                              ; preds = %112
  %119 = load i96, i96* %23, align 4
  %120 = and i96 %119, 113336795588871485128704
  %121 = icmp eq i96 %120, 75557863725914323419136
  br i1 %121, label %153, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %124 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %123, align 8
  %125 = icmp eq %"struct.blink::LayoutBoxRareData"* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %124, i64 0, i32 3
  %128 = load i8, i8* %127, align 8
  %129 = and i8 %128, 4
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %131, label %153

131:                                              ; preds = %126, %122
  %132 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %113, align 8
  %133 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %132, i64 92
  %134 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %133, align 8
  %135 = tail call zeroext i1 %134(%"class.blink::LayoutObject"* %2, i32 10) #20
  br i1 %135, label %153, label %136

136:                                              ; preds = %131
  %137 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %113, align 8
  %138 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %137, i64 92
  %139 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %138, align 8
  %140 = tail call zeroext i1 %139(%"class.blink::LayoutObject"* %2, i32 27) #20
  br i1 %140, label %153, label %141

141:                                              ; preds = %136
  %142 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %143 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %142, align 8
  %144 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %143, i64 79
  %145 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %144, align 8
  %146 = tail call zeroext i1 %145(%"class.blink::LayoutObject"* %2) #20
  br i1 %146, label %153, label %147

147:                                              ; preds = %141
  %148 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %113, align 8
  %149 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %148, i64 92
  %150 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %149, align 8
  %151 = tail call zeroext i1 %150(%"class.blink::LayoutObject"* %2, i32 24) #20
  %152 = xor i1 %151, true
  br label %153

153:                                              ; preds = %126, %131, %99, %147, %141, %136, %118, %112, %52, %53, %32, %38
  %154 = phi i1 [ %51, %38 ], [ false, %32 ], [ false, %53 ], [ false, %52 ], [ false, %141 ], [ false, %136 ], [ false, %126 ], [ false, %118 ], [ false, %112 ], [ %152, %147 ], [ true, %99 ], [ false, %131 ]
  ret i1 %154
}

declare %"class.blink::Element"* @_ZNK5blink4Node15OwnerShadowHostEv(%"class.blink::Node"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox51ContainingBlockLogicalHeightForPercentageResolutionEPPNS_11LayoutBlockEPb(%"class.blink::LayoutBox"*, %"class.blink::LayoutBlock"**, i8*) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %5 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  br label %12

12:                                               ; preds = %178, %3
  %13 = phi i32 [ 0, %3 ], [ %179, %178 ]
  %14 = phi i1 [ false, %3 ], [ true, %178 ]
  %15 = phi %"class.blink::LayoutBox"* [ %0, %3 ], [ %35, %178 ]
  %16 = phi %"class.blink::LayoutBlock"* [ %5, %3 ], [ %180, %178 ]
  %17 = icmp eq %"class.blink::LayoutBlock"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.blink::LayoutBlock"* %16 to i1 (%"class.blink::LayoutObject"*, i32)***
  %21 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %21, i64 92
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::LayoutObject"* %19, i32 55) #20
  br i1 %24, label %181, label %25

25:                                               ; preds = %12, %18
  %26 = load i96, i96* %7, align 4
  %27 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 0, i32 0, i32 4
  %29 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %28 to i96*
  %30 = load i96, i96* %29, align 4
  %31 = xor i96 %30, %26
  %32 = trunc i96 %31 to i32
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %181, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0
  %36 = tail call zeroext i1 @_ZN5blink9LayoutBox46SkipContainingBlockForPercentHeightCalculationEPKS0_(%"class.blink::LayoutBox"* %35)
  br i1 %36, label %37, label %181

37:                                               ; preds = %34
  %38 = load i96, i96* %29, align 4
  %39 = and i96 %38, 16777216
  %40 = icmp eq i96 %39, 0
  %41 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %41, align 8
  %43 = icmp eq %"class.blink::Node"* %42, null
  br i1 %40, label %44, label %60

44:                                               ; preds = %37
  br i1 %43, label %61, label %45

45:                                               ; preds = %44
  %46 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = and i32 %47, 48
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %69

50:                                               ; preds = %45
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %52 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 1, i32 2
  %53 = bitcast %"class.blink::Member.318"* %52 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %54 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %54, i64 0, i32 3, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %56, %58
  br i1 %59, label %80, label %69

60:                                               ; preds = %37
  br i1 %43, label %61, label %69

61:                                               ; preds = %44, %60
  br label %62

62:                                               ; preds = %61, %62
  %63 = phi %"class.blink::LayoutObject"* [ %65, %62 ], [ %27, %61 ]
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %63, i64 0, i32 7
  %65 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %65, i64 0, i32 6, i32 0, i32 0
  %67 = load %"class.blink::Node"*, %"class.blink::Node"** %66, align 8
  %68 = icmp eq %"class.blink::Node"* %67, null
  br i1 %68, label %62, label %69

69:                                               ; preds = %62, %50, %45, %60
  %70 = phi %"class.blink::Node"* [ %42, %60 ], [ %42, %45 ], [ %42, %50 ], [ null, %62 ]
  %71 = phi %"class.blink::Node"* [ %42, %60 ], [ %42, %45 ], [ %42, %50 ], [ %67, %62 ]
  %72 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %71, i64 0, i32 3, i32 0, i32 0
  %73 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %73, i64 0, i32 2, i32 0, i32 0
  %75 = load %"class.blink::Document"*, %"class.blink::Document"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %75, i64 0, i32 47, i32 0, i32 0
  %77 = load %"class.blink::Element"*, %"class.blink::Element"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %77, i64 0, i32 0, i32 0
  %79 = icmp eq %"class.blink::Node"* %78, %70
  br i1 %79, label %80, label %178

80:                                               ; preds = %69, %50
  %81 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %10, align 8
  %82 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %81, null
  br i1 %82, label %83, label %178

83:                                               ; preds = %80
  %84 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %11, align 8
  %85 = icmp eq %"struct.blink::LayoutBoxRareData"* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %84, i64 0, i32 3
  %88 = load i8, i8* %87, align 8
  %89 = and i8 %88, 2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %91, label %178

91:                                               ; preds = %86, %83
  %92 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %94 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %94, i64 0, i32 0, i32 9
  %96 = bitcast [20 x i8]* %95 to i160*
  %97 = load i160, i160* %96, align 8, !noalias !270
  %98 = lshr i160 %97, 102
  %99 = trunc i160 %98 to i8
  %100 = and i8 %99, 3
  %101 = bitcast %"class.blink::LayoutBlock"* %16 to i8*
  switch i8 %100, label %102 [
    i8 0, label %111
    i8 1, label %103
  ]

102:                                              ; preds = %91
  br label %103

103:                                              ; preds = %102, %91
  %104 = phi { i64, i64 } [ { i64 1033, i64 0 }, %102 ], [ { i64 1041, i64 0 }, %91 ]
  %105 = extractvalue { i64, i64 } %104, 0
  %106 = extractvalue { i64, i64 } %104, 1
  %107 = getelementptr inbounds i8, i8* %101, i64 %106
  %108 = bitcast i8* %107 to %"class.blink::LayoutBoxModelObject"*
  %109 = and i64 %105, 1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %121, label %111

111:                                              ; preds = %103, %91
  %112 = phi %"class.blink::LayoutBoxModelObject"* [ %108, %103 ], [ %92, %91 ]
  %113 = phi i8* [ %107, %103 ], [ %101, %91 ]
  %114 = phi i64 [ %105, %103 ], [ 1017, %91 ]
  %115 = bitcast i8* %113 to i8**
  %116 = load i8*, i8** %115, align 8
  %117 = add i64 %114, -1
  %118 = getelementptr i8, i8* %116, i64 %117
  %119 = bitcast i8* %118 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %120 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %119, align 8
  br label %123

121:                                              ; preds = %103
  %122 = inttoptr i64 %105 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %123

123:                                              ; preds = %111, %121
  %124 = phi %"class.blink::LayoutBoxModelObject"* [ %112, %111 ], [ %108, %121 ]
  %125 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %120, %111 ], [ %122, %121 ]
  %126 = tail call i32 %125(%"class.blink::LayoutBoxModelObject"* %124) #20
  %127 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %93, align 8
  %128 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %127, i64 0, i32 0, i32 9
  %129 = bitcast [20 x i8]* %128 to i160*
  %130 = load i160, i160* %129, align 8, !noalias !273
  %131 = lshr i160 %130, 102
  %132 = trunc i160 %131 to i8
  %133 = and i8 %132, 3
  switch i8 %133, label %134 [
    i8 0, label %143
    i8 1, label %135
  ]

134:                                              ; preds = %123
  br label %135

135:                                              ; preds = %134, %123
  %136 = phi { i64, i64 } [ { i64 1041, i64 0 }, %134 ], [ { i64 1033, i64 0 }, %123 ]
  %137 = extractvalue { i64, i64 } %136, 0
  %138 = extractvalue { i64, i64 } %136, 1
  %139 = getelementptr inbounds i8, i8* %101, i64 %138
  %140 = bitcast i8* %139 to %"class.blink::LayoutBoxModelObject"*
  %141 = and i64 %137, 1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %153, label %143

143:                                              ; preds = %135, %123
  %144 = phi %"class.blink::LayoutBoxModelObject"* [ %140, %135 ], [ %92, %123 ]
  %145 = phi i8* [ %139, %135 ], [ %101, %123 ]
  %146 = phi i64 [ %137, %135 ], [ 1025, %123 ]
  %147 = bitcast i8* %145 to i8**
  %148 = load i8*, i8** %147, align 8
  %149 = add i64 %146, -1
  %150 = getelementptr i8, i8* %148, i64 %149
  %151 = bitcast i8* %150 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %152 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %151, align 8
  br label %155

153:                                              ; preds = %135
  %154 = inttoptr i64 %137 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %155

155:                                              ; preds = %143, %153
  %156 = phi %"class.blink::LayoutBoxModelObject"* [ %144, %143 ], [ %140, %153 ]
  %157 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %152, %143 ], [ %154, %153 ]
  %158 = tail call i32 %157(%"class.blink::LayoutBoxModelObject"* %156) #20
  %159 = icmp slt i32 %158, 0
  %160 = select i1 %159, i32 -2147483648, i32 2147483647
  %161 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %126, i32 %158) #20
  %162 = extractvalue { i32, i1 } %161, 1
  %163 = extractvalue { i32, i1 } %161, 0
  %164 = select i1 %162, i32 %160, i32 %163, !prof !2
  %165 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %92)
  %166 = icmp slt i32 %165, 0
  %167 = select i1 %166, i32 -2147483648, i32 2147483647
  %168 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %164, i32 %165) #20
  %169 = extractvalue { i32, i1 } %168, 1
  %170 = extractvalue { i32, i1 } %168, 0
  %171 = select i1 %169, i32 %167, i32 %170, !prof !2
  %172 = icmp slt i32 %171, 0
  %173 = select i1 %172, i32 -2147483648, i32 2147483647
  %174 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 %171) #20
  %175 = extractvalue { i32, i1 } %174, 1
  %176 = extractvalue { i32, i1 } %174, 0
  %177 = select i1 %175, i32 %173, i32 %176, !prof !2
  br label %178

178:                                              ; preds = %86, %80, %155, %69
  %179 = phi i32 [ %13, %86 ], [ %177, %155 ], [ %13, %69 ], [ %13, %80 ]
  %180 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %27, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  br label %12

181:                                              ; preds = %25, %18, %34
  %182 = icmp eq %"class.blink::LayoutBlock"** %1, null
  br i1 %182, label %184, label %183

183:                                              ; preds = %181
  store %"class.blink::LayoutBlock"* %16, %"class.blink::LayoutBlock"** %1, align 8
  br label %184

184:                                              ; preds = %181, %183
  %185 = icmp eq i8* %2, null
  br i1 %185, label %188, label %186

186:                                              ; preds = %184
  %187 = zext i1 %14 to i8
  store i8 %187, i8* %2, align 1
  br label %188

188:                                              ; preds = %184, %186
  %189 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %15, i64 0, i32 12, i32 0, i32 0
  %190 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %189, align 8
  %191 = icmp eq %"struct.blink::LayoutBoxRareData"* %190, null
  br i1 %191, label %200, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %190, i64 0, i32 3
  %194 = load i8, i8* %193, align 8
  %195 = and i8 %194, 4
  %196 = icmp eq i8 %195, 0
  br i1 %196, label %200, label %197

197:                                              ; preds = %192
  %198 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %190, i64 0, i32 6, i32 0
  %199 = load i32, i32* %198, align 4
  br label %457

200:                                              ; preds = %192, %188
  %201 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0
  %202 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 12, i32 0, i32 0
  %203 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %202, align 8
  %204 = icmp eq %"struct.blink::LayoutBoxRareData"* %203, null
  br i1 %204, label %213, label %205

205:                                              ; preds = %200
  %206 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %203, i64 0, i32 3
  %207 = load i8, i8* %206, align 8
  %208 = and i8 %207, 4
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %213, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %203, i64 0, i32 6, i32 0
  %212 = load i32, i32* %211, align 4
  br label %457

213:                                              ; preds = %205, %200
  %214 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %10, align 8
  %215 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %214, null
  br i1 %215, label %216, label %224

216:                                              ; preds = %213
  %217 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %11, align 8
  %218 = icmp eq %"struct.blink::LayoutBoxRareData"* %217, null
  br i1 %218, label %267, label %219

219:                                              ; preds = %216
  %220 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %217, i64 0, i32 3
  %221 = load i8, i8* %220, align 8
  %222 = and i8 %221, 1
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %245, label %224

224:                                              ; preds = %219, %213
  %225 = load i96, i96* %7, align 4
  %226 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %5, i64 0, i32 0, i32 0, i32 0, i32 4
  %227 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %226 to i96*
  %228 = load i96, i96* %227, align 4
  %229 = xor i96 %228, %225
  %230 = trunc i96 %229 to i32
  %231 = icmp slt i32 %230, 0
  br i1 %231, label %232, label %241

232:                                              ; preds = %224
  br i1 %215, label %235, label %233

233:                                              ; preds = %232
  %234 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %214, i64 0, i32 7, i32 0
  br label %238

235:                                              ; preds = %232
  %236 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %11, align 8
  %237 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %236, i64 0, i32 4, i32 0
  br label %238

238:                                              ; preds = %233, %235
  %239 = phi i32* [ %234, %233 ], [ %237, %235 ]
  %240 = load i32, i32* %239, align 4
  br label %457

241:                                              ; preds = %224
  br i1 %215, label %242, label %259

242:                                              ; preds = %241
  %243 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %11, align 8
  %244 = icmp eq %"struct.blink::LayoutBoxRareData"* %243, null
  br i1 %244, label %267, label %245

245:                                              ; preds = %219, %242
  %246 = phi %"struct.blink::LayoutBoxRareData"* [ %243, %242 ], [ %217, %219 ]
  %247 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %246, i64 0, i32 3
  %248 = load i8, i8* %247, align 8
  %249 = and i8 %248, 2
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %267, label %251

251:                                              ; preds = %245
  %252 = load i96, i96* %7, align 4
  %253 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %5, i64 0, i32 0, i32 0, i32 0, i32 4
  %254 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %253 to i96*
  %255 = load i96, i96* %254, align 4
  %256 = xor i96 %255, %252
  %257 = trunc i96 %256 to i32
  %258 = icmp slt i32 %257, 0
  br i1 %258, label %267, label %261

259:                                              ; preds = %241
  %260 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %214, i64 0, i32 8, i32 0
  br label %264

261:                                              ; preds = %251
  %262 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %11, align 8
  %263 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %262, i64 0, i32 5, i32 0
  br label %264

264:                                              ; preds = %259, %261
  %265 = phi i32* [ %260, %259 ], [ %263, %261 ]
  %266 = load i32, i32* %265, align 4
  br label %457

267:                                              ; preds = %216, %245, %242, %251
  %268 = load i96, i96* %7, align 4
  %269 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 0, i32 0, i32 4
  %271 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %270 to i96*
  %272 = load i96, i96* %271, align 4
  %273 = xor i96 %272, %268
  %274 = trunc i96 %273 to i32
  %275 = icmp slt i32 %274, 0
  br i1 %275, label %276, label %282

276:                                              ; preds = %267
  %277 = bitcast %"class.blink::LayoutBox"* %15 to i32 (%"class.blink::LayoutBox"*)***
  %278 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %277, align 8
  %279 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %278, i64 131
  %280 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %279, align 8
  %281 = tail call i32 %280(%"class.blink::LayoutBox"* %15) #20
  br label %457

282:                                              ; preds = %267
  %283 = bitcast %"class.blink::LayoutBlock"* %16 to i1 (%"class.blink::LayoutObject"*, i32)***
  %284 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %283, align 8
  %285 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %284, i64 92
  %286 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %285, align 8
  %287 = tail call zeroext i1 %286(%"class.blink::LayoutObject"* %269, i32 46) #20
  br i1 %287, label %288, label %455

288:                                              ; preds = %282
  br i1 %14, label %566, label %289

289:                                              ; preds = %288
  %290 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 10
  %291 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %290, align 8
  %292 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %291, null
  br i1 %292, label %297, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %291, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %295 = load i8, i8* %294, align 4, !range !4
  %296 = icmp eq i8 %295, 0
  br i1 %296, label %297, label %423

297:                                              ; preds = %293, %289
  %298 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %202, align 8
  %299 = icmp eq %"struct.blink::LayoutBoxRareData"* %298, null
  br i1 %299, label %304, label %300

300:                                              ; preds = %297
  %301 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %298, i64 0, i32 2, i32 0
  %302 = load i32, i32* %301, align 4
  %303 = icmp eq i32 %302, -64
  br i1 %303, label %304, label %416

304:                                              ; preds = %300, %297
  br i1 %17, label %311, label %305

305:                                              ; preds = %304
  %306 = bitcast %"class.blink::LayoutBlock"* %16 to %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)***
  %307 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*** %306, align 8
  %308 = getelementptr inbounds %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %307, i64 32
  %309 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %308, align 8
  %310 = tail call %"class.blink::LayoutNGTableCellInterface"* %309(%"class.blink::LayoutObject"* %269) #20
  br label %311

311:                                              ; preds = %304, %305
  %312 = phi %"class.blink::LayoutNGTableCellInterface"* [ %310, %305 ], [ null, %304 ]
  %313 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %314 = bitcast %"class.blink::ComputedStyle"** %313 to %"class.blink::ComputedStyleBase"**
  %315 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %314, align 8
  %316 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %315, i64 0, i32 9
  %317 = bitcast [20 x i8]* %316 to i160*
  %318 = load i160, i160* %317, align 8
  %319 = lshr i160 %318, 77
  %320 = trunc i160 %319 to i32
  %321 = and i32 %320, 7
  switch i32 %321, label %322 [
    i32 2, label %415
    i32 0, label %415
  ]

322:                                              ; preds = %311
  %323 = load i96, i96* %7, align 4
  %324 = and i96 %323, 1073741824
  %325 = icmp eq i96 %324, 0
  br i1 %325, label %326, label %415

326:                                              ; preds = %322
  %327 = and i96 %323, 16777216
  %328 = icmp eq i96 %327, 0
  br i1 %328, label %329, label %374

329:                                              ; preds = %326
  %330 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %331 = load %"class.blink::Node"*, %"class.blink::Node"** %330, align 8
  %332 = icmp eq %"class.blink::Node"* %331, null
  br i1 %332, label %374, label %333

333:                                              ; preds = %329
  %334 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %331, i64 0, i32 1
  %335 = load i32, i32* %334, align 8
  %336 = and i32 %335, 12
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %374

338:                                              ; preds = %333
  %339 = bitcast %"class.blink::Node"* %331 to %"class.blink::Element"*
  %340 = bitcast %"class.blink::Node"* %331 to i1 (%"class.blink::Element"*)***
  %341 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %340, align 8
  %342 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %341, i64 124
  %343 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %342, align 8
  %344 = tail call zeroext i1 %343(%"class.blink::Element"* nonnull %339) #20
  %345 = load i32, i32* %334, align 8
  %346 = and i32 %345, 48
  %347 = icmp eq i32 %346, 0
  br i1 %344, label %348, label %349

348:                                              ; preds = %338
  br i1 %347, label %362, label %415

349:                                              ; preds = %338
  br i1 %347, label %350, label %374

350:                                              ; preds = %349
  %351 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %352 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %351, i64 0, i32 0, i32 0, i32 0
  %353 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %352, align 8
  %354 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %331, i64 1, i32 2
  %355 = bitcast %"class.blink::Member.318"* %354 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %356 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %355, align 8
  %357 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %356, i64 0, i32 3, i32 0, i32 0, i32 0
  %358 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %357, align 8
  %359 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %353, i64 0, i32 3, i32 0, i32 0, i32 0
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %359, align 8
  %361 = icmp eq %"class.WTF::StringImpl"* %358, %360
  br i1 %361, label %415, label %374

362:                                              ; preds = %348
  %363 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE, align 8
  %364 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %363, i64 0, i32 0, i32 0, i32 0
  %365 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %364, align 8
  %366 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %331, i64 1, i32 2
  %367 = bitcast %"class.blink::Member.318"* %366 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %368 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %367, align 8
  %369 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %368, i64 0, i32 3, i32 0, i32 0, i32 0
  %370 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %369, align 8
  %371 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %365, i64 0, i32 3, i32 0, i32 0, i32 0
  %372 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %371, align 8
  %373 = icmp eq %"class.WTF::StringImpl"* %370, %372
  br i1 %373, label %374, label %415

374:                                              ; preds = %362, %326, %329, %333, %349, %350
  %375 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %376 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %375, align 8
  %377 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %376, i64 0, i32 0, i32 9
  %378 = bitcast [20 x i8]* %377 to i160*
  %379 = load i160, i160* %378, align 8
  %380 = and i160 %379, 15211807202738752817960438464512
  %381 = icmp eq i160 %380, 0
  %382 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %376, i64 0, i32 0, i32 5, i32 0, i32 0
  %383 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %382, align 8
  %384 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %383, i64 0, i32 3
  %385 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %383, i64 0, i32 8
  %386 = select i1 %381, %"class.blink::Length"* %384, %"class.blink::Length"* %385
  %387 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %386, i64 0, i32 2
  %388 = load i8, i8* %387, align 1
  %389 = icmp eq i8 %388, 0
  br i1 %389, label %390, label %566

390:                                              ; preds = %374
  %391 = bitcast %"class.blink::LayoutNGTableCellInterface"* %312 to %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)***
  %392 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*** %391, align 8
  %393 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %392, i64 3
  %394 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutNGTableCellInterface"*)** %393, align 8
  %395 = tail call %"class.blink::LayoutNGTableInterface"* %394(%"class.blink::LayoutNGTableCellInterface"* %312) #20
  %396 = bitcast %"class.blink::LayoutNGTableInterface"* %395 to %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableInterface"*)***
  %397 = load %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableInterface"*)**, %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableInterface"*)*** %396, align 8
  %398 = load %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableInterface"*)*, %"class.blink::LayoutObject"* (%"class.blink::LayoutNGTableInterface"*)** %397, align 8
  %399 = tail call %"class.blink::LayoutObject"* %398(%"class.blink::LayoutNGTableInterface"* %395) #20
  %400 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %399, i64 0, i32 5, i32 0
  %401 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %400, align 8
  %402 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %401, i64 0, i32 0, i32 9
  %403 = bitcast [20 x i8]* %402 to i160*
  %404 = load i160, i160* %403, align 8
  %405 = and i160 %404, 15211807202738752817960438464512
  %406 = icmp eq i160 %405, 0
  %407 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %401, i64 0, i32 0, i32 5, i32 0, i32 0
  %408 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %407, align 8
  %409 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %408, i64 0, i32 3
  %410 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %408, i64 0, i32 8
  %411 = select i1 %406, %"class.blink::Length"* %409, %"class.blink::Length"* %410
  %412 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %411, i64 0, i32 2
  %413 = load i8, i8* %412, align 1
  %414 = icmp eq i8 %413, 0
  br i1 %414, label %415, label %566

415:                                              ; preds = %362, %311, %311, %348, %322, %350, %390
  br label %566

416:                                              ; preds = %300
  br i1 %292, label %425, label %417

417:                                              ; preds = %416
  %418 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %291, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %419 = load i8, i8* %418, align 4, !range !4
  %420 = icmp eq i8 %419, 0
  br i1 %420, label %421, label %423

421:                                              ; preds = %417
  %422 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %202, align 8
  br label %425

423:                                              ; preds = %293, %417
  %424 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %291, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %428

425:                                              ; preds = %421, %416
  %426 = phi %"struct.blink::LayoutBoxRareData"* [ %422, %421 ], [ %298, %416 ]
  %427 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %426, i64 0, i32 2, i32 0
  br label %428

428:                                              ; preds = %423, %425
  %429 = phi i32* [ %424, %423 ], [ %427, %425 ]
  %430 = load i32, i32* %429, align 4
  %431 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 0
  %432 = tail call i32 @_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %431)
  %433 = icmp sgt i32 %432, -1
  %434 = select i1 %433, i32 -2147483648, i32 2147483647
  %435 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %430, i32 %432) #20
  %436 = extractvalue { i32, i1 } %435, 1
  %437 = extractvalue { i32, i1 } %435, 0
  %438 = select i1 %436, i32 %434, i32 %437, !prof !2
  %439 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %201)
  %440 = extractvalue { i64, i64 } %439, 1
  %441 = trunc i64 %440 to i32
  %442 = lshr i64 %440, 32
  %443 = trunc i64 %442 to i32
  %444 = icmp slt i32 %443, 0
  %445 = select i1 %444, i32 -2147483648, i32 2147483647
  %446 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %441, i32 %443) #20
  %447 = extractvalue { i32, i1 } %446, 1
  %448 = extractvalue { i32, i1 } %446, 0
  %449 = select i1 %447, i32 %445, i32 %448, !prof !2
  %450 = icmp sgt i32 %449, -1
  %451 = select i1 %450, i32 -2147483648, i32 2147483647
  %452 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %438, i32 %449) #20
  %453 = extractvalue { i32, i1 } %452, 1
  %454 = extractvalue { i32, i1 } %452, 0
  br i1 %453, label %460, label %457

455:                                              ; preds = %282
  %456 = tail call i32 @_ZNK5blink11LayoutBlock46AvailableLogicalHeightForPercentageComputationEv(%"class.blink::LayoutBlock"* %16) #20
  br label %457

457:                                              ; preds = %428, %210, %264, %455, %276, %238, %197
  %458 = phi i32 [ %199, %197 ], [ %212, %210 ], [ %240, %238 ], [ %281, %276 ], [ %454, %428 ], [ %456, %455 ], [ %266, %264 ]
  %459 = icmp eq i32 %458, -64
  br i1 %459, label %566, label %460

460:                                              ; preds = %428, %457
  %461 = phi i32 [ %458, %457 ], [ %451, %428 ]
  %462 = icmp sgt i32 %13, -1
  %463 = select i1 %462, i32 -2147483648, i32 2147483647
  %464 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %461, i32 %13) #20
  %465 = extractvalue { i32, i1 } %464, 1
  %466 = extractvalue { i32, i1 } %464, 0
  %467 = select i1 %465, i32 %463, i32 %466, !prof !2
  %468 = icmp sgt i32 %467, 0
  %469 = select i1 %468, i32 %467, i32 0
  %470 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %471 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %470, align 8
  %472 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %471, i64 92
  %473 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %472, align 8
  %474 = tail call zeroext i1 %473(%"class.blink::LayoutObject"* %4, i32 44) #20
  br i1 %474, label %475, label %566

475:                                              ; preds = %460
  %476 = load i96, i96* %7, align 4
  %477 = and i96 %476, 113336795588871485128704
  %478 = icmp eq i96 %477, 75557863725914323419136
  br i1 %478, label %479, label %566

479:                                              ; preds = %475
  %480 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 0, i32 0
  %481 = bitcast %"class.blink::LayoutBlock"* %16 to i1 (%"class.blink::LayoutObject"*)***
  %482 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %481, align 8
  %483 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %482, i64 28
  %484 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %483, align 8
  %485 = tail call zeroext i1 %484(%"class.blink::LayoutObject"* %480) #20
  br i1 %485, label %566, label %486

486:                                              ; preds = %479
  %487 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 0
  %488 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %16, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %489 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %488, align 8, !noalias !276
  %490 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %489, i64 0, i32 0, i32 9
  %491 = bitcast [20 x i8]* %490 to i160*
  %492 = load i160, i160* %491, align 8, !noalias !276
  %493 = lshr i160 %492, 102
  %494 = trunc i160 %493 to i8
  %495 = and i8 %494, 3
  %496 = bitcast %"class.blink::LayoutBlock"* %16 to i8*
  switch i8 %495, label %497 [
    i8 0, label %506
    i8 1, label %498
  ]

497:                                              ; preds = %486
  br label %498

498:                                              ; preds = %497, %486
  %499 = phi { i64, i64 } [ { i64 961, i64 0 }, %497 ], [ { i64 969, i64 0 }, %486 ]
  %500 = extractvalue { i64, i64 } %499, 0
  %501 = extractvalue { i64, i64 } %499, 1
  %502 = getelementptr inbounds i8, i8* %496, i64 %501
  %503 = bitcast i8* %502 to %"class.blink::LayoutBoxModelObject"*
  %504 = and i64 %500, 1
  %505 = icmp eq i64 %504, 0
  br i1 %505, label %516, label %506

506:                                              ; preds = %498, %486
  %507 = phi %"class.blink::LayoutBoxModelObject"* [ %503, %498 ], [ %487, %486 ]
  %508 = phi i8* [ %502, %498 ], [ %496, %486 ]
  %509 = phi i64 [ %500, %498 ], [ 945, %486 ]
  %510 = bitcast i8* %508 to i8**
  %511 = load i8*, i8** %510, align 8
  %512 = add i64 %509, -1
  %513 = getelementptr i8, i8* %511, i64 %512
  %514 = bitcast i8* %513 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %515 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %514, align 8
  br label %518

516:                                              ; preds = %498
  %517 = inttoptr i64 %500 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %518

518:                                              ; preds = %516, %506
  %519 = phi %"class.blink::LayoutBoxModelObject"* [ %507, %506 ], [ %503, %516 ]
  %520 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %515, %506 ], [ %517, %516 ]
  %521 = tail call i32 %520(%"class.blink::LayoutBoxModelObject"* %519) #20
  %522 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %488, align 8, !noalias !279
  %523 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %522, i64 0, i32 0, i32 9
  %524 = bitcast [20 x i8]* %523 to i160*
  %525 = load i160, i160* %524, align 8, !noalias !279
  %526 = lshr i160 %525, 102
  %527 = trunc i160 %526 to i8
  %528 = and i8 %527, 3
  switch i8 %528, label %529 [
    i8 0, label %538
    i8 1, label %530
  ]

529:                                              ; preds = %518
  br label %530

530:                                              ; preds = %529, %518
  %531 = phi { i64, i64 } [ { i64 969, i64 0 }, %529 ], [ { i64 961, i64 0 }, %518 ]
  %532 = extractvalue { i64, i64 } %531, 0
  %533 = extractvalue { i64, i64 } %531, 1
  %534 = getelementptr inbounds i8, i8* %496, i64 %533
  %535 = bitcast i8* %534 to %"class.blink::LayoutBoxModelObject"*
  %536 = and i64 %532, 1
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %548, label %538

538:                                              ; preds = %530, %518
  %539 = phi %"class.blink::LayoutBoxModelObject"* [ %535, %530 ], [ %487, %518 ]
  %540 = phi i8* [ %534, %530 ], [ %496, %518 ]
  %541 = phi i64 [ %532, %530 ], [ 953, %518 ]
  %542 = bitcast i8* %540 to i8**
  %543 = load i8*, i8** %542, align 8
  %544 = add i64 %541, -1
  %545 = getelementptr i8, i8* %543, i64 %544
  %546 = bitcast i8* %545 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %547 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %546, align 8
  br label %550

548:                                              ; preds = %530
  %549 = inttoptr i64 %532 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %550

550:                                              ; preds = %538, %548
  %551 = phi %"class.blink::LayoutBoxModelObject"* [ %539, %538 ], [ %535, %548 ]
  %552 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %547, %538 ], [ %549, %548 ]
  %553 = tail call i32 %552(%"class.blink::LayoutBoxModelObject"* %551) #20
  %554 = icmp slt i32 %553, 0
  %555 = select i1 %554, i32 -2147483648, i32 2147483647
  %556 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %521, i32 %553) #20
  %557 = extractvalue { i32, i1 } %556, 1
  %558 = extractvalue { i32, i1 } %556, 0
  %559 = select i1 %557, i32 %555, i32 %558, !prof !2
  %560 = icmp slt i32 %559, 0
  %561 = select i1 %560, i32 -2147483648, i32 2147483647
  %562 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %469, i32 %559) #20
  %563 = extractvalue { i32, i1 } %562, 1
  %564 = extractvalue { i32, i1 } %562, 0
  %565 = select i1 %563, i32 %561, i32 %564, !prof !2
  br label %566

566:                                              ; preds = %288, %460, %475, %479, %550, %457, %374, %390, %415
  %567 = phi i32 [ -64, %415 ], [ 0, %390 ], [ 0, %374 ], [ -64, %457 ], [ %469, %479 ], [ %565, %550 ], [ %469, %475 ], [ %469, %460 ], [ -64, %288 ]
  ret i32 %567
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox28ShouldBeConsideredAsReplacedEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1073741824
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %7, label %55

7:                                                ; preds = %1
  %8 = and i96 %4, 16777216
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %10, label %55

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %55, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 12
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %55

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::Node"* %12 to %"class.blink::Element"*
  %21 = bitcast %"class.blink::Node"* %12 to i1 (%"class.blink::Element"*)***
  %22 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %22, i64 124
  %24 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::Element"* nonnull %20) #20
  %26 = load i32, i32* %15, align 8
  %27 = and i32 %26, 48
  %28 = icmp eq i32 %27, 0
  br i1 %25, label %29, label %42

29:                                               ; preds = %19
  br i1 %28, label %30, label %55

30:                                               ; preds = %29
  %31 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE, align 8
  %32 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 1, i32 2
  %35 = bitcast %"class.blink::Member.318"* %34 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp ne %"class.WTF::StringImpl"* %38, %40
  br label %55

42:                                               ; preds = %19
  br i1 %28, label %43, label %55

43:                                               ; preds = %42
  %44 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %45 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 1, i32 2
  %48 = bitcast %"class.blink::Member.318"* %47 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %49 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %46, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %51, %53
  br label %55

55:                                               ; preds = %30, %29, %14, %1, %7, %10, %43, %42
  %56 = phi i1 [ true, %1 ], [ %54, %43 ], [ false, %42 ], [ false, %14 ], [ false, %10 ], [ false, %7 ], [ %41, %30 ], [ true, %29 ]
  ret i1 %56
}

declare i32 @_ZNK5blink11LayoutBlock46AvailableLogicalHeightForPercentageComputationEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #5

declare void @_ZN5blink11LayoutBlock26AddPercentHeightDescendantEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"*, i32) unnamed_addr #4 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::Length"*
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 0
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 5, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %13, i64 0, i32 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %13, i64 0, i32 3
  %16 = select i1 %11, %"class.blink::Length"* %14, %"class.blink::Length"* %15
  %17 = bitcast %"class.blink::Length"* %16 to i64*
  %18 = load i64, i64* %17, align 4
  store i64 %18, i64* %3, align 8
  %19 = and i64 %18, 280375465082880
  %20 = icmp eq i64 %19, 8796093022208
  br i1 %20, label %21, label %22

21:                                               ; preds = %2
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #20
  br label %22

22:                                               ; preds = %2, %21
  %23 = call i32 @_ZNK5blink9LayoutBox32ComputeReplacedLogicalWidthUsingENS_8SizeTypeENS_6LengthE(%"class.blink::LayoutBox"* %0, i32 0, %"class.blink::Length"* nonnull %4)
  %24 = call i32 @_ZNK5blink9LayoutBox48ComputeReplacedLogicalWidthRespectingMinMaxWidthENS_10LayoutUnitENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"* %0, i32 %23, i32 %1)
  %25 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %29

28:                                               ; preds = %22
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #20
  br label %29

29:                                               ; preds = %22, %28
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox48ComputeReplacedLogicalWidthRespectingMinMaxWidthENS_10LayoutUnitENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.blink::Length"*
  %9 = icmp eq i32 %2, 1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  br i1 %9, label %19, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %16, align 8
  %18 = and i160 %14, 15211807202738752817960438464512
  br label %31

19:                                               ; preds = %3
  %20 = and i160 %14, 15211807202738752817960438464512
  %21 = icmp eq i160 %20, 0
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %23, i64 0, i32 7
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %23, i64 0, i32 6
  %26 = select i1 %21, %"class.blink::Length"* %24, %"class.blink::Length"* %25
  %27 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %26, i64 0, i32 2
  %28 = load i8, i8* %27, align 1
  switch i8 %28, label %31 [
    i8 8, label %29
    i8 1, label %29
  ]

29:                                               ; preds = %19, %19
  %30 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30)
  store i32 -1431655766, i32* %6, align 4
  br label %59

31:                                               ; preds = %15, %19
  %32 = phi i160 [ %18, %15 ], [ %20, %19 ]
  %33 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %17, %15 ], [ %23, %19 ]
  %34 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %35 = icmp eq i160 %32, 0
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %33, i64 0, i32 7
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %33, i64 0, i32 6
  %38 = select i1 %35, %"class.blink::Length"* %36, %"class.blink::Length"* %37
  %39 = bitcast %"class.blink::Length"* %38 to i64*
  %40 = load i64, i64* %39, align 4
  store i64 %40, i64* %4, align 8
  %41 = and i64 %40, 280375465082880
  %42 = icmp eq i64 %41, 8796093022208
  br i1 %42, label %43, label %44

43:                                               ; preds = %31
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #20
  br label %44

44:                                               ; preds = %31, %43
  %45 = call i32 @_ZNK5blink9LayoutBox32ComputeReplacedLogicalWidthUsingENS_8SizeTypeENS_6LengthE(%"class.blink::LayoutBox"* %0, i32 1, %"class.blink::Length"* nonnull %5)
  %46 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 8
  br i1 %48, label %49, label %50

49:                                               ; preds = %44
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #20
  br label %50

50:                                               ; preds = %49, %44
  %51 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %51)
  store i32 -1431655766, i32* %6, align 4
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 5, i32 0, i32 0
  %57 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %56, align 8
  %58 = and i160 %55, 15211807202738752817960438464512
  br i1 %9, label %59, label %70

59:                                               ; preds = %50, %29
  %60 = phi i160 [ %20, %29 ], [ %58, %50 ]
  %61 = phi i32 [ %1, %29 ], [ %45, %50 ]
  %62 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %23, %29 ], [ %57, %50 ]
  %63 = phi i8* [ %30, %29 ], [ %51, %50 ]
  %64 = icmp eq i160 %60, 0
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %62, i64 0, i32 5
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %62, i64 0, i32 4
  %67 = select i1 %64, %"class.blink::Length"* %65, %"class.blink::Length"* %66
  %68 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %67, i64 0, i32 2
  %69 = load i8, i8* %68, align 1
  switch i8 %69, label %70 [
    i8 8, label %82
    i8 1, label %82
  ]

70:                                               ; preds = %50, %59
  %71 = phi i160 [ %60, %59 ], [ %58, %50 ]
  %72 = phi i32 [ %61, %59 ], [ %45, %50 ]
  %73 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %62, %59 ], [ %57, %50 ]
  %74 = phi i8* [ %63, %59 ], [ %51, %50 ]
  %75 = icmp eq i160 %71, 0
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %73, i64 0, i32 5
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %73, i64 0, i32 4
  %78 = select i1 %75, %"class.blink::Length"* %76, %"class.blink::Length"* %77
  %79 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %78, i64 0, i32 2
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, 12
  br i1 %81, label %82, label %85

82:                                               ; preds = %59, %59, %70
  %83 = phi i32 [ %72, %70 ], [ %61, %59 ], [ %61, %59 ]
  %84 = phi i8* [ %74, %70 ], [ %63, %59 ], [ %63, %59 ]
  store i32 %1, i32* %6, align 4
  br label %97

85:                                               ; preds = %70
  %86 = bitcast %"class.blink::Length"* %78 to i64*
  %87 = load i64, i64* %86, align 4
  store i64 %87, i64* %7, align 8
  %88 = and i64 %87, 280375465082880
  %89 = icmp eq i64 %88, 8796093022208
  br i1 %89, label %90, label %91

90:                                               ; preds = %85
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #20
  br label %91

91:                                               ; preds = %85, %90
  %92 = call i32 @_ZNK5blink9LayoutBox32ComputeReplacedLogicalWidthUsingENS_8SizeTypeENS_6LengthE(%"class.blink::LayoutBox"* %0, i32 2, %"class.blink::Length"* nonnull %8)
  store i32 %92, i32* %6, align 4
  %93 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %97

96:                                               ; preds = %91
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #20
  br label %97

97:                                               ; preds = %96, %91, %82
  %98 = phi i32 [ %83, %82 ], [ %72, %91 ], [ %72, %96 ]
  %99 = phi i32 [ %1, %82 ], [ %92, %91 ], [ %92, %96 ]
  %100 = phi i8* [ %84, %82 ], [ %74, %91 ], [ %74, %96 ]
  %101 = icmp slt i32 %99, %1
  %102 = select i1 %101, i32 %99, i32 %1
  %103 = icmp slt i32 %98, %102
  %104 = select i1 %103, i32 %102, i32 %98
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100)
  ret i32 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox32ComputeReplacedLogicalWidthUsingENS_8SizeTypeENS_6LengthE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"*) local_unnamed_addr #4 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  switch i32 %1, label %7 [
    i32 1, label %10
    i32 0, label %35
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  br label %57

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %57

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %16 = bitcast %"class.blink::ComputedStyle"** %15 to %"class.blink::ComputedStyleBase"**
  %17 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %17, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %19, i64 0, i32 11
  %21 = load i8, i8* %20, align 4
  %22 = and i8 %21, 2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %249

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %26 = tail call i32 @_ZNK5blink20LayoutBoxModelObject40CollapsedBorderAndCSSPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %25) #20
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %26) #20
  %30 = extractvalue { i32, i1 } %29, 1
  %31 = extractvalue { i32, i1 } %29, 0
  %32 = select i1 %30, i32 %28, i32 %31, !prof !2
  %33 = icmp sgt i32 %32, 0
  %34 = select i1 %33, i32 %32, i32 0
  ret i32 %34

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %57

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %41 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %40, align 8
  %42 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %41, null
  br i1 %42, label %233, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %41, i64 0, i32 4
  %45 = load i8, i8* %44, align 1, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %233, label %47

47:                                               ; preds = %43
  %48 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #20
  %49 = bitcast i64* %4 to i32*
  store i32 0, i32* %49, align 8, !alias.scope !282
  %50 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 1
  store i8 0, i8* %50, align 4, !alias.scope !282
  %51 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  store i8 6, i8* %51, align 1, !alias.scope !282
  %52 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 3
  store i8 0, i8* %52, align 2, !alias.scope !282
  %53 = bitcast %"class.blink::Length"* %2 to i64*
  %54 = load i64, i64* %4, align 8
  store i64 %54, i64* %53, align 4
  %55 = lshr i64 %54, 40
  %56 = trunc i64 %55 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #20
  br label %57

57:                                               ; preds = %7, %10, %47, %35
  %58 = phi i8 [ %9, %7 ], [ %12, %10 ], [ %56, %47 ], [ %37, %35 ]
  %59 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  switch i8 %58, label %249 [
    i8 2, label %60
    i8 3, label %103
    i8 4, label %103
    i8 5, label %103
    i8 7, label %113
    i8 6, label %113
    i8 1, label %113
    i8 8, label %113
    i8 0, label %233
    i8 12, label %233
  ]

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 3
  %62 = load i8, i8* %61, align 2, !range !4
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = bitcast %"class.blink::Length"* %2 to float*
  %66 = load float, float* %65, align 4
  br label %71

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = sitofp i32 %69 to float
  br label %71

71:                                               ; preds = %64, %67
  %72 = phi float [ %66, %64 ], [ %70, %67 ]
  %73 = fmul float %72, 6.400000e+01
  %74 = fcmp ult float %73, 0xC1E0000000000000
  %75 = fcmp ugt float %73, 0x41DFFFFFE0000000
  %76 = fcmp ogt float %73, 0xC1E0000000000000
  %77 = select i1 %76, float %73, float 0xC1E0000000000000
  %78 = fptosi float %77 to i32
  %79 = select i1 %74, i32 0, i32 2147483647
  %80 = select i1 %75, i32 %79, i32 %78
  %81 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %82 = bitcast %"class.blink::ComputedStyle"** %81 to %"class.blink::ComputedStyleBase"**
  %83 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %83, i64 0, i32 5, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %85, i64 0, i32 11
  %87 = load i8, i8* %86, align 4
  %88 = and i8 %87, 2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %99

90:                                               ; preds = %71
  %91 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %92 = call i32 @_ZNK5blink20LayoutBoxModelObject40CollapsedBorderAndCSSPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %91) #20
  %93 = icmp sgt i32 %92, -1
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %80, i32 %92) #20
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !2
  br label %99

99:                                               ; preds = %71, %90
  %100 = phi i32 [ %98, %90 ], [ %80, %71 ]
  %101 = icmp sgt i32 %100, 0
  %102 = select i1 %101, i32 %100, i32 0
  br label %249

103:                                              ; preds = %57, %57, %57
  %104 = call i32 @_ZNK5blink9LayoutBox33ComputeIntrinsicLogicalWidthUsingERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, %"class.blink::Length"* dereferenceable(8) %2, i32 0)
  %105 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %106 = call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %105)
  %107 = icmp sgt i32 %106, -1
  %108 = select i1 %107, i32 -2147483648, i32 2147483647
  %109 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %104, i32 %106) #20
  %110 = extractvalue { i32, i1 } %109, 1
  %111 = extractvalue { i32, i1 } %109, 0
  %112 = select i1 %110, i32 %108, i32 %111, !prof !2
  br label %249

113:                                              ; preds = %57, %57, %57, %57
  %114 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %115 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %114 to i96*
  %116 = load i96, i96* %115, align 4
  %117 = and i96 %116, 113336795588871485128704
  %118 = icmp eq i96 %117, 75557863725914323419136
  br i1 %118, label %119, label %123

119:                                              ; preds = %113
  %120 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %6, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %121 = bitcast %"class.blink::LayoutObject"* %120 to %"class.blink::LayoutBoxModelObject"*
  %122 = call i32 @_ZNK5blink9LayoutBox40ContainingBlockLogicalWidthForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutBoxModelObject"* %121, i1 zeroext true)
  br label %139

123:                                              ; preds = %113
  %124 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %6, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %125 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %124, i64 0, i32 0, i32 0, i32 0, i32 4
  %126 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %125 to i96*
  %127 = load i96, i96* %126, align 4
  %128 = xor i96 %127, %116
  %129 = trunc i96 %128 to i32
  %130 = icmp slt i32 %129, 0
  br i1 %130, label %137, label %131

131:                                              ; preds = %123
  %132 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %133 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %132, align 8
  %134 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %133, i64 131
  %135 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %134, align 8
  %136 = call i32 %135(%"class.blink::LayoutBox"* %0) #20
  br label %139

137:                                              ; preds = %123
  %138 = call i32 @_ZNK5blink9LayoutBox41PerpendicularContainingBlockLogicalHeightEv(%"class.blink::LayoutBox"* %0)
  br label %139

139:                                              ; preds = %131, %137, %119
  %140 = phi i32 [ %122, %119 ], [ %136, %131 ], [ %138, %137 ]
  %141 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %6, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %142 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %141, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %143 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %143, i64 0, i32 0, i32 9
  %145 = bitcast [20 x i8]* %144 to i160*
  %146 = load i160, i160* %145, align 8
  %147 = and i160 %146, 15211807202738752817960438464512
  %148 = icmp eq i160 %147, 0
  %149 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %143, i64 0, i32 0, i32 5, i32 0, i32 0
  %150 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %150, i64 0, i32 8
  %152 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %150, i64 0, i32 3
  %153 = select i1 %148, %"class.blink::Length"* %151, %"class.blink::Length"* %152
  %154 = load i8, i8* %59, align 1
  %155 = add i8 %154, -3
  %156 = icmp ult i8 %155, 5
  br i1 %156, label %157, label %167

157:                                              ; preds = %139
  %158 = call i32 @_ZNK5blink9LayoutBox33ComputeIntrinsicLogicalWidthUsingERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, %"class.blink::Length"* dereferenceable(8) %2, i32 %140)
  %159 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %160 = call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %159)
  %161 = icmp sgt i32 %160, -1
  %162 = select i1 %161, i32 -2147483648, i32 2147483647
  %163 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %158, i32 %160) #20
  %164 = extractvalue { i32, i1 } %163, 1
  %165 = extractvalue { i32, i1 } %163, 0
  %166 = select i1 %164, i32 %162, i32 %165, !prof !2
  br label %249

167:                                              ; preds = %139
  %168 = icmp sgt i32 %140, 0
  br i1 %168, label %174, label %169

169:                                              ; preds = %167
  %170 = icmp eq i32 %140, 0
  br i1 %170, label %171, label %249

171:                                              ; preds = %169
  %172 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %153, i64 0, i32 2
  %173 = load i8, i8* %172, align 1
  switch i8 %173, label %249 [
    i8 2, label %174
    i8 8, label %174
    i8 1, label %174
  ]

174:                                              ; preds = %171, %171, %171, %167
  %175 = icmp eq i8 %154, 2
  br i1 %175, label %176, label %197, !prof !3

176:                                              ; preds = %174
  %177 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 3
  %178 = load i8, i8* %177, align 2, !range !4
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %183, label %180

180:                                              ; preds = %176
  %181 = bitcast %"class.blink::Length"* %2 to float*
  %182 = load float, float* %181, align 4
  br label %187

183:                                              ; preds = %176
  %184 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = sitofp i32 %185 to float
  br label %187

187:                                              ; preds = %183, %180
  %188 = phi float [ %182, %180 ], [ %186, %183 ]
  %189 = fmul float %188, 6.400000e+01
  %190 = fcmp ult float %189, 0xC1E0000000000000
  %191 = fcmp ugt float %189, 0x41DFFFFFE0000000
  %192 = fcmp ogt float %189, 0xC1E0000000000000
  %193 = select i1 %192, float %189, float 0xC1E0000000000000
  %194 = fptosi float %193 to i32
  %195 = select i1 %190, i32 0, i32 2147483647
  %196 = select i1 %191, i32 %195, i32 %194
  br label %199

197:                                              ; preds = %174
  %198 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %2, i32 %140) #20
  br label %199

199:                                              ; preds = %187, %197
  %200 = phi i32 [ %196, %187 ], [ %198, %197 ]
  %201 = sitofp i32 %200 to float
  %202 = fmul float %201, 1.562500e-02
  %203 = fmul float %202, 6.400000e+01
  %204 = fcmp ult float %203, 0xC1E0000000000000
  %205 = fcmp ugt float %203, 0x41DFFFFFE0000000
  %206 = fcmp ogt float %203, 0xC1E0000000000000
  %207 = select i1 %206, float %203, float 0xC1E0000000000000
  %208 = fptosi float %207 to i32
  %209 = select i1 %204, i32 0, i32 2147483647
  %210 = select i1 %205, i32 %209, i32 %208
  %211 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %212 = bitcast %"class.blink::ComputedStyle"** %211 to %"class.blink::ComputedStyleBase"**
  %213 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %212, align 8
  %214 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %213, i64 0, i32 5, i32 0, i32 0
  %215 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %214, align 8
  %216 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %215, i64 0, i32 11
  %217 = load i8, i8* %216, align 4
  %218 = and i8 %217, 2
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %220, label %229

220:                                              ; preds = %199
  %221 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %222 = call i32 @_ZNK5blink20LayoutBoxModelObject40CollapsedBorderAndCSSPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %221) #20
  %223 = icmp sgt i32 %222, -1
  %224 = select i1 %223, i32 -2147483648, i32 2147483647
  %225 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %210, i32 %222) #20
  %226 = extractvalue { i32, i1 } %225, 1
  %227 = extractvalue { i32, i1 } %225, 0
  %228 = select i1 %226, i32 %224, i32 %227, !prof !2
  br label %229

229:                                              ; preds = %199, %220
  %230 = phi i32 [ %228, %220 ], [ %210, %199 ]
  %231 = icmp sgt i32 %230, 0
  %232 = select i1 %231, i32 %230, i32 0
  br label %249

233:                                              ; preds = %39, %43, %57, %57
  %234 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %235 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %234, align 8
  %236 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %235, i64 0, i32 0, i32 9
  %237 = bitcast [20 x i8]* %236 to i160*
  %238 = load i160, i160* %237, align 8
  %239 = and i160 %238, 15211807202738752817960438464512
  %240 = icmp eq i160 %239, 0
  %241 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %242 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %241, align 8
  %243 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %242, i64 165
  %244 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %243, align 8
  %245 = call i64 %244(%"class.blink::LayoutBox"* %0) #20
  %246 = lshr i64 %245, 32
  %247 = select i1 %240, i64 %245, i64 %246
  %248 = trunc i64 %247 to i32
  br label %249

249:                                              ; preds = %169, %171, %14, %57, %157, %229, %233, %103, %99
  %250 = phi i32 [ %248, %233 ], [ %112, %103 ], [ %102, %99 ], [ %166, %157 ], [ %232, %229 ], [ 0, %169 ], [ 0, %57 ], [ 0, %14 ], [ 0, %171 ]
  ret i32 %250
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox40ContainingBlockLogicalWidthForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* nocapture readonly, %"class.blink::LayoutBoxModelObject"*, i1 zeroext) local_unnamed_addr #4 align 2 {
  %4 = alloca %"class.blink::LineLayoutItem", align 8
  %5 = alloca %"class.blink::LineLayoutItem", align 8
  %6 = alloca %"class.blink::LineLayoutItem", align 8
  %7 = alloca %"class.blink::LineLayoutItem", align 8
  %8 = alloca %"class.blink::LineLayoutItem", align 8
  %9 = alloca %"class.blink::LineLayoutItem", align 8
  %10 = alloca %"class.blink::LineLayoutItem", align 8
  %11 = alloca %"class.blink::LineLayoutItem", align 8
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %"class.blink::IntSize"*
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  br i1 %2, label %15, label %27

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %20 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %19 to i96*
  %21 = load i96, i96* %20, align 4
  %22 = xor i96 %21, %18
  %23 = trunc i96 %22 to i32
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %15
  %26 = tail call i32 @_ZNK5blink9LayoutBox41ContainingBlockLogicalHeightForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutBoxModelObject"* %1, i1 zeroext false)
  br label %522

27:                                               ; preds = %15, %3
  %28 = icmp eq %"class.blink::LayoutBoxModelObject"* %1, null
  br i1 %28, label %38, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0
  %31 = bitcast %"class.blink::LayoutBoxModelObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, i64 92
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* %30, i32 55) #20
  %36 = bitcast %"class.blink::LayoutBoxModelObject"* %1 to %"class.blink::LayoutView"*
  %37 = select i1 %35, %"class.blink::LayoutView"* %36, %"class.blink::LayoutView"* null
  br label %38

38:                                               ; preds = %27, %29
  %39 = phi %"class.blink::LayoutView"* [ %37, %29 ], [ null, %27 ]
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %41, i64 0, i32 0, i32 9
  %43 = bitcast [20 x i8]* %42 to i160*
  %44 = load i160, i160* %43, align 8
  %45 = and i160 %44, 8462480737302404222943232
  %46 = icmp eq i160 %45, 1208925819614629174706176
  %47 = icmp ne %"class.blink::LayoutView"* %39, null
  %48 = and i1 %47, %46
  br i1 %48, label %49, label %105

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %50, align 8
  %52 = icmp eq %"class.blink::Node"* %51, null
  br i1 %52, label %53, label %60

53:                                               ; preds = %49, %53
  %54 = phi %"class.blink::LayoutObject"* [ %56, %53 ], [ %14, %49 ]
  %55 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %54, i64 0, i32 7
  %56 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %56, i64 0, i32 6, i32 0, i32 0
  %58 = load %"class.blink::Node"*, %"class.blink::Node"** %57, align 8
  %59 = icmp eq %"class.blink::Node"* %58, null
  br i1 %59, label %53, label %60

60:                                               ; preds = %53, %49
  %61 = phi %"class.blink::Node"* [ %51, %49 ], [ %58, %53 ]
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 3, i32 0, i32 0
  %63 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %63, i64 0, i32 2, i32 0, i32 0
  %65 = load %"class.blink::Document"*, %"class.blink::Document"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %65, i64 0, i32 31
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 2
  br i1 %68, label %105, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %39, i64 0, i32 1, i32 0, i32 0
  %71 = load %"class.blink::LocalFrameView"*, %"class.blink::LocalFrameView"** %70, align 8
  %72 = icmp eq %"class.blink::LocalFrameView"* %71, null
  br i1 %72, label %105, label %73

73:                                               ; preds = %69
  %74 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink14LocalFrameView14LayoutViewportEv(%"class.blink::LocalFrameView"* nonnull %71) #20
  %75 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %74, i64 0, i32 0
  %76 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #20
  %77 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %71, i64 0, i32 0, i32 0, i32 1, i32 1
  %78 = bitcast %"class.blink::IntSize"* %77 to i64*
  %79 = load i64, i64* %78, align 4
  store i64 %79, i64* %12, align 8
  %80 = call i64 @_ZNK5blink14ScrollableArea17ExcludeScrollbarsERKNS_7IntSizeE(%"class.blink::ScrollableArea"* %75, %"class.blink::IntSize"* nonnull dereferenceable(8) %13) #20
  %81 = trunc i64 %80 to i32
  %82 = lshr i64 %80, 32
  %83 = trunc i64 %82 to i32
  %84 = icmp sgt i32 %81, 33554431
  br i1 %84, label %89, label %85

85:                                               ; preds = %73
  %86 = icmp slt i32 %81, -33554432
  %87 = shl i32 %81, 6
  %88 = select i1 %86, i32 -2147483648, i32 %87
  br label %89

89:                                               ; preds = %85, %73
  %90 = phi i32 [ 2147483647, %73 ], [ %88, %85 ]
  %91 = icmp sgt i32 %83, 33554431
  br i1 %91, label %97, label %92

92:                                               ; preds = %89
  %93 = icmp slt i32 %83, -33554432
  %94 = shl nuw nsw i64 %82, 6
  %95 = trunc i64 %94 to i32
  %96 = select i1 %93, i32 -2147483648, i32 %95
  br label %97

97:                                               ; preds = %92, %89
  %98 = phi i32 [ 2147483647, %89 ], [ %96, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #20
  %99 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0, i32 4
  %100 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %99 to i96*
  %101 = load i96, i96* %100, align 4
  %102 = trunc i96 %101 to i32
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i32 %90, i32 %98
  ret i32 %104

105:                                              ; preds = %69, %60, %38
  %106 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %107 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %106, align 8
  %108 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %107, null
  br i1 %108, label %109, label %118

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %111 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %110, align 8
  %112 = icmp eq %"struct.blink::LayoutBoxRareData"* %111, null
  br i1 %112, label %125, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %111, i64 0, i32 3
  %115 = load i8, i8* %114, align 8
  %116 = and i8 %115, 1
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %125, label %120

118:                                              ; preds = %105
  %119 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %107, i64 0, i32 7, i32 0
  br label %122

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %111, i64 0, i32 4, i32 0
  br label %122

122:                                              ; preds = %118, %120
  %123 = phi i32* [ %119, %118 ], [ %121, %120 ]
  %124 = load i32, i32* %123, align 4
  br label %522

125:                                              ; preds = %113, %109
  %126 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0
  %127 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0, i32 4
  %128 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %127 to i96*
  %129 = load i96, i96* %128, align 4
  %130 = and i96 %129, 16777216
  %131 = icmp eq i96 %130, 0
  br i1 %131, label %212, label %132

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %1, i64 0, i32 0, i32 5, i32 0
  %134 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %134, i64 0, i32 0, i32 9
  %136 = bitcast [20 x i8]* %135 to i160*
  %137 = load i160, i160* %136, align 8
  %138 = lshr i160 %137, 32
  %139 = trunc i160 %138 to i32
  %140 = and i32 %139, 31
  switch i32 %140, label %212 [
    i32 1, label %141
    i32 14, label %141
  ]

141:                                              ; preds = %132, %132
  %142 = and i160 %137, 2113929216
  %143 = icmp eq i160 %142, 0
  br i1 %143, label %144, label %212

144:                                              ; preds = %141
  %145 = bitcast %"class.blink::LayoutBoxModelObject"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %146 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %145, align 8
  %147 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %146, i64 23
  %148 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %147, align 8
  %149 = tail call zeroext i1 %148(%"class.blink::LayoutObject"* %126) #20
  br i1 %149, label %150, label %212

150:                                              ; preds = %144
  %151 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %145, align 8
  %152 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %151, i64 25
  %153 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %152, align 8
  %154 = tail call zeroext i1 %153(%"class.blink::LayoutObject"* %126) #20
  br i1 %154, label %212, label %155

155:                                              ; preds = %150
  %156 = bitcast %"class.blink::LayoutBoxModelObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %157 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %156, align 8
  %158 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %157, i64 92
  %159 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %158, align 8
  %160 = tail call zeroext i1 %159(%"class.blink::LayoutObject"* %126, i32 20) #20
  br i1 %160, label %212, label %161

161:                                              ; preds = %155
  %162 = load i96, i96* %128, align 4
  %163 = and i96 %162, 113336795588871485128704
  %164 = icmp eq i96 %163, 37778931862957161709568
  br i1 %164, label %165, label %212

165:                                              ; preds = %161
  %166 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %1) #20
  br label %167

167:                                              ; preds = %209, %165
  %168 = phi %"class.blink::LayoutBoxModelObject"* [ %166, %165 ], [ %211, %209 ]
  %169 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %168, i64 0, i32 0
  %170 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  %171 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %170, i64 0, i32 0, i32 9
  %172 = bitcast [20 x i8]* %171 to i160*
  %173 = load i160, i160* %172, align 8
  %174 = lshr i160 %173, 80
  %175 = trunc i160 %174 to i32
  %176 = and i32 %175, 7
  %177 = icmp eq i32 %176, 4
  %178 = and i160 %173, 128849018880
  %179 = icmp eq i160 %178, 42949672960
  %180 = and i1 %179, %177
  %181 = select i1 %180, i32 3, i32 %176
  switch i32 %181, label %209 [
    i32 0, label %182
    i32 1, label %203
  ]

182:                                              ; preds = %167
  %183 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %168, i64 0, i32 0, i32 5, i32 0
  %184 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %183, align 8
  %185 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %184, i64 0, i32 0, i32 9
  %186 = bitcast [20 x i8]* %185 to i160*
  %187 = load i160, i160* %186, align 8
  %188 = lshr i160 %187, 80
  %189 = trunc i160 %188 to i32
  %190 = and i32 %189, 7
  %191 = icmp eq i32 %190, 4
  %192 = and i160 %187, 128849018880
  %193 = icmp eq i160 %192, 42949672960
  %194 = and i1 %193, %191
  %195 = icmp ne i32 %190, 3
  %196 = xor i1 %195, %194
  %197 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %168, i64 0, i32 0, i32 4
  %198 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %197 to i96*
  %199 = load i96, i96* %198, align 4
  br i1 %196, label %232, label %200

200:                                              ; preds = %182
  %201 = and i96 %199, 68719476736
  %202 = icmp eq i96 %201, 0
  br i1 %202, label %209, label %230

203:                                              ; preds = %167
  %204 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %168, i64 0, i32 0, i32 4
  %205 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %204 to i96*
  %206 = load i96, i96* %205, align 4
  %207 = and i96 %206, 68719476736
  %208 = icmp eq i96 %207, 0
  br i1 %208, label %209, label %228

209:                                              ; preds = %200, %203, %167
  %210 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %169, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %211 = bitcast %"class.blink::LayoutObject"* %210 to %"class.blink::LayoutBoxModelObject"*
  br label %167

212:                                              ; preds = %155, %132, %125, %141, %144, %150, %161
  %213 = load i96, i96* %128, align 4
  %214 = and i96 %213, 67108864
  %215 = icmp eq i96 %214, 0
  br i1 %215, label %234, label %216

216:                                              ; preds = %212
  %217 = bitcast %"class.blink::LayoutBoxModelObject"* %1 to %"class.blink::LayoutBox"*
  %218 = trunc i96 %213 to i32
  %219 = icmp slt i32 %218, 0
  br i1 %219, label %220, label %222

220:                                              ; preds = %216
  %221 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %217) #20
  br label %224

222:                                              ; preds = %216
  %223 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %217) #20
  br label %224

224:                                              ; preds = %220, %222
  %225 = phi i32 [ %221, %220 ], [ %223, %222 ]
  %226 = icmp sgt i32 %225, 0
  %227 = select i1 %226, i32 %225, i32 0
  br label %522

228:                                              ; preds = %203
  %229 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %204 to i96*
  br label %234

230:                                              ; preds = %200
  %231 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %197 to i96*
  br label %234

232:                                              ; preds = %182
  %233 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %197 to i96*
  br label %234

234:                                              ; preds = %232, %228, %230, %212
  %235 = phi i96* [ %128, %212 ], [ %229, %228 ], [ %231, %230 ], [ %233, %232 ]
  %236 = phi i96 [ %213, %212 ], [ %206, %228 ], [ %199, %230 ], [ %199, %232 ]
  %237 = phi %"class.blink::LayoutBoxModelObject"* [ %1, %212 ], [ %168, %228 ], [ %168, %230 ], [ %168, %232 ]
  %238 = and i96 %236, 268435456
  %239 = icmp eq i96 %238, 0
  br i1 %239, label %243, label %240

240:                                              ; preds = %234
  %241 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #20
  %242 = load i96, i96* %235, align 4
  br label %246

243:                                              ; preds = %234
  %244 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %237, i64 1, i32 0, i32 1, i32 1
  %245 = bitcast i8* %244 to %"class.blink::LineBoxList"*
  br label %246

246:                                              ; preds = %240, %243
  %247 = phi i96 [ %242, %240 ], [ %236, %243 ]
  %248 = phi %"class.blink::LineBoxList"* [ %241, %240 ], [ %245, %243 ]
  %249 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %248, i64 0, i32 0, i32 0
  %250 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %249, align 8
  %251 = and i96 %247, 268435456
  %252 = icmp eq i96 %251, 0
  br i1 %252, label %255, label %253

253:                                              ; preds = %246
  %254 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #20
  br label %258

255:                                              ; preds = %246
  %256 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %237, i64 1, i32 0, i32 1, i32 1
  %257 = bitcast i8* %256 to %"class.blink::LineBoxList"*
  br label %258

258:                                              ; preds = %253, %255
  %259 = phi %"class.blink::LineBoxList"* [ %254, %253 ], [ %257, %255 ]
  %260 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %259, i64 0, i32 0, i32 1
  %261 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %260, align 8
  %262 = icmp ne %"class.blink::InlineFlowBox"* %250, null
  %263 = icmp ne %"class.blink::InlineFlowBox"* %261, null
  %264 = and i1 %262, %263
  br i1 %264, label %265, label %522

265:                                              ; preds = %258
  %266 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %237, i64 0, i32 0, i32 5, i32 0
  %267 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %266, align 8
  %268 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %267, i64 0, i32 0, i32 9
  %269 = bitcast [20 x i8]* %268 to i160*
  %270 = load i160, i160* %269, align 8
  %271 = and i160 %270, 41538374868278621028243970633760768
  %272 = icmp eq i160 %271, 0
  %273 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %250, i64 0, i32 0, i32 7, i32 0
  %274 = load i32, i32* %273, align 4
  %275 = and i32 %274, 2048
  %276 = icmp eq i32 %275, 0
  %277 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %250, i64 0, i32 0, i32 5, i32 0, i32 0
  %278 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %250, i64 0, i32 0, i32 5, i32 1, i32 0
  %279 = select i1 %276, i32* %278, i32* %277
  %280 = load i32, i32* %279, align 4
  br i1 %272, label %281, label %396

281:                                              ; preds = %265
  %282 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %250, i64 0, i32 6
  %283 = load i32, i32* %282, align 8
  %284 = and i32 %283, 1
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %323, label %286

286:                                              ; preds = %281
  %287 = bitcast %"class.blink::LineLayoutItem"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %287) #20
  %288 = bitcast %"class.blink::LineLayoutItem"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %288) #20
  %289 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %250, i64 0, i32 0, i32 4, i32 0
  %290 = bitcast %"class.blink::LayoutObject"** %289 to i64*
  %291 = load i64, i64* %290, align 8
  br i1 %276, label %305, label %292

292:                                              ; preds = %286
  %293 = bitcast %"class.blink::LineLayoutItem"* %10 to i64*
  store i64 %291, i64* %293, align 8
  %294 = and i32 %274, 1
  %295 = icmp ne i32 %294, 0
  %296 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %10, i1 zeroext %295) #20
  %297 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %296, i64 0, i32 0, i32 7, i32 0, i32 0
  %298 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %297, align 8
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %298, i64 0, i32 27
  %300 = load i16, i16* %299, align 8
  %301 = and i16 %300, 224
  %302 = icmp eq i16 %301, 0
  br i1 %302, label %317, label %303

303:                                              ; preds = %292
  %304 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %298, i64 0, i32 24, i32 0
  br label %318

305:                                              ; preds = %286
  %306 = bitcast %"class.blink::LineLayoutItem"* %11 to i64*
  store i64 %291, i64* %306, align 8
  %307 = and i32 %274, 1
  %308 = icmp ne i32 %307, 0
  %309 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %11, i1 zeroext %308) #20
  %310 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %309, i64 0, i32 0, i32 7, i32 0, i32 0
  %311 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %310, align 8
  %312 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %311, i64 0, i32 27
  %313 = load i16, i16* %312, align 8
  %314 = icmp ult i16 %313, 8192
  br i1 %314, label %317, label %315

315:                                              ; preds = %305
  %316 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %311, i64 0, i32 26, i32 0
  br label %318

317:                                              ; preds = %292, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %288) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287) #20
  br label %323

318:                                              ; preds = %303, %315
  %319 = phi i32* [ %304, %303 ], [ %316, %315 ]
  %320 = load i32, i32* %319, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %288) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %287) #20
  %321 = icmp slt i32 %320, 0
  %322 = select i1 %321, i32 -2147483648, i32 2147483647
  br label %323

323:                                              ; preds = %318, %281, %317
  %324 = phi i32 [ 0, %317 ], [ 0, %281 ], [ %320, %318 ]
  %325 = phi i32 [ 2147483647, %317 ], [ 2147483647, %281 ], [ %322, %318 ]
  %326 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %280, i32 %324) #20
  %327 = extractvalue { i32, i1 } %326, 1
  %328 = extractvalue { i32, i1 } %326, 0
  %329 = select i1 %327, i32 %325, i32 %328, !prof !2
  %330 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %261, i64 0, i32 0, i32 7, i32 0
  %331 = load i32, i32* %330, align 4
  %332 = and i32 %331, 2048
  %333 = icmp eq i32 %332, 0
  %334 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %261, i64 0, i32 0, i32 5, i32 0, i32 0
  %335 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %261, i64 0, i32 0, i32 5, i32 1, i32 0
  %336 = select i1 %333, i32* %335, i32* %334
  %337 = load i32, i32* %336, align 4
  %338 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %261, i64 0, i32 0, i32 6, i32 0
  %339 = load i32, i32* %338, align 8
  %340 = icmp slt i32 %339, 0
  %341 = select i1 %340, i32 -2147483648, i32 2147483647
  %342 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %337, i32 %339) #20
  %343 = extractvalue { i32, i1 } %342, 1
  %344 = extractvalue { i32, i1 } %342, 0
  %345 = select i1 %343, i32 %341, i32 %344, !prof !2
  %346 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %261, i64 0, i32 6
  %347 = load i32, i32* %346, align 8
  %348 = and i32 %347, 2
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %387, label %350

350:                                              ; preds = %323
  %351 = bitcast %"class.blink::LineLayoutItem"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %351) #20
  %352 = bitcast %"class.blink::LineLayoutItem"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %352) #20
  %353 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %261, i64 0, i32 0, i32 4, i32 0
  %354 = bitcast %"class.blink::LayoutObject"** %353 to i64*
  %355 = load i64, i64* %354, align 8
  br i1 %333, label %369, label %356

356:                                              ; preds = %350
  %357 = bitcast %"class.blink::LineLayoutItem"* %8 to i64*
  store i64 %355, i64* %357, align 8
  %358 = and i32 %331, 1
  %359 = icmp ne i32 %358, 0
  %360 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %8, i1 zeroext %359) #20
  %361 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %360, i64 0, i32 0, i32 7, i32 0, i32 0
  %362 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %361, align 8
  %363 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %362, i64 0, i32 27
  %364 = load i16, i16* %363, align 8
  %365 = and i16 %364, 3584
  %366 = icmp eq i16 %365, 0
  br i1 %366, label %382, label %367

367:                                              ; preds = %356
  %368 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %362, i64 0, i32 25, i32 0
  br label %383

369:                                              ; preds = %350
  %370 = bitcast %"class.blink::LineLayoutItem"* %9 to i64*
  store i64 %355, i64* %370, align 8
  %371 = and i32 %331, 1
  %372 = icmp ne i32 %371, 0
  %373 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %9, i1 zeroext %372) #20
  %374 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %373, i64 0, i32 0, i32 7, i32 0, i32 0
  %375 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %374, align 8
  %376 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %375, i64 0, i32 27
  %377 = load i16, i16* %376, align 8
  %378 = and i16 %377, 14
  %379 = icmp eq i16 %378, 0
  br i1 %379, label %382, label %380

380:                                              ; preds = %369
  %381 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %375, i64 0, i32 23, i32 0
  br label %383

382:                                              ; preds = %356, %369
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %352) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %351) #20
  br label %387

383:                                              ; preds = %367, %380
  %384 = phi i32* [ %368, %367 ], [ %381, %380 ]
  %385 = load i32, i32* %384, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %352) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %351) #20
  %386 = icmp sgt i32 %385, -1
  br i1 %386, label %387, label %389

387:                                              ; preds = %323, %382, %383
  %388 = phi i32 [ %385, %383 ], [ 0, %382 ], [ 0, %323 ]
  br label %389

389:                                              ; preds = %383, %387
  %390 = phi i32 [ %388, %387 ], [ %385, %383 ]
  %391 = phi i32 [ -2147483648, %387 ], [ 2147483647, %383 ]
  %392 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %345, i32 %390) #20
  %393 = extractvalue { i32, i1 } %392, 1
  %394 = extractvalue { i32, i1 } %392, 0
  %395 = select i1 %393, i32 %391, i32 %394, !prof !2
  br label %511

396:                                              ; preds = %265
  %397 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %250, i64 0, i32 0, i32 6, i32 0
  %398 = load i32, i32* %397, align 8
  %399 = icmp slt i32 %398, 0
  %400 = select i1 %399, i32 -2147483648, i32 2147483647
  %401 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %280, i32 %398) #20
  %402 = extractvalue { i32, i1 } %401, 1
  %403 = extractvalue { i32, i1 } %401, 0
  %404 = select i1 %402, i32 %400, i32 %403, !prof !2
  %405 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %250, i64 0, i32 6
  %406 = load i32, i32* %405, align 8
  %407 = and i32 %406, 2
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %446, label %409

409:                                              ; preds = %396
  %410 = bitcast %"class.blink::LineLayoutItem"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %410) #20
  %411 = bitcast %"class.blink::LineLayoutItem"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %411) #20
  %412 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %250, i64 0, i32 0, i32 4, i32 0
  %413 = bitcast %"class.blink::LayoutObject"** %412 to i64*
  %414 = load i64, i64* %413, align 8
  br i1 %276, label %428, label %415

415:                                              ; preds = %409
  %416 = bitcast %"class.blink::LineLayoutItem"* %6 to i64*
  store i64 %414, i64* %416, align 8
  %417 = and i32 %274, 1
  %418 = icmp ne i32 %417, 0
  %419 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %6, i1 zeroext %418) #20
  %420 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %419, i64 0, i32 0, i32 7, i32 0, i32 0
  %421 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %420, align 8
  %422 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %421, i64 0, i32 27
  %423 = load i16, i16* %422, align 8
  %424 = and i16 %423, 3584
  %425 = icmp eq i16 %424, 0
  br i1 %425, label %441, label %426

426:                                              ; preds = %415
  %427 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %421, i64 0, i32 25, i32 0
  br label %442

428:                                              ; preds = %409
  %429 = bitcast %"class.blink::LineLayoutItem"* %7 to i64*
  store i64 %414, i64* %429, align 8
  %430 = and i32 %274, 1
  %431 = icmp ne i32 %430, 0
  %432 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %7, i1 zeroext %431) #20
  %433 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %432, i64 0, i32 0, i32 7, i32 0, i32 0
  %434 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %433, align 8
  %435 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %434, i64 0, i32 27
  %436 = load i16, i16* %435, align 8
  %437 = and i16 %436, 14
  %438 = icmp eq i16 %437, 0
  br i1 %438, label %441, label %439

439:                                              ; preds = %428
  %440 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %434, i64 0, i32 23, i32 0
  br label %442

441:                                              ; preds = %415, %428
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %411) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %410) #20
  br label %446

442:                                              ; preds = %426, %439
  %443 = phi i32* [ %427, %426 ], [ %440, %439 ]
  %444 = load i32, i32* %443, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %411) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %410) #20
  %445 = icmp sgt i32 %444, -1
  br i1 %445, label %446, label %448

446:                                              ; preds = %396, %441, %442
  %447 = phi i32 [ %444, %442 ], [ 0, %441 ], [ 0, %396 ]
  br label %448

448:                                              ; preds = %442, %446
  %449 = phi i32 [ %447, %446 ], [ %444, %442 ]
  %450 = phi i32 [ -2147483648, %446 ], [ 2147483647, %442 ]
  %451 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %404, i32 %449) #20
  %452 = extractvalue { i32, i1 } %451, 1
  %453 = extractvalue { i32, i1 } %451, 0
  %454 = select i1 %452, i32 %450, i32 %453, !prof !2
  %455 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %261, i64 0, i32 0, i32 7, i32 0
  %456 = load i32, i32* %455, align 4
  %457 = and i32 %456, 2048
  %458 = icmp eq i32 %457, 0
  %459 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %261, i64 0, i32 0, i32 5, i32 0, i32 0
  %460 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %261, i64 0, i32 0, i32 5, i32 1, i32 0
  %461 = select i1 %458, i32* %460, i32* %459
  %462 = load i32, i32* %461, align 4
  %463 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %261, i64 0, i32 6
  %464 = load i32, i32* %463, align 8
  %465 = and i32 %464, 1
  %466 = icmp eq i32 %465, 0
  br i1 %466, label %504, label %467

467:                                              ; preds = %448
  %468 = bitcast %"class.blink::LineLayoutItem"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %468) #20
  %469 = bitcast %"class.blink::LineLayoutItem"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %469) #20
  %470 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %261, i64 0, i32 0, i32 4, i32 0
  %471 = bitcast %"class.blink::LayoutObject"** %470 to i64*
  %472 = load i64, i64* %471, align 8
  br i1 %458, label %486, label %473

473:                                              ; preds = %467
  %474 = bitcast %"class.blink::LineLayoutItem"* %4 to i64*
  store i64 %472, i64* %474, align 8
  %475 = and i32 %456, 1
  %476 = icmp ne i32 %475, 0
  %477 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %4, i1 zeroext %476) #20
  %478 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %477, i64 0, i32 0, i32 7, i32 0, i32 0
  %479 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %478, align 8
  %480 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %479, i64 0, i32 27
  %481 = load i16, i16* %480, align 8
  %482 = and i16 %481, 224
  %483 = icmp eq i16 %482, 0
  br i1 %483, label %498, label %484

484:                                              ; preds = %473
  %485 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %479, i64 0, i32 24, i32 0
  br label %499

486:                                              ; preds = %467
  %487 = bitcast %"class.blink::LineLayoutItem"* %5 to i64*
  store i64 %472, i64* %487, align 8
  %488 = and i32 %456, 1
  %489 = icmp ne i32 %488, 0
  %490 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %5, i1 zeroext %489) #20
  %491 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %490, i64 0, i32 0, i32 7, i32 0, i32 0
  %492 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %491, align 8
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %492, i64 0, i32 27
  %494 = load i16, i16* %493, align 8
  %495 = icmp ult i16 %494, 8192
  br i1 %495, label %498, label %496

496:                                              ; preds = %486
  %497 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %492, i64 0, i32 26, i32 0
  br label %499

498:                                              ; preds = %473, %486
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %469) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %468) #20
  br label %504

499:                                              ; preds = %484, %496
  %500 = phi i32* [ %485, %484 ], [ %497, %496 ]
  %501 = load i32, i32* %500, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %469) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %468) #20
  %502 = icmp slt i32 %501, 0
  %503 = select i1 %502, i32 -2147483648, i32 2147483647
  br label %504

504:                                              ; preds = %499, %448, %498
  %505 = phi i32 [ 0, %498 ], [ 0, %448 ], [ %501, %499 ]
  %506 = phi i32 [ 2147483647, %498 ], [ 2147483647, %448 ], [ %503, %499 ]
  %507 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %462, i32 %505) #20
  %508 = extractvalue { i32, i1 } %507, 1
  %509 = extractvalue { i32, i1 } %507, 0
  %510 = select i1 %508, i32 %506, i32 %509, !prof !2
  br label %511

511:                                              ; preds = %504, %389
  %512 = phi i32 [ %395, %389 ], [ %454, %504 ]
  %513 = phi i32 [ %329, %389 ], [ %510, %504 ]
  %514 = icmp sgt i32 %513, -1
  %515 = select i1 %514, i32 -2147483648, i32 2147483647
  %516 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %512, i32 %513) #20
  %517 = extractvalue { i32, i1 } %516, 1
  %518 = extractvalue { i32, i1 } %516, 0
  %519 = select i1 %517, i32 %515, i32 %518, !prof !2
  %520 = icmp sgt i32 %519, 0
  %521 = select i1 %520, i32 %519, i32 0
  br label %522

522:                                              ; preds = %258, %122, %224, %511, %25
  %523 = phi i32 [ %26, %25 ], [ %124, %122 ], [ %521, %511 ], [ %227, %224 ], [ 0, %258 ]
  ret i32 %523
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) unnamed_addr #4 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::Length"*
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 0
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 5, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %13, i64 0, i32 3
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %13, i64 0, i32 8
  %16 = select i1 %11, %"class.blink::Length"* %14, %"class.blink::Length"* %15
  %17 = bitcast %"class.blink::Length"* %16 to i64*
  %18 = load i64, i64* %17, align 4
  store i64 %18, i64* %3, align 8
  %19 = and i64 %18, 280375465082880
  %20 = icmp eq i64 %19, 8796093022208
  br i1 %20, label %21, label %22

21:                                               ; preds = %2
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #20
  br label %22

22:                                               ; preds = %2, %21
  %23 = call i32 @_ZNK5blink9LayoutBox33ComputeReplacedLogicalHeightUsingENS_8SizeTypeENS_6LengthE(%"class.blink::LayoutBox"* %0, i32 0, %"class.blink::Length"* nonnull %4)
  %24 = call i32 @_ZNK5blink9LayoutBox50ComputeReplacedLogicalHeightRespectingMinMaxHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 %23)
  %25 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %29

28:                                               ; preds = %22
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #20
  br label %29

29:                                               ; preds = %22, %28
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox50ComputeReplacedLogicalHeightRespectingMinMaxHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::Length"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::Length"*
  %7 = tail call zeroext i1 @_ZNK5blink9LayoutBox27LogicalHeightComputesAsNoneENS_8SizeTypeE(%"class.blink::LayoutBox"* %0, i32 1)
  br i1 %7, label %32, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = and i160 %13, 15211807202738752817960438464512
  %15 = icmp eq i160 %14, 0
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 5, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %17, i64 0, i32 6
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %17, i64 0, i32 7
  %20 = select i1 %15, %"class.blink::Length"* %18, %"class.blink::Length"* %19
  %21 = bitcast %"class.blink::Length"* %20 to i64*
  %22 = load i64, i64* %21, align 4
  store i64 %22, i64* %3, align 8
  %23 = and i64 %22, 280375465082880
  %24 = icmp eq i64 %23, 8796093022208
  br i1 %24, label %25, label %26

25:                                               ; preds = %8
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #20
  br label %26

26:                                               ; preds = %8, %25
  %27 = call i32 @_ZNK5blink9LayoutBox33ComputeReplacedLogicalHeightUsingENS_8SizeTypeENS_6LengthE(%"class.blink::LayoutBox"* %0, i32 1, %"class.blink::Length"* nonnull %4)
  %28 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #20
  br label %32

32:                                               ; preds = %31, %26, %2
  %33 = phi i32 [ %27, %31 ], [ %27, %26 ], [ 0, %2 ]
  %34 = call zeroext i1 @_ZNK5blink9LayoutBox27LogicalHeightComputesAsNoneENS_8SizeTypeE(%"class.blink::LayoutBox"* %0, i32 2)
  br i1 %34, label %59, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8
  %41 = and i160 %40, 15211807202738752817960438464512
  %42 = icmp eq i160 %41, 0
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 5, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %44, i64 0, i32 4
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %44, i64 0, i32 5
  %47 = select i1 %42, %"class.blink::Length"* %45, %"class.blink::Length"* %46
  %48 = bitcast %"class.blink::Length"* %47 to i64*
  %49 = load i64, i64* %48, align 4
  store i64 %49, i64* %5, align 8
  %50 = and i64 %49, 280375465082880
  %51 = icmp eq i64 %50, 8796093022208
  br i1 %51, label %52, label %53

52:                                               ; preds = %35
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #20
  br label %53

53:                                               ; preds = %35, %52
  %54 = call i32 @_ZNK5blink9LayoutBox33ComputeReplacedLogicalHeightUsingENS_8SizeTypeENS_6LengthE(%"class.blink::LayoutBox"* %0, i32 2, %"class.blink::Length"* nonnull %6)
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 8
  br i1 %57, label %58, label %59

58:                                               ; preds = %53
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #20
  br label %59

59:                                               ; preds = %58, %53, %32
  %60 = phi i32 [ %54, %58 ], [ %54, %53 ], [ %1, %32 ]
  %61 = icmp slt i32 %60, %1
  %62 = select i1 %61, i32 %60, i32 %1
  %63 = icmp slt i32 %33, %62
  %64 = select i1 %63, i32 %62, i32 %33
  ret i32 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox33ComputeReplacedLogicalHeightUsingENS_8SizeTypeENS_6LengthE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"*) local_unnamed_addr #4 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  switch i32 %1, label %7 [
    i32 1, label %10
    i32 0, label %35
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  br label %57

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %57

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %16 = bitcast %"class.blink::ComputedStyle"** %15 to %"class.blink::ComputedStyleBase"**
  %17 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %17, i64 0, i32 5, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %19, i64 0, i32 11
  %21 = load i8, i8* %20, align 4
  %22 = and i8 %21, 2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %599

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %26 = tail call i32 @_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %25) #20
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %26) #20
  %30 = extractvalue { i32, i1 } %29, 1
  %31 = extractvalue { i32, i1 } %29, 0
  %32 = select i1 %30, i32 %28, i32 %31, !prof !2
  %33 = icmp sgt i32 %32, 0
  %34 = select i1 %33, i32 %32, i32 0
  ret i32 %34

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %57

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %41 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %40, align 8
  %42 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %41, null
  br i1 %42, label %583, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %41, i64 0, i32 5
  %45 = load i8, i8* %44, align 2, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %583, label %47

47:                                               ; preds = %43
  %48 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #20
  %49 = bitcast i64* %4 to i32*
  store i32 0, i32* %49, align 8, !alias.scope !285
  %50 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 1
  store i8 0, i8* %50, align 4, !alias.scope !285
  %51 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  store i8 6, i8* %51, align 1, !alias.scope !285
  %52 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 3
  store i8 0, i8* %52, align 2, !alias.scope !285
  %53 = bitcast %"class.blink::Length"* %2 to i64*
  %54 = load i64, i64* %4, align 8
  store i64 %54, i64* %53, align 4
  %55 = lshr i64 %54, 40
  %56 = trunc i64 %55 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #20
  br label %57

57:                                               ; preds = %7, %10, %47, %35
  %58 = phi i8 [ %9, %7 ], [ %12, %10 ], [ %56, %47 ], [ %37, %35 ]
  switch i8 %58, label %583 [
    i8 2, label %59
    i8 1, label %102
    i8 8, label %102
    i8 3, label %500
    i8 4, label %500
    i8 7, label %500
    i8 6, label %500
  ]

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 3
  %61 = load i8, i8* %60, align 2, !range !4
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %66, label %63

63:                                               ; preds = %59
  %64 = bitcast %"class.blink::Length"* %2 to float*
  %65 = load float, float* %64, align 4
  br label %70

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = sitofp i32 %68 to float
  br label %70

70:                                               ; preds = %63, %66
  %71 = phi float [ %65, %63 ], [ %69, %66 ]
  %72 = fmul float %71, 6.400000e+01
  %73 = fcmp ult float %72, 0xC1E0000000000000
  %74 = fcmp ugt float %72, 0x41DFFFFFE0000000
  %75 = fcmp ogt float %72, 0xC1E0000000000000
  %76 = select i1 %75, float %72, float 0xC1E0000000000000
  %77 = fptosi float %76 to i32
  %78 = select i1 %73, i32 0, i32 2147483647
  %79 = select i1 %74, i32 %78, i32 %77
  %80 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %81 = bitcast %"class.blink::ComputedStyle"** %80 to %"class.blink::ComputedStyleBase"**
  %82 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %82, i64 0, i32 5, i32 0, i32 0
  %84 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %84, i64 0, i32 11
  %86 = load i8, i8* %85, align 4
  %87 = and i8 %86, 2
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %89, label %98

89:                                               ; preds = %70
  %90 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %91 = call i32 @_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %90) #20
  %92 = icmp sgt i32 %91, -1
  %93 = select i1 %92, i32 -2147483648, i32 2147483647
  %94 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %79, i32 %91) #20
  %95 = extractvalue { i32, i1 } %94, 1
  %96 = extractvalue { i32, i1 } %94, 0
  %97 = select i1 %95, i32 %93, i32 %96, !prof !2
  br label %98

98:                                               ; preds = %70, %89
  %99 = phi i32 [ %97, %89 ], [ %79, %70 ]
  %100 = icmp sgt i32 %99, 0
  %101 = select i1 %100, i32 %99, i32 0
  br label %599

102:                                              ; preds = %57, %57
  %103 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %104 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %103 to i96*
  %105 = load i96, i96* %104, align 4
  %106 = and i96 %105, 113336795588871485128704
  %107 = icmp eq i96 %106, 75557863725914323419136
  br i1 %107, label %108, label %110

108:                                              ; preds = %102
  %109 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %6, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  br label %113

110:                                              ; preds = %102
  %111 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %6, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %112 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %111, i64 0, i32 0, i32 0, i32 0
  br label %113

113:                                              ; preds = %110, %108
  %114 = phi %"class.blink::LayoutObject"* [ %109, %108 ], [ %112, %110 ]
  %115 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %114, i64 0, i32 4
  %116 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %115 to i96*
  %117 = load i96, i96* %116, align 4
  %118 = and i96 %117, 16777216
  %119 = icmp eq i96 %118, 0
  br i1 %119, label %129, label %120

120:                                              ; preds = %113, %120
  %121 = phi %"class.blink::LayoutObject"* [ %123, %120 ], [ %114, %113 ]
  %122 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %121, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %123 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %122, i64 0, i32 0, i32 0, i32 0, i32 4
  %125 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %124 to i96*
  %126 = load i96, i96* %125, align 4
  %127 = and i96 %126, 16777216
  %128 = icmp eq i96 %127, 0
  br i1 %128, label %129, label %120

129:                                              ; preds = %120, %113
  %130 = phi %"class.blink::LayoutObject"* [ %114, %113 ], [ %123, %120 ]
  %131 = phi i96 [ %117, %113 ], [ %126, %120 ]
  %132 = load i96, i96* %104, align 4
  %133 = xor i96 %132, %131
  %134 = trunc i96 %133 to i32
  %135 = icmp slt i32 %134, 0
  %136 = icmp eq %"class.blink::LayoutObject"* %130, null
  br i1 %136, label %288, label %137

137:                                              ; preds = %129
  %138 = bitcast %"class.blink::LayoutObject"* %130 to i1 (%"class.blink::LayoutObject"*)***
  %139 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %138, align 8
  %140 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %139, i64 23
  %141 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %140, align 8
  %142 = call zeroext i1 %141(%"class.blink::LayoutObject"* nonnull %130) #20
  br i1 %142, label %143, label %288

143:                                              ; preds = %137
  %144 = bitcast %"class.blink::LayoutObject"* %130 to %"class.blink::LayoutBlock"*
  call void @_ZN5blink11LayoutBlock26AddPercentHeightDescendantEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* nonnull %144, %"class.blink::LayoutBox"* %0) #20
  %145 = bitcast %"class.blink::LayoutObject"* %130 to %"class.blink::LayoutBox"*
  %146 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %130, i64 0, i32 4
  %147 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %146 to i96*
  %148 = load i96, i96* %147, align 4
  %149 = and i96 %148, 134217728
  %150 = icmp ne i96 %149, 0
  %151 = and i96 %148, 113336795588871485128704
  %152 = icmp eq i96 %151, 75557863725914323419136
  %153 = or i1 %150, %152
  br i1 %153, label %214, label %154

154:                                              ; preds = %143
  %155 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %130, i64 0, i32 7
  %156 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %155, align 8
  %157 = icmp eq %"class.blink::LayoutObject"* %156, null
  br i1 %157, label %214, label %158

158:                                              ; preds = %154
  %159 = bitcast %"class.blink::LayoutObject"* %156 to i1 (%"class.blink::LayoutObject"*)***
  %160 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %159, align 8
  %161 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %160, i64 78
  %162 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %161, align 8
  %163 = call zeroext i1 %162(%"class.blink::LayoutObject"* nonnull %156) #20
  br i1 %163, label %164, label %214

164:                                              ; preds = %158
  %165 = bitcast %"class.blink::LayoutObject"** %155 to %"class.blink::LayoutFlexibleBox"**
  %166 = load %"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutFlexibleBox"** %165, align 8
  %167 = call zeroext i1 @_ZNK5blink17LayoutFlexibleBox46UseOverrideLogicalHeightForPerentageResolutionERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %166, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %145) #20
  br i1 %167, label %168, label %288

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %130, i64 2, i32 1
  %170 = bitcast %"class.blink::DisplayItemClient.base"* %169 to %"struct.blink::BoxLayoutExtraInput"**
  %171 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %170, align 8
  %172 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %171, null
  br i1 %172, label %179, label %173

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %175 = load i8, i8* %174, align 4, !range !4
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %179, label %177

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %184

179:                                              ; preds = %173, %168
  %180 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %130, i64 2, i32 4, i32 0, i64 4
  %181 = bitcast i8* %180 to %"struct.blink::LayoutBoxRareData"**
  %182 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %181, align 8
  %183 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %182, i64 0, i32 2, i32 0
  br label %184

184:                                              ; preds = %177, %179
  %185 = phi i32* [ %178, %177 ], [ %183, %179 ]
  %186 = load i32, i32* %185, align 4
  %187 = bitcast %"class.blink::LayoutObject"* %130 to %"class.blink::LayoutBoxModelObject"*
  %188 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* nonnull %187) #20
  %189 = icmp sgt i32 %188, -1
  %190 = select i1 %189, i32 -2147483648, i32 2147483647
  %191 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %186, i32 %188) #20
  %192 = extractvalue { i32, i1 } %191, 1
  %193 = extractvalue { i32, i1 } %191, 0
  %194 = select i1 %192, i32 %190, i32 %193, !prof !2
  %195 = call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* nonnull %145) #20
  %196 = extractvalue { i64, i64 } %195, 1
  %197 = trunc i64 %196 to i32
  %198 = lshr i64 %196, 32
  %199 = trunc i64 %198 to i32
  %200 = icmp slt i32 %199, 0
  %201 = select i1 %200, i32 -2147483648, i32 2147483647
  %202 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %197, i32 %199) #20
  %203 = extractvalue { i32, i1 } %202, 1
  %204 = extractvalue { i32, i1 } %202, 0
  %205 = select i1 %203, i32 %201, i32 %204, !prof !2
  %206 = icmp sgt i32 %205, -1
  %207 = select i1 %206, i32 -2147483648, i32 2147483647
  %208 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %194, i32 %205) #20
  %209 = extractvalue { i32, i1 } %208, 1
  %210 = extractvalue { i32, i1 } %208, 0
  %211 = select i1 %209, i32 %207, i32 %210, !prof !2
  %212 = icmp sgt i32 %211, 0
  %213 = select i1 %212, i32 %211, i32 0
  br label %288

214:                                              ; preds = %143, %154, %158
  %215 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %130, i64 0, i32 7
  %216 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %215, align 8
  %217 = icmp eq %"class.blink::LayoutObject"* %216, null
  br i1 %217, label %288, label %218

218:                                              ; preds = %214
  %219 = bitcast %"class.blink::LayoutObject"* %216 to i1 (%"class.blink::LayoutObject"*, i32)***
  %220 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %219, align 8
  %221 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %220, i64 92
  %222 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %221, align 8
  %223 = call zeroext i1 %222(%"class.blink::LayoutObject"* nonnull %216, i32 10) #20
  br i1 %223, label %224, label %288

224:                                              ; preds = %218
  %225 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %130, i64 2, i32 1
  %226 = bitcast %"class.blink::DisplayItemClient.base"* %225 to %"struct.blink::BoxLayoutExtraInput"**
  %227 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %226, align 8
  %228 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %227, null
  br i1 %228, label %233, label %229

229:                                              ; preds = %224
  %230 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %231 = load i8, i8* %230, align 4, !range !4
  %232 = icmp eq i8 %231, 0
  br i1 %232, label %233, label %242

233:                                              ; preds = %229, %224
  %234 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %130, i64 2, i32 4, i32 0, i64 4
  %235 = bitcast i8* %234 to %"struct.blink::LayoutBoxRareData"**
  %236 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %235, align 8
  %237 = icmp eq %"struct.blink::LayoutBoxRareData"* %236, null
  br i1 %237, label %288, label %238

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %236, i64 0, i32 2, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp ne i32 %240, -64
  br label %242

242:                                              ; preds = %229, %238
  %243 = phi i1 [ true, %229 ], [ %241, %238 ]
  %244 = xor i1 %243, true
  %245 = or i1 %135, %244
  br i1 %245, label %288, label %246

246:                                              ; preds = %242
  br i1 %228, label %253, label %247

247:                                              ; preds = %246
  %248 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %249 = load i8, i8* %248, align 4, !range !4
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %253, label %251

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %258

253:                                              ; preds = %247, %246
  %254 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %130, i64 2, i32 4, i32 0, i64 4
  %255 = bitcast i8* %254 to %"struct.blink::LayoutBoxRareData"**
  %256 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %255, align 8
  %257 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %256, i64 0, i32 2, i32 0
  br label %258

258:                                              ; preds = %251, %253
  %259 = phi i32* [ %252, %251 ], [ %257, %253 ]
  %260 = load i32, i32* %259, align 4
  %261 = bitcast %"class.blink::LayoutObject"* %130 to %"class.blink::LayoutBoxModelObject"*
  %262 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* nonnull %261) #20
  %263 = icmp sgt i32 %262, -1
  %264 = select i1 %263, i32 -2147483648, i32 2147483647
  %265 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %260, i32 %262) #20
  %266 = extractvalue { i32, i1 } %265, 1
  %267 = extractvalue { i32, i1 } %265, 0
  %268 = select i1 %266, i32 %264, i32 %267, !prof !2
  %269 = call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* nonnull %145) #20
  %270 = extractvalue { i64, i64 } %269, 1
  %271 = trunc i64 %270 to i32
  %272 = lshr i64 %270, 32
  %273 = trunc i64 %272 to i32
  %274 = icmp slt i32 %273, 0
  %275 = select i1 %274, i32 -2147483648, i32 2147483647
  %276 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %271, i32 %273) #20
  %277 = extractvalue { i32, i1 } %276, 1
  %278 = extractvalue { i32, i1 } %276, 0
  %279 = select i1 %277, i32 %275, i32 %278, !prof !2
  %280 = icmp sgt i32 %279, -1
  %281 = select i1 %280, i32 -2147483648, i32 2147483647
  %282 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %268, i32 %279) #20
  %283 = extractvalue { i32, i1 } %282, 1
  %284 = extractvalue { i32, i1 } %282, 0
  %285 = select i1 %283, i32 %281, i32 %284, !prof !2
  %286 = icmp sgt i32 %285, 0
  %287 = select i1 %286, i32 %285, i32 0
  br label %288

288:                                              ; preds = %137, %233, %214, %129, %242, %164, %184, %258, %218
  %289 = phi i32 [ %213, %184 ], [ -64, %164 ], [ -64, %242 ], [ %287, %258 ], [ -64, %218 ], [ -64, %137 ], [ -64, %129 ], [ -64, %214 ], [ -64, %233 ]
  %290 = load i96, i96* %104, align 4
  %291 = and i96 %290, 113336795588871485128704
  %292 = icmp eq i96 %291, 75557863725914323419136
  br i1 %292, label %293, label %296

293:                                              ; preds = %288
  %294 = bitcast %"class.blink::LayoutObject"* %130 to %"class.blink::LayoutBoxModelObject"*
  %295 = call i32 @_ZNK5blink9LayoutBox41ContainingBlockLogicalHeightForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutBoxModelObject"* %294, i1 zeroext true)
  br label %436

296:                                              ; preds = %288
  %297 = icmp eq i32 %289, -64
  br i1 %297, label %298, label %436

298:                                              ; preds = %296
  %299 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %300 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %299, align 8
  %301 = icmp eq %"struct.blink::LayoutBoxRareData"* %300, null
  br i1 %301, label %310, label %302

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %300, i64 0, i32 3
  %304 = load i8, i8* %303, align 8
  %305 = and i8 %304, 4
  %306 = icmp eq i8 %305, 0
  br i1 %306, label %310, label %307

307:                                              ; preds = %302
  %308 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %300, i64 0, i32 6, i32 0
  %309 = load i32, i32* %308, align 4
  br label %436

310:                                              ; preds = %302, %298
  br i1 %135, label %311, label %317

311:                                              ; preds = %310
  %312 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %313 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %312, align 8
  %314 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %313, i64 131
  %315 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %314, align 8
  %316 = call i32 %315(%"class.blink::LayoutBox"* %0) #20
  br label %364

317:                                              ; preds = %310
  %318 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %319 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %318, align 8
  %320 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %319, null
  br i1 %320, label %321, label %327

321:                                              ; preds = %317
  br i1 %301, label %334, label %322

322:                                              ; preds = %321
  %323 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %300, i64 0, i32 3
  %324 = load i8, i8* %323, align 8
  %325 = and i8 %324, 2
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %334, label %329

327:                                              ; preds = %317
  %328 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %319, i64 0, i32 8, i32 0
  br label %331

329:                                              ; preds = %322
  %330 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %300, i64 0, i32 5, i32 0
  br label %331

331:                                              ; preds = %329, %327
  %332 = phi i32* [ %328, %327 ], [ %330, %329 ]
  %333 = load i32, i32* %332, align 4
  br label %364

334:                                              ; preds = %322, %321
  %335 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %6, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %336 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %335, i64 0, i32 0
  %337 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %338 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %339 = or i8 %338, %337
  %340 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %341 = or i8 %339, %340
  %342 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %343 = or i8 %341, %342
  %344 = icmp eq i8 %343, 0
  %345 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %335, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %346 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %345, align 8
  %347 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %346, i64 0, i32 0, i32 9
  %348 = bitcast [20 x i8]* %347 to i160*
  %349 = load i160, i160* %348, align 8
  %350 = and i160 %349, 15211807202738752817960438464512
  %351 = icmp eq i160 %350, 0
  %352 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %346, i64 0, i32 0, i32 5, i32 0, i32 0
  %353 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %352, align 8
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %353, i64 0, i32 3
  %355 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %353, i64 0, i32 8
  %356 = select i1 %351, %"class.blink::Length"* %354, %"class.blink::Length"* %355
  %357 = call i32 @_ZNK5blink9LayoutBox27AvailableLogicalHeightUsingERKNS_6LengthENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"* %336, %"class.blink::Length"* dereferenceable(8) %356, i32 1) #20
  br i1 %344, label %362, label %358

358:                                              ; preds = %334
  %359 = icmp eq i32 %357, -64
  br i1 %359, label %364, label %360, !prof !2

360:                                              ; preds = %358
  %361 = call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %336, i32 %357, i32 -64) #20
  br label %364

362:                                              ; preds = %334
  %363 = call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %336, i32 %357, i32 -64) #20
  br label %364

364:                                              ; preds = %331, %358, %360, %362, %311
  %365 = phi i32 [ %316, %311 ], [ %333, %331 ], [ %363, %362 ], [ %361, %360 ], [ -64, %358 ]
  br label %366

366:                                              ; preds = %432, %364
  %367 = phi %"class.blink::LayoutObject"* [ %130, %364 ], [ %435, %432 ]
  %368 = icmp eq %"class.blink::LayoutObject"* %367, null
  br i1 %368, label %375, label %369

369:                                              ; preds = %366
  %370 = bitcast %"class.blink::LayoutObject"* %367 to i1 (%"class.blink::LayoutObject"*, i32)***
  %371 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %370, align 8
  %372 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %371, i64 92
  %373 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %372, align 8
  %374 = call zeroext i1 %373(%"class.blink::LayoutObject"* nonnull %367, i32 55) #20
  br i1 %374, label %436, label %375

375:                                              ; preds = %366, %369
  %376 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %367, i64 0, i32 5, i32 0
  %377 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %376, align 8
  %378 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %377, i64 0, i32 0, i32 9
  %379 = bitcast [20 x i8]* %378 to i160*
  %380 = load i160, i160* %379, align 8
  %381 = and i160 %380, 15211807202738752817960438464512
  %382 = icmp eq i160 %381, 0
  %383 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %377, i64 0, i32 0, i32 5, i32 0, i32 0
  %384 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %383, align 8
  %385 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %384, i64 0, i32 3
  %386 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %384, i64 0, i32 8
  %387 = select i1 %382, %"class.blink::Length"* %385, %"class.blink::Length"* %386
  %388 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %387, i64 0, i32 2
  %389 = load i8, i8* %388, align 1
  switch i8 %389, label %436 [
    i8 0, label %390
    i8 8, label %390
    i8 1, label %390
  ]

390:                                              ; preds = %375, %375, %375
  %391 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %392 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %393 = or i8 %392, %391
  %394 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %395 = or i8 %393, %394
  %396 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %397 = or i8 %395, %396
  %398 = icmp eq i8 %397, 0
  br i1 %398, label %399, label %432

399:                                              ; preds = %390
  %400 = bitcast %"class.blink::LayoutObject"* %367 to i1 (%"class.blink::LayoutObject"*, i32)***
  %401 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %400, align 8
  %402 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %401, i64 92
  %403 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %402, align 8
  %404 = call zeroext i1 %403(%"class.blink::LayoutObject"* %367, i32 46) #20
  br i1 %404, label %405, label %432

405:                                              ; preds = %399
  %406 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %407 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %406, align 8
  %408 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %407, i64 0, i32 0, i32 9
  %409 = bitcast [20 x i8]* %408 to i160*
  %410 = load i160, i160* %409, align 8
  %411 = and i160 %410, 15211807202738752817960438464512
  %412 = icmp eq i160 %411, 0
  %413 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %414 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %413, align 8
  %415 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %414, i64 165
  %416 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %415, align 8
  %417 = call i64 %416(%"class.blink::LayoutBox"* %0) #20
  %418 = lshr i64 %417, 32
  %419 = select i1 %412, i64 %418, i64 %417
  %420 = trunc i64 %419 to i32
  %421 = icmp slt i32 %365, %420
  %422 = select i1 %421, i32 %420, i32 %365
  %423 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %424 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %423)
  %425 = icmp sgt i32 %424, -1
  %426 = select i1 %425, i32 -2147483648, i32 2147483647
  %427 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %422, i32 %424) #20
  %428 = extractvalue { i32, i1 } %427, 1
  %429 = extractvalue { i32, i1 } %427, 0
  %430 = select i1 %428, i32 %426, i32 %429, !prof !2
  %431 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %2, i32 %430) #20
  br label %599

432:                                              ; preds = %390, %399
  %433 = bitcast %"class.blink::LayoutObject"* %367 to %"class.blink::LayoutBlock"*
  call void @_ZN5blink11LayoutBlock26AddPercentHeightDescendantEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* %433, %"class.blink::LayoutBox"* %0) #20
  %434 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %367, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %435 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %434, i64 0, i32 0, i32 0, i32 0
  br label %366

436:                                              ; preds = %375, %369, %296, %307, %293
  %437 = phi i32 [ %309, %307 ], [ %295, %293 ], [ %289, %296 ], [ %365, %369 ], [ %365, %375 ]
  %438 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %439 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %440 = or i8 %439, %438
  %441 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %442 = or i8 %440, %441
  %443 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %444 = or i8 %442, %443
  %445 = icmp ne i8 %444, 0
  %446 = icmp eq i32 %437, -64
  %447 = and i1 %445, %446
  br i1 %447, label %448, label %464

448:                                              ; preds = %436
  %449 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %450 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %449, align 8
  %451 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %450, i64 0, i32 0, i32 9
  %452 = bitcast [20 x i8]* %451 to i160*
  %453 = load i160, i160* %452, align 8
  %454 = and i160 %453, 15211807202738752817960438464512
  %455 = icmp eq i160 %454, 0
  %456 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %457 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %456, align 8
  %458 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %457, i64 165
  %459 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %458, align 8
  %460 = call i64 %459(%"class.blink::LayoutBox"* %0) #20
  %461 = lshr i64 %460, 32
  %462 = select i1 %455, i64 %461, i64 %460
  %463 = trunc i64 %462 to i32
  br label %466

464:                                              ; preds = %436
  %465 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %2, i32 %437) #20
  br label %466

466:                                              ; preds = %464, %448
  %467 = phi i32 [ %463, %448 ], [ %465, %464 ]
  %468 = sitofp i32 %467 to float
  %469 = fmul float %468, 1.562500e-02
  %470 = fmul float %469, 6.400000e+01
  %471 = fcmp ult float %470, 0xC1E0000000000000
  %472 = fcmp ugt float %470, 0x41DFFFFFE0000000
  %473 = fcmp ogt float %470, 0xC1E0000000000000
  %474 = select i1 %473, float %470, float 0xC1E0000000000000
  %475 = fptosi float %474 to i32
  %476 = select i1 %471, i32 0, i32 2147483647
  %477 = select i1 %472, i32 %476, i32 %475
  %478 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %479 = bitcast %"class.blink::ComputedStyle"** %478 to %"class.blink::ComputedStyleBase"**
  %480 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %479, align 8
  %481 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %480, i64 0, i32 5, i32 0, i32 0
  %482 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %481, align 8
  %483 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %482, i64 0, i32 11
  %484 = load i8, i8* %483, align 4
  %485 = and i8 %484, 2
  %486 = icmp eq i8 %485, 0
  br i1 %486, label %487, label %496

487:                                              ; preds = %466
  %488 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %489 = call i32 @_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %488) #20
  %490 = icmp sgt i32 %489, -1
  %491 = select i1 %490, i32 -2147483648, i32 2147483647
  %492 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %477, i32 %489) #20
  %493 = extractvalue { i32, i1 } %492, 1
  %494 = extractvalue { i32, i1 } %492, 0
  %495 = select i1 %493, i32 %491, i32 %494, !prof !2
  br label %496

496:                                              ; preds = %466, %487
  %497 = phi i32 [ %495, %487 ], [ %477, %466 ]
  %498 = icmp sgt i32 %497, 0
  %499 = select i1 %498, i32 %497, i32 0
  br label %599

500:                                              ; preds = %57, %57, %57, %57
  %501 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %502 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %501, align 8
  %503 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %502, i64 0, i32 0, i32 9
  %504 = bitcast [20 x i8]* %503 to i160*
  %505 = load i160, i160* %504, align 8
  %506 = and i160 %505, 15211807202738752817960438464512
  %507 = icmp eq i160 %506, 0
  %508 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %509 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %508, align 8
  %510 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %509, i64 165
  %511 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %510, align 8
  %512 = call i64 %511(%"class.blink::LayoutBox"* %0) #20
  %513 = lshr i64 %512, 32
  %514 = select i1 %507, i64 %513, i64 %512
  %515 = trunc i64 %514 to i32
  %516 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %517 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %518 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %517, align 8
  %519 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %518, i64 122
  %520 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %519, align 8
  %521 = call i32 %520(%"class.blink::LayoutBoxModelObject"* %516) #20
  %522 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %517, align 8
  %523 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %522, i64 123
  %524 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %523, align 8
  %525 = call i32 %524(%"class.blink::LayoutBoxModelObject"* %516) #20
  %526 = icmp slt i32 %525, 0
  %527 = select i1 %526, i32 -2147483648, i32 2147483647
  %528 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %521, i32 %525) #20
  %529 = extractvalue { i32, i1 } %528, 1
  %530 = extractvalue { i32, i1 } %528, 0
  %531 = select i1 %529, i32 %527, i32 %530, !prof !2
  %532 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %517, align 8
  %533 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %532, i64 118
  %534 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %533, align 8
  %535 = call i32 %534(%"class.blink::LayoutBoxModelObject"* %516) #20
  %536 = icmp slt i32 %535, 0
  %537 = select i1 %536, i32 -2147483648, i32 2147483647
  %538 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %531, i32 %535) #20
  %539 = extractvalue { i32, i1 } %538, 1
  %540 = extractvalue { i32, i1 } %538, 0
  %541 = select i1 %539, i32 %537, i32 %540, !prof !2
  %542 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %517, align 8
  %543 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %542, i64 119
  %544 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %543, align 8
  %545 = call i32 %544(%"class.blink::LayoutBoxModelObject"* %516) #20
  %546 = icmp slt i32 %545, 0
  %547 = select i1 %546, i32 -2147483648, i32 2147483647
  %548 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %541, i32 %545) #20
  %549 = extractvalue { i32, i1 } %548, 1
  %550 = extractvalue { i32, i1 } %548, 0
  %551 = select i1 %549, i32 %547, i32 %550, !prof !2
  %552 = call i32 @_ZNK5blink9LayoutBox41ComputeIntrinsicLogicalContentHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitES5_(%"class.blink::LayoutBox"* %0, i32 %1, %"class.blink::Length"* dereferenceable(8) %2, i32 %515, i32 %551)
  %553 = sitofp i32 %552 to float
  %554 = fmul float %553, 1.562500e-02
  %555 = fmul float %554, 6.400000e+01
  %556 = fcmp ult float %555, 0xC1E0000000000000
  %557 = fcmp ugt float %555, 0x41DFFFFFE0000000
  %558 = fcmp ogt float %555, 0xC1E0000000000000
  %559 = select i1 %558, float %555, float 0xC1E0000000000000
  %560 = fptosi float %559 to i32
  %561 = select i1 %556, i32 0, i32 2147483647
  %562 = select i1 %557, i32 %561, i32 %560
  %563 = bitcast %"class.blink::ComputedStyle"** %501 to %"class.blink::ComputedStyleBase"**
  %564 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %563, align 8
  %565 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %564, i64 0, i32 5, i32 0, i32 0
  %566 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %565, align 8
  %567 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %566, i64 0, i32 11
  %568 = load i8, i8* %567, align 4
  %569 = and i8 %568, 2
  %570 = icmp eq i8 %569, 0
  br i1 %570, label %571, label %579

571:                                              ; preds = %500
  %572 = call i32 @_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %516) #20
  %573 = icmp sgt i32 %572, -1
  %574 = select i1 %573, i32 -2147483648, i32 2147483647
  %575 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %562, i32 %572) #20
  %576 = extractvalue { i32, i1 } %575, 1
  %577 = extractvalue { i32, i1 } %575, 0
  %578 = select i1 %576, i32 %574, i32 %577, !prof !2
  br label %579

579:                                              ; preds = %500, %571
  %580 = phi i32 [ %578, %571 ], [ %562, %500 ]
  %581 = icmp sgt i32 %580, 0
  %582 = select i1 %581, i32 %580, i32 0
  br label %599

583:                                              ; preds = %39, %43, %57
  %584 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %585 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %584, align 8
  %586 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %585, i64 0, i32 0, i32 9
  %587 = bitcast [20 x i8]* %586 to i160*
  %588 = load i160, i160* %587, align 8
  %589 = and i160 %588, 15211807202738752817960438464512
  %590 = icmp eq i160 %589, 0
  %591 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %592 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %591, align 8
  %593 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %592, i64 165
  %594 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %593, align 8
  %595 = call i64 %594(%"class.blink::LayoutBox"* %0) #20
  %596 = lshr i64 %595, 32
  %597 = select i1 %590, i64 %596, i64 %595
  %598 = trunc i64 %597 to i32
  br label %599

599:                                              ; preds = %405, %496, %14, %583, %579, %98
  %600 = phi i32 [ %598, %583 ], [ %582, %579 ], [ %101, %98 ], [ 0, %14 ], [ %499, %496 ], [ %431, %405 ]
  ret i32 %600
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox27LogicalHeightComputesAsNoneENS_8SizeTypeE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::Length"*
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %6 = icmp eq i32 %1, 1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 0
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 5, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 6
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 7
  %18 = select i1 %13, %"class.blink::Length"* %16, %"class.blink::Length"* %17
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 4
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %15, i64 0, i32 5
  %21 = select i1 %13, %"class.blink::Length"* %19, %"class.blink::Length"* %20
  %22 = select i1 %6, %"class.blink::Length"* %18, %"class.blink::Length"* %21
  %23 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %22, i64 0, i32 2
  %24 = load i8, i8* %23, align 1
  %25 = add i8 %24, -3
  %26 = icmp ult i8 %25, 5
  br i1 %26, label %152, label %27

27:                                               ; preds = %152, %2
  %28 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #20
  %29 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  store i64 -6148914691236517206, i64* %3, align 8
  br i1 %6, label %30, label %31

30:                                               ; preds = %27
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 7, i1 false) #20, !alias.scope !288
  br label %35

31:                                               ; preds = %27
  %32 = bitcast i64* %3 to i32*
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 3
  %34 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 1
  store i32 0, i32* %32, align 8, !alias.scope !291
  store i8 0, i8* %34, align 4, !alias.scope !291
  store i8 12, i8* %29, align 1, !alias.scope !291
  store i8 0, i8* %33, align 2, !alias.scope !291
  br label %35

35:                                               ; preds = %31, %30
  %36 = phi i8 [ 12, %31 ], [ 0, %30 ]
  %37 = load i8, i8* %23, align 1
  %38 = icmp eq i8 %37, %36
  br i1 %38, label %39, label %63

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %22, i64 0, i32 1
  %41 = load i8, i8* %40, align 4, !range !4
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %63

43:                                               ; preds = %39
  %44 = icmp eq i8 %36, 12
  br i1 %44, label %146, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %22, i64 0, i32 3
  %47 = load i8, i8* %46, align 2, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.blink::Length"* %22 to float*
  %51 = load float, float* %50, align 4
  br label %56

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %22, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = sitofp i32 %54 to float
  br label %56

56:                                               ; preds = %52, %49
  %57 = phi float [ %51, %49 ], [ %55, %52 ]
  %58 = fcmp oeq float %57, 0.000000e+00
  br i1 %58, label %146, label %59

59:                                               ; preds = %56
  %60 = call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %22, %"class.blink::Length"* nonnull dereferenceable(8) %4) #20
  br i1 %60, label %146, label %61

61:                                               ; preds = %59
  %62 = load i8, i8* %23, align 1
  br label %63

63:                                               ; preds = %61, %35, %39
  %64 = phi i8 [ %62, %61 ], [ %37, %35 ], [ %36, %39 ]
  switch i8 %64, label %106 [
    i8 8, label %65
    i8 1, label %65
  ]

65:                                               ; preds = %63, %63
  %66 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %67 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %66, align 8
  %68 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %67, null
  br i1 %68, label %69, label %78

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %71 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %70, align 8
  %72 = icmp eq %"struct.blink::LayoutBoxRareData"* %71, null
  br i1 %72, label %106, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %71, i64 0, i32 3
  %75 = load i8, i8* %74, align 8
  %76 = and i8 %75, 2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %106, label %80

78:                                               ; preds = %65
  %79 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %67, i64 0, i32 8, i32 0
  br label %82

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %71, i64 0, i32 5, i32 0
  br label %82

82:                                               ; preds = %78, %80
  %83 = phi i32* [ %79, %78 ], [ %81, %80 ]
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, -64
  br i1 %85, label %146, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %87, align 8
  %89 = icmp eq %"class.blink::Node"* %88, null
  br i1 %89, label %90, label %97

90:                                               ; preds = %86, %90
  %91 = phi %"class.blink::LayoutObject"* [ %93, %90 ], [ %5, %86 ]
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %91, i64 0, i32 7
  %93 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %93, i64 0, i32 6, i32 0, i32 0
  %95 = load %"class.blink::Node"*, %"class.blink::Node"** %94, align 8
  %96 = icmp eq %"class.blink::Node"* %95, null
  br i1 %96, label %90, label %97

97:                                               ; preds = %90, %86
  %98 = phi %"class.blink::Node"* [ %88, %86 ], [ %95, %90 ]
  %99 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %98, i64 0, i32 3, i32 0, i32 0
  %100 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %100, i64 0, i32 2, i32 0, i32 0
  %102 = load %"class.blink::Document"*, %"class.blink::Document"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %102, i64 0, i32 33
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %146

106:                                              ; preds = %73, %63, %69, %97
  %107 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %108 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %107, align 8
  %109 = icmp eq %"class.blink::LayoutObject"* %108, null
  br i1 %109, label %139, label %110

110:                                              ; preds = %106
  %111 = bitcast %"class.blink::LayoutObject"* %108 to i1 (%"class.blink::LayoutObject"*, i32)***
  %112 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %111, align 8
  %113 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %112, i64 92
  %114 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %113, align 8
  %115 = call zeroext i1 %114(%"class.blink::LayoutObject"* nonnull %108, i32 24) #20
  br i1 %115, label %116, label %139

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %108, i64 3, i32 4, i32 0, i64 4
  %118 = bitcast i8* %117 to i32*
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %139, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %123 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %122, align 8
  %124 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %123, null
  br i1 %124, label %125, label %146

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %127 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %126, align 8
  %128 = icmp eq %"struct.blink::LayoutBoxRareData"* %127, null
  br i1 %128, label %139, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %127, i64 0, i32 3
  %131 = load i8, i8* %130, align 8
  %132 = and i8 %131, 2
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %146

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %127, i64 0, i32 3
  %136 = load i8, i8* %135, align 8
  %137 = and i8 %136, 4
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %139, label %146

139:                                              ; preds = %125, %134, %116, %106, %110
  %140 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %141 = call %"class.blink::LayoutBlock"* @_ZNK5blink20LayoutBoxModelObject37ContainingBlockForAutoHeightDetectionERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %140, %"class.blink::Length"* dereferenceable(8) %22) #20
  %142 = icmp eq %"class.blink::LayoutBlock"* %141, null
  br i1 %142, label %146, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %141, i64 0, i32 0, i32 0
  %145 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject44HasAutoHeightOrContainingBlockWithAutoHeightENS0_28RegisterPercentageDescendantE(%"class.blink::LayoutBoxModelObject"* %144, i32 1) #20
  br label %146

146:                                              ; preds = %134, %129, %121, %43, %56, %143, %139, %97, %82, %59
  %147 = phi i1 [ true, %59 ], [ true, %82 ], [ false, %97 ], [ false, %134 ], [ false, %129 ], [ %145, %143 ], [ false, %139 ], [ true, %56 ], [ true, %43 ], [ false, %121 ]
  %148 = load i8, i8* %29, align 1
  %149 = icmp eq i8 %148, 8
  br i1 %149, label %150, label %151

150:                                              ; preds = %146
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #20
  br label %151

151:                                              ; preds = %146, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #20
  ret i1 %147

152:                                              ; preds = %2
  %153 = lshr i8 23, %25
  %154 = and i8 %153, 1
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %27, label %156

156:                                              ; preds = %152
  ret i1 true
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink20LayoutBoxModelObject37ContainingBlockForAutoHeightDetectionERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject44HasAutoHeightOrContainingBlockWithAutoHeightENS0_28RegisterPercentageDescendantE(%"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink17LayoutFlexibleBox46UseOverrideLogicalHeightForPerentageResolutionERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox27AvailableLogicalHeightUsingERKNS_6LengthENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"*, %"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #9 align 2 {
  %4 = alloca <2 x float>, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca %"class.blink::Length"*, align 8
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = alloca %"class.blink::Length"*, align 8
  %18 = alloca %"class.blink::Length"*, align 8
  %19 = alloca %"struct.blink::NGBoxStrut", align 4
  %20 = alloca i64, align 8
  %21 = bitcast i64* %20 to %"struct.blink::LogicalSize"*
  %22 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %23 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %24 = icmp eq %"class.blink::LayoutBox"* %0, null
  %25 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  br i1 %24, label %51, label %26

26:                                               ; preds = %3
  %27 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %25, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %27, i64 92
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::LayoutObject"* %23, i32 55) #20
  br i1 %30, label %31, label %51

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %33 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %32 to i96*
  %34 = load i96, i96* %33, align 4
  %35 = trunc i96 %34 to i32
  %36 = icmp slt i32 %35, 0
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 1, i32 0, i32 0, i32 9
  %38 = bitcast %"class.blink::LayoutObject"** %37 to %"class.blink::EmbeddedContentView"**
  %39 = load %"class.blink::EmbeddedContentView"*, %"class.blink::EmbeddedContentView"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::EmbeddedContentView", %"class.blink::EmbeddedContentView"* %39, i64 0, i32 1, i32 1
  %41 = bitcast %"class.blink::IntSize"* %40 to i64*
  %42 = load i64, i64* %41, align 4
  %43 = lshr i64 %42, 32
  %44 = select i1 %36, i64 %43, i64 %42
  %45 = trunc i64 %44 to i32
  %46 = icmp sgt i32 %45, 33554431
  br i1 %46, label %941, label %47

47:                                               ; preds = %31
  %48 = icmp slt i32 %45, -33554432
  %49 = shl i32 %45, 6
  %50 = select i1 %48, i32 -2147483648, i32 %49
  ret i32 %50

51:                                               ; preds = %3, %26
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %25, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, i64 92
  %54 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* %23, i32 46) #20
  br i1 %55, label %56, label %136

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %58 = load i8, i8* %57, align 1
  switch i8 %58, label %136 [
    i8 0, label %59
    i8 8, label %59
    i8 1, label %59
  ]

59:                                               ; preds = %56, %56, %56
  %60 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %61 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %60, align 8
  %62 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %65 = load i8, i8* %64, align 4, !range !4
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %83

67:                                               ; preds = %63, %59
  %68 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %69 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %68, align 8
  %70 = icmp eq %"struct.blink::LayoutBoxRareData"* %69, null
  br i1 %70, label %116, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %69, i64 0, i32 2, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, -64
  br i1 %74, label %116, label %75

75:                                               ; preds = %71
  br i1 %62, label %85, label %76

76:                                               ; preds = %75
  %77 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %78 = load i8, i8* %77, align 4, !range !4
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %82 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %81, align 8
  br label %85

83:                                               ; preds = %63, %76
  %84 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %88

85:                                               ; preds = %80, %75
  %86 = phi %"struct.blink::LayoutBoxRareData"* [ %82, %80 ], [ %69, %75 ]
  %87 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %86, i64 0, i32 2, i32 0
  br label %88

88:                                               ; preds = %83, %85
  %89 = phi i32* [ %84, %83 ], [ %87, %85 ]
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %92 = tail call i32 @_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %91)
  %93 = icmp sgt i32 %92, -1
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %90, i32 %92) #20
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !2
  %99 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %0)
  %100 = extractvalue { i64, i64 } %99, 1
  %101 = trunc i64 %100 to i32
  %102 = lshr i64 %100, 32
  %103 = trunc i64 %102 to i32
  %104 = icmp slt i32 %103, 0
  %105 = select i1 %104, i32 -2147483648, i32 2147483647
  %106 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %101, i32 %103) #20
  %107 = extractvalue { i32, i1 } %106, 1
  %108 = extractvalue { i32, i1 } %106, 0
  %109 = select i1 %107, i32 %105, i32 %108, !prof !2
  %110 = icmp sgt i32 %109, -1
  %111 = select i1 %110, i32 -2147483648, i32 2147483647
  %112 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %98, i32 %109) #20
  %113 = extractvalue { i32, i1 } %112, 1
  %114 = extractvalue { i32, i1 } %112, 0
  %115 = select i1 %113, i32 %111, i32 %114, !prof !2
  br label %941

116:                                              ; preds = %71, %67
  %117 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %118 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %118, i64 0, i32 0, i32 9
  %120 = bitcast [20 x i8]* %119 to i160*
  %121 = load i160, i160* %120, align 8
  %122 = and i160 %121, 15211807202738752817960438464512
  %123 = icmp eq i160 %122, 0
  %124 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %125 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %126 = select i1 %123, i32* %124, i32* %125
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %129 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %128)
  %130 = icmp sgt i32 %129, -1
  %131 = select i1 %130, i32 -2147483648, i32 2147483647
  %132 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %127, i32 %129) #20
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = select i1 %133, i32 %131, i32 %134, !prof !2
  br label %941

136:                                              ; preds = %56, %51
  %137 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %138 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %137 to i96*
  %139 = load i96, i96* %138, align 4
  %140 = and i96 %139, 134217728
  %141 = icmp ne i96 %140, 0
  %142 = and i96 %139, 113336795588871485128704
  %143 = icmp eq i96 %142, 75557863725914323419136
  %144 = or i1 %141, %143
  br i1 %144, label %346, label %145

145:                                              ; preds = %136
  %146 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %147 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %146, align 8
  %148 = icmp eq %"class.blink::LayoutObject"* %147, null
  br i1 %148, label %346, label %149

149:                                              ; preds = %145
  %150 = bitcast %"class.blink::LayoutObject"* %147 to i1 (%"class.blink::LayoutObject"*)***
  %151 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %150, align 8
  %152 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %151, i64 80
  %153 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %152, align 8
  %154 = tail call zeroext i1 %153(%"class.blink::LayoutObject"* nonnull %147) #20
  br i1 %154, label %155, label %346

155:                                              ; preds = %149
  %156 = load i96, i96* %138, align 4
  %157 = and i96 %156, 134217728
  %158 = icmp ne i96 %157, 0
  %159 = and i96 %156, 113336795588871485128704
  %160 = icmp eq i96 %159, 75557863725914323419136
  %161 = or i1 %158, %160
  br i1 %161, label %219, label %162

162:                                              ; preds = %155
  %163 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %146, align 8
  %164 = icmp eq %"class.blink::LayoutObject"* %163, null
  br i1 %164, label %219, label %165

165:                                              ; preds = %162
  %166 = bitcast %"class.blink::LayoutObject"* %163 to i1 (%"class.blink::LayoutObject"*)***
  %167 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %166, align 8
  %168 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %167, i64 78
  %169 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %168, align 8
  %170 = tail call zeroext i1 %169(%"class.blink::LayoutObject"* nonnull %163) #20
  br i1 %170, label %171, label %219

171:                                              ; preds = %165
  %172 = bitcast %"class.blink::LayoutObject"** %146 to %"class.blink::LayoutFlexibleBox"**
  %173 = load %"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutFlexibleBox"** %172, align 8
  %174 = tail call zeroext i1 @_ZNK5blink17LayoutFlexibleBox46UseOverrideLogicalHeightForPerentageResolutionERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %173, %"class.blink::LayoutBox"* dereferenceable(216) %0) #20
  br i1 %174, label %175, label %346

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %177 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %176, align 8
  %178 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %177, null
  br i1 %178, label %185, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %181 = load i8, i8* %180, align 4, !range !4
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %189

185:                                              ; preds = %179, %175
  %186 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %187 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %186, align 8
  %188 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %187, i64 0, i32 2, i32 0
  br label %189

189:                                              ; preds = %183, %185
  %190 = phi i32* [ %184, %183 ], [ %188, %185 ]
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %193 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %192) #20
  %194 = icmp sgt i32 %193, -1
  %195 = select i1 %194, i32 -2147483648, i32 2147483647
  %196 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %191, i32 %193) #20
  %197 = extractvalue { i32, i1 } %196, 1
  %198 = extractvalue { i32, i1 } %196, 0
  %199 = select i1 %197, i32 %195, i32 %198, !prof !2
  %200 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %0) #20
  %201 = extractvalue { i64, i64 } %200, 1
  %202 = trunc i64 %201 to i32
  %203 = lshr i64 %201, 32
  %204 = trunc i64 %203 to i32
  %205 = icmp slt i32 %204, 0
  %206 = select i1 %205, i32 -2147483648, i32 2147483647
  %207 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %202, i32 %204) #20
  %208 = extractvalue { i32, i1 } %207, 1
  %209 = extractvalue { i32, i1 } %207, 0
  %210 = select i1 %208, i32 %206, i32 %209, !prof !2
  %211 = icmp sgt i32 %210, -1
  %212 = select i1 %211, i32 -2147483648, i32 2147483647
  %213 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %199, i32 %210) #20
  %214 = extractvalue { i32, i1 } %213, 1
  %215 = extractvalue { i32, i1 } %213, 0
  %216 = select i1 %214, i32 %212, i32 %215, !prof !2
  %217 = icmp sgt i32 %216, 0
  %218 = select i1 %217, i32 %216, i32 0
  br label %941

219:                                              ; preds = %155, %162, %165
  %220 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %221 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %220, align 8
  %222 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %221, null
  br i1 %222, label %223, label %232

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %225 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %224, align 8
  %226 = icmp eq %"struct.blink::LayoutBoxRareData"* %225, null
  br i1 %226, label %258, label %227

227:                                              ; preds = %223
  %228 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %225, i64 0, i32 3
  %229 = load i8, i8* %228, align 8
  %230 = and i8 %229, 1
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %258, label %232

232:                                              ; preds = %227, %219
  %233 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %146, align 8
  %234 = icmp eq %"class.blink::LayoutObject"* %233, null
  br i1 %234, label %253, label %235

235:                                              ; preds = %232
  %236 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %233, i64 0, i32 4
  %237 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %236 to i96*
  %238 = load i96, i96* %237, align 4
  %239 = load i96, i96* %138, align 4
  %240 = xor i96 %239, %238
  %241 = trunc i96 %240 to i32
  %242 = icmp slt i32 %241, 0
  br i1 %242, label %243, label %253

243:                                              ; preds = %235
  br i1 %222, label %246, label %244

244:                                              ; preds = %243
  %245 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %221, i64 0, i32 7, i32 0
  br label %250

246:                                              ; preds = %243
  %247 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %248 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %247, align 8
  %249 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %248, i64 0, i32 4, i32 0
  br label %250

250:                                              ; preds = %244, %246
  %251 = phi i32* [ %245, %244 ], [ %249, %246 ]
  %252 = load i32, i32* %251, align 4
  br label %941

253:                                              ; preds = %232, %235
  br i1 %222, label %258, label %254

254:                                              ; preds = %253
  %255 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %256 = load i8, i8* %255, align 4, !range !4
  %257 = icmp eq i8 %256, 0
  br i1 %257, label %258, label %267

258:                                              ; preds = %227, %223, %254, %253
  %259 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %260 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %259, align 8
  %261 = icmp eq %"struct.blink::LayoutBoxRareData"* %260, null
  br i1 %261, label %311, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %260, i64 0, i32 2, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = icmp eq i32 %264, -64
  br i1 %265, label %311, label %266

266:                                              ; preds = %262
  br i1 %222, label %312, label %267

267:                                              ; preds = %254, %266
  %268 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %221, i64 0, i32 3
  %269 = load i8, i8* %268, align 8, !range !4
  %270 = icmp eq i8 %269, 0
  br i1 %270, label %346, label %271

271:                                              ; preds = %267
  %272 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %273 = load i8, i8* %272, align 4, !range !4
  %274 = icmp eq i8 %273, 0
  br i1 %274, label %277, label %275

275:                                              ; preds = %271
  %276 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  br label %281

277:                                              ; preds = %271
  %278 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %279 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %278, align 8
  %280 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %279, i64 0, i32 2, i32 0
  br label %281

281:                                              ; preds = %275, %277
  %282 = phi i32* [ %276, %275 ], [ %280, %277 ]
  %283 = load i32, i32* %282, align 4
  %284 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %285 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %284) #20
  %286 = icmp sgt i32 %285, -1
  %287 = select i1 %286, i32 -2147483648, i32 2147483647
  %288 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %283, i32 %285) #20
  %289 = extractvalue { i32, i1 } %288, 1
  %290 = extractvalue { i32, i1 } %288, 0
  %291 = select i1 %289, i32 %287, i32 %290, !prof !2
  %292 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %0) #20
  %293 = extractvalue { i64, i64 } %292, 1
  %294 = trunc i64 %293 to i32
  %295 = lshr i64 %293, 32
  %296 = trunc i64 %295 to i32
  %297 = icmp slt i32 %296, 0
  %298 = select i1 %297, i32 -2147483648, i32 2147483647
  %299 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %294, i32 %296) #20
  %300 = extractvalue { i32, i1 } %299, 1
  %301 = extractvalue { i32, i1 } %299, 0
  %302 = select i1 %300, i32 %298, i32 %301, !prof !2
  %303 = icmp sgt i32 %302, -1
  %304 = select i1 %303, i32 -2147483648, i32 2147483647
  %305 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %291, i32 %302) #20
  %306 = extractvalue { i32, i1 } %305, 1
  %307 = extractvalue { i32, i1 } %305, 0
  %308 = select i1 %306, i32 %304, i32 %307, !prof !2
  %309 = icmp sgt i32 %308, 0
  %310 = select i1 %309, i32 %308, i32 0
  br label %941

311:                                              ; preds = %262, %258
  br i1 %222, label %312, label %346

312:                                              ; preds = %266, %311
  %313 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %314 = load i32, i32* %313, align 4
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %346, label %316

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8
  %318 = tail call dereferenceable(8) %class.scoped_refptr.3247* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %317, i32 0) #20
  %319 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %318, i64 0, i32 0
  %320 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %319, align 8
  %321 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %320, i64 0, i32 3, i32 0
  %322 = bitcast %"class.blink::NGPhysicalFragment"** %321 to %"class.blink::NGPhysicalBoxFragment"**
  %323 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %322, align 8
  %324 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %323, i64 0, i32 1
  %325 = bitcast i24* %324 to i32*
  %326 = load i32, i32* %325, align 8
  %327 = and i32 %326, 16384
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %346, label %329

329:                                              ; preds = %316
  %330 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %323, i64 0, i32 0, i32 4, i32 0
  %331 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %330, align 8
  %332 = icmp ne %"class.blink::NGBreakToken"* %331, null
  %333 = icmp eq %"class.blink::NGLayoutResult"* %320, null
  %334 = or i1 %333, %332
  br i1 %334, label %346, label %335

335:                                              ; preds = %329
  %336 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %320, i64 0, i32 2, i32 3, i32 0
  %337 = load i32, i32* %336, align 8
  %338 = and i32 %337, 12582912
  %339 = icmp eq i32 %338, 4194304
  br i1 %339, label %340, label %346

340:                                              ; preds = %335
  %341 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %320, i64 0, i32 2
  %342 = bitcast %"class.blink::NGConstraintSpace"* %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = lshr i64 %343, 32
  %345 = trunc i64 %344 to i32
  br label %941

346:                                              ; preds = %335, %267, %329, %312, %316, %136, %145, %171, %311, %149
  %347 = tail call zeroext i1 @_ZNK5blink9LayoutBox41ShouldComputeLogicalHeightFromAspectRatioEv(%"class.blink::LayoutBox"* %0)
  br i1 %347, label %348, label %656

348:                                              ; preds = %346
  %349 = bitcast %"struct.blink::NGBoxStrut"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %349) #20
  %350 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %19, i64 0, i32 0, i32 0
  %351 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %19, i64 0, i32 1, i32 0
  %352 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %19, i64 0, i32 2, i32 0
  %353 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %19, i64 0, i32 3, i32 0
  %354 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %355 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %356 = bitcast %"struct.blink::NGBoxStrut"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %356, i8 -86, i64 16, i1 false)
  %357 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %355, align 8, !noalias !296
  %358 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %357, i64 0, i32 0, i32 9
  %359 = bitcast [20 x i8]* %358 to i160*
  %360 = load i160, i160* %359, align 8, !noalias !296
  %361 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  %362 = and i160 %360, 15211807202738752817960438464512
  %363 = icmp eq i160 %362, 0
  %364 = and i160 %360, 41538374868278621028243970633760768
  %365 = icmp eq i160 %364, 0
  %366 = select i1 %365, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %367 = select i1 %365, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %368 = select i1 %363, { i64, i64 } %367, { i64, i64 } %366
  %369 = select i1 %363, { i64, i64 } %367, { i64, i64 } %366
  %370 = extractvalue { i64, i64 } %368, 0
  %371 = extractvalue { i64, i64 } %369, 1
  %372 = getelementptr inbounds i8, i8* %361, i64 %371
  %373 = bitcast i8* %372 to %"class.blink::LayoutBoxModelObject"*
  %374 = and i64 %370, 1
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %383, label %376

376:                                              ; preds = %348
  %377 = bitcast i8* %372 to i8**
  %378 = load i8*, i8** %377, align 8
  %379 = add i64 %370, -1
  %380 = getelementptr i8, i8* %378, i64 %379
  %381 = bitcast i8* %380 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %382 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %381, align 8
  br label %385

383:                                              ; preds = %348
  %384 = inttoptr i64 %370 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %385

385:                                              ; preds = %376, %383
  %386 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %382, %376 ], [ %384, %383 ]
  %387 = tail call i32 %386(%"class.blink::LayoutBoxModelObject"* %373) #20
  %388 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %355, align 8
  %389 = bitcast %"class.blink::Length"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %389)
  %390 = bitcast %"class.blink::Length"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %390)
  %391 = bitcast %"class.blink::Length"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %391)
  %392 = bitcast %"class.blink::Length"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %392)
  %393 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %388, i64 0, i32 0, i32 9
  %394 = bitcast [20 x i8]* %393 to i160*
  %395 = load i160, i160* %394, align 8, !noalias !299
  %396 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %388, i64 0, i32 0, i32 7, i32 0, i32 0
  %397 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %396, align 8, !noalias !299
  %398 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %397, i64 0, i32 16
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %397, i64 0, i32 15
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %397, i64 0, i32 13
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %397, i64 0, i32 14
  store %"class.blink::Length"* %398, %"class.blink::Length"** %15, align 8, !alias.scope !299
  store %"class.blink::Length"* %399, %"class.blink::Length"** %16, align 8, !alias.scope !299
  store %"class.blink::Length"* %400, %"class.blink::Length"** %17, align 8, !alias.scope !299
  store %"class.blink::Length"* %401, %"class.blink::Length"** %18, align 8, !alias.scope !299
  %402 = and i160 %395, 15211807202738752817960438464512
  %403 = icmp eq i160 %402, 0
  %404 = and i160 %395, 41538374868278621028243970633760768
  %405 = icmp eq i160 %404, 0
  %406 = select i1 %405, %"class.blink::Length"** %18, %"class.blink::Length"** %16
  %407 = select i1 %405, %"class.blink::Length"** %15, %"class.blink::Length"** %17
  %408 = select i1 %403, %"class.blink::Length"** %406, %"class.blink::Length"** %407
  %409 = load %"class.blink::Length"*, %"class.blink::Length"** %408, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %389)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %390)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %391)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %392)
  %410 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %354, %"class.blink::Length"* dereferenceable(8) %409) #20
  %411 = icmp slt i32 %410, 0
  %412 = select i1 %411, i32 -2147483648, i32 2147483647
  %413 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %387, i32 %410) #20
  %414 = extractvalue { i32, i1 } %413, 1
  %415 = extractvalue { i32, i1 } %413, 0
  %416 = select i1 %414, i32 %412, i32 %415, !prof !2
  %417 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %355, align 8, !noalias !302
  %418 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %417, i64 0, i32 0, i32 9
  %419 = bitcast [20 x i8]* %418 to i160*
  %420 = load i160, i160* %419, align 8, !noalias !302
  %421 = and i160 %420, 15211807202738752817960438464512
  %422 = icmp eq i160 %421, 0
  %423 = and i160 %420, 41538374868278621028243970633760768
  %424 = icmp eq i160 %423, 0
  %425 = select i1 %424, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %426 = select i1 %424, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %427 = select i1 %422, { i64, i64 } %426, { i64, i64 } %425
  %428 = select i1 %422, { i64, i64 } %426, { i64, i64 } %425
  %429 = extractvalue { i64, i64 } %427, 0
  %430 = extractvalue { i64, i64 } %428, 1
  %431 = getelementptr inbounds i8, i8* %361, i64 %430
  %432 = bitcast i8* %431 to %"class.blink::LayoutBoxModelObject"*
  %433 = and i64 %429, 1
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %442, label %435

435:                                              ; preds = %385
  %436 = bitcast i8* %431 to i8**
  %437 = load i8*, i8** %436, align 8
  %438 = add i64 %429, -1
  %439 = getelementptr i8, i8* %437, i64 %438
  %440 = bitcast i8* %439 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %441 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %440, align 8
  br label %444

442:                                              ; preds = %385
  %443 = inttoptr i64 %429 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %444

444:                                              ; preds = %435, %442
  %445 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %441, %435 ], [ %443, %442 ]
  %446 = tail call i32 %445(%"class.blink::LayoutBoxModelObject"* %432) #20
  %447 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %355, align 8
  %448 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %448)
  %449 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %449)
  %450 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %450)
  %451 = bitcast %"class.blink::Length"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %451)
  %452 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %447, i64 0, i32 0, i32 9
  %453 = bitcast [20 x i8]* %452 to i160*
  %454 = load i160, i160* %453, align 8, !noalias !305
  %455 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %447, i64 0, i32 0, i32 7, i32 0, i32 0
  %456 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %455, align 8, !noalias !305
  %457 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %456, i64 0, i32 16
  %458 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %456, i64 0, i32 15
  %459 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %456, i64 0, i32 13
  %460 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %456, i64 0, i32 14
  store %"class.blink::Length"* %457, %"class.blink::Length"** %11, align 8, !alias.scope !305
  store %"class.blink::Length"* %458, %"class.blink::Length"** %12, align 8, !alias.scope !305
  store %"class.blink::Length"* %459, %"class.blink::Length"** %13, align 8, !alias.scope !305
  store %"class.blink::Length"* %460, %"class.blink::Length"** %14, align 8, !alias.scope !305
  %461 = and i160 %454, 15211807202738752817960438464512
  %462 = icmp eq i160 %461, 0
  %463 = and i160 %454, 41538374868278621028243970633760768
  %464 = icmp eq i160 %463, 0
  %465 = select i1 %464, %"class.blink::Length"** %12, %"class.blink::Length"** %14
  %466 = select i1 %464, %"class.blink::Length"** %13, %"class.blink::Length"** %11
  %467 = select i1 %462, %"class.blink::Length"** %465, %"class.blink::Length"** %466
  %468 = load %"class.blink::Length"*, %"class.blink::Length"** %467, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %448)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %449)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %450)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %451)
  %469 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %354, %"class.blink::Length"* dereferenceable(8) %468) #20
  %470 = icmp slt i32 %469, 0
  %471 = select i1 %470, i32 -2147483648, i32 2147483647
  %472 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %446, i32 %469) #20
  %473 = extractvalue { i32, i1 } %472, 1
  %474 = extractvalue { i32, i1 } %472, 0
  %475 = select i1 %473, i32 %471, i32 %474, !prof !2
  %476 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %355, align 8, !noalias !308
  %477 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %476, i64 0, i32 0, i32 9
  %478 = bitcast [20 x i8]* %477 to i160*
  %479 = load i160, i160* %478, align 8, !noalias !308
  %480 = lshr i160 %479, 102
  %481 = trunc i160 %480 to i8
  %482 = and i8 %481, 3
  switch i8 %482, label %483 [
    i8 0, label %492
    i8 1, label %484
  ]

483:                                              ; preds = %444
  br label %484

484:                                              ; preds = %483, %444
  %485 = phi { i64, i64 } [ { i64 993, i64 0 }, %483 ], [ { i64 1001, i64 0 }, %444 ]
  %486 = extractvalue { i64, i64 } %485, 0
  %487 = extractvalue { i64, i64 } %485, 1
  %488 = getelementptr inbounds i8, i8* %361, i64 %487
  %489 = bitcast i8* %488 to %"class.blink::LayoutBoxModelObject"*
  %490 = and i64 %486, 1
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %502, label %492

492:                                              ; preds = %484, %444
  %493 = phi %"class.blink::LayoutBoxModelObject"* [ %489, %484 ], [ %354, %444 ]
  %494 = phi i8* [ %488, %484 ], [ %361, %444 ]
  %495 = phi i64 [ %486, %484 ], [ 977, %444 ]
  %496 = bitcast i8* %494 to i8**
  %497 = load i8*, i8** %496, align 8
  %498 = add i64 %495, -1
  %499 = getelementptr i8, i8* %497, i64 %498
  %500 = bitcast i8* %499 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %501 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %500, align 8
  br label %504

502:                                              ; preds = %484
  %503 = inttoptr i64 %486 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %504

504:                                              ; preds = %492, %502
  %505 = phi %"class.blink::LayoutBoxModelObject"* [ %493, %492 ], [ %489, %502 ]
  %506 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %501, %492 ], [ %503, %502 ]
  %507 = tail call i32 %506(%"class.blink::LayoutBoxModelObject"* %505) #20
  %508 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %355, align 8
  %509 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %509)
  %510 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %510)
  %511 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %511)
  %512 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %508, i64 0, i32 0, i32 9
  %513 = bitcast [20 x i8]* %512 to i160*
  %514 = load i160, i160* %513, align 8, !noalias !311
  %515 = lshr i160 %514, 102
  %516 = trunc i160 %515 to i8
  %517 = and i8 %516, 3
  %518 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %508, i64 0, i32 0, i32 7, i32 0, i32 0
  %519 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %518, align 8, !noalias !311
  %520 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %519, i64 0, i32 16
  %521 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %519, i64 0, i32 15
  %522 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %519, i64 0, i32 14
  store %"class.blink::Length"* %520, %"class.blink::Length"** %8, align 8, !alias.scope !311
  store %"class.blink::Length"* %521, %"class.blink::Length"** %9, align 8, !alias.scope !311
  store %"class.blink::Length"* %522, %"class.blink::Length"** %10, align 8, !alias.scope !311
  %523 = icmp eq i8 %517, 0
  %524 = icmp eq i8 %517, 1
  %525 = select i1 %524, %"class.blink::Length"** %9, %"class.blink::Length"** %10
  %526 = select i1 %523, %"class.blink::Length"** %8, %"class.blink::Length"** %525
  %527 = load %"class.blink::Length"*, %"class.blink::Length"** %526, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %509)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %510)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %511)
  %528 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %354, %"class.blink::Length"* dereferenceable(8) %527) #20
  %529 = icmp slt i32 %528, 0
  %530 = select i1 %529, i32 -2147483648, i32 2147483647
  %531 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %507, i32 %528) #20
  %532 = extractvalue { i32, i1 } %531, 1
  %533 = extractvalue { i32, i1 } %531, 0
  %534 = select i1 %532, i32 %530, i32 %533, !prof !2
  %535 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %355, align 8, !noalias !314
  %536 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %535, i64 0, i32 0, i32 9
  %537 = bitcast [20 x i8]* %536 to i160*
  %538 = load i160, i160* %537, align 8, !noalias !314
  %539 = lshr i160 %538, 102
  %540 = trunc i160 %539 to i8
  %541 = and i8 %540, 3
  switch i8 %541, label %542 [
    i8 0, label %551
    i8 1, label %543
  ]

542:                                              ; preds = %504
  br label %543

543:                                              ; preds = %542, %504
  %544 = phi { i64, i64 } [ { i64 1001, i64 0 }, %542 ], [ { i64 993, i64 0 }, %504 ]
  %545 = extractvalue { i64, i64 } %544, 0
  %546 = extractvalue { i64, i64 } %544, 1
  %547 = getelementptr inbounds i8, i8* %361, i64 %546
  %548 = bitcast i8* %547 to %"class.blink::LayoutBoxModelObject"*
  %549 = and i64 %545, 1
  %550 = icmp eq i64 %549, 0
  br i1 %550, label %561, label %551

551:                                              ; preds = %543, %504
  %552 = phi %"class.blink::LayoutBoxModelObject"* [ %548, %543 ], [ %354, %504 ]
  %553 = phi i8* [ %547, %543 ], [ %361, %504 ]
  %554 = phi i64 [ %545, %543 ], [ 985, %504 ]
  %555 = bitcast i8* %553 to i8**
  %556 = load i8*, i8** %555, align 8
  %557 = add i64 %554, -1
  %558 = getelementptr i8, i8* %556, i64 %557
  %559 = bitcast i8* %558 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %560 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %559, align 8
  br label %563

561:                                              ; preds = %543
  %562 = inttoptr i64 %545 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %563

563:                                              ; preds = %551, %561
  %564 = phi %"class.blink::LayoutBoxModelObject"* [ %552, %551 ], [ %548, %561 ]
  %565 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %560, %551 ], [ %562, %561 ]
  %566 = tail call i32 %565(%"class.blink::LayoutBoxModelObject"* %564) #20
  %567 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %355, align 8
  %568 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %568)
  %569 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %569)
  %570 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %570)
  %571 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %567, i64 0, i32 0, i32 9
  %572 = bitcast [20 x i8]* %571 to i160*
  %573 = load i160, i160* %572, align 8, !noalias !317
  %574 = lshr i160 %573, 102
  %575 = trunc i160 %574 to i8
  %576 = and i8 %575, 3
  %577 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %567, i64 0, i32 0, i32 7, i32 0, i32 0
  %578 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %577, align 8, !noalias !317
  %579 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %578, i64 0, i32 15
  %580 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %578, i64 0, i32 13
  %581 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %578, i64 0, i32 14
  store %"class.blink::Length"* %579, %"class.blink::Length"** %5, align 8, !alias.scope !317
  store %"class.blink::Length"* %580, %"class.blink::Length"** %6, align 8, !alias.scope !317
  store %"class.blink::Length"* %581, %"class.blink::Length"** %7, align 8, !alias.scope !317
  %582 = icmp eq i8 %576, 0
  %583 = icmp eq i8 %576, 1
  %584 = select i1 %583, %"class.blink::Length"** %7, %"class.blink::Length"** %5
  %585 = select i1 %582, %"class.blink::Length"** %6, %"class.blink::Length"** %584
  %586 = load %"class.blink::Length"*, %"class.blink::Length"** %585, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %568)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %569)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %570)
  %587 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %354, %"class.blink::Length"* dereferenceable(8) %586) #20
  %588 = icmp slt i32 %587, 0
  %589 = select i1 %588, i32 -2147483648, i32 2147483647
  %590 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %566, i32 %587) #20
  %591 = extractvalue { i32, i1 } %590, 1
  %592 = extractvalue { i32, i1 } %590, 0
  %593 = select i1 %591, i32 %589, i32 %592, !prof !2
  store i32 %416, i32* %350, align 4
  store i32 %475, i32* %351, align 4
  store i32 %534, i32* %352, align 4
  store i32 %593, i32* %353, align 4
  %594 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %594) #20
  %595 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %355, align 8
  %596 = bitcast <2 x float>* %4 to %"class.blink::FloatSize"*
  %597 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %597) #20
  %598 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %595, i64 0, i32 0, i32 5, i32 0, i32 0
  %599 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %598, align 8
  %600 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %599, i64 0, i32 1, i32 1
  %601 = bitcast %"class.blink::FloatSize"* %600 to i64*
  %602 = load i64, i64* %601, align 4
  %603 = bitcast <2 x float>* %4 to i64*
  store i64 %602, i64* %603, align 8
  %604 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %595, i64 0, i32 0, i32 9
  %605 = bitcast [20 x i8]* %604 to i160*
  %606 = load i160, i160* %605, align 8
  %607 = and i160 %606, 15211807202738752817960438464512
  %608 = icmp eq i160 %607, 0
  br i1 %608, label %617, label %609

609:                                              ; preds = %563
  %610 = trunc i64 %602 to i32
  %611 = bitcast i32 %610 to float
  %612 = lshr i64 %602, 32
  %613 = trunc i64 %612 to i32
  %614 = bitcast i32 %613 to float
  %615 = insertelement <2 x float> undef, float %614, i32 0
  %616 = insertelement <2 x float> %615, float %611, i32 1
  store <2 x float> %616, <2 x float>* %4, align 8
  br label %617

617:                                              ; preds = %563, %609
  %618 = call i64 @_ZN5blink11LogicalSize24AspectRatioFromFloatSizeERKNS_9FloatSizeE(%"class.blink::FloatSize"* nonnull dereferenceable(8) %596) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %597) #20
  store i64 %618, i64* %20, align 8
  %619 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %355, align 8
  %620 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %619, i64 0, i32 0, i32 5, i32 0, i32 0
  %621 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %620, align 8
  %622 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %621, i64 0, i32 1, i32 1, i32 0
  %623 = load float, float* %622, align 4
  %624 = fcmp oeq float %623, 0.000000e+00
  br i1 %624, label %644, label %625

625:                                              ; preds = %617
  %626 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %621, i64 0, i32 1, i32 1, i32 1
  %627 = load float, float* %626, align 4
  %628 = fcmp oeq float %627, 0.000000e+00
  %629 = fcmp olt float %623, 1.562500e-02
  %630 = or i1 %629, %628
  %631 = fcmp olt float %627, 1.562500e-02
  %632 = or i1 %631, %630
  br i1 %632, label %644, label %633

633:                                              ; preds = %625
  %634 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %621, i64 0, i32 1, i32 0
  %635 = load i8, i8* %634, align 4
  %636 = and i8 %635, 3
  %637 = icmp eq i8 %636, 2
  br i1 %637, label %638, label %644

638:                                              ; preds = %633
  %639 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %621, i64 0, i32 11
  %640 = load i8, i8* %639, align 4
  %641 = lshr i8 %640, 1
  %642 = and i8 %641, 1
  %643 = zext i8 %642 to i32
  br label %644

644:                                              ; preds = %617, %625, %633, %638
  %645 = phi i32 [ %643, %638 ], [ 1, %633 ], [ 1, %625 ], [ 1, %617 ]
  %646 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %619, i64 0, i32 0, i32 9
  %647 = bitcast [20 x i8]* %646 to i160*
  %648 = load i160, i160* %647, align 8
  %649 = and i160 %648, 15211807202738752817960438464512
  %650 = icmp eq i160 %649, 0
  %651 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %652 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %653 = select i1 %650, i32* %651, i32* %652
  %654 = load i32, i32* %653, align 4
  %655 = call i32 @_ZN5blink24BlockSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %19, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %21, i32 %645, i32 %654) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %594) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %349) #20
  br label %941

656:                                              ; preds = %346
  %657 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %658 = load i8, i8* %657, align 1
  switch i8 %658, label %700 [
    i8 8, label %659
    i8 1, label %659
  ]

659:                                              ; preds = %656, %656
  %660 = load i96, i96* %138, align 4
  %661 = and i96 %660, 113336795588871485128704
  %662 = icmp eq i96 %661, 75557863725914323419136
  br i1 %662, label %663, label %700

663:                                              ; preds = %659
  %664 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %23, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %665 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %664, i64 0, i32 0, i32 0
  %666 = tail call i32 @_ZNK5blink9LayoutBox41ContainingBlockLogicalHeightForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutBoxModelObject"* %665, i1 zeroext true)
  %667 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %1, i32 %666) #20
  %668 = sitofp i32 %667 to float
  %669 = fmul float %668, 1.562500e-02
  %670 = fmul float %669, 6.400000e+01
  %671 = fcmp ult float %670, 0xC1E0000000000000
  %672 = fcmp ugt float %670, 0x41DFFFFFE0000000
  %673 = fcmp ogt float %670, 0xC1E0000000000000
  %674 = select i1 %673, float %670, float 0xC1E0000000000000
  %675 = fptosi float %674 to i32
  %676 = select i1 %671, i32 0, i32 2147483647
  %677 = select i1 %672, i32 %676, i32 %675
  %678 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %679 = bitcast %"class.blink::ComputedStyle"** %678 to %"class.blink::ComputedStyleBase"**
  %680 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %679, align 8
  %681 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %680, i64 0, i32 5, i32 0, i32 0
  %682 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %681, align 8
  %683 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %682, i64 0, i32 11
  %684 = load i8, i8* %683, align 4
  %685 = and i8 %684, 2
  %686 = icmp eq i8 %685, 0
  br i1 %686, label %687, label %696

687:                                              ; preds = %663
  %688 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %689 = tail call i32 @_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %688) #20
  %690 = icmp sgt i32 %689, -1
  %691 = select i1 %690, i32 -2147483648, i32 2147483647
  %692 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %677, i32 %689) #20
  %693 = extractvalue { i32, i1 } %692, 1
  %694 = extractvalue { i32, i1 } %692, 0
  %695 = select i1 %693, i32 %691, i32 %694, !prof !2
  br label %696

696:                                              ; preds = %663, %687
  %697 = phi i32 [ %695, %687 ], [ %677, %663 ]
  %698 = icmp sgt i32 %697, 0
  %699 = select i1 %698, i32 %697, i32 0
  br label %941

700:                                              ; preds = %656, %659
  %701 = tail call i32 @_ZNK5blink9LayoutBox44ComputeContentAndScrollbarLogicalHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 0, %"class.blink::Length"* dereferenceable(8) %1, i32 -64)
  %702 = icmp eq i32 %701, -64
  br i1 %702, label %755, label %703

703:                                              ; preds = %700
  %704 = sitofp i32 %701 to float
  %705 = fmul float %704, 1.562500e-02
  %706 = fmul float %705, 6.400000e+01
  %707 = fcmp ult float %706, 0xC1E0000000000000
  %708 = fcmp ugt float %706, 0x41DFFFFFE0000000
  %709 = fcmp ogt float %706, 0xC1E0000000000000
  %710 = select i1 %709, float %706, float 0xC1E0000000000000
  %711 = fptosi float %710 to i32
  %712 = select i1 %707, i32 0, i32 2147483647
  %713 = select i1 %708, i32 %712, i32 %711
  %714 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %715 = bitcast %"class.blink::ComputedStyle"** %714 to %"class.blink::ComputedStyleBase"**
  %716 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %715, align 8
  %717 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %716, i64 0, i32 5, i32 0, i32 0
  %718 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %717, align 8
  %719 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %718, i64 0, i32 11
  %720 = load i8, i8* %719, align 4
  %721 = and i8 %720, 2
  %722 = icmp eq i8 %721, 0
  br i1 %722, label %723, label %732

723:                                              ; preds = %703
  %724 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %725 = tail call i32 @_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %724) #20
  %726 = icmp sgt i32 %725, -1
  %727 = select i1 %726, i32 -2147483648, i32 2147483647
  %728 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %713, i32 %725) #20
  %729 = extractvalue { i32, i1 } %728, 1
  %730 = extractvalue { i32, i1 } %728, 0
  %731 = select i1 %729, i32 %727, i32 %730, !prof !2
  br label %732

732:                                              ; preds = %703, %723
  %733 = phi i32 [ %731, %723 ], [ %713, %703 ]
  %734 = icmp sgt i32 %733, 0
  %735 = select i1 %734, i32 %733, i32 0
  %736 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %0)
  %737 = extractvalue { i64, i64 } %736, 1
  %738 = trunc i64 %737 to i32
  %739 = lshr i64 %737, 32
  %740 = trunc i64 %739 to i32
  %741 = icmp slt i32 %740, 0
  %742 = select i1 %741, i32 -2147483648, i32 2147483647
  %743 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %738, i32 %740) #20
  %744 = extractvalue { i32, i1 } %743, 1
  %745 = extractvalue { i32, i1 } %743, 0
  %746 = select i1 %744, i32 %742, i32 %745, !prof !2
  %747 = icmp sgt i32 %746, -1
  %748 = select i1 %747, i32 -2147483648, i32 2147483647
  %749 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %735, i32 %746) #20
  %750 = extractvalue { i32, i1 } %749, 1
  %751 = extractvalue { i32, i1 } %749, 0
  %752 = select i1 %750, i32 %748, i32 %751, !prof !2
  %753 = icmp sgt i32 %752, 0
  %754 = select i1 %753, i32 %752, i32 0
  br label %941

755:                                              ; preds = %700
  br i1 %24, label %827, label %756

756:                                              ; preds = %755
  %757 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %758 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %757, align 8
  %759 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %758, i64 23
  %760 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %759, align 8
  %761 = tail call zeroext i1 %760(%"class.blink::LayoutObject"* %23) #20
  br i1 %761, label %762, label %827

762:                                              ; preds = %756
  %763 = load i96, i96* %138, align 4
  %764 = and i96 %763, 113336795588871485128704
  %765 = icmp eq i96 %764, 75557863725914323419136
  br i1 %765, label %766, label %827

766:                                              ; preds = %762
  %767 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %768 = bitcast %"class.blink::ComputedStyle"** %767 to %"class.blink::ComputedStyleBase"**
  %769 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %768, align 8
  %770 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %769, i64 0, i32 5, i32 0, i32 0
  %771 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %770, align 8
  %772 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %771, i64 0, i32 3, i32 2
  %773 = load i8, i8* %772, align 1
  %774 = icmp eq i8 %773, 0
  br i1 %774, label %775, label %827

775:                                              ; preds = %766
  %776 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %769, i64 0, i32 7, i32 0, i32 0
  %777 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %776, align 8
  %778 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %777, i64 0, i32 18, i32 2
  %779 = load i8, i8* %778, align 1
  %780 = icmp eq i8 %779, 0
  br i1 %780, label %827, label %781

781:                                              ; preds = %775
  %782 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %777, i64 0, i32 7, i32 2
  %783 = load i8, i8* %782, align 1
  %784 = icmp eq i8 %783, 0
  br i1 %784, label %827, label %785

785:                                              ; preds = %781
  %786 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %786) #20
  %787 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %22, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %786, i8 0, i64 24, i1 false) #20
  %788 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %769, i64 0, i32 9
  %789 = bitcast [20 x i8]* %788 to i160*
  %790 = load i160, i160* %789, align 8
  %791 = and i160 %790, 15211807202738752817960438464512
  %792 = icmp eq i160 %791, 0
  %793 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %794 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %795 = select i1 %792, i32* %793, i32* %794
  %796 = load i32, i32* %795, align 4
  %797 = bitcast %"class.blink::LayoutBox"* %0 to void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)***
  %798 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)**, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*** %797, align 8
  %799 = getelementptr inbounds void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %798, i64 164
  %800 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %799, align 8
  call void %800(%"class.blink::LayoutBox"* nonnull %0, i32 %796, i32 0, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %22) #20
  %801 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %802 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %801)
  %803 = load i32, i32* %787, align 4
  %804 = icmp sgt i32 %802, -1
  %805 = select i1 %804, i32 -2147483648, i32 2147483647
  %806 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %803, i32 %802) #20
  %807 = extractvalue { i32, i1 } %806, 1
  %808 = extractvalue { i32, i1 } %806, 0
  %809 = select i1 %807, i32 %805, i32 %808, !prof !2
  %810 = call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* nonnull %0)
  %811 = extractvalue { i64, i64 } %810, 1
  %812 = trunc i64 %811 to i32
  %813 = lshr i64 %811, 32
  %814 = trunc i64 %813 to i32
  %815 = icmp slt i32 %814, 0
  %816 = select i1 %815, i32 -2147483648, i32 2147483647
  %817 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %812, i32 %814) #20
  %818 = extractvalue { i32, i1 } %817, 1
  %819 = extractvalue { i32, i1 } %817, 0
  %820 = select i1 %818, i32 %816, i32 %819, !prof !2
  %821 = icmp sgt i32 %820, -1
  %822 = select i1 %821, i32 -2147483648, i32 2147483647
  %823 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %809, i32 %820) #20
  %824 = extractvalue { i32, i1 } %823, 1
  %825 = extractvalue { i32, i1 } %823, 0
  %826 = select i1 %824, i32 %822, i32 %825, !prof !2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %786) #20
  br label %941

827:                                              ; preds = %756, %755, %781, %775, %766, %762
  %828 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 10
  %829 = load %"struct.blink::BoxLayoutExtraInput"*, %"struct.blink::BoxLayoutExtraInput"** %828, align 8
  %830 = icmp eq %"struct.blink::BoxLayoutExtraInput"* %829, null
  br i1 %830, label %831, label %840

831:                                              ; preds = %827
  %832 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %833 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %832, align 8
  %834 = icmp eq %"struct.blink::LayoutBoxRareData"* %833, null
  br i1 %834, label %847, label %835

835:                                              ; preds = %831
  %836 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %833, i64 0, i32 3
  %837 = load i8, i8* %836, align 8
  %838 = and i8 %837, 2
  %839 = icmp eq i8 %838, 0
  br i1 %839, label %847, label %842

840:                                              ; preds = %827
  %841 = getelementptr inbounds %"struct.blink::BoxLayoutExtraInput", %"struct.blink::BoxLayoutExtraInput"* %829, i64 0, i32 8, i32 0
  br label %844

842:                                              ; preds = %835
  %843 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %833, i64 0, i32 5, i32 0
  br label %844

844:                                              ; preds = %842, %840
  %845 = phi i32* [ %841, %840 ], [ %843, %842 ]
  %846 = load i32, i32* %845, align 4
  br label %851

847:                                              ; preds = %835, %831
  %848 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %23, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %849 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %848, i64 0, i32 0
  %850 = tail call i32 @_ZNK5blink9LayoutBox22AvailableLogicalHeightENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"* %849, i32 %2) #20
  br label %851

851:                                              ; preds = %844, %847
  %852 = phi i32 [ %846, %844 ], [ %850, %847 ]
  %853 = icmp eq i32 %2, 0
  br i1 %853, label %854, label %941

854:                                              ; preds = %851
  %855 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %856 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %857 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %856, align 8
  %858 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %857, i64 0, i32 0, i32 9
  %859 = bitcast [20 x i8]* %858 to i160*
  %860 = load i160, i160* %859, align 8, !noalias !320
  %861 = lshr i160 %860, 102
  %862 = trunc i160 %861 to i8
  %863 = and i8 %862, 3
  %864 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %863, label %865 [
    i8 0, label %874
    i8 1, label %866
  ]

865:                                              ; preds = %854
  br label %866

866:                                              ; preds = %865, %854
  %867 = phi { i64, i64 } [ { i64 1033, i64 0 }, %865 ], [ { i64 1041, i64 0 }, %854 ]
  %868 = extractvalue { i64, i64 } %867, 0
  %869 = extractvalue { i64, i64 } %867, 1
  %870 = getelementptr inbounds i8, i8* %864, i64 %869
  %871 = bitcast i8* %870 to %"class.blink::LayoutBoxModelObject"*
  %872 = and i64 %868, 1
  %873 = icmp eq i64 %872, 0
  br i1 %873, label %884, label %874

874:                                              ; preds = %866, %854
  %875 = phi %"class.blink::LayoutBoxModelObject"* [ %871, %866 ], [ %855, %854 ]
  %876 = phi i8* [ %870, %866 ], [ %864, %854 ]
  %877 = phi i64 [ %868, %866 ], [ 1017, %854 ]
  %878 = bitcast i8* %876 to i8**
  %879 = load i8*, i8** %878, align 8
  %880 = add i64 %877, -1
  %881 = getelementptr i8, i8* %879, i64 %880
  %882 = bitcast i8* %881 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %883 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %882, align 8
  br label %886

884:                                              ; preds = %866
  %885 = inttoptr i64 %868 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %886

886:                                              ; preds = %874, %884
  %887 = phi %"class.blink::LayoutBoxModelObject"* [ %875, %874 ], [ %871, %884 ]
  %888 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %883, %874 ], [ %885, %884 ]
  %889 = tail call i32 %888(%"class.blink::LayoutBoxModelObject"* %887) #20
  %890 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %856, align 8
  %891 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %890, i64 0, i32 0, i32 9
  %892 = bitcast [20 x i8]* %891 to i160*
  %893 = load i160, i160* %892, align 8, !noalias !323
  %894 = lshr i160 %893, 102
  %895 = trunc i160 %894 to i8
  %896 = and i8 %895, 3
  switch i8 %896, label %897 [
    i8 0, label %906
    i8 1, label %898
  ]

897:                                              ; preds = %886
  br label %898

898:                                              ; preds = %897, %886
  %899 = phi { i64, i64 } [ { i64 1041, i64 0 }, %897 ], [ { i64 1033, i64 0 }, %886 ]
  %900 = extractvalue { i64, i64 } %899, 0
  %901 = extractvalue { i64, i64 } %899, 1
  %902 = getelementptr inbounds i8, i8* %864, i64 %901
  %903 = bitcast i8* %902 to %"class.blink::LayoutBoxModelObject"*
  %904 = and i64 %900, 1
  %905 = icmp eq i64 %904, 0
  br i1 %905, label %916, label %906

906:                                              ; preds = %898, %886
  %907 = phi %"class.blink::LayoutBoxModelObject"* [ %903, %898 ], [ %855, %886 ]
  %908 = phi i8* [ %902, %898 ], [ %864, %886 ]
  %909 = phi i64 [ %900, %898 ], [ 1025, %886 ]
  %910 = bitcast i8* %908 to i8**
  %911 = load i8*, i8** %910, align 8
  %912 = add i64 %909, -1
  %913 = getelementptr i8, i8* %911, i64 %912
  %914 = bitcast i8* %913 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %915 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %914, align 8
  br label %918

916:                                              ; preds = %898
  %917 = inttoptr i64 %900 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %918

918:                                              ; preds = %906, %916
  %919 = phi %"class.blink::LayoutBoxModelObject"* [ %907, %906 ], [ %903, %916 ]
  %920 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %915, %906 ], [ %917, %916 ]
  %921 = tail call i32 %920(%"class.blink::LayoutBoxModelObject"* %919) #20
  %922 = icmp slt i32 %921, 0
  %923 = select i1 %922, i32 -2147483648, i32 2147483647
  %924 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %889, i32 %921) #20
  %925 = extractvalue { i32, i1 } %924, 1
  %926 = extractvalue { i32, i1 } %924, 0
  %927 = select i1 %925, i32 %923, i32 %926, !prof !2
  %928 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %855)
  %929 = icmp slt i32 %928, 0
  %930 = select i1 %929, i32 -2147483648, i32 2147483647
  %931 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %927, i32 %928) #20
  %932 = extractvalue { i32, i1 } %931, 1
  %933 = extractvalue { i32, i1 } %931, 0
  %934 = select i1 %932, i32 %930, i32 %933, !prof !2
  %935 = icmp sgt i32 %934, -1
  %936 = select i1 %935, i32 -2147483648, i32 2147483647
  %937 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %852, i32 %934) #20
  %938 = extractvalue { i32, i1 } %937, 1
  %939 = extractvalue { i32, i1 } %937, 0
  %940 = select i1 %938, i32 %936, i32 %939, !prof !2
  br label %941

941:                                              ; preds = %732, %785, %918, %851, %340, %31, %189, %696, %644, %281, %250, %116, %88
  %942 = phi i32 [ %115, %88 ], [ %135, %116 ], [ %218, %189 ], [ %655, %644 ], [ %699, %696 ], [ %252, %250 ], [ %310, %281 ], [ %345, %340 ], [ 2147483647, %31 ], [ %754, %732 ], [ %826, %785 ], [ %940, %918 ], [ %852, %851 ]
  ret i32 %942
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox34ComputeAndSetBlockDirectionMarginsEPKNS_11LayoutBlockE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBlock"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.blink::Length"*
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.blink::Length"*
  %13 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %14 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %14, i64 131
  %16 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %15, align 8
  %17 = tail call i32 %16(%"class.blink::LayoutBox"* %0) #20
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %19 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %22 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  %24 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8, !noalias !326
  %28 = lshr i160 %27, 102
  %29 = trunc i160 %28 to i8
  %30 = and i8 %29, 3
  %31 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %19, i64 0, i32 0, i32 7, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %31, align 8, !noalias !326
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 12
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 11
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %32, i64 0, i32 10
  store %"class.blink::Length"* %33, %"class.blink::Length"** %6, align 8, !alias.scope !326
  store %"class.blink::Length"* %34, %"class.blink::Length"** %7, align 8, !alias.scope !326
  store %"class.blink::Length"* %35, %"class.blink::Length"** %8, align 8, !alias.scope !326
  %36 = icmp eq i8 %30, 0
  %37 = icmp eq i8 %30, 1
  %38 = select i1 %37, %"class.blink::Length"** %7, %"class.blink::Length"** %8
  %39 = select i1 %36, %"class.blink::Length"** %6, %"class.blink::Length"** %38
  %40 = bitcast %"class.blink::Length"** %39 to i64**
  %41 = load i64*, i64** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  %42 = load i64, i64* %41, align 4
  store i64 %42, i64* %9, align 8
  %43 = and i64 %42, 280375465082880
  %44 = icmp eq i64 %43, 8796093022208
  br i1 %44, label %45, label %56

45:                                               ; preds = %2
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %10) #20
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %47 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %47, i64 0, i32 0, i32 9
  %49 = bitcast [20 x i8]* %48 to i160*
  %50 = load i160, i160* %49, align 8, !noalias !329
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %46, i64 0, i32 0, i32 7, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %51, align 8, !noalias !329
  %53 = lshr i160 %50, 102
  %54 = trunc i160 %53 to i8
  %55 = and i8 %54, 3
  br label %56

56:                                               ; preds = %2, %45
  %57 = phi i8 [ %30, %2 ], [ %55, %45 ]
  %58 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %32, %2 ], [ %52, %45 ]
  %59 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59)
  %60 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60)
  %61 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %58, i64 0, i32 11
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %58, i64 0, i32 9
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %58, i64 0, i32 10
  store %"class.blink::Length"* %62, %"class.blink::Length"** %3, align 8, !alias.scope !329
  store %"class.blink::Length"* %63, %"class.blink::Length"** %4, align 8, !alias.scope !329
  store %"class.blink::Length"* %64, %"class.blink::Length"** %5, align 8, !alias.scope !329
  %65 = icmp eq i8 %57, 0
  %66 = icmp eq i8 %57, 1
  %67 = select i1 %66, %"class.blink::Length"** %5, %"class.blink::Length"** %3
  %68 = select i1 %65, %"class.blink::Length"** %4, %"class.blink::Length"** %67
  %69 = bitcast %"class.blink::Length"** %68 to i64**
  %70 = load i64*, i64** %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)
  %71 = load i64, i64* %70, align 4
  store i64 %71, i64* %11, align 8
  %72 = and i64 %71, 280375465082880
  %73 = icmp eq i64 %72, 8796093022208
  br i1 %73, label %74, label %75

74:                                               ; preds = %56
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %12) #20
  br label %75

75:                                               ; preds = %56, %74
  %76 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 2
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, 2
  br i1 %78, label %79, label %96, !prof !3

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 3
  %81 = load i8, i8* %80, align 2, !range !4
  %82 = icmp eq i8 %81, 0
  %83 = bitcast i64* %9 to float*
  %84 = load float, float* %83, align 8
  %85 = bitcast float %84 to i32
  %86 = sitofp i32 %85 to float
  %87 = select i1 %82, float %86, float %84
  %88 = fmul float %87, 6.400000e+01
  %89 = fcmp ult float %88, 0xC1E0000000000000
  %90 = fcmp ugt float %88, 0x41DFFFFFE0000000
  %91 = fcmp ogt float %88, 0xC1E0000000000000
  %92 = select i1 %91, float %88, float 0xC1E0000000000000
  %93 = fptosi float %92 to i32
  %94 = select i1 %89, i32 0, i32 2147483647
  %95 = select i1 %90, i32 %94, i32 %93
  br label %98

96:                                               ; preds = %75
  %97 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %10, i32 %17) #20
  br label %98

98:                                               ; preds = %96, %79
  %99 = phi i32 [ %95, %79 ], [ %97, %96 ]
  %100 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %12, i64 0, i32 2
  %101 = load i8, i8* %100, align 1
  %102 = icmp eq i8 %101, 2
  br i1 %102, label %103, label %120, !prof !3

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %12, i64 0, i32 3
  %105 = load i8, i8* %104, align 2, !range !4
  %106 = icmp eq i8 %105, 0
  %107 = bitcast i64* %11 to float*
  %108 = load float, float* %107, align 8
  %109 = bitcast float %108 to i32
  %110 = sitofp i32 %109 to float
  %111 = select i1 %106, float %110, float %108
  %112 = fmul float %111, 6.400000e+01
  %113 = fcmp ult float %112, 0xC1E0000000000000
  %114 = fcmp ugt float %112, 0x41DFFFFFE0000000
  %115 = fcmp ogt float %112, 0xC1E0000000000000
  %116 = select i1 %115, float %112, float 0xC1E0000000000000
  %117 = fptosi float %116 to i32
  %118 = select i1 %113, i32 0, i32 2147483647
  %119 = select i1 %114, i32 %118, i32 %117
  br label %125

120:                                              ; preds = %98
  %121 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* nonnull dereferenceable(8) %12, i32 %17) #20
  %122 = load i8, i8* %100, align 1
  %123 = icmp eq i8 %122, 8
  br i1 %123, label %124, label %125

124:                                              ; preds = %120
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %12) #20
  br label %125

125:                                              ; preds = %103, %120, %124
  %126 = phi i32 [ %119, %103 ], [ %121, %120 ], [ %121, %124 ]
  %127 = load i8, i8* %76, align 1
  %128 = icmp eq i8 %127, 8
  br i1 %128, label %129, label %130

129:                                              ; preds = %125
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %10) #20
  br label %130

130:                                              ; preds = %125, %129
  %131 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %132 = icmp eq %"class.blink::ComputedStyle"* %131, null
  %133 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %134 = select i1 %132, %"class.blink::ComputedStyle"* %133, %"class.blink::ComputedStyle"* %131
  %135 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %134, i64 0, i32 0, i32 9
  %136 = bitcast [20 x i8]* %135 to i160*
  %137 = load i160, i160* %136, align 8, !noalias !332
  %138 = lshr i160 %137, 102
  %139 = trunc i160 %138 to i8
  %140 = and i8 %139, 3
  %141 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %140, label %142 [
    i8 0, label %147
    i8 1, label %143
  ]

142:                                              ; preds = %130
  br label %143

143:                                              ; preds = %142, %130
  %144 = phi { i64, i64 } [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, %142 ], [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, %130 ]
  %145 = extractvalue { i64, i64 } %144, 0
  %146 = extractvalue { i64, i64 } %144, 1
  br label %147

147:                                              ; preds = %143, %130
  %148 = phi i64 [ %145, %143 ], [ ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), %130 ]
  %149 = phi i64 [ %146, %143 ], [ 0, %130 ]
  %150 = getelementptr inbounds i8, i8* %141, i64 %149
  %151 = bitcast i8* %150 to %"class.blink::LayoutBox"*
  %152 = and i64 %148, 1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %161, label %154

154:                                              ; preds = %147
  %155 = bitcast i8* %150 to i8**
  %156 = load i8*, i8** %155, align 8
  %157 = add i64 %148, -1
  %158 = getelementptr i8, i8* %156, i64 %157
  %159 = bitcast i8* %158 to void (%"class.blink::LayoutBox"*, i32)**
  %160 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %159, align 8
  br label %163

161:                                              ; preds = %147
  %162 = inttoptr i64 %148 to void (%"class.blink::LayoutBox"*, i32)*
  br label %163

163:                                              ; preds = %154, %161
  %164 = phi void (%"class.blink::LayoutBox"*, i32)* [ %160, %154 ], [ %162, %161 ]
  call void %164(%"class.blink::LayoutBox"* %151, i32 %99) #20
  %165 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %166 = icmp eq %"class.blink::ComputedStyle"* %165, null
  %167 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %168 = select i1 %166, %"class.blink::ComputedStyle"* %167, %"class.blink::ComputedStyle"* %165
  %169 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %168, i64 0, i32 0, i32 9
  %170 = bitcast [20 x i8]* %169 to i160*
  %171 = load i160, i160* %170, align 8, !noalias !335
  %172 = lshr i160 %171, 102
  %173 = trunc i160 %172 to i8
  %174 = and i8 %173, 3
  switch i8 %174, label %175 [
    i8 0, label %180
    i8 1, label %176
  ]

175:                                              ; preds = %163
  br label %176

176:                                              ; preds = %175, %163
  %177 = phi { i64, i64 } [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, %175 ], [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, %163 ]
  %178 = extractvalue { i64, i64 } %177, 0
  %179 = extractvalue { i64, i64 } %177, 1
  br label %180

180:                                              ; preds = %176, %163
  %181 = phi i64 [ %178, %176 ], [ ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), %163 ]
  %182 = phi i64 [ %179, %176 ], [ 0, %163 ]
  %183 = getelementptr inbounds i8, i8* %141, i64 %182
  %184 = bitcast i8* %183 to %"class.blink::LayoutBox"*
  %185 = and i64 %181, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %194, label %187

187:                                              ; preds = %180
  %188 = bitcast i8* %183 to i8**
  %189 = load i8*, i8** %188, align 8
  %190 = add i64 %181, -1
  %191 = getelementptr i8, i8* %189, i64 %190
  %192 = bitcast i8* %191 to void (%"class.blink::LayoutBox"*, i32)**
  %193 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %192, align 8
  br label %196

194:                                              ; preds = %180
  %195 = inttoptr i64 %181 to void (%"class.blink::LayoutBox"*, i32)*
  br label %196

196:                                              ; preds = %187, %194
  %197 = phi void (%"class.blink::LayoutBox"*, i32)* [ %193, %187 ], [ %195, %194 ]
  call void %197(%"class.blink::LayoutBox"* %184, i32 %126) #20
  ret void
}

declare i64 @_ZNK5blink14ScrollableArea17ExcludeScrollbarsERKNS_7IntSizeE(%"class.blink::ScrollableArea"*, %"class.blink::IntSize"* dereferenceable(8)) local_unnamed_addr #5

declare %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink12LayoutInline18HasInlineFragmentsEv(%"class.blink::LayoutInline"*) unnamed_addr #5

declare { i64, i64 } @_ZNK5blink12LayoutInline24PhysicalLinesBoundingBoxEv(%"class.blink::LayoutInline"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox27ComputeInlineStaticDistanceERNS_6LengthES2_PKS0_PKNS_20LayoutBoxModelObjectENS_10LayoutUnitEPKNS_20NGBoxFragmentBuilderE(%"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8), %"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, i32, %"class.blink::NGBoxFragmentBuilder"*) local_unnamed_addr #4 align 2 {
  %7 = alloca %"class.blink::LayoutUnit", align 4
  %8 = alloca %"class.blink::LayoutUnit", align 4
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.blink::Length"*
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.blink::Length"*
  %13 = alloca %"class.blink::LayoutUnit", align 4
  %14 = alloca i64, align 8
  %15 = bitcast i64* %14 to %"class.blink::Length"*
  %16 = alloca i64, align 8
  %17 = bitcast i64* %16 to %"class.blink::Length"*
  %18 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %789

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %789

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 7
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 5, i32 0
  %29 = bitcast %"class.blink::ComputedStyle"** %28 to %"class.blink::ComputedStyleBase"**
  %30 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %30, i64 0, i32 9
  %32 = bitcast [20 x i8]* %31 to i160*
  %33 = load i160, i160* %32, align 8
  %34 = lshr i160 %33, 115
  %35 = trunc i160 %34 to i8
  %36 = and i8 %35, 1
  %37 = bitcast %"class.blink::LayoutObject"* %27 to i1 (%"class.blink::LayoutObject"*, i32)***
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, i64 92
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutObject"* %27, i32 10) #20
  br i1 %41, label %42, label %79

42:                                               ; preds = %25
  %43 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0
  %44 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %43, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %45 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = icmp eq %"class.blink::LayoutObject"* %27, %45
  br i1 %46, label %47, label %79

47:                                               ; preds = %42
  %48 = icmp eq i8 %36, 0
  br i1 %48, label %49, label %64

49:                                               ; preds = %47
  %50 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #20
  %51 = bitcast i64* %9 to i32*
  store i32 0, i32* %51, align 8, !alias.scope !338
  %52 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 1
  store i8 0, i8* %52, align 4, !alias.scope !338
  %53 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 2
  store i8 2, i8* %53, align 1, !alias.scope !338
  %54 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 3
  store i8 0, i8* %54, align 2, !alias.scope !338
  %55 = load i8, i8* %18, align 1
  %56 = icmp eq i8 %55, 8
  br i1 %56, label %60, label %57

57:                                               ; preds = %49
  %58 = bitcast %"class.blink::Length"* %0 to i64*
  %59 = load i64, i64* %9, align 8
  store i64 %59, i64* %58, align 4
  br label %63

60:                                               ; preds = %49
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %0) #20
  %61 = bitcast %"class.blink::Length"* %0 to i64*
  %62 = load i64, i64* %9, align 8
  store i64 %62, i64* %61, align 4
  br label %63

63:                                               ; preds = %60, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #20
  br label %789

64:                                               ; preds = %47
  %65 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #20
  %66 = bitcast i64* %11 to i32*
  store i32 0, i32* %66, align 8, !alias.scope !341
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %12, i64 0, i32 1
  store i8 0, i8* %67, align 4, !alias.scope !341
  %68 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %12, i64 0, i32 2
  store i8 2, i8* %68, align 1, !alias.scope !341
  %69 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %12, i64 0, i32 3
  store i8 0, i8* %69, align 2, !alias.scope !341
  %70 = load i8, i8* %22, align 1
  %71 = icmp eq i8 %70, 8
  br i1 %71, label %75, label %72

72:                                               ; preds = %64
  %73 = bitcast %"class.blink::Length"* %1 to i64*
  %74 = load i64, i64* %11, align 8
  store i64 %74, i64* %73, align 4
  br label %78

75:                                               ; preds = %64
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %1) #20
  %76 = bitcast %"class.blink::Length"* %1 to i64*
  %77 = load i64, i64* %11, align 8
  store i64 %77, i64* %76, align 4
  br label %78

78:                                               ; preds = %75, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #20
  br label %789

79:                                               ; preds = %42, %25
  %80 = bitcast %"class.blink::LayoutUnit"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #20
  %81 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %13, i64 0, i32 0
  store i32 -1431655766, i32* %81, align 4
  %82 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %83 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %82, align 8
  %84 = icmp eq %"struct.blink::FragmentData::RareData"* %83, null
  br i1 %84, label %88, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %86, align 8
  br label %88

88:                                               ; preds = %79, %85
  %89 = phi %"class.blink::PaintLayer"* [ %87, %85 ], [ null, %79 ]
  %90 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %89, i64 0, i32 11, i32 0
  %91 = load i32, i32* %90, align 4
  store i32 %91, i32* %81, align 4
  %92 = icmp eq i8 %36, 0
  br i1 %92, label %93, label %389

93:                                               ; preds = %88
  br i1 %84, label %97, label %94

94:                                               ; preds = %93
  %95 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %83, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %95, align 8
  br label %97

97:                                               ; preds = %93, %94
  %98 = phi %"class.blink::PaintLayer"* [ %96, %94 ], [ null, %93 ]
  %99 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %98, i64 0, i32 10, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 5, i32 0
  %102 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %102, i64 0, i32 0, i32 9
  %104 = bitcast [20 x i8]* %103 to i160*
  %105 = load i160, i160* %104, align 8
  %106 = and i160 %105, 15211807202738752817960438464512
  %107 = icmp eq i160 %106, 0
  %108 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %109 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %108, align 8
  br i1 %107, label %110, label %114

110:                                              ; preds = %97
  %111 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %109, i64 124
  %112 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %111, align 8
  %113 = tail call i32 %112(%"class.blink::LayoutBoxModelObject"* %3) #20
  br label %118

114:                                              ; preds = %97
  %115 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %109, i64 122
  %116 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %115, align 8
  %117 = tail call i32 %116(%"class.blink::LayoutBoxModelObject"* %3) #20
  br label %118

118:                                              ; preds = %110, %114
  %119 = phi i32 [ %113, %110 ], [ %117, %114 ]
  %120 = icmp sgt i32 %119, -1
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  %122 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %100, i32 %119) #20
  %123 = extractvalue { i32, i1 } %122, 1
  %124 = extractvalue { i32, i1 } %122, 0
  %125 = select i1 %123, i32 %121, i32 %124, !prof !2
  %126 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %127 = icmp eq %"class.blink::LayoutObject"* %126, null
  %128 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0
  %129 = icmp eq %"class.blink::LayoutObject"* %126, %128
  %130 = or i1 %127, %129
  br i1 %130, label %136, label %131

131:                                              ; preds = %118
  %132 = icmp eq %"class.blink::NGBoxFragmentBuilder"* %5, null
  %133 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %5, i64 0, i32 0, i32 0, i32 5
  %134 = bitcast %"class.blink::LayoutUnit"* %7 to i8*
  %135 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 0, i32 0
  br label %153

136:                                              ; preds = %383, %118
  %137 = phi i32 [ %125, %118 ], [ %384, %383 ]
  %138 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #20
  %139 = bitcast i64* %14 to float*
  %140 = sitofp i32 %137 to float
  %141 = fmul float %140, 1.562500e-02
  store float %141, float* %139, align 8, !alias.scope !344
  %142 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %15, i64 0, i32 1
  store i8 0, i8* %142, align 4, !alias.scope !344
  %143 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %15, i64 0, i32 2
  store i8 2, i8* %143, align 1, !alias.scope !344
  %144 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %15, i64 0, i32 3
  store i8 1, i8* %144, align 2, !alias.scope !344
  %145 = load i8, i8* %18, align 1
  %146 = icmp eq i8 %145, 8
  br i1 %146, label %150, label %147

147:                                              ; preds = %136
  %148 = bitcast %"class.blink::Length"* %0 to i64*
  %149 = load i64, i64* %14, align 8
  store i64 %149, i64* %148, align 4
  br label %787

150:                                              ; preds = %136
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %0) #20
  %151 = bitcast %"class.blink::Length"* %0 to i64*
  %152 = load i64, i64* %14, align 8
  store i64 %152, i64* %151, align 4
  br label %787

153:                                              ; preds = %131, %383
  %154 = phi %"class.blink::LayoutObject"* [ %126, %131 ], [ %385, %383 ]
  %155 = phi i32 [ %125, %131 ], [ %384, %383 ]
  %156 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 0, i32 4
  %157 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %156 to i96*
  %158 = load i96, i96* %157, align 4
  %159 = and i96 %158, 67108864
  %160 = icmp eq i96 %159, 0
  br i1 %160, label %272, label %161

161:                                              ; preds = %153
  br i1 %132, label %171, label %162

162:                                              ; preds = %161
  %163 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %133, align 8
  %164 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 0, i32 7
  %165 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %164, align 8
  %166 = icmp eq %"class.blink::LayoutObject"* %163, %165
  br i1 %166, label %167, label %171

167:                                              ; preds = %162
  %168 = call i64 @_ZNK5blink20NGBoxFragmentBuilder14GetChildOffsetEPKNS_12LayoutObjectE(%"class.blink::NGBoxFragmentBuilder"* nonnull %5, %"class.blink::LayoutObject"* nonnull %154) #20
  %169 = trunc i64 %168 to i32
  %170 = load i96, i96* %157, align 4
  br label %185

171:                                              ; preds = %161, %162
  %172 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 0, i32 5, i32 0
  %173 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %172, align 8
  %174 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %173, i64 0, i32 0, i32 9
  %175 = bitcast [20 x i8]* %174 to i160*
  %176 = load i160, i160* %175, align 8
  %177 = and i160 %176, 15211807202738752817960438464512
  %178 = icmp eq i160 %177, 0
  %179 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 1, i32 1, i32 1
  %180 = bitcast i8* %179 to i32*
  %181 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 1, i32 4
  %182 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %181 to i32*
  %183 = select i1 %178, i32* %180, i32* %182
  %184 = load i32, i32* %183, align 4
  br label %185

185:                                              ; preds = %171, %167
  %186 = phi i96 [ %158, %171 ], [ %170, %167 ]
  %187 = phi i32 [ %184, %171 ], [ %169, %167 ]
  %188 = icmp slt i32 %187, 0
  %189 = select i1 %188, i32 -2147483648, i32 2147483647
  %190 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %155, i32 %187) #20
  %191 = extractvalue { i32, i1 } %190, 1
  %192 = extractvalue { i32, i1 } %190, 0
  %193 = select i1 %191, i32 %189, i32 %192, !prof !2
  %194 = lshr i96 %186, 75
  %195 = trunc i96 %194 to i32
  %196 = and i32 %195, 1
  %197 = or i32 %196, 2
  %198 = icmp eq i32 %197, 3
  br i1 %198, label %199, label %210

199:                                              ; preds = %185
  %200 = bitcast %"class.blink::LayoutObject"* %154 to %"class.blink::LayoutBoxModelObject"*
  %201 = call i64 @_ZNK5blink20LayoutBoxModelObject23OffsetForInFlowPositionEv(%"class.blink::LayoutBoxModelObject"* %200) #20
  %202 = trunc i64 %201 to i32
  %203 = icmp slt i32 %202, 0
  %204 = select i1 %203, i32 -2147483648, i32 2147483647
  %205 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %193, i32 %202) #20
  %206 = extractvalue { i32, i1 } %205, 1
  %207 = extractvalue { i32, i1 } %205, 0
  %208 = select i1 %206, i32 %204, i32 %207, !prof !2
  %209 = load i96, i96* %157, align 4
  br label %210

210:                                              ; preds = %199, %185
  %211 = phi i96 [ %209, %199 ], [ %186, %185 ]
  %212 = phi i32 [ %208, %199 ], [ %193, %185 ]
  %213 = and i96 %211, 1099511627776
  %214 = icmp eq i96 %213, 0
  br i1 %214, label %383, label %215

215:                                              ; preds = %210
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %134)
  store i32 %212, i32* %135, align 4
  %216 = bitcast %"class.blink::LayoutObject"* %154 to i1 (%"class.blink::LayoutObject"*, i32)***
  %217 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %216, align 8
  %218 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %217, i64 92
  %219 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %218, align 8
  %220 = call zeroext i1 %219(%"class.blink::LayoutObject"* nonnull %154, i32 49) #20
  %221 = bitcast %"class.blink::LayoutObject"* %154 to i1 (%"class.blink::LayoutObject"*)***
  br i1 %220, label %222, label %227

222:                                              ; preds = %215
  %223 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %221, align 8
  %224 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %223, i64 28
  %225 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %224, align 8
  %226 = call zeroext i1 %225(%"class.blink::LayoutObject"* nonnull %154) #20
  br i1 %226, label %227, label %253

227:                                              ; preds = %222, %215
  %228 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 0, i32 5, i32 0
  %229 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %228, align 8
  %230 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %229, i64 0, i32 0, i32 9
  %231 = bitcast [20 x i8]* %230 to i160*
  %232 = load i160, i160* %231, align 8
  %233 = and i160 %232, 15211807202738752817960438464512
  %234 = icmp eq i160 %233, 0
  %235 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 1, i32 4
  %236 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %235 to i32*
  %237 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 1, i32 1, i32 1
  %238 = bitcast i8* %237 to i32*
  %239 = load i32, i32* %236, align 4
  %240 = load i32, i32* %238, align 4
  %241 = select i1 %234, i32 %239, i32 %240
  %242 = load i32, i32* %81, align 4
  %243 = icmp slt i32 %241, 0
  %244 = select i1 %243, i32 -2147483648, i32 2147483647
  %245 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %242, i32 %241) #20
  %246 = extractvalue { i32, i1 } %245, 1
  %247 = extractvalue { i32, i1 } %245, 0
  %248 = select i1 %246, i32 %244, i32 %247, !prof !2
  store i32 %248, i32* %81, align 4
  %249 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %221, align 8
  %250 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %249, i64 25
  %251 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %250, align 8
  %252 = call zeroext i1 %251(%"class.blink::LayoutObject"* nonnull %154) #20
  br i1 %252, label %254, label %253

253:                                              ; preds = %222, %227
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134)
  br label %265

254:                                              ; preds = %227
  %255 = bitcast %"class.blink::LayoutObject"* %154 to %"class.blink::LayoutFlowThread"*
  call void @_ZNK5blink16LayoutFlowThread37FlowThreadToContainingCoordinateSpaceERNS_10LayoutUnitES2_(%"class.blink::LayoutFlowThread"* %255, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %13, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %7) #20
  %256 = load i32, i32* %135, align 4
  %257 = icmp sgt i32 %212, -1
  %258 = select i1 %257, i32 -2147483648, i32 2147483647
  %259 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %256, i32 %212) #20
  %260 = extractvalue { i32, i1 } %259, 1
  %261 = extractvalue { i32, i1 } %259, 0
  %262 = select i1 %260, i32 %258, i32 %261, !prof !2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %134)
  %263 = icmp slt i32 %262, 0
  %264 = select i1 %263, i32 -2147483648, i32 2147483647
  br label %265

265:                                              ; preds = %254, %253
  %266 = phi i32 [ 0, %253 ], [ %262, %254 ]
  %267 = phi i32 [ 2147483647, %253 ], [ %264, %254 ]
  %268 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %212, i32 %266) #20
  %269 = extractvalue { i32, i1 } %268, 1
  %270 = extractvalue { i32, i1 } %268, 0
  %271 = select i1 %269, i32 %267, i32 %270, !prof !2
  br label %383

272:                                              ; preds = %153
  %273 = and i96 %158, 134217728
  %274 = icmp eq i96 %273, 0
  br i1 %274, label %383, label %275

275:                                              ; preds = %272
  %276 = lshr i96 %158, 75
  %277 = trunc i96 %276 to i32
  %278 = and i32 %277, 1
  %279 = or i32 %278, 2
  %280 = icmp ne i32 %279, 3
  %281 = and i96 %158, 268435456
  %282 = icmp ne i96 %281, 0
  %283 = or i1 %282, %280
  br i1 %283, label %383, label %284

284:                                              ; preds = %275
  %285 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 0, i32 5, i32 0
  %286 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %285, align 8
  %287 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %286, i64 0, i32 0, i32 9
  %288 = bitcast [20 x i8]* %287 to i160*
  %289 = load i160, i160* %288, align 8, !noalias !347
  %290 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %286, i64 0, i32 0, i32 7, i32 0, i32 0
  %291 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %290, align 8, !noalias !347
  %292 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %291, i64 0, i32 18
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %291, i64 0, i32 8
  %294 = and i160 %289, 15211807202738752817960438464512
  %295 = icmp eq i160 %294, 0
  %296 = select i1 %295, %"class.blink::Length"* %293, %"class.blink::Length"* %292
  %297 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %296, i64 0, i32 2
  %298 = load i8, i8* %297, align 1
  %299 = icmp eq i8 %298, 0
  br i1 %299, label %340, label %300

300:                                              ; preds = %284
  %301 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %154, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %302 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %301, i64 0, i32 0
  %303 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %301, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %304 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %303, align 8
  %305 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %304, i64 0, i32 0, i32 9
  %306 = bitcast [20 x i8]* %305 to i160*
  %307 = load i160, i160* %306, align 8
  %308 = and i160 %307, 15211807202738752817960438464512
  %309 = icmp eq i160 %308, 0
  br i1 %309, label %310, label %312

310:                                              ; preds = %300
  %311 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %302) #20
  br label %331

312:                                              ; preds = %300
  %313 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %314 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %315 = or i8 %314, %313
  %316 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %317 = or i8 %315, %316
  %318 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %319 = or i8 %317, %318
  %320 = icmp eq i8 %319, 0
  %321 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %304, i64 0, i32 0, i32 5, i32 0, i32 0
  %322 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %321, align 8
  %323 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %322, i64 0, i32 8
  %324 = call i32 @_ZNK5blink9LayoutBox27AvailableLogicalHeightUsingERKNS_6LengthENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"* %302, %"class.blink::Length"* dereferenceable(8) %323, i32 1) #20
  br i1 %320, label %329, label %325

325:                                              ; preds = %312
  %326 = icmp eq i32 %324, -64
  br i1 %326, label %331, label %327, !prof !2

327:                                              ; preds = %325
  %328 = call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %302, i32 %324, i32 -64) #20
  br label %331

329:                                              ; preds = %312
  %330 = call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %302, i32 %324, i32 -64) #20
  br label %331

331:                                              ; preds = %310, %325, %327, %329
  %332 = phi i32 [ %311, %310 ], [ %330, %329 ], [ %328, %327 ], [ -64, %325 ]
  %333 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %296, i32 %332) #20
  %334 = icmp slt i32 %333, 0
  %335 = select i1 %334, i32 -2147483648, i32 2147483647
  %336 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %155, i32 %333) #20
  %337 = extractvalue { i32, i1 } %336, 1
  %338 = extractvalue { i32, i1 } %336, 0
  %339 = select i1 %337, i32 %335, i32 %338, !prof !2
  br label %383

340:                                              ; preds = %284
  %341 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %291, i64 0, i32 17
  %342 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %291, i64 0, i32 7
  %343 = select i1 %295, %"class.blink::Length"* %341, %"class.blink::Length"* %342
  %344 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %154, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %345 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %344, i64 0, i32 0
  %346 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %344, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %347 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %346, align 8
  %348 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %347, i64 0, i32 0, i32 9
  %349 = bitcast [20 x i8]* %348 to i160*
  %350 = load i160, i160* %349, align 8
  %351 = and i160 %350, 15211807202738752817960438464512
  %352 = icmp eq i160 %351, 0
  br i1 %352, label %353, label %355

353:                                              ; preds = %340
  %354 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %345) #20
  br label %374

355:                                              ; preds = %340
  %356 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %357 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %358 = or i8 %357, %356
  %359 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %360 = or i8 %358, %359
  %361 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %362 = or i8 %360, %361
  %363 = icmp eq i8 %362, 0
  %364 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %347, i64 0, i32 0, i32 5, i32 0, i32 0
  %365 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %364, align 8
  %366 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %365, i64 0, i32 8
  %367 = call i32 @_ZNK5blink9LayoutBox27AvailableLogicalHeightUsingERKNS_6LengthENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"* %345, %"class.blink::Length"* dereferenceable(8) %366, i32 1) #20
  br i1 %363, label %372, label %368

368:                                              ; preds = %355
  %369 = icmp eq i32 %367, -64
  br i1 %369, label %374, label %370, !prof !2

370:                                              ; preds = %368
  %371 = call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %345, i32 %367, i32 -64) #20
  br label %374

372:                                              ; preds = %355
  %373 = call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %345, i32 %367, i32 -64) #20
  br label %374

374:                                              ; preds = %353, %368, %370, %372
  %375 = phi i32 [ %354, %353 ], [ %373, %372 ], [ %371, %370 ], [ -64, %368 ]
  %376 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %343, i32 %375) #20
  %377 = icmp sgt i32 %376, -1
  %378 = select i1 %377, i32 -2147483648, i32 2147483647
  %379 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %155, i32 %376) #20
  %380 = extractvalue { i32, i1 } %379, 1
  %381 = extractvalue { i32, i1 } %379, 0
  %382 = select i1 %380, i32 %378, i32 %381, !prof !2
  br label %383

383:                                              ; preds = %272, %210, %275, %331, %374, %265
  %384 = phi i32 [ %382, %374 ], [ %339, %331 ], [ %155, %275 ], [ %155, %272 ], [ %271, %265 ], [ %212, %210 ]
  %385 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %154, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %386 = icmp eq %"class.blink::LayoutObject"* %385, null
  %387 = icmp eq %"class.blink::LayoutObject"* %385, %128
  %388 = or i1 %386, %387
  br i1 %388, label %136, label %153

389:                                              ; preds = %88
  %390 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %391 = tail call %"class.blink::LayoutBox"* @_ZNK5blink12LayoutObject12EnclosingBoxEv(%"class.blink::LayoutObject"* %390) #20
  %392 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %82, align 8
  %393 = icmp eq %"struct.blink::FragmentData::RareData"* %392, null
  br i1 %393, label %397, label %394

394:                                              ; preds = %389
  %395 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %392, i64 0, i32 0, i32 0, i32 0, i32 0
  %396 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %395, align 8
  br label %397

397:                                              ; preds = %389, %394
  %398 = phi %"class.blink::PaintLayer"* [ %396, %394 ], [ null, %389 ]
  %399 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %398, i64 0, i32 10, i32 0
  %400 = load i32, i32* %399, align 8
  %401 = icmp slt i32 %4, 0
  %402 = select i1 %401, i32 -2147483648, i32 2147483647
  %403 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %400, i32 %4) #20
  %404 = extractvalue { i32, i1 } %403, 1
  %405 = extractvalue { i32, i1 } %403, 0
  %406 = select i1 %404, i32 %402, i32 %405, !prof !2
  %407 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 5, i32 0
  %408 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %407, align 8
  %409 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %408, i64 0, i32 0, i32 9
  %410 = bitcast [20 x i8]* %409 to i160*
  %411 = load i160, i160* %410, align 8
  %412 = and i160 %411, 15211807202738752817960438464512
  %413 = icmp eq i160 %412, 0
  %414 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %415 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %414, align 8
  br i1 %413, label %416, label %420

416:                                              ; preds = %397
  %417 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %415, i64 124
  %418 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %417, align 8
  %419 = tail call i32 %418(%"class.blink::LayoutBoxModelObject"* %3) #20
  br label %424

420:                                              ; preds = %397
  %421 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %415, i64 122
  %422 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %421, align 8
  %423 = tail call i32 %422(%"class.blink::LayoutBoxModelObject"* %3) #20
  br label %424

424:                                              ; preds = %416, %420
  %425 = phi i32 [ %419, %416 ], [ %423, %420 ]
  %426 = icmp slt i32 %425, 0
  %427 = select i1 %426, i32 -2147483648, i32 2147483647
  %428 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %406, i32 %425) #20
  %429 = extractvalue { i32, i1 } %428, 1
  %430 = extractvalue { i32, i1 } %428, 0
  %431 = select i1 %429, i32 %427, i32 %430, !prof !2
  %432 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0
  %433 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 4
  %434 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %433 to i96*
  %435 = load i96, i96* %434, align 4
  %436 = and i96 %435, 67108864
  %437 = icmp eq i96 %436, 0
  br i1 %437, label %501, label %438

438:                                              ; preds = %424
  %439 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to %"class.blink::LayoutBox"*
  %440 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %407, align 8
  %441 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %440, i64 0, i32 0, i32 9
  %442 = bitcast [20 x i8]* %441 to i160*
  %443 = load i160, i160* %442, align 8
  %444 = and i160 %443, 1190036353683150593851392
  %445 = icmp eq i160 %444, 340010386766614455386112
  %446 = and i96 %435, 8589934592
  %447 = icmp eq i96 %446, 0
  %448 = or i1 %445, %447
  br i1 %448, label %472, label %449

449:                                              ; preds = %438
  %450 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %451 = icmp eq %"class.blink::PaintLayerScrollableArea"* %450, null
  br i1 %451, label %479, label %452

452:                                              ; preds = %449
  %453 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %454 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %453, i64 0, i32 6, i32 3
  %455 = load i8, i8* %454, align 8
  %456 = and i8 %455, 1
  %457 = icmp eq i8 %456, 0
  br i1 %457, label %462, label %458

458:                                              ; preds = %452
  %459 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %453, i64 0, i32 6, i32 1, i32 0, i32 0
  %460 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %459, align 8
  %461 = icmp eq %"class.blink::Scrollbar"* %460, null
  br i1 %461, label %462, label %479

462:                                              ; preds = %458, %452
  %463 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %464 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %463, i64 0, i32 6, i32 3
  %465 = load i8, i8* %464, align 8
  %466 = and i8 %465, 2
  %467 = icmp eq i8 %466, 0
  br i1 %467, label %472, label %468

468:                                              ; preds = %462
  %469 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %463, i64 0, i32 6, i32 2, i32 0, i32 0
  %470 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %469, align 8
  %471 = icmp eq %"class.blink::Scrollbar"* %470, null
  br i1 %471, label %472, label %479

472:                                              ; preds = %438, %462, %468
  %473 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %407, align 8
  %474 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %473, i64 0, i32 0, i32 9
  %475 = bitcast [20 x i8]* %474 to i160*
  %476 = load i160, i160* %475, align 8
  %477 = and i160 %476, 270215977642229760
  %478 = icmp eq i160 %477, 0
  br i1 %478, label %494, label %479

479:                                              ; preds = %449, %458, %468, %472
  %480 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %407, align 8
  %481 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %480, i64 0, i32 0, i32 9
  %482 = bitcast [20 x i8]* %481 to i160*
  %483 = load i160, i160* %482, align 8
  %484 = and i160 %483, 15211807202738752817960438464512
  %485 = icmp eq i160 %484, 0
  %486 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %439, i32 1, i32 0, i32 1) #20
  %487 = extractvalue { i64, i64 } %486, 1
  %488 = lshr i64 %487, 32
  %489 = extractvalue { i64, i64 } %486, 0
  %490 = select i1 %485, i64 %488, i64 %489
  %491 = trunc i64 %490 to i32
  %492 = icmp slt i32 %491, 0
  %493 = select i1 %492, i32 -2147483648, i32 2147483647
  br label %494

494:                                              ; preds = %479, %472
  %495 = phi i32 [ 0, %472 ], [ %491, %479 ]
  %496 = phi i32 [ 2147483647, %472 ], [ %493, %479 ]
  %497 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %431, i32 %495) #20
  %498 = extractvalue { i32, i1 } %497, 1
  %499 = extractvalue { i32, i1 } %497, 0
  %500 = select i1 %498, i32 %496, i32 %499, !prof !2
  br label %501

501:                                              ; preds = %424, %494
  %502 = phi i32 [ %500, %494 ], [ %431, %424 ]
  %503 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %504 = icmp eq %"class.blink::LayoutObject"* %503, null
  br i1 %504, label %770, label %505

505:                                              ; preds = %501
  %506 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %391, i64 0, i32 0, i32 0
  %507 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %391, i64 0, i32 0, i32 0, i32 5, i32 0
  %508 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %391, i64 0, i32 2, i32 1, i32 0, i32 0
  %509 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %391, i64 0, i32 2, i32 1, i32 1, i32 0
  %510 = icmp eq %"class.blink::NGBoxFragmentBuilder"* %5, null
  %511 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %5, i64 0, i32 0, i32 0, i32 5
  %512 = bitcast %"class.blink::LayoutUnit"* %8 to i8*
  %513 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %8, i64 0, i32 0
  br label %514

514:                                              ; preds = %505, %767
  %515 = phi %"class.blink::LayoutObject"* [ %503, %505 ], [ %768, %767 ]
  %516 = phi i32 [ %502, %505 ], [ %765, %767 ]
  %517 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %515, i64 0, i32 4
  %518 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %517 to i96*
  %519 = load i96, i96* %518, align 4
  %520 = and i96 %519, 67108864
  %521 = icmp eq i96 %520, 0
  %522 = bitcast %"class.blink::LayoutObject"* %515 to %"class.blink::LayoutBox"*
  %523 = select i1 %521, %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"* %522
  br i1 %521, label %653, label %524

524:                                              ; preds = %514
  %525 = icmp eq %"class.blink::LayoutObject"* %515, %506
  br i1 %525, label %526, label %541

526:                                              ; preds = %524
  %527 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %507, align 8
  %528 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %527, i64 0, i32 0, i32 9
  %529 = bitcast [20 x i8]* %528 to i160*
  %530 = load i160, i160* %529, align 8
  %531 = and i160 %530, 15211807202738752817960438464512
  %532 = icmp eq i160 %531, 0
  %533 = select i1 %532, i32* %508, i32* %509
  %534 = load i32, i32* %533, align 4
  %535 = icmp sgt i32 %534, -1
  %536 = select i1 %535, i32 -2147483648, i32 2147483647
  %537 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %516, i32 %534) #20
  %538 = extractvalue { i32, i1 } %537, 1
  %539 = extractvalue { i32, i1 } %537, 0
  %540 = select i1 %538, i32 %536, i32 %539, !prof !2
  br label %541

541:                                              ; preds = %526, %524
  %542 = phi i32 [ %540, %526 ], [ %516, %524 ]
  %543 = icmp eq %"class.blink::LayoutObject"* %515, %432
  br i1 %543, label %764, label %544

544:                                              ; preds = %541
  br i1 %510, label %553, label %545

545:                                              ; preds = %544
  %546 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %511, align 8
  %547 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %515, i64 0, i32 7
  %548 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %547, align 8
  %549 = icmp eq %"class.blink::LayoutObject"* %546, %548
  br i1 %549, label %550, label %553

550:                                              ; preds = %545
  %551 = call i64 @_ZNK5blink20NGBoxFragmentBuilder14GetChildOffsetEPKNS_12LayoutObjectE(%"class.blink::NGBoxFragmentBuilder"* nonnull %5, %"class.blink::LayoutObject"* nonnull %515) #20
  %552 = trunc i64 %551 to i32
  br label %565

553:                                              ; preds = %544, %545
  %554 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %523, i64 0, i32 0, i32 0, i32 5, i32 0
  %555 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %554, align 8
  %556 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %555, i64 0, i32 0, i32 9
  %557 = bitcast [20 x i8]* %556 to i160*
  %558 = load i160, i160* %557, align 8
  %559 = and i160 %558, 15211807202738752817960438464512
  %560 = icmp eq i160 %559, 0
  %561 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %523, i64 0, i32 2, i32 0, i32 0, i32 0
  %562 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %523, i64 0, i32 2, i32 0, i32 1, i32 0
  %563 = select i1 %560, i32* %561, i32* %562
  %564 = load i32, i32* %563, align 4
  br label %565

565:                                              ; preds = %553, %550
  %566 = phi i32 [ %564, %553 ], [ %552, %550 ]
  %567 = icmp sgt i32 %566, -1
  %568 = select i1 %567, i32 -2147483648, i32 2147483647
  %569 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %542, i32 %566) #20
  %570 = extractvalue { i32, i1 } %569, 1
  %571 = extractvalue { i32, i1 } %569, 0
  %572 = select i1 %570, i32 %568, i32 %571, !prof !2
  %573 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %523, i64 0, i32 0, i32 0
  %574 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %523, i64 0, i32 0, i32 0, i32 4
  %575 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %574 to i96*
  %576 = load i96, i96* %575, align 4
  %577 = lshr i96 %576, 75
  %578 = trunc i96 %577 to i32
  %579 = and i32 %578, 1
  %580 = or i32 %579, 2
  %581 = icmp eq i32 %580, 3
  br i1 %581, label %582, label %592

582:                                              ; preds = %565
  %583 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %523, i64 0, i32 0
  %584 = call i64 @_ZNK5blink20LayoutBoxModelObject23OffsetForInFlowPositionEv(%"class.blink::LayoutBoxModelObject"* %583) #20
  %585 = trunc i64 %584 to i32
  %586 = icmp sgt i32 %585, -1
  %587 = select i1 %586, i32 -2147483648, i32 2147483647
  %588 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %572, i32 %585) #20
  %589 = extractvalue { i32, i1 } %588, 1
  %590 = extractvalue { i32, i1 } %588, 0
  %591 = select i1 %589, i32 %587, i32 %590, !prof !2
  br label %592

592:                                              ; preds = %582, %565
  %593 = phi i32 [ %591, %582 ], [ %572, %565 ]
  %594 = load i96, i96* %518, align 4
  %595 = and i96 %594, 1099511627776
  %596 = icmp eq i96 %595, 0
  br i1 %596, label %764, label %597

597:                                              ; preds = %592
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %512)
  store i32 %593, i32* %513, align 4
  %598 = bitcast %"class.blink::LayoutBox"* %523 to i1 (%"class.blink::LayoutObject"*, i32)***
  %599 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %598, align 8
  %600 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %599, i64 92
  %601 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %600, align 8
  %602 = call zeroext i1 %601(%"class.blink::LayoutObject"* %573, i32 49) #20
  %603 = bitcast %"class.blink::LayoutBox"* %523 to i1 (%"class.blink::LayoutObject"*)***
  br i1 %602, label %604, label %609

604:                                              ; preds = %597
  %605 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %603, align 8
  %606 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %605, i64 28
  %607 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %606, align 8
  %608 = call zeroext i1 %607(%"class.blink::LayoutObject"* %573) #20
  br i1 %608, label %609, label %633

609:                                              ; preds = %604, %597
  %610 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %523, i64 0, i32 0, i32 0, i32 5, i32 0
  %611 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %610, align 8
  %612 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %611, i64 0, i32 0, i32 9
  %613 = bitcast [20 x i8]* %612 to i160*
  %614 = load i160, i160* %613, align 8
  %615 = and i160 %614, 15211807202738752817960438464512
  %616 = icmp eq i160 %615, 0
  %617 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %523, i64 0, i32 2, i32 0, i32 1, i32 0
  %618 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %523, i64 0, i32 2, i32 0, i32 0, i32 0
  %619 = load i32, i32* %617, align 4
  %620 = load i32, i32* %618, align 4
  %621 = select i1 %616, i32 %619, i32 %620
  %622 = load i32, i32* %81, align 4
  %623 = icmp slt i32 %621, 0
  %624 = select i1 %623, i32 -2147483648, i32 2147483647
  %625 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %622, i32 %621) #20
  %626 = extractvalue { i32, i1 } %625, 1
  %627 = extractvalue { i32, i1 } %625, 0
  %628 = select i1 %626, i32 %624, i32 %627, !prof !2
  store i32 %628, i32* %81, align 4
  %629 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %603, align 8
  %630 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %629, i64 25
  %631 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %630, align 8
  %632 = call zeroext i1 %631(%"class.blink::LayoutObject"* %573) #20
  br i1 %632, label %634, label %633

633:                                              ; preds = %604, %609
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %512)
  br label %644

634:                                              ; preds = %609
  %635 = bitcast %"class.blink::LayoutBox"* %523 to %"class.blink::LayoutFlowThread"*
  call void @_ZNK5blink16LayoutFlowThread37FlowThreadToContainingCoordinateSpaceERNS_10LayoutUnitES2_(%"class.blink::LayoutFlowThread"* %635, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %13, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %8) #20
  %636 = load i32, i32* %513, align 4
  %637 = icmp sgt i32 %593, -1
  %638 = select i1 %637, i32 -2147483648, i32 2147483647
  %639 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %636, i32 %593) #20
  %640 = extractvalue { i32, i1 } %639, 1
  %641 = extractvalue { i32, i1 } %639, 0
  %642 = select i1 %640, i32 %638, i32 %641, !prof !2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %512)
  %643 = icmp sgt i32 %642, -1
  br i1 %643, label %644, label %646

644:                                              ; preds = %633, %634
  %645 = phi i32 [ 0, %633 ], [ %642, %634 ]
  br label %646

646:                                              ; preds = %634, %644
  %647 = phi i32 [ %645, %644 ], [ %642, %634 ]
  %648 = phi i32 [ -2147483648, %644 ], [ 2147483647, %634 ]
  %649 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %593, i32 %647) #20
  %650 = extractvalue { i32, i1 } %649, 1
  %651 = extractvalue { i32, i1 } %649, 0
  %652 = select i1 %650, i32 %648, i32 %651, !prof !2
  br label %764

653:                                              ; preds = %514
  %654 = and i96 %519, 134217728
  %655 = icmp eq i96 %654, 0
  br i1 %655, label %764, label %656

656:                                              ; preds = %653
  %657 = lshr i96 %519, 75
  %658 = trunc i96 %657 to i32
  %659 = and i32 %658, 1
  %660 = or i32 %659, 2
  %661 = icmp ne i32 %660, 3
  %662 = and i96 %519, 268435456
  %663 = icmp ne i96 %662, 0
  %664 = or i1 %663, %661
  br i1 %664, label %764, label %665

665:                                              ; preds = %656
  %666 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %515, i64 0, i32 5, i32 0
  %667 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %666, align 8
  %668 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %667, i64 0, i32 0, i32 9
  %669 = bitcast [20 x i8]* %668 to i160*
  %670 = load i160, i160* %669, align 8, !noalias !350
  %671 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %667, i64 0, i32 0, i32 7, i32 0, i32 0
  %672 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %671, align 8, !noalias !350
  %673 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %672, i64 0, i32 18
  %674 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %672, i64 0, i32 8
  %675 = and i160 %670, 15211807202738752817960438464512
  %676 = icmp eq i160 %675, 0
  %677 = select i1 %676, %"class.blink::Length"* %674, %"class.blink::Length"* %673
  %678 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %677, i64 0, i32 2
  %679 = load i8, i8* %678, align 1
  %680 = icmp eq i8 %679, 0
  br i1 %680, label %721, label %681

681:                                              ; preds = %665
  %682 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %515, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %683 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %682, i64 0, i32 0
  %684 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %682, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %685 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %684, align 8
  %686 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %685, i64 0, i32 0, i32 9
  %687 = bitcast [20 x i8]* %686 to i160*
  %688 = load i160, i160* %687, align 8
  %689 = and i160 %688, 15211807202738752817960438464512
  %690 = icmp eq i160 %689, 0
  br i1 %690, label %691, label %693

691:                                              ; preds = %681
  %692 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %683) #20
  br label %712

693:                                              ; preds = %681
  %694 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %695 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %696 = or i8 %695, %694
  %697 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %698 = or i8 %696, %697
  %699 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %700 = or i8 %698, %699
  %701 = icmp eq i8 %700, 0
  %702 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %685, i64 0, i32 0, i32 5, i32 0, i32 0
  %703 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %702, align 8
  %704 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %703, i64 0, i32 8
  %705 = call i32 @_ZNK5blink9LayoutBox27AvailableLogicalHeightUsingERKNS_6LengthENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"* %683, %"class.blink::Length"* dereferenceable(8) %704, i32 1) #20
  br i1 %701, label %710, label %706

706:                                              ; preds = %693
  %707 = icmp eq i32 %705, -64
  br i1 %707, label %712, label %708, !prof !2

708:                                              ; preds = %706
  %709 = call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %683, i32 %705, i32 -64) #20
  br label %712

710:                                              ; preds = %693
  %711 = call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %683, i32 %705, i32 -64) #20
  br label %712

712:                                              ; preds = %691, %706, %708, %710
  %713 = phi i32 [ %692, %691 ], [ %711, %710 ], [ %709, %708 ], [ -64, %706 ]
  %714 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %677, i32 %713) #20
  %715 = icmp sgt i32 %714, -1
  %716 = select i1 %715, i32 -2147483648, i32 2147483647
  %717 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %516, i32 %714) #20
  %718 = extractvalue { i32, i1 } %717, 1
  %719 = extractvalue { i32, i1 } %717, 0
  %720 = select i1 %718, i32 %716, i32 %719, !prof !2
  br label %764

721:                                              ; preds = %665
  %722 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %672, i64 0, i32 17
  %723 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %672, i64 0, i32 7
  %724 = select i1 %676, %"class.blink::Length"* %722, %"class.blink::Length"* %723
  %725 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %515, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %726 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %725, i64 0, i32 0
  %727 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %725, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %728 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %727, align 8
  %729 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %728, i64 0, i32 0, i32 9
  %730 = bitcast [20 x i8]* %729 to i160*
  %731 = load i160, i160* %730, align 8
  %732 = and i160 %731, 15211807202738752817960438464512
  %733 = icmp eq i160 %732, 0
  br i1 %733, label %734, label %736

734:                                              ; preds = %721
  %735 = call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %726) #20
  br label %755

736:                                              ; preds = %721
  %737 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %738 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %739 = or i8 %738, %737
  %740 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %741 = or i8 %739, %740
  %742 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %743 = or i8 %741, %742
  %744 = icmp eq i8 %743, 0
  %745 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %728, i64 0, i32 0, i32 5, i32 0, i32 0
  %746 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %745, align 8
  %747 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %746, i64 0, i32 8
  %748 = call i32 @_ZNK5blink9LayoutBox27AvailableLogicalHeightUsingERKNS_6LengthENS_26AvailableLogicalHeightTypeE(%"class.blink::LayoutBox"* %726, %"class.blink::Length"* dereferenceable(8) %747, i32 1) #20
  br i1 %744, label %753, label %749

749:                                              ; preds = %736
  %750 = icmp eq i32 %748, -64
  br i1 %750, label %755, label %751, !prof !2

751:                                              ; preds = %749
  %752 = call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %726, i32 %748, i32 -64) #20
  br label %755

753:                                              ; preds = %736
  %754 = call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %726, i32 %748, i32 -64) #20
  br label %755

755:                                              ; preds = %734, %749, %751, %753
  %756 = phi i32 [ %735, %734 ], [ %754, %753 ], [ %752, %751 ], [ -64, %749 ]
  %757 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %724, i32 %756) #20
  %758 = icmp slt i32 %757, 0
  %759 = select i1 %758, i32 -2147483648, i32 2147483647
  %760 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %516, i32 %757) #20
  %761 = extractvalue { i32, i1 } %760, 1
  %762 = extractvalue { i32, i1 } %760, 0
  %763 = select i1 %761, i32 %759, i32 %762, !prof !2
  br label %764

764:                                              ; preds = %653, %592, %656, %541, %712, %755, %646
  %765 = phi i32 [ %763, %755 ], [ %720, %712 ], [ %516, %656 ], [ %516, %653 ], [ %542, %541 ], [ %652, %646 ], [ %593, %592 ]
  %766 = icmp eq %"class.blink::LayoutObject"* %515, %432
  br i1 %766, label %770, label %767

767:                                              ; preds = %764
  %768 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %515, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %769 = icmp eq %"class.blink::LayoutObject"* %768, null
  br i1 %769, label %770, label %514

770:                                              ; preds = %764, %767, %501
  %771 = phi i32 [ %502, %501 ], [ %765, %767 ], [ %765, %764 ]
  %772 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %772) #20
  %773 = bitcast i64* %16 to float*
  %774 = sitofp i32 %771 to float
  %775 = fmul float %774, 1.562500e-02
  store float %775, float* %773, align 8, !alias.scope !353
  %776 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %17, i64 0, i32 1
  store i8 0, i8* %776, align 4, !alias.scope !353
  %777 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %17, i64 0, i32 2
  store i8 2, i8* %777, align 1, !alias.scope !353
  %778 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %17, i64 0, i32 3
  store i8 1, i8* %778, align 2, !alias.scope !353
  %779 = load i8, i8* %22, align 1
  %780 = icmp eq i8 %779, 8
  br i1 %780, label %784, label %781

781:                                              ; preds = %770
  %782 = bitcast %"class.blink::Length"* %1 to i64*
  %783 = load i64, i64* %16, align 8
  store i64 %783, i64* %782, align 4
  br label %787

784:                                              ; preds = %770
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %1) #20
  %785 = bitcast %"class.blink::Length"* %1 to i64*
  %786 = load i64, i64* %16, align 8
  store i64 %786, i64* %785, align 4
  br label %787

787:                                              ; preds = %781, %784, %147, %150
  %788 = phi i8* [ %138, %150 ], [ %138, %147 ], [ %772, %784 ], [ %772, %781 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %788) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #20
  br label %789

789:                                              ; preds = %787, %78, %63, %6, %21
  ret void
}

declare i64 @_ZNK5blink20NGBoxFragmentBuilder14GetChildOffsetEPKNS_12LayoutObjectE(%"class.blink::NGBoxFragmentBuilder"*, %"class.blink::LayoutObject"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nocapture dereferenceable(24)) unnamed_addr #4 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::Length"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.blink::Length"*
  %7 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %8 = alloca %"class.blink::Length", align 4
  %9 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %10 = alloca %"class.blink::Length", align 4
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %12 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %11, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %13 = bitcast %"class.blink::LayoutObject"* %12 to %"class.blink::LayoutBoxModelObject"*
  %14 = tail call i32 @_ZNK5blink9LayoutBox40ContainingBlockLogicalWidthForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutBoxModelObject"* %13, i1 zeroext true)
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 5, i32 0
  %16 = bitcast %"class.blink::ComputedStyle"** %15 to %"class.blink::ComputedStyleBase"**
  %17 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %17, i64 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = lshr i160 %20, 115
  %22 = trunc i160 %21 to i8
  %23 = and i8 %22, 1
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = trunc i96 %26 to i32
  %28 = icmp slt i32 %27, 0
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %30 = tail call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %29)
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %32 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %32, i64 0, i32 0, i32 7, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %34, i64 0, i32 10
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %34, i64 0, i32 11
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %34, i64 0, i32 12
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %34, i64 0, i32 9
  %39 = select i1 %28, %"class.blink::Length"* %35, %"class.blink::Length"* %37
  %40 = select i1 %28, %"class.blink::Length"* %36, %"class.blink::Length"* %38
  %41 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #20
  %42 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %32, i64 0, i32 0, i32 9
  %44 = bitcast [20 x i8]* %43 to i160*
  %45 = load i160, i160* %44, align 8, !noalias !356
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %34, i64 0, i32 18
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %34, i64 0, i32 8
  %48 = and i160 %45, 15211807202738752817960438464512
  %49 = icmp eq i160 %48, 0
  %50 = select i1 %49, %"class.blink::Length"* %47, %"class.blink::Length"* %46
  %51 = bitcast %"class.blink::Length"* %50 to i64*
  %52 = load i64, i64* %51, align 4
  store i64 %52, i64* %3, align 8
  %53 = and i64 %52, 280375465082880
  %54 = icmp eq i64 %53, 8796093022208
  br i1 %54, label %55, label %63

55:                                               ; preds = %2
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #20
  %56 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %56, i64 0, i32 0, i32 9
  %58 = bitcast [20 x i8]* %57 to i160*
  %59 = load i160, i160* %58, align 8, !noalias !359
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %56, i64 0, i32 0, i32 7, i32 0, i32 0
  %61 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %60, align 8, !noalias !359
  %62 = and i160 %59, 15211807202738752817960438464512
  br label %63

63:                                               ; preds = %2, %55
  %64 = phi i160 [ %48, %2 ], [ %62, %55 ]
  %65 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %34, %2 ], [ %61, %55 ]
  %66 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #20
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 2
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %65, i64 0, i32 17
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %65, i64 0, i32 7
  %70 = icmp eq i160 %64, 0
  %71 = select i1 %70, %"class.blink::Length"* %68, %"class.blink::Length"* %69
  %72 = bitcast %"class.blink::Length"* %71 to i64*
  %73 = load i64, i64* %72, align 4
  store i64 %73, i64* %5, align 8
  %74 = and i64 %73, 280375465082880
  %75 = icmp eq i64 %74, 8796093022208
  br i1 %75, label %76, label %77

76:                                               ; preds = %63
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #20
  br label %77

77:                                               ; preds = %63, %76
  call void @_ZN5blink9LayoutBox27ComputeInlineStaticDistanceERNS_6LengthES2_PKS0_PKNS_20LayoutBoxModelObjectENS_10LayoutUnitEPKNS_20NGBoxFragmentBuilderE(%"class.blink::Length"* nonnull dereferenceable(8) %4, %"class.blink::Length"* nonnull dereferenceable(8) %6, %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBoxModelObject"* %13, i32 %14, %"class.blink::NGBoxFragmentBuilder"* null)
  %78 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %78, i64 0, i32 0, i32 9
  %80 = bitcast [20 x i8]* %79 to i160*
  %81 = load i160, i160* %80, align 8
  %82 = and i160 %81, 15211807202738752817960438464512
  %83 = icmp eq i160 %82, 0
  %84 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %78, i64 0, i32 0, i32 5, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %85, i64 0, i32 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %85, i64 0, i32 3
  %88 = select i1 %83, %"class.blink::Length"* %86, %"class.blink::Length"* %87
  call void @_ZNK5blink9LayoutBox34ComputePositionedLogicalWidthUsingENS_8SizeTypeERKNS_6LengthEPKNS_20LayoutBoxModelObjectENS_13TextDirectionENS_10LayoutUnitES9_S4_S4_S4_S4_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %0, i32 0, %"class.blink::Length"* dereferenceable(8) %88, %"class.blink::LayoutBoxModelObject"* %13, i8 zeroext %23, i32 %14, i32 %30, %"class.blink::Length"* nonnull dereferenceable(8) %4, %"class.blink::Length"* nonnull dereferenceable(8) %6, %"class.blink::Length"* dereferenceable(8) %39, %"class.blink::Length"* dereferenceable(8) %40, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24) %1)
  %89 = call zeroext i1 @_ZNK5blink9LayoutBox41ShouldComputeLogicalHeightFromAspectRatioEv(%"class.blink::LayoutBox"* %0)
  br i1 %89, label %90, label %95

90:                                               ; preds = %77
  %91 = call i64 @_ZNK5blink9LayoutBox40ComputeMinMaxLogicalWidthFromAspectRatioEv(%"class.blink::LayoutBox"* %0)
  %92 = trunc i64 %91 to i32
  %93 = lshr i64 %91, 32
  %94 = trunc i64 %93 to i32
  br label %95

95:                                               ; preds = %90, %77
  %96 = phi i32 [ %94, %90 ], [ 2147483647, %77 ]
  %97 = phi i32 [ %92, %90 ], [ 0, %77 ]
  %98 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #20
  %99 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %7, i64 0, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %7, i64 0, i32 1, i32 0
  %101 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %7, i64 0, i32 2, i32 2, i32 0
  %102 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %7, i64 0, i32 2, i32 3, i32 0
  %103 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %7, i64 0, i32 1
  %104 = bitcast %"class.blink::LayoutUnit"* %103 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %104, i8 0, i64 20, i1 false) #20
  store i32 2147483647, i32* %99, align 4
  %105 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %106 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %105, i64 0, i32 0, i32 9
  %107 = bitcast [20 x i8]* %106 to i160*
  %108 = load i160, i160* %107, align 8
  %109 = and i160 %108, 15211807202738752817960438464512
  %110 = icmp eq i160 %109, 0
  %111 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %105, i64 0, i32 0, i32 5, i32 0, i32 0
  %112 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %112, i64 0, i32 5
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %112, i64 0, i32 4
  %115 = select i1 %110, %"class.blink::Length"* %113, %"class.blink::Length"* %114
  %116 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %115, i64 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 12
  br i1 %118, label %121, label %119

119:                                              ; preds = %95
  call void @_ZNK5blink9LayoutBox34ComputePositionedLogicalWidthUsingENS_8SizeTypeERKNS_6LengthEPKNS_20LayoutBoxModelObjectENS_13TextDirectionENS_10LayoutUnitES9_S4_S4_S4_S4_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %0, i32 2, %"class.blink::Length"* dereferenceable(8) %115, %"class.blink::LayoutBoxModelObject"* %13, i8 zeroext %23, i32 %14, i32 %30, %"class.blink::Length"* nonnull dereferenceable(8) %4, %"class.blink::Length"* nonnull dereferenceable(8) %6, %"class.blink::Length"* dereferenceable(8) %39, %"class.blink::Length"* dereferenceable(8) %40, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %7)
  %120 = load i32, i32* %99, align 4
  br label %121

121:                                              ; preds = %119, %95
  %122 = phi i32 [ %120, %119 ], [ 2147483647, %95 ]
  %123 = icmp slt i32 %96, %122
  br i1 %123, label %124, label %137

124:                                              ; preds = %121
  %125 = bitcast %"class.blink::Length"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #20
  %126 = bitcast %"class.blink::Length"* %8 to float*
  %127 = sitofp i32 %96 to float
  %128 = fmul float %127, 1.562500e-02
  store float %128, float* %126, align 4, !alias.scope !362
  %129 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 1
  store i8 0, i8* %129, align 4, !alias.scope !362
  %130 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  store i8 2, i8* %130, align 1, !alias.scope !362
  %131 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 3
  store i8 1, i8* %131, align 2, !alias.scope !362
  call void @_ZNK5blink9LayoutBox34ComputePositionedLogicalWidthUsingENS_8SizeTypeERKNS_6LengthEPKNS_20LayoutBoxModelObjectENS_13TextDirectionENS_10LayoutUnitES9_S4_S4_S4_S4_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %0, i32 2, %"class.blink::Length"* nonnull dereferenceable(8) %8, %"class.blink::LayoutBoxModelObject"* %13, i8 zeroext %23, i32 %14, i32 %30, %"class.blink::Length"* nonnull dereferenceable(8) %4, %"class.blink::Length"* nonnull dereferenceable(8) %6, %"class.blink::Length"* dereferenceable(8) %39, %"class.blink::Length"* dereferenceable(8) %40, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %7)
  %132 = load i8, i8* %130, align 1
  %133 = icmp eq i8 %132, 8
  br i1 %133, label %134, label %135

134:                                              ; preds = %124
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %8) #20
  br label %135

135:                                              ; preds = %124, %134
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #20
  %136 = load i32, i32* %99, align 4
  br label %137

137:                                              ; preds = %135, %121
  %138 = phi i32 [ %136, %135 ], [ %122, %121 ]
  %139 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = icmp sgt i32 %140, %138
  br i1 %141, label %142, label %149

142:                                              ; preds = %137
  store i32 %138, i32* %139, align 4
  %143 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 1, i32 0
  %144 = load i32, i32* %100, align 4
  store i32 %144, i32* %143, align 4
  %145 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2, i32 2, i32 0
  %146 = load i32, i32* %101, align 4
  store i32 %146, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2, i32 3, i32 0
  %148 = load i32, i32* %102, align 4
  store i32 %148, i32* %147, align 4
  br label %149

149:                                              ; preds = %142, %137
  %150 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #20
  %151 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %9, i64 0, i32 0, i32 0
  %152 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %9, i64 0, i32 1, i32 0
  %153 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %9, i64 0, i32 2, i32 2, i32 0
  %154 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %9, i64 0, i32 2, i32 3, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %150, i8 0, i64 24, i1 false) #20
  %155 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %156 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %155, i64 0, i32 0, i32 9
  %157 = bitcast [20 x i8]* %156 to i160*
  %158 = load i160, i160* %157, align 8
  %159 = and i160 %158, 15211807202738752817960438464512
  %160 = icmp eq i160 %159, 0
  %161 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %155, i64 0, i32 0, i32 5, i32 0, i32 0
  %162 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %162, i64 0, i32 7
  %164 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %162, i64 0, i32 6
  %165 = select i1 %160, %"class.blink::Length"* %163, %"class.blink::Length"* %164
  %166 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %165, i64 0, i32 2
  %167 = load i8, i8* %166, align 1
  %168 = icmp eq i8 %167, 8
  br i1 %168, label %184, label %169

169:                                              ; preds = %149
  %170 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %165, i64 0, i32 3
  %171 = load i8, i8* %170, align 2, !range !4
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %177, label %173

173:                                              ; preds = %169
  %174 = bitcast %"class.blink::Length"* %165 to float*
  %175 = load float, float* %174, align 4
  %176 = fcmp oeq float %175, 0.000000e+00
  br i1 %176, label %181, label %184

177:                                              ; preds = %169
  %178 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %165, i64 0, i32 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %184

181:                                              ; preds = %173, %177
  %182 = add i8 %167, -3
  %183 = icmp ult i8 %182, 5
  br i1 %183, label %184, label %186

184:                                              ; preds = %149, %173, %181, %177
  call void @_ZNK5blink9LayoutBox34ComputePositionedLogicalWidthUsingENS_8SizeTypeERKNS_6LengthEPKNS_20LayoutBoxModelObjectENS_13TextDirectionENS_10LayoutUnitES9_S4_S4_S4_S4_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %0, i32 1, %"class.blink::Length"* dereferenceable(8) %165, %"class.blink::LayoutBoxModelObject"* %13, i8 zeroext %23, i32 %14, i32 %30, %"class.blink::Length"* nonnull dereferenceable(8) %4, %"class.blink::Length"* nonnull dereferenceable(8) %6, %"class.blink::Length"* dereferenceable(8) %39, %"class.blink::Length"* dereferenceable(8) %40, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %9)
  %185 = load i32, i32* %151, align 4
  br label %186

186:                                              ; preds = %184, %181
  %187 = phi i32 [ %185, %184 ], [ 0, %181 ]
  %188 = icmp sgt i32 %97, %187
  br i1 %188, label %189, label %202

189:                                              ; preds = %186
  %190 = bitcast %"class.blink::Length"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %190) #20
  %191 = bitcast %"class.blink::Length"* %10 to float*
  %192 = sitofp i32 %97 to float
  %193 = fmul float %192, 1.562500e-02
  store float %193, float* %191, align 4, !alias.scope !365
  %194 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 1
  store i8 0, i8* %194, align 4, !alias.scope !365
  %195 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 2
  store i8 2, i8* %195, align 1, !alias.scope !365
  %196 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 3
  store i8 1, i8* %196, align 2, !alias.scope !365
  call void @_ZNK5blink9LayoutBox34ComputePositionedLogicalWidthUsingENS_8SizeTypeERKNS_6LengthEPKNS_20LayoutBoxModelObjectENS_13TextDirectionENS_10LayoutUnitES9_S4_S4_S4_S4_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %0, i32 1, %"class.blink::Length"* nonnull dereferenceable(8) %10, %"class.blink::LayoutBoxModelObject"* %13, i8 zeroext %23, i32 %14, i32 %30, %"class.blink::Length"* nonnull dereferenceable(8) %4, %"class.blink::Length"* nonnull dereferenceable(8) %6, %"class.blink::Length"* dereferenceable(8) %39, %"class.blink::Length"* dereferenceable(8) %40, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %9)
  %197 = load i8, i8* %195, align 1
  %198 = icmp eq i8 %197, 8
  br i1 %198, label %199, label %200

199:                                              ; preds = %189
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %10) #20
  br label %200

200:                                              ; preds = %189, %199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %190) #20
  %201 = load i32, i32* %151, align 4
  br label %202

202:                                              ; preds = %200, %186
  %203 = phi i32 [ %201, %200 ], [ %187, %186 ]
  %204 = load i32, i32* %139, align 4
  %205 = icmp slt i32 %204, %203
  br i1 %205, label %206, label %213

206:                                              ; preds = %202
  store i32 %203, i32* %139, align 4
  %207 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 1, i32 0
  %208 = load i32, i32* %152, align 4
  store i32 %208, i32* %207, align 4
  %209 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2, i32 2, i32 0
  %210 = load i32, i32* %153, align 4
  store i32 %210, i32* %209, align 4
  %211 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2, i32 3, i32 0
  %212 = load i32, i32* %154, align 4
  store i32 %212, i32* %211, align 4
  br label %213

213:                                              ; preds = %206, %202
  %214 = phi i32 [ %203, %206 ], [ %204, %202 ]
  %215 = icmp slt i32 %30, 0
  %216 = select i1 %215, i32 -2147483648, i32 2147483647
  %217 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %214, i32 %30) #20
  %218 = extractvalue { i32, i1 } %217, 1
  %219 = extractvalue { i32, i1 } %217, 0
  %220 = select i1 %218, i32 %216, i32 %219, !prof !2
  store i32 %220, i32* %139, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #20
  %221 = load i8, i8* %67, align 1
  %222 = icmp eq i8 %221, 8
  br i1 %222, label %223, label %224

223:                                              ; preds = %213
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %6) #20
  br label %224

224:                                              ; preds = %213, %223
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #20
  %225 = load i8, i8* %42, align 1
  %226 = icmp eq i8 %225, 8
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #20
  br label %228

228:                                              ; preds = %224, %227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox34ComputePositionedLogicalWidthUsingENS_8SizeTypeERKNS_6LengthEPKNS_20LayoutBoxModelObjectENS_13TextDirectionENS_10LayoutUnitES9_S4_S4_S4_S4_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"* dereferenceable(8), %"class.blink::LayoutBoxModelObject"*, i8 zeroext, i32, i32, %"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8), %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nocapture dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %13 = alloca %"class.blink::LineLayoutItem", align 8
  %14 = alloca %"class.blink::LineLayoutItem", align 8
  %15 = alloca %"class.blink::LayoutUnit", align 4
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %17 = bitcast %"class.blink::LayoutUnit"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #20
  %18 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %15, i64 0, i32 0
  store i32 0, i32* %18, align 4
  switch i32 %1, label %56 [
    i32 1, label %19
    i32 0, label %50
  ]

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %56

23:                                               ; preds = %19
  %24 = tail call zeroext i1 @_ZNK5blink9LayoutBox40ShouldComputeLogicalWidthFromAspectRatioEPNS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutUnit"* null)
  br i1 %24, label %25, label %103

25:                                               ; preds = %23
  %26 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %27 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %27, i64 169
  %29 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::LayoutBox"* %0) #20
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %32 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %31 to i96*
  %33 = load i96, i96* %32, align 4
  %34 = and i96 %33, 256
  %35 = icmp eq i96 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %25
  %37 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %38 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %37, align 8
  %39 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %38, i64 186
  %40 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %39, align 8
  %41 = tail call i64 %40(%"class.blink::LayoutBox"* %0) #20
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 5
  %43 = bitcast %"struct.blink::MinMaxSizes"* %42 to i64*
  store i64 %41, i64* %43, align 4
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 6, i32 0
  store i32 -2147483648, i32* %44, align 4
  tail call void @_ZN5blink12LayoutObject32ClearIntrinsicLogicalWidthsDirtyEv(%"class.blink::LayoutObject"* %16) #20
  br label %45

45:                                               ; preds = %25, %36
  %46 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 5
  %47 = bitcast %"struct.blink::MinMaxSizes"* %46 to i64*
  %48 = load i64, i64* %47, align 4
  %49 = trunc i64 %48 to i32
  br label %103

50:                                               ; preds = %12
  %51 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = call zeroext i1 @_ZNK5blink9LayoutBox34ComputeLogicalWidthFromAspectRatioEPNS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutUnit"* nonnull %15)
  br i1 %55, label %105, label %56

56:                                               ; preds = %19, %12, %54, %50
  %57 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %58 = load i8, i8* %57, align 1
  %59 = add i8 %58, -3
  %60 = icmp ult i8 %59, 5
  br i1 %60, label %61, label %69

61:                                               ; preds = %56
  %62 = tail call i32 @_ZNK5blink9LayoutBox33ComputeIntrinsicLogicalWidthUsingERKNS_6LengthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, %"class.blink::Length"* dereferenceable(8) %2, i32 %5)
  %63 = icmp sgt i32 %6, -1
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %62, i32 %6) #20
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !2
  br label %103

69:                                               ; preds = %56
  %70 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %2, i32 %5) #20
  %71 = sitofp i32 %70 to float
  %72 = fmul float %71, 1.562500e-02
  %73 = fmul float %72, 6.400000e+01
  %74 = fcmp ult float %73, 0xC1E0000000000000
  %75 = fcmp ugt float %73, 0x41DFFFFFE0000000
  %76 = fcmp ogt float %73, 0xC1E0000000000000
  %77 = select i1 %76, float %73, float 0xC1E0000000000000
  %78 = fptosi float %77 to i32
  %79 = select i1 %74, i32 0, i32 2147483647
  %80 = select i1 %75, i32 %79, i32 %78
  %81 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %82 = bitcast %"class.blink::ComputedStyle"** %81 to %"class.blink::ComputedStyleBase"**
  %83 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %83, i64 0, i32 5, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %85, i64 0, i32 11
  %87 = load i8, i8* %86, align 4
  %88 = and i8 %87, 2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %99

90:                                               ; preds = %69
  %91 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %92 = tail call i32 @_ZNK5blink20LayoutBoxModelObject40CollapsedBorderAndCSSPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %91) #20
  %93 = icmp sgt i32 %92, -1
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %80, i32 %92) #20
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !2
  br label %99

99:                                               ; preds = %69, %90
  %100 = phi i32 [ %98, %90 ], [ %80, %69 ]
  %101 = icmp sgt i32 %100, 0
  %102 = select i1 %101, i32 %100, i32 0
  br label %103

103:                                              ; preds = %23, %45, %61, %99
  %104 = phi i32 [ %102, %99 ], [ %68, %61 ], [ %49, %45 ], [ 0, %23 ]
  store i32 %104, i32* %18, align 4
  br label %105

105:                                              ; preds = %103, %54
  %106 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %107 = load i8, i8* %106, align 1
  %108 = icmp eq i8 %107, 2
  br i1 %108, label %109, label %130, !prof !3

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 3
  %111 = load i8, i8* %110, align 2, !range !4
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %116, label %113

113:                                              ; preds = %109
  %114 = bitcast %"class.blink::Length"* %7 to float*
  %115 = load float, float* %114, align 4
  br label %120

116:                                              ; preds = %109
  %117 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = sitofp i32 %118 to float
  br label %120

120:                                              ; preds = %116, %113
  %121 = phi float [ %115, %113 ], [ %119, %116 ]
  %122 = fmul float %121, 6.400000e+01
  %123 = fcmp ult float %122, 0xC1E0000000000000
  %124 = fcmp ugt float %122, 0x41DFFFFFE0000000
  %125 = fcmp ogt float %122, 0xC1E0000000000000
  %126 = select i1 %125, float %122, float 0xC1E0000000000000
  %127 = fptosi float %126 to i32
  %128 = select i1 %123, i32 0, i32 2147483647
  %129 = select i1 %124, i32 %128, i32 %127
  br label %132

130:                                              ; preds = %105
  %131 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %7, i32 %5) #20
  br label %132

132:                                              ; preds = %120, %130
  %133 = phi i32 [ %129, %120 ], [ %131, %130 ]
  %134 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  %135 = load i8, i8* %134, align 1
  %136 = icmp eq i8 %135, 2
  br i1 %136, label %137, label %158, !prof !3

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 3
  %139 = load i8, i8* %138, align 2, !range !4
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %144, label %141

141:                                              ; preds = %137
  %142 = bitcast %"class.blink::Length"* %8 to float*
  %143 = load float, float* %142, align 4
  br label %148

144:                                              ; preds = %137
  %145 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = sitofp i32 %146 to float
  br label %148

148:                                              ; preds = %144, %141
  %149 = phi float [ %143, %141 ], [ %147, %144 ]
  %150 = fmul float %149, 6.400000e+01
  %151 = fcmp ult float %150, 0xC1E0000000000000
  %152 = fcmp ugt float %150, 0x41DFFFFFE0000000
  %153 = fcmp ogt float %150, 0xC1E0000000000000
  %154 = select i1 %153, float %150, float 0xC1E0000000000000
  %155 = fptosi float %154 to i32
  %156 = select i1 %151, i32 0, i32 2147483647
  %157 = select i1 %152, i32 %156, i32 %155
  br label %160

158:                                              ; preds = %132
  %159 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %8, i32 %5) #20
  br label %160

160:                                              ; preds = %148, %158
  %161 = phi i32 [ %157, %148 ], [ %159, %158 ]
  %162 = tail call i32 @_ZNK5blink9LayoutBox40ContainingBlockLogicalWidthForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutBoxModelObject"* %3, i1 zeroext false)
  %163 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %164 = load i8, i8* %163, align 1
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %160
  %167 = tail call zeroext i1 @_ZNK5blink9LayoutBox40ShouldComputeLogicalWidthFromAspectRatioEPNS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutUnit"* null)
  %168 = xor i1 %167, true
  br label %169

169:                                              ; preds = %166, %160
  %170 = phi i1 [ false, %160 ], [ %168, %166 ]
  %171 = load i8, i8* %106, align 1
  %172 = icmp eq i8 %171, 0
  %173 = load i8, i8* %134, align 1
  %174 = icmp eq i8 %173, 0
  %175 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %176 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %175, align 8
  %177 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %176, i64 0, i32 0, i32 9
  %178 = bitcast [20 x i8]* %177 to i160*
  %179 = load i160, i160* %178, align 8
  %180 = and i160 %179, 41538374868278621028243970633760768
  %181 = icmp eq i160 %180, 0
  %182 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 2, i32 2
  %183 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 2, i32 3
  %184 = select i1 %181, %"class.blink::LayoutUnit"* %182, %"class.blink::LayoutUnit"* %183
  %185 = select i1 %181, %"class.blink::LayoutUnit"* %183, %"class.blink::LayoutUnit"* %182
  %186 = or i1 %170, %172
  %187 = or i1 %186, %174
  br i1 %187, label %281, label %188

188:                                              ; preds = %169
  %189 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 0, i32 0
  %190 = load i32, i32* %18, align 4
  store i32 %190, i32* %189, align 4
  %191 = icmp slt i32 %190, 0
  %192 = select i1 %191, i32 -2147483648, i32 2147483647
  %193 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %133, i32 %190) #20
  %194 = extractvalue { i32, i1 } %193, 1
  %195 = extractvalue { i32, i1 } %193, 0
  %196 = select i1 %194, i32 %192, i32 %195, !prof !2
  %197 = icmp slt i32 %161, 0
  %198 = select i1 %197, i32 -2147483648, i32 2147483647
  %199 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %196, i32 %161) #20
  %200 = extractvalue { i32, i1 } %199, 1
  %201 = extractvalue { i32, i1 } %199, 0
  %202 = select i1 %200, i32 %198, i32 %201, !prof !2
  %203 = icmp slt i32 %6, 0
  %204 = select i1 %203, i32 -2147483648, i32 2147483647
  %205 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %202, i32 %6) #20
  %206 = extractvalue { i32, i1 } %205, 1
  %207 = extractvalue { i32, i1 } %205, 0
  %208 = select i1 %206, i32 %204, i32 %207, !prof !2
  %209 = icmp sgt i32 %208, -1
  %210 = select i1 %209, i32 -2147483648, i32 2147483647
  %211 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %5, i32 %208) #20
  %212 = extractvalue { i32, i1 } %211, 1
  %213 = extractvalue { i32, i1 } %211, 0
  %214 = select i1 %212, i32 %210, i32 %213, !prof !2
  %215 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 2
  %216 = load i8, i8* %215, align 1
  %217 = icmp eq i8 %216, 0
  %218 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 2
  %219 = load i8, i8* %218, align 1
  %220 = icmp eq i8 %219, 0
  br i1 %217, label %221, label %246

221:                                              ; preds = %188
  br i1 %220, label %222, label %236

222:                                              ; preds = %221
  %223 = icmp sgt i32 %214, -1
  br i1 %223, label %224, label %229

224:                                              ; preds = %222
  %225 = lshr i32 %214, 1
  %226 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %184, i64 0, i32 0
  store i32 %225, i32* %226, align 4
  %227 = sub nsw i32 %214, %225
  %228 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %185, i64 0, i32 0
  store i32 %227, i32* %228, align 4
  br label %483

229:                                              ; preds = %222
  %230 = icmp eq i8 %4, 0
  %231 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %184, i64 0, i32 0
  br i1 %230, label %232, label %234

232:                                              ; preds = %229
  store i32 0, i32* %231, align 4
  %233 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %185, i64 0, i32 0
  store i32 %214, i32* %233, align 4
  br label %483

234:                                              ; preds = %229
  store i32 %214, i32* %231, align 4
  %235 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %185, i64 0, i32 0
  store i32 0, i32* %235, align 4
  br label %483

236:                                              ; preds = %221
  %237 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %10, i32 %162) #20
  %238 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %185, i64 0, i32 0
  store i32 %237, i32* %238, align 4
  %239 = icmp sgt i32 %237, -1
  %240 = select i1 %239, i32 -2147483648, i32 2147483647
  %241 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %214, i32 %237) #20
  %242 = extractvalue { i32, i1 } %241, 1
  %243 = extractvalue { i32, i1 } %241, 0
  %244 = select i1 %242, i32 %240, i32 %243, !prof !2
  %245 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %184, i64 0, i32 0
  store i32 %244, i32* %245, align 4
  br label %483

246:                                              ; preds = %188
  %247 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %9, i32 %162) #20
  %248 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %184, i64 0, i32 0
  store i32 %247, i32* %248, align 4
  br i1 %220, label %249, label %257

249:                                              ; preds = %246
  %250 = icmp sgt i32 %247, -1
  %251 = select i1 %250, i32 -2147483648, i32 2147483647
  %252 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %214, i32 %247) #20
  %253 = extractvalue { i32, i1 } %252, 1
  %254 = extractvalue { i32, i1 } %252, 0
  %255 = select i1 %253, i32 %251, i32 %254, !prof !2
  %256 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %185, i64 0, i32 0
  store i32 %255, i32* %256, align 4
  br label %483

257:                                              ; preds = %246
  %258 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %10, i32 %162) #20
  %259 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %185, i64 0, i32 0
  store i32 %258, i32* %259, align 4
  %260 = icmp eq i8 %4, 1
  br i1 %260, label %261, label %483

261:                                              ; preds = %257
  %262 = icmp slt i32 %133, 0
  %263 = select i1 %262, i32 -2147483648, i32 2147483647
  %264 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %214, i32 %133) #20
  %265 = extractvalue { i32, i1 } %264, 1
  %266 = extractvalue { i32, i1 } %264, 0
  %267 = select i1 %265, i32 %263, i32 %266, !prof !2
  %268 = load i32, i32* %248, align 4
  %269 = icmp sgt i32 %268, -1
  %270 = select i1 %269, i32 -2147483648, i32 2147483647
  %271 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %267, i32 %268) #20
  %272 = extractvalue { i32, i1 } %271, 1
  %273 = extractvalue { i32, i1 } %271, 0
  %274 = select i1 %272, i32 %270, i32 %273, !prof !2
  %275 = icmp sgt i32 %258, -1
  %276 = select i1 %275, i32 -2147483648, i32 2147483647
  %277 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %274, i32 %258) #20
  %278 = extractvalue { i32, i1 } %277, 1
  %279 = extractvalue { i32, i1 } %277, 0
  %280 = select i1 %278, i32 %276, i32 %279, !prof !2
  br label %483

281:                                              ; preds = %169
  %282 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 2
  %283 = load i8, i8* %282, align 1
  %284 = icmp eq i8 %283, 2
  br i1 %284, label %285, label %306, !prof !3

285:                                              ; preds = %281
  %286 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 3
  %287 = load i8, i8* %286, align 2, !range !4
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %292, label %289

289:                                              ; preds = %285
  %290 = bitcast %"class.blink::Length"* %9 to float*
  %291 = load float, float* %290, align 4
  br label %296

292:                                              ; preds = %285
  %293 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 0, i32 0
  %294 = load i32, i32* %293, align 4
  %295 = sitofp i32 %294 to float
  br label %296

296:                                              ; preds = %292, %289
  %297 = phi float [ %291, %289 ], [ %295, %292 ]
  %298 = fmul float %297, 6.400000e+01
  %299 = fcmp ult float %298, 0xC1E0000000000000
  %300 = fcmp ugt float %298, 0x41DFFFFFE0000000
  %301 = fcmp ogt float %298, 0xC1E0000000000000
  %302 = select i1 %301, float %298, float 0xC1E0000000000000
  %303 = fptosi float %302 to i32
  %304 = select i1 %299, i32 0, i32 2147483647
  %305 = select i1 %300, i32 %304, i32 %303
  br label %308

306:                                              ; preds = %281
  %307 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %9, i32 %162) #20
  br label %308

308:                                              ; preds = %296, %306
  %309 = phi i32 [ %305, %296 ], [ %307, %306 ]
  %310 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %184, i64 0, i32 0
  store i32 %309, i32* %310, align 4
  %311 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 2
  %312 = load i8, i8* %311, align 1
  %313 = icmp eq i8 %312, 2
  br i1 %313, label %314, label %335, !prof !3

314:                                              ; preds = %308
  %315 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 3
  %316 = load i8, i8* %315, align 2, !range !4
  %317 = icmp eq i8 %316, 0
  br i1 %317, label %321, label %318

318:                                              ; preds = %314
  %319 = bitcast %"class.blink::Length"* %10 to float*
  %320 = load float, float* %319, align 4
  br label %325

321:                                              ; preds = %314
  %322 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 0, i32 0
  %323 = load i32, i32* %322, align 4
  %324 = sitofp i32 %323 to float
  br label %325

325:                                              ; preds = %321, %318
  %326 = phi float [ %320, %318 ], [ %324, %321 ]
  %327 = fmul float %326, 6.400000e+01
  %328 = fcmp ult float %327, 0xC1E0000000000000
  %329 = fcmp ugt float %327, 0x41DFFFFFE0000000
  %330 = fcmp ogt float %327, 0xC1E0000000000000
  %331 = select i1 %330, float %327, float 0xC1E0000000000000
  %332 = fptosi float %331 to i32
  %333 = select i1 %328, i32 0, i32 2147483647
  %334 = select i1 %329, i32 %333, i32 %332
  br label %338

335:                                              ; preds = %308
  %336 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %10, i32 %162) #20
  %337 = load i32, i32* %310, align 4
  br label %338

338:                                              ; preds = %325, %335
  %339 = phi i32 [ %309, %325 ], [ %337, %335 ]
  %340 = phi i32 [ %334, %325 ], [ %336, %335 ]
  %341 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %185, i64 0, i32 0
  store i32 %340, i32* %341, align 4
  %342 = icmp slt i32 %340, 0
  %343 = select i1 %342, i32 -2147483648, i32 2147483647
  %344 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %339, i32 %340) #20
  %345 = extractvalue { i32, i1 } %344, 1
  %346 = extractvalue { i32, i1 } %344, 0
  %347 = select i1 %345, i32 %343, i32 %346, !prof !2
  %348 = icmp slt i32 %133, 0
  %349 = select i1 %348, i32 -2147483648, i32 2147483647
  %350 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %347, i32 %133) #20
  %351 = extractvalue { i32, i1 } %350, 1
  %352 = extractvalue { i32, i1 } %350, 0
  %353 = select i1 %351, i32 %349, i32 %352, !prof !2
  %354 = icmp slt i32 %161, 0
  %355 = select i1 %354, i32 -2147483648, i32 2147483647
  %356 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %353, i32 %161) #20
  %357 = extractvalue { i32, i1 } %356, 1
  %358 = extractvalue { i32, i1 } %356, 0
  %359 = select i1 %357, i32 %355, i32 %358, !prof !2
  %360 = icmp slt i32 %6, 0
  %361 = select i1 %360, i32 -2147483648, i32 2147483647
  %362 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %359, i32 %6) #20
  %363 = extractvalue { i32, i1 } %362, 1
  %364 = extractvalue { i32, i1 } %362, 0
  %365 = select i1 %363, i32 %361, i32 %364, !prof !2
  %366 = icmp sgt i32 %365, -1
  %367 = select i1 %366, i32 -2147483648, i32 2147483647
  %368 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %5, i32 %365) #20
  %369 = extractvalue { i32, i1 } %368, 1
  %370 = extractvalue { i32, i1 } %368, 0
  %371 = select i1 %369, i32 %367, i32 %370, !prof !2
  %372 = xor i1 %172, true
  %373 = xor i1 %170, true
  %374 = or i1 %373, %372
  %375 = or i1 %374, %174
  br i1 %375, label %406, label %376

376:                                              ; preds = %338
  %377 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %378 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %377, align 8
  %379 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %378, i64 69
  %380 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %379, align 8
  %381 = tail call i64 %380(%"class.blink::LayoutBox"* %0) #20
  %382 = trunc i64 %381 to i32
  %383 = lshr i64 %381, 32
  %384 = trunc i64 %383 to i32
  %385 = icmp sgt i32 %6, -1
  %386 = select i1 %385, i32 -2147483648, i32 2147483647
  %387 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %382, i32 %6) #20
  %388 = extractvalue { i32, i1 } %387, 1
  %389 = extractvalue { i32, i1 } %387, 0
  %390 = select i1 %388, i32 %386, i32 %389, !prof !2
  %391 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %384, i32 %6) #20
  %392 = extractvalue { i32, i1 } %391, 1
  %393 = extractvalue { i32, i1 } %391, 0
  %394 = select i1 %392, i32 %386, i32 %393, !prof !2
  %395 = icmp slt i32 %390, %371
  %396 = select i1 %395, i32 %371, i32 %390
  %397 = icmp slt i32 %396, %394
  %398 = select i1 %397, i32 %396, i32 %394
  %399 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 0, i32 0
  store i32 %398, i32* %399, align 4
  %400 = icmp sgt i32 %398, -1
  %401 = select i1 %400, i32 -2147483648, i32 2147483647
  %402 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %371, i32 %398) #20
  %403 = extractvalue { i32, i1 } %402, 1
  %404 = extractvalue { i32, i1 } %402, 0
  %405 = select i1 %403, i32 %401, i32 %404, !prof !2
  br label %483

406:                                              ; preds = %338
  %407 = or i1 %172, %373
  %408 = xor i1 %174, true
  %409 = or i1 %407, %408
  br i1 %409, label %434, label %410

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %412 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %411, align 8
  %413 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %412, i64 69
  %414 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %413, align 8
  %415 = tail call i64 %414(%"class.blink::LayoutBox"* %0) #20
  %416 = trunc i64 %415 to i32
  %417 = lshr i64 %415, 32
  %418 = trunc i64 %417 to i32
  %419 = icmp sgt i32 %6, -1
  %420 = select i1 %419, i32 -2147483648, i32 2147483647
  %421 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %416, i32 %6) #20
  %422 = extractvalue { i32, i1 } %421, 1
  %423 = extractvalue { i32, i1 } %421, 0
  %424 = select i1 %422, i32 %420, i32 %423, !prof !2
  %425 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %418, i32 %6) #20
  %426 = extractvalue { i32, i1 } %425, 1
  %427 = extractvalue { i32, i1 } %425, 0
  %428 = select i1 %426, i32 %420, i32 %427, !prof !2
  %429 = icmp slt i32 %424, %371
  %430 = select i1 %429, i32 %371, i32 %424
  %431 = icmp slt i32 %430, %428
  %432 = select i1 %431, i32 %430, i32 %428
  %433 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 0, i32 0
  store i32 %432, i32* %433, align 4
  br label %483

434:                                              ; preds = %406
  %435 = or i1 %170, %372
  %436 = or i1 %435, %174
  br i1 %436, label %446, label %437

437:                                              ; preds = %434
  %438 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 0, i32 0
  %439 = load i32, i32* %18, align 4
  store i32 %439, i32* %438, align 4
  %440 = icmp sgt i32 %439, -1
  %441 = select i1 %440, i32 -2147483648, i32 2147483647
  %442 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %371, i32 %439) #20
  %443 = extractvalue { i32, i1 } %442, 1
  %444 = extractvalue { i32, i1 } %442, 0
  %445 = select i1 %443, i32 %441, i32 %444, !prof !2
  br label %483

446:                                              ; preds = %434
  %447 = or i1 %407, %174
  br i1 %447, label %478, label %448

448:                                              ; preds = %446
  %449 = tail call zeroext i1 @_ZNK5blink9LayoutBox25AutoWidthShouldFitContentEv(%"class.blink::LayoutBox"* %0)
  br i1 %449, label %450, label %474

450:                                              ; preds = %448
  %451 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %452 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %451, align 8
  %453 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %452, i64 69
  %454 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %453, align 8
  %455 = tail call i64 %454(%"class.blink::LayoutBox"* %0) #20
  %456 = trunc i64 %455 to i32
  %457 = lshr i64 %455, 32
  %458 = trunc i64 %457 to i32
  %459 = icmp sgt i32 %6, -1
  %460 = select i1 %459, i32 -2147483648, i32 2147483647
  %461 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %456, i32 %6) #20
  %462 = extractvalue { i32, i1 } %461, 1
  %463 = extractvalue { i32, i1 } %461, 0
  %464 = select i1 %462, i32 %460, i32 %463, !prof !2
  %465 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %458, i32 %6) #20
  %466 = extractvalue { i32, i1 } %465, 1
  %467 = extractvalue { i32, i1 } %465, 0
  %468 = select i1 %466, i32 %460, i32 %467, !prof !2
  %469 = icmp slt i32 %464, %371
  %470 = select i1 %469, i32 %371, i32 %464
  %471 = icmp slt i32 %470, %468
  %472 = select i1 %471, i32 %470, i32 %468
  %473 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 0, i32 0
  store i32 %472, i32* %473, align 4
  br label %483

474:                                              ; preds = %448
  %475 = icmp sgt i32 %371, 0
  %476 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 0, i32 0
  %477 = select i1 %475, i32 %371, i32 0
  store i32 %477, i32* %476, align 4
  br label %483

478:                                              ; preds = %446
  %479 = or i1 %186, %408
  br i1 %479, label %483, label %480

480:                                              ; preds = %478
  %481 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 0, i32 0
  %482 = load i32, i32* %18, align 4
  store i32 %482, i32* %481, align 4
  br label %483

483:                                              ; preds = %376, %437, %480, %450, %474, %410, %478, %232, %234, %224, %249, %261, %257, %236
  %484 = phi i32 [ %133, %224 ], [ %133, %232 ], [ %133, %234 ], [ %133, %236 ], [ %133, %249 ], [ %280, %261 ], [ %133, %257 ], [ %133, %478 ], [ %133, %480 ], [ %133, %450 ], [ %133, %474 ], [ %445, %437 ], [ %133, %410 ], [ %405, %376 ]
  %485 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0
  %486 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to i1 (%"class.blink::LayoutObject"*)***
  %487 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %486, align 8
  %488 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %487, i64 26
  %489 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %488, align 8
  %490 = tail call zeroext i1 %489(%"class.blink::LayoutObject"* %485) #20
  br i1 %490, label %491, label %622

491:                                              ; preds = %483
  %492 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 5, i32 0
  %493 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %492, align 8
  %494 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %493, i64 0, i32 0, i32 9
  %495 = bitcast [20 x i8]* %494 to i160*
  %496 = load i160, i160* %495, align 8
  %497 = and i160 %496, 41538374868278621028243970633760768
  %498 = icmp eq i160 %497, 0
  br i1 %498, label %622, label %499

499:                                              ; preds = %491
  %500 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 4
  %501 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %500 to i96*
  %502 = load i96, i96* %501, align 4
  %503 = and i96 %502, 268435456
  %504 = icmp eq i96 %503, 0
  br i1 %504, label %508, label %505

505:                                              ; preds = %499
  %506 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #20
  %507 = load i96, i96* %501, align 4
  br label %511

508:                                              ; preds = %499
  %509 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 1, i32 0, i32 1, i32 1
  %510 = bitcast i8* %509 to %"class.blink::LineBoxList"*
  br label %511

511:                                              ; preds = %505, %508
  %512 = phi i96 [ %507, %505 ], [ %502, %508 ]
  %513 = phi %"class.blink::LineBoxList"* [ %506, %505 ], [ %510, %508 ]
  %514 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %513, i64 0, i32 0, i32 0
  %515 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %514, align 8
  %516 = and i96 %512, 268435456
  %517 = icmp eq i96 %516, 0
  br i1 %517, label %520, label %518

518:                                              ; preds = %511
  %519 = tail call dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() #20
  br label %523

520:                                              ; preds = %511
  %521 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 1, i32 0, i32 1, i32 1
  %522 = bitcast i8* %521 to %"class.blink::LineBoxList"*
  br label %523

523:                                              ; preds = %518, %520
  %524 = phi %"class.blink::LineBoxList"* [ %519, %518 ], [ %522, %520 ]
  %525 = getelementptr inbounds %"class.blink::LineBoxList", %"class.blink::LineBoxList"* %524, i64 0, i32 0, i32 1
  %526 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %525, align 8
  %527 = icmp eq %"class.blink::InlineFlowBox"* %515, null
  %528 = icmp eq %"class.blink::InlineFlowBox"* %526, null
  %529 = or i1 %527, %528
  %530 = icmp eq %"class.blink::InlineFlowBox"* %515, %526
  %531 = or i1 %530, %529
  br i1 %531, label %622, label %532

532:                                              ; preds = %523
  %533 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %184, i64 0, i32 0
  %534 = load i32, i32* %533, align 4
  %535 = icmp slt i32 %534, 0
  %536 = select i1 %535, i32 -2147483648, i32 2147483647
  %537 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %484, i32 %534) #20
  %538 = extractvalue { i32, i1 } %537, 1
  %539 = extractvalue { i32, i1 } %537, 0
  %540 = select i1 %538, i32 %536, i32 %539, !prof !2
  %541 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %526, i64 0, i32 6
  %542 = load i32, i32* %541, align 8
  %543 = and i32 %542, 1
  %544 = icmp eq i32 %543, 0
  br i1 %544, label %586, label %545

545:                                              ; preds = %532
  %546 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %526, i64 0, i32 0, i32 7, i32 0
  %547 = load i32, i32* %546, align 4
  %548 = and i32 %547, 2048
  %549 = icmp eq i32 %548, 0
  %550 = bitcast %"class.blink::LineLayoutItem"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %550) #20
  %551 = bitcast %"class.blink::LineLayoutItem"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %551) #20
  %552 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %526, i64 0, i32 0, i32 4, i32 0
  %553 = bitcast %"class.blink::LayoutObject"** %552 to i64*
  %554 = load i64, i64* %553, align 8
  br i1 %549, label %568, label %555

555:                                              ; preds = %545
  %556 = bitcast %"class.blink::LineLayoutItem"* %13 to i64*
  store i64 %554, i64* %556, align 8
  %557 = and i32 %547, 1
  %558 = icmp ne i32 %557, 0
  %559 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %13, i1 zeroext %558) #20
  %560 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %559, i64 0, i32 0, i32 7, i32 0, i32 0
  %561 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %560, align 8
  %562 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %561, i64 0, i32 27
  %563 = load i16, i16* %562, align 8
  %564 = and i16 %563, 224
  %565 = icmp eq i16 %564, 0
  br i1 %565, label %580, label %566

566:                                              ; preds = %555
  %567 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %561, i64 0, i32 24, i32 0
  br label %581

568:                                              ; preds = %545
  %569 = bitcast %"class.blink::LineLayoutItem"* %14 to i64*
  store i64 %554, i64* %569, align 8
  %570 = and i32 %547, 1
  %571 = icmp ne i32 %570, 0
  %572 = call %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"* nonnull %14, i1 zeroext %571) #20
  %573 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %572, i64 0, i32 0, i32 7, i32 0, i32 0
  %574 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %573, align 8
  %575 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %574, i64 0, i32 27
  %576 = load i16, i16* %575, align 8
  %577 = icmp ult i16 %576, 8192
  br i1 %577, label %580, label %578

578:                                              ; preds = %568
  %579 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %574, i64 0, i32 26, i32 0
  br label %581

580:                                              ; preds = %555, %568
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %551) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %550) #20
  br label %586

581:                                              ; preds = %566, %578
  %582 = phi i32* [ %567, %566 ], [ %579, %578 ]
  %583 = load i32, i32* %582, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %551) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %550) #20
  %584 = icmp slt i32 %583, 0
  %585 = select i1 %584, i32 -2147483648, i32 2147483647
  br label %586

586:                                              ; preds = %581, %532, %580
  %587 = phi i32 [ 0, %580 ], [ 0, %532 ], [ %583, %581 ]
  %588 = phi i32 [ 2147483647, %580 ], [ 2147483647, %532 ], [ %585, %581 ]
  %589 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %540, i32 %587) #20
  %590 = extractvalue { i32, i1 } %589, 1
  %591 = extractvalue { i32, i1 } %589, 0
  %592 = select i1 %590, i32 %588, i32 %591, !prof !2
  %593 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %526, i64 0, i32 0, i32 7, i32 0
  %594 = load i32, i32* %593, align 4
  %595 = and i32 %594, 2048
  %596 = icmp eq i32 %595, 0
  %597 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %526, i64 0, i32 0, i32 5, i32 0, i32 0
  %598 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %526, i64 0, i32 0, i32 5, i32 1, i32 0
  %599 = select i1 %596, i32* %598, i32* %597
  %600 = load i32, i32* %599, align 4
  %601 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %515, i64 0, i32 0, i32 7, i32 0
  %602 = load i32, i32* %601, align 4
  %603 = and i32 %602, 2048
  %604 = icmp eq i32 %603, 0
  %605 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %515, i64 0, i32 0, i32 5, i32 0, i32 0
  %606 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %515, i64 0, i32 0, i32 5, i32 1, i32 0
  %607 = select i1 %604, i32* %606, i32* %605
  %608 = load i32, i32* %607, align 4
  %609 = icmp sgt i32 %608, -1
  %610 = select i1 %609, i32 -2147483648, i32 2147483647
  %611 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %600, i32 %608) #20
  %612 = extractvalue { i32, i1 } %611, 1
  %613 = extractvalue { i32, i1 } %611, 0
  %614 = select i1 %612, i32 %610, i32 %613, !prof !2
  %615 = icmp slt i32 %614, 0
  %616 = select i1 %615, i32 -2147483648, i32 2147483647
  %617 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %592, i32 %614) #20
  %618 = extractvalue { i32, i1 } %617, 1
  %619 = extractvalue { i32, i1 } %617, 0
  %620 = select i1 %618, i32 %616, i32 %619, !prof !2
  %621 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 1, i32 0
  store i32 %620, i32* %621, align 4
  br label %635

622:                                              ; preds = %523, %491, %483
  %623 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %184, i64 0, i32 0
  %624 = load i32, i32* %623, align 4
  %625 = icmp slt i32 %624, 0
  %626 = select i1 %625, i32 -2147483648, i32 2147483647
  %627 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %484, i32 %624) #20
  %628 = extractvalue { i32, i1 } %627, 1
  %629 = extractvalue { i32, i1 } %627, 0
  %630 = select i1 %628, i32 %626, i32 %629, !prof !2
  %631 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 1, i32 0
  store i32 %630, i32* %631, align 4
  %632 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 1
  %633 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 0, i32 0
  %634 = load i32, i32* %633, align 4
  tail call void @_ZN5blink9LayoutBox34ComputeLogicalLeftPositionedOffsetERNS_10LayoutUnitEPKS0_S1_PKNS_20LayoutBoxModelObjectES1_(%"class.blink::LayoutUnit"* dereferenceable(4) %632, %"class.blink::LayoutBox"* %0, i32 %634, %"class.blink::LayoutBoxModelObject"* %3, i32 %5)
  br label %635

635:                                              ; preds = %586, %622
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox34ComputeLogicalLeftPositionedOffsetERNS_10LayoutUnitEPKS0_S1_PKNS_20LayoutBoxModelObjectES1_(%"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutBox"* nocapture readonly, i32, %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = trunc i96 %8 to i32
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %11, label %176

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = and i160 %16, 15211807202738752817960438464512
  %18 = icmp eq i160 %17, 5070602400912917605986812821504
  br i1 %18, label %19, label %104

19:                                               ; preds = %11
  %20 = icmp sgt i32 %2, -1
  %21 = select i1 %20, i32 -2147483648, i32 2147483647
  %22 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %4, i32 %2) #20
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = select i1 %23, i32 %21, i32 %24, !prof !2
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %0, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, -1
  %29 = select i1 %28, i32 -2147483648, i32 2147483647
  %30 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %25, i32 %27) #20
  %31 = extractvalue { i32, i1 } %30, 1
  %32 = extractvalue { i32, i1 } %30, 0
  %33 = select i1 %31, i32 %29, i32 %32, !prof !2
  store i32 %33, i32* %26, align 4
  %34 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %35 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %34, align 8
  %36 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, i64 125
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %36, align 8
  %38 = tail call i32 %37(%"class.blink::LayoutBoxModelObject"* %3) #20
  %39 = load i32, i32* %26, align 4
  %40 = icmp slt i32 %38, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %39, i32 %38) #20
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !2
  store i32 %45, i32* %26, align 4
  %46 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 4
  %47 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %46 to i96*
  %48 = load i96, i96* %47, align 4
  %49 = and i96 %48, 67108864
  %50 = icmp eq i96 %49, 0
  br i1 %50, label %248, label %51

51:                                               ; preds = %19
  %52 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to %"class.blink::LayoutBox"*
  %53 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %54 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %53, i64 0, i32 0, i32 9
  %55 = bitcast [20 x i8]* %54 to i160*
  %56 = load i160, i160* %55, align 8
  %57 = and i160 %56, 1190036353683150593851392
  %58 = icmp eq i160 %57, 340010386766614455386112
  %59 = and i96 %48, 8589934592
  %60 = icmp eq i96 %59, 0
  %61 = or i1 %58, %60
  br i1 %61, label %85, label %62

62:                                               ; preds = %51
  %63 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %64 = icmp eq %"class.blink::PaintLayerScrollableArea"* %63, null
  br i1 %64, label %92, label %65

65:                                               ; preds = %62
  %66 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %67 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %66, i64 0, i32 6, i32 3
  %68 = load i8, i8* %67, align 8
  %69 = and i8 %68, 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %66, i64 0, i32 6, i32 1, i32 0, i32 0
  %73 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %72, align 8
  %74 = icmp eq %"class.blink::Scrollbar"* %73, null
  br i1 %74, label %75, label %92

75:                                               ; preds = %71, %65
  %76 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %77 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %76, i64 0, i32 6, i32 3
  %78 = load i8, i8* %77, align 8
  %79 = and i8 %78, 2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %76, i64 0, i32 6, i32 2, i32 0, i32 0
  %83 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %82, align 8
  %84 = icmp eq %"class.blink::Scrollbar"* %83, null
  br i1 %84, label %85, label %92

85:                                               ; preds = %51, %75, %81
  %86 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %86, i64 0, i32 0, i32 9
  %88 = bitcast [20 x i8]* %87 to i160*
  %89 = load i160, i160* %88, align 8
  %90 = and i160 %89, 270215977642229760
  %91 = icmp eq i160 %90, 0
  br i1 %91, label %248, label %92

92:                                               ; preds = %62, %71, %81, %85
  %93 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %52, i32 1, i32 0, i32 1)
  %94 = extractvalue { i64, i64 } %93, 0
  %95 = lshr i64 %94, 32
  %96 = trunc i64 %95 to i32
  %97 = load i32, i32* %26, align 4
  %98 = icmp slt i32 %96, 0
  %99 = select i1 %98, i32 -2147483648, i32 2147483647
  %100 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %97, i32 %96) #20
  %101 = extractvalue { i32, i1 } %100, 1
  %102 = extractvalue { i32, i1 } %100, 0
  %103 = select i1 %101, i32 %99, i32 %102, !prof !2
  store i32 %103, i32* %26, align 4
  br label %248

104:                                              ; preds = %11
  %105 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %106 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %105, align 8
  %107 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %106, i64 124
  %108 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %107, align 8
  %109 = tail call i32 %108(%"class.blink::LayoutBoxModelObject"* %3) #20
  %110 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %0, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp slt i32 %109, 0
  %113 = select i1 %112, i32 -2147483648, i32 2147483647
  %114 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %111, i32 %109) #20
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 %113, i32 %116, !prof !2
  store i32 %117, i32* %110, align 4
  %118 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 4
  %119 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %118 to i96*
  %120 = load i96, i96* %119, align 4
  %121 = and i96 %120, 67108864
  %122 = icmp eq i96 %121, 0
  br i1 %122, label %248, label %123

123:                                              ; preds = %104
  %124 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to %"class.blink::LayoutBox"*
  %125 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %126 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %125, i64 0, i32 0, i32 9
  %127 = bitcast [20 x i8]* %126 to i160*
  %128 = load i160, i160* %127, align 8
  %129 = and i160 %128, 1190036353683150593851392
  %130 = icmp eq i160 %129, 340010386766614455386112
  %131 = and i96 %120, 8589934592
  %132 = icmp eq i96 %131, 0
  %133 = or i1 %130, %132
  br i1 %133, label %157, label %134

134:                                              ; preds = %123
  %135 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %136 = icmp eq %"class.blink::PaintLayerScrollableArea"* %135, null
  br i1 %136, label %164, label %137

137:                                              ; preds = %134
  %138 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %139 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %138, i64 0, i32 6, i32 3
  %140 = load i8, i8* %139, align 8
  %141 = and i8 %140, 1
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %147, label %143

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %138, i64 0, i32 6, i32 1, i32 0, i32 0
  %145 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %144, align 8
  %146 = icmp eq %"class.blink::Scrollbar"* %145, null
  br i1 %146, label %147, label %164

147:                                              ; preds = %143, %137
  %148 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %149 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %148, i64 0, i32 6, i32 3
  %150 = load i8, i8* %149, align 8
  %151 = and i8 %150, 2
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %157, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %148, i64 0, i32 6, i32 2, i32 0, i32 0
  %155 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %154, align 8
  %156 = icmp eq %"class.blink::Scrollbar"* %155, null
  br i1 %156, label %157, label %164

157:                                              ; preds = %123, %147, %153
  %158 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %159 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %158, i64 0, i32 0, i32 9
  %160 = bitcast [20 x i8]* %159 to i160*
  %161 = load i160, i160* %160, align 8
  %162 = and i160 %161, 270215977642229760
  %163 = icmp eq i160 %162, 0
  br i1 %163, label %248, label %164

164:                                              ; preds = %134, %143, %153, %157
  %165 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %124, i32 1, i32 0, i32 1)
  %166 = extractvalue { i64, i64 } %165, 1
  %167 = load i32, i32* %110, align 4
  %168 = lshr i64 %166, 32
  %169 = trunc i64 %168 to i32
  %170 = icmp slt i32 %169, 0
  %171 = select i1 %170, i32 -2147483648, i32 2147483647
  %172 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %167, i32 %169) #20
  %173 = extractvalue { i32, i1 } %172, 1
  %174 = extractvalue { i32, i1 } %172, 0
  %175 = select i1 %173, i32 %171, i32 %174, !prof !2
  store i32 %175, i32* %110, align 4
  br label %248

176:                                              ; preds = %5
  %177 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %178 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %177, align 8
  %179 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %178, i64 122
  %180 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %179, align 8
  %181 = tail call i32 %180(%"class.blink::LayoutBoxModelObject"* %3) #20
  %182 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %0, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = icmp slt i32 %181, 0
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %183, i32 %181) #20
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !2
  store i32 %189, i32* %182, align 4
  %190 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 4
  %191 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %190 to i96*
  %192 = load i96, i96* %191, align 4
  %193 = and i96 %192, 67108864
  %194 = icmp eq i96 %193, 0
  br i1 %194, label %248, label %195

195:                                              ; preds = %176
  %196 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to %"class.blink::LayoutBox"*
  %197 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 5, i32 0
  %198 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %197, align 8
  %199 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %198, i64 0, i32 0, i32 9
  %200 = bitcast [20 x i8]* %199 to i160*
  %201 = load i160, i160* %200, align 8
  %202 = and i160 %201, 1190036353683150593851392
  %203 = icmp eq i160 %202, 340010386766614455386112
  %204 = and i96 %192, 8589934592
  %205 = icmp eq i96 %204, 0
  %206 = or i1 %203, %205
  br i1 %206, label %230, label %207

207:                                              ; preds = %195
  %208 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %209 = icmp eq %"class.blink::PaintLayerScrollableArea"* %208, null
  br i1 %209, label %237, label %210

210:                                              ; preds = %207
  %211 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %212 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %211, i64 0, i32 6, i32 3
  %213 = load i8, i8* %212, align 8
  %214 = and i8 %213, 1
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %220, label %216

216:                                              ; preds = %210
  %217 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %211, i64 0, i32 6, i32 1, i32 0, i32 0
  %218 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %217, align 8
  %219 = icmp eq %"class.blink::Scrollbar"* %218, null
  br i1 %219, label %220, label %237

220:                                              ; preds = %216, %210
  %221 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %222 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %221, i64 0, i32 6, i32 3
  %223 = load i8, i8* %222, align 8
  %224 = and i8 %223, 2
  %225 = icmp eq i8 %224, 0
  br i1 %225, label %230, label %226

226:                                              ; preds = %220
  %227 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %221, i64 0, i32 6, i32 2, i32 0, i32 0
  %228 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %227, align 8
  %229 = icmp eq %"class.blink::Scrollbar"* %228, null
  br i1 %229, label %230, label %237

230:                                              ; preds = %195, %220, %226
  %231 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %197, align 8
  %232 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %231, i64 0, i32 0, i32 9
  %233 = bitcast [20 x i8]* %232 to i160*
  %234 = load i160, i160* %233, align 8
  %235 = and i160 %234, 270215977642229760
  %236 = icmp eq i160 %235, 0
  br i1 %236, label %248, label %237

237:                                              ; preds = %207, %216, %226, %230
  %238 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %196, i32 1, i32 0, i32 1)
  %239 = extractvalue { i64, i64 } %238, 0
  %240 = trunc i64 %239 to i32
  %241 = load i32, i32* %182, align 4
  %242 = icmp slt i32 %240, 0
  %243 = select i1 %242, i32 -2147483648, i32 2147483647
  %244 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %241, i32 %240) #20
  %245 = extractvalue { i32, i1 } %244, 1
  %246 = extractvalue { i32, i1 } %244, 0
  %247 = select i1 %245, i32 %243, i32 %246, !prof !2
  store i32 %247, i32* %182, align 4
  br label %248

248:                                              ; preds = %19, %104, %176, %230, %237, %92, %85, %164, %157
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox23ShrinkToFitLogicalWidthENS_10LayoutUnitES1_(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = bitcast %"class.blink::LayoutBox"* %0 to i64 (%"class.blink::LayoutBox"*)***
  %5 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %5, i64 69
  %7 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %6, align 8
  %8 = tail call i64 %7(%"class.blink::LayoutBox"* %0) #20
  %9 = trunc i64 %8 to i32
  %10 = lshr i64 %8, 32
  %11 = trunc i64 %10 to i32
  %12 = icmp sgt i32 %2, -1
  %13 = select i1 %12, i32 -2147483648, i32 2147483647
  %14 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %9, i32 %2) #20
  %15 = extractvalue { i32, i1 } %14, 1
  %16 = extractvalue { i32, i1 } %14, 0
  %17 = select i1 %15, i32 %13, i32 %16, !prof !2
  %18 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %11, i32 %2) #20
  %19 = extractvalue { i32, i1 } %18, 1
  %20 = extractvalue { i32, i1 } %18, 0
  %21 = select i1 %19, i32 %13, i32 %20, !prof !2
  %22 = icmp slt i32 %17, %1
  %23 = select i1 %22, i32 %1, i32 %17
  %24 = icmp slt i32 %23, %21
  %25 = select i1 %24, i32 %23, i32 %21
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox26ComputeBlockStaticDistanceERNS_6LengthES2_PKS0_PKNS_20LayoutBoxModelObjectEPKNS_20NGBoxFragmentBuilderE(%"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* nocapture readonly dereferenceable(8), %"class.blink::LayoutBox"* nocapture readonly, %"class.blink::LayoutBoxModelObject"*, %"class.blink::NGBoxFragmentBuilder"*) local_unnamed_addr #4 align 2 {
  %6 = alloca %"class.blink::LayoutUnit", align 4
  %7 = alloca %"class.blink::LayoutUnit", align 4
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.blink::Length"*
  %10 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  %11 = load i8, i8* %10, align 1
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %201

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %201

17:                                               ; preds = %13
  %18 = bitcast %"class.blink::LayoutUnit"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #20
  %19 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  store i32 -1431655766, i32* %19, align 4
  %20 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %20, align 8
  %22 = icmp eq %"struct.blink::FragmentData::RareData"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %24, align 8
  br label %26

26:                                               ; preds = %17, %23
  %27 = phi %"class.blink::PaintLayer"* [ %25, %23 ], [ null, %17 ]
  %28 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %27, i64 0, i32 11, i32 0
  %29 = load i32, i32* %28, align 4
  store i32 %29, i32* %19, align 4
  %30 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 7
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = icmp eq %"class.blink::LayoutObject"* %31, null
  %33 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0
  %34 = icmp eq %"class.blink::LayoutObject"* %31, %33
  %35 = or i1 %32, %34
  br i1 %35, label %41, label %36

36:                                               ; preds = %26
  %37 = icmp eq %"class.blink::NGBoxFragmentBuilder"* %4, null
  %38 = getelementptr inbounds %"class.blink::NGBoxFragmentBuilder", %"class.blink::NGBoxFragmentBuilder"* %4, i64 0, i32 0, i32 0, i32 5
  %39 = bitcast %"class.blink::LayoutUnit"* %7 to i8*
  %40 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %7, i64 0, i32 0
  br label %90

41:                                               ; preds = %168, %26
  %42 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8, !noalias !368
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8, !noalias !368
  %47 = lshr i160 %46, 102
  %48 = trunc i160 %47 to i8
  %49 = and i8 %48, 3
  %50 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to i8*
  switch i8 %49, label %51 [
    i8 0, label %60
    i8 1, label %52
  ]

51:                                               ; preds = %41
  br label %52

52:                                               ; preds = %51, %41
  %53 = phi { i64, i64 } [ { i64 993, i64 0 }, %51 ], [ { i64 1001, i64 0 }, %41 ]
  %54 = extractvalue { i64, i64 } %53, 0
  %55 = extractvalue { i64, i64 } %53, 1
  %56 = getelementptr inbounds i8, i8* %50, i64 %55
  %57 = bitcast i8* %56 to %"class.blink::LayoutBoxModelObject"*
  %58 = and i64 %54, 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %70, label %60

60:                                               ; preds = %52, %41
  %61 = phi %"class.blink::LayoutBoxModelObject"* [ %57, %52 ], [ %3, %41 ]
  %62 = phi i8* [ %56, %52 ], [ %50, %41 ]
  %63 = phi i64 [ %54, %52 ], [ 977, %41 ]
  %64 = bitcast i8* %62 to i8**
  %65 = load i8*, i8** %64, align 8
  %66 = add i64 %63, -1
  %67 = getelementptr i8, i8* %65, i64 %66
  %68 = bitcast i8* %67 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %69 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %68, align 8
  br label %72

70:                                               ; preds = %52
  %71 = inttoptr i64 %54 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %72

72:                                               ; preds = %60, %70
  %73 = phi %"class.blink::LayoutBoxModelObject"* [ %61, %60 ], [ %57, %70 ]
  %74 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %69, %60 ], [ %71, %70 ]
  %75 = call i32 %74(%"class.blink::LayoutBoxModelObject"* %73) #20
  %76 = load i32, i32* %19, align 4
  %77 = icmp sgt i32 %75, -1
  %78 = select i1 %77, i32 -2147483648, i32 2147483647
  %79 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %76, i32 %75) #20
  %80 = extractvalue { i32, i1 } %79, 1
  %81 = extractvalue { i32, i1 } %79, 0
  %82 = select i1 %80, i32 %78, i32 %81, !prof !2
  store i32 %82, i32* %19, align 4
  %83 = icmp eq %"class.blink::LayoutBoxModelObject"* %3, null
  br i1 %83, label %183, label %84

84:                                               ; preds = %72
  %85 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 4
  %86 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %85 to i96*
  %87 = load i96, i96* %86, align 4
  %88 = and i96 %87, 67108864
  %89 = icmp eq i96 %88, 0
  br i1 %89, label %183, label %173

90:                                               ; preds = %36, %168
  %91 = phi %"class.blink::LayoutObject"* [ %31, %36 ], [ %169, %168 ]
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %91, i64 0, i32 4
  %93 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %92 to i96*
  %94 = load i96, i96* %93, align 4
  %95 = and i96 %94, 67108864
  %96 = icmp eq i96 %95, 0
  br i1 %96, label %168, label %97

97:                                               ; preds = %90
  %98 = bitcast %"class.blink::LayoutObject"* %91 to i1 (%"class.blink::LayoutObject"*, i32)***
  %99 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %98, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %99, i64 92
  %101 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %100, align 8
  %102 = call zeroext i1 %101(%"class.blink::LayoutObject"* nonnull %91, i32 49) #20
  br i1 %102, label %103, label %109

103:                                              ; preds = %97
  %104 = bitcast %"class.blink::LayoutObject"* %91 to i1 (%"class.blink::LayoutObject"*)***
  %105 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %104, align 8
  %106 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %105, i64 28
  %107 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %106, align 8
  %108 = call zeroext i1 %107(%"class.blink::LayoutObject"* nonnull %91) #20
  br i1 %108, label %109, label %168

109:                                              ; preds = %103, %97
  br i1 %37, label %119, label %110

110:                                              ; preds = %109
  %111 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  %112 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %91, i64 0, i32 7
  %113 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %112, align 8
  %114 = icmp eq %"class.blink::LayoutObject"* %111, %113
  br i1 %114, label %115, label %119

115:                                              ; preds = %110
  %116 = call i64 @_ZNK5blink20NGBoxFragmentBuilder14GetChildOffsetEPKNS_12LayoutObjectE(%"class.blink::NGBoxFragmentBuilder"* nonnull %4, %"class.blink::LayoutObject"* nonnull %91) #20
  %117 = lshr i64 %116, 32
  %118 = trunc i64 %117 to i32
  br label %133

119:                                              ; preds = %109, %110
  %120 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %91, i64 0, i32 5, i32 0
  %121 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %121, i64 0, i32 0, i32 9
  %123 = bitcast [20 x i8]* %122 to i160*
  %124 = load i160, i160* %123, align 8
  %125 = and i160 %124, 15211807202738752817960438464512
  %126 = icmp eq i160 %125, 0
  %127 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %91, i64 1, i32 4
  %128 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %127 to i32*
  %129 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %91, i64 1, i32 1, i32 1
  %130 = bitcast i8* %129 to i32*
  %131 = select i1 %126, i32* %128, i32* %130
  %132 = load i32, i32* %131, align 4
  br label %133

133:                                              ; preds = %119, %115
  %134 = phi i32 [ %132, %119 ], [ %118, %115 ]
  %135 = load i32, i32* %19, align 4
  %136 = icmp slt i32 %134, 0
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %135, i32 %134) #20
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !2
  store i32 %141, i32* %19, align 4
  %142 = load i96, i96* %93, align 4
  %143 = lshr i96 %142, 75
  %144 = trunc i96 %143 to i32
  %145 = and i32 %144, 1
  %146 = or i32 %145, 2
  %147 = icmp eq i32 %146, 3
  br i1 %147, label %148, label %160

148:                                              ; preds = %133
  %149 = bitcast %"class.blink::LayoutObject"* %91 to %"class.blink::LayoutBoxModelObject"*
  %150 = call i64 @_ZNK5blink20LayoutBoxModelObject23OffsetForInFlowPositionEv(%"class.blink::LayoutBoxModelObject"* %149) #20
  %151 = lshr i64 %150, 32
  %152 = trunc i64 %151 to i32
  %153 = load i32, i32* %19, align 4
  %154 = icmp slt i32 %152, 0
  %155 = select i1 %154, i32 -2147483648, i32 2147483647
  %156 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %153, i32 %152) #20
  %157 = extractvalue { i32, i1 } %156, 1
  %158 = extractvalue { i32, i1 } %156, 0
  %159 = select i1 %157, i32 %155, i32 %158, !prof !2
  store i32 %159, i32* %19, align 4
  br label %160

160:                                              ; preds = %148, %133
  %161 = bitcast %"class.blink::LayoutObject"* %91 to i1 (%"class.blink::LayoutObject"*)***
  %162 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %161, align 8
  %163 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %162, i64 25
  %164 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %163, align 8
  %165 = call zeroext i1 %164(%"class.blink::LayoutObject"* nonnull %91) #20
  br i1 %165, label %166, label %168

166:                                              ; preds = %160
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #20
  store i32 0, i32* %40, align 4
  %167 = bitcast %"class.blink::LayoutObject"* %91 to %"class.blink::LayoutFlowThread"*
  call void @_ZNK5blink16LayoutFlowThread37FlowThreadToContainingCoordinateSpaceERNS_10LayoutUnitES2_(%"class.blink::LayoutFlowThread"* %167, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %6, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %7) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #20
  br label %168

168:                                              ; preds = %103, %90, %166, %160
  %169 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %91, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %170 = icmp eq %"class.blink::LayoutObject"* %169, null
  %171 = icmp eq %"class.blink::LayoutObject"* %169, %33
  %172 = or i1 %170, %171
  br i1 %172, label %41, label %90

173:                                              ; preds = %84
  %174 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to %"class.blink::LayoutBox"*
  %175 = call i32 @_ZNK5blink9LayoutBox25LogicalTopScrollbarHeightEv(%"class.blink::LayoutBox"* nonnull %174)
  %176 = load i32, i32* %19, align 4
  %177 = icmp sgt i32 %175, -1
  %178 = select i1 %177, i32 -2147483648, i32 2147483647
  %179 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %176, i32 %175) #20
  %180 = extractvalue { i32, i1 } %179, 1
  %181 = extractvalue { i32, i1 } %179, 0
  %182 = select i1 %180, i32 %178, i32 %181, !prof !2
  store i32 %182, i32* %19, align 4
  br label %183

183:                                              ; preds = %84, %72, %173
  %184 = phi i32 [ %82, %84 ], [ %82, %72 ], [ %182, %173 ]
  %185 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #20
  %186 = bitcast i64* %8 to float*
  %187 = sitofp i32 %184 to float
  %188 = fmul float %187, 1.562500e-02
  store float %188, float* %186, align 8, !alias.scope !371
  %189 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 1
  store i8 0, i8* %189, align 4, !alias.scope !371
  %190 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 2
  store i8 2, i8* %190, align 1, !alias.scope !371
  %191 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 3
  store i8 1, i8* %191, align 2, !alias.scope !371
  %192 = load i8, i8* %10, align 1
  %193 = icmp eq i8 %192, 8
  br i1 %193, label %197, label %194

194:                                              ; preds = %183
  %195 = bitcast %"class.blink::Length"* %0 to i64*
  %196 = load i64, i64* %8, align 8
  store i64 %196, i64* %195, align 4
  br label %200

197:                                              ; preds = %183
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %0) #20
  %198 = bitcast %"class.blink::Length"* %0 to i64*
  %199 = load i64, i64* %8, align 8
  store i64 %199, i64* %198, align 4
  br label %200

200:                                              ; preds = %197, %194
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #20
  br label %201

201:                                              ; preds = %5, %13, %200
  ret void
}

declare void @_ZNK5blink16LayoutFlowThread37FlowThreadToContainingCoordinateSpaceERNS_10LayoutUnitES2_(%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox25LogicalTopScrollbarHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #20
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %60, label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %47, i64 0, i32 0, i32 9
  %49 = bitcast [20 x i8]* %48 to i160*
  %50 = load i160, i160* %49, align 8
  %51 = and i160 %50, 15211807202738752817960438464512
  %52 = icmp eq i160 %51, 5070602400912917605986812821504
  %53 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 1, i32 0, i32 1)
  %54 = extractvalue { i64, i64 } %53, 0
  br i1 %52, label %55, label %58

55:                                               ; preds = %46
  %56 = lshr i64 %54, 32
  %57 = trunc i64 %56 to i32
  br label %60

58:                                               ; preds = %46
  %59 = trunc i64 %54 to i32
  br label %60

60:                                               ; preds = %39, %58, %55
  %61 = phi i32 [ %57, %55 ], [ %59, %58 ], [ 0, %39 ]
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nocapture dereferenceable(24)) unnamed_addr #4 align 2 {
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca i64, align 8
  %16 = bitcast i64* %15 to %"class.blink::Length"*
  %17 = alloca i64, align 8
  %18 = bitcast i64* %17 to %"class.blink::Length"*
  %19 = alloca i64, align 8
  %20 = bitcast i64* %19 to %"class.blink::Length"*
  %21 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %22 = alloca i64, align 8
  %23 = bitcast i64* %22 to %"class.blink::Length"*
  %24 = alloca i64, align 8
  %25 = bitcast i64* %24 to %"class.blink::Length"*
  %26 = alloca i64, align 8
  %27 = bitcast i64* %26 to %"class.blink::Length"*
  %28 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %29 = alloca i64, align 8
  %30 = bitcast i64* %29 to %"class.blink::Length"*
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %32 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %31, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %33 = bitcast %"class.blink::LayoutObject"* %32 to %"class.blink::LayoutBoxModelObject"*
  %34 = tail call i32 @_ZNK5blink9LayoutBox41ContainingBlockLogicalHeightForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutBoxModelObject"* %33, i1 zeroext true)
  %35 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %36 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %38 = tail call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %37)
  %39 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  %40 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40)
  %41 = bitcast %"class.blink::Length"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 9
  %43 = bitcast [20 x i8]* %42 to i160*
  %44 = load i160, i160* %43, align 8, !noalias !374
  %45 = lshr i160 %44, 102
  %46 = trunc i160 %45 to i8
  %47 = and i8 %46, 3
  %48 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 7, i32 0, i32 0
  %49 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %48, align 8, !noalias !377
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %49, i64 0, i32 12
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %49, i64 0, i32 11
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %49, i64 0, i32 10
  store %"class.blink::Length"* %50, %"class.blink::Length"** %12, align 8, !alias.scope !374
  store %"class.blink::Length"* %51, %"class.blink::Length"** %13, align 8, !alias.scope !374
  store %"class.blink::Length"* %52, %"class.blink::Length"** %14, align 8, !alias.scope !374
  %53 = icmp eq i8 %47, 0
  %54 = icmp eq i8 %47, 1
  %55 = select i1 %54, %"class.blink::Length"** %13, %"class.blink::Length"** %14
  %56 = select i1 %53, %"class.blink::Length"** %12, %"class.blink::Length"** %55
  %57 = load %"class.blink::Length"*, %"class.blink::Length"** %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  %58 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58)
  %59 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59)
  %60 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60)
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %49, i64 0, i32 9
  store %"class.blink::Length"* %51, %"class.blink::Length"** %9, align 8, !alias.scope !378
  store %"class.blink::Length"* %61, %"class.blink::Length"** %10, align 8, !alias.scope !378
  store %"class.blink::Length"* %52, %"class.blink::Length"** %11, align 8, !alias.scope !378
  %62 = select i1 %54, %"class.blink::Length"** %11, %"class.blink::Length"** %9
  %63 = select i1 %53, %"class.blink::Length"** %10, %"class.blink::Length"** %62
  %64 = load %"class.blink::Length"*, %"class.blink::Length"** %63, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60)
  %65 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #20
  %66 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 2
  %67 = bitcast %"class.blink::Length"** %6 to i8*
  store i64 -6148914691236517206, i64* %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67)
  %68 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68)
  %69 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69)
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %49, i64 0, i32 18
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %49, i64 0, i32 17
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %49, i64 0, i32 8
  store %"class.blink::Length"* %70, %"class.blink::Length"** %6, align 8, !alias.scope !381
  store %"class.blink::Length"* %71, %"class.blink::Length"** %7, align 8, !alias.scope !381
  store %"class.blink::Length"* %72, %"class.blink::Length"** %8, align 8, !alias.scope !381
  %73 = select i1 %54, %"class.blink::Length"** %7, %"class.blink::Length"** %8
  %74 = select i1 %53, %"class.blink::Length"** %6, %"class.blink::Length"** %73
  %75 = bitcast %"class.blink::Length"** %74 to i64**
  %76 = load i64*, i64** %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69)
  %77 = load i64, i64* %76, align 4
  store i64 %77, i64* %15, align 8
  %78 = and i64 %77, 280375465082880
  %79 = icmp eq i64 %78, 8796093022208
  br i1 %79, label %80, label %86

80:                                               ; preds = %2
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %16) #20
  %81 = load i160, i160* %43, align 8, !noalias !384
  %82 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %48, align 8, !noalias !384
  %83 = lshr i160 %81, 102
  %84 = trunc i160 %83 to i8
  %85 = and i8 %84, 3
  br label %86

86:                                               ; preds = %2, %80
  %87 = phi i8 [ %47, %2 ], [ %85, %80 ]
  %88 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %49, %2 ], [ %82, %80 ]
  %89 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #20
  %90 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %18, i64 0, i32 2
  %91 = bitcast %"class.blink::Length"** %3 to i8*
  store i64 -6148914691236517206, i64* %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91)
  %92 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93)
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %88, i64 0, i32 17
  %95 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %88, i64 0, i32 7
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %88, i64 0, i32 8
  store %"class.blink::Length"* %94, %"class.blink::Length"** %3, align 8, !alias.scope !384
  store %"class.blink::Length"* %95, %"class.blink::Length"** %4, align 8, !alias.scope !384
  store %"class.blink::Length"* %96, %"class.blink::Length"** %5, align 8, !alias.scope !384
  %97 = icmp eq i8 %87, 0
  %98 = icmp eq i8 %87, 1
  %99 = select i1 %98, %"class.blink::Length"** %5, %"class.blink::Length"** %3
  %100 = select i1 %97, %"class.blink::Length"** %4, %"class.blink::Length"** %99
  %101 = bitcast %"class.blink::Length"** %100 to i64**
  %102 = load i64*, i64** %101, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93)
  %103 = load i64, i64* %102, align 4
  store i64 %103, i64* %17, align 8
  %104 = and i64 %103, 280375465082880
  %105 = icmp eq i64 %104, 8796093022208
  br i1 %105, label %106, label %107

106:                                              ; preds = %86
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %18) #20
  br label %107

107:                                              ; preds = %86, %106
  call void @_ZN5blink9LayoutBox26ComputeBlockStaticDistanceERNS_6LengthES2_PKS0_PKNS_20LayoutBoxModelObjectEPKNS_20NGBoxFragmentBuilderE(%"class.blink::Length"* nonnull dereferenceable(8) %16, %"class.blink::Length"* nonnull dereferenceable(8) %18, %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBoxModelObject"* %33, %"class.blink::NGBoxFragmentBuilder"* null)
  %108 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = load i160, i160* %43, align 8
  %111 = and i160 %110, 15211807202738752817960438464512
  %112 = icmp eq i160 %111, 0
  %113 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 5, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %113, align 8
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %114, i64 0, i32 3
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %114, i64 0, i32 8
  %117 = select i1 %112, %"class.blink::Length"* %115, %"class.blink::Length"* %116
  %118 = bitcast %"class.blink::Length"* %117 to i64*
  %119 = load i64, i64* %118, align 4
  store i64 %119, i64* %19, align 8
  %120 = and i64 %119, 280375465082880
  %121 = icmp eq i64 %120, 8796093022208
  br i1 %121, label %122, label %123

122:                                              ; preds = %107
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %20) #20
  br label %123

123:                                              ; preds = %107, %122
  call void @_ZNK5blink9LayoutBox35ComputePositionedLogicalHeightUsingENS_8SizeTypeENS_6LengthEPKNS_20LayoutBoxModelObjectENS_10LayoutUnitES6_S6_RKS2_S8_S8_S8_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %0, i32 0, %"class.blink::Length"* nonnull %20, %"class.blink::LayoutBoxModelObject"* %33, i32 %34, i32 %38, i32 %109, %"class.blink::Length"* nonnull dereferenceable(8) %16, %"class.blink::Length"* nonnull dereferenceable(8) %18, %"class.blink::Length"* dereferenceable(8) %57, %"class.blink::Length"* dereferenceable(8) %64, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24) %1)
  %124 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %20, i64 0, i32 2
  %125 = load i8, i8* %124, align 1
  %126 = icmp eq i8 %125, 8
  br i1 %126, label %127, label %128

127:                                              ; preds = %123
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %20) #20
  br label %128

128:                                              ; preds = %123, %127
  %129 = load i160, i160* %43, align 8
  %130 = and i160 %129, 15211807202738752817960438464512
  %131 = icmp eq i160 %130, 0
  %132 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %113, align 8
  %133 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %132, i64 0, i32 4
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %132, i64 0, i32 5
  %135 = select i1 %131, %"class.blink::Length"* %133, %"class.blink::Length"* %134
  %136 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %135, i64 0, i32 2
  %137 = load i8, i8* %136, align 1
  switch i8 %137, label %138 [
    i8 12, label %169
    i8 3, label %169
    i8 4, label %169
    i8 5, label %169
    i8 7, label %169
  ]

138:                                              ; preds = %128
  %139 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #20
  %140 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %21, i64 0, i32 0, i32 0
  %141 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %21, i64 0, i32 1, i32 0
  %142 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %21, i64 0, i32 2, i32 0, i32 0
  %143 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %21, i64 0, i32 2, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %139, i8 0, i64 24, i1 false) #20
  %144 = bitcast %"class.blink::Length"* %135 to i64*
  %145 = load i64, i64* %144, align 4
  store i64 %145, i64* %22, align 8
  %146 = and i64 %145, 280375465082880
  %147 = icmp eq i64 %146, 8796093022208
  br i1 %147, label %148, label %149

148:                                              ; preds = %138
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %23) #20
  br label %149

149:                                              ; preds = %138, %148
  call void @_ZNK5blink9LayoutBox35ComputePositionedLogicalHeightUsingENS_8SizeTypeENS_6LengthEPKNS_20LayoutBoxModelObjectENS_10LayoutUnitES6_S6_RKS2_S8_S8_S8_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %0, i32 2, %"class.blink::Length"* nonnull %23, %"class.blink::LayoutBoxModelObject"* %33, i32 %34, i32 %38, i32 %109, %"class.blink::Length"* nonnull dereferenceable(8) %16, %"class.blink::Length"* nonnull dereferenceable(8) %18, %"class.blink::Length"* dereferenceable(8) %57, %"class.blink::Length"* dereferenceable(8) %64, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %21)
  %150 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %23, i64 0, i32 2
  %151 = load i8, i8* %150, align 1
  %152 = icmp eq i8 %151, 8
  br i1 %152, label %153, label %154

153:                                              ; preds = %149
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %23) #20
  br label %154

154:                                              ; preds = %149, %153
  %155 = load i32, i32* %108, align 4
  %156 = load i32, i32* %140, align 4
  %157 = icmp sgt i32 %155, %156
  br i1 %157, label %158, label %165

158:                                              ; preds = %154
  store i32 %156, i32* %108, align 4
  %159 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 1, i32 0
  %160 = load i32, i32* %141, align 4
  store i32 %160, i32* %159, align 4
  %161 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2, i32 0, i32 0
  %162 = load i32, i32* %142, align 4
  store i32 %162, i32* %161, align 4
  %163 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2, i32 1, i32 0
  %164 = load i32, i32* %143, align 4
  store i32 %164, i32* %163, align 4
  br label %165

165:                                              ; preds = %158, %154
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #20
  %166 = load i160, i160* %43, align 8
  %167 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %113, align 8
  %168 = and i160 %166, 15211807202738752817960438464512
  br label %169

169:                                              ; preds = %128, %128, %128, %128, %128, %165
  %170 = phi i160 [ %130, %128 ], [ %130, %128 ], [ %130, %128 ], [ %130, %128 ], [ %130, %128 ], [ %168, %165 ]
  %171 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %132, %128 ], [ %132, %128 ], [ %132, %128 ], [ %132, %128 ], [ %132, %128 ], [ %167, %165 ]
  %172 = bitcast i64* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #20
  %173 = bitcast i64* %24 to i32*
  %174 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %25, i64 0, i32 2
  %175 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %25, i64 0, i32 3
  %176 = icmp eq i160 %170, 0
  %177 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %171, i64 0, i32 6
  %178 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %171, i64 0, i32 7
  %179 = select i1 %176, %"class.blink::Length"* %177, %"class.blink::Length"* %178
  %180 = bitcast %"class.blink::Length"* %179 to i64*
  %181 = load i64, i64* %180, align 4
  store i64 %181, i64* %24, align 8
  %182 = and i64 %181, 280375465082880
  %183 = icmp eq i64 %182, 8796093022208
  %184 = lshr i64 %181, 40
  %185 = trunc i64 %184 to i8
  br i1 %183, label %186, label %188

186:                                              ; preds = %169
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %25) #20
  %187 = load i8, i8* %174, align 1
  br label %188

188:                                              ; preds = %169, %186
  %189 = phi i8 [ %185, %169 ], [ %187, %186 ]
  switch i8 %189, label %208 [
    i8 3, label %190
    i8 4, label %190
    i8 5, label %190
    i8 7, label %190
  ]

190:                                              ; preds = %188, %188, %188, %188
  %191 = bitcast i64* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %191) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %191, i8 0, i64 7, i1 false) #20, !alias.scope !387
  %192 = icmp eq i8 %189, 8
  br i1 %192, label %197, label %193

193:                                              ; preds = %190
  %194 = load i64, i64* %26, align 8
  store i64 %194, i64* %24, align 8
  %195 = lshr i64 %194, 40
  %196 = trunc i64 %195 to i8
  br label %206

197:                                              ; preds = %190
  %198 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 0, i32 2
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %25) #20
  %199 = load i8, i8* %198, align 1
  %200 = icmp eq i8 %199, 8
  %201 = load i64, i64* %26, align 8
  store i64 %201, i64* %24, align 8
  %202 = lshr i64 %201, 40
  %203 = trunc i64 %202 to i8
  br i1 %200, label %204, label %206

204:                                              ; preds = %197
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %27) #20
  %205 = load i8, i8* %174, align 1
  br label %206

206:                                              ; preds = %193, %197, %204
  %207 = phi i8 [ %203, %197 ], [ %205, %204 ], [ %196, %193 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %191) #20
  br label %208

208:                                              ; preds = %188, %206
  %209 = phi i8 [ %189, %188 ], [ %207, %206 ]
  switch i8 %209, label %210 [
    i8 0, label %224
    i8 8, label %224
  ]

210:                                              ; preds = %208
  %211 = load i8, i8* %175, align 2, !range !4
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %219, label %213

213:                                              ; preds = %210
  %214 = bitcast i64* %24 to float*
  %215 = load float, float* %214, align 8
  %216 = fcmp une float %215, 0.000000e+00
  %217 = icmp eq i8 %209, 6
  %218 = or i1 %217, %216
  br i1 %218, label %224, label %252

219:                                              ; preds = %210
  %220 = load i32, i32* %173, align 8
  %221 = icmp ne i32 %220, 0
  %222 = icmp eq i8 %209, 6
  %223 = or i1 %222, %221
  br i1 %223, label %224, label %252

224:                                              ; preds = %219, %213, %208, %208
  %225 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %225) #20
  %226 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %28, i64 0, i32 0, i32 0
  %227 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %28, i64 0, i32 1, i32 0
  %228 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %28, i64 0, i32 2, i32 0, i32 0
  %229 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %28, i64 0, i32 2, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %225, i8 0, i64 24, i1 false) #20
  %230 = load i64, i64* %24, align 8
  store i64 %230, i64* %29, align 8
  %231 = and i64 %230, 280375465082880
  %232 = icmp eq i64 %231, 8796093022208
  br i1 %232, label %233, label %234

233:                                              ; preds = %224
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %30) #20
  br label %234

234:                                              ; preds = %224, %233
  call void @_ZNK5blink9LayoutBox35ComputePositionedLogicalHeightUsingENS_8SizeTypeENS_6LengthEPKNS_20LayoutBoxModelObjectENS_10LayoutUnitES6_S6_RKS2_S8_S8_S8_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %0, i32 1, %"class.blink::Length"* nonnull %30, %"class.blink::LayoutBoxModelObject"* %33, i32 %34, i32 %38, i32 %109, %"class.blink::Length"* nonnull dereferenceable(8) %16, %"class.blink::Length"* nonnull dereferenceable(8) %18, %"class.blink::Length"* dereferenceable(8) %57, %"class.blink::Length"* dereferenceable(8) %64, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %28)
  %235 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %30, i64 0, i32 2
  %236 = load i8, i8* %235, align 1
  %237 = icmp eq i8 %236, 8
  br i1 %237, label %238, label %239

238:                                              ; preds = %234
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %30) #20
  br label %239

239:                                              ; preds = %234, %238
  %240 = load i32, i32* %108, align 4
  %241 = load i32, i32* %226, align 4
  %242 = icmp slt i32 %240, %241
  br i1 %242, label %243, label %250

243:                                              ; preds = %239
  store i32 %241, i32* %108, align 4
  %244 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 1, i32 0
  %245 = load i32, i32* %227, align 4
  store i32 %245, i32* %244, align 4
  %246 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2, i32 0, i32 0
  %247 = load i32, i32* %228, align 4
  store i32 %247, i32* %246, align 4
  %248 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %1, i64 0, i32 2, i32 1, i32 0
  %249 = load i32, i32* %229, align 4
  store i32 %249, i32* %248, align 4
  br label %250

250:                                              ; preds = %243, %239
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %225) #20
  %251 = load i8, i8* %174, align 1
  br label %252

252:                                              ; preds = %219, %213, %250
  %253 = phi i8 [ %209, %219 ], [ %209, %213 ], [ %251, %250 ]
  %254 = load i32, i32* %108, align 4
  %255 = icmp slt i32 %38, 0
  %256 = select i1 %255, i32 -2147483648, i32 2147483647
  %257 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %254, i32 %38) #20
  %258 = extractvalue { i32, i1 } %257, 1
  %259 = extractvalue { i32, i1 } %257, 0
  %260 = select i1 %258, i32 %256, i32 %259, !prof !2
  store i32 %260, i32* %108, align 4
  %261 = icmp eq i8 %253, 8
  br i1 %261, label %262, label %263

262:                                              ; preds = %252
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %25) #20
  br label %263

263:                                              ; preds = %252, %262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #20
  %264 = load i8, i8* %90, align 1
  %265 = icmp eq i8 %264, 8
  br i1 %265, label %266, label %267

266:                                              ; preds = %263
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %18) #20
  br label %267

267:                                              ; preds = %263, %266
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #20
  %268 = load i8, i8* %66, align 1
  %269 = icmp eq i8 %268, 8
  br i1 %269, label %270, label %271

270:                                              ; preds = %267
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %16) #20
  br label %271

271:                                              ; preds = %267, %270
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox35ComputePositionedLogicalHeightUsingENS_8SizeTypeENS_6LengthEPKNS_20LayoutBoxModelObjectENS_10LayoutUnitES6_S6_RKS2_S8_S8_S8_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, i32, %"class.blink::Length"*, %"class.blink::LayoutBoxModelObject"*, i32, i32, i32, %"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8), %"class.blink::Length"* dereferenceable(8), %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nocapture dereferenceable(24)) local_unnamed_addr #9 align 2 {
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca %"class.blink::Length"*, align 8
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = alloca %"class.blink::Length"*, align 8
  %18 = alloca %"class.blink::Length"*, align 8
  %19 = alloca %"class.blink::Length"*, align 8
  %20 = alloca %"class.blink::Length"*, align 8
  %21 = alloca %"class.blink::Length"*, align 8
  %22 = alloca %"class.blink::Length"*, align 8
  %23 = alloca %"class.blink::Length"*, align 8
  %24 = alloca %"class.blink::Length"*, align 8
  %25 = alloca %"class.blink::Length"*, align 8
  %26 = alloca %"class.blink::Length"*, align 8
  %27 = alloca <2 x float>, align 8
  %28 = alloca i64, align 8
  %29 = bitcast i64* %28 to %"class.blink::Length"*
  %30 = alloca i64, align 8
  %31 = bitcast i64* %30 to %"class.blink::Length"*
  %32 = alloca %"struct.blink::NGBoxStrut", align 4
  %33 = alloca i64, align 8
  %34 = bitcast i64* %33 to %"struct.blink::LogicalSize"*
  %35 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %36 = icmp eq i32 %1, 1
  br i1 %36, label %37, label %75

37:                                               ; preds = %12
  %38 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %75

41:                                               ; preds = %37
  %42 = tail call zeroext i1 @_ZNK5blink9LayoutBox41ShouldComputeLogicalHeightFromAspectRatioEv(%"class.blink::LayoutBox"* %0)
  br i1 %42, label %43, label %60

43:                                               ; preds = %41
  %44 = bitcast i64* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #20
  %45 = bitcast i64* %28 to float*
  %46 = sitofp i32 %6 to float
  %47 = fmul float %46, 1.562500e-02
  store float %47, float* %45, align 8, !alias.scope !390
  %48 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %29, i64 0, i32 1
  store i8 0, i8* %48, align 4, !alias.scope !390
  %49 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %29, i64 0, i32 2
  store i8 2, i8* %49, align 1, !alias.scope !390
  %50 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %29, i64 0, i32 3
  store i8 1, i8* %50, align 2, !alias.scope !390
  %51 = load i8, i8* %38, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %56, label %53

53:                                               ; preds = %43
  %54 = bitcast %"class.blink::Length"* %2 to i64*
  %55 = load i64, i64* %28, align 8
  store i64 %55, i64* %54, align 4
  br label %59

56:                                               ; preds = %43
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %2) #20
  %57 = bitcast %"class.blink::Length"* %2 to i64*
  %58 = load i64, i64* %28, align 8
  store i64 %58, i64* %57, align 4
  br label %59

59:                                               ; preds = %56, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #20
  br label %75

60:                                               ; preds = %41
  %61 = bitcast i64* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #20
  %62 = bitcast i64* %30 to i32*
  store i32 0, i32* %62, align 8, !alias.scope !393
  %63 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %31, i64 0, i32 1
  store i8 0, i8* %63, align 4, !alias.scope !393
  %64 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %31, i64 0, i32 2
  store i8 2, i8* %64, align 1, !alias.scope !393
  %65 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %31, i64 0, i32 3
  store i8 0, i8* %65, align 2, !alias.scope !393
  %66 = load i8, i8* %38, align 1
  %67 = icmp eq i8 %66, 8
  br i1 %67, label %71, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.blink::Length"* %2 to i64*
  %70 = load i64, i64* %30, align 8
  store i64 %70, i64* %69, align 4
  br label %74

71:                                               ; preds = %60
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %2) #20
  %72 = bitcast %"class.blink::Length"* %2 to i64*
  %73 = load i64, i64* %30, align 8
  store i64 %73, i64* %72, align 4
  br label %74

74:                                               ; preds = %71, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #20
  br label %75

75:                                               ; preds = %59, %74, %37, %12
  %76 = icmp sgt i32 %5, -1
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %6, i32 %5) #20
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !2
  %82 = call i32 @_ZNK5blink9LayoutBox40ContainingBlockLogicalWidthForPositionedEPKNS_20LayoutBoxModelObjectEb(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutBoxModelObject"* %3, i1 zeroext false)
  %83 = icmp eq i32 %1, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %75
  %85 = call zeroext i1 @_ZNK5blink9LayoutBox41ShouldComputeLogicalHeightFromAspectRatioEv(%"class.blink::LayoutBox"* %0)
  br label %86

86:                                               ; preds = %84, %75
  %87 = phi i1 [ false, %75 ], [ %85, %84 ]
  %88 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %2, i64 0, i32 2
  %89 = load i8, i8* %88, align 1
  %90 = icmp eq i8 %89, 0
  %91 = xor i1 %87, true
  %92 = and i1 %90, %91
  %93 = zext i1 %92 to i8
  %94 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %7, i64 0, i32 2
  %95 = load i8, i8* %94, align 1
  %96 = icmp eq i8 %95, 0
  %97 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %8, i64 0, i32 2
  %98 = load i8, i8* %97, align 1
  %99 = icmp eq i8 %98, 0
  %100 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %101 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %100, align 8
  %102 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %101, i64 92
  %103 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %102, align 8
  %104 = call zeroext i1 %103(%"class.blink::LayoutObject"* %35, i32 44) #20
  br i1 %104, label %460, label %105

105:                                              ; preds = %86
  %106 = load i8, i8* %88, align 1
  %107 = add i8 %106, -3
  %108 = icmp ult i8 %107, 5
  br i1 %108, label %109, label %111

109:                                              ; preds = %105
  %110 = call i32 @_ZNK5blink9LayoutBox41ComputeIntrinsicLogicalContentHeightUsingENS_8SizeTypeERKNS_6LengthENS_10LayoutUnitES5_(%"class.blink::LayoutBox"* %0, i32 %1, %"class.blink::Length"* dereferenceable(8) %2, i32 %81, i32 %5)
  br label %460

111:                                              ; preds = %105
  br i1 %87, label %112, label %426

112:                                              ; preds = %111
  %113 = bitcast %"struct.blink::NGBoxStrut"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %113) #20
  %114 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %32, i64 0, i32 0, i32 0
  %115 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %32, i64 0, i32 1, i32 0
  %116 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %32, i64 0, i32 2, i32 0
  %117 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %32, i64 0, i32 3, i32 0
  %118 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %119 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %120 = bitcast %"struct.blink::NGBoxStrut"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %120, i8 -86, i64 16, i1 false)
  %121 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %119, align 8, !noalias !396
  %122 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %121, i64 0, i32 0, i32 9
  %123 = bitcast [20 x i8]* %122 to i160*
  %124 = load i160, i160* %123, align 8, !noalias !396
  %125 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  %126 = and i160 %124, 15211807202738752817960438464512
  %127 = icmp eq i160 %126, 0
  %128 = and i160 %124, 41538374868278621028243970633760768
  %129 = icmp eq i160 %128, 0
  %130 = select i1 %129, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %131 = select i1 %129, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %132 = select i1 %127, { i64, i64 } %131, { i64, i64 } %130
  %133 = select i1 %127, { i64, i64 } %131, { i64, i64 } %130
  %134 = extractvalue { i64, i64 } %132, 0
  %135 = extractvalue { i64, i64 } %133, 1
  %136 = getelementptr inbounds i8, i8* %125, i64 %135
  %137 = bitcast i8* %136 to %"class.blink::LayoutBoxModelObject"*
  %138 = and i64 %134, 1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %147, label %140

140:                                              ; preds = %112
  %141 = bitcast i8* %136 to i8**
  %142 = load i8*, i8** %141, align 8
  %143 = add i64 %134, -1
  %144 = getelementptr i8, i8* %142, i64 %143
  %145 = bitcast i8* %144 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %146 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %145, align 8
  br label %149

147:                                              ; preds = %112
  %148 = inttoptr i64 %134 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %149

149:                                              ; preds = %140, %147
  %150 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %146, %140 ], [ %148, %147 ]
  %151 = call i32 %150(%"class.blink::LayoutBoxModelObject"* %137) #20
  %152 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %119, align 8
  %153 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153)
  %154 = bitcast %"class.blink::Length"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154)
  %155 = bitcast %"class.blink::Length"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155)
  %156 = bitcast %"class.blink::Length"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %156)
  %157 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %152, i64 0, i32 0, i32 9
  %158 = bitcast [20 x i8]* %157 to i160*
  %159 = load i160, i160* %158, align 8, !noalias !399
  %160 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %152, i64 0, i32 0, i32 7, i32 0, i32 0
  %161 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %160, align 8, !noalias !399
  %162 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %161, i64 0, i32 16
  %163 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %161, i64 0, i32 15
  %164 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %161, i64 0, i32 13
  %165 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %161, i64 0, i32 14
  store %"class.blink::Length"* %162, %"class.blink::Length"** %13, align 8, !alias.scope !399
  store %"class.blink::Length"* %163, %"class.blink::Length"** %14, align 8, !alias.scope !399
  store %"class.blink::Length"* %164, %"class.blink::Length"** %15, align 8, !alias.scope !399
  store %"class.blink::Length"* %165, %"class.blink::Length"** %16, align 8, !alias.scope !399
  %166 = and i160 %159, 15211807202738752817960438464512
  %167 = icmp eq i160 %166, 0
  %168 = and i160 %159, 41538374868278621028243970633760768
  %169 = icmp eq i160 %168, 0
  %170 = select i1 %169, %"class.blink::Length"** %16, %"class.blink::Length"** %14
  %171 = select i1 %169, %"class.blink::Length"** %13, %"class.blink::Length"** %15
  %172 = select i1 %167, %"class.blink::Length"** %170, %"class.blink::Length"** %171
  %173 = load %"class.blink::Length"*, %"class.blink::Length"** %172, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %156)
  %174 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %118, %"class.blink::Length"* dereferenceable(8) %173) #20
  %175 = icmp slt i32 %174, 0
  %176 = select i1 %175, i32 -2147483648, i32 2147483647
  %177 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %174) #20
  %178 = extractvalue { i32, i1 } %177, 1
  %179 = extractvalue { i32, i1 } %177, 0
  %180 = select i1 %178, i32 %176, i32 %179, !prof !2
  %181 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %119, align 8, !noalias !402
  %182 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %181, i64 0, i32 0, i32 9
  %183 = bitcast [20 x i8]* %182 to i160*
  %184 = load i160, i160* %183, align 8, !noalias !402
  %185 = and i160 %184, 15211807202738752817960438464512
  %186 = icmp eq i160 %185, 0
  %187 = and i160 %184, 41538374868278621028243970633760768
  %188 = icmp eq i160 %187, 0
  %189 = select i1 %188, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %190 = select i1 %188, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %191 = select i1 %186, { i64, i64 } %190, { i64, i64 } %189
  %192 = select i1 %186, { i64, i64 } %190, { i64, i64 } %189
  %193 = extractvalue { i64, i64 } %191, 0
  %194 = extractvalue { i64, i64 } %192, 1
  %195 = getelementptr inbounds i8, i8* %125, i64 %194
  %196 = bitcast i8* %195 to %"class.blink::LayoutBoxModelObject"*
  %197 = and i64 %193, 1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %206, label %199

199:                                              ; preds = %149
  %200 = bitcast i8* %195 to i8**
  %201 = load i8*, i8** %200, align 8
  %202 = add i64 %193, -1
  %203 = getelementptr i8, i8* %201, i64 %202
  %204 = bitcast i8* %203 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %205 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %204, align 8
  br label %208

206:                                              ; preds = %149
  %207 = inttoptr i64 %193 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %208

208:                                              ; preds = %199, %206
  %209 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %205, %199 ], [ %207, %206 ]
  %210 = call i32 %209(%"class.blink::LayoutBoxModelObject"* %196) #20
  %211 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %119, align 8
  %212 = bitcast %"class.blink::Length"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %212)
  %213 = bitcast %"class.blink::Length"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213)
  %214 = bitcast %"class.blink::Length"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214)
  %215 = bitcast %"class.blink::Length"** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215)
  %216 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %211, i64 0, i32 0, i32 9
  %217 = bitcast [20 x i8]* %216 to i160*
  %218 = load i160, i160* %217, align 8, !noalias !405
  %219 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %211, i64 0, i32 0, i32 7, i32 0, i32 0
  %220 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %219, align 8, !noalias !405
  %221 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %220, i64 0, i32 16
  %222 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %220, i64 0, i32 15
  %223 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %220, i64 0, i32 13
  %224 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %220, i64 0, i32 14
  store %"class.blink::Length"* %221, %"class.blink::Length"** %17, align 8, !alias.scope !405
  store %"class.blink::Length"* %222, %"class.blink::Length"** %18, align 8, !alias.scope !405
  store %"class.blink::Length"* %223, %"class.blink::Length"** %19, align 8, !alias.scope !405
  store %"class.blink::Length"* %224, %"class.blink::Length"** %20, align 8, !alias.scope !405
  %225 = and i160 %218, 15211807202738752817960438464512
  %226 = icmp eq i160 %225, 0
  %227 = and i160 %218, 41538374868278621028243970633760768
  %228 = icmp eq i160 %227, 0
  %229 = select i1 %228, %"class.blink::Length"** %18, %"class.blink::Length"** %20
  %230 = select i1 %228, %"class.blink::Length"** %19, %"class.blink::Length"** %17
  %231 = select i1 %226, %"class.blink::Length"** %229, %"class.blink::Length"** %230
  %232 = load %"class.blink::Length"*, %"class.blink::Length"** %231, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %212)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215)
  %233 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %118, %"class.blink::Length"* dereferenceable(8) %232) #20
  %234 = icmp slt i32 %233, 0
  %235 = select i1 %234, i32 -2147483648, i32 2147483647
  %236 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %210, i32 %233) #20
  %237 = extractvalue { i32, i1 } %236, 1
  %238 = extractvalue { i32, i1 } %236, 0
  %239 = select i1 %237, i32 %235, i32 %238, !prof !2
  %240 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %119, align 8, !noalias !408
  %241 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %240, i64 0, i32 0, i32 9
  %242 = bitcast [20 x i8]* %241 to i160*
  %243 = load i160, i160* %242, align 8, !noalias !408
  %244 = lshr i160 %243, 102
  %245 = trunc i160 %244 to i8
  %246 = and i8 %245, 3
  switch i8 %246, label %247 [
    i8 0, label %256
    i8 1, label %248
  ]

247:                                              ; preds = %208
  br label %248

248:                                              ; preds = %247, %208
  %249 = phi { i64, i64 } [ { i64 993, i64 0 }, %247 ], [ { i64 1001, i64 0 }, %208 ]
  %250 = extractvalue { i64, i64 } %249, 0
  %251 = extractvalue { i64, i64 } %249, 1
  %252 = getelementptr inbounds i8, i8* %125, i64 %251
  %253 = bitcast i8* %252 to %"class.blink::LayoutBoxModelObject"*
  %254 = and i64 %250, 1
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %266, label %256

256:                                              ; preds = %248, %208
  %257 = phi %"class.blink::LayoutBoxModelObject"* [ %253, %248 ], [ %118, %208 ]
  %258 = phi i8* [ %252, %248 ], [ %125, %208 ]
  %259 = phi i64 [ %250, %248 ], [ 977, %208 ]
  %260 = bitcast i8* %258 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = add i64 %259, -1
  %263 = getelementptr i8, i8* %261, i64 %262
  %264 = bitcast i8* %263 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %265 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %264, align 8
  br label %268

266:                                              ; preds = %248
  %267 = inttoptr i64 %250 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %268

268:                                              ; preds = %256, %266
  %269 = phi %"class.blink::LayoutBoxModelObject"* [ %257, %256 ], [ %253, %266 ]
  %270 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %265, %256 ], [ %267, %266 ]
  %271 = call i32 %270(%"class.blink::LayoutBoxModelObject"* %269) #20
  %272 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %119, align 8
  %273 = bitcast %"class.blink::Length"** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %273)
  %274 = bitcast %"class.blink::Length"** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %274)
  %275 = bitcast %"class.blink::Length"** %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %275)
  %276 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %272, i64 0, i32 0, i32 9
  %277 = bitcast [20 x i8]* %276 to i160*
  %278 = load i160, i160* %277, align 8, !noalias !411
  %279 = lshr i160 %278, 102
  %280 = trunc i160 %279 to i8
  %281 = and i8 %280, 3
  %282 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %272, i64 0, i32 0, i32 7, i32 0, i32 0
  %283 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %282, align 8, !noalias !411
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %283, i64 0, i32 16
  %285 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %283, i64 0, i32 15
  %286 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %283, i64 0, i32 14
  store %"class.blink::Length"* %284, %"class.blink::Length"** %21, align 8, !alias.scope !411
  store %"class.blink::Length"* %285, %"class.blink::Length"** %22, align 8, !alias.scope !411
  store %"class.blink::Length"* %286, %"class.blink::Length"** %23, align 8, !alias.scope !411
  %287 = icmp eq i8 %281, 0
  %288 = icmp eq i8 %281, 1
  %289 = select i1 %288, %"class.blink::Length"** %22, %"class.blink::Length"** %23
  %290 = select i1 %287, %"class.blink::Length"** %21, %"class.blink::Length"** %289
  %291 = load %"class.blink::Length"*, %"class.blink::Length"** %290, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %273)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %274)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275)
  %292 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %118, %"class.blink::Length"* dereferenceable(8) %291) #20
  %293 = icmp slt i32 %292, 0
  %294 = select i1 %293, i32 -2147483648, i32 2147483647
  %295 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %271, i32 %292) #20
  %296 = extractvalue { i32, i1 } %295, 1
  %297 = extractvalue { i32, i1 } %295, 0
  %298 = select i1 %296, i32 %294, i32 %297, !prof !2
  %299 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %119, align 8, !noalias !414
  %300 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %299, i64 0, i32 0, i32 9
  %301 = bitcast [20 x i8]* %300 to i160*
  %302 = load i160, i160* %301, align 8, !noalias !414
  %303 = lshr i160 %302, 102
  %304 = trunc i160 %303 to i8
  %305 = and i8 %304, 3
  switch i8 %305, label %306 [
    i8 0, label %315
    i8 1, label %307
  ]

306:                                              ; preds = %268
  br label %307

307:                                              ; preds = %306, %268
  %308 = phi { i64, i64 } [ { i64 1001, i64 0 }, %306 ], [ { i64 993, i64 0 }, %268 ]
  %309 = extractvalue { i64, i64 } %308, 0
  %310 = extractvalue { i64, i64 } %308, 1
  %311 = getelementptr inbounds i8, i8* %125, i64 %310
  %312 = bitcast i8* %311 to %"class.blink::LayoutBoxModelObject"*
  %313 = and i64 %309, 1
  %314 = icmp eq i64 %313, 0
  br i1 %314, label %325, label %315

315:                                              ; preds = %307, %268
  %316 = phi %"class.blink::LayoutBoxModelObject"* [ %312, %307 ], [ %118, %268 ]
  %317 = phi i8* [ %311, %307 ], [ %125, %268 ]
  %318 = phi i64 [ %309, %307 ], [ 985, %268 ]
  %319 = bitcast i8* %317 to i8**
  %320 = load i8*, i8** %319, align 8
  %321 = add i64 %318, -1
  %322 = getelementptr i8, i8* %320, i64 %321
  %323 = bitcast i8* %322 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %324 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %323, align 8
  br label %327

325:                                              ; preds = %307
  %326 = inttoptr i64 %309 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %327

327:                                              ; preds = %315, %325
  %328 = phi %"class.blink::LayoutBoxModelObject"* [ %316, %315 ], [ %312, %325 ]
  %329 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %324, %315 ], [ %326, %325 ]
  %330 = call i32 %329(%"class.blink::LayoutBoxModelObject"* %328) #20
  %331 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %119, align 8
  %332 = bitcast %"class.blink::Length"** %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %332)
  %333 = bitcast %"class.blink::Length"** %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %333)
  %334 = bitcast %"class.blink::Length"** %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %334)
  %335 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %331, i64 0, i32 0, i32 9
  %336 = bitcast [20 x i8]* %335 to i160*
  %337 = load i160, i160* %336, align 8, !noalias !417
  %338 = lshr i160 %337, 102
  %339 = trunc i160 %338 to i8
  %340 = and i8 %339, 3
  %341 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %331, i64 0, i32 0, i32 7, i32 0, i32 0
  %342 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %341, align 8, !noalias !417
  %343 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %342, i64 0, i32 15
  %344 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %342, i64 0, i32 13
  %345 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %342, i64 0, i32 14
  store %"class.blink::Length"* %343, %"class.blink::Length"** %24, align 8, !alias.scope !417
  store %"class.blink::Length"* %344, %"class.blink::Length"** %25, align 8, !alias.scope !417
  store %"class.blink::Length"* %345, %"class.blink::Length"** %26, align 8, !alias.scope !417
  %346 = icmp eq i8 %340, 0
  %347 = icmp eq i8 %340, 1
  %348 = select i1 %347, %"class.blink::Length"** %26, %"class.blink::Length"** %24
  %349 = select i1 %346, %"class.blink::Length"** %25, %"class.blink::Length"** %348
  %350 = load %"class.blink::Length"*, %"class.blink::Length"** %349, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %332)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %333)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %334)
  %351 = call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %118, %"class.blink::Length"* dereferenceable(8) %350) #20
  %352 = icmp slt i32 %351, 0
  %353 = select i1 %352, i32 -2147483648, i32 2147483647
  %354 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %330, i32 %351) #20
  %355 = extractvalue { i32, i1 } %354, 1
  %356 = extractvalue { i32, i1 } %354, 0
  %357 = select i1 %355, i32 %353, i32 %356, !prof !2
  store i32 %180, i32* %114, align 4
  store i32 %239, i32* %115, align 4
  store i32 %298, i32* %116, align 4
  store i32 %357, i32* %117, align 4
  %358 = bitcast i64* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %358) #20
  %359 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %119, align 8
  %360 = bitcast <2 x float>* %27 to %"class.blink::FloatSize"*
  %361 = bitcast <2 x float>* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %361) #20
  %362 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %359, i64 0, i32 0, i32 5, i32 0, i32 0
  %363 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %362, align 8
  %364 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %363, i64 0, i32 1, i32 1
  %365 = bitcast %"class.blink::FloatSize"* %364 to i64*
  %366 = load i64, i64* %365, align 4
  %367 = bitcast <2 x float>* %27 to i64*
  store i64 %366, i64* %367, align 8
  %368 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %359, i64 0, i32 0, i32 9
  %369 = bitcast [20 x i8]* %368 to i160*
  %370 = load i160, i160* %369, align 8
  %371 = and i160 %370, 15211807202738752817960438464512
  %372 = icmp eq i160 %371, 0
  br i1 %372, label %381, label %373

373:                                              ; preds = %327
  %374 = trunc i64 %366 to i32
  %375 = bitcast i32 %374 to float
  %376 = lshr i64 %366, 32
  %377 = trunc i64 %376 to i32
  %378 = bitcast i32 %377 to float
  %379 = insertelement <2 x float> undef, float %378, i32 0
  %380 = insertelement <2 x float> %379, float %375, i32 1
  store <2 x float> %380, <2 x float>* %27, align 8
  br label %381

381:                                              ; preds = %327, %373
  %382 = call i64 @_ZN5blink11LogicalSize24AspectRatioFromFloatSizeERKNS_9FloatSizeE(%"class.blink::FloatSize"* nonnull dereferenceable(8) %360) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %361) #20
  store i64 %382, i64* %33, align 8
  %383 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %119, align 8
  %384 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %383, i64 0, i32 0, i32 5, i32 0, i32 0
  %385 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %384, align 8
  %386 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %385, i64 0, i32 1, i32 1, i32 0
  %387 = load float, float* %386, align 4
  %388 = fcmp oeq float %387, 0.000000e+00
  br i1 %388, label %408, label %389

389:                                              ; preds = %381
  %390 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %385, i64 0, i32 1, i32 1, i32 1
  %391 = load float, float* %390, align 4
  %392 = fcmp oeq float %391, 0.000000e+00
  %393 = fcmp olt float %387, 1.562500e-02
  %394 = or i1 %393, %392
  %395 = fcmp olt float %391, 1.562500e-02
  %396 = or i1 %395, %394
  br i1 %396, label %408, label %397

397:                                              ; preds = %389
  %398 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %385, i64 0, i32 1, i32 0
  %399 = load i8, i8* %398, align 4
  %400 = and i8 %399, 3
  %401 = icmp eq i8 %400, 2
  br i1 %401, label %402, label %408

402:                                              ; preds = %397
  %403 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %385, i64 0, i32 11
  %404 = load i8, i8* %403, align 4
  %405 = lshr i8 %404, 1
  %406 = and i8 %405, 1
  %407 = zext i8 %406 to i32
  br label %408

408:                                              ; preds = %381, %389, %397, %402
  %409 = phi i32 [ %407, %402 ], [ 1, %397 ], [ 1, %389 ], [ 1, %381 ]
  %410 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %383, i64 0, i32 0, i32 9
  %411 = bitcast [20 x i8]* %410 to i160*
  %412 = load i160, i160* %411, align 8
  %413 = and i160 %412, 15211807202738752817960438464512
  %414 = icmp eq i160 %413, 0
  %415 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %416 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %417 = select i1 %414, i32* %415, i32* %416
  %418 = load i32, i32* %417, align 4
  %419 = call i32 @_ZN5blink24BlockSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %32, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %34, i32 %409, i32 %418) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %358) #20
  %420 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %419, i32 %5) #20
  %421 = extractvalue { i32, i1 } %420, 1
  %422 = extractvalue { i32, i1 } %420, 0
  %423 = select i1 %421, i32 %77, i32 %422, !prof !2
  %424 = icmp sgt i32 %423, 0
  %425 = select i1 %424, i32 %423, i32 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %113) #20
  br label %460

426:                                              ; preds = %111
  %427 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %2, i32 %4) #20
  %428 = sitofp i32 %427 to float
  %429 = fmul float %428, 1.562500e-02
  %430 = fmul float %429, 6.400000e+01
  %431 = fcmp ult float %430, 0xC1E0000000000000
  %432 = fcmp ugt float %430, 0x41DFFFFFE0000000
  %433 = fcmp ogt float %430, 0xC1E0000000000000
  %434 = select i1 %433, float %430, float 0xC1E0000000000000
  %435 = fptosi float %434 to i32
  %436 = select i1 %431, i32 0, i32 2147483647
  %437 = select i1 %432, i32 %436, i32 %435
  %438 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %439 = bitcast %"class.blink::ComputedStyle"** %438 to %"class.blink::ComputedStyleBase"**
  %440 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %439, align 8
  %441 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %440, i64 0, i32 5, i32 0, i32 0
  %442 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %441, align 8
  %443 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %442, i64 0, i32 11
  %444 = load i8, i8* %443, align 4
  %445 = and i8 %444, 2
  %446 = icmp eq i8 %445, 0
  br i1 %446, label %447, label %456

447:                                              ; preds = %426
  %448 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %449 = call i32 @_ZNK5blink20LayoutBoxModelObject41CollapsedBorderAndCSSPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %448) #20
  %450 = icmp sgt i32 %449, -1
  %451 = select i1 %450, i32 -2147483648, i32 2147483647
  %452 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %437, i32 %449) #20
  %453 = extractvalue { i32, i1 } %452, 1
  %454 = extractvalue { i32, i1 } %452, 0
  %455 = select i1 %453, i32 %451, i32 %454, !prof !2
  br label %456

456:                                              ; preds = %426, %447
  %457 = phi i32 [ %455, %447 ], [ %437, %426 ]
  %458 = icmp sgt i32 %457, 0
  %459 = select i1 %458, i32 %457, i32 0
  br label %460

460:                                              ; preds = %86, %109, %456, %408
  %461 = phi i32 [ %110, %109 ], [ %425, %408 ], [ %459, %456 ], [ %81, %86 ]
  %462 = phi i8 [ %93, %109 ], [ %93, %408 ], [ %93, %456 ], [ 0, %86 ]
  %463 = xor i1 %96, true
  %464 = icmp eq i8 %462, 0
  %465 = xor i1 %464, true
  %466 = or i1 %96, %465
  %467 = or i1 %99, %466
  br i1 %467, label %546, label %468

468:                                              ; preds = %460
  %469 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %7, i32 %4) #20
  %470 = icmp slt i32 %461, 0
  %471 = select i1 %470, i32 -2147483648, i32 2147483647
  %472 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %469, i32 %461) #20
  %473 = extractvalue { i32, i1 } %472, 1
  %474 = extractvalue { i32, i1 } %472, 0
  %475 = select i1 %473, i32 %471, i32 %474, !prof !2
  %476 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %8, i32 %4) #20
  %477 = icmp slt i32 %476, 0
  %478 = select i1 %477, i32 -2147483648, i32 2147483647
  %479 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %475, i32 %476) #20
  %480 = extractvalue { i32, i1 } %479, 1
  %481 = extractvalue { i32, i1 } %479, 0
  %482 = select i1 %480, i32 %478, i32 %481, !prof !2
  %483 = icmp slt i32 %5, 0
  %484 = select i1 %483, i32 -2147483648, i32 2147483647
  %485 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %482, i32 %5) #20
  %486 = extractvalue { i32, i1 } %485, 1
  %487 = extractvalue { i32, i1 } %485, 0
  %488 = select i1 %486, i32 %484, i32 %487, !prof !2
  %489 = icmp sgt i32 %488, -1
  %490 = select i1 %489, i32 -2147483648, i32 2147483647
  %491 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %4, i32 %488) #20
  %492 = extractvalue { i32, i1 } %491, 1
  %493 = extractvalue { i32, i1 } %491, 0
  %494 = select i1 %492, i32 %490, i32 %493, !prof !2
  %495 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 2
  %496 = load i8, i8* %495, align 1
  %497 = icmp eq i8 %496, 0
  %498 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 2
  %499 = load i8, i8* %498, align 1
  %500 = icmp eq i8 %499, 0
  br i1 %497, label %501, label %532

501:                                              ; preds = %468
  br i1 %500, label %502, label %522

502:                                              ; preds = %501
  %503 = sdiv i32 %494, 2
  %504 = sext i32 %503 to i64
  %505 = call i1 @llvm.is.constant.i64(i64 %504) #20
  br i1 %505, label %512, label %506

506:                                              ; preds = %502
  %507 = icmp slt i32 %494, -1
  %508 = select i1 %507, i32 -2147483648, i32 2147483647
  %509 = add nsw i64 %504, 2147483648
  %510 = icmp ult i64 %509, 4294967296
  %511 = select i1 %510, i32 %503, i32 %508, !prof !3
  br label %512

512:                                              ; preds = %502, %506
  %513 = phi i32 [ %511, %506 ], [ %503, %502 ]
  %514 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 2, i32 0, i32 0
  store i32 %513, i32* %514, align 4
  %515 = icmp sgt i32 %513, -1
  %516 = select i1 %515, i32 -2147483648, i32 2147483647
  %517 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %494, i32 %513) #20
  %518 = extractvalue { i32, i1 } %517, 1
  %519 = extractvalue { i32, i1 } %517, 0
  %520 = select i1 %518, i32 %516, i32 %519, !prof !2
  %521 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 2, i32 1, i32 0
  store i32 %520, i32* %521, align 4
  br label %688

522:                                              ; preds = %501
  %523 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %10, i32 %82) #20
  %524 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 2, i32 1, i32 0
  store i32 %523, i32* %524, align 4
  %525 = icmp sgt i32 %523, -1
  %526 = select i1 %525, i32 -2147483648, i32 2147483647
  %527 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %494, i32 %523) #20
  %528 = extractvalue { i32, i1 } %527, 1
  %529 = extractvalue { i32, i1 } %527, 0
  %530 = select i1 %528, i32 %526, i32 %529, !prof !2
  %531 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 2, i32 0, i32 0
  store i32 %530, i32* %531, align 4
  br label %688

532:                                              ; preds = %468
  %533 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %9, i32 %82) #20
  %534 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 2, i32 0, i32 0
  store i32 %533, i32* %534, align 4
  br i1 %500, label %535, label %543

535:                                              ; preds = %532
  %536 = icmp sgt i32 %533, -1
  %537 = select i1 %536, i32 -2147483648, i32 2147483647
  %538 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %494, i32 %533) #20
  %539 = extractvalue { i32, i1 } %538, 1
  %540 = extractvalue { i32, i1 } %538, 0
  %541 = select i1 %539, i32 %537, i32 %540, !prof !2
  %542 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 2, i32 1, i32 0
  store i32 %541, i32* %542, align 4
  br label %688

543:                                              ; preds = %532
  %544 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %10, i32 %82) #20
  %545 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 2, i32 1, i32 0
  store i32 %544, i32* %545, align 4
  br label %688

546:                                              ; preds = %460
  %547 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 2
  %548 = load i8, i8* %547, align 1
  %549 = icmp eq i8 %548, 2
  br i1 %549, label %550, label %571, !prof !3

550:                                              ; preds = %546
  %551 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 3
  %552 = load i8, i8* %551, align 2, !range !4
  %553 = icmp eq i8 %552, 0
  br i1 %553, label %557, label %554

554:                                              ; preds = %550
  %555 = bitcast %"class.blink::Length"* %9 to float*
  %556 = load float, float* %555, align 4
  br label %561

557:                                              ; preds = %550
  %558 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 0, i32 0
  %559 = load i32, i32* %558, align 4
  %560 = sitofp i32 %559 to float
  br label %561

561:                                              ; preds = %557, %554
  %562 = phi float [ %556, %554 ], [ %560, %557 ]
  %563 = fmul float %562, 6.400000e+01
  %564 = fcmp ult float %563, 0xC1E0000000000000
  %565 = fcmp ugt float %563, 0x41DFFFFFE0000000
  %566 = fcmp ogt float %563, 0xC1E0000000000000
  %567 = select i1 %566, float %563, float 0xC1E0000000000000
  %568 = fptosi float %567 to i32
  %569 = select i1 %564, i32 0, i32 2147483647
  %570 = select i1 %565, i32 %569, i32 %568
  br label %573

571:                                              ; preds = %546
  %572 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %9, i32 %82) #20
  br label %573

573:                                              ; preds = %561, %571
  %574 = phi i32 [ %570, %561 ], [ %572, %571 ]
  %575 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 2, i32 0, i32 0
  store i32 %574, i32* %575, align 4
  %576 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 2
  %577 = load i8, i8* %576, align 1
  %578 = icmp eq i8 %577, 2
  br i1 %578, label %579, label %600, !prof !3

579:                                              ; preds = %573
  %580 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 3
  %581 = load i8, i8* %580, align 2, !range !4
  %582 = icmp eq i8 %581, 0
  br i1 %582, label %586, label %583

583:                                              ; preds = %579
  %584 = bitcast %"class.blink::Length"* %10 to float*
  %585 = load float, float* %584, align 4
  br label %590

586:                                              ; preds = %579
  %587 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %10, i64 0, i32 0, i32 0
  %588 = load i32, i32* %587, align 4
  %589 = sitofp i32 %588 to float
  br label %590

590:                                              ; preds = %586, %583
  %591 = phi float [ %585, %583 ], [ %589, %586 ]
  %592 = fmul float %591, 6.400000e+01
  %593 = fcmp ult float %592, 0xC1E0000000000000
  %594 = fcmp ugt float %592, 0x41DFFFFFE0000000
  %595 = fcmp ogt float %592, 0xC1E0000000000000
  %596 = select i1 %595, float %592, float 0xC1E0000000000000
  %597 = fptosi float %596 to i32
  %598 = select i1 %593, i32 0, i32 2147483647
  %599 = select i1 %594, i32 %598, i32 %597
  br label %603

600:                                              ; preds = %573
  %601 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %10, i32 %82) #20
  %602 = load i32, i32* %575, align 4
  br label %603

603:                                              ; preds = %590, %600
  %604 = phi i32 [ %574, %590 ], [ %602, %600 ]
  %605 = phi i32 [ %599, %590 ], [ %601, %600 ]
  %606 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 2, i32 1, i32 0
  store i32 %605, i32* %606, align 4
  %607 = icmp slt i32 %605, 0
  %608 = select i1 %607, i32 -2147483648, i32 2147483647
  %609 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %604, i32 %605) #20
  %610 = extractvalue { i32, i1 } %609, 1
  %611 = extractvalue { i32, i1 } %609, 0
  %612 = select i1 %610, i32 %608, i32 %611, !prof !2
  %613 = icmp slt i32 %5, 0
  %614 = select i1 %613, i32 -2147483648, i32 2147483647
  %615 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %612, i32 %5) #20
  %616 = extractvalue { i32, i1 } %615, 1
  %617 = extractvalue { i32, i1 } %615, 0
  %618 = select i1 %616, i32 %614, i32 %617, !prof !2
  %619 = icmp sgt i32 %618, -1
  %620 = select i1 %619, i32 -2147483648, i32 2147483647
  %621 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %4, i32 %618) #20
  %622 = extractvalue { i32, i1 } %621, 1
  %623 = extractvalue { i32, i1 } %621, 0
  %624 = select i1 %622, i32 %620, i32 %623, !prof !2
  %625 = or i1 %464, %463
  %626 = or i1 %99, %625
  br i1 %626, label %641, label %627

627:                                              ; preds = %603
  %628 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %8, i32 %4) #20
  %629 = icmp slt i32 %628, 0
  %630 = select i1 %629, i32 -2147483648, i32 2147483647
  %631 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %628) #20
  %632 = extractvalue { i32, i1 } %631, 1
  %633 = extractvalue { i32, i1 } %631, 0
  %634 = select i1 %632, i32 %630, i32 %633, !prof !2
  %635 = icmp sgt i32 %634, -1
  %636 = select i1 %635, i32 -2147483648, i32 2147483647
  %637 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %624, i32 %634) #20
  %638 = extractvalue { i32, i1 } %637, 1
  %639 = extractvalue { i32, i1 } %637, 0
  %640 = select i1 %638, i32 %636, i32 %639, !prof !2
  br label %688

641:                                              ; preds = %603
  %642 = or i1 %96, %464
  %643 = xor i1 %99, true
  %644 = or i1 %642, %643
  br i1 %644, label %647, label %645

645:                                              ; preds = %641
  %646 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %7, i32 %4) #20
  br label %688

647:                                              ; preds = %641
  %648 = or i8 %462, %95
  %649 = icmp ne i8 %648, 0
  %650 = or i1 %99, %649
  br i1 %650, label %665, label %651

651:                                              ; preds = %647
  %652 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %8, i32 %4) #20
  %653 = icmp slt i32 %652, 0
  %654 = select i1 %653, i32 -2147483648, i32 2147483647
  %655 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %461, i32 %652) #20
  %656 = extractvalue { i32, i1 } %655, 1
  %657 = extractvalue { i32, i1 } %655, 0
  %658 = select i1 %656, i32 %654, i32 %657, !prof !2
  %659 = icmp sgt i32 %658, -1
  %660 = select i1 %659, i32 -2147483648, i32 2147483647
  %661 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %624, i32 %658) #20
  %662 = extractvalue { i32, i1 } %661, 1
  %663 = extractvalue { i32, i1 } %661, 0
  %664 = select i1 %662, i32 %660, i32 %663, !prof !2
  br label %688

665:                                              ; preds = %647
  %666 = or i1 %99, %642
  br i1 %666, label %684, label %667

667:                                              ; preds = %665
  %668 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %7, i32 %4) #20
  %669 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %8, i32 %4) #20
  %670 = icmp slt i32 %669, 0
  %671 = select i1 %670, i32 -2147483648, i32 2147483647
  %672 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %668, i32 %669) #20
  %673 = extractvalue { i32, i1 } %672, 1
  %674 = extractvalue { i32, i1 } %672, 0
  %675 = select i1 %673, i32 %671, i32 %674, !prof !2
  %676 = icmp sgt i32 %675, -1
  %677 = select i1 %676, i32 -2147483648, i32 2147483647
  %678 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %624, i32 %675) #20
  %679 = extractvalue { i32, i1 } %678, 1
  %680 = extractvalue { i32, i1 } %678, 0
  %681 = select i1 %679, i32 %677, i32 %680, !prof !2
  %682 = icmp sgt i32 %681, 0
  %683 = select i1 %682, i32 %681, i32 0
  br label %688

684:                                              ; preds = %665
  %685 = or i1 %466, %643
  br i1 %685, label %688, label %686

686:                                              ; preds = %684
  %687 = call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %7, i32 %4) #20
  br label %688

688:                                              ; preds = %627, %651, %686, %667, %645, %684, %512, %535, %543, %522
  %689 = phi i32 [ %469, %522 ], [ %469, %543 ], [ %469, %535 ], [ %469, %512 ], [ 0, %684 ], [ %687, %686 ], [ %668, %667 ], [ %664, %651 ], [ %646, %645 ], [ %640, %627 ]
  %690 = phi i32 [ %461, %522 ], [ %461, %543 ], [ %461, %535 ], [ %461, %512 ], [ 0, %684 ], [ %461, %686 ], [ %683, %667 ], [ %461, %651 ], [ %81, %645 ], [ %81, %627 ]
  %691 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 0, i32 0
  store i32 %690, i32* %691, align 4
  %692 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 2, i32 0, i32 0
  %693 = load i32, i32* %692, align 4
  %694 = icmp slt i32 %693, 0
  %695 = select i1 %694, i32 -2147483648, i32 2147483647
  %696 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %689, i32 %693) #20
  %697 = extractvalue { i32, i1 } %696, 1
  %698 = extractvalue { i32, i1 } %696, 0
  %699 = select i1 %697, i32 %695, i32 %698, !prof !2
  %700 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 1, i32 0
  store i32 %699, i32* %700, align 4
  %701 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %11, i64 0, i32 1
  call void @_ZN5blink9LayoutBox33ComputeLogicalTopPositionedOffsetERNS_10LayoutUnitEPKS0_S1_PKNS_20LayoutBoxModelObjectES1_(%"class.blink::LayoutUnit"* dereferenceable(4) %701, %"class.blink::LayoutBox"* %0, i32 %690, %"class.blink::LayoutBoxModelObject"* %3, i32 %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox33ComputeLogicalTopPositionedOffsetERNS_10LayoutUnitEPKS0_S1_PKNS_20LayoutBoxModelObjectES1_(%"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutBox"* nocapture readonly, i32, %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = and i160 %10, 15211807202738752817960438464512
  %12 = icmp eq i160 %11, 5070602400912917605986812821504
  br i1 %12, label %13, label %23

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = xor i96 %19, %16
  %21 = trunc i96 %20 to i32
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %42, label %23

23:                                               ; preds = %13, %5
  %24 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 9
  %27 = bitcast [20 x i8]* %26 to i160*
  %28 = load i160, i160* %27, align 8
  %29 = and i160 %28, 15211807202738752817960438464512
  %30 = icmp eq i160 %29, 5070602400912917605986812821504
  %31 = xor i1 %12, %30
  br i1 %31, label %32, label %57

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %34 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %33 to i96*
  %35 = load i96, i96* %34, align 4
  %36 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 4
  %37 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %36 to i96*
  %38 = load i96, i96* %37, align 4
  %39 = xor i96 %38, %35
  %40 = trunc i96 %39 to i32
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %57, label %42

42:                                               ; preds = %32, %13
  %43 = icmp sgt i32 %2, -1
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %4, i32 %2) #20
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 %44, i32 %47, !prof !2
  %49 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %0, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %50, -1
  %52 = select i1 %51, i32 -2147483648, i32 2147483647
  %53 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %48, i32 %50) #20
  %54 = extractvalue { i32, i1 } %53, 1
  %55 = extractvalue { i32, i1 } %53, 0
  %56 = select i1 %54, i32 %52, i32 %55, !prof !2
  store i32 %56, i32* %49, align 4
  br label %57

57:                                               ; preds = %32, %42, %23
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %59 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %58 to i96*
  %60 = load i96, i96* %59, align 4
  %61 = trunc i96 %60 to i32
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %63, label %135

63:                                               ; preds = %57
  %64 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %65 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %64, align 8
  %66 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %65, i64 122
  %67 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %66, align 8
  %68 = tail call i32 %67(%"class.blink::LayoutBoxModelObject"* %3) #20
  %69 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %0, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp slt i32 %68, 0
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %70, i32 %68) #20
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !2
  store i32 %76, i32* %69, align 4
  %77 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 4
  %78 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %77 to i96*
  %79 = load i96, i96* %78, align 4
  %80 = and i96 %79, 67108864
  %81 = icmp eq i96 %80, 0
  br i1 %81, label %285, label %82

82:                                               ; preds = %63
  %83 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to %"class.blink::LayoutBox"*
  %84 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 5, i32 0
  %85 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %85, i64 0, i32 0, i32 9
  %87 = bitcast [20 x i8]* %86 to i160*
  %88 = load i160, i160* %87, align 8
  %89 = and i160 %88, 1190036353683150593851392
  %90 = icmp eq i160 %89, 340010386766614455386112
  %91 = and i96 %79, 8589934592
  %92 = icmp eq i96 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %117, label %94

94:                                               ; preds = %82
  %95 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %96 = icmp eq %"class.blink::PaintLayerScrollableArea"* %95, null
  br i1 %96, label %124, label %97

97:                                               ; preds = %94
  %98 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %99 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %98, i64 0, i32 6, i32 3
  %100 = load i8, i8* %99, align 8
  %101 = and i8 %100, 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %98, i64 0, i32 6, i32 1, i32 0, i32 0
  %105 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %104, align 8
  %106 = icmp eq %"class.blink::Scrollbar"* %105, null
  br i1 %106, label %107, label %124

107:                                              ; preds = %103, %97
  %108 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %109 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %108, i64 0, i32 6, i32 3
  %110 = load i8, i8* %109, align 8
  %111 = and i8 %110, 2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %117, label %113

113:                                              ; preds = %107
  %114 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %108, i64 0, i32 6, i32 2, i32 0, i32 0
  %115 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %114, align 8
  %116 = icmp eq %"class.blink::Scrollbar"* %115, null
  br i1 %116, label %117, label %124

117:                                              ; preds = %82, %107, %113
  %118 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %84, align 8
  %119 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %118, i64 0, i32 0, i32 9
  %120 = bitcast [20 x i8]* %119 to i160*
  %121 = load i160, i160* %120, align 8
  %122 = and i160 %121, 270215977642229760
  %123 = icmp eq i160 %122, 0
  br i1 %123, label %285, label %124

124:                                              ; preds = %94, %103, %113, %117
  %125 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %83, i32 1, i32 0, i32 1)
  %126 = extractvalue { i64, i64 } %125, 0
  %127 = trunc i64 %126 to i32
  %128 = load i32, i32* %69, align 4
  %129 = icmp slt i32 %127, 0
  %130 = select i1 %129, i32 -2147483648, i32 2147483647
  %131 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %128, i32 %127) #20
  %132 = extractvalue { i32, i1 } %131, 1
  %133 = extractvalue { i32, i1 } %131, 0
  %134 = select i1 %132, i32 %130, i32 %133, !prof !2
  store i32 %134, i32* %69, align 4
  br label %285

135:                                              ; preds = %57
  %136 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 5, i32 0
  %137 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %136, align 8
  %138 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %137, i64 0, i32 0, i32 9
  %139 = bitcast [20 x i8]* %138 to i160*
  %140 = load i160, i160* %139, align 8
  %141 = and i160 %140, 15211807202738752817960438464512
  %142 = icmp eq i160 %141, 5070602400912917605986812821504
  %143 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %144 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %143, align 8
  br i1 %142, label %145, label %215

145:                                              ; preds = %135
  %146 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %144, i64 125
  %147 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %146, align 8
  %148 = tail call i32 %147(%"class.blink::LayoutBoxModelObject"* %3) #20
  %149 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %0, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = icmp slt i32 %148, 0
  %152 = select i1 %151, i32 -2147483648, i32 2147483647
  %153 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %150, i32 %148) #20
  %154 = extractvalue { i32, i1 } %153, 1
  %155 = extractvalue { i32, i1 } %153, 0
  %156 = select i1 %154, i32 %152, i32 %155, !prof !2
  store i32 %156, i32* %149, align 4
  %157 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 4
  %158 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %157 to i96*
  %159 = load i96, i96* %158, align 4
  %160 = and i96 %159, 67108864
  %161 = icmp eq i96 %160, 0
  br i1 %161, label %285, label %162

162:                                              ; preds = %145
  %163 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to %"class.blink::LayoutBox"*
  %164 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %136, align 8
  %165 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %164, i64 0, i32 0, i32 9
  %166 = bitcast [20 x i8]* %165 to i160*
  %167 = load i160, i160* %166, align 8
  %168 = and i160 %167, 1190036353683150593851392
  %169 = icmp eq i160 %168, 340010386766614455386112
  %170 = and i96 %159, 8589934592
  %171 = icmp eq i96 %170, 0
  %172 = or i1 %169, %171
  br i1 %172, label %196, label %173

173:                                              ; preds = %162
  %174 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %175 = icmp eq %"class.blink::PaintLayerScrollableArea"* %174, null
  br i1 %175, label %203, label %176

176:                                              ; preds = %173
  %177 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %178 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %177, i64 0, i32 6, i32 3
  %179 = load i8, i8* %178, align 8
  %180 = and i8 %179, 1
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %186, label %182

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %177, i64 0, i32 6, i32 1, i32 0, i32 0
  %184 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %183, align 8
  %185 = icmp eq %"class.blink::Scrollbar"* %184, null
  br i1 %185, label %186, label %203

186:                                              ; preds = %182, %176
  %187 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %188 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %187, i64 0, i32 6, i32 3
  %189 = load i8, i8* %188, align 8
  %190 = and i8 %189, 2
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %196, label %192

192:                                              ; preds = %186
  %193 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %187, i64 0, i32 6, i32 2, i32 0, i32 0
  %194 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %193, align 8
  %195 = icmp eq %"class.blink::Scrollbar"* %194, null
  br i1 %195, label %196, label %203

196:                                              ; preds = %162, %186, %192
  %197 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %136, align 8
  %198 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %197, i64 0, i32 0, i32 9
  %199 = bitcast [20 x i8]* %198 to i160*
  %200 = load i160, i160* %199, align 8
  %201 = and i160 %200, 270215977642229760
  %202 = icmp eq i160 %201, 0
  br i1 %202, label %285, label %203

203:                                              ; preds = %173, %182, %192, %196
  %204 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %163, i32 1, i32 0, i32 1)
  %205 = extractvalue { i64, i64 } %204, 0
  %206 = lshr i64 %205, 32
  %207 = trunc i64 %206 to i32
  %208 = load i32, i32* %149, align 4
  %209 = icmp slt i32 %207, 0
  %210 = select i1 %209, i32 -2147483648, i32 2147483647
  %211 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %208, i32 %207) #20
  %212 = extractvalue { i32, i1 } %211, 1
  %213 = extractvalue { i32, i1 } %211, 0
  %214 = select i1 %212, i32 %210, i32 %213, !prof !2
  store i32 %214, i32* %149, align 4
  br label %285

215:                                              ; preds = %135
  %216 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %144, i64 124
  %217 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %216, align 8
  %218 = tail call i32 %217(%"class.blink::LayoutBoxModelObject"* %3) #20
  %219 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %0, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  %221 = icmp slt i32 %218, 0
  %222 = select i1 %221, i32 -2147483648, i32 2147483647
  %223 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %220, i32 %218) #20
  %224 = extractvalue { i32, i1 } %223, 1
  %225 = extractvalue { i32, i1 } %223, 0
  %226 = select i1 %224, i32 %222, i32 %225, !prof !2
  store i32 %226, i32* %219, align 4
  %227 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %3, i64 0, i32 0, i32 4
  %228 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %227 to i96*
  %229 = load i96, i96* %228, align 4
  %230 = and i96 %229, 67108864
  %231 = icmp eq i96 %230, 0
  br i1 %231, label %285, label %232

232:                                              ; preds = %215
  %233 = bitcast %"class.blink::LayoutBoxModelObject"* %3 to %"class.blink::LayoutBox"*
  %234 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %136, align 8
  %235 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %234, i64 0, i32 0, i32 9
  %236 = bitcast [20 x i8]* %235 to i160*
  %237 = load i160, i160* %236, align 8
  %238 = and i160 %237, 1190036353683150593851392
  %239 = icmp eq i160 %238, 340010386766614455386112
  %240 = and i96 %229, 8589934592
  %241 = icmp eq i96 %240, 0
  %242 = or i1 %239, %241
  br i1 %242, label %266, label %243

243:                                              ; preds = %232
  %244 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %245 = icmp eq %"class.blink::PaintLayerScrollableArea"* %244, null
  br i1 %245, label %273, label %246

246:                                              ; preds = %243
  %247 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %248 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %247, i64 0, i32 6, i32 3
  %249 = load i8, i8* %248, align 8
  %250 = and i8 %249, 1
  %251 = icmp eq i8 %250, 0
  br i1 %251, label %256, label %252

252:                                              ; preds = %246
  %253 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %247, i64 0, i32 6, i32 1, i32 0, i32 0
  %254 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %253, align 8
  %255 = icmp eq %"class.blink::Scrollbar"* %254, null
  br i1 %255, label %256, label %273

256:                                              ; preds = %252, %246
  %257 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %3) #20
  %258 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %257, i64 0, i32 6, i32 3
  %259 = load i8, i8* %258, align 8
  %260 = and i8 %259, 2
  %261 = icmp eq i8 %260, 0
  br i1 %261, label %266, label %262

262:                                              ; preds = %256
  %263 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %257, i64 0, i32 6, i32 2, i32 0, i32 0
  %264 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %263, align 8
  %265 = icmp eq %"class.blink::Scrollbar"* %264, null
  br i1 %265, label %266, label %273

266:                                              ; preds = %232, %256, %262
  %267 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %136, align 8
  %268 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %267, i64 0, i32 0, i32 9
  %269 = bitcast [20 x i8]* %268 to i160*
  %270 = load i160, i160* %269, align 8
  %271 = and i160 %270, 270215977642229760
  %272 = icmp eq i160 %271, 0
  br i1 %272, label %285, label %273

273:                                              ; preds = %243, %252, %262, %266
  %274 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %233, i32 1, i32 0, i32 1)
  %275 = extractvalue { i64, i64 } %274, 1
  %276 = load i32, i32* %219, align 4
  %277 = lshr i64 %275, 32
  %278 = trunc i64 %277 to i32
  %279 = icmp slt i32 %278, 0
  %280 = select i1 %279, i32 -2147483648, i32 2147483647
  %281 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %276, i32 %278) #20
  %282 = extractvalue { i32, i1 } %281, 1
  %283 = extractvalue { i32, i1 } %281, 0
  %284 = select i1 %282, i32 %280, i32 %283, !prof !2
  store i32 %284, i32* %219, align 4
  br label %285

285:                                              ; preds = %63, %145, %215, %203, %196, %273, %266, %117, %124
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink9LayoutBox14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutBox"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %9, label %16

9:                                                ; preds = %4, %9
  %10 = phi %"class.blink::LayoutObject"* [ %12, %9 ], [ %5, %4 ]
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 7
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %9, label %16

16:                                               ; preds = %9, %4
  %17 = phi %"class.blink::Node"* [ %7, %4 ], [ %14, %9 ]
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  %22 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %21) #20
  %23 = tail call i32 @_ZNK5blink14LocalFrameView10CaretWidthEv(%"class.blink::LocalFrameView"* %22) #20
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %25 = bitcast %"class.blink::LayoutRect"* %24 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %28 = bitcast %"class.blink::LayoutSize"* %27 to i64*
  %29 = load i64, i64* %28, align 4
  %30 = and i64 %29, -4294967296
  %31 = trunc i64 %26 to i32
  %32 = lshr i64 %26, 32
  %33 = trunc i64 %32 to i32
  %34 = zext i32 %23 to i64
  %35 = icmp ne %"class.blink::InlineBox"* %1, null
  br i1 %35, label %36, label %41

36:                                               ; preds = %16
  %37 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %1, i64 0, i32 7, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 4
  %40 = icmp eq i32 %39, 0
  br label %49

41:                                               ; preds = %16
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = and i160 %46, 41538374868278621028243970633760768
  %48 = icmp eq i160 %47, 0
  br label %49

49:                                               ; preds = %41, %36
  %50 = phi i1 [ %40, %36 ], [ %48, %41 ]
  %51 = icmp eq i32 %2, 0
  %52 = xor i1 %51, %50
  br i1 %52, label %53, label %67

53:                                               ; preds = %49
  %54 = trunc i64 %29 to i32
  %55 = icmp sgt i32 %23, -1
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %54, i32 %23) #20
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 %56, i32 %59, !prof !2
  %61 = icmp slt i32 %60, 0
  %62 = select i1 %61, i32 -2147483648, i32 2147483647
  %63 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %31, i32 %60) #20
  %64 = extractvalue { i32, i1 } %63, 1
  %65 = extractvalue { i32, i1 } %63, 0
  %66 = select i1 %64, i32 %62, i32 %65, !prof !2
  br label %67

67:                                               ; preds = %53, %49
  %68 = phi i32 [ %66, %53 ], [ %31, %49 ]
  br i1 %35, label %69, label %83

69:                                               ; preds = %67
  %70 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* nonnull %1) #20
  %71 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %70, i64 0, i32 5, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %70, i64 0, i32 6, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp sgt i32 %72, -1
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %74, i32 %72) #20
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !2
  %81 = zext i32 %80 to i64
  %82 = shl nuw i64 %81, 32
  br label %83

83:                                               ; preds = %69, %67
  %84 = phi i64 [ %82, %69 ], [ %30, %67 ]
  %85 = phi i32 [ %72, %69 ], [ %33, %67 ]
  %86 = or i64 %84, %34
  %87 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %88 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %88, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %90, i64 0, i32 1, i32 0, i32 0
  %92 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %92, i64 0, i32 1
  %94 = tail call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %93) #20
  %95 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %94, i64 0, i32 2
  %96 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %95, align 8
  %97 = icmp eq %"class.blink::SimpleFontData"* %96, null
  br i1 %97, label %98, label %102

98:                                               ; preds = %83
  %99 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %93, i64 0, i32 0
  %100 = tail call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %94, %"class.blink::FontDescription"* dereferenceable(80) %99) #20
  store %"class.blink::SimpleFontData"* %100, %"class.blink::SimpleFontData"** %95, align 8
  %101 = icmp eq %"class.blink::SimpleFontData"* %100, null
  br i1 %101, label %112, label %102

102:                                              ; preds = %83, %98
  %103 = phi %"class.blink::SimpleFontData"* [ %100, %98 ], [ %96, %83 ]
  %104 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %103, i64 0, i32 1, i32 9
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %103, i64 0, i32 1, i32 10
  %107 = load i32, i32* %106, align 4
  %108 = add nsw i32 %107, %105
  %109 = icmp sgt i32 %108, 33554431
  br i1 %109, label %115, label %110

110:                                              ; preds = %102
  %111 = icmp slt i32 %108, -33554432
  br i1 %111, label %120, label %112

112:                                              ; preds = %98, %110
  %113 = phi i32 [ %108, %110 ], [ 0, %98 ]
  %114 = shl i32 %113, 6
  br label %115

115:                                              ; preds = %102, %112
  %116 = phi i32 [ %114, %112 ], [ 2147483647, %102 ]
  %117 = lshr exact i64 %84, 32
  %118 = trunc i64 %117 to i32
  %119 = icmp sgt i32 %116, %118
  br i1 %119, label %133, label %120

120:                                              ; preds = %110, %115
  %121 = phi i32 [ %116, %115 ], [ -2147483648, %110 ]
  %122 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %123 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %122 to i96*
  %124 = load i96, i96* %123, align 4
  %125 = and i96 %124, 1073741824
  %126 = icmp eq i96 %125, 0
  br i1 %126, label %127, label %138

127:                                              ; preds = %120
  %128 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %129 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %128, align 8
  %130 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %129, i64 92
  %131 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %130, align 8
  %132 = tail call zeroext i1 %131(%"class.blink::LayoutObject"* %5, i32 44) #20
  br i1 %132, label %138, label %133

133:                                              ; preds = %115, %127
  %134 = phi i32 [ %121, %127 ], [ %116, %115 ]
  %135 = zext i32 %134 to i64
  %136 = shl nuw i64 %135, 32
  %137 = or i64 %136, %34
  br label %138

138:                                              ; preds = %120, %127, %133
  %139 = phi i64 [ %137, %133 ], [ %86, %127 ], [ %86, %120 ]
  %140 = icmp eq %"class.blink::LayoutUnit"* %3, null
  br i1 %140, label %166, label %141

141:                                              ; preds = %138
  %142 = load i64, i64* %25, align 4
  %143 = trunc i64 %142 to i32
  %144 = load i64, i64* %28, align 4
  %145 = trunc i64 %144 to i32
  %146 = icmp slt i32 %145, 0
  %147 = select i1 %146, i32 -2147483648, i32 2147483647
  %148 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %143, i32 %145) #20
  %149 = extractvalue { i32, i1 } %148, 1
  %150 = extractvalue { i32, i1 } %148, 0
  %151 = select i1 %149, i32 %147, i32 %150, !prof !2
  %152 = trunc i64 %139 to i32
  %153 = icmp slt i32 %152, 0
  %154 = select i1 %153, i32 -2147483648, i32 2147483647
  %155 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %68, i32 %152) #20
  %156 = extractvalue { i32, i1 } %155, 1
  %157 = extractvalue { i32, i1 } %155, 0
  %158 = select i1 %156, i32 %154, i32 %157, !prof !2
  %159 = icmp sgt i32 %158, -1
  %160 = select i1 %159, i32 -2147483648, i32 2147483647
  %161 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %151, i32 %158) #20
  %162 = extractvalue { i32, i1 } %161, 1
  %163 = extractvalue { i32, i1 } %161, 0
  %164 = select i1 %162, i32 %160, i32 %163, !prof !2
  %165 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %164, i32* %165, align 4
  br label %166

166:                                              ; preds = %138, %141
  %167 = load i64, i64* %25, align 4
  %168 = trunc i64 %167 to i32
  %169 = lshr i64 %167, 32
  %170 = trunc i64 %169 to i32
  %171 = tail call i1 @llvm.is.constant.i32(i32 %168) #20
  br i1 %171, label %172, label %176

172:                                              ; preds = %166
  %173 = sub i32 0, %168
  %174 = icmp eq i32 %173, -2147483648
  %175 = select i1 %174, i32 2147483647, i32 %173
  br label %181

176:                                              ; preds = %166
  %177 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %168) #20
  %178 = extractvalue { i32, i1 } %177, 1
  %179 = extractvalue { i32, i1 } %177, 0
  %180 = select i1 %178, i32 2147483647, i32 %179
  br label %181

181:                                              ; preds = %176, %172
  %182 = phi i32 [ %175, %172 ], [ %180, %176 ]
  %183 = tail call i1 @llvm.is.constant.i32(i32 %170) #20
  br i1 %183, label %184, label %188

184:                                              ; preds = %181
  %185 = sub i32 0, %170
  %186 = icmp eq i32 %185, -2147483648
  %187 = select i1 %186, i32 2147483647, i32 %185
  br label %193

188:                                              ; preds = %181
  %189 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %170) #20
  %190 = extractvalue { i32, i1 } %189, 1
  %191 = extractvalue { i32, i1 } %189, 0
  %192 = select i1 %190, i32 2147483647, i32 %191
  br label %193

193:                                              ; preds = %184, %188
  %194 = phi i32 [ %187, %184 ], [ %192, %188 ]
  %195 = icmp slt i32 %182, 0
  %196 = select i1 %195, i32 -2147483648, i32 2147483647
  %197 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %68, i32 %182) #20
  %198 = extractvalue { i32, i1 } %197, 1
  %199 = extractvalue { i32, i1 } %197, 0
  %200 = select i1 %198, i32 %196, i32 %199, !prof !2
  %201 = icmp slt i32 %194, 0
  %202 = select i1 %201, i32 -2147483648, i32 2147483647
  %203 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %85, i32 %194) #20
  %204 = extractvalue { i32, i1 } %203, 1
  %205 = extractvalue { i32, i1 } %203, 0
  %206 = select i1 %204, i32 %202, i32 %205, !prof !2
  %207 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %208 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %207 to i96*
  %209 = load i96, i96* %208, align 4
  %210 = and i96 %209, 16777216
  %211 = icmp eq i96 %210, 0
  br i1 %211, label %212, label %269

212:                                              ; preds = %193
  %213 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %214 = icmp eq %"class.blink::Node"* %213, null
  br i1 %214, label %269, label %215

215:                                              ; preds = %212
  %216 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %213) #20
  br i1 %216, label %269, label %217

217:                                              ; preds = %215
  %218 = load i96, i96* %208, align 4
  %219 = and i96 %218, 16777216
  %220 = icmp eq i96 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %217
  %222 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  br label %223

223:                                              ; preds = %217, %221
  %224 = phi %"class.blink::Node"* [ %222, %221 ], [ null, %217 ]
  %225 = tail call zeroext i1 @_ZN5blink20IsDisplayInsideTableEPKNS_4NodeE(%"class.blink::Node"* %224) #20
  br i1 %225, label %269, label %226

226:                                              ; preds = %223
  %227 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %228 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %229 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %228, align 8
  %230 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %229, i64 124
  %231 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %230, align 8
  %232 = tail call i32 %231(%"class.blink::LayoutBoxModelObject"* %227) #20
  %233 = icmp slt i32 %232, 0
  %234 = select i1 %233, i32 -2147483648, i32 2147483647
  %235 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %200, i32 %232) #20
  %236 = extractvalue { i32, i1 } %235, 1
  %237 = extractvalue { i32, i1 } %235, 0
  %238 = select i1 %236, i32 %234, i32 %237, !prof !2
  %239 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %228, align 8
  %240 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %239, i64 120
  %241 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %240, align 8
  %242 = tail call i32 %241(%"class.blink::LayoutBoxModelObject"* %227) #20
  %243 = icmp slt i32 %242, 0
  %244 = select i1 %243, i32 -2147483648, i32 2147483647
  %245 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %238, i32 %242) #20
  %246 = extractvalue { i32, i1 } %245, 1
  %247 = extractvalue { i32, i1 } %245, 0
  %248 = select i1 %246, i32 %244, i32 %247, !prof !2
  %249 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %228, align 8
  %250 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %249, i64 118
  %251 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %250, align 8
  %252 = tail call i32 %251(%"class.blink::LayoutBoxModelObject"* %227) #20
  %253 = icmp slt i32 %252, 0
  %254 = select i1 %253, i32 -2147483648, i32 2147483647
  %255 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %206, i32 %252) #20
  %256 = extractvalue { i32, i1 } %255, 1
  %257 = extractvalue { i32, i1 } %255, 0
  %258 = select i1 %256, i32 %254, i32 %257, !prof !2
  %259 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %228, align 8
  %260 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %259, i64 122
  %261 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %260, align 8
  %262 = tail call i32 %261(%"class.blink::LayoutBoxModelObject"* %227) #20
  %263 = icmp slt i32 %262, 0
  %264 = select i1 %263, i32 -2147483648, i32 2147483647
  %265 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %258, i32 %262) #20
  %266 = extractvalue { i32, i1 } %265, 1
  %267 = extractvalue { i32, i1 } %265, 0
  %268 = select i1 %266, i32 %264, i32 %267, !prof !2
  br label %269

269:                                              ; preds = %193, %212, %226, %223, %215
  %270 = phi i32 [ %200, %212 ], [ %200, %215 ], [ %200, %223 ], [ %248, %226 ], [ %200, %193 ]
  %271 = phi i32 [ %206, %212 ], [ %206, %215 ], [ %206, %223 ], [ %268, %226 ], [ %206, %193 ]
  %272 = load i96, i96* %208, align 4
  %273 = trunc i96 %272 to i32
  %274 = icmp slt i32 %273, 0
  br i1 %274, label %283, label %275

275:                                              ; preds = %269
  %276 = zext i32 %270 to i64
  %277 = shl nuw i64 %276, 32
  %278 = zext i32 %271 to i64
  %279 = or i64 %277, %278
  %280 = lshr i64 %139, 32
  %281 = shl i64 %139, 32
  %282 = or i64 %281, %280
  br label %288

283:                                              ; preds = %269
  %284 = zext i32 %271 to i64
  %285 = shl nuw i64 %284, 32
  %286 = zext i32 %270 to i64
  %287 = or i64 %285, %286
  br label %288

288:                                              ; preds = %283, %275
  %289 = phi i64 [ %287, %283 ], [ %279, %275 ]
  %290 = phi i64 [ %139, %283 ], [ %282, %275 ]
  %291 = insertvalue { i64, i64 } undef, i64 %289, 0
  %292 = insertvalue { i64, i64 } %291, i64 %290, 1
  ret { i64, i64 } %292
}

declare i32 @_ZNK5blink14LocalFrameView10CaretWidthEv(%"class.blink::LocalFrameView"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"*) local_unnamed_addr #5

declare zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #5

declare zeroext i1 @_ZN5blink20IsDisplayInsideTableEPKNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) unnamed_addr #4 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.blink::PhysicalOffset"*
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"struct.blink::PhysicalOffset"*
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %1 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %10 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %10, i64 13
  %12 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call %"class.blink::LayoutObjectChildList"* %12(%"class.blink::LayoutObject"* %8) #20
  %14 = icmp eq %"class.blink::LayoutObjectChildList"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %13, i64 0, i32 0
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %3, %15
  tail call void @_ZNK5blink12LayoutObject27FirstPositionInOrBeforeThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %8) #20
  br label %523

20:                                               ; preds = %15
  %21 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %22 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %22, i64 92
  %24 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::LayoutObject"* %8, i32 44) #20
  br i1 %25, label %26, label %108

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %28 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %27 to i96*
  %29 = load i96, i96* %28, align 4
  %30 = and i96 %29, 16777216
  %31 = icmp eq i96 %30, 0
  br i1 %31, label %32, label %45

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %33, align 8
  %35 = icmp eq %"class.blink::Node"* %34, null
  br i1 %35, label %45, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.blink::Node"* %34 to i8 (%"class.blink::Node"*)***
  %38 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %37, align 8
  %39 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %38, i64 34
  %40 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %39, align 8
  %41 = tail call zeroext i8 %40(%"class.blink::Node"* nonnull %34) #20
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %108

43:                                               ; preds = %36
  %44 = load i96, i96* %28, align 4
  br label %45

45:                                               ; preds = %43, %32, %26
  %46 = phi i96 [ %44, %43 ], [ %29, %26 ], [ %29, %32 ]
  %47 = and i96 %46, 16777216
  %48 = icmp eq i96 %47, 0
  br i1 %48, label %49, label %108

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %50, align 8
  %52 = icmp eq %"class.blink::Node"* %51, null
  br i1 %52, label %108, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 9
  %59 = bitcast [20 x i8]* %58 to i160*
  %60 = load i160, i160* %59, align 8
  %61 = and i160 %60, 15211807202738752817960438464512
  %62 = icmp eq i160 %61, 5070602400912917605986812821504
  br i1 %62, label %63, label %72, !prof !2

63:                                               ; preds = %53
  %64 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp sgt i32 %55, -1
  %67 = select i1 %66, i32 -2147483648, i32 2147483647
  %68 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %65, i32 %55) #20
  %69 = extractvalue { i32, i1 } %68, 1
  %70 = extractvalue { i32, i1 } %68, 0
  %71 = select i1 %69, i32 %67, i32 %70, !prof !2
  br label %72

72:                                               ; preds = %53, %63
  %73 = phi i32 [ %71, %63 ], [ %55, %53 ]
  %74 = icmp slt i32 %73, 0
  %75 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1
  %76 = bitcast %"class.blink::LayoutSize"* %75 to i64*
  %77 = load i64, i64* %76, align 4
  %78 = trunc i64 %77 to i32
  %79 = icmp sgt i32 %73, %78
  %80 = or i1 %74, %79
  br i1 %80, label %89, label %81

81:                                               ; preds = %72
  %82 = lshr i64 %77, 32
  %83 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp slt i32 %84, 0
  %86 = trunc i64 %82 to i32
  %87 = icmp sgt i32 %84, %86
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %108

89:                                               ; preds = %72, %81
  %90 = shl i64 %77, 32
  %91 = ashr exact i64 %90, 26
  %92 = sdiv i64 %91, 128
  %93 = tail call i1 @llvm.is.constant.i64(i64 %92) #20
  br i1 %93, label %101, label %94

94:                                               ; preds = %89
  %95 = icmp slt i64 %90, -8522825728
  %96 = select i1 %95, i32 -2147483648, i32 2147483647
  %97 = add nsw i64 %92, 2147483648
  %98 = icmp ult i64 %97, 4294967296
  %99 = trunc i64 %92 to i32
  %100 = select i1 %98, i32 %99, i32 %96, !prof !3
  br label %103

101:                                              ; preds = %89
  %102 = trunc i64 %92 to i32
  br label %103

103:                                              ; preds = %94, %101
  %104 = phi i32 [ %100, %94 ], [ %102, %101 ]
  %105 = icmp sgt i32 %73, %104
  br i1 %105, label %107, label %106

106:                                              ; preds = %103
  tail call void @_ZNK5blink12LayoutObject27FirstPositionInOrBeforeThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %8) #20
  br label %523

107:                                              ; preds = %103
  tail call void @_ZNK5blink12LayoutObject25LastPositionInOrAfterThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %8) #20
  br label %523

108:                                              ; preds = %20, %49, %36, %45, %81
  %109 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  br label %111

111:                                              ; preds = %108, %412
  %112 = phi %"class.blink::LayoutBox"* [ null, %108 ], [ %414, %412 ]
  %113 = phi %"class.blink::LayoutObject"* [ %17, %108 ], [ %416, %412 ]
  %114 = phi i32 [ 2147483647, %108 ], [ %413, %412 ]
  %115 = bitcast %"class.blink::LayoutObject"* %113 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %116 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %115, align 8
  %117 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %116, i64 13
  %118 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %117, align 8
  %119 = tail call %"class.blink::LayoutObjectChildList"* %118(%"class.blink::LayoutObject"* nonnull %113) #20
  %120 = icmp eq %"class.blink::LayoutObjectChildList"* %119, null
  br i1 %120, label %125, label %121

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %119, i64 0, i32 0
  %123 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %122, align 8
  %124 = icmp eq %"class.blink::LayoutObject"* %123, null
  br i1 %124, label %125, label %137

125:                                              ; preds = %111, %121
  %126 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %113, i64 0, i32 4
  %127 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %126 to i96*
  %128 = load i96, i96* %127, align 4
  %129 = and i96 %128, 134217728
  %130 = icmp eq i96 %129, 0
  br i1 %130, label %131, label %137

131:                                              ; preds = %125
  %132 = bitcast %"class.blink::LayoutObject"* %113 to i1 (%"class.blink::LayoutObject"*)***
  %133 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %132, align 8
  %134 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %133, i64 24
  %135 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %134, align 8
  %136 = tail call zeroext i1 %135(%"class.blink::LayoutObject"* nonnull %113) #20
  br i1 %136, label %137, label %412

137:                                              ; preds = %125, %121, %131
  %138 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %113, i64 0, i32 5, i32 0
  %139 = bitcast %"class.blink::ComputedStyle"** %138 to %"class.blink::ComputedStyleBase"**
  %140 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %140, i64 0, i32 9
  %142 = bitcast [20 x i8]* %141 to i160*
  %143 = load i160, i160* %142, align 8
  %144 = and i160 %143, 3802951800684688204490109616128
  %145 = icmp eq i160 %144, 1267650600228229401496703205376
  br i1 %145, label %146, label %412

146:                                              ; preds = %137
  %147 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %113, i64 0, i32 4
  %148 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %147 to i96*
  %149 = load i96, i96* %148, align 4
  %150 = and i96 %149, 67108864
  %151 = icmp eq i96 %150, 0
  br i1 %151, label %412, label %152

152:                                              ; preds = %146
  %153 = bitcast %"class.blink::LayoutObject"* %113 to %"class.blink::LayoutBox"*
  %154 = bitcast %"class.blink::LayoutObject"* %113 to %"class.blink::LayoutBoxModelObject"*
  %155 = bitcast %"class.blink::LayoutObject"* %113 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %156 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %155, align 8
  %157 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %156, i64 122
  %158 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %157, align 8
  %159 = tail call i32 %158(%"class.blink::LayoutBoxModelObject"* nonnull %154) #20
  %160 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %155, align 8
  %161 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %160, i64 118
  %162 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %161, align 8
  %163 = tail call i32 %162(%"class.blink::LayoutBoxModelObject"* nonnull %154) #20
  %164 = icmp slt i32 %163, 0
  %165 = select i1 %164, i32 -2147483648, i32 2147483647
  %166 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %159, i32 %163) #20
  %167 = extractvalue { i32, i1 } %166, 1
  %168 = extractvalue { i32, i1 } %166, 0
  %169 = select i1 %167, i32 %165, i32 %168, !prof !2
  %170 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %113, i64 1, i32 1, i32 1
  %171 = bitcast i8* %170 to i64*
  %172 = load i64, i64* %171, align 4
  %173 = lshr i64 %172, 32
  %174 = trunc i64 %173 to i32
  %175 = icmp slt i32 %174, 0
  %176 = select i1 %175, i32 -2147483648, i32 2147483647
  %177 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %169, i32 %174) #20
  %178 = extractvalue { i32, i1 } %177, 1
  %179 = extractvalue { i32, i1 } %177, 0
  %180 = select i1 %178, i32 %176, i32 %179, !prof !2
  %181 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* nonnull %153) #20
  %182 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %155, align 8
  %183 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %182, i64 118
  %184 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %183, align 8
  %185 = tail call i32 %184(%"class.blink::LayoutBoxModelObject"* nonnull %154) #20
  %186 = icmp sgt i32 %185, -1
  %187 = select i1 %186, i32 -2147483648, i32 2147483647
  %188 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %181, i32 %185) #20
  %189 = extractvalue { i32, i1 } %188, 1
  %190 = extractvalue { i32, i1 } %188, 0
  %191 = select i1 %189, i32 %187, i32 %190, !prof !2
  %192 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %155, align 8
  %193 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %192, i64 119
  %194 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %193, align 8
  %195 = tail call i32 %194(%"class.blink::LayoutBoxModelObject"* nonnull %154) #20
  %196 = icmp sgt i32 %195, -1
  %197 = select i1 %196, i32 -2147483648, i32 2147483647
  %198 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %191, i32 %195) #20
  %199 = extractvalue { i32, i1 } %198, 1
  %200 = extractvalue { i32, i1 } %198, 0
  %201 = select i1 %199, i32 %197, i32 %200, !prof !2
  %202 = icmp sgt i32 %201, 0
  %203 = select i1 %202, i32 %201, i32 0
  %204 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %180, i32 %203) #20
  %205 = extractvalue { i32, i1 } %204, 1
  %206 = extractvalue { i32, i1 } %204, 0
  %207 = select i1 %205, i32 2147483647, i32 %206, !prof !2
  %208 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %155, align 8
  %209 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %208, i64 124
  %210 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %209, align 8
  %211 = tail call i32 %210(%"class.blink::LayoutBoxModelObject"* nonnull %154) #20
  %212 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %155, align 8
  %213 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %212, i64 120
  %214 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %213, align 8
  %215 = tail call i32 %214(%"class.blink::LayoutBoxModelObject"* nonnull %154) #20
  %216 = icmp slt i32 %215, 0
  %217 = select i1 %216, i32 -2147483648, i32 2147483647
  %218 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %211, i32 %215) #20
  %219 = extractvalue { i32, i1 } %218, 1
  %220 = extractvalue { i32, i1 } %218, 0
  %221 = select i1 %219, i32 %217, i32 %220, !prof !2
  %222 = bitcast %"class.blink::LayoutObject"* %113 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %223 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %222, align 8
  %224 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %223, i64 147
  %225 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %224, align 8
  %226 = tail call %"class.blink::LayoutBox"* %225(%"class.blink::LayoutBox"* nonnull %153) #20
  %227 = icmp eq %"class.blink::LayoutBox"* %226, null
  br i1 %227, label %236, label %228

228:                                              ; preds = %152
  %229 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %226, i64 0, i32 0, i32 0, i32 5, i32 0
  %230 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %229, align 8
  %231 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %230, i64 0, i32 0, i32 9
  %232 = bitcast [20 x i8]* %231 to i160*
  %233 = load i160, i160* %232, align 8
  %234 = and i160 %233, 15211807202738752817960438464512
  %235 = icmp eq i160 %234, 5070602400912917605986812821504
  br i1 %235, label %239, label %236, !prof !2

236:                                              ; preds = %228, %152
  %237 = load i64, i64* %171, align 4
  %238 = trunc i64 %237 to i32
  br label %262

239:                                              ; preds = %228
  %240 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %226, i64 0, i32 2, i32 1
  %241 = bitcast %"class.blink::LayoutSize"* %240 to i64*
  %242 = load i64, i64* %241, align 4
  %243 = trunc i64 %242 to i32
  %244 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %113, i64 1, i32 4, i32 0, i64 4
  %245 = bitcast i8* %244 to i64*
  %246 = load i64, i64* %245, align 4
  %247 = trunc i64 %246 to i32
  %248 = icmp sgt i32 %247, -1
  %249 = select i1 %248, i32 -2147483648, i32 2147483647
  %250 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %243, i32 %247) #20
  %251 = extractvalue { i32, i1 } %250, 1
  %252 = extractvalue { i32, i1 } %250, 0
  %253 = select i1 %251, i32 %249, i32 %252, !prof !2
  %254 = load i64, i64* %171, align 4
  %255 = trunc i64 %254 to i32
  %256 = icmp sgt i32 %255, -1
  %257 = select i1 %256, i32 -2147483648, i32 2147483647
  %258 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %253, i32 %255) #20
  %259 = extractvalue { i32, i1 } %258, 1
  %260 = extractvalue { i32, i1 } %258, 0
  %261 = select i1 %259, i32 %257, i32 %260, !prof !2
  br label %262

262:                                              ; preds = %236, %239
  %263 = phi i32 [ %238, %236 ], [ %261, %239 ]
  %264 = icmp slt i32 %263, 0
  %265 = select i1 %264, i32 -2147483648, i32 2147483647
  %266 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %221, i32 %263) #20
  %267 = extractvalue { i32, i1 } %266, 1
  %268 = extractvalue { i32, i1 } %266, 0
  %269 = select i1 %267, i32 %265, i32 %268, !prof !2
  %270 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* nonnull %153) #20
  %271 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %155, align 8
  %272 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %271, i64 120
  %273 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %272, align 8
  %274 = tail call i32 %273(%"class.blink::LayoutBoxModelObject"* nonnull %154) #20
  %275 = icmp sgt i32 %274, -1
  %276 = select i1 %275, i32 -2147483648, i32 2147483647
  %277 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %270, i32 %274) #20
  %278 = extractvalue { i32, i1 } %277, 1
  %279 = extractvalue { i32, i1 } %277, 0
  %280 = select i1 %278, i32 %276, i32 %279, !prof !2
  %281 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %155, align 8
  %282 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %281, i64 121
  %283 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %282, align 8
  %284 = tail call i32 %283(%"class.blink::LayoutBoxModelObject"* nonnull %154) #20
  %285 = icmp sgt i32 %284, -1
  %286 = select i1 %285, i32 -2147483648, i32 2147483647
  %287 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %280, i32 %284) #20
  %288 = extractvalue { i32, i1 } %287, 1
  %289 = extractvalue { i32, i1 } %287, 0
  %290 = select i1 %288, i32 %286, i32 %289, !prof !2
  %291 = icmp sgt i32 %290, 0
  %292 = select i1 %291, i32 %290, i32 0
  %293 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %269, i32 %292) #20
  %294 = extractvalue { i32, i1 } %293, 1
  %295 = extractvalue { i32, i1 } %293, 0
  %296 = select i1 %294, i32 2147483647, i32 %295, !prof !2
  %297 = load i32, i32* %109, align 4
  %298 = icmp sle i32 %297, %296
  %299 = icmp sge i32 %297, %269
  %300 = and i1 %299, %298
  br i1 %300, label %301, label %350

301:                                              ; preds = %262
  %302 = load i32, i32* %110, align 4
  %303 = icmp sle i32 %302, %180
  %304 = icmp sge i32 %302, %207
  %305 = and i1 %303, %304
  br i1 %305, label %306, label %350

306:                                              ; preds = %301
  %307 = bitcast %"class.blink::LayoutObject"* %113 to %"class.blink::LayoutBox"*
  %308 = bitcast i8* %170 to i64*
  %309 = bitcast %"class.blink::LayoutObject"* %113 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %310 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %310) #20
  %311 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %309, align 8
  %312 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %311, i64 147
  %313 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %312, align 8
  %314 = tail call %"class.blink::LayoutBox"* %313(%"class.blink::LayoutBox"* nonnull %307) #20
  %315 = icmp eq %"class.blink::LayoutBox"* %314, null
  br i1 %315, label %324, label %316

316:                                              ; preds = %306
  %317 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %314, i64 0, i32 0, i32 0, i32 5, i32 0
  %318 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %317, align 8
  %319 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %318, i64 0, i32 0, i32 9
  %320 = bitcast [20 x i8]* %319 to i160*
  %321 = load i160, i160* %320, align 8
  %322 = and i160 %321, 15211807202738752817960438464512
  %323 = icmp eq i160 %322, 5070602400912917605986812821504
  br i1 %323, label %327, label %324, !prof !2

324:                                              ; preds = %316, %306
  %325 = load i64, i64* %308, align 4
  %326 = trunc i64 %325 to i32
  br label %418

327:                                              ; preds = %316
  %328 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %314, i64 0, i32 2, i32 1
  %329 = bitcast %"class.blink::LayoutSize"* %328 to i64*
  %330 = load i64, i64* %329, align 4
  %331 = trunc i64 %330 to i32
  %332 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %113, i64 1, i32 4, i32 0, i64 4
  %333 = bitcast i8* %332 to i64*
  %334 = load i64, i64* %333, align 4
  %335 = trunc i64 %334 to i32
  %336 = icmp sgt i32 %335, -1
  %337 = select i1 %336, i32 -2147483648, i32 2147483647
  %338 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %331, i32 %335) #20
  %339 = extractvalue { i32, i1 } %338, 1
  %340 = extractvalue { i32, i1 } %338, 0
  %341 = select i1 %339, i32 %337, i32 %340, !prof !2
  %342 = load i64, i64* %308, align 4
  %343 = trunc i64 %342 to i32
  %344 = icmp sgt i32 %343, -1
  %345 = select i1 %344, i32 -2147483648, i32 2147483647
  %346 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %341, i32 %343) #20
  %347 = extractvalue { i32, i1 } %346, 1
  %348 = extractvalue { i32, i1 } %346, 0
  %349 = select i1 %347, i32 %345, i32 %348, !prof !2
  br label %418

350:                                              ; preds = %301, %262
  %351 = icmp sgt i32 %297, %296
  br i1 %351, label %352, label %358

352:                                              ; preds = %350
  %353 = load i32, i32* %110, align 4
  %354 = icmp slt i32 %353, %180
  br i1 %354, label %368, label %355

355:                                              ; preds = %352
  %356 = icmp sgt i32 %353, %207
  %357 = select i1 %356, i32 %207, i32 %353
  br label %368

358:                                              ; preds = %350
  %359 = icmp slt i32 %297, %269
  %360 = load i32, i32* %110, align 4
  %361 = icmp slt i32 %360, %180
  br i1 %359, label %362, label %366

362:                                              ; preds = %358
  br i1 %361, label %368, label %363

363:                                              ; preds = %362
  %364 = icmp sgt i32 %360, %207
  %365 = select i1 %364, i32 %207, i32 %360
  br label %368

366:                                              ; preds = %358
  %367 = select i1 %361, i32 %180, i32 %207
  br label %368

368:                                              ; preds = %363, %355, %366, %362, %352
  %369 = phi i32 [ %353, %352 ], [ %360, %362 ], [ %360, %366 ], [ %353, %355 ], [ %360, %363 ]
  %370 = phi i32 [ %296, %352 ], [ %269, %362 ], [ %297, %366 ], [ %296, %355 ], [ %269, %363 ]
  %371 = phi i32 [ %180, %352 ], [ %180, %362 ], [ %367, %366 ], [ %357, %355 ], [ %365, %363 ]
  %372 = icmp sgt i32 %297, -1
  %373 = select i1 %372, i32 -2147483648, i32 2147483647
  %374 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %370, i32 %297) #20
  %375 = extractvalue { i32, i1 } %374, 1
  %376 = extractvalue { i32, i1 } %374, 0
  %377 = select i1 %375, i32 %373, i32 %376, !prof !2
  %378 = icmp sgt i32 %369, -1
  %379 = select i1 %378, i32 -2147483648, i32 2147483647
  %380 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %371, i32 %369) #20
  %381 = extractvalue { i32, i1 } %380, 1
  %382 = extractvalue { i32, i1 } %380, 0
  %383 = select i1 %381, i32 %379, i32 %382, !prof !2
  %384 = sext i32 %377 to i64
  %385 = mul nsw i64 %384, %384
  %386 = lshr i64 %385, 6
  %387 = lshr i64 %385, 38
  %388 = trunc i64 %387 to i32
  %389 = trunc i64 %386 to i32
  %390 = ashr i32 %389, 31
  %391 = icmp eq i32 %390, %388
  %392 = select i1 %391, i32 %389, i32 2147483647
  %393 = sext i32 %383 to i64
  %394 = mul nsw i64 %393, %393
  %395 = lshr i64 %394, 6
  %396 = lshr i64 %394, 38
  %397 = trunc i64 %396 to i32
  %398 = trunc i64 %395 to i32
  %399 = ashr i32 %398, 31
  %400 = icmp eq i32 %399, %397
  %401 = icmp slt i32 %398, 0
  %402 = select i1 %400, i32 %398, i32 2147483647
  %403 = and i1 %401, %400
  %404 = select i1 %403, i32 -2147483648, i32 2147483647
  %405 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %392, i32 %402) #20
  %406 = extractvalue { i32, i1 } %405, 1
  %407 = extractvalue { i32, i1 } %405, 0
  %408 = select i1 %406, i32 %404, i32 %407, !prof !2
  %409 = icmp slt i32 %408, %114
  %410 = select i1 %409, i32 %408, i32 %114
  %411 = select i1 %409, %"class.blink::LayoutBox"* %153, %"class.blink::LayoutBox"* %112
  br label %412

412:                                              ; preds = %146, %368, %137, %131
  %413 = phi i32 [ %114, %146 ], [ %114, %137 ], [ %114, %131 ], [ %410, %368 ]
  %414 = phi %"class.blink::LayoutBox"* [ %112, %146 ], [ %112, %137 ], [ %112, %131 ], [ %411, %368 ]
  %415 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %113, i64 0, i32 9
  %416 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %415, align 8
  %417 = icmp eq %"class.blink::LayoutObject"* %416, null
  br i1 %417, label %445, label %111

418:                                              ; preds = %324, %327
  %419 = phi i32 [ %326, %324 ], [ %349, %327 ]
  %420 = phi i64 [ %325, %324 ], [ %342, %327 ]
  %421 = lshr i64 %420, 32
  %422 = trunc i64 %421 to i32
  %423 = load i32, i32* %109, align 4
  %424 = icmp sgt i32 %419, -1
  %425 = select i1 %424, i32 -2147483648, i32 2147483647
  %426 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %423, i32 %419) #20
  %427 = extractvalue { i32, i1 } %426, 1
  %428 = extractvalue { i32, i1 } %426, 0
  %429 = select i1 %427, i32 %425, i32 %428, !prof !2
  %430 = load i32, i32* %110, align 4
  %431 = icmp sgt i32 %422, -1
  %432 = select i1 %431, i32 -2147483648, i32 2147483647
  %433 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %430, i32 %422) #20
  %434 = extractvalue { i32, i1 } %433, 1
  %435 = extractvalue { i32, i1 } %433, 0
  %436 = select i1 %434, i32 %432, i32 %435, !prof !2
  %437 = zext i32 %436 to i64
  %438 = shl nuw i64 %437, 32
  %439 = zext i32 %429 to i64
  %440 = or i64 %438, %439
  store i64 %440, i64* %4, align 8
  %441 = bitcast %"class.blink::LayoutObject"* %113 to void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)***
  %442 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)*** %441, align 8
  %443 = getelementptr inbounds void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)** %442, i64 64
  %444 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)** %443, align 8
  call void %444(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBox"* nonnull %307, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %5) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %310) #20
  br label %523

445:                                              ; preds = %412
  %446 = icmp eq %"class.blink::LayoutBox"* %414, null
  br i1 %446, label %522, label %447

447:                                              ; preds = %445
  %448 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %448) #20
  %449 = bitcast %"class.blink::LayoutBox"* %414 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %450 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %449, align 8
  %451 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %450, i64 147
  %452 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %451, align 8
  %453 = tail call %"class.blink::LayoutBox"* %452(%"class.blink::LayoutBox"* nonnull %414) #20
  %454 = icmp eq %"class.blink::LayoutBox"* %453, null
  br i1 %454, label %463, label %455

455:                                              ; preds = %447
  %456 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %453, i64 0, i32 0, i32 0, i32 5, i32 0
  %457 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %456, align 8
  %458 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %457, i64 0, i32 0, i32 9
  %459 = bitcast [20 x i8]* %458 to i160*
  %460 = load i160, i160* %459, align 8
  %461 = and i160 %460, 15211807202738752817960438464512
  %462 = icmp eq i160 %461, 5070602400912917605986812821504
  br i1 %462, label %468, label %463, !prof !2

463:                                              ; preds = %455, %447
  %464 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %414, i64 0, i32 2
  %465 = bitcast %"class.blink::LayoutRect"* %464 to i64*
  %466 = load i64, i64* %465, align 4
  %467 = trunc i64 %466 to i32
  br label %493

468:                                              ; preds = %455
  %469 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %453, i64 0, i32 2, i32 1
  %470 = bitcast %"class.blink::LayoutSize"* %469 to i64*
  %471 = load i64, i64* %470, align 4
  %472 = trunc i64 %471 to i32
  %473 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %414, i64 0, i32 2, i32 1
  %474 = bitcast %"class.blink::LayoutSize"* %473 to i64*
  %475 = load i64, i64* %474, align 4
  %476 = trunc i64 %475 to i32
  %477 = icmp sgt i32 %476, -1
  %478 = select i1 %477, i32 -2147483648, i32 2147483647
  %479 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %472, i32 %476) #20
  %480 = extractvalue { i32, i1 } %479, 1
  %481 = extractvalue { i32, i1 } %479, 0
  %482 = select i1 %480, i32 %478, i32 %481, !prof !2
  %483 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %414, i64 0, i32 2
  %484 = bitcast %"class.blink::LayoutRect"* %483 to i64*
  %485 = load i64, i64* %484, align 4
  %486 = trunc i64 %485 to i32
  %487 = icmp sgt i32 %486, -1
  %488 = select i1 %487, i32 -2147483648, i32 2147483647
  %489 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %482, i32 %486) #20
  %490 = extractvalue { i32, i1 } %489, 1
  %491 = extractvalue { i32, i1 } %489, 0
  %492 = select i1 %490, i32 %488, i32 %491, !prof !2
  br label %493

493:                                              ; preds = %463, %468
  %494 = phi i32 [ %467, %463 ], [ %492, %468 ]
  %495 = phi i64 [ %466, %463 ], [ %485, %468 ]
  %496 = lshr i64 %495, 32
  %497 = trunc i64 %496 to i32
  %498 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %499 = load i32, i32* %498, align 4
  %500 = icmp sgt i32 %494, -1
  %501 = select i1 %500, i32 -2147483648, i32 2147483647
  %502 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %499, i32 %494) #20
  %503 = extractvalue { i32, i1 } %502, 1
  %504 = extractvalue { i32, i1 } %502, 0
  %505 = select i1 %503, i32 %501, i32 %504, !prof !2
  %506 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %507 = load i32, i32* %506, align 4
  %508 = icmp sgt i32 %497, -1
  %509 = select i1 %508, i32 -2147483648, i32 2147483647
  %510 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %507, i32 %497) #20
  %511 = extractvalue { i32, i1 } %510, 1
  %512 = extractvalue { i32, i1 } %510, 0
  %513 = select i1 %511, i32 %509, i32 %512, !prof !2
  %514 = zext i32 %513 to i64
  %515 = shl nuw i64 %514, 32
  %516 = zext i32 %505 to i64
  %517 = or i64 %515, %516
  store i64 %517, i64* %6, align 8
  %518 = bitcast %"class.blink::LayoutBox"* %414 to void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)***
  %519 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)*** %518, align 8
  %520 = getelementptr inbounds void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)** %519, i64 64
  %521 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)** %520, align 8
  call void %521(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBox"* nonnull %414, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %7) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %448) #20
  br label %523

522:                                              ; preds = %445
  tail call void @_ZNK5blink12LayoutObject27FirstPositionInOrBeforeThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %8) #20
  br label %523

523:                                              ; preds = %493, %522, %418, %107, %106, %19
  ret void
}

declare void @_ZNK5blink12LayoutObject27FirstPositionInOrBeforeThisEv(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutObject"*) local_unnamed_addr #5

declare void @_ZNK5blink12LayoutObject25LastPositionInOrAfterThisEv(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutObject"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9LayoutBox27PositionForPointInFragmentsERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %4 = alloca %"struct.blink::PhysicalRect", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 8, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 8
  br i1 %7, label %9, label %18

9:                                                ; preds = %3
  %10 = tail call dereferenceable(8) %class.scoped_refptr.3247* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %8, i32 0) #20
  %11 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %10, i64 0, i32 0
  %12 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %12, i64 0, i32 3, i32 0
  %14 = bitcast %"class.blink::NGPhysicalFragment"** %13 to %"class.blink::NGPhysicalBoxFragment"**
  %15 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %14, align 8
  %16 = bitcast %"struct.blink::PhysicalOffset"* %2 to i64*
  %17 = load i64, i64* %16, align 4
  tail call void @_ZNK5blink21NGPhysicalBoxFragment16PositionForPointENS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::NGPhysicalBoxFragment"* %15, i64 %17) #20
  br label %148

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %8, i64 0, i32 0, i32 0, i32 0
  %20 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %19, align 8
  %21 = zext i32 %6 to i64
  %22 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %20, i64 %21
  %23 = icmp eq i32 %6, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  br label %121

27:                                               ; preds = %18
  %28 = bitcast %"struct.blink::PhysicalRect"* %4 to i8*
  %29 = bitcast %"struct.blink::PhysicalRect"* %4 to i64*
  %30 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %4, i64 0, i32 1
  %31 = bitcast %"struct.blink::PhysicalSize"* %30 to i64*
  %32 = bitcast %"struct.blink::PhysicalOffset"* %2 to i64*
  br label %33

33:                                               ; preds = %27, %86
  %34 = phi %"class.blink::NGPhysicalBoxFragment"* [ null, %27 ], [ %90, %86 ]
  %35 = phi i32 [ 0, %27 ], [ %89, %86 ]
  %36 = phi i32 [ 0, %27 ], [ %88, %86 ]
  %37 = phi i32 [ 2147483647, %27 ], [ %87, %86 ]
  %38 = phi %class.scoped_refptr.3247* [ %20, %27 ], [ %91, %86 ]
  %39 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %38, i64 0, i32 0
  %40 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %40, i64 0, i32 3, i32 0
  %42 = bitcast %"class.blink::NGPhysicalFragment"** %41 to %"class.blink::NGPhysicalBoxFragment"**
  %43 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %42, align 8
  %44 = call i64 @_ZNK5blink21NGPhysicalBoxFragment24OffsetFromOwnerLayoutBoxEv(%"class.blink::NGPhysicalBoxFragment"* %43) #20
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #20
  %45 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %43, i64 0, i32 0, i32 2
  %46 = bitcast %"struct.blink::PhysicalSize"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %44, i64* %29, align 8
  store i64 %47, i64* %31, align 8
  %48 = load i64, i64* %32, align 4
  %49 = call i64 @_ZNK5blink12PhysicalRect14DistanceAsSizeENS_14PhysicalOffsetE(%"struct.blink::PhysicalRect"* nonnull %4, i64 %48) #20
  %50 = lshr i64 %49, 32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #20
  %51 = or i64 %50, %49
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %93, label %54

54:                                               ; preds = %33
  %55 = shl i64 %49, 32
  %56 = ashr exact i64 %55, 32
  %57 = mul nsw i64 %56, %56
  %58 = lshr i64 %57, 6
  %59 = lshr i64 %57, 38
  %60 = trunc i64 %59 to i32
  %61 = trunc i64 %58 to i32
  %62 = ashr i32 %61, 31
  %63 = icmp eq i32 %62, %60
  %64 = select i1 %63, i32 %61, i32 2147483647
  %65 = ashr i64 %49, 32
  %66 = mul nsw i64 %65, %65
  %67 = lshr i64 %66, 6
  %68 = lshr i64 %66, 38
  %69 = trunc i64 %68 to i32
  %70 = trunc i64 %67 to i32
  %71 = ashr i32 %70, 31
  %72 = icmp eq i32 %71, %69
  %73 = icmp slt i32 %70, 0
  %74 = select i1 %72, i32 %70, i32 2147483647
  %75 = and i1 %73, %72
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %64, i32 %74) #20
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !2
  %81 = icmp slt i32 %80, %37
  br i1 %81, label %82, label %86

82:                                               ; preds = %54
  %83 = trunc i64 %44 to i32
  %84 = lshr i64 %44, 32
  %85 = trunc i64 %84 to i32
  br label %86

86:                                               ; preds = %82, %54
  %87 = phi i32 [ %37, %54 ], [ %80, %82 ]
  %88 = phi i32 [ %36, %54 ], [ %83, %82 ]
  %89 = phi i32 [ %35, %54 ], [ %85, %82 ]
  %90 = phi %"class.blink::NGPhysicalBoxFragment"* [ %34, %54 ], [ %43, %82 ]
  %91 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %38, i64 1
  %92 = icmp eq %class.scoped_refptr.3247* %91, %22
  br i1 %92, label %117, label %33

93:                                               ; preds = %33
  %94 = trunc i64 %44 to i32
  %95 = lshr i64 %44, 32
  %96 = trunc i64 %95 to i32
  %97 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp sgt i32 %94, -1
  %100 = select i1 %99, i32 -2147483648, i32 2147483647
  %101 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %98, i32 %94) #20
  %102 = extractvalue { i32, i1 } %101, 1
  %103 = extractvalue { i32, i1 } %101, 0
  %104 = select i1 %102, i32 %100, i32 %103, !prof !2
  %105 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %96, -1
  %108 = select i1 %107, i32 -2147483648, i32 2147483647
  %109 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %106, i32 %96) #20
  %110 = extractvalue { i32, i1 } %109, 1
  %111 = extractvalue { i32, i1 } %109, 0
  %112 = select i1 %110, i32 %108, i32 %111, !prof !2
  %113 = zext i32 %112 to i64
  %114 = shl nuw i64 %113, 32
  %115 = zext i32 %104 to i64
  %116 = or i64 %114, %115
  call void @_ZNK5blink21NGPhysicalBoxFragment16PositionForPointENS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::NGPhysicalBoxFragment"* %43, i64 %116) #20
  br label %148

117:                                              ; preds = %86
  %118 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp sgt i32 %88, -1
  br i1 %120, label %121, label %126

121:                                              ; preds = %24, %117
  %122 = phi i32 [ %26, %24 ], [ %119, %117 ]
  %123 = phi %"class.blink::NGPhysicalBoxFragment"* [ null, %24 ], [ %90, %117 ]
  %124 = phi i32 [ 0, %24 ], [ %89, %117 ]
  %125 = phi i32 [ 0, %24 ], [ %88, %117 ]
  br label %126

126:                                              ; preds = %117, %121
  %127 = phi i32 [ %122, %121 ], [ %119, %117 ]
  %128 = phi %"class.blink::NGPhysicalBoxFragment"* [ %123, %121 ], [ %90, %117 ]
  %129 = phi i32 [ %124, %121 ], [ %89, %117 ]
  %130 = phi i32 [ %125, %121 ], [ %88, %117 ]
  %131 = phi i32 [ -2147483648, %121 ], [ 2147483647, %117 ]
  %132 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %127, i32 %130) #20
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = select i1 %133, i32 %131, i32 %134, !prof !2
  %136 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp sgt i32 %129, -1
  %139 = select i1 %138, i32 -2147483648, i32 2147483647
  %140 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %137, i32 %129) #20
  %141 = extractvalue { i32, i1 } %140, 1
  %142 = extractvalue { i32, i1 } %140, 0
  %143 = select i1 %141, i32 %139, i32 %142, !prof !2
  %144 = zext i32 %143 to i64
  %145 = shl nuw i64 %144, 32
  %146 = zext i32 %135 to i64
  %147 = or i64 %145, %146
  call void @_ZNK5blink21NGPhysicalBoxFragment16PositionForPointENS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::NGPhysicalBoxFragment"* %128, i64 %147) #20
  br label %148

148:                                              ; preds = %126, %93, %9
  ret void
}

declare void @_ZNK5blink21NGPhysicalBoxFragment16PositionForPointENS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::NGPhysicalBoxFragment"*, i64) local_unnamed_addr #5

declare i64 @_ZNK5blink21NGPhysicalBoxFragment24OffsetFromOwnerLayoutBoxEv(%"class.blink::NGPhysicalBoxFragment"*) local_unnamed_addr #5

declare i64 @_ZNK5blink12PhysicalRect14DistanceAsSizeENS_14PhysicalOffsetE(%"struct.blink::PhysicalRect"*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox31UpdateFragmentationInfoForChildERS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %2, %7
  %8 = phi %"class.blink::LayoutObject"* [ %10, %7 ], [ %3, %2 ]
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %2
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 12, i32 0
  %16 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %15, i64 0, i32 0
  %17 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %16, align 8
  %18 = icmp eq %"struct.blink::LayoutBoxRareData"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %17, i64 0, i32 7, i32 0
  store i32 0, i32* %20, align 8
  br label %21

21:                                               ; preds = %14, %19
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %23 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %22 to i96*
  %24 = load i96, i96* %23, align 4
  %25 = and i96 %24, 1099511627776
  %26 = icmp eq i96 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %3) #20
  %29 = icmp eq %"class.blink::LayoutFlowThread"* %28, null
  br i1 %29, label %30, label %51

30:                                               ; preds = %27, %21
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %32 = icmp eq %"class.blink::Node"* %31, null
  br i1 %32, label %33, label %40

33:                                               ; preds = %30, %33
  %34 = phi %"class.blink::LayoutObject"* [ %36, %33 ], [ %3, %30 ]
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 7
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::Node"*, %"class.blink::Node"** %37, align 8
  %39 = icmp eq %"class.blink::Node"* %38, null
  br i1 %39, label %33, label %40

40:                                               ; preds = %33, %30
  %41 = phi %"class.blink::Node"* [ %31, %30 ], [ %38, %33 ]
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::Document"*, %"class.blink::Document"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %45, i64 0, i32 113
  %47 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %47, i64 0, i32 2, i32 0
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %102, label %57

51:                                               ; preds = %27
  %52 = bitcast %"class.blink::LayoutFlowThread"* %28 to i1 (%"class.blink::LayoutFlowThread"*)***
  %53 = load i1 (%"class.blink::LayoutFlowThread"*)**, i1 (%"class.blink::LayoutFlowThread"*)*** %52, align 8
  %54 = getelementptr inbounds i1 (%"class.blink::LayoutFlowThread"*)*, i1 (%"class.blink::LayoutFlowThread"*)** %53, i64 232
  %55 = load i1 (%"class.blink::LayoutFlowThread"*)*, i1 (%"class.blink::LayoutFlowThread"*)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.blink::LayoutFlowThread"* nonnull %28) #20
  br i1 %56, label %57, label %102

57:                                               ; preds = %40, %51
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %59 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %59, i64 0, i32 0, i32 9
  %61 = bitcast [20 x i8]* %60 to i160*
  %62 = load i160, i160* %61, align 8
  %63 = and i160 %62, 15211807202738752817960438464512
  %64 = icmp eq i160 %63, 0
  %65 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %66 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %67 = load i32, i32* %65, align 4
  %68 = load i32, i32* %66, align 4
  %69 = select i1 %64, i32 %67, i32 %68
  %70 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %71 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %70, align 8
  %72 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %71, i64 146
  %73 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %72, align 8
  %74 = tail call i32 %73(%"class.blink::LayoutBox"* %1) #20
  %75 = tail call i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"* %0, i32 %69, i32 1)
  %76 = icmp slt i32 %75, %74
  br i1 %76, label %77, label %102

77:                                               ; preds = %57
  %78 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %16, align 8
  %79 = icmp eq %"struct.blink::LayoutBoxRareData"* %78, null
  br i1 %79, label %80, label %99

80:                                               ; preds = %77
  %81 = icmp eq i32 %75, 0
  br i1 %81, label %102, label %82

82:                                               ; preds = %80
  %83 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %84 = bitcast i8* %83 to %"struct.blink::LayoutBoxRareData"*
  %85 = bitcast i8* %83 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %85, align 8
  %86 = getelementptr inbounds i8, i8* %83, i64 8
  %87 = bitcast i8* %86 to i32*
  store i32 -64, i32* %87, align 4
  %88 = getelementptr inbounds i8, i8* %83, i64 12
  %89 = bitcast i8* %88 to i32*
  store i32 -64, i32* %89, align 4
  %90 = getelementptr inbounds i8, i8* %83, i64 16
  %91 = load i8, i8* %90, align 8
  %92 = and i8 %91, -16
  store i8 %92, i8* %90, align 8
  %93 = getelementptr inbounds i8, i8* %83, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %93, i8 0, i64 68, i1 false) #20
  %94 = getelementptr inbounds i8, i8* %83, i64 -4
  %95 = bitcast i8* %94 to i16*
  %96 = load atomic i16, i16* %95 monotonic, align 2
  %97 = or i16 %96, 1
  store atomic i16 %97, i16* %95 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %15, %"struct.blink::LayoutBoxRareData"* %84) #20
  %98 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %16, align 8
  br label %99

99:                                               ; preds = %82, %77
  %100 = phi %"struct.blink::LayoutBoxRareData"* [ %98, %82 ], [ %78, %77 ]
  %101 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %100, i64 0, i32 7, i32 0
  store i32 %75, i32* %101, align 8
  br label %102

102:                                              ; preds = %40, %57, %80, %99, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox19SetOffsetToNextPageENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0
  %4 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %3, i64 0, i32 0
  %5 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  %6 = icmp eq %"struct.blink::LayoutBoxRareData"* %5, null
  br i1 %6, label %7, label %26

7:                                                ; preds = %2
  %8 = icmp eq i32 %1, 0
  br i1 %8, label %29, label %9

9:                                                ; preds = %7
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %11 = bitcast i8* %10 to %"struct.blink::LayoutBoxRareData"*
  %12 = bitcast i8* %10 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %12, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 -64, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %10, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 -64, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %10, i64 16
  %18 = load i8, i8* %17, align 8
  %19 = and i8 %18, -16
  store i8 %19, i8* %17, align 8
  %20 = getelementptr inbounds i8, i8* %10, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %20, i8 0, i64 68, i1 false) #20
  %21 = getelementptr inbounds i8, i8* %10, i64 -4
  %22 = bitcast i8* %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = or i16 %23, 1
  store atomic i16 %24, i16* %22 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %3, %"struct.blink::LayoutBoxRareData"* %11) #20
  %25 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  br label %26

26:                                               ; preds = %2, %9
  %27 = phi %"struct.blink::LayoutBoxRareData"* [ %25, %9 ], [ %5, %2 ]
  %28 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %27, i64 0, i32 7, i32 0
  store i32 %1, i32* %28, align 8
  br label %29

29:                                               ; preds = %7, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox24IsPageLogicalHeightKnownEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 1099511627776
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %17, label %8

8:                                                ; preds = %1
  %9 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %2) #20
  %10 = icmp eq %"class.blink::LayoutFlowThread"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = bitcast %"class.blink::LayoutFlowThread"* %9 to i1 (%"class.blink::LayoutFlowThread"*)***
  %13 = load i1 (%"class.blink::LayoutFlowThread"*)**, i1 (%"class.blink::LayoutFlowThread"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutFlowThread"*)*, i1 (%"class.blink::LayoutFlowThread"*)** %13, i64 232
  %15 = load i1 (%"class.blink::LayoutFlowThread"*)*, i1 (%"class.blink::LayoutFlowThread"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutFlowThread"* nonnull %9) #20
  br label %39

17:                                               ; preds = %1, %8
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %21, label %28

21:                                               ; preds = %17, %21
  %22 = phi %"class.blink::LayoutObject"* [ %24, %21 ], [ %2, %17 ]
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 7
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 6, i32 0, i32 0
  %26 = load %"class.blink::Node"*, %"class.blink::Node"** %25, align 8
  %27 = icmp eq %"class.blink::Node"* %26, null
  br i1 %27, label %21, label %28

28:                                               ; preds = %21, %17
  %29 = phi %"class.blink::Node"* [ %19, %17 ], [ %26, %21 ]
  %30 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %29, i64 0, i32 3, i32 0, i32 0
  %31 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %31, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %33, i64 0, i32 113
  %35 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %35, i64 0, i32 2, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = icmp ne i32 %37, 0
  br label %39

39:                                               ; preds = %11, %28
  %40 = phi i1 [ %38, %28 ], [ %16, %11 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %3, %8
  %9 = phi %"class.blink::LayoutObject"* [ %11, %8 ], [ %4, %3 ]
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 7
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %8, label %15

15:                                               ; preds = %8, %3
  %16 = phi %"class.blink::Node"* [ %6, %3 ], [ %13, %8 ]
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 113
  %22 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %21, align 8
  %23 = tail call i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"* %0)
  %24 = icmp slt i32 %23, 0
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %23) #20
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !2
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %32, label %39

32:                                               ; preds = %15, %32
  %33 = phi %"class.blink::LayoutObject"* [ %35, %32 ], [ %4, %15 ]
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 0, i32 7
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 6, i32 0, i32 0
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %38 = icmp eq %"class.blink::Node"* %37, null
  br i1 %38, label %32, label %39

39:                                               ; preds = %32, %15
  %40 = phi %"class.blink::Node"* [ %30, %15 ], [ %37, %32 ]
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %44, i64 0, i32 113
  %46 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %46, i64 0, i32 3
  %48 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %48, i64 0, i32 5, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %52 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %51 to i96*
  %53 = load i96, i96* %52, align 4
  %54 = and i96 %53, 1099511627776
  %55 = icmp eq i96 %54, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %39
  %57 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %4) #20
  %58 = icmp eq %"class.blink::LayoutFlowThread"* %57, null
  br i1 %58, label %59, label %72

59:                                               ; preds = %39, %56
  %60 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %22, i64 0, i32 2, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = srem i32 %29, %61
  %63 = icmp sgt i32 %62, -1
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %61, i32 %62) #20
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !2
  %69 = icmp eq i32 %2, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %59
  %71 = srem i32 %68, %61
  br label %74

72:                                               ; preds = %56
  %73 = tail call i32 @_ZNK5blink16LayoutFlowThread35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutFlowThread"* nonnull %57, i32 %29, i32 %2) #20
  br label %74

74:                                               ; preds = %59, %70, %72
  %75 = phi i32 [ %73, %72 ], [ %71, %70 ], [ %68, %59 ]
  %76 = icmp sgt i32 %50, -1
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %75, i32 %50) #20
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !2
  ret i32 %81
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox31ChildNeedsRelayoutForPaginationERKS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 8388608
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %9, label %108

9:                                                ; preds = %2
  %10 = and i96 %6, 1099511627776
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  %13 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %3) #20
  br label %14

14:                                               ; preds = %9, %12
  %15 = phi %"class.blink::LayoutFlowThread"* [ %13, %12 ], [ null, %9 ]
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = and i96 %19, 1099511627776
  %21 = icmp eq i96 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %16) #20
  %24 = icmp eq %"class.blink::LayoutFlowThread"* %23, null
  br i1 %24, label %25, label %47

25:                                               ; preds = %22, %14
  %26 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %29, label %36

29:                                               ; preds = %25, %29
  %30 = phi %"class.blink::LayoutObject"* [ %32, %29 ], [ %16, %25 ]
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %30, i64 0, i32 7
  %32 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %32, i64 0, i32 6, i32 0, i32 0
  %34 = load %"class.blink::Node"*, %"class.blink::Node"** %33, align 8
  %35 = icmp eq %"class.blink::Node"* %34, null
  br i1 %35, label %29, label %36

36:                                               ; preds = %29, %25
  %37 = phi %"class.blink::Node"* [ %27, %25 ], [ %34, %29 ]
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %37, i64 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %39, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %41, i64 0, i32 113
  %43 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %43, i64 0, i32 2, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %91, label %53

47:                                               ; preds = %22
  %48 = bitcast %"class.blink::LayoutFlowThread"* %23 to i1 (%"class.blink::LayoutFlowThread"*)***
  %49 = load i1 (%"class.blink::LayoutFlowThread"*)**, i1 (%"class.blink::LayoutFlowThread"*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::LayoutFlowThread"*)*, i1 (%"class.blink::LayoutFlowThread"*)** %49, i64 232
  %51 = load i1 (%"class.blink::LayoutFlowThread"*)*, i1 (%"class.blink::LayoutFlowThread"*)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::LayoutFlowThread"* nonnull %23) #20
  br i1 %52, label %53, label %91

53:                                               ; preds = %36, %47
  %54 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %55 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %55, i64 0, i32 0, i32 9
  %57 = bitcast [20 x i8]* %56 to i160*
  %58 = load i160, i160* %57, align 8
  %59 = and i160 %58, 15211807202738752817960438464512
  %60 = icmp eq i160 %59, 0
  %61 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %62 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %63 = load i32, i32* %61, align 4
  %64 = load i32, i32* %62, align 4
  %65 = select i1 %60, i32 %63, i32 %64
  %66 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %67 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %66, align 8
  %68 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %67, i64 146
  %69 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %68, align 8
  %70 = tail call i32 %69(%"class.blink::LayoutBox"* %1) #20
  %71 = tail call i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"* %0, i32 %65, i32 1)
  %72 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 12, i32 0, i32 0
  %73 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %72, align 8
  %74 = icmp eq %"struct.blink::LayoutBoxRareData"* %73, null
  br i1 %74, label %89, label %75

75:                                               ; preds = %53
  %76 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %73, i64 0, i32 7, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %89, label %79

79:                                               ; preds = %75
  %80 = icmp eq i32 %77, %71
  br i1 %80, label %81, label %108

81:                                               ; preds = %79
  %82 = icmp eq %"class.blink::LayoutFlowThread"* %15, null
  br i1 %82, label %108, label %83

83:                                               ; preds = %81
  %84 = bitcast %"class.blink::LayoutFlowThread"* %15 to i1 (%"class.blink::LayoutFlowThread"*)***
  %85 = load i1 (%"class.blink::LayoutFlowThread"*)**, i1 (%"class.blink::LayoutFlowThread"*)*** %84, align 8
  %86 = getelementptr inbounds i1 (%"class.blink::LayoutFlowThread"*)*, i1 (%"class.blink::LayoutFlowThread"*)** %85, i64 233
  %87 = load i1 (%"class.blink::LayoutFlowThread"*)*, i1 (%"class.blink::LayoutFlowThread"*)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.blink::LayoutFlowThread"* nonnull %15) #20
  br i1 %88, label %108, label %101

89:                                               ; preds = %75, %53
  %90 = icmp sgt i32 %70, %71
  br i1 %90, label %108, label %99

91:                                               ; preds = %36, %47
  %92 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 12, i32 0, i32 0
  %93 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %92, align 8
  %94 = icmp eq %"struct.blink::LayoutBoxRareData"* %93, null
  br i1 %94, label %99, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %93, i64 0, i32 7, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %108

99:                                               ; preds = %95, %91, %89
  %100 = icmp eq %"class.blink::LayoutFlowThread"* %15, null
  br i1 %100, label %108, label %101

101:                                              ; preds = %83, %99
  %102 = bitcast %"class.blink::LayoutFlowThread"* %15 to i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*)***
  %103 = load i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*)*** %102, align 8
  %104 = getelementptr inbounds i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*)** %103, i64 229
  %105 = load i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*)** %104, align 8
  %106 = tail call zeroext i1 %105(%"class.blink::LayoutFlowThread"* nonnull %15, %"class.blink::LayoutBox"* dereferenceable(216) %1) #20
  %107 = xor i1 %106, true
  br label %108

108:                                              ; preds = %79, %95, %2, %81, %83, %89, %99, %101
  %109 = phi i1 [ true, %2 ], [ true, %95 ], [ false, %99 ], [ %107, %101 ], [ true, %89 ], [ true, %83 ], [ true, %79 ], [ false, %81 ]
  ret i1 %109
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox38MarkChildForPaginationRelayoutIfNeededERS0_RNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %7, %9
  %10 = phi %"class.blink::LayoutObject"* [ %12, %9 ], [ %8, %7 ]
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 7
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %9, label %16

16:                                               ; preds = %9, %3
  %17 = phi %"class.blink::Node"* [ %5, %3 ], [ %14, %9 ]
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %21, i64 0, i32 113
  %23 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %23, i64 0, i32 3
  %25 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %25, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = and i8 %27, 4
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %16
  %31 = and i8 %27, 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = tail call zeroext i1 @_ZNK5blink9LayoutBox31ChildNeedsRelayoutForPaginationERKS0_(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1)
  br i1 %34, label %35, label %37

35:                                               ; preds = %16, %33
  %36 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* %2, %"class.blink::LayoutObject"* %36) #20
  br label %37

37:                                               ; preds = %30, %35, %33
  ret void
}

declare void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"*, %"class.blink::LayoutObject"*) local_unnamed_addr #5

declare void @_ZN5blink14LocalFrameView28AddOrthogonalWritingModeRootERNS_9LayoutBoxE(%"class.blink::LocalFrameView"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #5

declare void @_ZN5blink14LocalFrameView31RemoveOrthogonalWritingModeRootERNS_9LayoutBoxE(%"class.blink::LocalFrameView"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"struct.blink::PhysicalRect"*
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.blink::LayoutRectOutsets"*
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %9, i64 0, i32 5, i32 0
  %11 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %10, align 8
  %12 = icmp eq %"class.blink::ShadowList"* %11, null
  br i1 %12, label %13, label %55

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 7, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %18, align 8
  %20 = icmp eq %"class.blink::StyleImage"* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %17, i64 0, i32 5
  %23 = tail call zeroext i1 @_ZNK5blink20BorderImageLengthBox7NonZeroEv(%"class.blink::BorderImageLengthBox"* %22) #20
  br i1 %23, label %55, label %24

24:                                               ; preds = %21
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %8, align 8
  br label %26

26:                                               ; preds = %24, %13
  %27 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* [ %25, %24 ], [ %9, %13 ]
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %29, i64 0, i32 13
  %31 = bitcast [3 x i8]* %30 to i24*
  %32 = load i24, i24* %31, align 8
  %33 = and i24 %32, 1920
  %34 = icmp eq i24 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %29, i64 0, i32 8, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = sitofp i32 %37 to float
  %39 = fmul float %38, 1.562500e-02
  %40 = fcmp ogt float %39, 0.000000e+00
  %41 = and i24 %32, 1792
  %42 = icmp ne i24 %41, 0
  %43 = and i1 %42, %40
  br i1 %43, label %55, label %44

44:                                               ; preds = %35, %26
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %27, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %46, i64 0, i32 14, i32 0, i32 0, i32 0
  %48 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %48, i64 0, i32 2, i32 0, i32 0
  %50 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %49, align 8
  %51 = icmp eq %"class.blink::StyleImage"* %50, null
  br i1 %51, label %104, label %52

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %48, i64 0, i32 5
  %54 = tail call zeroext i1 @_ZNK5blink20BorderImageLengthBox7NonZeroEv(%"class.blink::BorderImageLengthBox"* %53) #20
  br i1 %54, label %55, label %104

55:                                               ; preds = %35, %1, %21, %52
  %56 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #20
  %57 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %59 = bitcast %"class.blink::LayoutSize"* %58 to i64*
  %60 = load i64, i64* %59, align 4
  %61 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 0, i64* %61, align 8
  store i64 %60, i64* %57, align 8
  %62 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #20
  %63 = bitcast { i64, i64 }* %4 to i32*
  %64 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 1, i32 0
  %65 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %66 = bitcast i64* %65 to i32*
  %67 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %5, i64 0, i32 3, i32 0
  %68 = tail call { i64, i64 } @_ZN5blink9LayoutBox34ComputeVisualEffectOverflowOutsetsEv(%"class.blink::LayoutBox"* %0)
  %69 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %70 = extractvalue { i64, i64 } %68, 0
  store i64 %70, i64* %69, align 8
  %71 = extractvalue { i64, i64 } %68, 1
  store i64 %71, i64* %65, align 8
  call void @_ZN5blink12PhysicalRect6ExpandERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"* nonnull %3, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %5) #20
  call void @_ZN5blink9LayoutBox21AddSelfVisualOverflowERKNS_12PhysicalRectE(%"class.blink::LayoutBox"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %3)
  %72 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %73 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %72, align 8
  %74 = icmp eq %"struct.blink::BoxOverflowModel"* %73, null
  br i1 %74, label %103, label %75

75:                                               ; preds = %55
  %76 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %73, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 4, !range !4
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %103, label %79

79:                                               ; preds = %75
  %80 = load i32, i32* %63, align 8
  %81 = sdiv i32 %80, 64
  %82 = shl nsw i32 %81, 6
  %83 = icmp eq i32 %82, %80
  br i1 %83, label %84, label %100

84:                                               ; preds = %79
  %85 = load i32, i32* %64, align 4
  %86 = sdiv i32 %85, 64
  %87 = shl nsw i32 %86, 6
  %88 = icmp eq i32 %87, %85
  br i1 %88, label %89, label %100

89:                                               ; preds = %84
  %90 = load i32, i32* %66, align 8
  %91 = sdiv i32 %90, 64
  %92 = shl nsw i32 %91, 6
  %93 = icmp eq i32 %92, %90
  br i1 %93, label %94, label %100

94:                                               ; preds = %89
  %95 = load i32, i32* %67, align 4
  %96 = sdiv i32 %95, 64
  %97 = shl nsw i32 %96, 6
  %98 = icmp ne i32 %97, %95
  %99 = zext i1 %98 to i8
  br label %100

100:                                              ; preds = %79, %84, %89, %94
  %101 = phi i8 [ 1, %89 ], [ 1, %84 ], [ 1, %79 ], [ %99, %94 ]
  %102 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %73, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  store i8 %101, i8* %102, align 4
  br label %103

103:                                              ; preds = %75, %55, %100
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #20
  br label %104

104:                                              ; preds = %44, %52, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink9LayoutBox34ComputeVisualEffectOverflowOutsetsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"class.blink::LayoutRectOutsets"*
  %4 = alloca %"class.WTF::Vector.4270", align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.blink::PhysicalOffset"*
  %7 = alloca %"class.blink::LayoutRectOutsets", align 4
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %12 = tail call { i64, i64 } @_ZNK5blink13ComputedStyle20BoxDecorationOutsetsEv(%"class.blink::ComputedStyle"* %10) #20
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %14 = extractvalue { i64, i64 } %12, 0
  store i64 %14, i64* %13, align 8
  %15 = extractvalue { i64, i64 } %12, 1
  store i64 %15, i64* %11, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %19, i64 0, i32 13
  %21 = bitcast [3 x i8]* %20 to i24*
  %22 = load i24, i24* %21, align 8
  %23 = and i24 %22, 1920
  %24 = icmp eq i24 %23, 0
  br i1 %24, label %175, label %25

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %19, i64 0, i32 8, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  %29 = fmul float %28, 1.562500e-02
  %30 = fcmp ogt float %29, 0.000000e+00
  %31 = and i24 %22, 1792
  %32 = icmp ne i24 %31, 0
  %33 = and i1 %32, %30
  br i1 %33, label %34, label %175

34:                                               ; preds = %25
  %35 = bitcast %"class.WTF::Vector.4270"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #20
  %36 = getelementptr inbounds %"class.WTF::Vector.4270", %"class.WTF::Vector.4270"* %4, i64 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.WTF::Vector.4270", %"class.WTF::Vector.4270"* %4, i64 0, i32 0, i32 0, i32 2
  %38 = bitcast i64* %5 to i8*
  %39 = bitcast %"class.WTF::Vector.4270"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #20
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %17, i64 0, i32 3, i32 0, i32 0
  store i64 0, i64* %5, align 8
  %41 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %41, i64 0, i32 39
  %43 = load i32, i32* %42, align 4
  %44 = lshr i32 %43, 27
  %45 = and i32 %44, 1
  call void @_ZNK5blink12LayoutObject12OutlineRectsERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.WTF::Vector.4270"* nonnull sret %4, %"class.blink::LayoutObject"* %8, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %6, i32 %45) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #20
  %46 = call { i64, i64 } @_ZN5blink9UnionRectERKN3WTF6VectorINS_12PhysicalRectELj0ENS0_18PartitionAllocatorEEE(%"class.WTF::Vector.4270"* nonnull dereferenceable(16) %4) #20
  %47 = extractvalue { i64, i64 } %46, 0
  %48 = trunc i64 %47 to i32
  %49 = lshr i64 %47, 32
  %50 = trunc i64 %49 to i32
  %51 = extractvalue { i64, i64 } %46, 1
  %52 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %53 = bitcast %"class.blink::LayoutSize"* %52 to i64*
  %54 = load i64, i64* %53, align 4
  %55 = lshr i64 %54, 32
  %56 = trunc i64 %55 to i32
  %57 = trunc i64 %54 to i32
  %58 = trunc i64 %51 to i32
  %59 = icmp ne i32 %57, %58
  %60 = lshr i64 %51, 32
  %61 = trunc i64 %60 to i32
  %62 = icmp ne i32 %56, %61
  %63 = or i1 %59, %62
  %64 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %65 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %64 to i96*
  %66 = zext i1 %63 to i96
  %67 = load i96, i96* %65, align 4
  %68 = shl nuw nsw i96 %66, 53
  %69 = and i96 %67, -9007199254740993
  %70 = or i96 %68, %69
  store i96 %70, i96* %65, align 4
  %71 = call i32 @_ZNK5blink13ComputedStyle19OutlineOutsetExtentEv(%"class.blink::ComputedStyle"* %10) #20
  %72 = icmp sgt i32 %71, 33554431
  br i1 %72, label %78, label %73

73:                                               ; preds = %34
  %74 = icmp slt i32 %71, -33554432
  br i1 %74, label %80, label %75

75:                                               ; preds = %73
  %76 = shl i32 %71, 6
  %77 = icmp sgt i32 %76, -1
  br i1 %77, label %78, label %80

78:                                               ; preds = %34, %75
  %79 = phi i32 [ %76, %75 ], [ 2147483647, %34 ]
  br label %80

80:                                               ; preds = %73, %75, %78
  %81 = phi i32 [ %79, %78 ], [ %76, %75 ], [ -2147483648, %73 ]
  %82 = phi i32 [ -2147483648, %78 ], [ 2147483647, %75 ], [ 2147483647, %73 ]
  %83 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %50, i32 %81) #20
  %84 = extractvalue { i32, i1 } %83, 1
  %85 = extractvalue { i32, i1 } %83, 0
  %86 = select i1 %84, i32 %82, i32 %85, !prof !2
  %87 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %48, i32 %81) #20
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 %82, i32 %89, !prof !2
  %91 = icmp slt i32 %81, 0
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  %93 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %81) #20
  %94 = extractvalue { i32, i1 } %93, 1
  %95 = extractvalue { i32, i1 } %93, 0
  %96 = select i1 %94, i32 %92, i32 %95, !prof !2
  %97 = icmp slt i32 %96, 0
  %98 = select i1 %97, i32 -2147483648, i32 2147483647
  %99 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %58, i32 %96) #20
  %100 = extractvalue { i32, i1 } %99, 1
  %101 = extractvalue { i32, i1 } %99, 0
  %102 = select i1 %100, i32 %98, i32 %101, !prof !2
  %103 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %61, i32 %96) #20
  %104 = extractvalue { i32, i1 } %103, 1
  %105 = extractvalue { i32, i1 } %103, 0
  %106 = select i1 %104, i32 %98, i32 %105, !prof !2
  %107 = bitcast %"class.blink::LayoutRectOutsets"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #20
  %108 = call i1 @llvm.is.constant.i32(i32 %86) #20
  br i1 %108, label %109, label %113

109:                                              ; preds = %80
  %110 = sub i32 0, %86
  %111 = icmp eq i32 %110, -2147483648
  %112 = select i1 %111, i32 2147483647, i32 %110
  br label %118

113:                                              ; preds = %80
  %114 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %86) #20
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 2147483647, i32 %116
  br label %118

118:                                              ; preds = %109, %113
  %119 = phi i32 [ %112, %109 ], [ %117, %113 ]
  %120 = icmp slt i32 %102, 0
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  %122 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %90, i32 %102) #20
  %123 = extractvalue { i32, i1 } %122, 1
  %124 = extractvalue { i32, i1 } %122, 0
  %125 = select i1 %123, i32 %121, i32 %124, !prof !2
  %126 = load i64, i64* %53, align 4
  %127 = trunc i64 %126 to i32
  %128 = lshr i64 %126, 32
  %129 = icmp sgt i32 %127, -1
  %130 = select i1 %129, i32 -2147483648, i32 2147483647
  %131 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %125, i32 %127) #20
  %132 = extractvalue { i32, i1 } %131, 1
  %133 = extractvalue { i32, i1 } %131, 0
  %134 = select i1 %132, i32 %130, i32 %133, !prof !2
  %135 = icmp slt i32 %106, 0
  %136 = select i1 %135, i32 -2147483648, i32 2147483647
  %137 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %86, i32 %106) #20
  %138 = extractvalue { i32, i1 } %137, 1
  %139 = extractvalue { i32, i1 } %137, 0
  %140 = select i1 %138, i32 %136, i32 %139, !prof !2
  %141 = trunc i64 %128 to i32
  %142 = icmp sgt i32 %141, -1
  %143 = select i1 %142, i32 -2147483648, i32 2147483647
  %144 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %140, i32 %141) #20
  %145 = extractvalue { i32, i1 } %144, 1
  %146 = extractvalue { i32, i1 } %144, 0
  %147 = select i1 %145, i32 %143, i32 %146, !prof !2
  %148 = call i1 @llvm.is.constant.i32(i32 %90) #20
  br i1 %148, label %149, label %153

149:                                              ; preds = %118
  %150 = sub i32 0, %90
  %151 = icmp eq i32 %150, -2147483648
  %152 = select i1 %151, i32 2147483647, i32 %150
  br label %158

153:                                              ; preds = %118
  %154 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %90) #20
  %155 = extractvalue { i32, i1 } %154, 1
  %156 = extractvalue { i32, i1 } %154, 0
  %157 = select i1 %155, i32 2147483647, i32 %156
  br label %158

158:                                              ; preds = %149, %153
  %159 = phi i32 [ %152, %149 ], [ %157, %153 ]
  %160 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %7, i64 0, i32 0, i32 0
  store i32 %119, i32* %160, align 4
  %161 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %7, i64 0, i32 1, i32 0
  store i32 %134, i32* %161, align 4
  %162 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %7, i64 0, i32 2, i32 0
  store i32 %147, i32* %162, align 4
  %163 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %7, i64 0, i32 3, i32 0
  store i32 %159, i32* %163, align 4
  call void @_ZN5blink17LayoutRectOutsets5UniteERKS0_(%"class.blink::LayoutRectOutsets"* nonnull %3, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %7) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #20
  %164 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %36, align 8
  %165 = icmp eq %"struct.blink::PhysicalRect"* %164, null
  %166 = bitcast %"struct.blink::PhysicalRect"* %164 to i8*
  br i1 %165, label %172, label %167, !prof !3

167:                                              ; preds = %158
  %168 = load i32, i32* %37, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %171, label %170, !prof !2

170:                                              ; preds = %167
  store i32 0, i32* %37, align 4
  br label %171

171:                                              ; preds = %170, %167
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #20
  store %"struct.blink::PhysicalRect"* null, %"struct.blink::PhysicalRect"** %36, align 8
  br label %172

172:                                              ; preds = %158, %171
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #20
  %173 = load i64, i64* %13, align 8
  %174 = load i64, i64* %11, align 8
  br label %175

175:                                              ; preds = %1, %25, %172
  %176 = phi i64 [ %15, %1 ], [ %15, %25 ], [ %174, %172 ]
  %177 = phi i64 [ %14, %1 ], [ %14, %25 ], [ %173, %172 ]
  %178 = insertvalue { i64, i64 } undef, i64 %177, 0
  %179 = insertvalue { i64, i64 } %178, i64 %176, 1
  ret { i64, i64 } %179
}

declare void @_ZN5blink12PhysicalRect6ExpandERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"*, %"class.blink::LayoutRectOutsets"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox21AddSelfVisualOverflowERKNS_12PhysicalRectE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.blink::LayoutRect"*
  %6 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #20
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 5070602400912917605986812821504
  %14 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  br i1 %13, label %17, label %25, !prof !2

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %19 = load i32, i32* %16, align 4
  %20 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %21 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %21, i64 106
  %23 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %22, align 8
  %24 = tail call i32 %23(%"class.blink::LayoutObject"* %18, i32 %15, i32 %19, %"class.blink::LayoutBox"* null) #20
  br label %25

25:                                               ; preds = %2, %17
  %26 = phi i32 [ %24, %17 ], [ %15, %2 ]
  %27 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %28 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %29 = load i32, i32* %27, align 4
  %30 = load i32, i32* %16, align 4
  %31 = load i32, i32* %28, align 4
  %32 = zext i32 %29 to i64
  %33 = shl nuw i64 %32, 32
  %34 = zext i32 %26 to i64
  %35 = or i64 %33, %34
  %36 = zext i32 %31 to i64
  %37 = shl nuw i64 %36, 32
  %38 = zext i32 %30 to i64
  %39 = or i64 %37, %38
  %40 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %35, i64* %40, align 8
  %41 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %39, i64* %41, align 8
  %42 = icmp slt i32 %30, 1
  %43 = icmp slt i32 %31, 1
  %44 = or i1 %42, %43
  br i1 %44, label %84, label %45

45:                                               ; preds = %25
  %46 = bitcast { i64, i64 }* %3 to %"class.blink::LayoutRect"*
  %47 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #20
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %49 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %50 = bitcast %"class.blink::LayoutSize"* %49 to i64*
  %51 = load i64, i64* %50, align 4
  %52 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 0, i64* %52, align 8
  store i64 %51, i64* %48, align 8
  %53 = call zeroext i1 @_ZNK5blink10LayoutRect8ContainsERKS0_(%"class.blink::LayoutRect"* nonnull %46, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %5) #20
  br i1 %53, label %83, label %54

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %56 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %55, align 8
  %57 = icmp eq %"struct.blink::BoxOverflowModel"* %56, null
  br i1 %57, label %62, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %56, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %60 = load i8, i8* %59, align 4, !range !4
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %68, label %80

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9
  %64 = call noalias i8* @malloc(i64 116) #20
  call void @llvm.memset.p0i8.i64(i8* align 4 %64, i8 0, i64 116, i1 false) #20
  %65 = ptrtoint i8* %64 to i64
  %66 = bitcast %"class.std::__1::unique_ptr.3253"* %63 to i64*
  store i64 %65, i64* %66, align 8
  %67 = bitcast i8* %64 to %"struct.blink::BoxOverflowModel"*
  br label %68

68:                                               ; preds = %62, %58
  %69 = phi %"struct.blink::BoxOverflowModel"* [ %67, %62 ], [ %56, %58 ]
  %70 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %69, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %69, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %72 = bitcast %"class.blink::BoxVisualOverflowModel"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* nonnull align 8 %47, i64 16, i1 false) #20
  %73 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %69, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %74 = bitcast %"class.blink::LayoutRect"* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %74, i8 0, i64 17, i1 false) #20
  store i8 1, i8* %70, align 4
  %75 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %55, align 8
  %76 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %75, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 4, !range !4
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %80, !prof !2

79:                                               ; preds = %68
  call void @llvm.trap() #20
  unreachable

80:                                               ; preds = %68, %58
  %81 = phi %"struct.blink::BoxOverflowModel"* [ %75, %68 ], [ %56, %58 ]
  %82 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %81, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"* %82, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %5) #20
  br label %83

83:                                               ; preds = %80, %45
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #20
  br label %84

84:                                               ; preds = %25, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox36UpdateHasSubpixelVisualEffectOutsetsERKNS_17LayoutRectOutsetsE(%"class.blink::LayoutBox"* nocapture readonly, %"class.blink::LayoutRectOutsets"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %3, align 8
  %5 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %9, !prof !2

8:                                                ; preds = %2
  tail call void @llvm.trap() #20
  unreachable

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %1, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sdiv i32 %11, 64
  %13 = shl nsw i32 %12, 6
  %14 = icmp eq i32 %13, %11
  br i1 %14, label %15, label %34

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %1, i64 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = sdiv i32 %17, 64
  %19 = shl nsw i32 %18, 6
  %20 = icmp eq i32 %19, %17
  br i1 %20, label %21, label %34

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %1, i64 0, i32 2, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = sdiv i32 %23, 64
  %25 = shl nsw i32 %24, 6
  %26 = icmp eq i32 %25, %23
  br i1 %26, label %27, label %34

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %1, i64 0, i32 3, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = sdiv i32 %29, 64
  %31 = shl nsw i32 %30, 6
  %32 = icmp ne i32 %31, %29
  %33 = zext i1 %32 to i8
  br label %34

34:                                               ; preds = %27, %21, %15, %9
  %35 = phi i8 [ 1, %21 ], [ 1, %15 ], [ 1, %9 ], [ %33, %27 ]
  %36 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  store i8 %35, i8* %36, align 4
  ret void
}

declare { i64, i64 } @_ZNK5blink13ComputedStyle20BoxDecorationOutsetsEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #5

declare void @_ZNK5blink12LayoutObject12OutlineRectsERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.WTF::Vector.4270"* sret, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) local_unnamed_addr #5

declare { i64, i64 } @_ZN5blink9UnionRectERKN3WTF6VectorINS_12PhysicalRectELj0ENS0_18PartitionAllocatorEEE(%"class.WTF::Vector.4270"* dereferenceable(16)) local_unnamed_addr #5

declare i32 @_ZNK5blink13ComputedStyle19OutlineOutsetExtentEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #5

declare void @_ZN5blink17LayoutRectOutsets5UniteERKS0_(%"class.blink::LayoutRectOutsets"*, %"class.blink::LayoutRectOutsets"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox26AddVisualOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* nocapture, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::LayoutSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.blink::LayoutRect"*
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %7 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %8 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %8, i64 25
  %10 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* %6) #20
  br i1 %11, label %84, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %14 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %13) #20
  br i1 %14, label %84, label %15

15:                                               ; preds = %12
  %16 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #20
  %17 = bitcast { i64, i64 }* %4 to i32*
  %18 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %5, i64 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %20 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %1) #20
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 7
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 5, i32 0
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = and i160 %30, 15211807202738752817960438464512
  %32 = icmp eq i160 %31, 5070602400912917605986812821504
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 5070602400912917605986812821504
  %40 = xor i1 %32, %39
  br i1 %40, label %41, label %63

41:                                               ; preds = %15
  %42 = trunc i64 %22 to i32
  %43 = and i64 %22, -4294967296
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1
  %45 = bitcast %"class.blink::LayoutSize"* %44 to i64*
  %46 = load i64, i64* %45, align 4
  %47 = trunc i64 %46 to i32
  %48 = trunc i64 %23 to i32
  %49 = icmp slt i32 %48, 0
  %50 = select i1 %49, i32 -2147483648, i32 2147483647
  %51 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %42, i32 %48) #20
  %52 = extractvalue { i32, i1 } %51, 1
  %53 = extractvalue { i32, i1 } %51, 0
  %54 = select i1 %52, i32 %50, i32 %53, !prof !2
  %55 = icmp sgt i32 %54, -1
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %47, i32 %54) #20
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 %56, i32 %59, !prof !2
  %61 = zext i32 %60 to i64
  %62 = or i64 %43, %61
  br label %63

63:                                               ; preds = %15, %41
  %64 = phi i64 [ %62, %41 ], [ %22, %15 ]
  store i64 %23, i64* %19, align 8
  %65 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %2, i64 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %2, i64 0, i32 1, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = trunc i64 %64 to i32
  %70 = icmp slt i32 %66, 0
  %71 = select i1 %70, i32 -2147483648, i32 2147483647
  %72 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %66) #20
  %73 = extractvalue { i32, i1 } %72, 1
  %74 = extractvalue { i32, i1 } %72, 0
  %75 = select i1 %73, i32 %71, i32 %74, !prof !2
  store i32 %75, i32* %17, align 8
  %76 = lshr i64 %64, 32
  %77 = trunc i64 %76 to i32
  %78 = icmp slt i32 %68, 0
  %79 = select i1 %78, i32 -2147483648, i32 2147483647
  %80 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %77, i32 %68) #20
  %81 = extractvalue { i32, i1 } %80, 1
  %82 = extractvalue { i32, i1 } %80, 0
  %83 = select i1 %81, i32 %79, i32 %82, !prof !2
  store i32 %83, i32* %18, align 4
  call void @_ZN5blink9LayoutBox25AddContentsVisualOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #20
  br label %84

84:                                               ; preds = %12, %3, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox25AddContentsVisualOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* nocapture, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.blink::LayoutRect"*
  %5 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %56, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %56, label %12

12:                                               ; preds = %8
  %13 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #20
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %16 = bitcast %"class.blink::LayoutSize"* %15 to i64*
  %17 = load i64, i64* %16, align 4
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 0, i64* %18, align 8
  store i64 %17, i64* %14, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %20 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %19 to i96*
  %21 = load i96, i96* %20, align 4
  %22 = and i96 %21, 8589934592
  %23 = icmp eq i96 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %12
  %25 = call zeroext i1 @_ZNK5blink10LayoutRect8ContainsERKS0_(%"class.blink::LayoutRect"* nonnull %4, %"class.blink::LayoutRect"* dereferenceable(16) %1) #20
  br i1 %25, label %55, label %26

26:                                               ; preds = %12, %24
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %28 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %27, align 8
  %29 = icmp eq %"struct.blink::BoxOverflowModel"* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %28, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %32 = load i8, i8* %31, align 4, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %40, label %52

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9
  %36 = call noalias i8* @malloc(i64 116) #20
  call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 0, i64 116, i1 false) #20
  %37 = ptrtoint i8* %36 to i64
  %38 = bitcast %"class.std::__1::unique_ptr.3253"* %35 to i64*
  store i64 %37, i64* %38, align 8
  %39 = bitcast i8* %36 to %"struct.blink::BoxOverflowModel"*
  br label %40

40:                                               ; preds = %34, %30
  %41 = phi %"struct.blink::BoxOverflowModel"* [ %39, %34 ], [ %28, %30 ]
  %42 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %41, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %41, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %44 = bitcast %"class.blink::BoxVisualOverflowModel"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* nonnull align 8 %13, i64 16, i1 false) #20
  %45 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %41, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %46 = bitcast %"class.blink::LayoutRect"* %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 0, i64 17, i1 false) #20
  store i8 1, i8* %42, align 4
  %47 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %27, align 8
  %48 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %47, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 4, !range !4
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %40
  call void @llvm.trap() #20
  unreachable

52:                                               ; preds = %30, %40
  %53 = phi %"struct.blink::BoxOverflowModel"* [ %47, %40 ], [ %28, %30 ]
  %54 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %53, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  call void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"* %54, %"class.blink::LayoutRect"* dereferenceable(16) %1) #20
  br label %55

55:                                               ; preds = %24, %52
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #20
  br label %56

56:                                               ; preds = %2, %8, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox26AddLayoutOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::LayoutSize"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.blink::LayoutRect"*
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %7 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %8 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %8, i64 25
  %10 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::LayoutObject"* %6) #20
  br i1 %11, label %40, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %14 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #20
  %15 = bitcast { i64, i64 }* %4 to i32*
  %16 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %5, i64 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %18 = tail call { i64, i64 } @_ZNK5blink9LayoutBox32LayoutOverflowRectForPropagationEPNS_12LayoutObjectE(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutObject"* %13)
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = extractvalue { i64, i64 } %18, 1
  store i64 %20, i64* %17, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %2, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %2, i64 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = trunc i64 %19 to i32
  %26 = icmp slt i32 %22, 0
  %27 = select i1 %26, i32 -2147483648, i32 2147483647
  %28 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %25, i32 %22) #20
  %29 = extractvalue { i32, i1 } %28, 1
  %30 = extractvalue { i32, i1 } %28, 0
  %31 = select i1 %29, i32 %27, i32 %30, !prof !2
  store i32 %31, i32* %15, align 8
  %32 = lshr i64 %19, 32
  %33 = trunc i64 %32 to i32
  %34 = icmp slt i32 %24, 0
  %35 = select i1 %34, i32 -2147483648, i32 2147483647
  %36 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %24) #20
  %37 = extractvalue { i32, i1 } %36, 1
  %38 = extractvalue { i32, i1 } %36, 0
  %39 = select i1 %37, i32 %35, i32 %38, !prof !2
  store i32 %39, i32* %16, align 4
  call void @_ZN5blink9LayoutBox17AddLayoutOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #20
  br label %40

40:                                               ; preds = %3, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink9LayoutBox32LayoutOverflowRectForPropagationEPNS_12LayoutObjectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*) local_unnamed_addr #4 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.blink::LayoutRect"*
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"class.blink::LayoutRect"*
  %7 = alloca %"class.blink::LayoutRect", align 4
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"struct.blink::PhysicalOffset"*
  %10 = alloca %"class.blink::TransformationMatrix", align 8
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %12 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #20
  %13 = bitcast { i64, i64 }* %3 to i32*
  %14 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %16 = bitcast i64* %15 to i32*
  %17 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 1, i32 1, i32 0
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %19 = bitcast %"class.blink::LayoutSize"* %18 to i64*
  %20 = load i64, i64* %19, align 4
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 0, i64* %21, align 8
  store i64 %20, i64* %15, align 8
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %29, i64 0, i32 45
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %77, label %34

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %36 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %35 to i96*
  %37 = load i96, i96* %36, align 4
  %38 = and i96 %37, 1207959552
  %39 = icmp eq i96 %38, 134217728
  br i1 %39, label %77, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, i64 92
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::LayoutObject"* %11, i32 43) #20
  br i1 %45, label %77, label %46

46:                                               ; preds = %40
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, i64 92
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::LayoutObject"* %11, i32 46) #20
  br i1 %50, label %71, label %51

51:                                               ; preds = %46
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, i64 92
  %54 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* %11, i32 48) #20
  br i1 %55, label %71, label %56

56:                                               ; preds = %51
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %57, i64 92
  %59 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.blink::LayoutObject"* %11, i32 45) #20
  br i1 %60, label %71, label %61

61:                                               ; preds = %56
  %62 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %62, i64 92
  %64 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %63, align 8
  %65 = tail call zeroext i1 %64(%"class.blink::LayoutObject"* %11, i32 49) #20
  br i1 %65, label %71, label %66

66:                                               ; preds = %61
  %67 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %41, align 8
  %68 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %67, i64 92
  %69 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.blink::LayoutObject"* %11, i32 50) #20
  br i1 %70, label %71, label %221

71:                                               ; preds = %46, %51, %56, %61, %66
  %72 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %73 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %72, align 8
  %74 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %73, i64 24
  %75 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %74, align 8
  %76 = tail call zeroext i1 %75(%"class.blink::LayoutObject"* %11) #20
  br i1 %76, label %221, label %77

77:                                               ; preds = %2, %34, %40, %71
  %78 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %79 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %78 to i96*
  %80 = load i96, i96* %79, align 4
  %81 = and i96 %80, 464227514732017603087171584
  %82 = icmp eq i96 %81, 464227514732017603087171584
  br i1 %82, label %83, label %93

83:                                               ; preds = %77
  %84 = bitcast %"class.blink::ComputedStyle"** %22 to %"class.blink::ComputedStyleBase"**
  %85 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %85, i64 0, i32 3, i32 0, i32 0
  %87 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %87, i64 0, i32 3, i32 0, i32 0
  %89 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %89, i64 0, i32 38, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %221, label %93

93:                                               ; preds = %83, %77
  %94 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #20
  %95 = bitcast { i64, i64 }* %5 to i32*
  %96 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %6, i64 0, i32 0, i32 1, i32 0
  %97 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  %98 = bitcast i64* %97 to i32*
  %99 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %6, i64 0, i32 1, i32 1, i32 0
  %100 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18LayoutOverflowRectEv(%"class.blink::LayoutBox"* %0)
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  %102 = extractvalue { i64, i64 } %100, 0
  store i64 %102, i64* %101, align 8
  %103 = extractvalue { i64, i64 } %100, 1
  store i64 %103, i64* %97, align 8
  %104 = load i96, i96* %79, align 4
  %105 = and i96 %104, 8589934592
  %106 = icmp eq i96 %105, 0
  br i1 %106, label %220, label %107

107:                                              ; preds = %93
  %108 = bitcast %"class.blink::ComputedStyle"** %22 to %"class.blink::ComputedStyleBase"**
  %109 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %109, i64 0, i32 3, i32 0, i32 0
  %111 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %111, i64 0, i32 3, i32 0, i32 0
  %113 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %112, align 8
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %113, i64 0, i32 38, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = bitcast %"class.blink::LayoutRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #20
  %117 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %7, i64 0, i32 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %7, i64 0, i32 0, i32 1, i32 0
  %119 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %7, i64 0, i32 1, i32 0, i32 0
  %120 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %7, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %116, i8* nonnull align 8 %12, i64 16, i1 false)
  %121 = icmp eq i32 %115, 0
  br i1 %121, label %205, label %122

122:                                              ; preds = %107
  %123 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %124 = bitcast %"class.blink::LayoutBox"* %0 to { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)***
  %125 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)**, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*** %124, align 8
  %126 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %125, i64 126
  %127 = load { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)*, { i64, i64 } (%"class.blink::LayoutBoxModelObject"*)** %126, align 8
  %128 = tail call { i64, i64 } %127(%"class.blink::LayoutBoxModelObject"* %123) #20
  %129 = extractvalue { i64, i64 } %128, 0
  %130 = trunc i64 %129 to i32
  %131 = lshr i64 %129, 32
  %132 = trunc i64 %131 to i32
  %133 = extractvalue { i64, i64 } %128, 1
  %134 = lshr i64 %133, 32
  %135 = trunc i64 %134 to i32
  %136 = load i32, i32* %117, align 4
  %137 = icmp slt i32 %135, 0
  %138 = select i1 %137, i32 -2147483648, i32 2147483647
  %139 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %136, i32 %135) #20
  %140 = extractvalue { i32, i1 } %139, 1
  %141 = extractvalue { i32, i1 } %139, 0
  %142 = select i1 %140, i32 %138, i32 %141, !prof !2
  %143 = load i32, i32* %118, align 4
  %144 = icmp slt i32 %130, 0
  %145 = select i1 %144, i32 -2147483648, i32 2147483647
  %146 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %143, i32 %130) #20
  %147 = extractvalue { i32, i1 } %146, 1
  %148 = extractvalue { i32, i1 } %146, 0
  %149 = select i1 %147, i32 %145, i32 %148, !prof !2
  %150 = icmp slt i32 %132, 0
  %151 = select i1 %150, i32 -2147483648, i32 2147483647
  %152 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %135, i32 %132) #20
  %153 = extractvalue { i32, i1 } %152, 1
  %154 = extractvalue { i32, i1 } %152, 0
  %155 = select i1 %153, i32 %151, i32 %154, !prof !2
  %156 = trunc i64 %133 to i32
  %157 = icmp slt i32 %156, 0
  %158 = select i1 %157, i32 -2147483648, i32 2147483647
  %159 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %130, i32 %156) #20
  %160 = extractvalue { i32, i1 } %159, 1
  %161 = extractvalue { i32, i1 } %159, 0
  %162 = select i1 %160, i32 %158, i32 %161, !prof !2
  %163 = load i32, i32* %119, align 4
  %164 = icmp sgt i32 %155, -1
  %165 = select i1 %164, i32 -2147483648, i32 2147483647
  %166 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %163, i32 %155) #20
  %167 = extractvalue { i32, i1 } %166, 1
  %168 = extractvalue { i32, i1 } %166, 0
  %169 = select i1 %167, i32 %165, i32 %168, !prof !2
  %170 = load i32, i32* %120, align 4
  %171 = icmp sgt i32 %162, -1
  %172 = select i1 %171, i32 -2147483648, i32 2147483647
  %173 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %170, i32 %162) #20
  %174 = extractvalue { i32, i1 } %173, 1
  %175 = extractvalue { i32, i1 } %173, 0
  %176 = select i1 %174, i32 %172, i32 %175, !prof !2
  %177 = icmp sgt i32 %115, -1
  %178 = select i1 %177, i32 -2147483648, i32 2147483647
  %179 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %142, i32 %115) #20
  %180 = extractvalue { i32, i1 } %179, 1
  %181 = extractvalue { i32, i1 } %179, 0
  %182 = select i1 %180, i32 %178, i32 %181, !prof !2
  store i32 %182, i32* %117, align 4
  %183 = icmp slt i32 %115, 0
  %184 = select i1 %183, i32 -2147483648, i32 2147483647
  %185 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %169, i32 %115) #20
  %186 = extractvalue { i32, i1 } %185, 1
  %187 = extractvalue { i32, i1 } %185, 0
  %188 = select i1 %186, i32 %184, i32 %187, !prof !2
  %189 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %188, i32 %115) #20
  %190 = extractvalue { i32, i1 } %189, 1
  %191 = extractvalue { i32, i1 } %189, 0
  %192 = select i1 %190, i32 %184, i32 %191, !prof !2
  store i32 %192, i32* %119, align 4
  %193 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %149, i32 %115) #20
  %194 = extractvalue { i32, i1 } %193, 1
  %195 = extractvalue { i32, i1 } %193, 0
  %196 = select i1 %194, i32 %178, i32 %195, !prof !2
  store i32 %196, i32* %118, align 4
  %197 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %176, i32 %115) #20
  %198 = extractvalue { i32, i1 } %197, 1
  %199 = extractvalue { i32, i1 } %197, 0
  %200 = select i1 %198, i32 %184, i32 %199, !prof !2
  %201 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %200, i32 %115) #20
  %202 = extractvalue { i32, i1 } %201, 1
  %203 = extractvalue { i32, i1 } %201, 0
  %204 = select i1 %202, i32 %184, i32 %203, !prof !2
  store i32 %204, i32* %120, align 4
  call void @_ZN5blink10LayoutRect9IntersectERKS0_(%"class.blink::LayoutRect"* nonnull %6, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %7) #20
  br label %219

205:                                              ; preds = %107
  %206 = lshr i96 %104, 87
  %207 = trunc i96 %206 to i32
  %208 = and i32 %207, 1
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %213, label %210

210:                                              ; preds = %205
  %211 = load i32, i32* %117, align 4
  store i32 %211, i32* %95, align 8
  %212 = load i32, i32* %119, align 4
  store i32 %212, i32* %98, align 8
  br label %213

213:                                              ; preds = %210, %205
  %214 = and i32 %207, 2
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %219, label %216

216:                                              ; preds = %213
  %217 = load i32, i32* %118, align 4
  store i32 %217, i32* %96, align 4
  %218 = load i32, i32* %120, align 4
  store i32 %218, i32* %99, align 4
  br label %219

219:                                              ; preds = %216, %213, %122
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #20
  br label %220

220:                                              ; preds = %93, %219
  call void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"* nonnull %4, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %6) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #20
  br label %221

221:                                              ; preds = %83, %66, %71, %220
  %222 = phi i96* [ %79, %83 ], [ %36, %66 ], [ %36, %71 ], [ %79, %220 ]
  %223 = load i96, i96* %222, align 4
  %224 = and i96 %223, 4294967296
  %225 = icmp eq i96 %224, 0
  br i1 %225, label %242, label %226

226:                                              ; preds = %221
  %227 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %228 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %227, align 8
  %229 = icmp eq %"struct.blink::FragmentData::RareData"* %228, null
  br i1 %229, label %233, label %230

230:                                              ; preds = %226
  %231 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %228, i64 0, i32 0, i32 0, i32 0, i32 0
  %232 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %231, align 8
  br label %233

233:                                              ; preds = %226, %230
  %234 = phi %"class.blink::PaintLayer"* [ %232, %230 ], [ null, %226 ]
  %235 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %234, i64 0, i32 17, i32 0, i32 0, i32 0
  %236 = load %"struct.blink::PaintLayerRareData"*, %"struct.blink::PaintLayerRareData"** %235, align 8
  %237 = icmp eq %"struct.blink::PaintLayerRareData"* %236, null
  br i1 %237, label %242, label %238

238:                                              ; preds = %233
  %239 = getelementptr inbounds %"struct.blink::PaintLayerRareData", %"struct.blink::PaintLayerRareData"* %236, i64 0, i32 1, i32 0, i32 0, i32 0
  %240 = load %"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"** %239, align 8
  %241 = icmp ne %"class.blink::TransformationMatrix"* %240, null
  br label %242

242:                                              ; preds = %238, %233, %221
  %243 = phi i1 [ false, %221 ], [ %241, %238 ], [ false, %233 ]
  %244 = lshr i96 %223, 75
  %245 = trunc i96 %244 to i32
  %246 = and i32 %245, 1
  %247 = or i32 %246, 2
  %248 = icmp eq i32 %247, 3
  %249 = or i1 %248, %243
  br i1 %249, label %250, label %357

250:                                              ; preds = %242
  %251 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %252 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %251, i64 0, i32 0, i32 9
  %253 = bitcast [20 x i8]* %252 to i160*
  %254 = load i160, i160* %253, align 8
  %255 = and i160 %254, 15211807202738752817960438464512
  %256 = icmp eq i160 %255, 5070602400912917605986812821504
  br i1 %256, label %257, label %277, !prof !2

257:                                              ; preds = %250
  %258 = load i32, i32* %13, align 8
  %259 = load i32, i32* %16, align 8
  %260 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %261 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %260, align 8
  %262 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %261, i64 106
  %263 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %262, align 8
  %264 = call i32 %263(%"class.blink::LayoutObject"* %11, i32 %258, i32 %259, %"class.blink::LayoutBox"* null) #20
  %265 = load i32, i32* %14, align 4
  %266 = load i32, i32* %16, align 8
  %267 = load i32, i32* %17, align 4
  %268 = zext i32 %265 to i64
  %269 = shl nuw i64 %268, 32
  %270 = zext i32 %267 to i64
  %271 = shl nuw i64 %270, 32
  %272 = zext i32 %264 to i64
  %273 = or i64 %269, %272
  %274 = zext i32 %266 to i64
  %275 = or i64 %271, %274
  store i64 %273, i64* %21, align 8
  store i64 %275, i64* %15, align 8
  %276 = load i96, i96* %222, align 4
  br label %277

277:                                              ; preds = %250, %257
  %278 = phi i96 [ %223, %250 ], [ %276, %257 ]
  %279 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %279) #20
  %280 = bitcast i64* %8 to i32*
  %281 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %9, i64 0, i32 1, i32 0
  store i32 0, i32* %280, align 8
  store i32 0, i32* %281, align 4
  %282 = and i96 %278, 113336795588871485128704
  %283 = icmp eq i96 %282, 37778931862957161709568
  br i1 %283, label %284, label %290

284:                                              ; preds = %277
  %285 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %286 = call i64 @_ZNK5blink20LayoutBoxModelObject22RelativePositionOffsetEv(%"class.blink::LayoutBoxModelObject"* %285) #20
  store i64 %286, i64* %8, align 8
  %287 = trunc i64 %286 to i32
  %288 = lshr i64 %286, 32
  %289 = trunc i64 %288 to i32
  br label %290

290:                                              ; preds = %284, %277
  %291 = phi i32 [ %289, %284 ], [ 0, %277 ]
  %292 = phi i32 [ %287, %284 ], [ 0, %277 ]
  %293 = call zeroext i1 @_ZNK5blink12LayoutObject31ShouldUseTransformFromContainerEPKS0_(%"class.blink::LayoutObject"* %11, %"class.blink::LayoutObject"* %1) #20
  br i1 %293, label %294, label %315

294:                                              ; preds = %290
  %295 = bitcast %"class.blink::TransformationMatrix"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %295) #20
  %296 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %296, align 8
  %297 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 0, i64 1
  %298 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 1, i64 1
  %299 = bitcast double* %297 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %299, i8 0, i64 32, i1 false) #20
  store double 1.000000e+00, double* %298, align 8
  %300 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 1, i64 2
  %301 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 2, i64 2
  %302 = bitcast double* %300 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %302, i8 0, i64 32, i1 false) #20
  store double 1.000000e+00, double* %301, align 8
  %303 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 2, i64 3
  %304 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %10, i64 0, i32 0, i32 0, i64 3, i64 3
  %305 = bitcast double* %303 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %305, i8 0, i64 32, i1 false) #20
  store double 1.000000e+00, double* %304, align 8
  %306 = icmp eq %"class.blink::LayoutObject"* %1, null
  br i1 %306, label %307, label %309

307:                                              ; preds = %294
  %308 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %11, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  br label %309

309:                                              ; preds = %294, %307
  %310 = phi %"class.blink::LayoutObject"* [ %308, %307 ], [ %1, %294 ]
  call void @_ZNK5blink12LayoutObject25GetTransformFromContainerEPKS0_RKNS_14PhysicalOffsetERNS_20TransformationMatrixEPKNS_12PhysicalSizeE(%"class.blink::LayoutObject"* %11, %"class.blink::LayoutObject"* %310, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %9, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %10, %"struct.blink::PhysicalSize"* null) #20
  %311 = call { i64, i64 } @_ZNK5blink20TransformationMatrix7MapRectERKNS_10LayoutRectE(%"class.blink::TransformationMatrix"* nonnull %10, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %4) #20
  %312 = extractvalue { i64, i64 } %311, 0
  %313 = extractvalue { i64, i64 } %311, 1
  store i64 %312, i64* %21, align 8
  store i64 %313, i64* %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %295) #20
  %314 = trunc i64 %312 to i32
  br label %330

315:                                              ; preds = %290
  %316 = load i32, i32* %13, align 8
  %317 = icmp slt i32 %292, 0
  %318 = select i1 %317, i32 -2147483648, i32 2147483647
  %319 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %316, i32 %292) #20
  %320 = extractvalue { i32, i1 } %319, 1
  %321 = extractvalue { i32, i1 } %319, 0
  %322 = select i1 %320, i32 %318, i32 %321, !prof !2
  store i32 %322, i32* %13, align 8
  %323 = load i32, i32* %14, align 4
  %324 = icmp slt i32 %291, 0
  %325 = select i1 %324, i32 -2147483648, i32 2147483647
  %326 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %323, i32 %291) #20
  %327 = extractvalue { i32, i1 } %326, 1
  %328 = extractvalue { i32, i1 } %326, 0
  %329 = select i1 %327, i32 %325, i32 %328, !prof !2
  store i32 %329, i32* %14, align 4
  br label %330

330:                                              ; preds = %315, %309
  %331 = phi i32 [ %322, %315 ], [ %314, %309 ]
  %332 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %333 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %332, i64 0, i32 0, i32 9
  %334 = bitcast [20 x i8]* %333 to i160*
  %335 = load i160, i160* %334, align 8
  %336 = and i160 %335, 15211807202738752817960438464512
  %337 = icmp eq i160 %336, 5070602400912917605986812821504
  br i1 %337, label %338, label %356, !prof !2

338:                                              ; preds = %330
  %339 = load i32, i32* %16, align 8
  %340 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %341 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %340, align 8
  %342 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %341, i64 106
  %343 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %342, align 8
  %344 = call i32 %343(%"class.blink::LayoutObject"* %11, i32 %331, i32 %339, %"class.blink::LayoutBox"* null) #20
  %345 = load i32, i32* %14, align 4
  %346 = load i32, i32* %16, align 8
  %347 = load i32, i32* %17, align 4
  %348 = zext i32 %345 to i64
  %349 = shl nuw i64 %348, 32
  %350 = zext i32 %347 to i64
  %351 = shl nuw i64 %350, 32
  %352 = zext i32 %344 to i64
  %353 = or i64 %349, %352
  %354 = zext i32 %346 to i64
  %355 = or i64 %351, %354
  store i64 %353, i64* %21, align 8
  store i64 %355, i64* %15, align 8
  br label %356

356:                                              ; preds = %330, %338
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #20
  br label %357

357:                                              ; preds = %242, %356
  %358 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %359 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %358, align 8
  %360 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %359, i64 0, i32 5, i32 0
  %361 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %360, align 8
  %362 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %361, i64 0, i32 0, i32 9
  %363 = bitcast [20 x i8]* %362 to i160*
  %364 = load i160, i160* %363, align 8
  %365 = and i160 %364, 15211807202738752817960438464512
  %366 = icmp eq i160 %365, 5070602400912917605986812821504
  %367 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %368 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %367, i64 0, i32 0, i32 9
  %369 = bitcast [20 x i8]* %368 to i160*
  %370 = load i160, i160* %369, align 8
  %371 = and i160 %370, 15211807202738752817960438464512
  %372 = icmp eq i160 %371, 5070602400912917605986812821504
  %373 = xor i1 %366, %372
  %374 = load i64, i64* %21, align 8
  br i1 %373, label %375, label %395

375:                                              ; preds = %357
  %376 = trunc i64 %374 to i32
  %377 = and i64 %374, -4294967296
  %378 = load i64, i64* %19, align 4
  %379 = trunc i64 %378 to i32
  %380 = load i32, i32* %16, align 8
  %381 = icmp slt i32 %380, 0
  %382 = select i1 %381, i32 -2147483648, i32 2147483647
  %383 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %376, i32 %380) #20
  %384 = extractvalue { i32, i1 } %383, 1
  %385 = extractvalue { i32, i1 } %383, 0
  %386 = select i1 %384, i32 %382, i32 %385, !prof !2
  %387 = icmp sgt i32 %386, -1
  %388 = select i1 %387, i32 -2147483648, i32 2147483647
  %389 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %379, i32 %386) #20
  %390 = extractvalue { i32, i1 } %389, 1
  %391 = extractvalue { i32, i1 } %389, 0
  %392 = select i1 %390, i32 %388, i32 %391, !prof !2
  %393 = zext i32 %392 to i64
  %394 = or i64 %377, %393
  br label %395

395:                                              ; preds = %357, %375
  %396 = phi i64 [ %394, %375 ], [ %374, %357 ]
  %397 = load i64, i64* %15, align 8
  %398 = insertvalue { i64, i64 } undef, i64 %396, 0
  %399 = insertvalue { i64, i64 } %398, i64 %397, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #20
  ret { i64, i64 } %399
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox17AddLayoutOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.blink::LayoutRect"*
  %5 = alloca %"class.blink::LayoutRect", align 4
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %301, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %301, label %14

14:                                               ; preds = %10
  %15 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #20
  %16 = bitcast { i64, i64 }* %3 to i32*
  %17 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %19 = bitcast i64* %18 to i32*
  %20 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 1, i32 1, i32 0
  %21 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  %22 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0) #20
  %23 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %0) #20
  %24 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #20
  %25 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #20
  %26 = zext i32 %23 to i64
  %27 = shl nuw i64 %26, 32
  %28 = zext i32 %25 to i64
  %29 = shl nuw i64 %28, 32
  %30 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 9
  %33 = bitcast [20 x i8]* %32 to i160*
  %34 = load i160, i160* %33, align 8
  %35 = and i160 %34, 15211807202738752817960438464512
  %36 = icmp eq i160 %35, 5070602400912917605986812821504
  br i1 %36, label %37, label %43, !prof !2

37:                                               ; preds = %14
  %38 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %39 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %38, align 8
  %40 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %39, i64 106
  %41 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %40, align 8
  %42 = tail call i32 %41(%"class.blink::LayoutObject"* %6, i32 %22, i32 %24, %"class.blink::LayoutBox"* null) #20
  br label %43

43:                                               ; preds = %14, %37
  %44 = phi i32 [ %42, %37 ], [ %22, %14 ]
  %45 = zext i32 %44 to i64
  %46 = or i64 %27, %45
  %47 = zext i32 %24 to i64
  %48 = or i64 %29, %47
  %49 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 %46, i64* %49, align 8
  store i64 %48, i64* %18, align 8
  %50 = call zeroext i1 @_ZNK5blink10LayoutRect8ContainsERKS0_(%"class.blink::LayoutRect"* nonnull %4, %"class.blink::LayoutRect"* dereferenceable(16) %1) #20
  br i1 %50, label %300, label %51

51:                                               ; preds = %43
  %52 = bitcast %"class.blink::LayoutRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #20
  %53 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %5, i64 0, i32 0, i32 0, i32 0
  %54 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %5, i64 0, i32 0, i32 1, i32 0
  %55 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %5, i64 0, i32 1, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %5, i64 0, i32 1, i32 1, i32 0
  %57 = bitcast %"class.blink::LayoutRect"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %52, i8* align 4 %57, i64 16, i1 false)
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %59 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %58 to i96*
  %60 = load i96, i96* %59, align 4
  %61 = and i96 %60, 8589934592
  %62 = icmp eq i96 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %51
  %64 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %64, i64 0, i32 0, i32 9
  %66 = bitcast [20 x i8]* %65 to i160*
  %67 = load i160, i160* %66, align 8
  %68 = lshr i160 %67, 74
  %69 = trunc i160 %68 to i32
  %70 = and i32 %69, 7
  switch i32 %70, label %79 [
    i32 5, label %71
    i32 2, label %71
  ]

71:                                               ; preds = %63, %63, %51
  %72 = icmp eq %"class.blink::LayoutBox"* %0, null
  br i1 %72, label %204, label %73

73:                                               ; preds = %71
  %74 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %75 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %74, align 8
  %76 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %75, i64 92
  %77 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %76, align 8
  %78 = call zeroext i1 %77(%"class.blink::LayoutObject"* %6, i32 55) #20
  br i1 %78, label %79, label %204

79:                                               ; preds = %63, %73
  %80 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %81 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %80, align 8
  %82 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %81, i64 148
  %83 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %82, align 8
  %84 = call zeroext i1 %83(%"class.blink::LayoutBox"* %0) #20
  %85 = load i32, i32* %54, align 4
  br i1 %84, label %86, label %113

86:                                               ; preds = %79
  %87 = load i32, i32* %56, align 4
  %88 = icmp slt i32 %87, 0
  %89 = select i1 %88, i32 -2147483648, i32 2147483647
  %90 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %85, i32 %87) #20
  %91 = extractvalue { i32, i1 } %90, 1
  %92 = extractvalue { i32, i1 } %90, 0
  %93 = select i1 %91, i32 %89, i32 %92
  %94 = load i32, i32* %17, align 4
  %95 = load i32, i32* %20, align 4
  %96 = icmp slt i32 %95, 0
  %97 = select i1 %96, i32 -2147483648, i32 2147483647
  %98 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %94, i32 %95) #20
  %99 = extractvalue { i32, i1 } %98, 1
  %100 = extractvalue { i32, i1 } %98, 0
  %101 = select i1 %99, i32 %97, i32 %100, !prof !2
  %102 = icmp slt i32 %101, %93
  %103 = select i1 %102, i32 %101, i32 %93
  %104 = icmp sgt i32 %93, -1
  %105 = select i1 %104, i32 -2147483648, i32 2147483647
  %106 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %103, i32 %93) #20
  %107 = extractvalue { i32, i1 } %106, 1
  %108 = extractvalue { i32, i1 } %106, 0
  %109 = select i1 %107, i32 %105, i32 %108, !prof !2
  %110 = icmp slt i32 %109, 0
  %111 = select i1 %110, i32 -2147483648, i32 2147483647
  %112 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %87, i32 %109) #20
  br label %127

113:                                              ; preds = %79
  %114 = load i32, i32* %17, align 4
  %115 = icmp slt i32 %85, %114
  %116 = select i1 %115, i32 %114, i32 %85
  %117 = icmp sgt i32 %85, -1
  %118 = select i1 %117, i32 -2147483648, i32 2147483647
  %119 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %116, i32 %85) #20
  %120 = extractvalue { i32, i1 } %119, 1
  %121 = extractvalue { i32, i1 } %119, 0
  %122 = select i1 %120, i32 %118, i32 %121, !prof !2
  store i32 %116, i32* %54, align 4
  %123 = load i32, i32* %56, align 4
  %124 = icmp sgt i32 %122, -1
  %125 = select i1 %124, i32 -2147483648, i32 2147483647
  %126 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %123, i32 %122) #20
  br label %127

127:                                              ; preds = %113, %86
  %128 = phi { i32, i1 } [ %126, %113 ], [ %112, %86 ]
  %129 = phi i32 [ %125, %113 ], [ %111, %86 ]
  %130 = extractvalue { i32, i1 } %128, 1
  %131 = extractvalue { i32, i1 } %128, 0
  %132 = select i1 %130, i32 %129, i32 %131
  %133 = icmp sgt i32 %132, 0
  %134 = select i1 %133, i32 %132, i32 0
  store i32 %134, i32* %56, align 4
  %135 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %80, align 8
  %136 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %135, i64 149
  %137 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %136, align 8
  %138 = call zeroext i1 %137(%"class.blink::LayoutBox"* %0) #20
  %139 = bitcast %"class.blink::ComputedStyle"** %30 to %"class.blink::ComputedStyleBase"**
  %140 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %140, i64 0, i32 9
  %142 = bitcast [20 x i8]* %141 to i160*
  %143 = load i160, i160* %142, align 8
  %144 = and i160 %143, 15211807202738752817960438464512
  %145 = icmp eq i160 %144, 5070602400912917605986812821504
  %146 = xor i1 %138, %145
  %147 = load i32, i32* %53, align 4
  br i1 %146, label %148, label %175

148:                                              ; preds = %127
  %149 = load i32, i32* %55, align 4
  %150 = icmp slt i32 %149, 0
  %151 = select i1 %150, i32 -2147483648, i32 2147483647
  %152 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %147, i32 %149) #20
  %153 = extractvalue { i32, i1 } %152, 1
  %154 = extractvalue { i32, i1 } %152, 0
  %155 = select i1 %153, i32 %151, i32 %154
  %156 = load i32, i32* %16, align 8
  %157 = load i32, i32* %19, align 8
  %158 = icmp slt i32 %157, 0
  %159 = select i1 %158, i32 -2147483648, i32 2147483647
  %160 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %156, i32 %157) #20
  %161 = extractvalue { i32, i1 } %160, 1
  %162 = extractvalue { i32, i1 } %160, 0
  %163 = select i1 %161, i32 %159, i32 %162, !prof !2
  %164 = icmp slt i32 %163, %155
  %165 = select i1 %164, i32 %163, i32 %155
  %166 = icmp sgt i32 %155, -1
  %167 = select i1 %166, i32 -2147483648, i32 2147483647
  %168 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %165, i32 %155) #20
  %169 = extractvalue { i32, i1 } %168, 1
  %170 = extractvalue { i32, i1 } %168, 0
  %171 = select i1 %169, i32 %167, i32 %170, !prof !2
  %172 = icmp slt i32 %171, 0
  %173 = select i1 %172, i32 -2147483648, i32 2147483647
  %174 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %149, i32 %171) #20
  br label %189

175:                                              ; preds = %127
  %176 = load i32, i32* %16, align 8
  %177 = icmp slt i32 %147, %176
  %178 = select i1 %177, i32 %176, i32 %147
  %179 = icmp sgt i32 %147, -1
  %180 = select i1 %179, i32 -2147483648, i32 2147483647
  %181 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %178, i32 %147) #20
  %182 = extractvalue { i32, i1 } %181, 1
  %183 = extractvalue { i32, i1 } %181, 0
  %184 = select i1 %182, i32 %180, i32 %183, !prof !2
  store i32 %178, i32* %53, align 4
  %185 = load i32, i32* %55, align 4
  %186 = icmp sgt i32 %184, -1
  %187 = select i1 %186, i32 -2147483648, i32 2147483647
  %188 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %185, i32 %184) #20
  br label %189

189:                                              ; preds = %175, %148
  %190 = phi { i32, i1 } [ %188, %175 ], [ %174, %148 ]
  %191 = phi i32 [ %187, %175 ], [ %173, %148 ]
  %192 = extractvalue { i32, i1 } %190, 1
  %193 = extractvalue { i32, i1 } %190, 0
  %194 = select i1 %192, i32 %191, i32 %193
  %195 = icmp sgt i32 %194, 0
  %196 = select i1 %195, i32 %194, i32 0
  store i32 %196, i32* %55, align 4
  %197 = call zeroext i1 @_ZNK5blink10LayoutRect8ContainsERKS0_(%"class.blink::LayoutRect"* nonnull %4, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %5) #20
  %198 = load i32, i32* %55, align 4
  %199 = icmp slt i32 %198, 1
  %200 = or i1 %197, %199
  %201 = load i32, i32* %56, align 4
  %202 = icmp slt i32 %201, 1
  %203 = or i1 %200, %202
  br i1 %203, label %299, label %204

204:                                              ; preds = %189, %71, %73
  %205 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %206 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %205, align 8
  %207 = icmp eq %"struct.blink::BoxOverflowModel"* %206, null
  br i1 %207, label %212, label %208

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %206, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load i8, i8* %209, align 4, !range !4
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %218, label %229

212:                                              ; preds = %204
  %213 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9
  %214 = call noalias i8* @malloc(i64 116) #20
  call void @llvm.memset.p0i8.i64(i8* align 4 %214, i8 0, i64 116, i1 false) #20
  %215 = ptrtoint i8* %214 to i64
  %216 = bitcast %"class.std::__1::unique_ptr.3253"* %213 to i64*
  store i64 %215, i64* %216, align 8
  %217 = bitcast i8* %214 to %"struct.blink::BoxOverflowModel"*
  br label %218

218:                                              ; preds = %212, %208
  %219 = phi %"struct.blink::BoxOverflowModel"* [ %217, %212 ], [ %206, %208 ]
  %220 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %219, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %220, align 4
  %221 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %219, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %222 = bitcast %"class.blink::BoxLayoutOverflowModel"* %221 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %222, i8* nonnull align 8 %15, i64 16, i1 false) #20
  %223 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %219, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  store i32 0, i32* %223, align 4
  store i8 1, i8* %220, align 4
  %224 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %205, align 8
  %225 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %224, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load i8, i8* %225, align 4, !range !4
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %228, label %229, !prof !2

228:                                              ; preds = %218
  call void @llvm.trap() #20
  unreachable

229:                                              ; preds = %208, %218
  %230 = phi %"struct.blink::BoxOverflowModel"* [ %224, %218 ], [ %206, %208 ]
  %231 = load i32, i32* %53, align 4
  %232 = load i32, i32* %55, align 4
  %233 = icmp slt i32 %232, 0
  %234 = select i1 %233, i32 -2147483648, i32 2147483647
  %235 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %231, i32 %232) #20
  %236 = extractvalue { i32, i1 } %235, 1
  %237 = extractvalue { i32, i1 } %235, 0
  %238 = select i1 %236, i32 %234, i32 %237
  %239 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %230, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %230, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0
  %242 = load i32, i32* %241, align 4
  %243 = icmp slt i32 %242, 0
  %244 = select i1 %243, i32 -2147483648, i32 2147483647
  %245 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %240, i32 %242) #20
  %246 = extractvalue { i32, i1 } %245, 1
  %247 = extractvalue { i32, i1 } %245, 0
  %248 = select i1 %246, i32 %244, i32 %247, !prof !2
  %249 = icmp slt i32 %238, %248
  %250 = select i1 %249, i32 %248, i32 %238
  %251 = load i32, i32* %54, align 4
  %252 = load i32, i32* %56, align 4
  %253 = icmp slt i32 %252, 0
  %254 = select i1 %253, i32 -2147483648, i32 2147483647
  %255 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %251, i32 %252) #20
  %256 = extractvalue { i32, i1 } %255, 1
  %257 = extractvalue { i32, i1 } %255, 0
  %258 = select i1 %256, i32 %254, i32 %257
  %259 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %230, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %230, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 1, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = icmp slt i32 %262, 0
  %264 = select i1 %263, i32 -2147483648, i32 2147483647
  %265 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %260, i32 %262) #20
  %266 = extractvalue { i32, i1 } %265, 1
  %267 = extractvalue { i32, i1 } %265, 0
  %268 = select i1 %266, i32 %264, i32 %267, !prof !2
  %269 = icmp slt i32 %258, %268
  %270 = select i1 %269, i32 %268, i32 %258
  %271 = icmp slt i32 %240, %231
  %272 = select i1 %271, i32 %240, i32 %231
  %273 = icmp slt i32 %260, %251
  %274 = select i1 %273, i32 %260, i32 %251
  %275 = icmp sgt i32 %272, -1
  %276 = select i1 %275, i32 -2147483648, i32 2147483647
  %277 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %250, i32 %272) #20
  %278 = extractvalue { i32, i1 } %277, 1
  %279 = extractvalue { i32, i1 } %277, 0
  %280 = select i1 %278, i32 %276, i32 %279, !prof !2
  store i32 %280, i32* %241, align 4
  %281 = icmp sgt i32 %274, -1
  %282 = select i1 %281, i32 -2147483648, i32 2147483647
  %283 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %270, i32 %274) #20
  %284 = extractvalue { i32, i1 } %283, 1
  %285 = extractvalue { i32, i1 } %283, 0
  %286 = select i1 %284, i32 %282, i32 %285, !prof !2
  store i32 %286, i32* %261, align 4
  %287 = icmp sgt i32 %280, -1
  %288 = select i1 %287, i32 -2147483648, i32 2147483647
  %289 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %250, i32 %280) #20
  %290 = extractvalue { i32, i1 } %289, 1
  %291 = extractvalue { i32, i1 } %289, 0
  %292 = select i1 %290, i32 %288, i32 %291, !prof !2
  store i32 %292, i32* %239, align 4
  %293 = icmp sgt i32 %286, -1
  %294 = select i1 %293, i32 -2147483648, i32 2147483647
  %295 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %270, i32 %286) #20
  %296 = extractvalue { i32, i1 } %295, 1
  %297 = extractvalue { i32, i1 } %295, 0
  %298 = select i1 %296, i32 %294, i32 %297, !prof !2
  store i32 %298, i32* %259, align 4
  br label %299

299:                                              ; preds = %189, %229
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #20
  br label %300

300:                                              ; preds = %43, %299
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #20
  br label %301

301:                                              ; preds = %2, %10, %300
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox24SetLayoutClientAfterEdgeENS_10LayoutUnitE(%"class.blink::LayoutBox"* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %3, align 8
  %5 = icmp eq %"struct.blink::BoxOverflowModel"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 4, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  store i32 %1, i32* %11, align 4
  br label %12

12:                                               ; preds = %6, %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox21LayoutClientAfterEdgeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxOverflowModel"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  br label %14

12:                                               ; preds = %5, %1
  %13 = tail call i32 @_ZNK5blink9LayoutBox19ClientLogicalBottomEv(%"class.blink::LayoutBox"* %0)
  br label %14

14:                                               ; preds = %12, %9
  %15 = phi i32 [ %11, %9 ], [ %13, %12 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ClientLogicalBottomEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8, !noalias !420
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !420
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 993, i64 0 }, %12 ], [ { i64 1001, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 977, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #20
  %37 = tail call i32 @_ZNK5blink9LayoutBox25LogicalTopScrollbarHeightEv(%"class.blink::LayoutBox"* %0)
  %38 = icmp slt i32 %37, 0
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %37) #20
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !2
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = trunc i96 %46 to i32
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %33
  %50 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #20
  br label %53

51:                                               ; preds = %33
  %52 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #20
  br label %53

53:                                               ; preds = %49, %51
  %54 = phi i32 [ %50, %49 ], [ %52, %51 ]
  %55 = icmp slt i32 %54, 0
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %43, i32 %54) #20
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 %56, i32 %59, !prof !2
  ret i32 %60
}

declare void @_ZN5blink9FloatRect14UniteIfNonZeroERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #5

declare { <2 x float>, <2 x float> } @_ZNK5blink10PaintLayer18FilterReferenceBoxEv(%"class.blink::PaintLayer"*) local_unnamed_addr #5

declare { <2 x float>, <2 x float> } @_ZNK5blink10PaintLayer16MapRectForFilterERKNS_9FloatRectE(%"class.blink::PaintLayer"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox14HasTopOverflowEv(%"class.blink::LayoutBox"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41538374868278621028243970633760768
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = trunc i96 %12 to i32
  %14 = icmp sgt i32 %13, -1
  br label %15

15:                                               ; preds = %9, %1
  %16 = phi i1 [ false, %1 ], [ %14, %9 ]
  ret i1 %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox15HasLeftOverflowEv(%"class.blink::LayoutBox"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i32
  %6 = icmp slt i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 41538374868278621028243970633760768
  %13 = icmp ne i160 %12, 0
  %14 = and i160 %11, 15211807202738752817960438464512
  %15 = icmp eq i160 %14, 5070602400912917605986812821504
  %16 = select i1 %6, i1 %13, i1 %15
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox34SetLayoutOverflowFromLayoutResultsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.absl::optional.4451", align 4
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"struct.blink::PhysicalRect"*
  %5 = alloca { i64, i64 }, align 8
  %6 = bitcast { i64, i64 }* %5 to %"struct.blink::PhysicalRect"*
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, -193
  store i96 %10, i96* %8, align 4
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %12 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %11, align 8
  %13 = icmp eq %"struct.blink::BoxOverflowModel"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 4
  br label %16

16:                                               ; preds = %1, %14
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %18 = bitcast %"class.blink::ComputedStyle"** %17 to %"class.blink::ComputedStyleBase"**
  %19 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %19, i64 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8
  %23 = lshr i160 %22, 102
  %24 = trunc i160 %23 to i8
  %25 = and i8 %24, 3
  %26 = getelementptr inbounds %"class.absl::optional.4451", %"class.absl::optional.4451"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %26) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %26, i8 -86, i64 20, i1 false)
  store i8 0, i8* %26, align 4
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %28 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %27, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %28, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %295, label %34

34:                                               ; preds = %16
  %35 = bitcast { i64, i64 }* %3 to i8*
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %38 = getelementptr inbounds %"class.absl::optional.4451", %"class.absl::optional.4451"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.absl::optional.4451", %"class.absl::optional.4451"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast %union.anon.4455* %39 to i8*
  %41 = bitcast { i64, i64 }* %3 to i8*
  br label %45

42:                                               ; preds = %193
  %43 = load i8, i8* %26, align 4, !range !4
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %295, label %197

45:                                               ; preds = %34, %193
  %46 = phi %class.scoped_refptr.3247* [ %28, %34 ], [ %195, %193 ]
  %47 = phi i32 [ 0, %34 ], [ %194, %193 ]
  %48 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %46, i64 0, i32 0
  %49 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %49, i64 0, i32 3, i32 0
  %51 = bitcast %"class.blink::NGPhysicalFragment"** %50 to %"class.blink::NGPhysicalBoxFragment"**
  %52 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %51, align 8
  switch i8 %25, label %77 [
    i8 0, label %78
    i8 1, label %53
    i8 3, label %53
    i8 2, label %76
  ]

53:                                               ; preds = %45, %45
  %54 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %52, i64 0, i32 0, i32 2
  %55 = bitcast %"struct.blink::PhysicalSize"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = trunc i64 %56 to i32
  %58 = call i1 @llvm.is.constant.i32(i32 %57) #20
  br i1 %58, label %59, label %63

59:                                               ; preds = %53
  %60 = sub i32 0, %57
  %61 = icmp eq i32 %60, -2147483648
  %62 = select i1 %61, i32 2147483647, i32 %60
  br label %68

63:                                               ; preds = %53
  %64 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %57) #20
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 2147483647, i32 %66
  br label %68

68:                                               ; preds = %59, %63
  %69 = phi i32 [ %62, %59 ], [ %67, %63 ]
  %70 = icmp sgt i32 %47, -1
  %71 = select i1 %70, i32 -2147483648, i32 2147483647
  %72 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %69, i32 %47) #20
  %73 = extractvalue { i32, i1 } %72, 1
  %74 = extractvalue { i32, i1 } %72, 0
  %75 = select i1 %73, i32 %71, i32 %74, !prof !2
  br label %78

76:                                               ; preds = %45
  br label %78

77:                                               ; preds = %45
  unreachable

78:                                               ; preds = %45, %76, %68
  %79 = phi i32 [ %47, %76 ], [ %75, %68 ], [ 0, %45 ]
  %80 = phi i32 [ 0, %76 ], [ 0, %68 ], [ %47, %45 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #20
  %81 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %52, i64 0, i32 0, i32 3
  %82 = bitcast i24* %81 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false)
  %83 = load i32, i32* %82, align 8
  %84 = and i32 %83, 524288
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %123, label %86

86:                                               ; preds = %78
  %87 = and i32 %83, 64
  %88 = icmp eq i32 %87, 0
  %89 = and i32 %83, 960
  %90 = icmp ne i32 %89, 256
  %91 = and i1 %88, %90
  br i1 %91, label %92, label %97

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %52, i64 0, i32 0, i32 1
  %94 = bitcast %"class.blink::LayoutObject"** %93 to %"class.blink::LayoutBox"**
  %95 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %94, align 8
  %96 = bitcast %"class.blink::LayoutBox"* %95 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  br label %97

97:                                               ; preds = %92, %86
  %98 = phi i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** [ %96, %92 ], [ null, %86 ]
  %99 = phi %"class.blink::LayoutBox"* [ %95, %92 ], [ null, %86 ]
  %100 = call { i64, i64 } @_ZNK5blink9LayoutBox18LayoutOverflowRectEv(%"class.blink::LayoutBox"* %99) #20
  %101 = extractvalue { i64, i64 } %100, 0
  %102 = trunc i64 %101 to i32
  %103 = and i64 %101, -4294967296
  %104 = extractvalue { i64, i64 } %100, 1
  %105 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %99, i64 0, i32 0, i32 0, i32 5, i32 0
  %106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %106, i64 0, i32 0, i32 9
  %108 = bitcast [20 x i8]* %107 to i160*
  %109 = load i160, i160* %108, align 8
  %110 = and i160 %109, 15211807202738752817960438464512
  %111 = icmp eq i160 %110, 5070602400912917605986812821504
  br i1 %111, label %112, label %119, !prof !2

112:                                              ; preds = %97
  %113 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %99, i64 0, i32 0, i32 0
  %114 = trunc i64 %104 to i32
  %115 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %98, align 8
  %116 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %115, i64 106
  %117 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %116, align 8
  %118 = call i32 %117(%"class.blink::LayoutObject"* %113, i32 %102, i32 %114, %"class.blink::LayoutBox"* null) #20
  br label %119

119:                                              ; preds = %112, %97
  %120 = phi i32 [ %118, %112 ], [ %102, %97 ]
  %121 = zext i32 %120 to i64
  %122 = or i64 %103, %121
  br label %159

123:                                              ; preds = %78
  %124 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %52, i64 0, i32 1
  %125 = bitcast i24* %124 to i32*
  %126 = load i32, i32* %125, align 8
  %127 = and i32 %126, 64
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %133

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %52, i64 0, i32 0, i32 2
  %131 = bitcast %"struct.blink::PhysicalSize"* %130 to i64*
  %132 = load i64, i64* %131, align 8
  br label %159

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %52, i64 0, i32 2
  %135 = load i32, i32* %134, align 4
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %52, i64 0, i32 6, i64 %136
  %138 = and i32 %126, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %133
  %141 = bitcast %"struct.blink::NGLink"* %137 to %"struct.blink::PhysicalRect"*
  br label %152

142:                                              ; preds = %133
  %143 = bitcast %"struct.blink::NGLink"* %137 to i8*
  %144 = getelementptr inbounds %"struct.blink::NGLink", %"struct.blink::NGLink"* %137, i64 1
  %145 = bitcast %"struct.blink::NGLink"* %144 to i32*
  %146 = load i32, i32* %145, align 8
  %147 = shl i32 %146, 6
  %148 = or i32 %147, 24
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* %143, i64 %149
  %151 = bitcast i8* %150 to %"struct.blink::PhysicalRect"*
  br label %152

152:                                              ; preds = %142, %140
  %153 = phi %"struct.blink::PhysicalRect"* [ %151, %142 ], [ %141, %140 ]
  %154 = bitcast %"struct.blink::PhysicalRect"* %153 to i64*
  %155 = load i64, i64* %154, align 4
  %156 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %153, i64 0, i32 1
  %157 = bitcast %"struct.blink::PhysicalSize"* %156 to i64*
  %158 = load i64, i64* %157, align 4
  br label %159

159:                                              ; preds = %119, %129, %152
  %160 = phi i64 [ 0, %129 ], [ %155, %152 ], [ %122, %119 ]
  %161 = phi i64 [ %132, %129 ], [ %158, %152 ], [ %104, %119 ]
  store i64 %161, i64* %36, align 8
  %162 = trunc i64 %160 to i32
  %163 = icmp slt i32 %79, 0
  %164 = select i1 %163, i32 -2147483648, i32 2147483647
  %165 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %162, i32 %79) #20
  %166 = extractvalue { i32, i1 } %165, 1
  %167 = extractvalue { i32, i1 } %165, 0
  %168 = select i1 %166, i32 %164, i32 %167, !prof !2
  %169 = lshr i64 %160, 32
  %170 = trunc i64 %169 to i32
  %171 = icmp slt i32 %80, 0
  %172 = select i1 %171, i32 -2147483648, i32 2147483647
  %173 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %170, i32 %80) #20
  %174 = extractvalue { i32, i1 } %173, 1
  %175 = extractvalue { i32, i1 } %173, 0
  %176 = select i1 %174, i32 %172, i32 %175, !prof !2
  %177 = zext i32 %176 to i64
  %178 = shl nuw i64 %177, 32
  %179 = zext i32 %168 to i64
  %180 = or i64 %178, %179
  store i64 %180, i64* %37, align 8
  %181 = load i8, i8* %26, align 4, !range !4
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* nonnull align 8 %35, i64 16, i1 false) #20
  store i8 1, i8* %26, align 4
  br label %185

184:                                              ; preds = %159
  call void @_ZN5blink12PhysicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::PhysicalRect"* %38, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %4) #20
  br label %185

185:                                              ; preds = %184, %183
  %186 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %52, i64 0, i32 0, i32 4, i32 0
  %187 = load %"class.blink::NGBreakToken"*, %"class.blink::NGBreakToken"** %186, align 8
  %188 = icmp eq %"class.blink::NGBreakToken"* %187, null
  br i1 %188, label %193, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"class.blink::NGBreakToken", %"class.blink::NGBreakToken"* %187, i64 0, i32 5, i64 2
  %191 = bitcast i8* %190 to i32*
  %192 = load i32, i32* %191, align 4
  br label %193

193:                                              ; preds = %185, %189
  %194 = phi i32 [ %47, %185 ], [ %192, %189 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #20
  %195 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %46, i64 1
  %196 = icmp eq %class.scoped_refptr.3247* %195, %32
  br i1 %196, label %42, label %45

197:                                              ; preds = %42
  %198 = icmp eq i8 %25, 1
  br i1 %198, label %202, label %199

199:                                              ; preds = %197
  %200 = getelementptr inbounds %"class.absl::optional.4451", %"class.absl::optional.4451"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %201 = load i32, i32* %200, align 4
  br label %225

202:                                              ; preds = %197
  %203 = getelementptr inbounds %"class.absl::optional.4451", %"class.absl::optional.4451"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = call i1 @llvm.is.constant.i32(i32 %204) #20
  br i1 %205, label %206, label %210

206:                                              ; preds = %202
  %207 = sub i32 0, %204
  %208 = icmp eq i32 %207, -2147483648
  %209 = select i1 %208, i32 2147483647, i32 %207
  br label %215

210:                                              ; preds = %202
  %211 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %204) #20
  %212 = extractvalue { i32, i1 } %211, 1
  %213 = extractvalue { i32, i1 } %211, 0
  %214 = select i1 %212, i32 2147483647, i32 %213
  br label %215

215:                                              ; preds = %206, %210
  %216 = phi i32 [ %209, %206 ], [ %214, %210 ]
  %217 = getelementptr inbounds %"class.absl::optional.4451", %"class.absl::optional.4451"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %218 = load i32, i32* %217, align 4
  %219 = icmp sgt i32 %218, -1
  %220 = select i1 %219, i32 -2147483648, i32 2147483647
  %221 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %216, i32 %218) #20
  %222 = extractvalue { i32, i1 } %221, 1
  %223 = extractvalue { i32, i1 } %221, 0
  %224 = select i1 %222, i32 %220, i32 %223, !prof !2
  store i32 %224, i32* %203, align 4
  br label %225

225:                                              ; preds = %199, %215
  %226 = phi i32 [ %201, %199 ], [ %218, %215 ]
  %227 = getelementptr inbounds %"class.absl::optional.4451", %"class.absl::optional.4451"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %228 = getelementptr inbounds %"class.absl::optional.4451", %"class.absl::optional.4451"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %229 = icmp eq i32 %226, 0
  br i1 %229, label %230, label %232

230:                                              ; preds = %225
  %231 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %231) #20
  br label %257

232:                                              ; preds = %225
  %233 = getelementptr inbounds %"class.absl::optional.4451", %"class.absl::optional.4451"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = icmp eq i32 %234, 0
  %236 = bitcast { i64, i64 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %236) #20
  br i1 %235, label %257, label %237

237:                                              ; preds = %232
  %238 = call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0) #20
  %239 = call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %0) #20
  %240 = call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #20
  %241 = call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #20
  %242 = zext i32 %239 to i64
  %243 = shl nuw i64 %242, 32
  %244 = zext i32 %238 to i64
  %245 = or i64 %243, %244
  %246 = zext i32 %241 to i64
  %247 = shl nuw i64 %246, 32
  %248 = zext i32 %240 to i64
  %249 = or i64 %247, %248
  %250 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 0
  store i64 %245, i64* %250, align 8
  %251 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i64 0, i32 1
  store i64 %249, i64* %251, align 8
  %252 = load i8, i8* %26, align 4, !range !4
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %254, label %255, !prof !2

254:                                              ; preds = %237
  call void @llvm.trap() #20
  unreachable

255:                                              ; preds = %237
  %256 = call zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"* nonnull %6, %"struct.blink::PhysicalRect"* dereferenceable(16) %227) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %236) #20
  br i1 %256, label %295, label %259

257:                                              ; preds = %230, %232
  %258 = phi i8* [ %231, %230 ], [ %236, %232 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %258) #20
  br label %295

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9
  %261 = getelementptr inbounds %"class.std::__1::unique_ptr.3253", %"class.std::__1::unique_ptr.3253"* %260, i64 0, i32 0, i32 0, i32 0
  %262 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %261, align 8
  %263 = icmp eq %"struct.blink::BoxOverflowModel"* %262, null
  br i1 %263, label %264, label %269

264:                                              ; preds = %259
  %265 = call noalias i8* @malloc(i64 116) #20
  call void @llvm.memset.p0i8.i64(i8* align 4 %265, i8 0, i64 116, i1 false) #20
  %266 = ptrtoint i8* %265 to i64
  %267 = bitcast %"class.std::__1::unique_ptr.3253"* %260 to i64*
  store i64 %266, i64* %267, align 8
  %268 = bitcast i8* %265 to %"struct.blink::BoxOverflowModel"*
  br label %269

269:                                              ; preds = %259, %264
  %270 = phi %"struct.blink::BoxOverflowModel"* [ %262, %259 ], [ %268, %264 ]
  %271 = load i8, i8* %26, align 4, !range !4
  %272 = icmp eq i8 %271, 0
  br i1 %272, label %273, label %274, !prof !2

273:                                              ; preds = %269
  call void @llvm.trap() #20
  unreachable

274:                                              ; preds = %269
  %275 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %227, i64 0, i32 0, i32 0, i32 0
  %276 = load i32, i32* %275, align 4
  %277 = getelementptr inbounds %"class.absl::optional.4451", %"class.absl::optional.4451"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %278 = load i32, i32* %277, align 4
  %279 = load i32, i32* %228, align 4
  %280 = load i32, i32* %233, align 4
  %281 = zext i32 %278 to i64
  %282 = shl nuw i64 %281, 32
  %283 = zext i32 %276 to i64
  %284 = or i64 %282, %283
  %285 = zext i32 %280 to i64
  %286 = shl nuw i64 %285, 32
  %287 = zext i32 %279 to i64
  %288 = or i64 %286, %287
  %289 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %291 = bitcast %union.anon.3260* %290 to i64*
  store i64 %284, i64* %291, align 4
  %292 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %293 = bitcast %"class.blink::LayoutSize"* %292 to i64*
  store i64 %288, i64* %293, align 4
  %294 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %270, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  store i32 0, i32* %294, align 4
  store i8 1, i8* %289, align 4
  br label %295

295:                                              ; preds = %16, %42, %255, %257, %274
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %26) #20
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox19ClearLayoutOverflowEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxOverflowModel"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 4
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN5blink12PhysicalRect16UniteEvenIfEmptyERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink9LayoutBox14NoOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %0) #20
  %3 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %0) #20
  %4 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #20
  %5 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #20
  %6 = zext i32 %3 to i64
  %7 = shl nuw i64 %6, 32
  %8 = zext i32 %5 to i64
  %9 = shl nuw i64 %8, 32
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 15211807202738752817960438464512
  %16 = icmp eq i160 %15, 5070602400912917605986812821504
  br i1 %16, label %17, label %24, !prof !2

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %19 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %20 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %20, i64 106
  %22 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::LayoutObject"* %18, i32 %2, i32 %4, %"class.blink::LayoutBox"* null) #20
  br label %24

24:                                               ; preds = %1, %17
  %25 = phi i32 [ %23, %17 ], [ %2, %1 ]
  %26 = zext i32 %25 to i64
  %27 = or i64 %7, %26
  %28 = insertvalue { i64, i64 } undef, i64 %27, 0
  %29 = zext i32 %4 to i64
  %30 = or i64 %9, %29
  %31 = insertvalue { i64, i64 } %28, i64 %30, 1
  ret { i64, i64 } %31
}

declare zeroext i1 @_ZNK5blink10LayoutRect8ContainsERKS0_(%"class.blink::LayoutRect"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox21AddSelfVisualOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* nocapture, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %"class.blink::LayoutRect"*
  %5 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 1
  br i1 %7, label %50, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp slt i32 %10, 1
  br i1 %11, label %50, label %12

12:                                               ; preds = %8
  %13 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #20
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %16 = bitcast %"class.blink::LayoutSize"* %15 to i64*
  %17 = load i64, i64* %16, align 4
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 0, i64* %18, align 8
  store i64 %17, i64* %14, align 8
  %19 = call zeroext i1 @_ZNK5blink10LayoutRect8ContainsERKS0_(%"class.blink::LayoutRect"* nonnull %4, %"class.blink::LayoutRect"* dereferenceable(16) %1) #20
  br i1 %19, label %49, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %22 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %21, align 8
  %23 = icmp eq %"struct.blink::BoxOverflowModel"* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 4, !range !4
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %34, label %46

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9
  %30 = call noalias i8* @malloc(i64 116) #20
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 116, i1 false) #20
  %31 = ptrtoint i8* %30 to i64
  %32 = bitcast %"class.std::__1::unique_ptr.3253"* %29 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast i8* %30 to %"struct.blink::BoxOverflowModel"*
  br label %34

34:                                               ; preds = %28, %24
  %35 = phi %"struct.blink::BoxOverflowModel"* [ %33, %28 ], [ %22, %24 ]
  %36 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %35, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %35, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0
  %38 = bitcast %"class.blink::BoxVisualOverflowModel"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* nonnull align 8 %13, i64 16, i1 false) #20
  %39 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %35, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %40 = bitcast %"class.blink::LayoutRect"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 17, i1 false) #20
  store i8 1, i8* %36, align 4
  %41 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %21, align 8
  %42 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %41, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %43 = load i8, i8* %42, align 4, !range !4
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %34
  call void @llvm.trap() #20
  unreachable

46:                                               ; preds = %24, %34
  %47 = phi %"struct.blink::BoxOverflowModel"* [ %41, %34 ], [ %22, %24 ]
  %48 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %47, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"* %48, %"class.blink::LayoutRect"* dereferenceable(16) %1) #20
  br label %49

49:                                               ; preds = %12, %46
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #20
  br label %50

50:                                               ; preds = %2, %8, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox17SetVisualOverflowERKNS_12PhysicalRectES3_(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %5, align 8
  %7 = icmp eq %"struct.blink::BoxOverflowModel"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 4
  br label %10

10:                                               ; preds = %3, %8
  tail call void @_ZN5blink9LayoutBox21AddSelfVisualOverflowERKNS_12PhysicalRectE(%"class.blink::LayoutBox"* %0, %"struct.blink::PhysicalRect"* dereferenceable(16) %1)
  %11 = bitcast { i64, i64 }* %4 to %"class.blink::LayoutRect"*
  %12 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #20
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 5070602400912917605986812821504
  %20 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 0, i32 0
  br i1 %19, label %23, label %31, !prof !2

23:                                               ; preds = %10
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %25 = load i32, i32* %22, align 4
  %26 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %27 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %26, align 8
  %28 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %27, i64 106
  %29 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %28, align 8
  %30 = tail call i32 %29(%"class.blink::LayoutObject"* %24, i32 %21, i32 %25, %"class.blink::LayoutBox"* null) #20
  br label %31

31:                                               ; preds = %10, %23
  %32 = phi i32 [ %30, %23 ], [ %21, %10 ]
  %33 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 1, i32 0
  %35 = load i32, i32* %33, align 4
  %36 = load i32, i32* %22, align 4
  %37 = load i32, i32* %34, align 4
  %38 = zext i32 %35 to i64
  %39 = shl nuw i64 %38, 32
  %40 = zext i32 %32 to i64
  %41 = or i64 %39, %40
  %42 = zext i32 %37 to i64
  %43 = shl nuw i64 %42, 32
  %44 = zext i32 %36 to i64
  %45 = or i64 %43, %44
  %46 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %41, i64* %46, align 8
  %47 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %45, i64* %47, align 8
  call void @_ZN5blink9LayoutBox25AddContentsVisualOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %11) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #20
  %48 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %5, align 8
  %49 = icmp eq %"struct.blink::BoxOverflowModel"* %48, null
  br i1 %49, label %178, label %50

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %48, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i8, i8* %51, align 4, !range !4
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %178, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %56 = bitcast %"class.blink::LayoutSize"* %55 to i64*
  %57 = load i64, i64* %56, align 4
  %58 = trunc i64 %57 to i32
  %59 = lshr i64 %57, 32
  %60 = trunc i64 %59 to i32
  %61 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %48, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = call i1 @llvm.is.constant.i32(i32 %62) #20
  br i1 %63, label %64, label %68

64:                                               ; preds = %54
  %65 = sub i32 0, %62
  %66 = icmp eq i32 %65, -2147483648
  %67 = select i1 %66, i32 2147483647, i32 %65
  br label %73

68:                                               ; preds = %54
  %69 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %62) #20
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 2147483647, i32 %71
  br label %73

73:                                               ; preds = %68, %64
  %74 = phi i32 [ %67, %64 ], [ %72, %68 ]
  %75 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %48, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %48, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp slt i32 %78, 0
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %76, i32 %78) #20
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 %80, i32 %83, !prof !2
  %85 = icmp sgt i32 %58, -1
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %84, i32 %58) #20
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 %86, i32 %89, !prof !2
  %91 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %48, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1, i32 1, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = icmp slt i32 %92, 0
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %62, i32 %92) #20
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !2
  %99 = icmp sgt i32 %60, -1
  %100 = select i1 %99, i32 -2147483648, i32 2147483647
  %101 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %98, i32 %60) #20
  %102 = extractvalue { i32, i1 } %101, 1
  %103 = extractvalue { i32, i1 } %101, 0
  %104 = select i1 %102, i32 %100, i32 %103, !prof !2
  %105 = call i1 @llvm.is.constant.i32(i32 %76) #20
  br i1 %105, label %106, label %110

106:                                              ; preds = %73
  %107 = sub i32 0, %76
  %108 = icmp eq i32 %107, -2147483648
  %109 = select i1 %108, i32 2147483647, i32 %107
  br label %115

110:                                              ; preds = %73
  %111 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %76) #20
  %112 = extractvalue { i32, i1 } %111, 1
  %113 = extractvalue { i32, i1 } %111, 0
  %114 = select i1 %112, i32 2147483647, i32 %113
  br label %115

115:                                              ; preds = %110, %106
  %116 = phi i32 [ %109, %106 ], [ %114, %110 ]
  %117 = sdiv i32 %74, 64
  %118 = shl nsw i32 %117, 6
  %119 = icmp eq i32 %118, %74
  br i1 %119, label %120, label %133

120:                                              ; preds = %115
  %121 = sdiv i32 %90, 64
  %122 = shl nsw i32 %121, 6
  %123 = icmp eq i32 %122, %90
  br i1 %123, label %124, label %133

124:                                              ; preds = %120
  %125 = sdiv i32 %104, 64
  %126 = shl nsw i32 %125, 6
  %127 = icmp eq i32 %126, %104
  br i1 %127, label %128, label %133

128:                                              ; preds = %124
  %129 = sdiv i32 %116, 64
  %130 = shl nsw i32 %129, 6
  %131 = icmp ne i32 %130, %116
  %132 = zext i1 %131 to i8
  br label %133

133:                                              ; preds = %115, %120, %124, %128
  %134 = phi i8 [ 1, %124 ], [ 1, %120 ], [ 1, %115 ], [ %132, %128 ]
  %135 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %48, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  store i8 %134, i8* %135, align 4
  %136 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %137 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %136, i64 0, i32 0, i32 3, i32 0, i32 0
  %138 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %138, i64 0, i32 2, i32 0, i32 0
  %140 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %140, i64 0, i32 13
  %142 = bitcast [3 x i8]* %141 to i24*
  %143 = load i24, i24* %142, align 8
  %144 = and i24 %143, 1920
  %145 = icmp eq i24 %144, 0
  br i1 %145, label %178, label %146

146:                                              ; preds = %133
  %147 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %140, i64 0, i32 8, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = sitofp i32 %148 to float
  %150 = fmul float %149, 1.562500e-02
  %151 = fcmp ogt float %150, 0.000000e+00
  %152 = and i24 %143, 1792
  %153 = icmp ne i24 %152, 0
  %154 = and i1 %153, %151
  br i1 %154, label %155, label %178

155:                                              ; preds = %146
  %156 = call i32 @_ZNK5blink13ComputedStyle19OutlineOutsetExtentEv(%"class.blink::ComputedStyle"* %136) #20
  %157 = icmp sgt i32 %156, 33554431
  br i1 %157, label %162, label %158

158:                                              ; preds = %155
  %159 = icmp slt i32 %156, -33554432
  %160 = shl i32 %156, 6
  %161 = select i1 %159, i32 -2147483648, i32 %160
  br label %162

162:                                              ; preds = %158, %155
  %163 = phi i32 [ 2147483647, %155 ], [ %161, %158 ]
  %164 = icmp ne i32 %74, %163
  %165 = icmp ne i32 %90, %163
  %166 = or i1 %164, %165
  %167 = icmp ne i32 %104, %163
  %168 = or i1 %167, %166
  %169 = icmp ne i32 %116, %163
  %170 = or i1 %169, %168
  %171 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %172 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %171 to i96*
  %173 = zext i1 %170 to i96
  %174 = load i96, i96* %172, align 4
  %175 = shl nuw nsw i96 %173, 53
  %176 = and i96 %174, -9007199254740993
  %177 = or i96 %175, %176
  store i96 %177, i96* %172, align 4
  br label %178

178:                                              ; preds = %50, %133, %146, %31, %162
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox19ClearVisualOverflowEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxOverflowModel"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 4
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox32CanUseFragmentsForVisualOverflowEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8
  %7 = tail call dereferenceable(8) %class.scoped_refptr.3247* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %6, i32 0) #20
  %8 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %7, i64 0, i32 0
  %9 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %9, i64 0, i32 3, i32 0
  %11 = bitcast %"class.blink::NGPhysicalFragment"** %10 to %"class.blink::NGPhysicalBoxFragment"**
  %12 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %12, i64 0, i32 0, i32 3
  %14 = bitcast i24* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 524288
  %17 = icmp eq i32 %16, 0
  br label %18

18:                                               ; preds = %1, %5
  %19 = phi i1 [ %17, %5 ], [ false, %1 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox29RecalcFragmentsVisualOverflowEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %10, %1
  ret void

10:                                               ; preds = %1, %10
  %11 = phi %class.scoped_refptr.3247* [ %17, %10 ], [ %3, %1 ]
  %12 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %11, i64 0, i32 0
  %13 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %13, i64 0, i32 3, i32 0
  %15 = bitcast %"class.blink::NGPhysicalFragment"** %14 to %"class.blink::NGPhysicalBoxFragment"**
  %16 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %15, align 8
  tail call void @_ZN5blink21NGPhysicalBoxFragment17RecalcInkOverflowEv(%"class.blink::NGPhysicalBoxFragment"* %16) #20
  %17 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %11, i64 1
  %18 = icmp eq %class.scoped_refptr.3247* %17, %7
  br i1 %18, label %9, label %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox31CopyVisualOverflowFromFragmentsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #20
  %4 = extractvalue { i64, i64 } %3, 0
  %5 = extractvalue { i64, i64 } %3, 1
  tail call void @_ZN5blink9LayoutBox51CopyVisualOverflowFromFragmentsWithoutInvalidationsEv(%"class.blink::LayoutBox"* %0)
  %6 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0)
  %7 = extractvalue { i64, i64 } %6, 0
  %8 = extractvalue { i64, i64 } %6, 1
  %9 = trunc i64 %7 to i32
  %10 = lshr i64 %7, 32
  %11 = trunc i64 %10 to i32
  %12 = trunc i64 %4 to i32
  %13 = lshr i64 %4, 32
  %14 = trunc i64 %13 to i32
  %15 = icmp eq i32 %9, %12
  %16 = icmp eq i32 %11, %14
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %28

18:                                               ; preds = %1
  %19 = trunc i64 %8 to i32
  %20 = trunc i64 %5 to i32
  %21 = icmp eq i32 %19, %20
  br i1 %21, label %22, label %28

22:                                               ; preds = %18
  %23 = lshr i64 %5, 32
  %24 = trunc i64 %23 to i32
  %25 = lshr i64 %8, 32
  %26 = trunc i64 %25 to i32
  %27 = icmp eq i32 %26, %24
  br i1 %27, label %46, label %28

28:                                               ; preds = %1, %18, %22
  tail call void @_ZN5blink12LayoutObject41InvalidateIntersectionObserverCachedRectsEv(%"class.blink::LayoutObject"* %2) #20
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %2) #20
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %32, label %39

32:                                               ; preds = %28, %32
  %33 = phi %"class.blink::LayoutObject"* [ %35, %32 ], [ %2, %28 ]
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %33, i64 0, i32 7
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 6, i32 0, i32 0
  %37 = load %"class.blink::Node"*, %"class.blink::Node"** %36, align 8
  %38 = icmp eq %"class.blink::Node"* %37, null
  br i1 %38, label %32, label %39

39:                                               ; preds = %32, %28
  %40 = phi %"class.blink::Node"* [ %30, %28 ], [ %37, %32 ]
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %40, i64 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  %45 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %44) #20
  tail call void @_ZN5blink14LocalFrameView31SetIntersectionObservationStateENS0_28IntersectionObservationStateE(%"class.blink::LocalFrameView"* %45, i32 1) #20
  br label %46

46:                                               ; preds = %22, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox51CopyVisualOverflowFromFragmentsWithoutInvalidationsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"struct.blink::PhysicalRect"*
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"struct.blink::PhysicalRect"*
  %6 = alloca %"struct.blink::PhysicalRect", align 4
  %7 = alloca %"struct.blink::PhysicalRect", align 4
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"struct.blink::PhysicalRect"*
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"struct.blink::PhysicalRect"*
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  switch i32 %13, label %52 [
    i32 0, label %14
    i32 1, label %20
  ], !prof !423

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %16 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %15, align 8
  %17 = icmp eq %"struct.blink::BoxOverflowModel"* %16, null
  br i1 %17, label %188, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 4
  br label %188

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8
  %22 = tail call dereferenceable(8) %class.scoped_refptr.3247* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"* %21, i32 0) #20
  %23 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %22, i64 0, i32 0
  %24 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %24, i64 0, i32 3, i32 0
  %26 = bitcast %"class.blink::NGPhysicalFragment"** %25 to %"class.blink::NGPhysicalBoxFragment"**
  %27 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %27, i64 0, i32 1
  %29 = bitcast i24* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 896
  %32 = icmp eq i32 %31, 256
  br i1 %32, label %33, label %39

33:                                               ; preds = %20
  %34 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %35 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %34, align 8
  %36 = icmp eq %"struct.blink::BoxOverflowModel"* %35, null
  br i1 %36, label %188, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %35, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 4
  br label %188

39:                                               ; preds = %20
  %40 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #20
  %41 = tail call { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment15SelfInkOverflowEv(%"class.blink::NGPhysicalBoxFragment"* %27) #20
  %42 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %43 = extractvalue { i64, i64 } %41, 0
  store i64 %43, i64* %42, align 8
  %44 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %45 = extractvalue { i64, i64 } %41, 1
  store i64 %45, i64* %44, align 8
  %46 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #20
  %47 = tail call { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment19ContentsInkOverflowEv(%"class.blink::NGPhysicalBoxFragment"* %27) #20
  %48 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %49 = extractvalue { i64, i64 } %47, 0
  store i64 %49, i64* %48, align 8
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %51 = extractvalue { i64, i64 } %47, 1
  store i64 %51, i64* %50, align 8
  call void @_ZN5blink9LayoutBox17SetVisualOverflowERKNS_12PhysicalRectES3_(%"class.blink::LayoutBox"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %3, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #20
  br label %188

52:                                               ; preds = %1
  %53 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %54 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %53, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %55 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %54, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %56 = bitcast %"class.blink::ComputedStyle"** %55 to %"class.blink::ComputedStyleBase"**
  %57 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %57, i64 0, i32 9
  %59 = bitcast [20 x i8]* %58 to i160*
  %60 = load i160, i160* %59, align 8
  %61 = lshr i160 %60, 102
  %62 = trunc i160 %61 to i8
  %63 = and i8 %62, 3
  %64 = bitcast %"struct.blink::PhysicalRect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #20
  %65 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %6, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %64, i8 0, i64 16, i1 false) #20
  %66 = bitcast %"struct.blink::PhysicalRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #20
  %67 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %7, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %66, i8 0, i64 16, i1 false) #20
  %68 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %69 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %68, align 8
  %70 = load i32, i32* %12, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %69, i64 %71
  %73 = icmp eq i32 %70, 0
  br i1 %73, label %151, label %74

74:                                               ; preds = %52
  %75 = bitcast { i64, i64 }* %8 to i8*
  %76 = bitcast { i64, i64 }* %8 to i32*
  %77 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %80 = bitcast { i64, i64 }* %10 to i8*
  %81 = bitcast { i64, i64 }* %10 to i32*
  %82 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %11, i64 0, i32 0, i32 1, i32 0
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %84 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %85 = icmp eq i8 %63, 0
  %86 = bitcast { i64, i64 }* %8 to i8*
  %87 = bitcast { i64, i64 }* %10 to i8*
  br label %91

88:                                               ; preds = %147
  %89 = and i8 %148, 1
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %151, label %157

91:                                               ; preds = %74, %147
  %92 = phi %"class.blink::NGPhysicalBoxFragment"* [ null, %74 ], [ %99, %147 ]
  %93 = phi i8 [ 0, %74 ], [ %148, %147 ]
  %94 = phi %class.scoped_refptr.3247* [ %69, %74 ], [ %149, %147 ]
  %95 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %94, i64 0, i32 0
  %96 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %96, i64 0, i32 3, i32 0
  %98 = bitcast %"class.blink::NGPhysicalFragment"** %97 to %"class.blink::NGPhysicalBoxFragment"**
  %99 = load %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGPhysicalBoxFragment"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %99, i64 0, i32 1
  %101 = bitcast i24* %100 to i32*
  %102 = load i32, i32* %101, align 8
  %103 = and i32 %102, 896
  %104 = icmp eq i32 %103, 256
  br i1 %104, label %147, label %105

105:                                              ; preds = %91
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 16, i1 false)
  %106 = call { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment15SelfInkOverflowEv(%"class.blink::NGPhysicalBoxFragment"* %99) #20
  %107 = extractvalue { i64, i64 } %106, 0
  store i64 %107, i64* %79, align 8
  %108 = extractvalue { i64, i64 } %106, 1
  store i64 %108, i64* %78, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false)
  %109 = call { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment19ContentsInkOverflowEv(%"class.blink::NGPhysicalBoxFragment"* %99) #20
  %110 = extractvalue { i64, i64 } %109, 0
  store i64 %110, i64* %84, align 8
  %111 = extractvalue { i64, i64 } %109, 1
  store i64 %111, i64* %83, align 8
  %112 = icmp eq %"class.blink::NGPhysicalBoxFragment"* %92, null
  %113 = trunc i64 %110 to i32
  %114 = lshr i64 %110, 32
  %115 = trunc i64 %114 to i32
  br i1 %112, label %146, label %116

116:                                              ; preds = %105
  %117 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %92, i64 0, i32 0, i32 4, i32 0
  %118 = bitcast %"class.blink::NGBreakToken"** %117 to %"class.blink::NGBlockBreakToken"**
  %119 = load %"class.blink::NGBlockBreakToken"*, %"class.blink::NGBlockBreakToken"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::NGBlockBreakToken", %"class.blink::NGBlockBreakToken"* %119, i64 0, i32 1, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %85, label %122, label %134

122:                                              ; preds = %116
  %123 = load i32, i32* %77, align 4
  %124 = icmp slt i32 %121, 0
  %125 = select i1 %124, i32 -2147483648, i32 2147483647
  %126 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %123, i32 %121) #20
  %127 = extractvalue { i32, i1 } %126, 1
  %128 = extractvalue { i32, i1 } %126, 0
  %129 = select i1 %127, i32 %125, i32 %128, !prof !2
  store i32 %129, i32* %77, align 4
  %130 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %115, i32 %121) #20
  %131 = extractvalue { i32, i1 } %130, 1
  %132 = extractvalue { i32, i1 } %130, 0
  %133 = select i1 %131, i32 %125, i32 %132, !prof !2
  store i32 %133, i32* %82, align 4
  br label %146

134:                                              ; preds = %116
  %135 = load i32, i32* %76, align 8
  %136 = icmp slt i32 %121, 0
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %135, i32 %121) #20
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !2
  store i32 %141, i32* %76, align 8
  %142 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %113, i32 %121) #20
  %143 = extractvalue { i32, i1 } %142, 1
  %144 = extractvalue { i32, i1 } %142, 0
  %145 = select i1 %143, i32 %137, i32 %144, !prof !2
  store i32 %145, i32* %81, align 8
  br label %146

146:                                              ; preds = %122, %134, %105
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %6, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %9) #20
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %7, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %11) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #20
  br label %147

147:                                              ; preds = %91, %146
  %148 = phi i8 [ 1, %146 ], [ %93, %91 ]
  %149 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %94, i64 1
  %150 = icmp eq %class.scoped_refptr.3247* %149, %72
  br i1 %150, label %88, label %91

151:                                              ; preds = %52, %88
  %152 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %153 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %152, align 8
  %154 = icmp eq %"struct.blink::BoxOverflowModel"* %153, null
  br i1 %154, label %187, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %153, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %156, align 4
  br label %187

157:                                              ; preds = %88
  %158 = icmp eq i8 %63, 1
  br i1 %158, label %159, label %186, !prof !2

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %54, i64 0, i32 0, i32 2, i32 1
  %161 = bitcast %"class.blink::LayoutSize"* %160 to i64*
  %162 = load i64, i64* %161, align 4
  %163 = trunc i64 %162 to i32
  %164 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %165 = bitcast %"class.blink::LayoutSize"* %164 to i64*
  %166 = load i64, i64* %165, align 4
  %167 = trunc i64 %166 to i32
  %168 = icmp sgt i32 %167, -1
  %169 = select i1 %168, i32 -2147483648, i32 2147483647
  %170 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %163, i32 %167) #20
  %171 = extractvalue { i32, i1 } %170, 1
  %172 = extractvalue { i32, i1 } %170, 0
  %173 = select i1 %171, i32 %169, i32 %172, !prof !2
  %174 = load i32, i32* %65, align 4
  %175 = icmp slt i32 %173, 0
  %176 = select i1 %175, i32 -2147483648, i32 2147483647
  %177 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %174, i32 %173) #20
  %178 = extractvalue { i32, i1 } %177, 1
  %179 = extractvalue { i32, i1 } %177, 0
  %180 = select i1 %178, i32 %176, i32 %179, !prof !2
  store i32 %180, i32* %65, align 4
  %181 = load i32, i32* %67, align 4
  %182 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %181, i32 %173) #20
  %183 = extractvalue { i32, i1 } %182, 1
  %184 = extractvalue { i32, i1 } %182, 0
  %185 = select i1 %183, i32 %176, i32 %184, !prof !2
  store i32 %185, i32* %67, align 4
  br label %186

186:                                              ; preds = %159, %157
  call void @_ZN5blink9LayoutBox17SetVisualOverflowERKNS_12PhysicalRectES3_(%"class.blink::LayoutBox"* %0, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %6, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7)
  br label %187

187:                                              ; preds = %155, %151, %186
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #20
  br label %188

188:                                              ; preds = %37, %33, %18, %14, %39, %187
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = bitcast { i64, i64 }* %2 to %"class.blink::LayoutRect"*
  %4 = alloca %"class.blink::LayoutRect", align 4
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %5, align 8
  %7 = icmp eq %"struct.blink::BoxOverflowModel"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 4, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %8, %1
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %14 = bitcast %"class.blink::LayoutSize"* %13 to i64*
  %15 = load i64, i64* %14, align 4
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  store i64 %15, i64* %17, align 8
  br label %155

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %23, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %25, i64 0, i32 13, i32 5
  %27 = bitcast [7 x i8]* %26 to i56*
  %28 = load i56, i56* %27, align 8
  %29 = and i56 %28, 281474976710656
  %30 = icmp eq i56 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %18
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %25, i64 0, i32 13
  tail call void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"* %32) #20
  %33 = load i56, i56* %27, align 8
  br label %34

34:                                               ; preds = %31, %18
  %35 = phi i56 [ %28, %18 ], [ %33, %31 ]
  %36 = and i56 %35, 8796093022208
  %37 = icmp eq i56 %36, 0
  br i1 %37, label %38, label %47

38:                                               ; preds = %34
  %39 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %22, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %39, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %41, i64 0, i32 14, i32 0, i32 0, i32 0
  %43 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %43, i64 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %44, align 8
  %46 = icmp eq %"class.blink::StyleImage"* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %38, %34
  %48 = bitcast { i64, i64 }* %2 to i8*
  %49 = bitcast %"class.blink::LayoutRect"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %48, i8* align 4 %49, i64 16, i1 false)
  br label %155

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %52 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %51 to i96*
  %53 = load i96, i96* %52, align 4
  %54 = lshr i96 %53, 87
  %55 = trunc i96 %54 to i8
  %56 = and i8 %55, 3
  %57 = bitcast %"class.blink::ComputedStyle"** %20 to %"class.blink::ComputedStyleBase"**
  %58 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %58, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %60, i64 0, i32 3, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %62, i64 0, i32 38, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %117, label %66

66:                                               ; preds = %50
  %67 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %5, align 8
  %68 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %67, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 4, !range !4
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %72, !prof !2

71:                                               ; preds = %66
  tail call void @llvm.trap() #20
  unreachable

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %67, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %74 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %67, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 1, i32 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %75, 1
  br i1 %76, label %117, label %77

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %67, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1, i32 1, i32 1, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp slt i32 %79, 1
  br i1 %80, label %117, label %81

81:                                               ; preds = %77
  %82 = bitcast { i64, i64 }* %2 to i32*
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %84 = bitcast i64* %83 to i32*
  %85 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %86 = bitcast %"class.blink::LayoutSize"* %85 to i64*
  %87 = load i64, i64* %86, align 4
  %88 = icmp sgt i32 %64, -1
  %89 = select i1 %88, i32 -2147483648, i32 2147483647
  %90 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %64) #20
  %91 = extractvalue { i32, i1 } %90, 1
  %92 = extractvalue { i32, i1 } %90, 0
  %93 = select i1 %91, i32 %89, i32 %92
  store i32 %93, i32* %82, align 8
  %94 = trunc i64 %87 to i32
  %95 = icmp slt i32 %64, 0
  %96 = select i1 %95, i32 -2147483648, i32 2147483647
  %97 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %94, i32 %64) #20
  %98 = extractvalue { i32, i1 } %97, 1
  %99 = extractvalue { i32, i1 } %97, 0
  %100 = select i1 %98, i32 %96, i32 %99, !prof !2
  %101 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %100, i32 %64) #20
  %102 = extractvalue { i32, i1 } %101, 1
  %103 = extractvalue { i32, i1 } %101, 0
  %104 = select i1 %102, i32 %96, i32 %103, !prof !2
  store i32 %104, i32* %84, align 8
  %105 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %3, i64 0, i32 0, i32 1, i32 0
  store i32 %93, i32* %105, align 4
  %106 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %3, i64 0, i32 1, i32 1, i32 0
  %107 = lshr i64 %87, 32
  %108 = trunc i64 %107 to i32
  %109 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %108, i32 %64) #20
  %110 = extractvalue { i32, i1 } %109, 1
  %111 = extractvalue { i32, i1 } %109, 0
  %112 = select i1 %110, i32 %96, i32 %111, !prof !2
  %113 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 %64) #20
  %114 = extractvalue { i32, i1 } %113, 1
  %115 = extractvalue { i32, i1 } %113, 0
  %116 = select i1 %114, i32 %96, i32 %115, !prof !2
  store i32 %116, i32* %106, align 4
  call void @_ZN5blink10LayoutRect9IntersectERKS0_(%"class.blink::LayoutRect"* nonnull %3, %"class.blink::LayoutRect"* dereferenceable(16) %73) #20
  call void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"* nonnull %3, %"class.blink::LayoutRect"* dereferenceable(16) %19) #20
  br label %155

117:                                              ; preds = %50, %72, %77
  %118 = icmp eq i8 %56, 3
  br i1 %118, label %119, label %122

119:                                              ; preds = %117
  %120 = bitcast { i64, i64 }* %2 to i8*
  %121 = bitcast %"class.blink::LayoutRect"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %120, i8* align 4 %121, i64 16, i1 false)
  br label %155

122:                                              ; preds = %117
  %123 = bitcast %"class.blink::LayoutRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %123) #20
  %124 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 0, i32 0, i32 0
  %125 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 0, i32 1, i32 0
  %126 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 1, i32 0, i32 0
  %127 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 1, i32 1, i32 0
  %128 = bitcast %"class.blink::LayoutRect"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %128, i8 -86, i64 16, i1 false)
  %129 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %5, align 8
  %130 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %129, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %131 = load i8, i8* %130, align 4, !range !4
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %134, !prof !2

133:                                              ; preds = %122
  tail call void @llvm.trap() #20
  unreachable

134:                                              ; preds = %122
  %135 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %129, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 1
  %136 = bitcast %"class.blink::LayoutRect"* %135 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %123, i8* align 4 %136, i64 16, i1 false)
  call void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"* nonnull %4, %"class.blink::LayoutRect"* dereferenceable(16) %19) #20
  %137 = zext i8 %56 to i32
  %138 = and i32 %137, 1
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %145, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %19, i64 0, i32 0, i32 0, i32 0
  %142 = load i32, i32* %141, align 4
  store i32 %142, i32* %124, align 4
  %143 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  store i32 %144, i32* %126, align 4
  br label %145

145:                                              ; preds = %140, %134
  %146 = and i32 %137, 2
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %153, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %150 = load i32, i32* %149, align 4
  store i32 %150, i32* %125, align 4
  %151 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1, i32 1, i32 0
  %152 = load i32, i32* %151, align 4
  store i32 %152, i32* %127, align 4
  br label %153

153:                                              ; preds = %145, %148
  %154 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %154, i8* nonnull align 4 %123, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %123) #20
  br label %155

155:                                              ; preds = %119, %153, %81, %47, %12
  %156 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %157 = load i64, i64* %156, align 8
  %158 = insertvalue { i64, i64 } undef, i64 %157, 0
  %159 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %160 = load i64, i64* %159, align 8
  %161 = insertvalue { i64, i64 } %158, i64 %160, 1
  ret { i64, i64 } %161
}

declare void @_ZN5blink12LayoutObject41InvalidateIntersectionObserverCachedRectsEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

declare void @_ZN5blink14LocalFrameView31SetIntersectionObservationStateENS0_28IntersectionObservationStateE(%"class.blink::LocalFrameView"*, i32) local_unnamed_addr #5

declare { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment15SelfInkOverflowEv(%"class.blink::NGPhysicalBoxFragment"*) local_unnamed_addr #5

declare { i64, i64 } @_ZNK5blink21NGPhysicalBoxFragment19ContentsInkOverflowEv(%"class.blink::NGPhysicalBoxFragment"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox35PercentageLogicalHeightIsResolvableEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"class.blink::Length"*
  %4 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #20
  %5 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 2
  store i64 -6196951987750174620, i64* %2, align 8
  %6 = call i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"* %0, %"class.blink::Length"* nonnull dereferenceable(8) %3)
  %7 = icmp ne i32 %6, -64
  %8 = load i8, i8* %5, align 1
  %9 = icmp eq i8 %8, 8
  br i1 %9, label %10, label %11

10:                                               ; preds = %1
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %3) #20
  br label %11

11:                                               ; preds = %1, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #20
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox32HasUnsplittableScrollingOverflowEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = trunc i96 %7 to i32
  %9 = icmp slt i32 %8, 0
  %10 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutBox"*)***
  %11 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %10, align 8
  br i1 %9, label %12, label %16

12:                                               ; preds = %1
  %13 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %11, i64 174
  %14 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::LayoutBox"* %0) #20
  br i1 %15, label %20, label %99

16:                                               ; preds = %1
  %17 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %11, i64 173
  %18 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::LayoutBox"* %0) #20
  br i1 %19, label %20, label %99

20:                                               ; preds = %12, %16
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %24, label %31

24:                                               ; preds = %20, %24
  %25 = phi %"class.blink::LayoutObject"* [ %27, %24 ], [ %4, %20 ]
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 7
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 6, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = icmp eq %"class.blink::Node"* %29, null
  br i1 %30, label %24, label %31

31:                                               ; preds = %24, %20
  %32 = phi %"class.blink::Node"* [ %22, %20 ], [ %29, %24 ]
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %36, i64 0, i32 31
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 2
  br i1 %39, label %99, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %42 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %42, i64 0, i32 0, i32 9
  %44 = bitcast [20 x i8]* %43 to i160*
  %45 = load i160, i160* %44, align 8
  %46 = and i160 %45, 15211807202738752817960438464512
  %47 = icmp eq i160 %46, 0
  %48 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %42, i64 0, i32 0, i32 5, i32 0, i32 0
  %49 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %49, i64 0, i32 3
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %49, i64 0, i32 8
  %52 = select i1 %47, %"class.blink::Length"* %50, %"class.blink::Length"* %51
  %53 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %52, i64 0, i32 2
  %54 = load i8, i8* %53, align 1
  switch i8 %54, label %55 [
    i8 2, label %99
    i8 1, label %99
    i8 8, label %99
  ]

55:                                               ; preds = %40
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %49, i64 0, i32 4
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %49, i64 0, i32 5
  %58 = select i1 %47, %"class.blink::Length"* %56, %"class.blink::Length"* %57
  %59 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %58, i64 0, i32 2
  %60 = load i8, i8* %59, align 1
  switch i8 %60, label %79 [
    i8 8, label %61
    i8 1, label %61
    i8 2, label %99
  ]

61:                                               ; preds = %55, %55
  %62 = bitcast i64* %2 to %"class.blink::Length"*
  %63 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #20
  %64 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %62, i64 0, i32 2
  store i64 -6196951987750174620, i64* %2, align 8
  %65 = call i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"* %0, %"class.blink::Length"* nonnull dereferenceable(8) %62) #20
  %66 = icmp eq i32 %65, -64
  %67 = load i8, i8* %64, align 1
  %68 = icmp eq i8 %67, 8
  br i1 %68, label %69, label %70

69:                                               ; preds = %61
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %62) #20
  br label %70

70:                                               ; preds = %61, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #20
  br i1 %66, label %71, label %99

71:                                               ; preds = %70
  %72 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %41, align 8
  %73 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %72, i64 0, i32 0, i32 9
  %74 = bitcast [20 x i8]* %73 to i160*
  %75 = load i160, i160* %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %72, i64 0, i32 0, i32 5, i32 0, i32 0
  %77 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %76, align 8
  %78 = and i160 %75, 15211807202738752817960438464512
  br label %79

79:                                               ; preds = %71, %55
  %80 = phi i160 [ %78, %71 ], [ %46, %55 ]
  %81 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %77, %71 ], [ %49, %55 ]
  %82 = icmp eq i160 %80, 0
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %81, i64 0, i32 6
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %81, i64 0, i32 7
  %85 = select i1 %82, %"class.blink::Length"* %83, %"class.blink::Length"* %84
  %86 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %85, i64 0, i32 2
  %87 = load i8, i8* %86, align 1
  switch i8 %87, label %99 [
    i8 8, label %88
    i8 1, label %88
    i8 2, label %98
  ]

88:                                               ; preds = %79, %79
  %89 = bitcast i64* %3 to %"class.blink::Length"*
  %90 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #20
  %91 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %89, i64 0, i32 2
  store i64 -6196951987750174620, i64* %3, align 8
  %92 = call i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"* %0, %"class.blink::Length"* nonnull dereferenceable(8) %89) #20
  %93 = icmp ne i32 %92, -64
  %94 = load i8, i8* %91, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %97

96:                                               ; preds = %88
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %89) #20
  br label %97

97:                                               ; preds = %88, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #20
  br label %99

98:                                               ; preds = %79
  br label %99

99:                                               ; preds = %70, %79, %98, %55, %40, %40, %40, %97, %31, %12, %16
  %100 = phi i1 [ false, %16 ], [ false, %12 ], [ false, %31 ], [ true, %70 ], [ %93, %97 ], [ false, %79 ], [ true, %40 ], [ true, %40 ], [ true, %40 ], [ true, %55 ], [ true, %98 ]
  ret i1 %100
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE(%"class.blink::LayoutBox"*, i32) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 1073741824
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %9, label %245

9:                                                ; preds = %2
  %10 = and i96 %6, 16777216
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %12, label %57

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %57, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 12
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %57

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = bitcast %"class.blink::Node"* %14 to i1 (%"class.blink::Element"*)***
  %24 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %24, i64 124
  %26 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::Element"* nonnull %22) #20
  %28 = load i32, i32* %17, align 8
  %29 = and i32 %28, 48
  %30 = icmp eq i32 %29, 0
  br i1 %27, label %31, label %32

31:                                               ; preds = %21
  br i1 %30, label %45, label %245

32:                                               ; preds = %21
  br i1 %30, label %33, label %57

33:                                               ; preds = %32
  %34 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names7kImgTagE, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 1, i32 2
  %38 = bitcast %"class.blink::Member.318"* %37 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %41, %43
  br i1 %44, label %245, label %57

45:                                               ; preds = %31
  %46 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE, align 8
  %47 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 1, i32 2
  %50 = bitcast %"class.blink::Member.318"* %49 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %51 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %51, i64 0, i32 3, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %53, %55
  br i1 %56, label %57, label %245

57:                                               ; preds = %45, %9, %12, %16, %32, %33
  %58 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasUnsplittableScrollingOverflowEv(%"class.blink::LayoutBox"* %0)
  br i1 %58, label %245, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %61 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %60, align 8
  %62 = icmp eq %"class.blink::LayoutObject"* %61, null
  br i1 %62, label %79, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 5, i32 0
  %65 = bitcast %"class.blink::ComputedStyle"** %64 to %"class.blink::ComputedStyleBase"**
  %66 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %66, i64 0, i32 9
  %68 = bitcast [20 x i8]* %67 to i160*
  %69 = load i160, i160* %68, align 8
  %70 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %71 = bitcast %"class.blink::ComputedStyle"** %70 to %"class.blink::ComputedStyleBase"**
  %72 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %72, i64 0, i32 9
  %74 = bitcast [20 x i8]* %73 to i160*
  %75 = load i160, i160* %74, align 8
  %76 = xor i160 %75, %69
  %77 = and i160 %76, 15211807202738752817960438464512
  %78 = icmp eq i160 %77, 0
  br i1 %78, label %79, label %245

79:                                               ; preds = %63, %59
  %80 = load i96, i96* %5, align 4
  %81 = and i96 %80, 113336795588871485128704
  %82 = icmp eq i96 %81, 75557863725914323419136
  br i1 %82, label %83, label %120

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %85 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %85, i64 0, i32 0, i32 9
  %87 = bitcast [20 x i8]* %86 to i160*
  %88 = load i160, i160* %87, align 8
  %89 = and i160 %88, 8462480737302404222943232
  %90 = icmp eq i160 %89, 1208925819614629174706176
  br i1 %90, label %91, label %120

91:                                               ; preds = %83
  %92 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %93 = load %"class.blink::Node"*, %"class.blink::Node"** %92, align 8
  %94 = icmp eq %"class.blink::Node"* %93, null
  br i1 %94, label %95, label %102

95:                                               ; preds = %91, %95
  %96 = phi %"class.blink::LayoutObject"* [ %98, %95 ], [ %3, %91 ]
  %97 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %96, i64 0, i32 7
  %98 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %98, i64 0, i32 6, i32 0, i32 0
  %100 = load %"class.blink::Node"*, %"class.blink::Node"** %99, align 8
  %101 = icmp eq %"class.blink::Node"* %100, null
  br i1 %101, label %95, label %102

102:                                              ; preds = %95, %91
  %103 = phi %"class.blink::Node"* [ %93, %91 ], [ %100, %95 ]
  %104 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %103, i64 0, i32 3, i32 0, i32 0
  %105 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %105, i64 0, i32 2, i32 0, i32 0
  %107 = load %"class.blink::Document"*, %"class.blink::Document"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %107, i64 0, i32 31
  %109 = load i32, i32* %108, align 8
  %110 = icmp eq i32 %109, 2
  br i1 %110, label %111, label %120

111:                                              ; preds = %102
  %112 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %113 = icmp eq %"class.blink::LayoutObject"* %112, null
  br i1 %113, label %120, label %114

114:                                              ; preds = %111
  %115 = bitcast %"class.blink::LayoutObject"* %112 to i1 (%"class.blink::LayoutObject"*, i32)***
  %116 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %115, align 8
  %117 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %116, i64 92
  %118 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %117, align 8
  %119 = tail call zeroext i1 %118(%"class.blink::LayoutObject"* nonnull %112, i32 55) #20
  br i1 %119, label %245, label %120

120:                                              ; preds = %111, %79, %114, %102, %83
  %121 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %122 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %122, i64 0, i32 0, i32 3, i32 0, i32 0
  %124 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %124, i64 0, i32 2, i32 0, i32 0
  %126 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %126, i64 0, i32 2, i32 0, i32 0
  %128 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %128, i64 0, i32 45
  %130 = load i32, i32* %129, align 4
  %131 = and i32 %130, 24
  %132 = icmp eq i32 %131, 24
  br i1 %132, label %133, label %178

133:                                              ; preds = %120
  %134 = load i96, i96* %5, align 4
  %135 = and i96 %134, 1207959552
  %136 = icmp eq i96 %135, 134217728
  br i1 %136, label %178, label %137

137:                                              ; preds = %133
  %138 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %139 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %138, align 8
  %140 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %139, i64 92
  %141 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %140, align 8
  %142 = tail call zeroext i1 %141(%"class.blink::LayoutObject"* %3, i32 43) #20
  br i1 %142, label %178, label %143

143:                                              ; preds = %137
  %144 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %138, align 8
  %145 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %144, i64 92
  %146 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %145, align 8
  %147 = tail call zeroext i1 %146(%"class.blink::LayoutObject"* %3, i32 46) #20
  br i1 %147, label %168, label %148

148:                                              ; preds = %143
  %149 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %138, align 8
  %150 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %149, i64 92
  %151 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %150, align 8
  %152 = tail call zeroext i1 %151(%"class.blink::LayoutObject"* %3, i32 48) #20
  br i1 %152, label %168, label %153

153:                                              ; preds = %148
  %154 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %138, align 8
  %155 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %154, i64 92
  %156 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %155, align 8
  %157 = tail call zeroext i1 %156(%"class.blink::LayoutObject"* %3, i32 45) #20
  br i1 %157, label %168, label %158

158:                                              ; preds = %153
  %159 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %138, align 8
  %160 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %159, i64 92
  %161 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %160, align 8
  %162 = tail call zeroext i1 %161(%"class.blink::LayoutObject"* %3, i32 49) #20
  br i1 %162, label %168, label %163

163:                                              ; preds = %158
  %164 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %138, align 8
  %165 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %164, i64 92
  %166 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %165, align 8
  %167 = tail call zeroext i1 %166(%"class.blink::LayoutObject"* %3, i32 50) #20
  br i1 %167, label %168, label %173

168:                                              ; preds = %163, %158, %153, %148, %143
  %169 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %138, align 8
  %170 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %169, i64 92
  %171 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %170, align 8
  %172 = tail call zeroext i1 %171(%"class.blink::LayoutObject"* %3, i32 45) #20
  br i1 %172, label %173, label %178

173:                                              ; preds = %163, %168
  %174 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %138, align 8
  %175 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %174, i64 92
  %176 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %175, align 8
  %177 = tail call zeroext i1 %176(%"class.blink::LayoutObject"* %3, i32 44) #20
  br i1 %177, label %178, label %245

178:                                              ; preds = %173, %133, %137, %168, %120
  %179 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %180 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %179, align 8
  %181 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %180, i64 92
  %182 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %181, align 8
  %183 = tail call zeroext i1 %182(%"class.blink::LayoutObject"* %3, i32 9) #20
  br i1 %183, label %245, label %184

184:                                              ; preds = %178
  %185 = icmp eq i32 %1, 2
  br i1 %185, label %194, label %186

186:                                              ; preds = %184
  %187 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %188 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %187, align 8
  %189 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %188, i64 28
  %190 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %189, align 8
  %191 = tail call zeroext i1 %190(%"class.blink::LayoutObject"* %3) #20
  %192 = icmp eq i32 %1, 1
  %193 = xor i1 %192, %191
  br i1 %193, label %245, label %194

194:                                              ; preds = %184, %186
  %195 = bitcast %"class.blink::ComputedStyle"** %121 to %"class.blink::ComputedStyleBase"**
  %196 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %195, align 8
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %196, i64 0, i32 9
  %198 = bitcast [20 x i8]* %197 to i160*
  %199 = load i160, i160* %198, align 8
  %200 = lshr i160 %199, 62
  %201 = trunc i160 %200 to i32
  %202 = and i32 %201, 3
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %194
  %205 = load i96, i96* %5, align 4
  %206 = and i96 %205, 1099511627776
  %207 = icmp eq i96 %206, 0
  br i1 %207, label %210, label %208

208:                                              ; preds = %204
  %209 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %3) #20
  br label %210

210:                                              ; preds = %208, %204
  %211 = phi %"class.blink::LayoutFlowThread"* [ %209, %208 ], [ null, %204 ]
  %212 = icmp eq i32 %202, 3
  br i1 %212, label %213, label %215

213:                                              ; preds = %210
  %214 = icmp eq %"class.blink::LayoutFlowThread"* %211, null
  br i1 %214, label %245, label %241

215:                                              ; preds = %210
  %216 = icmp eq i32 %202, 1
  %217 = icmp ne %"class.blink::LayoutFlowThread"* %211, null
  %218 = and i1 %216, %217
  br i1 %218, label %241, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %221 = load %"class.blink::Node"*, %"class.blink::Node"** %220, align 8
  %222 = icmp eq %"class.blink::Node"* %221, null
  br i1 %222, label %223, label %230

223:                                              ; preds = %219, %223
  %224 = phi %"class.blink::LayoutObject"* [ %226, %223 ], [ %3, %219 ]
  %225 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %224, i64 0, i32 7
  %226 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %225, align 8
  %227 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %226, i64 0, i32 6, i32 0, i32 0
  %228 = load %"class.blink::Node"*, %"class.blink::Node"** %227, align 8
  %229 = icmp eq %"class.blink::Node"* %228, null
  br i1 %229, label %223, label %230

230:                                              ; preds = %223, %219
  %231 = phi %"class.blink::Node"* [ %221, %219 ], [ %228, %223 ]
  %232 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %231, i64 0, i32 3, i32 0, i32 0
  %233 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %232, align 8
  %234 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %233, i64 0, i32 2, i32 0, i32 0
  %235 = load %"class.blink::Document"*, %"class.blink::Document"** %234, align 8
  %236 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %235, i64 0, i32 113
  %237 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %236, align 8
  %238 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %237, i64 0, i32 4, i32 0, i32 0, i32 0
  %239 = load %"class.blink::ViewFragmentationContext"*, %"class.blink::ViewFragmentationContext"** %238, align 8
  %240 = icmp eq %"class.blink::ViewFragmentationContext"* %239, null
  br i1 %240, label %245, label %241

241:                                              ; preds = %230, %215, %213
  %242 = add nsw i32 %202, -1
  %243 = icmp ult i32 %242, 3
  %244 = select i1 %243, i32 2, i32 0
  br label %245

245:                                              ; preds = %241, %230, %213, %194, %45, %173, %63, %31, %2, %33, %186, %57, %114, %178
  %246 = phi i32 [ 1, %178 ], [ 1, %173 ], [ 1, %114 ], [ 1, %63 ], [ 1, %57 ], [ 1, %45 ], [ 1, %186 ], [ 1, %33 ], [ 1, %2 ], [ 1, %31 ], [ %244, %241 ], [ 0, %230 ], [ 0, %213 ], [ 0, %194 ]
  ret i32 %246
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBox"*, i1 zeroext, i32, i32) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 1073741824
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %64, label %10

10:                                               ; preds = %4
  %11 = icmp eq i32 %2, 0
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %13 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %14 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %13, align 8
  br i1 %11, label %15, label %40

15:                                               ; preds = %10
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, i64 127
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBoxModelObject"* %12) #20
  %19 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %13, align 8
  %20 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %19, i64 128
  %21 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %20, align 8
  %22 = tail call i32 %21(%"class.blink::LayoutBoxModelObject"* %12) #20
  %23 = icmp slt i32 %22, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %18, i32 %22) #20
  %26 = extractvalue { i32, i1 } %25, 1
  %27 = extractvalue { i32, i1 } %25, 0
  %28 = select i1 %26, i32 %24, i32 %27, !prof !2
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %30 = bitcast %"class.blink::LayoutSize"* %29 to i64*
  %31 = load i64, i64* %30, align 4
  %32 = lshr i64 %31, 32
  %33 = trunc i64 %32 to i32
  %34 = icmp slt i32 %33, 0
  %35 = select i1 %34, i32 -2147483648, i32 2147483647
  %36 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 %33) #20
  %37 = extractvalue { i32, i1 } %36, 1
  %38 = extractvalue { i32, i1 } %36, 0
  %39 = select i1 %37, i32 %35, i32 %38, !prof !2
  br label %64

40:                                               ; preds = %10
  %41 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, i64 129
  %42 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %41, align 8
  %43 = tail call i32 %42(%"class.blink::LayoutBoxModelObject"* %12) #20
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %13, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 130
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %12) #20
  %48 = icmp slt i32 %47, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %43, i32 %47) #20
  %51 = extractvalue { i32, i1 } %50, 1
  %52 = extractvalue { i32, i1 } %50, 0
  %53 = select i1 %51, i32 %49, i32 %52, !prof !2
  %54 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %55 = bitcast %"class.blink::LayoutSize"* %54 to i64*
  %56 = load i64, i64* %55, align 4
  %57 = trunc i64 %56 to i32
  %58 = icmp slt i32 %57, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %57) #20
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !2
  br label %64

64:                                               ; preds = %4, %15, %40
  %65 = phi i32 [ %39, %15 ], [ %63, %40 ], [ 0, %4 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBox"*, i32, i1 zeroext, i32, i32) unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 1073741824
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %84, label %11

11:                                               ; preds = %5
  %12 = icmp eq i32 %3, 0
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %14 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %14, align 8
  br i1 %12, label %16, label %38

16:                                               ; preds = %11
  %17 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 127
  %18 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %17, align 8
  %19 = tail call i32 %18(%"class.blink::LayoutBoxModelObject"* %13) #20
  %20 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %14, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %20, i64 128
  %22 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::LayoutBoxModelObject"* %13) #20
  %24 = icmp slt i32 %23, 0
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %23) #20
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !2
  %30 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %31 = bitcast %"class.blink::LayoutSize"* %30 to i64*
  %32 = load i64, i64* %31, align 4
  %33 = lshr i64 %32, 32
  %34 = trunc i64 %33 to i32
  %35 = icmp slt i32 %34, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %29, i32 %34) #20
  br label %59

38:                                               ; preds = %11
  %39 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 129
  %40 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %39, align 8
  %41 = tail call i32 %40(%"class.blink::LayoutBoxModelObject"* %13) #20
  %42 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %14, align 8
  %43 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %42, i64 130
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %43, align 8
  %45 = tail call i32 %44(%"class.blink::LayoutBoxModelObject"* %13) #20
  %46 = icmp slt i32 %45, 0
  %47 = select i1 %46, i32 -2147483648, i32 2147483647
  %48 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %41, i32 %45) #20
  %49 = extractvalue { i32, i1 } %48, 1
  %50 = extractvalue { i32, i1 } %48, 0
  %51 = select i1 %49, i32 %47, i32 %50, !prof !2
  %52 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %53 = bitcast %"class.blink::LayoutSize"* %52 to i64*
  %54 = load i64, i64* %53, align 4
  %55 = trunc i64 %54 to i32
  %56 = icmp slt i32 %55, 0
  %57 = select i1 %56, i32 -2147483648, i32 2147483647
  %58 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %51, i32 %55) #20
  br label %59

59:                                               ; preds = %38, %16
  %60 = phi { i32, i1 } [ %58, %38 ], [ %37, %16 ]
  %61 = phi i32 [ %57, %38 ], [ %36, %16 ]
  %62 = extractvalue { i32, i1 } %60, 1
  %63 = extractvalue { i32, i1 } %60, 0
  %64 = select i1 %62, i32 %61, i32 %63
  %65 = icmp eq i32 %1, 0
  br i1 %65, label %84, label %66

66:                                               ; preds = %59
  %67 = sdiv i32 %64, 2
  %68 = sext i32 %67 to i64
  %69 = tail call i1 @llvm.is.constant.i64(i64 %68) #20
  br i1 %69, label %76, label %70

70:                                               ; preds = %66
  %71 = icmp slt i32 %64, -1
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = add nsw i64 %68, 2147483648
  %74 = icmp ult i64 %73, 4294967296
  %75 = select i1 %74, i32 %67, i32 %72, !prof !3
  br label %76

76:                                               ; preds = %66, %70
  %77 = phi i32 [ %75, %70 ], [ %67, %66 ]
  %78 = icmp sgt i32 %77, -1
  %79 = select i1 %78, i32 -2147483648, i32 2147483647
  %80 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %64, i32 %77) #20
  %81 = extractvalue { i32, i1 } %80, 1
  %82 = extractvalue { i32, i1 } %80, 0
  %83 = select i1 %81, i32 %79, i32 %82, !prof !2
  br label %84

84:                                               ; preds = %5, %76, %59
  %85 = phi i32 [ %83, %76 ], [ %64, %59 ], [ 0, %5 ]
  ret i32 %85
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::PaintLayer"* @_ZNK5blink9LayoutBox27EnclosingFloatPaintingLayerEv(%"class.blink::LayoutBox"* readonly) local_unnamed_addr #10 align 2 {
  %2 = icmp eq %"class.blink::LayoutBox"* %0, null
  br i1 %2, label %30, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  br label %5

5:                                                ; preds = %3, %26
  %6 = phi %"class.blink::LayoutObject"* [ %28, %26 ], [ %4, %3 ]
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 4362076160
  %11 = icmp eq i96 %10, 4362076160
  br i1 %11, label %12, label %26

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %14 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %13, align 8
  %15 = icmp eq %"struct.blink::FragmentData::RareData"* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %17, align 8
  %19 = icmp eq %"class.blink::PaintLayer"* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %18, i64 0, i32 1
  %22 = bitcast [6 x i8]* %21 to i48*
  %23 = load i48, i48* %22, align 1
  %24 = and i48 %23, 1
  %25 = icmp eq i48 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %20, %12, %5, %16
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 7
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = icmp eq %"class.blink::LayoutObject"* %28, null
  br i1 %29, label %30, label %5

30:                                               ; preds = %26, %20, %1
  %31 = phi %"class.blink::PaintLayer"* [ null, %1 ], [ %18, %20 ], [ null, %26 ]
  ret %"class.blink::PaintLayer"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink9LayoutBox39LogicalVisualOverflowRectForPropagationEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #20
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = extractvalue { i64, i64 } %2, 1
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 5070602400912917605986812821504
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = and i160 %18, 15211807202738752817960438464512
  %20 = icmp eq i160 %19, 5070602400912917605986812821504
  %21 = xor i1 %13, %20
  br i1 %21, label %22, label %44

22:                                               ; preds = %1
  %23 = trunc i64 %3 to i32
  %24 = and i64 %3, -4294967296
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %26 = bitcast %"class.blink::LayoutSize"* %25 to i64*
  %27 = load i64, i64* %26, align 4
  %28 = trunc i64 %27 to i32
  %29 = trunc i64 %4 to i32
  %30 = icmp slt i32 %29, 0
  %31 = select i1 %30, i32 -2147483648, i32 2147483647
  %32 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %23, i32 %29) #20
  %33 = extractvalue { i32, i1 } %32, 1
  %34 = extractvalue { i32, i1 } %32, 0
  %35 = select i1 %33, i32 %31, i32 %34, !prof !2
  %36 = icmp sgt i32 %35, -1
  %37 = select i1 %36, i32 -2147483648, i32 2147483647
  %38 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %28, i32 %35) #20
  %39 = extractvalue { i32, i1 } %38, 1
  %40 = extractvalue { i32, i1 } %38, 0
  %41 = select i1 %39, i32 %37, i32 %40, !prof !2
  %42 = zext i32 %41 to i64
  %43 = or i64 %24, %42
  br label %44

44:                                               ; preds = %1, %22
  %45 = phi i64 [ %43, %22 ], [ %3, %1 ]
  %46 = icmp eq i160 %12, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %44
  %48 = lshr i64 %45, 32
  %49 = shl i64 %45, 32
  %50 = or i64 %49, %48
  %51 = lshr i64 %4, 32
  %52 = shl i64 %4, 32
  %53 = or i64 %52, %51
  br label %54

54:                                               ; preds = %44, %47
  %55 = phi i64 [ %50, %47 ], [ %45, %44 ]
  %56 = phi i64 [ %53, %47 ], [ %4, %44 ]
  %57 = insertvalue { i64, i64 } undef, i64 %55, 0
  %58 = insertvalue { i64, i64 } %57, i64 %56, 1
  ret { i64, i64 } %58
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink9LayoutBox26RectForOverflowPropagationERKNS_10LayoutRectE(%"class.blink::LayoutBox"* nocapture readonly, %"class.blink::LayoutRect"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = and i160 %16, 15211807202738752817960438464512
  %18 = icmp eq i160 %17, 5070602400912917605986812821504
  %19 = xor i1 %11, %18
  %20 = bitcast %"class.blink::LayoutRect"* %1 to i64*
  %21 = load i64, i64* %20, align 4
  br i1 %19, label %22, label %45

22:                                               ; preds = %2
  %23 = trunc i64 %21 to i32
  %24 = and i64 %21, -4294967296
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %26 = bitcast %"class.blink::LayoutSize"* %25 to i64*
  %27 = load i64, i64* %26, align 4
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, 0
  %32 = select i1 %31, i32 -2147483648, i32 2147483647
  %33 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %23, i32 %30) #20
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 %32, i32 %35, !prof !2
  %37 = icmp sgt i32 %36, -1
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %28, i32 %36) #20
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !2
  %43 = zext i32 %42 to i64
  %44 = or i64 %24, %43
  br label %45

45:                                               ; preds = %2, %22
  %46 = phi i64 [ %44, %22 ], [ %21, %2 ]
  %47 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %1, i64 0, i32 1
  %48 = bitcast %"class.blink::LayoutSize"* %47 to i64*
  %49 = load i64, i64* %48, align 4
  %50 = insertvalue { i64, i64 } undef, i64 %46, 0
  %51 = insertvalue { i64, i64 } %50, i64 %49, 1
  ret { i64, i64 } %51
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink9LayoutBox39LogicalLayoutOverflowRectForPropagationEPNS_12LayoutObjectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*) local_unnamed_addr #4 align 2 {
  %3 = tail call { i64, i64 } @_ZNK5blink9LayoutBox32LayoutOverflowRectForPropagationEPNS_12LayoutObjectE(%"class.blink::LayoutBox"* %0, %"class.blink::LayoutObject"* %1)
  %4 = extractvalue { i64, i64 } %3, 0
  %5 = extractvalue { i64, i64 } %3, 1
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 7
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 15211807202738752817960438464512
  %14 = icmp eq i160 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %2
  %16 = lshr i64 %4, 32
  %17 = shl i64 %4, 32
  %18 = or i64 %17, %16
  %19 = lshr i64 %5, 32
  %20 = shl i64 %5, 32
  %21 = or i64 %20, %19
  br label %22

22:                                               ; preds = %2, %15
  %23 = phi i64 [ %18, %15 ], [ %4, %2 ]
  %24 = phi i64 [ %21, %15 ], [ %5, %2 ]
  %25 = insertvalue { i64, i64 } undef, i64 %23, 0
  %26 = insertvalue { i64, i64 } %25, i64 %24, 1
  ret { i64, i64 } %26
}

declare void @_ZN5blink10LayoutRect9IntersectERKS0_(%"class.blink::LayoutRect"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZN5blink10LayoutRect5UniteERKS0_(%"class.blink::LayoutRect"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #5

declare i64 @_ZNK5blink20LayoutBoxModelObject22RelativePositionOffsetEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #5

declare void @_ZNK5blink12LayoutObject25GetTransformFromContainerEPKS0_RKNS_14PhysicalOffsetERNS_20TransformationMatrixEPKNS_12PhysicalSizeE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::TransformationMatrix"* dereferenceable(128), %"struct.blink::PhysicalSize"*) local_unnamed_addr #5

declare { i64, i64 } @_ZNK5blink20TransformationMatrix7MapRectERKNS_10LayoutRectE(%"class.blink::TransformationMatrix"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink9LayoutBox11OffsetPointEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) local_unnamed_addr #4 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"struct.blink::PhysicalOffset"*
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #20
  %7 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %8 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %8, i64 147
  %10 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %9, align 8
  %11 = tail call %"class.blink::LayoutBox"* %10(%"class.blink::LayoutBox"* %0) #20
  %12 = icmp eq %"class.blink::LayoutBox"* %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %11, i64 0, i32 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = and i160 %18, 15211807202738752817960438464512
  %20 = icmp eq i160 %19, 5070602400912917605986812821504
  br i1 %20, label %26, label %21, !prof !2

21:                                               ; preds = %13, %2
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::LayoutRect"* %22 to i64*
  %24 = load i64, i64* %23, align 4
  %25 = trunc i64 %24 to i32
  br label %51

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %11, i64 0, i32 2, i32 1
  %28 = bitcast %"class.blink::LayoutSize"* %27 to i64*
  %29 = load i64, i64* %28, align 4
  %30 = trunc i64 %29 to i32
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %32 = bitcast %"class.blink::LayoutSize"* %31 to i64*
  %33 = load i64, i64* %32, align 4
  %34 = trunc i64 %33 to i32
  %35 = icmp sgt i32 %34, -1
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %30, i32 %34) #20
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  %41 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %42 = bitcast %"class.blink::LayoutRect"* %41 to i64*
  %43 = load i64, i64* %42, align 4
  %44 = trunc i64 %43 to i32
  %45 = icmp sgt i32 %44, -1
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %40, i32 %44) #20
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !2
  br label %51

51:                                               ; preds = %21, %26
  %52 = phi i32 [ %25, %21 ], [ %50, %26 ]
  %53 = phi i64 [ %24, %21 ], [ %43, %26 ]
  %54 = and i64 %53, -4294967296
  %55 = zext i32 %52 to i64
  %56 = or i64 %54, %55
  store i64 %56, i64* %3, align 8
  %57 = call i64 @_ZNK5blink20LayoutBoxModelObject26AdjustedPositionRelativeToERKNS_14PhysicalOffsetEPKNS_7ElementE(%"class.blink::LayoutBoxModelObject"* %5, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %4, %"class.blink::Element"* %1) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #20
  ret i64 %57
}

declare i64 @_ZNK5blink20LayoutBoxModelObject26AdjustedPositionRelativeToERKNS_14PhysicalOffsetEPKNS_7ElementE(%"class.blink::LayoutBoxModelObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #4 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"struct.blink::PhysicalOffset"*
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #20
  %7 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %8 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %8, i64 147
  %10 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %9, align 8
  %11 = tail call %"class.blink::LayoutBox"* %10(%"class.blink::LayoutBox"* %0) #20
  %12 = icmp eq %"class.blink::LayoutBox"* %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %11, i64 0, i32 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = and i160 %18, 15211807202738752817960438464512
  %20 = icmp eq i160 %19, 5070602400912917605986812821504
  br i1 %20, label %26, label %21, !prof !2

21:                                               ; preds = %13, %2
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::LayoutRect"* %22 to i64*
  %24 = load i64, i64* %23, align 4
  %25 = trunc i64 %24 to i32
  br label %51

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %11, i64 0, i32 2, i32 1
  %28 = bitcast %"class.blink::LayoutSize"* %27 to i64*
  %29 = load i64, i64* %28, align 4
  %30 = trunc i64 %29 to i32
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %32 = bitcast %"class.blink::LayoutSize"* %31 to i64*
  %33 = load i64, i64* %32, align 4
  %34 = trunc i64 %33 to i32
  %35 = icmp sgt i32 %34, -1
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %30, i32 %34) #20
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  %41 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %42 = bitcast %"class.blink::LayoutRect"* %41 to i64*
  %43 = load i64, i64* %42, align 4
  %44 = trunc i64 %43 to i32
  %45 = icmp sgt i32 %44, -1
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %40, i32 %44) #20
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !2
  br label %51

51:                                               ; preds = %21, %26
  %52 = phi i32 [ %25, %21 ], [ %50, %26 ]
  %53 = phi i64 [ %24, %21 ], [ %43, %26 ]
  %54 = and i64 %53, -4294967296
  %55 = zext i32 %52 to i64
  %56 = or i64 %54, %55
  store i64 %56, i64* %3, align 8
  %57 = call i64 @_ZNK5blink20LayoutBoxModelObject26AdjustedPositionRelativeToERKNS_14PhysicalOffsetEPKNS_7ElementE(%"class.blink::LayoutBoxModelObject"* %5, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %4, %"class.blink::Element"* %1) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #20
  %58 = trunc i64 %57 to i32
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #4 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"struct.blink::PhysicalOffset"*
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #20
  %7 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %8 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %8, i64 147
  %10 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %9, align 8
  %11 = tail call %"class.blink::LayoutBox"* %10(%"class.blink::LayoutBox"* %0) #20
  %12 = icmp eq %"class.blink::LayoutBox"* %11, null
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %11, i64 0, i32 0, i32 0, i32 5, i32 0
  %15 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %15, i64 0, i32 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = and i160 %18, 15211807202738752817960438464512
  %20 = icmp eq i160 %19, 5070602400912917605986812821504
  br i1 %20, label %26, label %21, !prof !2

21:                                               ; preds = %13, %2
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::LayoutRect"* %22 to i64*
  %24 = load i64, i64* %23, align 4
  %25 = trunc i64 %24 to i32
  br label %51

26:                                               ; preds = %13
  %27 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %11, i64 0, i32 2, i32 1
  %28 = bitcast %"class.blink::LayoutSize"* %27 to i64*
  %29 = load i64, i64* %28, align 4
  %30 = trunc i64 %29 to i32
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %32 = bitcast %"class.blink::LayoutSize"* %31 to i64*
  %33 = load i64, i64* %32, align 4
  %34 = trunc i64 %33 to i32
  %35 = icmp sgt i32 %34, -1
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %30, i32 %34) #20
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  %41 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %42 = bitcast %"class.blink::LayoutRect"* %41 to i64*
  %43 = load i64, i64* %42, align 4
  %44 = trunc i64 %43 to i32
  %45 = icmp sgt i32 %44, -1
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %40, i32 %44) #20
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !2
  br label %51

51:                                               ; preds = %21, %26
  %52 = phi i32 [ %25, %21 ], [ %50, %26 ]
  %53 = phi i64 [ %24, %21 ], [ %43, %26 ]
  %54 = and i64 %53, -4294967296
  %55 = zext i32 %52 to i64
  %56 = or i64 %54, %55
  store i64 %56, i64* %3, align 8
  %57 = call i64 @_ZNK5blink20LayoutBoxModelObject26AdjustedPositionRelativeToERKNS_14PhysicalOffsetEPKNS_7ElementE(%"class.blink::LayoutBoxModelObject"* %5, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %4, %"class.blink::Element"* %1) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #20
  %58 = lshr i64 %57, 32
  %59 = trunc i64 %58 to i32
  ret i32 %59
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBox"* @_ZNK5blink9LayoutBox17LocationContainerEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %4 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %4, i64 92
  %6 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::LayoutObject"* %2, i32 58) #20
  br i1 %7, label %8, label %13

8:                                                ; preds = %1
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %3, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %9, i64 92
  %11 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::LayoutObject"* %2, i32 67) #20
  br i1 %12, label %13, label %29

13:                                               ; preds = %8, %1
  %14 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %13, %23
  %17 = phi %"class.blink::LayoutObject"* [ %24, %23 ], [ %14, %13 ]
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = and i96 %20, 67108864
  %22 = icmp eq i96 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %16
  %24 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %17, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %25 = icmp eq %"class.blink::LayoutObject"* %24, null
  br i1 %25, label %26, label %16

26:                                               ; preds = %16, %23, %13
  %27 = phi %"class.blink::LayoutObject"* [ null, %13 ], [ null, %23 ], [ %17, %16 ]
  %28 = bitcast %"class.blink::LayoutObject"* %27 to %"class.blink::LayoutBox"*
  br label %29

29:                                               ; preds = %8, %26
  %30 = phi %"class.blink::LayoutBox"* [ %28, %26 ], [ null, %8 ]
  ret %"class.blink::LayoutBox"* %30
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox23HasRelativeLogicalWidthEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 3
  %13 = select i1 %8, %"class.blink::Length"* %11, %"class.blink::Length"* %12
  %14 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 2
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %16 [
    i8 8, label %31
    i8 1, label %31
  ]

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 7
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 6
  %19 = select i1 %8, %"class.blink::Length"* %17, %"class.blink::Length"* %18
  %20 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %19, i64 0, i32 2
  %21 = load i8, i8* %20, align 1
  switch i8 %21, label %22 [
    i8 8, label %31
    i8 1, label %31
  ]

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 5
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 4
  %25 = select i1 %8, %"class.blink::Length"* %23, %"class.blink::Length"* %24
  %26 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %25, i64 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 1
  %29 = icmp eq i8 %27, 8
  %30 = or i1 %28, %29
  br label %31

31:                                               ; preds = %16, %16, %1, %1, %22
  %32 = phi i1 [ true, %16 ], [ true, %1 ], [ %30, %22 ], [ true, %1 ], [ true, %16 ]
  ret i1 %32
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 8
  %13 = select i1 %8, %"class.blink::Length"* %11, %"class.blink::Length"* %12
  %14 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 2
  %15 = load i8, i8* %14, align 1
  switch i8 %15, label %16 [
    i8 8, label %31
    i8 1, label %31
  ]

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 6
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 7
  %19 = select i1 %8, %"class.blink::Length"* %17, %"class.blink::Length"* %18
  %20 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %19, i64 0, i32 2
  %21 = load i8, i8* %20, align 1
  switch i8 %21, label %22 [
    i8 8, label %31
    i8 1, label %31
  ]

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 4
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 5
  %25 = select i1 %8, %"class.blink::Length"* %23, %"class.blink::Length"* %24
  %26 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %25, i64 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 1
  %29 = icmp eq i8 %27, 8
  %30 = or i1 %28, %29
  br label %31

31:                                               ; preds = %16, %16, %1, %1, %22
  %32 = phi i1 [ true, %16 ], [ true, %1 ], [ %30, %22 ], [ true, %1 ], [ true, %16 ]
  ret i1 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZN5blink9LayoutBox30SplitAnonymousBoxesAroundChildEPNS_12LayoutObjectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 7
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  %6 = icmp eq %"class.blink::LayoutObject"* %5, %3
  br i1 %6, label %402, label %7

7:                                                ; preds = %2, %321
  %8 = phi %"class.blink::LayoutObject"* [ %325, %321 ], [ %5, %2 ]
  %9 = phi %"class.blink::LayoutObject"* [ %323, %321 ], [ %1, %2 ]
  %10 = phi %"class.blink::LayoutBox"* [ %322, %321 ], [ null, %2 ]
  %11 = bitcast %"class.blink::LayoutObject"* %8 to %"class.blink::LayoutBox"*
  %12 = bitcast %"class.blink::LayoutObject"* %8 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %13 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %13, i64 13
  %15 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %14, align 8
  %16 = tail call %"class.blink::LayoutObjectChildList"* %15(%"class.blink::LayoutObject"* %8) #20
  %17 = icmp eq %"class.blink::LayoutObjectChildList"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %16, i64 0, i32 0
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  br label %21

21:                                               ; preds = %7, %18
  %22 = phi %"class.blink::LayoutObject"* [ %20, %18 ], [ null, %7 ]
  %23 = icmp eq %"class.blink::LayoutObject"* %22, %9
  br i1 %23, label %321, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 4
  %26 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %25 to i96*
  %27 = load i96, i96* %26, align 4
  %28 = and i96 %27, 16777216
  %29 = icmp eq i96 %28, 0
  br i1 %29, label %321, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.blink::LayoutObject"* %8 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*)***
  %32 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*)** %32, i64 184
  %34 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*)** %33, align 8
  %35 = tail call %"class.blink::LayoutBox"* %34(%"class.blink::LayoutBox"* %11, %"class.blink::LayoutObject"* %3) #20
  %36 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %35, i64 0, i32 0, i32 0
  %37 = load i96, i96* %26, align 4
  %38 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %35, i64 0, i32 0, i32 0, i32 4
  %39 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %38 to i96*
  %40 = and i96 %37, 17592186044416
  %41 = load i96, i96* %39, align 4
  %42 = and i96 %41, -17592186044417
  %43 = or i96 %42, %40
  store i96 %43, i96* %39, align 4
  %44 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %45 = bitcast %"class.blink::LayoutObject"** %44 to %"class.blink::LayoutBox"**
  %46 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %46, i64 0, i32 0, i32 0
  %48 = bitcast %"class.blink::LayoutBox"* %46 to i1 (%"class.blink::LayoutObject"*, i32)***
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, i64 92
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::LayoutObject"* %47, i32 44) #20
  br i1 %52, label %53, label %67

53:                                               ; preds = %30
  %54 = icmp eq %"class.blink::LayoutBox"* %46, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %53
  %56 = bitcast %"class.blink::LayoutBox"* %46 to %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)***
  %57 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*** %56, align 8
  %58 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %57, i64 29
  %59 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %58, align 8
  %60 = tail call %"class.blink::LayoutNGTableInterface"* %59(%"class.blink::LayoutObject"* %47) #20
  br label %61

61:                                               ; preds = %55, %53
  %62 = phi %"class.blink::LayoutNGTableInterface"* [ %60, %55 ], [ null, %53 ]
  %63 = bitcast %"class.blink::LayoutNGTableInterface"* %62 to void (%"class.blink::LayoutNGTableInterface"*)***
  %64 = load void (%"class.blink::LayoutNGTableInterface"*)**, void (%"class.blink::LayoutNGTableInterface"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %64, i64 10
  %66 = load void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %65, align 8
  tail call void %66(%"class.blink::LayoutNGTableInterface"* %62) #20
  br label %86

67:                                               ; preds = %30
  %68 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %48, align 8
  %69 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %68, i64 92
  %70 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %69, align 8
  %71 = tail call zeroext i1 %70(%"class.blink::LayoutObject"* %47, i32 50) #20
  br i1 %71, label %72, label %86

72:                                               ; preds = %67
  %73 = icmp eq %"class.blink::LayoutBox"* %46, null
  br i1 %73, label %80, label %74

74:                                               ; preds = %72
  %75 = bitcast %"class.blink::LayoutBox"* %46 to %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)***
  %76 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)*** %75, align 8
  %77 = getelementptr inbounds %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)** %76, i64 30
  %78 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)** %77, align 8
  %79 = tail call %"class.blink::LayoutNGTableSectionInterface"* %78(%"class.blink::LayoutObject"* %47) #20
  br label %80

80:                                               ; preds = %74, %72
  %81 = phi %"class.blink::LayoutNGTableSectionInterface"* [ %79, %74 ], [ null, %72 ]
  %82 = bitcast %"class.blink::LayoutNGTableSectionInterface"* %81 to void (%"class.blink::LayoutNGTableSectionInterface"*)***
  %83 = load void (%"class.blink::LayoutNGTableSectionInterface"*)**, void (%"class.blink::LayoutNGTableSectionInterface"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.blink::LayoutNGTableSectionInterface"*)*, void (%"class.blink::LayoutNGTableSectionInterface"*)** %83, i64 4
  %85 = load void (%"class.blink::LayoutNGTableSectionInterface"*)*, void (%"class.blink::LayoutNGTableSectionInterface"*)** %84, align 8
  tail call void %85(%"class.blink::LayoutNGTableSectionInterface"* %81) #20
  br label %86

86:                                               ; preds = %61, %67, %80
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %47, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason21kAnonymousBlockChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #20
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %47, i8 zeroext 3) #20
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %47, i32 1) #20
  %87 = bitcast %"class.blink::LayoutBox"* %46 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %88 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %87, align 8
  %89 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %88, i64 12
  %90 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %89, align 8
  %91 = tail call %"class.blink::LayoutObjectChildList"* %90(%"class.blink::LayoutObject"* %47) #20
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 9
  %93 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %92, align 8
  tail call void @_ZN5blink21LayoutObjectChildList15InsertChildNodeEPNS_12LayoutObjectES2_S2_b(%"class.blink::LayoutObjectChildList"* %91, %"class.blink::LayoutObject"* %47, %"class.blink::LayoutObject"* %36, %"class.blink::LayoutObject"* %93, i1 zeroext true) #20
  %94 = bitcast %"class.blink::LayoutObject"* %8 to %"class.blink::LayoutBoxModelObject"*
  %95 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %35, i64 0, i32 0
  %96 = bitcast %"class.blink::LayoutObject"* %8 to void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)***
  %97 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)**, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %97, i64 144
  %99 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %98, align 8
  tail call void %99(%"class.blink::LayoutBoxModelObject"* %94, %"class.blink::LayoutBoxModelObject"* %95, %"class.blink::LayoutObject"* %9, %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"* null, i1 zeroext true) #20
  %100 = bitcast %"class.blink::LayoutBox"* %35 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %101 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %100, align 8
  %102 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %101, i64 13
  %103 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %102, align 8
  %104 = tail call %"class.blink::LayoutObjectChildList"* %103(%"class.blink::LayoutObject"* %36) #20
  %105 = icmp eq %"class.blink::LayoutObjectChildList"* %104, null
  br i1 %105, label %171, label %106

106:                                              ; preds = %86
  %107 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %104, i64 0, i32 0
  %108 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %107, align 8
  %109 = icmp eq %"class.blink::LayoutObject"* %108, null
  br i1 %109, label %171, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %108, i64 0, i32 9
  %112 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %111, align 8
  %113 = icmp eq %"class.blink::LayoutObject"* %112, null
  br i1 %113, label %114, label %171

114:                                              ; preds = %110
  %115 = bitcast %"class.blink::LayoutObject"* %108 to i1 (%"class.blink::LayoutObject"*)***
  %116 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %115, align 8
  %117 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %116, i64 24
  %118 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %117, align 8
  %119 = tail call zeroext i1 %118(%"class.blink::LayoutObject"* nonnull %108) #20
  %120 = bitcast %"class.blink::LayoutObject"* %108 to %"class.blink::LayoutBlockFlow"*
  %121 = select i1 %119, %"class.blink::LayoutBlockFlow"* %120, %"class.blink::LayoutBlockFlow"* null
  %122 = icmp eq %"class.blink::LayoutBox"* %35, null
  br i1 %122, label %131, label %123

123:                                              ; preds = %114
  %124 = bitcast %"class.blink::LayoutBox"* %35 to i1 (%"class.blink::LayoutObject"*)***
  %125 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %124, align 8
  %126 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %125, i64 24
  %127 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %126, align 8
  %128 = tail call zeroext i1 %127(%"class.blink::LayoutObject"* %36) #20
  %129 = bitcast %"class.blink::LayoutBox"* %35 to %"class.blink::LayoutBlockFlow"*
  %130 = select i1 %128, %"class.blink::LayoutBlockFlow"* %129, %"class.blink::LayoutBlockFlow"* null
  br label %131

131:                                              ; preds = %123, %114
  %132 = phi %"class.blink::LayoutBlockFlow"* [ %130, %123 ], [ null, %114 ]
  %133 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %108, i64 0, i32 4
  %134 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %133 to i96*
  %135 = load i96, i96* %134, align 4
  %136 = and i96 %135, 16777216
  %137 = icmp eq i96 %136, 0
  br i1 %137, label %171, label %138

138:                                              ; preds = %131
  %139 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %108, i64 0, i32 5, i32 0
  %140 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %140, i64 0, i32 0, i32 9
  %142 = bitcast [20 x i8]* %141 to i160*
  %143 = load i160, i160* %142, align 8
  %144 = lshr i160 %143, 32
  %145 = trunc i160 %144 to i32
  %146 = and i32 %145, 31
  switch i32 %146, label %171 [
    i32 1, label %147
    i32 14, label %147
  ]

147:                                              ; preds = %138, %138
  %148 = and i160 %143, 2113929216
  %149 = icmp eq i160 %148, 0
  br i1 %149, label %150, label %171

150:                                              ; preds = %147
  %151 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %115, align 8
  %152 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %151, i64 23
  %153 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %152, align 8
  %154 = tail call zeroext i1 %153(%"class.blink::LayoutObject"* nonnull %108) #20
  br i1 %154, label %155, label %171

155:                                              ; preds = %150
  %156 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %115, align 8
  %157 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %156, i64 25
  %158 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %157, align 8
  %159 = tail call zeroext i1 %158(%"class.blink::LayoutObject"* nonnull %108) #20
  br i1 %159, label %171, label %160

160:                                              ; preds = %155
  %161 = bitcast %"class.blink::LayoutObject"* %108 to i1 (%"class.blink::LayoutObject"*, i32)***
  %162 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %161, align 8
  %163 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %162, i64 92
  %164 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %163, align 8
  %165 = tail call zeroext i1 %164(%"class.blink::LayoutObject"* nonnull %108, i32 20) #20
  %166 = xor i1 %119, true
  %167 = or i1 %165, %166
  %168 = icmp eq %"class.blink::LayoutBlockFlow"* %132, null
  %169 = or i1 %168, %167
  br i1 %169, label %171, label %170

170:                                              ; preds = %160
  tail call void @_ZN5blink15LayoutBlockFlow27CollapseAnonymousBlockChildEPS0_(%"class.blink::LayoutBlockFlow"* nonnull %132, %"class.blink::LayoutBlockFlow"* nonnull %121) #20
  br label %171

171:                                              ; preds = %138, %131, %147, %150, %155, %86, %170, %160, %110, %106
  %172 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %12, align 8
  %173 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %172, i64 13
  %174 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %173, align 8
  %175 = tail call %"class.blink::LayoutObjectChildList"* %174(%"class.blink::LayoutObject"* %8) #20
  %176 = icmp eq %"class.blink::LayoutObjectChildList"* %175, null
  br i1 %176, label %242, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %175, i64 0, i32 0
  %179 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %178, align 8
  %180 = icmp eq %"class.blink::LayoutObject"* %179, null
  br i1 %180, label %242, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %179, i64 0, i32 9
  %183 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %182, align 8
  %184 = icmp eq %"class.blink::LayoutObject"* %183, null
  br i1 %184, label %185, label %242

185:                                              ; preds = %181
  %186 = bitcast %"class.blink::LayoutObject"* %179 to i1 (%"class.blink::LayoutObject"*)***
  %187 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %186, align 8
  %188 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %187, i64 24
  %189 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %188, align 8
  %190 = tail call zeroext i1 %189(%"class.blink::LayoutObject"* nonnull %179) #20
  %191 = bitcast %"class.blink::LayoutObject"* %179 to %"class.blink::LayoutBlockFlow"*
  %192 = select i1 %190, %"class.blink::LayoutBlockFlow"* %191, %"class.blink::LayoutBlockFlow"* null
  %193 = icmp eq %"class.blink::LayoutObject"* %8, null
  br i1 %193, label %202, label %194

194:                                              ; preds = %185
  %195 = bitcast %"class.blink::LayoutObject"* %8 to i1 (%"class.blink::LayoutObject"*)***
  %196 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %195, align 8
  %197 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %196, i64 24
  %198 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %197, align 8
  %199 = tail call zeroext i1 %198(%"class.blink::LayoutObject"* nonnull %8) #20
  %200 = bitcast %"class.blink::LayoutObject"* %8 to %"class.blink::LayoutBlockFlow"*
  %201 = select i1 %199, %"class.blink::LayoutBlockFlow"* %200, %"class.blink::LayoutBlockFlow"* null
  br label %202

202:                                              ; preds = %194, %185
  %203 = phi %"class.blink::LayoutBlockFlow"* [ %201, %194 ], [ null, %185 ]
  %204 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %179, i64 0, i32 4
  %205 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %204 to i96*
  %206 = load i96, i96* %205, align 4
  %207 = and i96 %206, 16777216
  %208 = icmp eq i96 %207, 0
  br i1 %208, label %242, label %209

209:                                              ; preds = %202
  %210 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %179, i64 0, i32 5, i32 0
  %211 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %210, align 8
  %212 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %211, i64 0, i32 0, i32 9
  %213 = bitcast [20 x i8]* %212 to i160*
  %214 = load i160, i160* %213, align 8
  %215 = lshr i160 %214, 32
  %216 = trunc i160 %215 to i32
  %217 = and i32 %216, 31
  switch i32 %217, label %242 [
    i32 1, label %218
    i32 14, label %218
  ]

218:                                              ; preds = %209, %209
  %219 = and i160 %214, 2113929216
  %220 = icmp eq i160 %219, 0
  br i1 %220, label %221, label %242

221:                                              ; preds = %218
  %222 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %186, align 8
  %223 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %222, i64 23
  %224 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %223, align 8
  %225 = tail call zeroext i1 %224(%"class.blink::LayoutObject"* nonnull %179) #20
  br i1 %225, label %226, label %242

226:                                              ; preds = %221
  %227 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %186, align 8
  %228 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %227, i64 25
  %229 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %228, align 8
  %230 = tail call zeroext i1 %229(%"class.blink::LayoutObject"* nonnull %179) #20
  br i1 %230, label %242, label %231

231:                                              ; preds = %226
  %232 = bitcast %"class.blink::LayoutObject"* %179 to i1 (%"class.blink::LayoutObject"*, i32)***
  %233 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %232, align 8
  %234 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %233, i64 92
  %235 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %234, align 8
  %236 = tail call zeroext i1 %235(%"class.blink::LayoutObject"* nonnull %179, i32 20) #20
  %237 = xor i1 %190, true
  %238 = or i1 %236, %237
  %239 = icmp eq %"class.blink::LayoutBlockFlow"* %203, null
  %240 = or i1 %239, %238
  br i1 %240, label %242, label %241

241:                                              ; preds = %231
  tail call void @_ZN5blink15LayoutBlockFlow27CollapseAnonymousBlockChildEPS0_(%"class.blink::LayoutBlockFlow"* nonnull %203, %"class.blink::LayoutBlockFlow"* nonnull %192) #20
  br label %242

242:                                              ; preds = %209, %202, %218, %221, %226, %171, %241, %231, %181, %177
  %243 = bitcast %"class.blink::LayoutObject"* %8 to i1 (%"class.blink::LayoutObject"*, i32)***
  %244 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %243, align 8
  %245 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %244, i64 92
  %246 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %245, align 8
  %247 = tail call zeroext i1 %246(%"class.blink::LayoutObject"* %8, i32 44) #20
  br i1 %247, label %248, label %262

248:                                              ; preds = %242
  %249 = icmp eq %"class.blink::LayoutObject"* %8, null
  br i1 %249, label %256, label %250

250:                                              ; preds = %248
  %251 = bitcast %"class.blink::LayoutObject"* %8 to %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)***
  %252 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*** %251, align 8
  %253 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %252, i64 29
  %254 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %253, align 8
  %255 = tail call %"class.blink::LayoutNGTableInterface"* %254(%"class.blink::LayoutObject"* nonnull %8) #20
  br label %256

256:                                              ; preds = %250, %248
  %257 = phi %"class.blink::LayoutNGTableInterface"* [ %255, %250 ], [ null, %248 ]
  %258 = bitcast %"class.blink::LayoutNGTableInterface"* %257 to void (%"class.blink::LayoutNGTableInterface"*)***
  %259 = load void (%"class.blink::LayoutNGTableInterface"*)**, void (%"class.blink::LayoutNGTableInterface"*)*** %258, align 8
  %260 = getelementptr inbounds void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %259, i64 10
  %261 = load void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %260, align 8
  tail call void %261(%"class.blink::LayoutNGTableInterface"* %257) #20
  br label %281

262:                                              ; preds = %242
  %263 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %243, align 8
  %264 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %263, i64 92
  %265 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %264, align 8
  %266 = tail call zeroext i1 %265(%"class.blink::LayoutObject"* %8, i32 50) #20
  br i1 %266, label %267, label %281

267:                                              ; preds = %262
  %268 = icmp eq %"class.blink::LayoutObject"* %8, null
  br i1 %268, label %275, label %269

269:                                              ; preds = %267
  %270 = bitcast %"class.blink::LayoutObject"* %8 to %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)***
  %271 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)*** %270, align 8
  %272 = getelementptr inbounds %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)** %271, i64 30
  %273 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)** %272, align 8
  %274 = tail call %"class.blink::LayoutNGTableSectionInterface"* %273(%"class.blink::LayoutObject"* nonnull %8) #20
  br label %275

275:                                              ; preds = %269, %267
  %276 = phi %"class.blink::LayoutNGTableSectionInterface"* [ %274, %269 ], [ null, %267 ]
  %277 = bitcast %"class.blink::LayoutNGTableSectionInterface"* %276 to void (%"class.blink::LayoutNGTableSectionInterface"*)***
  %278 = load void (%"class.blink::LayoutNGTableSectionInterface"*)**, void (%"class.blink::LayoutNGTableSectionInterface"*)*** %277, align 8
  %279 = getelementptr inbounds void (%"class.blink::LayoutNGTableSectionInterface"*)*, void (%"class.blink::LayoutNGTableSectionInterface"*)** %278, i64 4
  %280 = load void (%"class.blink::LayoutNGTableSectionInterface"*)*, void (%"class.blink::LayoutNGTableSectionInterface"*)** %279, align 8
  tail call void %280(%"class.blink::LayoutNGTableSectionInterface"* %276) #20
  br label %281

281:                                              ; preds = %256, %262, %275
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %8, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason21kAnonymousBlockChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #20
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %8, i8 zeroext 3) #20
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %8, i32 1) #20
  %282 = bitcast %"class.blink::LayoutBox"* %35 to i1 (%"class.blink::LayoutObject"*, i32)***
  %283 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %282, align 8
  %284 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %283, i64 92
  %285 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %284, align 8
  %286 = tail call zeroext i1 %285(%"class.blink::LayoutObject"* %36, i32 44) #20
  br i1 %286, label %287, label %301

287:                                              ; preds = %281
  %288 = icmp eq %"class.blink::LayoutBox"* %35, null
  br i1 %288, label %295, label %289

289:                                              ; preds = %287
  %290 = bitcast %"class.blink::LayoutBox"* %35 to %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)***
  %291 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*** %290, align 8
  %292 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %291, i64 29
  %293 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %292, align 8
  %294 = tail call %"class.blink::LayoutNGTableInterface"* %293(%"class.blink::LayoutObject"* %36) #20
  br label %295

295:                                              ; preds = %289, %287
  %296 = phi %"class.blink::LayoutNGTableInterface"* [ %294, %289 ], [ null, %287 ]
  %297 = bitcast %"class.blink::LayoutNGTableInterface"* %296 to void (%"class.blink::LayoutNGTableInterface"*)***
  %298 = load void (%"class.blink::LayoutNGTableInterface"*)**, void (%"class.blink::LayoutNGTableInterface"*)*** %297, align 8
  %299 = getelementptr inbounds void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %298, i64 10
  %300 = load void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %299, align 8
  tail call void %300(%"class.blink::LayoutNGTableInterface"* %296) #20
  br label %320

301:                                              ; preds = %281
  %302 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %282, align 8
  %303 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %302, i64 92
  %304 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %303, align 8
  %305 = tail call zeroext i1 %304(%"class.blink::LayoutObject"* %36, i32 50) #20
  br i1 %305, label %306, label %320

306:                                              ; preds = %301
  %307 = icmp eq %"class.blink::LayoutBox"* %35, null
  br i1 %307, label %314, label %308

308:                                              ; preds = %306
  %309 = bitcast %"class.blink::LayoutBox"* %35 to %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)***
  %310 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)*** %309, align 8
  %311 = getelementptr inbounds %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)** %310, i64 30
  %312 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)** %311, align 8
  %313 = tail call %"class.blink::LayoutNGTableSectionInterface"* %312(%"class.blink::LayoutObject"* %36) #20
  br label %314

314:                                              ; preds = %308, %306
  %315 = phi %"class.blink::LayoutNGTableSectionInterface"* [ %313, %308 ], [ null, %306 ]
  %316 = bitcast %"class.blink::LayoutNGTableSectionInterface"* %315 to void (%"class.blink::LayoutNGTableSectionInterface"*)***
  %317 = load void (%"class.blink::LayoutNGTableSectionInterface"*)**, void (%"class.blink::LayoutNGTableSectionInterface"*)*** %316, align 8
  %318 = getelementptr inbounds void (%"class.blink::LayoutNGTableSectionInterface"*)*, void (%"class.blink::LayoutNGTableSectionInterface"*)** %317, i64 4
  %319 = load void (%"class.blink::LayoutNGTableSectionInterface"*)*, void (%"class.blink::LayoutNGTableSectionInterface"*)** %318, align 8
  tail call void %319(%"class.blink::LayoutNGTableSectionInterface"* %315) #20
  br label %320

320:                                              ; preds = %295, %301, %314
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %36, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason21kAnonymousBlockChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #20
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %36, i8 zeroext 3) #20
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %36, i32 1) #20
  br label %321

321:                                              ; preds = %24, %21, %320
  %322 = phi %"class.blink::LayoutBox"* [ %35, %320 ], [ %10, %21 ], [ %10, %24 ]
  %323 = phi %"class.blink::LayoutObject"* [ %36, %320 ], [ %8, %21 ], [ %8, %24 ]
  %324 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %323, i64 0, i32 7
  %325 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %324, align 8
  %326 = icmp eq %"class.blink::LayoutObject"* %325, %3
  br i1 %326, label %327, label %7

327:                                              ; preds = %321
  %328 = icmp eq %"class.blink::LayoutBox"* %322, null
  br i1 %328, label %402, label %329

329:                                              ; preds = %327
  %330 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %322, i64 0, i32 0, i32 0
  %331 = bitcast %"class.blink::LayoutBox"* %322 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %332 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %331, align 8
  %333 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %332, i64 13
  %334 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %333, align 8
  %335 = tail call %"class.blink::LayoutObjectChildList"* %334(%"class.blink::LayoutObject"* %330) #20
  %336 = icmp eq %"class.blink::LayoutObjectChildList"* %335, null
  br i1 %336, label %362, label %337

337:                                              ; preds = %329
  %338 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %335, i64 0, i32 0
  %339 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %338, align 8
  %340 = icmp eq %"class.blink::LayoutObject"* %339, null
  br i1 %340, label %362, label %341

341:                                              ; preds = %337, %359
  %342 = phi %"class.blink::LayoutObject"* [ %360, %359 ], [ %339, %337 ]
  %343 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %342, i64 0, i32 4
  %344 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %343 to i96*
  %345 = load i96, i96* %344, align 4
  %346 = and i96 %345, 67108864
  %347 = icmp eq i96 %346, 0
  br i1 %347, label %359, label %348

348:                                              ; preds = %341
  %349 = bitcast %"class.blink::LayoutObject"* %342 to %"class.blink::LayoutBox"*
  %350 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %342, i64 2, i32 4, i32 0, i64 4
  %351 = bitcast i8* %350 to %"struct.blink::LayoutBoxRareData"**
  %352 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %351, align 8
  %353 = icmp eq %"struct.blink::LayoutBoxRareData"* %352, null
  br i1 %353, label %359, label %354

354:                                              ; preds = %348
  %355 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %352, i64 0, i32 9
  %356 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %355, align 8
  %357 = icmp eq %"class.blink::LayoutBlock"* %356, null
  br i1 %357, label %359, label %358

358:                                              ; preds = %354
  tail call void @_ZN5blink11LayoutBlock29RemovePercentHeightDescendantEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* nonnull %356, %"class.blink::LayoutBox"* nonnull %349) #20
  br label %359

359:                                              ; preds = %358, %354, %348, %341
  %360 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"* nonnull %342, %"class.blink::LayoutObject"* %330) #20
  %361 = icmp eq %"class.blink::LayoutObject"* %360, null
  br i1 %361, label %362, label %341

362:                                              ; preds = %359, %329, %337
  %363 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %364 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %363, align 8
  %365 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %364, i64 92
  %366 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %365, align 8
  %367 = tail call zeroext i1 %366(%"class.blink::LayoutObject"* %3, i32 44) #20
  br i1 %367, label %368, label %382

368:                                              ; preds = %362
  %369 = icmp eq %"class.blink::LayoutBox"* %0, null
  br i1 %369, label %376, label %370

370:                                              ; preds = %368
  %371 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)***
  %372 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*** %371, align 8
  %373 = getelementptr inbounds %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %372, i64 29
  %374 = load %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)** %373, align 8
  %375 = tail call %"class.blink::LayoutNGTableInterface"* %374(%"class.blink::LayoutObject"* %3) #20
  br label %376

376:                                              ; preds = %370, %368
  %377 = phi %"class.blink::LayoutNGTableInterface"* [ %375, %370 ], [ null, %368 ]
  %378 = bitcast %"class.blink::LayoutNGTableInterface"* %377 to void (%"class.blink::LayoutNGTableInterface"*)***
  %379 = load void (%"class.blink::LayoutNGTableInterface"*)**, void (%"class.blink::LayoutNGTableInterface"*)*** %378, align 8
  %380 = getelementptr inbounds void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %379, i64 10
  %381 = load void (%"class.blink::LayoutNGTableInterface"*)*, void (%"class.blink::LayoutNGTableInterface"*)** %380, align 8
  tail call void %381(%"class.blink::LayoutNGTableInterface"* %377) #20
  br label %401

382:                                              ; preds = %362
  %383 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %363, align 8
  %384 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %383, i64 92
  %385 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %384, align 8
  %386 = tail call zeroext i1 %385(%"class.blink::LayoutObject"* %3, i32 50) #20
  br i1 %386, label %387, label %401

387:                                              ; preds = %382
  %388 = icmp eq %"class.blink::LayoutBox"* %0, null
  br i1 %388, label %395, label %389

389:                                              ; preds = %387
  %390 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)***
  %391 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)*** %390, align 8
  %392 = getelementptr inbounds %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)** %391, i64 30
  %393 = load %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)** %392, align 8
  %394 = tail call %"class.blink::LayoutNGTableSectionInterface"* %393(%"class.blink::LayoutObject"* %3) #20
  br label %395

395:                                              ; preds = %389, %387
  %396 = phi %"class.blink::LayoutNGTableSectionInterface"* [ %394, %389 ], [ null, %387 ]
  %397 = bitcast %"class.blink::LayoutNGTableSectionInterface"* %396 to void (%"class.blink::LayoutNGTableSectionInterface"*)***
  %398 = load void (%"class.blink::LayoutNGTableSectionInterface"*)**, void (%"class.blink::LayoutNGTableSectionInterface"*)*** %397, align 8
  %399 = getelementptr inbounds void (%"class.blink::LayoutNGTableSectionInterface"*)*, void (%"class.blink::LayoutNGTableSectionInterface"*)** %398, i64 4
  %400 = load void (%"class.blink::LayoutNGTableSectionInterface"*)*, void (%"class.blink::LayoutNGTableSectionInterface"*)** %399, align 8
  tail call void %400(%"class.blink::LayoutNGTableSectionInterface"* %396) #20
  br label %401

401:                                              ; preds = %376, %382, %395
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %3, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason21kAnonymousBlockChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #20
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* %3, i8 zeroext 3) #20
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %3, i32 1) #20
  br label %402

402:                                              ; preds = %2, %327, %401
  %403 = phi %"class.blink::LayoutObject"* [ %323, %327 ], [ %323, %401 ], [ %1, %2 ]
  ret %"class.blink::LayoutObject"* %403
}

declare void @_ZN5blink21LayoutObjectChildList15InsertChildNodeEPNS_12LayoutObjectES2_S2_b(%"class.blink::LayoutObjectChildList"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %13

6:                                                ; preds = %1, %6
  %7 = phi %"class.blink::LayoutObject"* [ %9, %6 ], [ %2, %1 ]
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 7
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %6, label %13

13:                                               ; preds = %6, %1
  %14 = phi %"class.blink::Node"* [ %4, %1 ], [ %11, %6 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 113
  %20 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %20, i64 0, i32 3
  %22 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutState"* %22, null
  br i1 %23, label %66, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %22, i64 0, i32 0
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %66, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %22, i64 0, i32 7
  %31 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %30, align 8
  %32 = icmp eq %"class.blink::LayoutObject"* %31, %2
  br i1 %32, label %33, label %45

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %22, i64 0, i32 3
  %35 = bitcast %"class.blink::LayoutSize"* %34 to i64*
  %36 = load i64, i64* %35, align 4
  %37 = lshr i64 %36, 32
  %38 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %39 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %38 to i96*
  %40 = load i96, i96* %39, align 4
  %41 = trunc i96 %40 to i32
  %42 = icmp slt i32 %41, 0
  %43 = select i1 %42, i64 %37, i64 %36
  %44 = trunc i64 %43 to i32
  ret i32 %44

45:                                               ; preds = %29
  %46 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %2, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #20
  %47 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %46, i64 0, i32 0
  %48 = tail call i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"* %47)
  %49 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %50, i64 0, i32 0, i32 9
  %52 = bitcast [20 x i8]* %51 to i160*
  %53 = load i160, i160* %52, align 8
  %54 = and i160 %53, 15211807202738752817960438464512
  %55 = icmp eq i160 %54, 0
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %57 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = select i1 %55, i32* %56, i32* %57
  %59 = load i32, i32* %58, align 4
  %60 = icmp slt i32 %59, 0
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %48, i32 %59) #20
  %63 = extractvalue { i32, i1 } %62, 1
  %64 = extractvalue { i32, i1 } %62, 0
  %65 = select i1 %63, i32 %61, i32 %64, !prof !2
  ret i32 %65

66:                                               ; preds = %24, %13
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox38LogicalExtentAfterUpdatingLogicalWidthERKNS_10LayoutUnitERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"class.blink::LayoutUnit"* nocapture readonly dereferenceable(4), %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nocapture dereferenceable(24)) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %13 = select i1 %10, i32* %11, i32* %12
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %17 = select i1 %10, i32* %15, i32* %16
  %18 = load i32, i32* %17, align 4
  %19 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %20 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %20, i64 129
  %22 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %21, align 8
  %23 = tail call i32 %22(%"class.blink::LayoutBox"* %0) #20
  %24 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %19, align 8
  %25 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %24, i64 130
  %26 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %25, align 8
  %27 = tail call i32 %26(%"class.blink::LayoutBox"* %0) #20
  %28 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %28, i64 0, i32 0, i32 9
  %30 = bitcast [20 x i8]* %29 to i160*
  %31 = load i160, i160* %30, align 8
  %32 = and i160 %31, 15211807202738752817960438464512
  %33 = icmp eq i160 %32, 0
  %34 = select i1 %33, i32* %16, i32* %15
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  br i1 %33, label %39, label %49

39:                                               ; preds = %3
  %40 = load i32, i32* %16, align 4
  %41 = icmp eq i32 %40, %37
  br i1 %41, label %59, label %42

42:                                               ; preds = %39
  store i32 %37, i32* %16, align 4
  %43 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %44 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %43 to i96*
  %45 = load i96, i96* %44, align 4
  %46 = and i96 %45, 63
  %47 = icmp eq i96 %46, 0
  br i1 %47, label %48, label %59

48:                                               ; preds = %42
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %38) #20
  br label %59

49:                                               ; preds = %3
  %50 = load i32, i32* %15, align 4
  %51 = icmp eq i32 %50, %37
  br i1 %51, label %59, label %52

52:                                               ; preds = %49
  store i32 %37, i32* %15, align 4
  %53 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = and i96 %55, 63
  %57 = icmp eq i96 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %52
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %38) #20
  br label %59

59:                                               ; preds = %39, %42, %48, %49, %52, %58
  %60 = bitcast %"class.blink::LayoutBox"* %0 to void (%"class.blink::LayoutBox"*)***
  %61 = load void (%"class.blink::LayoutBox"*)**, void (%"class.blink::LayoutBox"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %61, i64 163
  %63 = load void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %62, align 8
  tail call void %63(%"class.blink::LayoutBox"* %0) #20
  %64 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %64, i64 0, i32 0, i32 9
  %66 = bitcast [20 x i8]* %65 to i160*
  %67 = load i160, i160* %66, align 8
  %68 = and i160 %67, 15211807202738752817960438464512
  %69 = icmp eq i160 %68, 0
  %70 = select i1 %69, i32* %11, i32* %12
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 0, i32 0
  store i32 %71, i32* %72, align 4
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 15211807202738752817960438464512
  %78 = icmp eq i160 %77, 0
  %79 = select i1 %78, i32* %15, i32* %16
  %80 = load i32, i32* %79, align 4
  %81 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 1, i32 0
  store i32 %80, i32* %81, align 4
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %84 = bitcast [20 x i8]* %83 to i160*
  %85 = load i160, i160* %84, align 8, !noalias !424
  %86 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  %87 = and i160 %85, 15211807202738752817960438464512
  %88 = icmp eq i160 %87, 0
  %89 = and i160 %85, 41538374868278621028243970633760768
  %90 = icmp eq i160 %89, 0
  %91 = select i1 %90, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %92 = select i1 %90, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %93 = select i1 %88, { i64, i64 } %92, { i64, i64 } %91
  %94 = select i1 %88, { i64, i64 } %92, { i64, i64 } %91
  %95 = extractvalue { i64, i64 } %93, 0
  %96 = extractvalue { i64, i64 } %94, 1
  %97 = getelementptr inbounds i8, i8* %86, i64 %96
  %98 = bitcast i8* %97 to %"class.blink::LayoutBoxModelObject"*
  %99 = and i64 %95, 1
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %108, label %101

101:                                              ; preds = %59
  %102 = bitcast i8* %97 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = add i64 %95, -1
  %105 = getelementptr i8, i8* %103, i64 %104
  %106 = bitcast i8* %105 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %107 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %106, align 8
  br label %110

108:                                              ; preds = %59
  %109 = inttoptr i64 %95 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %110

110:                                              ; preds = %101, %108
  %111 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %107, %101 ], [ %109, %108 ]
  %112 = tail call i32 %111(%"class.blink::LayoutBoxModelObject"* %98) #20
  %113 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 2, i32 2, i32 0
  store i32 %112, i32* %113, align 4
  %114 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %115 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %114, i64 0, i32 0, i32 9
  %116 = bitcast [20 x i8]* %115 to i160*
  %117 = load i160, i160* %116, align 8, !noalias !427
  %118 = and i160 %117, 15211807202738752817960438464512
  %119 = icmp eq i160 %118, 0
  %120 = and i160 %117, 41538374868278621028243970633760768
  %121 = icmp eq i160 %120, 0
  %122 = select i1 %121, { i64, i64 } { i64 1025, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %123 = select i1 %121, { i64, i64 } { i64 1041, i64 0 }, { i64, i64 } { i64 1033, i64 0 }
  %124 = select i1 %119, { i64, i64 } %123, { i64, i64 } %122
  %125 = select i1 %119, { i64, i64 } %123, { i64, i64 } %122
  %126 = extractvalue { i64, i64 } %124, 0
  %127 = extractvalue { i64, i64 } %125, 1
  %128 = getelementptr inbounds i8, i8* %86, i64 %127
  %129 = bitcast i8* %128 to %"class.blink::LayoutBoxModelObject"*
  %130 = and i64 %126, 1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %139, label %132

132:                                              ; preds = %110
  %133 = bitcast i8* %128 to i8**
  %134 = load i8*, i8** %133, align 8
  %135 = add i64 %126, -1
  %136 = getelementptr i8, i8* %134, i64 %135
  %137 = bitcast i8* %136 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %138 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %137, align 8
  br label %141

139:                                              ; preds = %110
  %140 = inttoptr i64 %126 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %141

141:                                              ; preds = %132, %139
  %142 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %138, %132 ], [ %140, %139 ]
  %143 = tail call i32 %142(%"class.blink::LayoutBoxModelObject"* %129) #20
  %144 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 2, i32 3, i32 0
  store i32 %143, i32* %144, align 4
  %145 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %146 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %145, i64 0, i32 0, i32 9
  %147 = bitcast [20 x i8]* %146 to i160*
  %148 = load i160, i160* %147, align 8
  %149 = and i160 %148, 15211807202738752817960438464512
  %150 = icmp eq i160 %149, 0
  br i1 %150, label %151, label %161

151:                                              ; preds = %141
  %152 = load i32, i32* %16, align 4
  %153 = icmp eq i32 %152, %35
  br i1 %153, label %171, label %154

154:                                              ; preds = %151
  store i32 %35, i32* %16, align 4
  %155 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %156 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %155 to i96*
  %157 = load i96, i96* %156, align 4
  %158 = and i96 %157, 63
  %159 = icmp eq i96 %158, 0
  br i1 %159, label %160, label %171

160:                                              ; preds = %154
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %38) #20
  br label %171

161:                                              ; preds = %141
  %162 = load i32, i32* %15, align 4
  %163 = icmp eq i32 %162, %35
  br i1 %163, label %171, label %164

164:                                              ; preds = %161
  store i32 %35, i32* %15, align 4
  %165 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %166 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %165 to i96*
  %167 = load i96, i96* %166, align 4
  %168 = and i96 %167, 63
  %169 = icmp eq i96 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %164
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %38) #20
  br label %171

171:                                              ; preds = %151, %154, %160, %161, %164, %170
  tail call void @_ZN5blink9LayoutBox15SetLogicalWidthENS_10LayoutUnitE(%"class.blink::LayoutBox"* %0, i32 %14)
  %172 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %173 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %172, i64 0, i32 0, i32 9
  %174 = bitcast [20 x i8]* %173 to i160*
  %175 = load i160, i160* %174, align 8
  %176 = and i160 %175, 15211807202738752817960438464512
  %177 = icmp eq i160 %176, 0
  br i1 %177, label %178, label %188

178:                                              ; preds = %171
  %179 = load i32, i32* %15, align 4
  %180 = icmp eq i32 %179, %18
  br i1 %180, label %198, label %181

181:                                              ; preds = %178
  store i32 %18, i32* %15, align 4
  %182 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %183 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %182 to i96*
  %184 = load i96, i96* %183, align 4
  %185 = and i96 %184, 63
  %186 = icmp eq i96 %185, 0
  br i1 %186, label %187, label %198

187:                                              ; preds = %181
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %38) #20
  br label %198

188:                                              ; preds = %171
  %189 = load i32, i32* %16, align 4
  %190 = icmp eq i32 %189, %18
  br i1 %190, label %198, label %191

191:                                              ; preds = %188
  store i32 %18, i32* %16, align 4
  %192 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %193 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %192 to i96*
  %194 = load i96, i96* %193, align 4
  %195 = and i96 %194, 63
  %196 = icmp eq i96 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %191
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %38) #20
  br label %198

198:                                              ; preds = %178, %181, %187, %188, %191, %197
  %199 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  store i32 %23, i32* %199, align 4
  %200 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  store i32 %27, i32* %200, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ShapeOutsideInfo"* @_ZNK5blink9LayoutBox19GetShapeOutsideInfoEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.blink::LayoutBox"*, align 8
  %3 = tail call zeroext i1 @_ZN5blink16ShapeOutsideInfo12IsEnabledForERKNS_9LayoutBoxE(%"class.blink::LayoutBox"* dereferenceable(216) %0) #20
  br i1 %3, label %4, label %14

4:                                                ; preds = %1
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %11, !prof !5

7:                                                ; preds = %4
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map) #20
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %7
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #20
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map) #20
  br label %11

11:                                               ; preds = %10, %7, %4
  %12 = bitcast %"class.blink::LayoutBox"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #20
  store %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBox"** %2, align 8
  %13 = call %"class.blink::ShapeOutsideInfo"* @_ZNK3WTF7HashMapIPKN5blink9LayoutBoxENSt3__110unique_ptrINS1_16ShapeOutsideInfoENS5_14default_deleteIS7_EEEENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENSD_ISA_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.4855"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16ShapeOutsideInfo10GetInfoMapEvE17s_static_info_map to %"class.WTF::HashMap.4855"*), %"class.blink::LayoutBox"** nonnull dereferenceable(8) %2) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #20
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi %"class.blink::ShapeOutsideInfo"* [ %13, %11 ], [ null, %1 ]
  ret %"class.blink::ShapeOutsideInfo"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox25SetPercentHeightContainerEPNS_11LayoutBlockE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBlock"*) local_unnamed_addr #4 align 2 {
  %3 = icmp eq %"class.blink::LayoutBlock"* %1, null
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %5 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  br i1 %3, label %6, label %8

6:                                                ; preds = %2
  %7 = icmp eq %"struct.blink::LayoutBoxRareData"* %5, null
  br i1 %7, label %32, label %29

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0
  %10 = icmp eq %"struct.blink::LayoutBoxRareData"* %5, null
  br i1 %10, label %11, label %29

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %9, i64 0, i32 0
  %13 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %14 = bitcast i8* %13 to %"struct.blink::LayoutBoxRareData"*
  %15 = bitcast i8* %13 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %15, align 8
  %16 = getelementptr inbounds i8, i8* %13, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 -64, i32* %17, align 4
  %18 = getelementptr inbounds i8, i8* %13, i64 12
  %19 = bitcast i8* %18 to i32*
  store i32 -64, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %13, i64 16
  %21 = load i8, i8* %20, align 8
  %22 = and i8 %21, -16
  store i8 %22, i8* %20, align 8
  %23 = getelementptr inbounds i8, i8* %13, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 68, i1 false) #20
  %24 = getelementptr inbounds i8, i8* %13, i64 -4
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  store atomic i16 %27, i16* %25 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %9, %"struct.blink::LayoutBoxRareData"* %14) #20
  %28 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %12, align 8
  br label %29

29:                                               ; preds = %6, %8, %11
  %30 = phi %"struct.blink::LayoutBoxRareData"* [ %5, %8 ], [ %28, %11 ], [ %5, %6 ]
  %31 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %30, i64 0, i32 9
  store %"class.blink::LayoutBlock"* %1, %"class.blink::LayoutBlock"** %31, align 8
  br label %32

32:                                               ; preds = %6, %29
  ret void
}

declare void @_ZN5blink11LayoutBlock29RemovePercentHeightDescendantEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*) local_unnamed_addr #5

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject14NextInPreOrderEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %2, %7
  %8 = phi %"class.blink::LayoutObject"* [ %10, %7 ], [ %3, %2 ]
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %2
  %15 = phi %"class.blink::Node"* [ %5, %2 ], [ %12, %7 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %19, i64 0, i32 113
  %21 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %23 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %22 to i96*
  %24 = load i96, i96* %23, align 4
  %25 = and i96 %24, 1099511627776
  %26 = icmp eq i96 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %14
  %28 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %3) #20
  %29 = icmp eq %"class.blink::LayoutFlowThread"* %28, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %14, %27
  %31 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %21, i64 0, i32 2, i32 0
  %32 = load i32, i32* %31, align 8
  br label %42

33:                                               ; preds = %27
  %34 = tail call i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"* %0)
  %35 = icmp slt i32 %34, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %34) #20
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  %41 = tail call i32 @_ZNK5blink16LayoutFlowThread26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutFlowThread"* nonnull %28, i32 %40) #20
  br label %42

42:                                               ; preds = %33, %30
  %43 = phi i32 [ %32, %30 ], [ %41, %33 ]
  ret i32 %43
}

declare i32 @_ZNK5blink16LayoutFlowThread26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutFlowThread"*, i32) local_unnamed_addr #5

declare i32 @_ZNK5blink16LayoutFlowThread35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS_9LayoutBox16PageBoundaryRuleE(%"class.blink::LayoutFlowThread"*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox17CurrentPageNumberENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4 align 2 {
  %3 = tail call i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"* %0)
  %4 = icmp slt i32 %1, 0
  %5 = select i1 %4, i32 -2147483648, i32 2147483647
  %6 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %3, i32 %1) #20
  %7 = extractvalue { i32, i1 } %6, 1
  %8 = extractvalue { i32, i1 } %6, 0
  %9 = select i1 %7, i32 %5, i32 %8, !prof !2
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %13, label %22

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  br label %15

15:                                               ; preds = %13, %15
  %16 = phi %"class.blink::LayoutObject"* [ %18, %15 ], [ %14, %13 ]
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 7
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 6, i32 0, i32 0
  %20 = load %"class.blink::Node"*, %"class.blink::Node"** %19, align 8
  %21 = icmp eq %"class.blink::Node"* %20, null
  br i1 %21, label %15, label %22

22:                                               ; preds = %15, %2
  %23 = phi %"class.blink::Node"* [ %11, %2 ], [ %20, %15 ]
  %24 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 0, i32 3, i32 0, i32 0
  %25 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::Document"*, %"class.blink::Document"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %27, i64 0, i32 113
  %29 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %29, i64 0, i32 2, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = sext i32 %9 to i64
  %33 = shl nsw i64 %32, 6
  %34 = sext i32 %31 to i64
  %35 = sdiv i64 %33, %34
  %36 = tail call i1 @llvm.is.constant.i64(i64 %35) #20
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = icmp slt i64 %35, 0
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = add i64 %35, 2147483648
  %41 = icmp ult i64 %40, 4294967296
  %42 = trunc i64 %35 to i32
  %43 = select i1 %41, i32 %42, i32 %39, !prof !3
  br label %50

44:                                               ; preds = %22
  %45 = icmp sgt i64 %35, 2147483647
  br i1 %45, label %55, label %46

46:                                               ; preds = %44
  %47 = icmp sgt i64 %35, -2147483648
  %48 = select i1 %47, i64 %35, i64 -2147483648
  %49 = trunc i64 %48 to i32
  br label %50

50:                                               ; preds = %37, %46
  %51 = phi i32 [ %43, %37 ], [ %49, %46 ]
  %52 = icmp slt i32 %51, -2147483584
  %53 = ashr i32 %51, 6
  %54 = select i1 %52, i32 -33554432, i32 %53
  ret i32 %54

55:                                               ; preds = %44
  ret i32 33554431
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox19CrossesPageBoundaryENS_10LayoutUnitES1_(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 1099511627776
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %4) #20
  %12 = icmp eq %"class.blink::LayoutFlowThread"* %11, null
  br i1 %12, label %13, label %35

13:                                               ; preds = %10, %3
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %17, label %24

17:                                               ; preds = %13, %17
  %18 = phi %"class.blink::LayoutObject"* [ %20, %17 ], [ %4, %13 ]
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 7
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 6, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %17, label %24

24:                                               ; preds = %17, %13
  %25 = phi %"class.blink::Node"* [ %15, %13 ], [ %22, %17 ]
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Document"*, %"class.blink::Document"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %29, i64 0, i32 113
  %31 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %31, i64 0, i32 2, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %41

35:                                               ; preds = %10
  %36 = bitcast %"class.blink::LayoutFlowThread"* %11 to i1 (%"class.blink::LayoutFlowThread"*)***
  %37 = load i1 (%"class.blink::LayoutFlowThread"*)**, i1 (%"class.blink::LayoutFlowThread"*)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutFlowThread"*)*, i1 (%"class.blink::LayoutFlowThread"*)** %37, i64 232
  %39 = load i1 (%"class.blink::LayoutFlowThread"*)*, i1 (%"class.blink::LayoutFlowThread"*)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutFlowThread"* nonnull %11) #20
  br i1 %40, label %41, label %44

41:                                               ; preds = %24, %35
  %42 = tail call i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"* %0, i32 %1, i32 1)
  %43 = icmp slt i32 %42, %2
  br label %44

44:                                               ; preds = %24, %35, %41
  %45 = phi i1 [ %43, %41 ], [ false, %35 ], [ false, %24 ]
  ret i1 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink9LayoutBox36CalculatePaginationStrutToFitContentENS_10LayoutUnitES1_(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %5 = tail call i32 @_ZNK5blink9LayoutBox35PageRemainingLogicalHeightForOffsetENS_10LayoutUnitENS0_16PageBoundaryRuleE(%"class.blink::LayoutBox"* %0, i32 %1, i32 1)
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %7 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %8 = icmp eq %"class.blink::Node"* %7, null
  br i1 %8, label %9, label %16

9:                                                ; preds = %3, %9
  %10 = phi %"class.blink::LayoutObject"* [ %12, %9 ], [ %4, %3 ]
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 7
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %9, label %16

16:                                               ; preds = %9, %3
  %17 = phi %"class.blink::Node"* [ %7, %3 ], [ %14, %9 ]
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %21, i64 0, i32 113
  %23 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %23, i64 0, i32 3
  %25 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %25, i64 0, i32 5, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, 0
  %29 = select i1 %28, i32 -2147483648, i32 2147483647
  %30 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %5, i32 %27) #20
  %31 = extractvalue { i32, i1 } %30, 1
  %32 = extractvalue { i32, i1 } %30, 0
  %33 = select i1 %31, i32 %29, i32 %32, !prof !2
  %34 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, i64 92
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::LayoutObject"* %4, i32 50) #20
  br i1 %38, label %48, label %39

39:                                               ; preds = %16
  %40 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %25, i64 0, i32 4, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = icmp slt i32 %41, 0
  %43 = select i1 %42, i32 -2147483648, i32 2147483647
  %44 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %41) #20
  %45 = extractvalue { i32, i1 } %44, 1
  %46 = extractvalue { i32, i1 } %44, 0
  %47 = select i1 %45, i32 %43, i32 %46, !prof !2
  br label %48

48:                                               ; preds = %39, %16
  %49 = phi i32 [ %33, %16 ], [ %47, %39 ]
  %50 = icmp slt i32 %49, 0
  %51 = select i1 %50, i32 -2147483648, i32 2147483647
  %52 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %49) #20
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = select i1 %53, i32 %51, i32 %54, !prof !2
  %56 = load %"class.blink::Node"*, %"class.blink::Node"** %6, align 8
  %57 = icmp eq %"class.blink::Node"* %56, null
  br i1 %57, label %58, label %65

58:                                               ; preds = %48, %58
  %59 = phi %"class.blink::LayoutObject"* [ %61, %58 ], [ %4, %48 ]
  %60 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %59, i64 0, i32 7
  %61 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 6, i32 0, i32 0
  %63 = load %"class.blink::Node"*, %"class.blink::Node"** %62, align 8
  %64 = icmp eq %"class.blink::Node"* %63, null
  br i1 %64, label %58, label %65

65:                                               ; preds = %58, %48
  %66 = phi %"class.blink::Node"* [ %56, %48 ], [ %63, %58 ]
  %67 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %66, i64 0, i32 3, i32 0, i32 0
  %68 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %68, i64 0, i32 2, i32 0, i32 0
  %70 = load %"class.blink::Document"*, %"class.blink::Document"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %70, i64 0, i32 113
  %72 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %74 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %73 to i96*
  %75 = load i96, i96* %74, align 4
  %76 = and i96 %75, 1099511627776
  %77 = icmp eq i96 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %65
  %79 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %4) #20
  %80 = icmp eq %"class.blink::LayoutFlowThread"* %79, null
  br i1 %80, label %81, label %84

81:                                               ; preds = %78, %65
  %82 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %72, i64 0, i32 2, i32 0
  %83 = load i32, i32* %82, align 8
  br label %93

84:                                               ; preds = %78
  %85 = tail call i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"* %0) #20
  %86 = icmp slt i32 %85, 0
  %87 = select i1 %86, i32 -2147483648, i32 2147483647
  %88 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %55, i32 %85) #20
  %89 = extractvalue { i32, i1 } %88, 1
  %90 = extractvalue { i32, i1 } %88, 0
  %91 = select i1 %89, i32 %87, i32 %90, !prof !2
  %92 = tail call i32 @_ZNK5blink16LayoutFlowThread26PageLogicalHeightForOffsetENS_10LayoutUnitE(%"class.blink::LayoutFlowThread"* nonnull %79, i32 %91) #20
  br label %93

93:                                               ; preds = %81, %84
  %94 = phi i32 [ %83, %81 ], [ %92, %84 ]
  %95 = icmp slt i32 %94, %2
  br i1 %95, label %96, label %124

96:                                               ; preds = %93
  %97 = load i96, i96* %74, align 4
  %98 = and i96 %97, 1099511627776
  %99 = icmp eq i96 %98, 0
  br i1 %99, label %124, label %100

100:                                              ; preds = %96
  %101 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %4) #20
  %102 = icmp eq %"class.blink::LayoutFlowThread"* %101, null
  br i1 %102, label %124, label %103

103:                                              ; preds = %100
  %104 = tail call i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"* %0)
  %105 = icmp slt i32 %55, 0
  %106 = select i1 %105, i32 -2147483648, i32 2147483647
  %107 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %104, i32 %55) #20
  %108 = extractvalue { i32, i1 } %107, 1
  %109 = extractvalue { i32, i1 } %107, 0
  %110 = select i1 %108, i32 %106, i32 %109, !prof !2
  %111 = tail call i32 @_ZNK5blink16LayoutFlowThread35NextLogicalTopForUnbreakableContentENS_10LayoutUnitES1_(%"class.blink::LayoutFlowThread"* nonnull %101, i32 %110, i32 %2) #20
  %112 = icmp slt i32 %111, 0
  %113 = select i1 %112, i32 -2147483648, i32 2147483647
  %114 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 %111) #20
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 %113, i32 %116, !prof !2
  %118 = icmp sgt i32 %110, -1
  %119 = select i1 %118, i32 -2147483648, i32 2147483647
  %120 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %117, i32 %110) #20
  %121 = extractvalue { i32, i1 } %120, 1
  %122 = extractvalue { i32, i1 } %120, 0
  %123 = select i1 %121, i32 %119, i32 %122, !prof !2
  br label %124

124:                                              ; preds = %93, %96, %100, %103
  %125 = phi i32 [ %123, %103 ], [ %49, %93 ], [ %49, %100 ], [ %49, %96 ]
  ret i32 %125
}

declare i32 @_ZNK5blink16LayoutFlowThread35NextLogicalTopForUnbreakableContentENS_10LayoutUnitES1_(%"class.blink::LayoutFlowThread"*, i32, i32) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::LayoutBox"* @_ZNK5blink9LayoutBox13SnapContainerEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 10
  %7 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::LayoutBox"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::LayoutBox"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox14RemoveSnapAreaERKS0_(%"class.blink::LayoutBox"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %4 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %3, align 8
  %5 = icmp eq %"struct.blink::LayoutBoxRareData"* %4, null
  br i1 %5, label %109, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %4, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::HashSet.3287"*, %"class.WTF::HashSet.3287"** %7, align 8
  %9 = icmp eq %"class.WTF::HashSet.3287"* %8, null
  br i1 %9, label %109, label %10

10:                                               ; preds = %6
  %11 = ptrtoint %"class.blink::LayoutBox"* %1 to i64
  %12 = getelementptr inbounds %"class.WTF::HashSet.3287", %"class.WTF::HashSet.3287"* %8, i64 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::HashSet.3287", %"class.WTF::HashSet.3287"* %8, i64 0, i32 0, i32 0
  %14 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %13, align 8
  %15 = icmp eq %"class.blink::LayoutBox"** %14, null
  %16 = getelementptr inbounds %"class.WTF::HashSet.3287", %"class.WTF::HashSet.3287"* %8, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  br i1 %15, label %79, label %18

18:                                               ; preds = %10
  %19 = add i32 %17, -1
  %20 = zext i32 %19 to i64
  %21 = shl i64 %11, 32
  %22 = xor i64 %21, -1
  %23 = add i64 %22, %11
  %24 = lshr i64 %23, 22
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 13
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 8
  %30 = xor i64 %29, %28
  %31 = mul i64 %30, 9
  %32 = lshr i64 %31, 15
  %33 = xor i64 %32, %31
  %34 = shl i64 %33, 27
  %35 = xor i64 %34, -1
  %36 = add i64 %33, %35
  %37 = lshr i64 %36, 31
  %38 = xor i64 %37, %36
  %39 = trunc i64 %38 to i32
  %40 = and i32 %19, %39
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %14, i64 %41
  %43 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %42, align 8
  %44 = icmp eq %"class.blink::LayoutBox"* %43, %1
  br i1 %44, label %74, label %45

45:                                               ; preds = %18
  %46 = xor i32 %39, -1
  %47 = lshr i32 %39, 23
  %48 = add i32 %47, %46
  %49 = shl i32 %48, 12
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 7
  %52 = xor i32 %51, %50
  %53 = shl i32 %52, 2
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 20
  %56 = xor i32 %55, %54
  %57 = or i32 %56, 1
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %64, %45
  %60 = phi %"class.blink::LayoutBox"* [ %43, %45 ], [ %70, %64 ]
  %61 = phi i64 [ %41, %45 ], [ %68, %64 ]
  %62 = phi i64 [ 0, %45 ], [ %66, %64 ]
  %63 = icmp eq %"class.blink::LayoutBox"* %60, null
  br i1 %63, label %79, label %64

64:                                               ; preds = %59
  %65 = icmp eq i64 %62, 0
  %66 = select i1 %65, i64 %58, i64 %62
  %67 = add i64 %66, %61
  %68 = and i64 %67, %20
  %69 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %14, i64 %68
  %70 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %69, align 8
  %71 = icmp eq %"class.blink::LayoutBox"* %70, %1
  br i1 %71, label %72, label %59

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %14, i64 %68
  br label %74

74:                                               ; preds = %72, %18
  %75 = phi %"class.blink::LayoutBox"** [ %42, %18 ], [ %73, %72 ]
  %76 = icmp eq %"class.blink::LayoutBox"** %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = zext i32 %17 to i64
  br label %82

79:                                               ; preds = %59, %74, %10
  %80 = zext i32 %17 to i64
  %81 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %14, i64 %80
  br label %82

82:                                               ; preds = %77, %79
  %83 = phi i64 [ %78, %77 ], [ %80, %79 ]
  %84 = phi %"class.blink::LayoutBox"** [ %75, %77 ], [ %81, %79 ]
  %85 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %14, i64 %83
  %86 = icmp eq %"class.blink::LayoutBox"** %85, %84
  br i1 %86, label %109, label %87

87:                                               ; preds = %82
  store %"class.blink::LayoutBox"* inttoptr (i64 -1 to %"class.blink::LayoutBox"*), %"class.blink::LayoutBox"** %84, align 8
  %88 = getelementptr inbounds %"class.WTF::HashSet.3287", %"class.WTF::HashSet.3287"* %8, i64 0, i32 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, 1
  %91 = and i32 %90, 2147483647
  %92 = and i32 %89, -2147483648
  %93 = or i32 %91, %92
  store i32 %93, i32* %88, align 8
  %94 = getelementptr inbounds %"class.WTF::HashSet.3287", %"class.WTF::HashSet.3287"* %8, i64 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, -1
  store i32 %96, i32* %94, align 4
  %97 = mul i32 %96, 6
  %98 = load i32, i32* %16, align 8
  %99 = icmp ult i32 %97, %98
  %100 = icmp ugt i32 %98, 8
  %101 = and i1 %99, %100
  br i1 %101, label %102, label %109

102:                                              ; preds = %87
  %103 = lshr i32 %98, 1
  %104 = zext i32 %103 to i64
  %105 = shl nuw nsw i64 %104, 3
  %106 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %105, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv, i64 0, i64 0)) #20
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %106, i8 0, i64 %105, i1 false) #20
  %107 = bitcast i8* %106 to %"class.blink::LayoutBox"**
  %108 = tail call %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.3288"* %12, %"class.blink::LayoutBox"** %107, i32 %103, %"class.blink::LayoutBox"** null) #20
  br label %109

109:                                              ; preds = %6, %2, %102, %87, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox11AddSnapAreaERS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.blink::LayoutBox"*, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0
  %5 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %4, i64 0, i32 0
  %6 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %5, align 8
  %7 = icmp eq %"struct.blink::LayoutBoxRareData"* %6, null
  br i1 %7, label %8, label %25

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64 88) #20
  %10 = bitcast i8* %9 to %"struct.blink::LayoutBoxRareData"*
  %11 = bitcast i8* %9 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"**
  store %"class.blink::LayoutMultiColumnSpannerPlaceholder"* null, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to i32*
  store i32 -64, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %9, i64 12
  %15 = bitcast i8* %14 to i32*
  store i32 -64, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %9, i64 16
  %17 = load i8, i8* %16, align 8
  %18 = and i8 %17, -16
  store i8 %18, i8* %16, align 8
  %19 = getelementptr inbounds i8, i8* %9, i64 20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 68, i1 false) #20
  %20 = getelementptr inbounds i8, i8* %9, i64 -4
  %21 = bitcast i8* %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = or i16 %22, 1
  store atomic i16 %23, i16* %21 release, align 2
  tail call void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"* %4, %"struct.blink::LayoutBoxRareData"* %10) #20
  %24 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %5, align 8
  br label %25

25:                                               ; preds = %2, %8
  %26 = phi %"struct.blink::LayoutBoxRareData"* [ %6, %2 ], [ %24, %8 ]
  %27 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %26, i64 0, i32 11
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.3284", %"class.std::__1::unique_ptr.3284"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::HashSet.3287"*, %"class.WTF::HashSet.3287"** %28, align 8
  %30 = icmp eq %"class.WTF::HashSet.3287"* %29, null
  br i1 %30, label %31, label %47

31:                                               ; preds = %25
  %32 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([174 x i8], [174 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_7HashSetIPN5blink9LayoutBoxENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 20, i1 false) #20
  %33 = ptrtoint i8* %32 to i64
  %34 = load %"class.WTF::HashSet.3287"*, %"class.WTF::HashSet.3287"** %28, align 8
  %35 = bitcast %"class.std::__1::unique_ptr.3284"* %27 to i64*
  store i64 %33, i64* %35, align 8
  %36 = icmp eq %"class.WTF::HashSet.3287"* %34, null
  %37 = bitcast i8* %32 to %"class.WTF::HashSet.3287"*
  br i1 %36, label %47, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.WTF::HashSet.3287", %"class.WTF::HashSet.3287"* %34, i64 0, i32 0, i32 0
  %40 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %39, align 8
  %41 = icmp eq %"class.blink::LayoutBox"** %40, null
  br i1 %41, label %44, label %42, !prof !3

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::LayoutBox"** %40 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #20
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %39, align 8
  br label %44

44:                                               ; preds = %42, %38
  %45 = bitcast %"class.WTF::HashSet.3287"* %34 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %45) #20
  %46 = load %"class.WTF::HashSet.3287"*, %"class.WTF::HashSet.3287"** %28, align 8
  br label %47

47:                                               ; preds = %25, %31, %44
  %48 = phi %"class.WTF::HashSet.3287"* [ %29, %25 ], [ %37, %31 ], [ %46, %44 ]
  %49 = bitcast %"class.blink::LayoutBox"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #20
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %3, align 8
  %50 = getelementptr inbounds %"class.WTF::HashSet.3287", %"class.WTF::HashSet.3287"* %48, i64 0, i32 0
  %51 = call { %"class.blink::LayoutBox"**, i8 } @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.3288"* %50, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %3, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %3) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox14ClearSnapAreasEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %56, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 11, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::HashSet.3287"*, %"class.WTF::HashSet.3287"** %6, align 8
  %8 = icmp eq %"class.WTF::HashSet.3287"* %7, null
  br i1 %8, label %56, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.WTF::HashSet.3287", %"class.WTF::HashSet.3287"* %7, i64 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::HashSet.3287", %"class.WTF::HashSet.3287"* %7, i64 0, i32 0, i32 0
  %14 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::HashSet.3287", %"class.WTF::HashSet.3287"* %7, i64 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %14, i64 %17
  br i1 %12, label %33, label %19

19:                                               ; preds = %9
  %20 = icmp eq i32 %16, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %19, %25
  %22 = phi %"class.blink::LayoutBox"** [ %26, %25 ], [ %14, %19 ]
  %23 = bitcast %"class.blink::LayoutBox"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  switch i64 %24, label %28 [
    i64 -1, label %25
    i64 0, label %25
  ]

25:                                               ; preds = %21, %21
  %26 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %22, i64 1
  %27 = icmp eq %"class.blink::LayoutBox"** %26, %18
  br i1 %27, label %33, label %21

28:                                               ; preds = %21, %19
  %29 = phi %"class.blink::LayoutBox"** [ %14, %19 ], [ %22, %21 ]
  %30 = icmp eq %"class.blink::LayoutBox"** %29, %18
  br i1 %30, label %33, label %39

31:                                               ; preds = %39, %54, %51
  %32 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %13, align 8
  br label %33

33:                                               ; preds = %25, %9, %31, %28
  %34 = phi %"class.blink::LayoutBox"** [ %32, %31 ], [ %14, %28 ], [ %14, %9 ], [ %14, %25 ]
  %35 = icmp eq %"class.blink::LayoutBox"** %34, null
  br i1 %35, label %56, label %36

36:                                               ; preds = %33
  %37 = bitcast %"class.blink::LayoutBox"** %34 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #20
  %38 = bitcast %"class.WTF::HashSet.3287"* %7 to i64*
  store atomic i64 0, i64* %38 monotonic, align 8
  store i32 0, i32* %15, align 8
  store i32 0, i32* %10, align 4
  br label %56

39:                                               ; preds = %28, %54
  %40 = phi %"class.blink::LayoutBox"** [ %48, %54 ], [ %29, %28 ]
  %41 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %41, i64 0, i32 12, i32 0, i32 0
  %43 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %42, align 8
  %44 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %43, i64 0, i32 10
  store %"class.blink::LayoutBox"* null, %"class.blink::LayoutBox"** %44, align 8
  %45 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %40, i64 1
  %46 = icmp eq %"class.blink::LayoutBox"** %45, %18
  br i1 %46, label %31, label %47

47:                                               ; preds = %39, %51
  %48 = phi %"class.blink::LayoutBox"** [ %52, %51 ], [ %45, %39 ]
  %49 = bitcast %"class.blink::LayoutBox"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  switch i64 %50, label %54 [
    i64 -1, label %51
    i64 0, label %51
  ]

51:                                               ; preds = %47, %47
  %52 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %48, i64 1
  %53 = icmp eq %"class.blink::LayoutBox"** %52, %18
  br i1 %53, label %31, label %47

54:                                               ; preds = %47
  %55 = icmp eq %"class.blink::LayoutBox"** %48, %18
  br i1 %55, label %31, label %39

56:                                               ; preds = %1, %36, %33, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.WTF::HashSet.3287"* @_ZNK5blink9LayoutBox9SnapAreasEv(%"class.blink::LayoutBox"* nocapture readonly) local_unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 11, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::HashSet.3287"*, %"class.WTF::HashSet.3287"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.WTF::HashSet.3287"* [ %7, %5 ], [ null, %1 ]
  ret %"class.WTF::HashSet.3287"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox17ReassignSnapAreasERS0_(%"class.blink::LayoutBox"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %4 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %3, align 8
  %5 = icmp eq %"struct.blink::LayoutBoxRareData"* %4, null
  br i1 %5, label %57, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %4, i64 0, i32 11, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::HashSet.3287"*, %"class.WTF::HashSet.3287"** %7, align 8
  %9 = icmp eq %"class.WTF::HashSet.3287"* %8, null
  br i1 %9, label %57, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::HashSet.3287", %"class.WTF::HashSet.3287"* %8, i64 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::HashSet.3287", %"class.WTF::HashSet.3287"* %8, i64 0, i32 0, i32 0
  %15 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %14, align 8
  %16 = getelementptr inbounds %"class.WTF::HashSet.3287", %"class.WTF::HashSet.3287"* %8, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %15, i64 %18
  br i1 %13, label %34, label %20

20:                                               ; preds = %10
  %21 = icmp eq i32 %17, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %20, %26
  %23 = phi %"class.blink::LayoutBox"** [ %27, %26 ], [ %15, %20 ]
  %24 = bitcast %"class.blink::LayoutBox"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  switch i64 %25, label %29 [
    i64 -1, label %26
    i64 0, label %26
  ]

26:                                               ; preds = %22, %22
  %27 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %23, i64 1
  %28 = icmp eq %"class.blink::LayoutBox"** %27, %19
  br i1 %28, label %34, label %22

29:                                               ; preds = %22, %20
  %30 = phi %"class.blink::LayoutBox"** [ %15, %20 ], [ %23, %22 ]
  %31 = icmp eq %"class.blink::LayoutBox"** %30, %19
  br i1 %31, label %34, label %40

32:                                               ; preds = %40, %55, %52
  %33 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %14, align 8
  br label %34

34:                                               ; preds = %26, %10, %32, %29
  %35 = phi %"class.blink::LayoutBox"** [ %33, %32 ], [ %15, %29 ], [ %15, %10 ], [ %15, %26 ]
  %36 = icmp eq %"class.blink::LayoutBox"** %35, null
  br i1 %36, label %57, label %37

37:                                               ; preds = %34
  %38 = bitcast %"class.blink::LayoutBox"** %35 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #20
  %39 = bitcast %"class.WTF::HashSet.3287"* %8 to i64*
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %16, align 8
  store i32 0, i32* %11, align 4
  br label %57

40:                                               ; preds = %29, %55
  %41 = phi %"class.blink::LayoutBox"** [ %49, %55 ], [ %30, %29 ]
  %42 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %42, i64 0, i32 12, i32 0, i32 0
  %44 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %43, align 8
  %45 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %44, i64 0, i32 10
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %45, align 8
  tail call void @_ZN5blink9LayoutBox11AddSnapAreaERS0_(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"* dereferenceable(216) %42)
  %46 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %41, i64 1
  %47 = icmp eq %"class.blink::LayoutBox"** %46, %19
  br i1 %47, label %32, label %48

48:                                               ; preds = %40, %52
  %49 = phi %"class.blink::LayoutBox"** [ %53, %52 ], [ %46, %40 ]
  %50 = bitcast %"class.blink::LayoutBox"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %55 [
    i64 -1, label %52
    i64 0, label %52
  ]

52:                                               ; preds = %48, %48
  %53 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %49, i64 1
  %54 = icmp eq %"class.blink::LayoutBox"** %53, %19
  br i1 %54, label %32, label %48

55:                                               ; preds = %48
  %56 = icmp eq %"class.blink::LayoutBox"** %49, %19
  br i1 %56, label %32, label %40

57:                                               ; preds = %2, %37, %34, %6
  ret void
}

declare %"class.blink::LayoutWorklet"* @_ZN5blink13LayoutWorklet4FromERNS_14LocalDOMWindowE(%"class.blink::LocalDOMWindow"* dereferenceable(904)) local_unnamed_addr #5

declare %"class.blink::LayoutWorkletGlobalScopeProxy"* @_ZN5blink13LayoutWorklet5ProxyEv(%"class.blink::LayoutWorklet"*) local_unnamed_addr #5

declare %"class.blink::CSSLayoutDefinition"* @_ZN5blink29LayoutWorkletGlobalScopeProxy14FindDefinitionERKN3WTF12AtomicStringE(%"class.blink::LayoutWorkletGlobalScopeProxy"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink9LayoutBox9DebugRectEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = bitcast %"class.blink::LayoutBox"* %0 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %3 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %3, i64 147
  %5 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutBox"* %5(%"class.blink::LayoutBox"* %0) #20
  %7 = icmp eq %"class.blink::LayoutBox"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %6, i64 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = and i160 %13, 15211807202738752817960438464512
  %15 = icmp eq i160 %14, 5070602400912917605986812821504
  br i1 %15, label %24, label %16, !prof !2

16:                                               ; preds = %8, %1
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %18 = bitcast %"class.blink::LayoutRect"* %17 to i64*
  %19 = load i64, i64* %18, align 4
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %22 = bitcast %"class.blink::LayoutSize"* %21 to i64*
  %23 = load i64, i64* %22, align 4
  br label %49

24:                                               ; preds = %8
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %6, i64 0, i32 2, i32 1
  %26 = bitcast %"class.blink::LayoutSize"* %25 to i64*
  %27 = load i64, i64* %26, align 4
  %28 = trunc i64 %27 to i32
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %30 = bitcast %"class.blink::LayoutSize"* %29 to i64*
  %31 = load i64, i64* %30, align 4
  %32 = trunc i64 %31 to i32
  %33 = icmp sgt i32 %32, -1
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %28, i32 %32) #20
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !2
  %39 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %40 = bitcast %"class.blink::LayoutRect"* %39 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = trunc i64 %41 to i32
  %43 = icmp sgt i32 %42, -1
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %38, i32 %42) #20
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 %44, i32 %47, !prof !2
  br label %49

49:                                               ; preds = %16, %24
  %50 = phi i64 [ %23, %16 ], [ %31, %24 ]
  %51 = phi i32 [ %20, %16 ], [ %48, %24 ]
  %52 = phi i64 [ %19, %16 ], [ %41, %24 ]
  %53 = and i64 %52, -4294967296
  %54 = zext i32 %51 to i64
  %55 = or i64 %53, %54
  %56 = insertvalue { i64, i64 } undef, i64 %55, 0
  %57 = insertvalue { i64, i64 } %56, i64 %50, 1
  ret { i64, i64 } %57
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK5blink9LayoutBox23ComputeOverflowClipAxesEv(%"class.blink::LayoutBox"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %10, i64 0, i32 45
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %58, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = and i96 %18, 1207959552
  %20 = icmp eq i96 %19, 134217728
  br i1 %20, label %58, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, i64 92
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* %2, i32 43) #20
  br i1 %26, label %58, label %27

27:                                               ; preds = %21
  %28 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %28, i64 92
  %30 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::LayoutObject"* %2, i32 46) #20
  br i1 %31, label %52, label %32

32:                                               ; preds = %27
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, i64 92
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* %2, i32 48) #20
  br i1 %36, label %52, label %37

37:                                               ; preds = %32
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, i64 92
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutObject"* %2, i32 45) #20
  br i1 %41, label %52, label %42

42:                                               ; preds = %37
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, i64 92
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* %2, i32 49) #20
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, i64 92
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::LayoutObject"* %2, i32 50) #20
  br i1 %51, label %52, label %61

52:                                               ; preds = %27, %32, %37, %42, %47
  %53 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %54 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %53, align 8
  %55 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %54, i64 24
  %56 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %55, align 8
  %57 = tail call zeroext i1 %56(%"class.blink::LayoutObject"* %2) #20
  br i1 %57, label %61, label %58

58:                                               ; preds = %15, %21, %1, %52
  %59 = tail call zeroext i1 @_ZNK5blink9LayoutBox14HasControlClipEv(%"class.blink::LayoutBox"* %0)
  %60 = select i1 %59, i8 3, i8 0
  br label %61

61:                                               ; preds = %47, %58, %52
  %62 = phi i8 [ 3, %52 ], [ %60, %58 ], [ 3, %47 ]
  ret i8 %62
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox18MutableForPainting24SavePreviousOverflowDataEv(%"class.blink::LayoutBox::MutableForPainting"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = bitcast %"class.blink::LayoutBox::MutableForPainting"* %0 to %"class.blink::LayoutBox"**
  %3 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %3, i64 0, i32 9
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.3253", %"class.std::__1::unique_ptr.3253"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %5, align 8
  %7 = icmp eq %"struct.blink::BoxOverflowModel"* %6, null
  br i1 %7, label %8, label %16

8:                                                ; preds = %1
  %9 = tail call noalias i8* @malloc(i64 116) #20
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 116, i1 false) #20
  %10 = ptrtoint i8* %9 to i64
  %11 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %5, align 8
  %12 = bitcast %"class.std::__1::unique_ptr.3253"* %4 to i64*
  store i64 %10, i64* %12, align 8
  %13 = icmp eq %"struct.blink::BoxOverflowModel"* %11, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @free(i8* %15) #20
  br label %16

16:                                               ; preds = %1, %8, %14
  %17 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %2, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %17, i64 0, i32 9, i32 0, i32 0, i32 0
  %19 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %18, align 8
  %20 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 4, !range !4
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %25 = bitcast %union.anon.3270* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 48, i1 false) #20
  store i8 1, i8* %20, align 4
  %26 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %2, align 8
  br label %27

27:                                               ; preds = %16, %23
  %28 = phi %"class.blink::LayoutBox"* [ %17, %16 ], [ %26, %23 ]
  %29 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18LayoutOverflowRectEv(%"class.blink::LayoutBox"* %28) #20
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = trunc i64 %30 to i32
  %32 = and i64 %30, -4294967296
  %33 = extractvalue { i64, i64 } %29, 1
  %34 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 0, i32 0, i32 5, i32 0
  %35 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %35, i64 0, i32 0, i32 9
  %37 = bitcast [20 x i8]* %36 to i160*
  %38 = load i160, i160* %37, align 8
  %39 = and i160 %38, 15211807202738752817960438464512
  %40 = icmp eq i160 %39, 5070602400912917605986812821504
  br i1 %40, label %41, label %49, !prof !2

41:                                               ; preds = %27
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 0, i32 0
  %43 = trunc i64 %33 to i32
  %44 = bitcast %"class.blink::LayoutBox"* %28 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %45 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %44, align 8
  %46 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %45, i64 106
  %47 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %46, align 8
  %48 = tail call i32 %47(%"class.blink::LayoutObject"* %42, i32 %31, i32 %43, %"class.blink::LayoutBox"* null) #20
  br label %49

49:                                               ; preds = %27, %41
  %50 = phi i32 [ %48, %41 ], [ %31, %27 ]
  %51 = load i8, i8* %20, align 4, !range !4
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %49
  tail call void @llvm.trap() #20
  unreachable

54:                                               ; preds = %49
  %55 = zext i32 %50 to i64
  %56 = or i64 %32, %55
  %57 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %58 = bitcast %"struct.blink::BoxOverflowModel::PreviousOverflowData"* %57 to i64*
  store i64 %56, i64* %58, align 4
  %59 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %60 = bitcast %"struct.blink::PhysicalSize"* %59 to i64*
  store i64 %33, i64* %60, align 4
  %61 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %2, align 8
  %62 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %61) #20
  %63 = extractvalue { i64, i64 } %62, 0
  %64 = trunc i64 %63 to i32
  %65 = and i64 %63, -4294967296
  %66 = extractvalue { i64, i64 } %62, 1
  %67 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %61, i64 0, i32 0, i32 0, i32 5, i32 0
  %68 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %68, i64 0, i32 0, i32 9
  %70 = bitcast [20 x i8]* %69 to i160*
  %71 = load i160, i160* %70, align 8
  %72 = and i160 %71, 15211807202738752817960438464512
  %73 = icmp eq i160 %72, 5070602400912917605986812821504
  br i1 %73, label %74, label %82, !prof !2

74:                                               ; preds = %54
  %75 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %61, i64 0, i32 0, i32 0
  %76 = trunc i64 %66 to i32
  %77 = bitcast %"class.blink::LayoutBox"* %61 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %78 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %77, align 8
  %79 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %78, i64 106
  %80 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %79, align 8
  %81 = tail call i32 %80(%"class.blink::LayoutObject"* %75, i32 %64, i32 %76, %"class.blink::LayoutBox"* null) #20
  br label %82

82:                                               ; preds = %54, %74
  %83 = phi i32 [ %81, %74 ], [ %64, %54 ]
  %84 = load i8, i8* %20, align 4, !range !4
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %87, !prof !2

86:                                               ; preds = %82
  tail call void @llvm.trap() #20
  unreachable

87:                                               ; preds = %82
  %88 = zext i32 %83 to i64
  %89 = or i64 %65, %88
  %90 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %91 = bitcast %"struct.blink::PhysicalRect"* %90 to i64*
  store i64 %89, i64* %91, align 4
  %92 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 1
  %93 = bitcast %"struct.blink::PhysicalSize"* %92 to i64*
  store i64 %66, i64* %93, align 4
  %94 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %2, align 8
  %95 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %94, i64 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %94, i64 0, i32 9, i32 0, i32 0, i32 0
  %97 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %96, align 8
  %98 = icmp eq %"struct.blink::BoxOverflowModel"* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %87
  %100 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %97, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %101 = load i8, i8* %100, align 4, !range !4
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %97, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast %"class.blink::LayoutRect"* %104 to i64*
  %106 = load i64, i64* %105, align 4
  %107 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %97, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  br label %110

108:                                              ; preds = %99, %87
  %109 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %94, i64 0, i32 2, i32 1
  br label %110

110:                                              ; preds = %108, %103
  %111 = phi i64 [ %106, %103 ], [ 0, %108 ]
  %112 = phi %"class.blink::LayoutSize"* [ %107, %103 ], [ %109, %108 ]
  %113 = bitcast %"class.blink::LayoutSize"* %112 to i64*
  %114 = load i64, i64* %113, align 4
  %115 = trunc i64 %111 to i32
  %116 = and i64 %111, -4294967296
  %117 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %94, i64 0, i32 0, i32 0, i32 5, i32 0
  %118 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %118, i64 0, i32 0, i32 9
  %120 = bitcast [20 x i8]* %119 to i160*
  %121 = load i160, i160* %120, align 8
  %122 = and i160 %121, 15211807202738752817960438464512
  %123 = icmp eq i160 %122, 5070602400912917605986812821504
  br i1 %123, label %124, label %134, !prof !2

124:                                              ; preds = %110
  %125 = trunc i64 %114 to i32
  %126 = bitcast %"class.blink::LayoutBox"* %94 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %127 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %126, align 8
  %128 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %127, i64 106
  %129 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %128, align 8
  %130 = tail call i32 %129(%"class.blink::LayoutObject"* %95, i32 %115, i32 %125, %"class.blink::LayoutBox"* null) #20
  %131 = load i8, i8* %20, align 4, !range !4
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %133, label %134, !prof !2

133:                                              ; preds = %124
  tail call void @llvm.trap() #20
  unreachable

134:                                              ; preds = %110, %124
  %135 = phi i32 [ %130, %124 ], [ %115, %110 ]
  %136 = zext i32 %135 to i64
  %137 = or i64 %116, %136
  %138 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %139 = bitcast %"struct.blink::PhysicalRect"* %138 to i64*
  store i64 %137, i64* %139, align 4
  %140 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %141 = bitcast %"struct.blink::PhysicalSize"* %140 to i64*
  store i64 %114, i64* %141, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox18MutableForPainting41SetPreviousGeometryForLayoutShiftTrackingERKNS_14PhysicalOffsetERKNS_10LayoutSizeERKNS_12PhysicalRectE(%"class.blink::LayoutBox::MutableForPainting"* nocapture readonly, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), %"class.blink::LayoutSize"* nocapture readonly dereferenceable(8), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %5 = alloca %"struct.blink::PhysicalRect", align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBox::MutableForPainting", %"class.blink::LayoutBox::MutableForPainting"* %0, i64 0, i32 0, i32 0
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 10
  %9 = bitcast %"struct.blink::PhysicalOffset"* %1 to i64*
  %10 = bitcast %"class.blink::FragmentData"* %8 to i64*
  %11 = load i64, i64* %9, align 4
  store i64 %11, i64* %10, align 8
  %12 = bitcast %"class.blink::LayoutBox::MutableForPainting"* %0 to %"class.blink::LayoutBox"**
  %13 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %13, i64 0, i32 3
  %15 = bitcast %"class.blink::LayoutSize"* %2 to i64*
  %16 = bitcast %"class.blink::LayoutSize"* %14 to i64*
  %17 = load i64, i64* %15, align 4
  store i64 %17, i64* %16, align 8
  %18 = bitcast %"struct.blink::PhysicalRect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #20
  %19 = bitcast %"struct.blink::PhysicalRect"* %5 to i64*
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %2, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 0, i32 0
  store i32 %21, i32* %22, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutSize", %"class.blink::LayoutSize"* %2, i64 0, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %5, i64 0, i32 1, i32 1, i32 0
  store i32 %24, i32* %25, align 4
  %26 = call zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"* nonnull %5, %"struct.blink::PhysicalRect"* dereferenceable(16) %3) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #20
  br i1 %26, label %55, label %27

27:                                               ; preds = %4
  %28 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %12, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %28, i64 0, i32 9
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.3253", %"class.std::__1::unique_ptr.3253"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %30, align 8
  %32 = icmp eq %"struct.blink::BoxOverflowModel"* %31, null
  br i1 %32, label %33, label %41

33:                                               ; preds = %27
  %34 = call noalias i8* @malloc(i64 116) #20
  call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 116, i1 false) #20
  %35 = ptrtoint i8* %34 to i64
  %36 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %30, align 8
  %37 = bitcast %"class.std::__1::unique_ptr.3253"* %29 to i64*
  store i64 %35, i64* %37, align 8
  %38 = icmp eq %"struct.blink::BoxOverflowModel"* %36, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @free(i8* %40) #20
  br label %41

41:                                               ; preds = %27, %33, %39
  %42 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %12, align 8
  %43 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %42, i64 0, i32 9, i32 0, i32 0, i32 0
  %44 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %43, align 8
  %45 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 4, !range !4
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %union.anon.3270* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 48, i1 false) #20
  store i8 1, i8* %45, align 4
  br label %51

51:                                               ; preds = %41, %48
  %52 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %53 = bitcast %"struct.blink::PhysicalRect"* %52 to i8*
  %54 = bitcast %"struct.blink::PhysicalRect"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %54, i64 16, i1 false)
  br label %55

55:                                               ; preds = %4, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %3 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %2, align 8
  %4 = icmp eq %"struct.blink::BoxOverflowModel"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %11 = load i8, i8* %10, align 4, !range !4
  %12 = icmp eq i8 %11, 0
  %13 = select i1 %12, i8 0, i8 2
  br label %14

14:                                               ; preds = %5, %1, %9
  %15 = phi i8 [ 0, %5 ], [ %13, %9 ], [ 0, %1 ]
  ret i8 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 -1, i32 12, i32 0, i32 1
  %3 = getelementptr inbounds %"class.blink::PersistentNodePtr.269", %"class.blink::PersistentNodePtr.269"* %2, i64 22
  %4 = bitcast %"class.blink::PersistentNodePtr.269"* %3 to %"struct.blink::BoxOverflowModel"**
  %5 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %4, align 8
  %6 = icmp eq %"struct.blink::BoxOverflowModel"* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 4, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %13 = load i8, i8* %12, align 4, !range !4
  %14 = icmp eq i8 %13, 0
  %15 = select i1 %14, i8 0, i8 2
  br label %16

16:                                               ; preds = %1, %7, %11
  %17 = phi i8 [ 0, %7 ], [ %15, %11 ], [ 0, %1 ]
  ret i8 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK5blink9LayoutBox17ResolvedDirectionEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = alloca %"class.blink::NGInlineCursor", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 1207959552
  %8 = icmp eq i96 %7, 1207959552
  br i1 %8, label %9, label %37

9:                                                ; preds = %1
  %10 = and i96 %6, 268435456
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %9
  %13 = bitcast %"class.blink::NGInlineCursor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %13) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 112, i1 false)
  %14 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 81, i1 false) #20
  %15 = bitcast %"class.blink::LayoutBlockFlow"** %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #20
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %3) #20
  %16 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %2, i64 0, i32 0, i32 0
  %17 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %16, align 8
  %18 = icmp eq %"class.blink::NGFragmentItem"* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #20
  %20 = load i96, i96* %5, align 4
  br label %23

21:                                               ; preds = %12
  %22 = call zeroext i8 @_ZNK5blink14NGFragmentItem17ResolvedDirectionEv(%"class.blink::NGFragmentItem"* nonnull %17) #20
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %13) #20
  br label %47

23:                                               ; preds = %9, %19
  %24 = phi i96 [ %6, %9 ], [ %20, %19 ]
  %25 = and i96 %24, 268435456
  %26 = icmp eq i96 %25, 0
  br i1 %26, label %27, label %37

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11, i32 0
  %29 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %28, align 8
  %30 = icmp eq %"class.blink::InlineBox"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %29, i64 0, i32 7, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = lshr i32 %33, 2
  %35 = trunc i32 %34 to i8
  %36 = and i8 %35, 1
  br label %47

37:                                               ; preds = %23, %27, %1
  %38 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %39 = bitcast %"class.blink::ComputedStyle"** %38 to %"class.blink::ComputedStyleBase"**
  %40 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %40, i64 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = lshr i160 %43, 115
  %45 = trunc i160 %44 to i8
  %46 = and i8 %45, 1
  br label %47

47:                                               ; preds = %21, %37, %31
  %48 = phi i8 [ %36, %31 ], [ %46, %37 ], [ %22, %21 ]
  ret i8 %48
}

declare void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink9LayoutBox15NeedsScrollNodeEm(%"class.blink::LayoutBox"*, i64) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 8589934592
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %28, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = lshr i160 %13, 74
  %15 = trunc i160 %14 to i32
  %16 = and i32 %15, 7
  switch i32 %16, label %17 [
    i32 5, label %28
    i32 2, label %28
  ]

17:                                               ; preds = %8
  %18 = and i64 %1, 67108864
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %22 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %21) #20
  %23 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %22, i64 0, i32 2
  %24 = bitcast i24* %23 to i32*
  %25 = load i32, i32* %24, align 8
  %26 = and i32 %25, 2
  %27 = icmp ne i32 %26, 0
  br label %28

28:                                               ; preds = %8, %8, %2, %17, %20
  %29 = phi i1 [ %27, %20 ], [ false, %8 ], [ true, %17 ], [ false, %2 ], [ false, %8 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox17OverrideTickmarksEN3WTF6VectorINS_7IntRectELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutBox"*, %"class.WTF::Vector.804"* nocapture) local_unnamed_addr #4 align 2 {
  %3 = alloca %"class.WTF::Vector.804", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %5 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %4) #20
  %6 = getelementptr inbounds %"class.WTF::Vector.804", %"class.WTF::Vector.804"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::Vector.804", %"class.WTF::Vector.804"* %3, i64 0, i32 0, i32 0, i32 2
  %8 = bitcast %"class.WTF::Vector.804"* %1 to i64*
  %9 = bitcast %"class.WTF::Vector.804"* %3 to i64*
  store i64 0, i64* %9, align 8
  %10 = load i64, i64* %8, align 8
  %11 = bitcast %"class.WTF::Vector.804"* %3 to i64*
  store atomic i64 0, i64* %8 monotonic, align 8
  store atomic i64 %10, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.804", %"class.WTF::Vector.804"* %1, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %6, align 8
  store i32 0, i32* %12, align 4
  %14 = getelementptr inbounds %"class.WTF::Vector.804", %"class.WTF::Vector.804"* %1, i64 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %7, align 4
  store i32 0, i32* %14, align 4
  call void @_ZN5blink24PaintLayerScrollableArea20SetTickmarksOverrideEN3WTF6VectorINS_7IntRectELj0ENS1_18PartitionAllocatorEEE(%"class.blink::PaintLayerScrollableArea"* %5, %"class.WTF::Vector.804"* nonnull %3) #20
  %16 = getelementptr inbounds %"class.WTF::Vector.804", %"class.WTF::Vector.804"* %3, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::IntRect"*, %"class.blink::IntRect"** %16, align 8
  %18 = icmp eq %"class.blink::IntRect"* %17, null
  %19 = bitcast %"class.blink::IntRect"* %17 to i8*
  br i1 %18, label %25, label %20, !prof !3

20:                                               ; preds = %2
  %21 = load i32, i32* %7, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23, !prof !2

23:                                               ; preds = %20
  store i32 0, i32* %7, align 4
  br label %24

24:                                               ; preds = %23, %20
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %19) #20
  store %"class.blink::IntRect"* null, %"class.blink::IntRect"** %16, align 8
  br label %25

25:                                               ; preds = %2, %24
  %26 = call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %4) #20
  %27 = icmp eq %"class.blink::PaintLayerScrollableArea"* %26, null
  br i1 %27, label %37, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %26, i64 0, i32 0
  %30 = bitcast %"class.blink::PaintLayerScrollableArea"* %26 to %"class.blink::Scrollbar"* (%"class.blink::ScrollableArea"*)***
  %31 = load %"class.blink::Scrollbar"* (%"class.blink::ScrollableArea"*)**, %"class.blink::Scrollbar"* (%"class.blink::ScrollableArea"*)*** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Scrollbar"* (%"class.blink::ScrollableArea"*)*, %"class.blink::Scrollbar"* (%"class.blink::ScrollableArea"*)** %31, i64 40
  %33 = load %"class.blink::Scrollbar"* (%"class.blink::ScrollableArea"*)*, %"class.blink::Scrollbar"* (%"class.blink::ScrollableArea"*)** %32, align 8
  %34 = call %"class.blink::Scrollbar"* %33(%"class.blink::ScrollableArea"* %29) #20
  %35 = icmp eq %"class.blink::Scrollbar"* %34, null
  br i1 %35, label %37, label %36

36:                                               ; preds = %28
  call void @_ZN5blink9Scrollbar25SetNeedsPaintInvalidationENS_13ScrollbarPartE(%"class.blink::Scrollbar"* nonnull %34, i32 -9) #20
  br label %37

37:                                               ; preds = %25, %28, %36
  ret void
}

declare void @_ZN5blink24PaintLayerScrollableArea20SetTickmarksOverrideEN3WTF6VectorINS_7IntRectELj0ENS1_18PartitionAllocatorEEE(%"class.blink::PaintLayerScrollableArea"*, %"class.WTF::Vector.804"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9LayoutBox27InvalidatePaintForTickmarksEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %2) #20
  %4 = icmp eq %"class.blink::PaintLayerScrollableArea"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %3, i64 0, i32 0
  %7 = bitcast %"class.blink::PaintLayerScrollableArea"* %3 to %"class.blink::Scrollbar"* (%"class.blink::ScrollableArea"*)***
  %8 = load %"class.blink::Scrollbar"* (%"class.blink::ScrollableArea"*)**, %"class.blink::Scrollbar"* (%"class.blink::ScrollableArea"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Scrollbar"* (%"class.blink::ScrollableArea"*)*, %"class.blink::Scrollbar"* (%"class.blink::ScrollableArea"*)** %8, i64 40
  %10 = load %"class.blink::Scrollbar"* (%"class.blink::ScrollableArea"*)*, %"class.blink::Scrollbar"* (%"class.blink::ScrollableArea"*)** %9, align 8
  %11 = tail call %"class.blink::Scrollbar"* %10(%"class.blink::ScrollableArea"* %6) #20
  %12 = icmp eq %"class.blink::Scrollbar"* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %5
  tail call void @_ZN5blink9Scrollbar25SetNeedsPaintInvalidationENS_13ScrollbarPartE(%"class.blink::Scrollbar"* nonnull %11, i32 -9) #20
  br label %14

14:                                               ; preds = %13, %5, %1
  ret void
}

declare void @_ZN5blink9Scrollbar25SetNeedsPaintInvalidationENS_13ScrollbarPartE(%"class.blink::Scrollbar"*, i32) local_unnamed_addr #5

declare %"class.WTF::StringImpl"* @_ZNK5blink9InlineBox9DebugNameEv(%"class.blink::InlineBox"*) unnamed_addr #5

declare i32 @_ZNK5blink9InlineBox11OwnerNodeIdEv(%"class.blink::InlineBox"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink17DisplayItemClient32VisualRectOutsetForRasterEffectsEv(%"class.blink::DisplayItemClient"*) unnamed_addr #4 comdat align 2 {
  ret i8 0
}

declare void @_ZN5blink9InlineBox7DestroyEv(%"class.blink::InlineBox"*) unnamed_addr #5

declare void @_ZN5blink9InlineBox10DeleteLineEv(%"class.blink::InlineBox"*) unnamed_addr #5

declare void @_ZN5blink9InlineBox11ExtractLineEv(%"class.blink::InlineBox"*) unnamed_addr #5

declare void @_ZN5blink9InlineBox10AttachLineEv(%"class.blink::InlineBox"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9InlineBox11IsLineBreakEv(%"class.blink::InlineBox"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink9InlineBox4MoveERKNS_10LayoutSizeE(%"class.blink::InlineBox"*, %"class.blink::LayoutSize"* dereferenceable(8)) unnamed_addr #5

declare void @_ZNK5blink9InlineBox5PaintERKNS_9PaintInfoERKNS_14PhysicalOffsetENS_10LayoutUnitES7_(%"class.blink::InlineBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32, i32) unnamed_addr #5

declare zeroext i1 @_ZN5blink9InlineBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_10LayoutUnitES9_(%"class.blink::InlineBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32, i32) unnamed_addr #5

declare i8* @_ZNK5blink9InlineBox7BoxNameEv(%"class.blink::InlineBox"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9InlineBox15IsInlineFlowBoxEv(%"class.blink::InlineBox"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9InlineBox15IsInlineTextBoxEv(%"class.blink::InlineBox"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9InlineBox15IsRootInlineBoxEv(%"class.blink::InlineBox"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9InlineBox18IsSVGInlineTextBoxEv(%"class.blink::InlineBox"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9InlineBox18IsSVGInlineFlowBoxEv(%"class.blink::InlineBox"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9InlineBox18IsSVGRootInlineBoxEv(%"class.blink::InlineBox"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9InlineBox20VirtualLogicalHeightEv(%"class.blink::InlineBox"*) unnamed_addr #4 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9InlineBox14SetConstructedEv(%"class.blink::InlineBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 7, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = or i32 %3, 2
  store i32 %4, i32* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9InlineBox6IsLeafEv(%"class.blink::InlineBox"*) unnamed_addr #4 comdat align 2 {
  ret i1 true
}

declare i32 @_ZNK5blink9InlineBox16BaselinePositionENS_12FontBaselineE(%"class.blink::InlineBox"*, i32) unnamed_addr #5

declare i32 @_ZNK5blink9InlineBox10LineHeightEv(%"class.blink::InlineBox"*) unnamed_addr #5

declare i32 @_ZNK5blink9InlineBox14CaretMinOffsetEv(%"class.blink::InlineBox"*) unnamed_addr #5

declare i32 @_ZNK5blink9InlineBox14CaretMaxOffsetEv(%"class.blink::InlineBox"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9InlineBox15ClearTruncationEv(%"class.blink::InlineBox"*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9InlineBox9MarkDirtyEv(%"class.blink::InlineBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %0, i64 0, i32 7, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = or i32 %3, 256
  store i32 %4, i32* %2, align 4
  ret void
}

declare void @_ZN5blink9InlineBox14DirtyLineBoxesEv(%"class.blink::InlineBox"*) unnamed_addr #5

declare zeroext i1 @_ZNK5blink9InlineBox10IsSelectedEv(%"class.blink::InlineBox"*) unnamed_addr #5

declare zeroext i1 @_ZNK5blink9InlineBox22CanAccommodateEllipsisEbNS_10LayoutUnitES1_(%"class.blink::InlineBox"*, i1 zeroext, i32, i32) unnamed_addr #5

declare i32 @_ZN5blink9InlineBox16PlaceEllipsisBoxEbNS_10LayoutUnitES1_S1_RS1_PPS0_S1_(%"class.blink::InlineBox"*, i1 zeroext, i32, i32, i32, %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::InlineBox"**, i32) unnamed_addr #5

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #5

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #5

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #5

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #5

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #5

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink12LayoutObject15VirtualChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret %"class.blink::LayoutObjectChildList"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink12LayoutObject15VirtualChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret %"class.blink::LayoutObjectChildList"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject15CanHaveChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %3 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %3, i64 13
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObjectChildList"* %5(%"class.blink::LayoutObject"* %0) #20
  %7 = icmp ne %"class.blink::LayoutObjectChildList"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #4 comdat align 2 {
  ret i1 true
}

declare void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #20
  ret void
}

declare void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsLayoutBlockEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #4 comdat align 2 {
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #5

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutObject"*) unnamed_addr #5

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #5

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink12LayoutObject19VirtualContinuationEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret %"class.blink::LayoutBoxModelObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject13HoverAncestorEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  ret %"class.blink::LayoutObject"* %3
}

declare void @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutObject"*) unnamed_addr #5

declare i16 @_ZN5blink12LayoutObject20RecalcLayoutOverflowEv(%"class.blink::LayoutObject"*) unnamed_addr #5

declare void @_ZN5blink20LayoutBoxModelObject20RecalcVisualOverflowEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1989"* dereferenceable(16)) unnamed_addr #5

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #5

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #5

declare %"class.blink::Node"* @_ZNK5blink12LayoutObject14NodeForHitTestEv(%"class.blink::LayoutObject"*) unnamed_addr #5

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #5

declare void @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #5

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #5

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"* dereferenceable(88)) unnamed_addr #5

declare { i64, i64 } @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutObject6lengthEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret { i64, i64 } zeroinitializer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #5

declare void @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DisplayItemClient"* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret %"class.blink::DisplayItemClient"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #4 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE(%"class.blink::LayoutObject"*, i32) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv(%"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_(%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %12, label %27, !prof !2

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %2, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %2) #20
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !2
  %21 = icmp sgt i32 %20, -1
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %20) #20
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !2
  br label %27

27:                                               ; preds = %4, %12
  %28 = phi i32 [ %26, %12 ], [ %1, %4 ]
  ret i32 %28
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox17BorderBoundingBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = trunc i64 %4 to i32
  %6 = lshr i64 %4, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %9 = bitcast %"class.blink::LayoutSize"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = srem i32 %5, 64
  %15 = icmp slt i32 %11, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %11) #20
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !2
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %14, 32
  %26 = ashr i32 %25, 6
  %27 = sub nsw i32 %21, %26
  %28 = add nsw i32 %24, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %1
  %31 = add i32 %11, 4
  %32 = icmp ugt i32 %31, 8
  br i1 %32, label %33, label %36, !prof !13

33:                                               ; preds = %30
  %34 = icmp sgt i32 %11, 0
  %35 = select i1 %34, i32 1, i32 -1
  br label %36

36:                                               ; preds = %33, %30, %1
  %37 = phi i32 [ %35, %33 ], [ %28, %1 ], [ 0, %30 ]
  %38 = srem i32 %7, 64
  %39 = icmp slt i32 %13, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %13) #20
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !2
  %45 = sdiv i32 %44, 64
  %46 = srem i32 %44, 64
  %47 = add nsw i32 %46, 32
  %48 = ashr i32 %47, 6
  %49 = add nsw i32 %38, 32
  %50 = ashr i32 %49, 6
  %51 = sub nsw i32 %45, %50
  %52 = add nsw i32 %48, %51
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %36
  %55 = add i32 %13, 4
  %56 = icmp ugt i32 %55, 8
  br i1 %56, label %57, label %60, !prof !13

57:                                               ; preds = %54
  %58 = icmp sgt i32 %13, 0
  %59 = select i1 %58, i32 1, i32 -1
  br label %60

60:                                               ; preds = %36, %54, %57
  %61 = phi i32 [ %59, %57 ], [ %52, %36 ], [ 0, %54 ]
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %37 to i64
  %65 = or i64 %63, %64
  %66 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %65, 1
  ret { i64, i64 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 16
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #20
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 13
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #20
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 14
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #20
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 15
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #20
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject9BorderTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = icmp ult i16 %7, 8192
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 14
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11BorderRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 3584
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %3 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %3, i64 122
  %5 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::LayoutBoxModelObject"* %0) #20
  %7 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %7, i64 125
  %9 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LayoutBoxModelObject"* %0) #20
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %11, i64 123
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBoxModelObject"* %0) #20
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 124
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBoxModelObject"* %0) #20
  %19 = zext i32 %10 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %6 to i64
  %22 = or i64 %20, %21
  %23 = insertvalue { i64, i64 } undef, i64 %22, 0
  %24 = zext i32 %18 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %14 to i64
  %27 = or i64 %25, %26
  %28 = insertvalue { i64, i64 } %23, i64 %27, 1
  ret { i64, i64 } %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox9MarginTopEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12MarginBottomEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox10MarginLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11MarginRightEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret void
}

declare void @_ZNK5blink20LayoutBoxModelObject20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.4223"* dereferenceable(16), i32) unnamed_addr #5

declare void @_ZNK5blink20LayoutBoxModelObject17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.4223"* dereferenceable(16)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #4 comdat align 2 {
  ret i64 0
}

declare void @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !430
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 1033, i64 0 }, %12 ], [ { i64 1041, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 1017, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #20
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20CollapsedMarginAfterEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !433
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 1041, i64 0 }, %12 ], [ { i64 1033, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 1025, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #20
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox23IsInSelfHitTestingPhaseENS_13HitTestActionE(%"class.blink::LayoutBox"*, i32) unnamed_addr #4 comdat align 2 {
  %3 = icmp eq i32 %1, 4
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink9LayoutBox13IntrinsicSizeEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #20
  br i1 %10, label %13, label %66

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #20
  br i1 %12, label %13, label %66

13:                                               ; preds = %9, %11
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 5, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %20, align 8
  br i1 %19, label %22, label %44

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %21, i64 0, i32 2, i32 1
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %21, i64 0, i32 2, i32 1, i32 3
  %25 = load i8, i8* %24, align 2, !range !4
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = bitcast %"class.blink::Length"* %23 to float*
  %29 = load float, float* %28, align 4
  br label %34

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %23, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = sitofp i32 %32 to float
  br label %34

34:                                               ; preds = %30, %27
  %35 = phi float [ %29, %27 ], [ %33, %30 ]
  %36 = fmul float %35, 6.400000e+01
  %37 = fcmp ult float %36, 0xC1E0000000000000
  %38 = fcmp ugt float %36, 0x41DFFFFFE0000000
  %39 = fcmp ogt float %36, 0xC1E0000000000000
  %40 = select i1 %39, float %36, float 0xC1E0000000000000
  %41 = fptosi float %40 to i32
  %42 = select i1 %37, i32 0, i32 2147483647
  %43 = select i1 %38, i32 %42, i32 %41
  br label %69

44:                                               ; preds = %13
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %21, i64 0, i32 2, i32 0
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %21, i64 0, i32 2, i32 0, i32 3
  %47 = load i8, i8* %46, align 2, !range !4
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = bitcast %"class.blink::Length"* %45 to float*
  %51 = load float, float* %50, align 4
  br label %56

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %45, i64 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = sitofp i32 %54 to float
  br label %56

56:                                               ; preds = %52, %49
  %57 = phi float [ %51, %49 ], [ %55, %52 ]
  %58 = fmul float %57, 6.400000e+01
  %59 = fcmp ult float %58, 0xC1E0000000000000
  %60 = fcmp ugt float %58, 0x41DFFFFFE0000000
  %61 = fcmp ogt float %58, 0xC1E0000000000000
  %62 = select i1 %61, float %58, float 0xC1E0000000000000
  %63 = fptosi float %62 to i32
  %64 = select i1 %59, i32 0, i32 2147483647
  %65 = select i1 %60, i32 %64, i32 %63
  br label %69

66:                                               ; preds = %9, %11
  %67 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 4, i32 0
  %68 = load i32, i32* %67, align 8
  br label %69

69:                                               ; preds = %56, %34, %66
  %70 = phi i32 [ %68, %66 ], [ %43, %34 ], [ %65, %56 ]
  ret i32 %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1073741824
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %10 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, i64 22
  %12 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8) #20
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi i1 [ false, %1 ], [ %14, %7 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41553586675481359781061931072225280
  %8 = icmp eq i160 %7, 41538374868278621028243970633760768
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowXEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 132226261520350065983488
  %14 = icmp eq i160 %13, 75557863725914323419136
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 74
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowYEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1057810092162800527867904
  %14 = icmp eq i160 %13, 604462909807314587353088
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 77
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE(%"class.blink::LayoutBox"*, i32) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20FirstLineBoxBaselineEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  ret i32 -64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBox"*, i32) unnamed_addr #4 comdat align 2 {
  ret i32 -64
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBox"* @_ZNK5blink9LayoutBox32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*) unnamed_addr #4 comdat align 2 {
  ret %"class.blink::LayoutBox"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  ret i32 3
}

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #4 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #4 align 2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #5

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #5

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3249"*, %class.scoped_refptr.3247*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %class.scoped_refptr.3247* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #20
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #14

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE5eraseEPKSC_(%"class.WTF::HashTable.4856"*, %"struct.WTF::KeyValuePair.4859"*) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ShapeOutsideInfo"*, %"class.blink::ShapeOutsideInfo"** %3, align 8
  store %"class.blink::ShapeOutsideInfo"* null, %"class.blink::ShapeOutsideInfo"** %3, align 8
  %5 = icmp eq %"class.blink::ShapeOutsideInfo"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::ShapeOutsideInfo", %"class.blink::ShapeOutsideInfo"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Shape"*, %"class.blink::Shape"** %7, align 8
  store %"class.blink::Shape"* null, %"class.blink::Shape"** %7, align 8
  %9 = icmp eq %"class.blink::Shape"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Shape"* %8 to void (%"class.blink::Shape"*)***
  %12 = load void (%"class.blink::Shape"*)**, void (%"class.blink::Shape"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::Shape"*)*, void (%"class.blink::Shape"*)** %12, i64 1
  %14 = load void (%"class.blink::Shape"*)*, void (%"class.blink::Shape"*)** %13, align 8
  tail call void %14(%"class.blink::Shape"* nonnull %8) #20
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.blink::ShapeOutsideInfo"* %4 to i8*
  tail call void @free(i8* %16) #20
  br label %17

17:                                               ; preds = %2, %15
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %1, i64 0, i32 0
  store %"class.blink::LayoutBox"* inttoptr (i64 -1 to %"class.blink::LayoutBox"*), %"class.blink::LayoutBox"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, 1
  %22 = and i32 %21, 2147483647
  %23 = and i32 %20, -2147483648
  %24 = or i32 %22, %23
  store i32 %24, i32* %19, align 8
  %25 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -1
  store i32 %27, i32* %25, align 4
  %28 = mul i32 %27, 6
  %29 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp ult i32 %28, %30
  %32 = icmp ugt i32 %30, 8
  %33 = and i1 %31, %32
  br i1 %33, label %34, label %41

34:                                               ; preds = %17
  %35 = lshr i32 %30, 1
  %36 = zext i32 %35 to i64
  %37 = shl nuw nsw i64 %36, 4
  %38 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %37, i8* getelementptr inbounds ([191 x i8], [191 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink9LayoutBoxENSt3__110unique_ptrINS2_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEEEEPKcv, i64 0, i64 0)) #20
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %38, i8 0, i64 %37, i1 false) #20
  %39 = bitcast i8* %38 to %"struct.WTF::KeyValuePair.4859"*
  %40 = tail call %"struct.WTF::KeyValuePair.4859"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE8RehashToEPSC_jSN_(%"class.WTF::HashTable.4856"* %0, %"struct.WTF::KeyValuePair.4859"* %39, i32 %35, %"struct.WTF::KeyValuePair.4859"* null) #20
  br label %41

41:                                               ; preds = %34, %17
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.4859"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE8RehashToEPSC_jSN_(%"class.WTF::HashTable.4856"*, %"struct.WTF::KeyValuePair.4859"*, i32, %"struct.WTF::KeyValuePair.4859"*) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.4856", align 8
  %6 = bitcast %"class.WTF::HashTable.4856"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #20
  %7 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.4856"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.4859"* %1, %"struct.WTF::KeyValuePair.4859"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.4859"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.4856"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.4856"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.4859"* %22 to i64
  br label %70

24:                                               ; preds = %113
  %25 = bitcast %"class.WTF::HashTable.4856"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.4856"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %114, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.4859"* [ null, %16 ], [ %117, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %115, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.4859"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %66, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %64, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %61, %39
  %42 = phi i64 [ 0, %39 ], [ %62, %61 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %35, i64 %42, i32 0
  %44 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %43, align 8
  %45 = icmp eq %"class.blink::LayoutBox"* %44, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  br i1 %45, label %61, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.blink::ShapeOutsideInfo"*, %"class.blink::ShapeOutsideInfo"** %47, align 8
  store %"class.blink::ShapeOutsideInfo"* null, %"class.blink::ShapeOutsideInfo"** %47, align 8
  %49 = icmp eq %"class.blink::ShapeOutsideInfo"* %48, null
  br i1 %49, label %61, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::ShapeOutsideInfo", %"class.blink::ShapeOutsideInfo"* %48, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"class.blink::Shape"*, %"class.blink::Shape"** %51, align 8
  store %"class.blink::Shape"* null, %"class.blink::Shape"** %51, align 8
  %53 = icmp eq %"class.blink::Shape"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::Shape"* %52 to void (%"class.blink::Shape"*)***
  %56 = load void (%"class.blink::Shape"*)**, void (%"class.blink::Shape"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.blink::Shape"*)*, void (%"class.blink::Shape"*)** %56, i64 1
  %58 = load void (%"class.blink::Shape"*)*, void (%"class.blink::Shape"*)** %57, align 8
  call void %58(%"class.blink::Shape"* nonnull %52) #20
  br label %59

59:                                               ; preds = %54, %50
  %60 = bitcast %"class.blink::ShapeOutsideInfo"* %48 to i8*
  call void @free(i8* %60) #20
  br label %61

61:                                               ; preds = %59, %46, %41
  %62 = add nuw nsw i64 %42, 1
  %63 = icmp eq i64 %62, %40
  br i1 %63, label %64, label %41

64:                                               ; preds = %61, %37
  %65 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %65) #20
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %66

66:                                               ; preds = %28, %64
  %67 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 3
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, -2147483648
  store i32 %69, i32* %67, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #20
  ret %"struct.WTF::KeyValuePair.4859"* %33

70:                                               ; preds = %21, %113
  %71 = phi i64 [ %114, %113 ], [ %23, %21 ]
  %72 = phi i32 [ %115, %113 ], [ %13, %21 ]
  %73 = phi %"struct.WTF::KeyValuePair.4859"* [ %116, %113 ], [ %22, %21 ]
  %74 = phi %"struct.WTF::KeyValuePair.4859"* [ %117, %113 ], [ null, %21 ]
  %75 = phi i32 [ %118, %113 ], [ 0, %21 ]
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %73, i64 %76
  %78 = bitcast %"struct.WTF::KeyValuePair.4859"* %77 to i64*
  %79 = load i64, i64* %78, align 8
  switch i64 %79, label %80 [
    i64 -1, label %113
    i64 0, label %113
  ]

80:                                               ; preds = %70
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %77, i64 0, i32 0
  %82 = call { %"struct.WTF::KeyValuePair.4859"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.4856"* nonnull %5, %"class.blink::LayoutBox"** dereferenceable(8) %81) #20
  %83 = extractvalue { %"struct.WTF::KeyValuePair.4859"*, i8 } %82, 0
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %83, i64 0, i32 1, i32 0, i32 0, i32 0
  %85 = load %"class.blink::ShapeOutsideInfo"*, %"class.blink::ShapeOutsideInfo"** %84, align 8
  store %"class.blink::ShapeOutsideInfo"* null, %"class.blink::ShapeOutsideInfo"** %84, align 8
  %86 = icmp eq %"class.blink::ShapeOutsideInfo"* %85, null
  br i1 %86, label %98, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.blink::ShapeOutsideInfo", %"class.blink::ShapeOutsideInfo"* %85, i64 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"class.blink::Shape"*, %"class.blink::Shape"** %88, align 8
  store %"class.blink::Shape"* null, %"class.blink::Shape"** %88, align 8
  %90 = icmp eq %"class.blink::Shape"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %87
  %92 = bitcast %"class.blink::Shape"* %89 to void (%"class.blink::Shape"*)***
  %93 = load void (%"class.blink::Shape"*)**, void (%"class.blink::Shape"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::Shape"*)*, void (%"class.blink::Shape"*)** %93, i64 1
  %95 = load void (%"class.blink::Shape"*)*, void (%"class.blink::Shape"*)** %94, align 8
  call void %95(%"class.blink::Shape"* nonnull %89) #20
  br label %96

96:                                               ; preds = %91, %87
  %97 = bitcast %"class.blink::ShapeOutsideInfo"* %85 to i8*
  call void @free(i8* %97) #20
  br label %98

98:                                               ; preds = %80, %96
  %99 = load i64, i64* %78, align 8
  %100 = bitcast %"struct.WTF::KeyValuePair.4859"* %83 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %83, i64 0, i32 1
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %73, i64 %76, i32 1
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4860", %"class.std::__1::unique_ptr.4860"* %102, i64 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.std::__1::unique_ptr.4860"* %102 to i64*
  %105 = load i64, i64* %104, align 8
  store %"class.blink::ShapeOutsideInfo"* null, %"class.blink::ShapeOutsideInfo"** %103, align 8
  %106 = bitcast %"class.std::__1::unique_ptr.4860"* %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = load %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"** %15, align 8
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %107, i64 %76
  %109 = icmp eq %"struct.WTF::KeyValuePair.4859"* %108, %3
  %110 = select i1 %109, %"struct.WTF::KeyValuePair.4859"* %83, %"struct.WTF::KeyValuePair.4859"* %74
  %111 = load i32, i32* %12, align 8
  %112 = ptrtoint %"struct.WTF::KeyValuePair.4859"* %107 to i64
  br label %113

113:                                              ; preds = %70, %70, %98
  %114 = phi i64 [ %71, %70 ], [ %112, %98 ], [ %71, %70 ]
  %115 = phi i32 [ %72, %70 ], [ %111, %98 ], [ %72, %70 ]
  %116 = phi %"struct.WTF::KeyValuePair.4859"* [ %73, %70 ], [ %107, %98 ], [ %73, %70 ]
  %117 = phi %"struct.WTF::KeyValuePair.4859"* [ %74, %70 ], [ %110, %98 ], [ %74, %70 ]
  %118 = add i32 %75, 1
  %119 = icmp eq i32 %118, %115
  br i1 %119, label %24, label %70
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.4859"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.4856"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.4859"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %32, i64 0, i32 0
  %35 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutBox"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LayoutBox"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.4859"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.4859"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.4859"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.4859"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.4859"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::LayoutBox"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::LayoutBox"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::LayoutBox"* %63, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.4859"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %75, i64 0, i32 0
  %78 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutBox"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.4859"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.4859"*, i8 } undef, %"struct.WTF::KeyValuePair.4859"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.4859"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.4859"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"* } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.4856"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.4859"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %34, i64 0, i32 0
  %36 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LayoutBox"*
  %38 = icmp eq %"class.blink::LayoutBox"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::LayoutBox"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::LayoutBox"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %63, i64 0, i32 0
  %65 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutBox"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.4859"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.4859"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.4859"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.4859"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"* } undef, %"struct.WTF::KeyValuePair.4859"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"* } %79, %"struct.WTF::KeyValuePair.4859"* %78, 1
  ret { %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"* } %80
}

declare %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10LengthSizeeqERKS0_(%"class.blink::LengthSize"*, %"class.blink::LengthSize"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0, i32 2
  %6 = load i8, i8* %5, align 1
  %7 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 0, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %6, %8
  br i1 %9, label %10, label %90

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0, i32 1
  %12 = load i8, i8* %11, align 4, !range !4
  %13 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 0, i32 1
  %14 = load i8, i8* %13, align 4, !range !4
  %15 = icmp eq i8 %12, %14
  br i1 %15, label %16, label %90

16:                                               ; preds = %10
  %17 = icmp eq i8 %6, 12
  br i1 %17, label %46, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0, i32 3
  %20 = load i8, i8* %19, align 2, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::LengthSize"* %0 to float*
  %24 = load float, float* %23, align 4
  br label %29

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  br label %29

29:                                               ; preds = %25, %22
  %30 = phi float [ %24, %22 ], [ %28, %25 ]
  %31 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 0, i32 3
  %32 = load i8, i8* %31, align 2, !range !4
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.blink::LengthSize"* %1 to float*
  %36 = load float, float* %35, align 4
  br label %41

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = sitofp i32 %39 to float
  br label %41

41:                                               ; preds = %37, %34
  %42 = phi float [ %36, %34 ], [ %40, %37 ]
  %43 = fcmp oeq float %30, %42
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %3, %"class.blink::Length"* dereferenceable(8) %4) #20
  br i1 %45, label %46, label %90

46:                                               ; preds = %16, %41, %44
  %47 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 1
  %49 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 1, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 1, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %50, %52
  br i1 %53, label %54, label %90

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 1, i32 1
  %56 = load i8, i8* %55, align 4, !range !4
  %57 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 1, i32 1
  %58 = load i8, i8* %57, align 4, !range !4
  %59 = icmp eq i8 %56, %58
  br i1 %59, label %60, label %90

60:                                               ; preds = %54
  %61 = icmp eq i8 %50, 12
  br i1 %61, label %90, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %0, i64 0, i32 1, i32 3
  %64 = load i8, i8* %63, align 2, !range !4
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %62
  %67 = bitcast %"class.blink::Length"* %47 to float*
  %68 = load float, float* %67, align 4
  br label %73

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %47, i64 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = sitofp i32 %71 to float
  br label %73

73:                                               ; preds = %69, %66
  %74 = phi float [ %68, %66 ], [ %72, %69 ]
  %75 = getelementptr inbounds %"class.blink::LengthSize", %"class.blink::LengthSize"* %1, i64 0, i32 1, i32 3
  %76 = load i8, i8* %75, align 2, !range !4
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %73
  %79 = bitcast %"class.blink::Length"* %48 to float*
  %80 = load float, float* %79, align 4
  br label %85

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = sitofp i32 %83 to float
  br label %85

85:                                               ; preds = %81, %78
  %86 = phi float [ %80, %78 ], [ %84, %81 ]
  %87 = fcmp oeq float %74, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %85
  %89 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %47, %"class.blink::Length"* dereferenceable(8) %48) #20
  br label %90

90:                                               ; preds = %2, %10, %88, %85, %60, %54, %46, %44
  %91 = phi i1 [ false, %44 ], [ false, %54 ], [ false, %46 ], [ true, %85 ], [ true, %60 ], [ %89, %88 ], [ false, %10 ], [ false, %2 ]
  ret i1 %91
}

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #5

declare void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"*) local_unnamed_addr #5

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ShapeOutsideInfo"* @_ZNK3WTF7HashMapIPKN5blink9LayoutBoxENSt3__110unique_ptrINS1_16ShapeOutsideInfoENS5_14default_deleteIS7_EEEENS_7PtrHashIS3_EENS_10HashTraitsIS4_EENSD_ISA_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.4855"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.4855", %"class.WTF::HashMap.4855"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.4859"* %4, null
  br i1 %5, label %73, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashMap.4855", %"class.WTF::HashMap.4855"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %34, i64 0, i32 0
  %36 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LayoutBox"*
  %38 = icmp eq %"class.blink::LayoutBox"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %6
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::LayoutBox"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::LayoutBox"* %54, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %63, i64 0, i32 0
  %65 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutBox"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %6
  %68 = phi %"struct.WTF::KeyValuePair.4859"* [ %34, %6 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.4859"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %68, i64 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"class.blink::ShapeOutsideInfo"*, %"class.blink::ShapeOutsideInfo"** %71, align 8
  br label %73

73:                                               ; preds = %53, %2, %67, %70
  %74 = phi %"class.blink::ShapeOutsideInfo"* [ %72, %70 ], [ null, %67 ], [ null, %2 ], [ null, %53 ]
  ret %"class.blink::ShapeOutsideInfo"* %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.4859"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISK_SF_SL_EES4_SB_EENS_18HashTableAddResultISM_SC_EEOT0_OT1_(%"class.WTF::HashTable.4856"*, %"class.blink::LayoutBox"** dereferenceable(8), %"class.std::__1::unique_ptr.4860"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.4859"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.4859"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable.4856"* %0, %"struct.WTF::KeyValuePair.4859"* null)
  %9 = load %"struct.WTF::KeyValuePair.4859"*, %"struct.WTF::KeyValuePair.4859"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.4859"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutBox"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutBox"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutBox"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.4859"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.4859"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutBox"* %59, %43
  br i1 %64, label %122, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutBox"* %59, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.4859"* %60, %"struct.WTF::KeyValuePair.4859"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutBox"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.4859"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.4859"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #20
  %80 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.4859"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.4859"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.4859", %"struct.WTF::KeyValuePair.4859"* %89, i64 0, i32 1
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4860", %"class.std::__1::unique_ptr.4860"* %2, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.std::__1::unique_ptr.4860"* %2 to i64*
  %94 = load i64, i64* %93, align 8
  store %"class.blink::ShapeOutsideInfo"* null, %"class.blink::ShapeOutsideInfo"** %92, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.4860", %"class.std::__1::unique_ptr.4860"* %91, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::ShapeOutsideInfo"*, %"class.blink::ShapeOutsideInfo"** %95, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.4860"* %91 to i64*
  store i64 %94, i64* %97, align 8
  %98 = icmp eq %"class.blink::ShapeOutsideInfo"* %96, null
  br i1 %98, label %110, label %99

99:                                               ; preds = %87
  %100 = getelementptr inbounds %"class.blink::ShapeOutsideInfo", %"class.blink::ShapeOutsideInfo"* %96, i64 0, i32 1, i32 0, i32 0, i32 0
  %101 = load %"class.blink::Shape"*, %"class.blink::Shape"** %100, align 8
  store %"class.blink::Shape"* null, %"class.blink::Shape"** %100, align 8
  %102 = icmp eq %"class.blink::Shape"* %101, null
  br i1 %102, label %108, label %103

103:                                              ; preds = %99
  %104 = bitcast %"class.blink::Shape"* %101 to void (%"class.blink::Shape"*)***
  %105 = load void (%"class.blink::Shape"*)**, void (%"class.blink::Shape"*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.blink::Shape"*)*, void (%"class.blink::Shape"*)** %105, i64 1
  %107 = load void (%"class.blink::Shape"*)*, void (%"class.blink::Shape"*)** %106, align 8
  tail call void %107(%"class.blink::Shape"* nonnull %101) #20
  br label %108

108:                                              ; preds = %103, %99
  %109 = bitcast %"class.blink::ShapeOutsideInfo"* %96 to i8*
  tail call void @free(i8* %109) #20
  br label %110

110:                                              ; preds = %87, %108
  %111 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 2
  %112 = load i32, i32* %111, align 4
  %113 = add i32 %112, 1
  store i32 %113, i32* %111, align 4
  %114 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 3
  %115 = load i32, i32* %114, align 8
  %116 = add i32 %115, %113
  %117 = shl i32 %116, 1
  %118 = load i32, i32* %12, align 8
  %119 = icmp ult i32 %117, %118
  br i1 %119, label %122, label %120

120:                                              ; preds = %110
  %121 = tail call %"struct.WTF::KeyValuePair.4859"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable.4856"* %0, %"struct.WTF::KeyValuePair.4859"* %89)
  br label %122

122:                                              ; preds = %58, %110, %120
  %123 = phi i8 [ 1, %110 ], [ 1, %120 ], [ 0, %58 ]
  %124 = phi %"struct.WTF::KeyValuePair.4859"* [ %89, %110 ], [ %121, %120 ], [ %60, %58 ]
  %125 = insertvalue { %"struct.WTF::KeyValuePair.4859"*, i8 } undef, %"struct.WTF::KeyValuePair.4859"* %124, 0
  %126 = insertvalue { %"struct.WTF::KeyValuePair.4859"*, i8 } %125, i8 %123, 1
  ret { %"struct.WTF::KeyValuePair.4859"*, i8 } %126
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.4859"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable.4856"*, %"struct.WTF::KeyValuePair.4859"*) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.4856", %"class.WTF::HashTable.4856"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #20
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #20
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #20
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %22, i8* %23) #20
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #20
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #20
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #20
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #20
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([191 x i8], [191 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink9LayoutBoxENSt3__110unique_ptrINS2_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEEEEPKcv, i64 0, i64 0)) #20
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #20
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.4859"*
  %37 = call %"struct.WTF::KeyValuePair.4859"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_NSt3__110unique_ptrINS1_16ShapeOutsideInfoENS6_14default_deleteIS8_EEEEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSH_ISB_EEEESI_NS_18PartitionAllocatorEE8RehashToEPSC_jSN_(%"class.WTF::HashTable.4856"* %0, %"struct.WTF::KeyValuePair.4859"* %36, i32 %32, %"struct.WTF::KeyValuePair.4859"* %1) #20
  ret %"struct.WTF::KeyValuePair.4859"* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #15

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #5

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #5

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.4877* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #20
  %20 = tail call i8* @_Znwm(i64 192) #22
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #20
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #20
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #20
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #20
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list.4885"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list.4885"* %31, i64 1) #20
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #20
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #20
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #20
  %38 = getelementptr inbounds %class.anon.4877, %class.anon.4877* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #20
  %40 = getelementptr inbounds %class.anon.4877, %class.anon.4877* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #20
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #20
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #20
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #20
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #20
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #20
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #20
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #22
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #20
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #16

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #5

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #5

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #5

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #5

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list.4885"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list.4885", %"class.std::__1::list.4885"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list.4885", %"class.std::__1::list.4885"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base.4887"*, %"struct.std::__1::__list_node_base.4887"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base.4887"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !436

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base.4887"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base.4887"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base.4887"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base.4887"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !438

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base.4887"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base.4887"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base.4887"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base.4887"*, %"struct.std::__1::__list_node_base.4887"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base.4887"*, %"struct.std::__1::__list_node_base.4887"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base.4887"*, %"struct.std::__1::__list_node_base.4887"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base.4887"*, %"struct.std::__1::__list_node_base.4887"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base.4887"*, %"struct.std::__1::__list_node_base.4887"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base.4887"*, %"struct.std::__1::__list_node_base.4887"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base.4887"*, %"struct.std::__1::__list_node_base.4887"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base.4887"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base.4887"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list.4885"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !439

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list.4885"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list.4885", %"class.std::__1::list.4885"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base.4887"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base.4887"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base.4887"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base.4887"*
  %155 = getelementptr inbounds %"class.std::__1::list.4885", %"class.std::__1::list.4885"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base.4887"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list.4885", %"class.std::__1::list.4885"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base.4887"*, %"struct.std::__1::__list_node_base.4887"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base.4887"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base.4887"*, %"struct.std::__1::__list_node_base.4887"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base.4887"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base.4887"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base.4887"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base.4887"*, %"struct.std::__1::__list_node_base.4887"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base.4887"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #22
  %178 = icmp eq %"struct.std::__1::__list_node_base.4887"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #22, !noalias !440
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base.4887"**
  store %"struct.std::__1::__list_node_base.4887"* null, %"struct.std::__1::__list_node_base.4887"** %183, align 8, !noalias !440
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #22
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base.4887"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base.4887"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base.4887"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base.4887"*
  %210 = getelementptr inbounds %"class.std::__1::list.4885", %"class.std::__1::list.4885"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base.4887"* %210, %"struct.std::__1::__list_node_base.4887"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list.4885", %"class.std::__1::list.4885"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base.4887"*, %"struct.std::__1::__list_node_base.4887"** %212, align 8
  store %"struct.std::__1::__list_node_base.4887"* %213, %"struct.std::__1::__list_node_base.4887"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base.4887", %"struct.std::__1::__list_node_base.4887"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base.4887"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base.4887"* %209, %"struct.std::__1::__list_node_base.4887"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #17

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink19TransformOperationseqERKS0_(%"class.blink::TransformOperations"*, %"class.blink::TransformOperations"* dereferenceable(16)) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink13ComputedStyle26HasWillChangeTransformHintEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGConstraintSpace8RareDataC2ERKS1_(%"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"* dereferenceable(88)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %1 to i64*
  %5 = bitcast %"struct.blink::NGConstraintSpace::RareData"* %0 to i64*
  %6 = load i64, i64* %4, align 8
  store i64 %6, i64* %5, align 8
  %7 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 1, i32 0
  %9 = load i32, i32* %7, align 8
  store i32 %9, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 2, i32 0
  %11 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 2, i32 0
  %12 = load i32, i32* %10, align 4
  store i32 %12, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 3
  %15 = bitcast %"struct.blink::NGBfcOffset"* %14 to i64*
  %16 = bitcast %"struct.blink::NGBfcOffset"* %13 to i64*
  %17 = load i64, i64* %15, align 8
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 4, i32 0
  %19 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 4, i32 0
  %20 = load i32, i32* %18, align 8
  store i32 %20, i32* %19, align 8
  %21 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 5, i32 0
  %22 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 5, i32 0
  %23 = load i32, i32* %21, align 4
  store i32 %23, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 6
  %25 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 6
  %26 = load i16, i16* %25, align 8
  %27 = and i16 %26, 7
  %28 = load i16, i16* %24, align 8
  %29 = and i16 %28, -8
  %30 = or i16 %29, %27
  store i16 %30, i16* %24, align 8
  %31 = load i16, i16* %25, align 8
  %32 = and i16 %31, 8
  %33 = and i16 %30, -9
  %34 = or i16 %33, %32
  store i16 %34, i16* %24, align 8
  %35 = load i16, i16* %25, align 8
  %36 = and i16 %35, 16
  %37 = and i16 %34, -17
  %38 = or i16 %37, %36
  store i16 %38, i16* %24, align 8
  %39 = load i16, i16* %25, align 8
  %40 = and i16 %39, 32
  %41 = and i16 %38, -33
  %42 = or i16 %41, %40
  store i16 %42, i16* %24, align 8
  %43 = load i16, i16* %25, align 8
  %44 = and i16 %43, 64
  %45 = and i16 %42, -65
  %46 = or i16 %45, %44
  store i16 %46, i16* %24, align 8
  %47 = load i16, i16* %25, align 8
  %48 = and i16 %47, 384
  %49 = and i16 %46, -385
  %50 = or i16 %49, %48
  store i16 %50, i16* %24, align 8
  %51 = load i16, i16* %25, align 8
  %52 = and i16 %51, 512
  %53 = and i16 %50, -513
  %54 = or i16 %53, %52
  store i16 %54, i16* %24, align 8
  %55 = load i16, i16* %25, align 8
  %56 = and i16 %55, 1024
  %57 = and i16 %54, -1025
  %58 = or i16 %57, %56
  store i16 %58, i16* %24, align 8
  %59 = zext i16 %27 to i32
  switch i32 %59, label %117 [
    i32 6, label %112
    i32 1, label %60
    i32 2, label %65
    i32 3, label %70
    i32 4, label %85
    i32 5, label %100
  ]

60:                                               ; preds = %2
  %61 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %62 = bitcast %union.anon.3666* %61 to i8*
  %63 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7
  %64 = bitcast %union.anon.3666* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %64, i64 44, i1 false)
  br label %117

65:                                               ; preds = %2
  %66 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %67 = bitcast %union.anon.3666* %66 to i8*
  %68 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7
  %69 = bitcast %union.anon.3666* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %69, i64 40, i1 false)
  br label %117

70:                                               ; preds = %2
  %71 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %72 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7
  %73 = bitcast %union.anon.3666* %72 to %"class.blink::NGTableConstraintSpaceData"**
  %74 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %73, align 8
  %75 = bitcast %union.anon.3666* %71 to %"class.blink::NGTableConstraintSpaceData"**
  store %"class.blink::NGTableConstraintSpaceData"* %74, %"class.blink::NGTableConstraintSpaceData"** %75, align 8
  %76 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %74, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %78) #20
  br label %79

79:                                               ; preds = %70, %77
  %80 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1
  %81 = bitcast [40 x i8]* %80 to i32*
  %82 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 1
  %83 = bitcast [40 x i8]* %82 to i32*
  %84 = load i32, i32* %83, align 8
  store i32 %84, i32* %81, align 8
  br label %117

85:                                               ; preds = %2
  %86 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %87 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7
  %88 = bitcast %union.anon.3666* %87 to %"class.blink::NGTableConstraintSpaceData"**
  %89 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %88, align 8
  %90 = bitcast %union.anon.3666* %86 to %"class.blink::NGTableConstraintSpaceData"**
  store %"class.blink::NGTableConstraintSpaceData"* %89, %"class.blink::NGTableConstraintSpaceData"** %90, align 8
  %91 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %89, null
  br i1 %91, label %94, label %92

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %89, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %93) #20
  br label %94

94:                                               ; preds = %85, %92
  %95 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 1
  %96 = bitcast [40 x i8]* %95 to i32*
  %97 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 1
  %98 = bitcast [40 x i8]* %97 to i32*
  %99 = load i32, i32* %98, align 8
  store i32 %99, i32* %96, align 8
  br label %117

100:                                              ; preds = %2
  %101 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7, i32 0, i32 0, i32 0
  %102 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %101, align 8
  %103 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  store %"class.blink::SerializedScriptValue"* %102, %"class.blink::SerializedScriptValue"** %103, align 8
  %104 = icmp eq %"class.blink::SerializedScriptValue"* %102, null
  br i1 %104, label %117, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.blink::SerializedScriptValue", %"class.blink::SerializedScriptValue"* %102, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = atomicrmw add i32* %106, i32 1 monotonic
  %108 = icmp sgt i32 %107, 0
  br i1 %108, label %117, label %109

109:                                              ; preds = %105
  %110 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #20
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0)) #20
  %111 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #20
  br label %117

112:                                              ; preds = %2
  %113 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %0, i64 0, i32 7
  %114 = bitcast %union.anon.3666* %113 to i8*
  %115 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %1, i64 0, i32 7
  %116 = bitcast %union.anon.3666* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %116, i64 12, i1 false)
  br label %117

117:                                              ; preds = %109, %105, %100, %2, %112, %94, %79, %65, %60
  ret void
}

declare void @_ZN5blink24NGExclusionSpaceInternalC1ERKS0_(%"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"* dereferenceable(40)) unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink26NGTableConstraintSpaceDataEED2Ev(%class.scoped_refptr.3672*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.3672, %class.scoped_refptr.3672* %0, i64 0, i32 0
  %3 = load %"class.blink::NGTableConstraintSpaceData"*, %"class.blink::NGTableConstraintSpaceData"** %2, align 8
  %4 = icmp eq %"class.blink::NGTableConstraintSpaceData"* %3, null
  br i1 %4, label %56, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #20
  %7 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %56

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %3, i64 0, i32 5, i32 0, i32 0, i32 0
  %12 = load %"struct.blink::NGTableConstraintSpaceData::Cell"*, %"struct.blink::NGTableConstraintSpaceData::Cell"** %11, align 8
  %13 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Cell"* %12, null
  %14 = bitcast %"struct.blink::NGTableConstraintSpaceData::Cell"* %12 to i8*
  br i1 %13, label %21, label %15, !prof !3

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %3, i64 0, i32 5, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19, !prof !2

19:                                               ; preds = %15
  store i32 0, i32* %16, align 4
  br label %20

20:                                               ; preds = %19, %15
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %14) #20
  store %"struct.blink::NGTableConstraintSpaceData::Cell"* null, %"struct.blink::NGTableConstraintSpaceData::Cell"** %11, align 8
  br label %21

21:                                               ; preds = %20, %10
  %22 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::NGTableConstraintSpaceData::Row"*, %"struct.blink::NGTableConstraintSpaceData::Row"** %22, align 8
  %24 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Row"* %23, null
  %25 = bitcast %"struct.blink::NGTableConstraintSpaceData::Row"* %23 to i8*
  br i1 %24, label %32, label %26, !prof !3

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %3, i64 0, i32 4, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %31, label %30, !prof !2

30:                                               ; preds = %26
  store i32 0, i32* %27, align 4
  br label %31

31:                                               ; preds = %30, %26
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %25) #20
  store %"struct.blink::NGTableConstraintSpaceData::Row"* null, %"struct.blink::NGTableConstraintSpaceData::Row"** %22, align 8
  br label %32

32:                                               ; preds = %31, %21
  %33 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %3, i64 0, i32 3, i32 0, i32 0, i32 0
  %34 = load %"struct.blink::NGTableConstraintSpaceData::Section"*, %"struct.blink::NGTableConstraintSpaceData::Section"** %33, align 8
  %35 = icmp eq %"struct.blink::NGTableConstraintSpaceData::Section"* %34, null
  %36 = bitcast %"struct.blink::NGTableConstraintSpaceData::Section"* %34 to i8*
  br i1 %35, label %43, label %37, !prof !3

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %3, i64 0, i32 3, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41, !prof !2

41:                                               ; preds = %37
  store i32 0, i32* %38, align 4
  br label %42

42:                                               ; preds = %41, %37
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %36) #20
  store %"struct.blink::NGTableConstraintSpaceData::Section"* null, %"struct.blink::NGTableConstraintSpaceData::Section"** %33, align 8
  br label %43

43:                                               ; preds = %42, %32
  %44 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %45 = load %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"*, %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"** %44, align 8
  %46 = icmp eq %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %45, null
  %47 = bitcast %"struct.blink::NGTableConstraintSpaceData::ColumnLocation"* %45 to i8*
  br i1 %46, label %54, label %48, !prof !3

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::NGTableConstraintSpaceData", %"class.blink::NGTableConstraintSpaceData"* %3, i64 0, i32 2, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52, !prof !2

52:                                               ; preds = %48
  store i32 0, i32* %49, align 4
  br label %53

53:                                               ; preds = %52, %48
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %47) #20
  br label %54

54:                                               ; preds = %43, %53
  %55 = bitcast %"class.blink::NGTableConstraintSpaceData"* %3 to i8*
  tail call void @free(i8* %55) #20
  br label %56

56:                                               ; preds = %5, %54, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink21SerializedScriptValueD1Ev(%"class.blink::SerializedScriptValue"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.3738"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*) local_unnamed_addr #4 comdat align 2 {
  %3 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, null
  br i1 %3, label %127, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::Vector.3731", %"class.WTF::Vector.3731"* %5, i64 0, i32 0, i32 0, i32 0
  br i1 %8, label %58, label %10, !prof !2

10:                                               ; preds = %4
  %11 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %12 = zext i32 %7 to i64
  %13 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %11, i64 %12
  br label %14

14:                                               ; preds = %54, %10
  %15 = phi %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* [ %55, %54 ], [ %11, %10 ]
  %16 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %14
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %14
  %22 = getelementptr inbounds %"class.WTF::Vector.3721", %"class.WTF::Vector.3721"* %16, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %24 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 2, i32 0, i32 1, i64 0
  %25 = bitcast i8* %24 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %26 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23, %25
  br i1 %26, label %29, label %27, !prof !3

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::Vector.3721", %"class.WTF::Vector.3721"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3722"* %28, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %23) #20
  br label %29

29:                                               ; preds = %27, %21
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %22, align 8
  %30 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %35, label %34, !prof !2

34:                                               ; preds = %29
  store i32 0, i32* %31, align 4
  br label %35

35:                                               ; preds = %34, %29
  %36 = getelementptr inbounds %"class.WTF::Vector.3721", %"class.WTF::Vector.3721"* %30, i64 0, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 1, i32 0, i32 1, i64 0
  %39 = bitcast i8* %38 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %40 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37, %39
  br i1 %40, label %43, label %41, !prof !3

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::Vector.3721", %"class.WTF::Vector.3721"* %30, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3722"* %42, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %37) #20
  br label %43

43:                                               ; preds = %41, %35
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %36, align 8
  %44 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 0, i32 0, i32 1, i32 0
  %45 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %44, align 8
  %46 = icmp eq %"class.blink::NGShapeExclusions"* %45, null
  br i1 %46, label %54, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #20
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %45) #20
  %53 = bitcast %"class.blink::NGShapeExclusions"* %45 to i8*
  tail call void @free(i8* %53) #20
  br label %54

54:                                               ; preds = %43, %47, %52
  %55 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGClosedArea", %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %15, i64 1
  %56 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %55, %13
  br i1 %56, label %57, label %14

57:                                               ; preds = %54
  store i32 0, i32* %6, align 4
  br label %58

58:                                               ; preds = %57, %4
  %59 = load %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %60 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 1, i32 0, i32 1, i64 0
  %61 = bitcast i8* %60 to %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*
  %62 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59, %61
  br i1 %62, label %65, label %63, !prof !3

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::Vector.3731", %"class.WTF::Vector.3731"* %5, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3732"* %64, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %59) #20
  br label %65

65:                                               ; preds = %63, %58
  store %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* null, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"** %9, align 8
  %66 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %68, label %118, label %70, !prof !2

70:                                               ; preds = %65
  %71 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %71, i64 %72
  br label %74

74:                                               ; preds = %114, %70
  %75 = phi %"struct.blink::NGExclusionSpaceInternal::NGShelf"* [ %115, %114 ], [ %71, %70 ]
  %76 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 6, i32 0
  %77 = load %"class.blink::NGShapeExclusions"*, %"class.blink::NGShapeExclusions"** %76, align 8
  %78 = icmp eq %"class.blink::NGShapeExclusions"* %77, null
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %80) #20
  %81 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %79
  tail call void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"* nonnull %77) #20
  %85 = bitcast %"class.blink::NGShapeExclusions"* %77 to i8*
  tail call void @free(i8* %85) #20
  br label %86

86:                                               ; preds = %84, %79, %74
  %87 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5
  %88 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %92, label %91, !prof !2

91:                                               ; preds = %86
  store i32 0, i32* %88, align 4
  br label %92

92:                                               ; preds = %91, %86
  %93 = getelementptr inbounds %"class.WTF::Vector.3721", %"class.WTF::Vector.3721"* %87, i64 0, i32 0, i32 0, i32 0
  %94 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %95 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 5, i32 0, i32 1, i64 0
  %96 = bitcast i8* %95 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %97 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94, %96
  br i1 %97, label %100, label %98, !prof !3

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.WTF::Vector.3721", %"class.WTF::Vector.3721"* %87, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3722"* %99, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %94) #20
  br label %100

100:                                              ; preds = %98, %92
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %93, align 8
  %101 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4
  %102 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 0, i32 2
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %106, label %105, !prof !2

105:                                              ; preds = %100
  store i32 0, i32* %102, align 4
  br label %106

106:                                              ; preds = %105, %100
  %107 = getelementptr inbounds %"class.WTF::Vector.3721", %"class.WTF::Vector.3721"* %101, i64 0, i32 0, i32 0, i32 0
  %108 = load %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %109 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 0, i32 4, i32 0, i32 1, i64 0
  %110 = bitcast i8* %109 to %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*
  %111 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108, %110
  br i1 %111, label %114, label %112, !prof !3

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.WTF::Vector.3721", %"class.WTF::Vector.3721"* %101, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3722"* %113, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %108) #20
  br label %114

114:                                              ; preds = %106, %112
  store %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* null, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"** %107, align 8
  %115 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::NGShelf", %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %75, i64 1
  %116 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %115, %73
  br i1 %116, label %117, label %74

117:                                              ; preds = %114
  store i32 0, i32* %66, align 4
  br label %118

118:                                              ; preds = %117, %65
  %119 = load %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"** %69, align 8
  %120 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0, i32 1, i64 0
  %121 = bitcast i8* %120 to %"struct.blink::NGExclusionSpaceInternal::NGShelf"*
  %122 = icmp eq %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119, %121
  br i1 %122, label %125, label %123, !prof !3

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry", %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3719"* %124, %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %119) #20
  br label %125

125:                                              ; preds = %118, %123
  %126 = bitcast %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %1 to i8*
  tail call void @free(i8* %126) #20
  br label %127

127:                                              ; preds = %125, %2
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal11NGShelfEdgeELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3722"*, %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #20
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NGShapeExclusionsD2Ev(%"class.blink::NGShapeExclusions"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.3701", %"class.WTF::Vector.3701"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.3704*, %class.scoped_refptr.3704** %3, align 8
  %5 = icmp eq %class.scoped_refptr.3704* %4, null
  br i1 %5, label %42, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.3704* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %40, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.3704, %class.scoped_refptr.3704* %4, i64 %12
  br label %14

14:                                               ; preds = %34, %11
  %15 = phi %class.scoped_refptr.3704* [ %35, %34 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.3704, %class.scoped_refptr.3704* %15, i64 0, i32 0
  %17 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %16, align 8
  %18 = icmp eq %"struct.blink::NGExclusion"* %17, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #20
  %21 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %17, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.base::RefCounted.3706", %"class.base::RefCounted.3706"* %25, i64 8
  %27 = bitcast %"class.base::RefCounted.3706"* %26 to %"struct.blink::NGExclusionShapeData"**
  %28 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %27, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %27, align 8
  %29 = icmp eq %"struct.blink::NGExclusionShapeData"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = bitcast %"struct.blink::NGExclusionShapeData"* %28 to i8*
  tail call void @_ZdlPv(i8* %31) #22
  br label %32

32:                                               ; preds = %30, %24
  %33 = bitcast %"struct.blink::NGExclusion"* %17 to i8*
  tail call void @free(i8* %33) #20
  br label %34

34:                                               ; preds = %32, %19, %14
  %35 = getelementptr inbounds %class.scoped_refptr.3704, %class.scoped_refptr.3704* %15, i64 1
  %36 = icmp eq %class.scoped_refptr.3704* %35, %13
  br i1 %36, label %37, label %14

37:                                               ; preds = %34
  store i32 0, i32* %8, align 4
  %38 = bitcast %"class.WTF::Vector.3701"* %2 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %37, %6
  %41 = phi i8* [ %39, %37 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #20
  store %class.scoped_refptr.3704* null, %class.scoped_refptr.3704** %3, align 8
  br label %42

42:                                               ; preds = %1, %40
  %43 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::Vector.3701", %"class.WTF::Vector.3701"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %class.scoped_refptr.3704*, %class.scoped_refptr.3704** %44, align 8
  %46 = icmp eq %class.scoped_refptr.3704* %45, null
  br i1 %46, label %83, label %47, !prof !3

47:                                               ; preds = %42
  %48 = bitcast %class.scoped_refptr.3704* %45 to i8*
  %49 = getelementptr inbounds %"class.blink::NGShapeExclusions", %"class.blink::NGShapeExclusions"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %81, label %52, !prof !2

52:                                               ; preds = %47
  %53 = zext i32 %50 to i64
  %54 = getelementptr inbounds %class.scoped_refptr.3704, %class.scoped_refptr.3704* %45, i64 %53
  br label %55

55:                                               ; preds = %75, %52
  %56 = phi %class.scoped_refptr.3704* [ %76, %75 ], [ %45, %52 ]
  %57 = getelementptr inbounds %class.scoped_refptr.3704, %class.scoped_refptr.3704* %56, i64 0, i32 0
  %58 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %57, align 8
  %59 = icmp eq %"struct.blink::NGExclusion"* %58, null
  br i1 %59, label %75, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #20
  %62 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %58, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.base::RefCounted.3706", %"class.base::RefCounted.3706"* %66, i64 8
  %68 = bitcast %"class.base::RefCounted.3706"* %67 to %"struct.blink::NGExclusionShapeData"**
  %69 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %68, align 8
  store %"struct.blink::NGExclusionShapeData"* null, %"struct.blink::NGExclusionShapeData"** %68, align 8
  %70 = icmp eq %"struct.blink::NGExclusionShapeData"* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %65
  %72 = bitcast %"struct.blink::NGExclusionShapeData"* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #22
  br label %73

73:                                               ; preds = %71, %65
  %74 = bitcast %"struct.blink::NGExclusion"* %58 to i8*
  tail call void @free(i8* %74) #20
  br label %75

75:                                               ; preds = %73, %60, %55
  %76 = getelementptr inbounds %class.scoped_refptr.3704, %class.scoped_refptr.3704* %56, i64 1
  %77 = icmp eq %class.scoped_refptr.3704* %76, %54
  br i1 %77, label %78, label %55

78:                                               ; preds = %75
  store i32 0, i32* %49, align 4
  %79 = bitcast %"class.WTF::Vector.3701"* %43 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %47
  %82 = phi i8* [ %80, %78 ], [ %48, %47 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %82) #20
  store %class.scoped_refptr.3704* null, %class.scoped_refptr.3704** %44, align 8
  br label %83

83:                                               ; preds = %42, %81
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal12NGClosedAreaELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3732"*, %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #20
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink24NGExclusionSpaceInternal7NGShelfELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3719"*, %"struct.blink::NGExclusionSpaceInternal::NGShelf"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"struct.blink::NGExclusionSpaceInternal::NGShelf"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #20
  ret void
}

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #5

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #5

declare void @_ZN5blink18DisplayLockContext17DidLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #18

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #19

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #18

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink20ScrollIntoViewParamsD1Ev(%"class.blink::mojom::blink::ScrollIntoViewParams"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19LocalToAncestorQuadERKNS_9FloatQuadEPKNS_20LayoutBoxModelObjectEj(%"class.blink::FloatQuad"* sret, %"class.blink::LayoutObject"*, %"class.blink::FloatQuad"* dereferenceable(32), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #5

declare %"class.WTF::StringImpl"* @_ZNK5blink17HTMLOptionElement31TextIndentedToRespectGroupLabelEv(%"class.blink::HTMLOptionElement"*) local_unnamed_addr #5

declare void @_ZNK5blink13ComputedStyle18ApplyTextTransformEPN3WTF6StringEDs(%"class.blink::ComputedStyle"*, %"class.WTF::String"*, i16 zeroext) local_unnamed_addr #5

declare void @_ZN5blink16ConstructTextRunERKNS_4FontERKN3WTF6StringERKNS_13ComputedStyleEj(%"class.blink::TextRun"* sret, %"class.blink::Font"* dereferenceable(88), %"class.WTF::String"* dereferenceable(8), %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #5

declare float @_ZNK5blink4Font5WidthERKNS_7TextRunEPN3WTF7HashSetIPKNS_14SimpleFontDataENS4_7PtrHashIS7_EENS4_10HashTraitsIS8_EENS4_18PartitionAllocatorEEEPNS_9FloatRectE(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), %"class.WTF::HashSet.4937"*, %"class.blink::FloatRect"*) local_unnamed_addr #5

declare dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #18

declare void @_ZN5blink18OptionListIterator7AdvanceEPNS_17HTMLOptionElementE(%"class.blink::OptionListIterator"*, %"class.blink::HTMLOptionElement"*) local_unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink16HTMLInputElement27SizeShouldIncludeDecorationERi(%"class.blink::HTMLInputElement"*, i32* dereferenceable(4)) local_unnamed_addr #5

declare float @_ZN5blink17LayoutTextControl15GetAvgCharWidthERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #5

declare zeroext i1 @_ZN5blink17LayoutTextControl20HasValidAvgCharWidthERKNS_4FontE(%"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #18

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element19UserAgentShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #5

declare %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #5

declare %"class.blink::LayoutBox"* @_ZNK5blink4Node12GetLayoutBoxEv(%"class.blink::Node"*) local_unnamed_addr #5

declare void @_ZN3WTF6StringC1EPKDsj(%"class.WTF::String"*, i16*, i32) unnamed_addr #5

declare dereferenceable(152) %"class.blink::Locale"* @_ZNK5blink7Element9GetLocaleEv(%"class.blink::Element"*) local_unnamed_addr #5

declare %"class.WTF::StringImpl"* @_ZN5blink6Locale11QueryStringEi(%"class.blink::Locale"*, i32) local_unnamed_addr #5

declare %"class.blink::HTMLInputElement"* @_ZNK5blink16HTMLInputElement12UploadButtonEv(%"class.blink::HTMLInputElement"*) local_unnamed_addr #5

declare i32 @_ZN5blink17LayoutTextControl18ScrollbarThicknessERKNS_9LayoutBoxE(%"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #5

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink17HTMLSelectElement12InnerElementEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #5

declare dereferenceable(16) %"class.blink::HeapVector.4234"* @_ZNK5blink17HTMLSelectElement12GetListItemsEv(%"class.blink::HTMLSelectElement"*) local_unnamed_addr #5

declare dereferenceable(104) %"class.blink::HTMLDivElement"* @_ZNK5blink19HTMLOptGroupElement20OptGroupLabelElementEv(%"class.blink::HTMLOptGroupElement"*) local_unnamed_addr #5

declare i32 @_ZNK5blink13ComputedStyle21VisitedDependentColorERKNS_11CSSPropertyE(%"class.blink::ComputedStyle"*, %"class.blink::CSSProperty"* dereferenceable(24)) local_unnamed_addr #5

declare i64 @_ZN5blink11LogicalSize24AspectRatioFromFloatSizeERKNS_9FloatSizeE(%"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #5

declare i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #5

declare i32 @_ZNK5blink24PaintLayerScrollableArea30HypotheticalScrollbarThicknessENS_20ScrollbarOrientationEb(%"class.blink::PaintLayerScrollableArea"*, i32, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ComputedStyle27HasStackingGroupingPropertyEb(%"class.blink::ComputedStyle"*, i1 zeroext) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 9
  %6 = load float, float* %5, align 8
  %7 = fcmp olt float %6, 1.000000e+00
  br i1 %7, label %171, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %12, i64 0, i32 2, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i32, i32* %14, i64 %17
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %49, label %20

20:                                               ; preds = %8, %24
  %21 = phi i32* [ %25, %24 ], [ %14, %8 ]
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 251
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds i32, i32* %21, i64 1
  %26 = icmp ult i32* %25, %18
  br i1 %26, label %20, label %34

27:                                               ; preds = %20
  %28 = ptrtoint i32* %21 to i64
  %29 = ptrtoint i32* %14 to i64
  %30 = sub i64 %28, %29
  %31 = lshr exact i64 %30, 2
  %32 = trunc i64 %31 to i32
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %34, label %171

34:                                               ; preds = %24, %27
  br label %35

35:                                               ; preds = %34, %39
  %36 = phi i32* [ %40, %39 ], [ %14, %34 ]
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1275
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds i32, i32* %36, i64 1
  %41 = icmp ult i32* %40, %18
  br i1 %41, label %35, label %49

42:                                               ; preds = %35
  %43 = ptrtoint i32* %36 to i64
  %44 = ptrtoint i32* %14 to i64
  %45 = sub i64 %43, %44
  %46 = lshr exact i64 %45, 2
  %47 = trunc i64 %46 to i32
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %49, label %171

49:                                               ; preds = %39, %8, %42
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %10, i64 0, i32 39
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, 1048576
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %171

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %56, i64 0, i32 3, i32 0, i32 0
  %58 = load %"class.blink::StyleFilterData"*, %"class.blink::StyleFilterData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::StyleFilterData", %"class.blink::StyleFilterData"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %171

62:                                               ; preds = %54
  br i1 %19, label %92, label %63

63:                                               ; preds = %62, %67
  %64 = phi i32* [ %68, %67 ], [ %14, %62 ]
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 145
  br i1 %66, label %70, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds i32, i32* %64, i64 1
  %69 = icmp ult i32* %68, %18
  br i1 %69, label %63, label %77

70:                                               ; preds = %63
  %71 = ptrtoint i32* %64 to i64
  %72 = ptrtoint i32* %14 to i64
  %73 = sub i64 %71, %72
  %74 = lshr exact i64 %73, 2
  %75 = trunc i64 %74 to i32
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %77, label %171

77:                                               ; preds = %67, %70
  br label %78

78:                                               ; preds = %77, %82
  %79 = phi i32* [ %83, %82 ], [ %14, %77 ]
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 1169
  br i1 %81, label %85, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds i32, i32* %79, i64 1
  %84 = icmp ult i32* %83, %18
  br i1 %84, label %78, label %92

85:                                               ; preds = %78
  %86 = ptrtoint i32* %79 to i64
  %87 = ptrtoint i32* %14 to i64
  %88 = sub i64 %86, %87
  %89 = lshr exact i64 %88, 2
  %90 = trunc i64 %89 to i32
  %91 = icmp ne i32 %90, -1
  br label %92

92:                                               ; preds = %82, %62, %85
  %93 = phi i1 [ %91, %85 ], [ false, %62 ], [ false, %82 ]
  %94 = or i1 %93, %1
  br i1 %94, label %171, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %97 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %97, i64 0, i32 3
  %99 = load i8, i8* %98, align 4
  %100 = and i8 %99, 32
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %171

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %56, i64 0, i32 2, i32 0, i32 0
  %104 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %104, i64 0, i32 45
  %106 = load i32, i32* %105, align 4
  %107 = and i32 %106, 1073741824
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %171

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %10, i64 0, i32 13, i32 5
  %111 = bitcast [7 x i8]* %110 to i56*
  %112 = load i56, i56* %111, align 8
  %113 = and i56 %112, 281474976710656
  %114 = icmp eq i56 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %10, i64 0, i32 13
  tail call void @_ZNK5blink9FillLayer23ComputeCachedPropertiesEv(%"class.blink::FillLayer"* %116) #20
  %117 = load i56, i56* %111, align 8
  br label %118

118:                                              ; preds = %115, %109
  %119 = phi i56 [ %112, %109 ], [ %117, %115 ]
  %120 = and i56 %119, 8796093022208
  %121 = icmp eq i56 %120, 0
  br i1 %121, label %122, label %171

122:                                              ; preds = %118
  %123 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %123, i64 0, i32 3, i32 0, i32 0
  %125 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %125, i64 0, i32 14, i32 0, i32 0, i32 0
  %127 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %127, i64 0, i32 2, i32 0, i32 0
  %129 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %128, align 8
  %130 = icmp eq %"class.blink::StyleImage"* %129, null
  br i1 %130, label %131, label %171

131:                                              ; preds = %122
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %123, i64 0, i32 2, i32 0, i32 0
  %133 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %133, i64 0, i32 2, i32 0, i32 0
  %135 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %135, i64 0, i32 45
  %137 = load i32, i32* %136, align 4
  %138 = and i32 %137, 480
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %171

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %135, i64 0, i32 16, i32 0, i32 0
  %142 = load %"class.blink::StyleFilterData"*, %"class.blink::StyleFilterData"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::StyleFilterData", %"class.blink::StyleFilterData"* %142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %170

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %125, i64 0, i32 2, i32 0, i32 0
  %148 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %147, align 8
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %148, i64 0, i32 2, i32 0, i32 0, i32 0
  %150 = load i32*, i32** %149, align 8
  %151 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %148, i64 0, i32 2, i32 0, i32 0, i32 2
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = getelementptr inbounds i32, i32* %150, i64 %153
  %155 = icmp eq i32 %152, 0
  br i1 %155, label %171, label %156

156:                                              ; preds = %146, %160
  %157 = phi i32* [ %161, %160 ], [ %150, %146 ]
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, 47
  br i1 %159, label %163, label %160

160:                                              ; preds = %156
  %161 = getelementptr inbounds i32, i32* %157, i64 1
  %162 = icmp ult i32* %161, %154
  br i1 %162, label %156, label %171

163:                                              ; preds = %156
  %164 = ptrtoint i32* %157 to i64
  %165 = ptrtoint i32* %150 to i64
  %166 = sub i64 %164, %165
  %167 = lshr exact i64 %166, 2
  %168 = trunc i64 %167 to i32
  %169 = icmp eq i32 %168, -1
  br i1 %169, label %171, label %170

170:                                              ; preds = %163, %140
  br label %171

171:                                              ; preds = %160, %163, %131, %122, %102, %95, %49, %146, %118, %70, %54, %27, %2, %42, %170, %92
  %172 = phi i1 [ true, %49 ], [ true, %92 ], [ true, %95 ], [ true, %102 ], [ true, %122 ], [ true, %131 ], [ true, %170 ], [ false, %163 ], [ true, %42 ], [ true, %2 ], [ true, %27 ], [ true, %54 ], [ true, %70 ], [ true, %118 ], [ false, %146 ], [ false, %160 ]
  ret i1 %172
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #18

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17LayoutBoxRareDataEEEPhm(i64) local_unnamed_addr #4 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #20
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #20
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #20
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17LayoutBoxRareDataEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17LayoutBoxRareDataEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17LayoutBoxRareDataEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #20
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17LayoutBoxRareDataEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #20
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #20
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #20
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #20
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #20
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %21, i8* %22) #20
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #20
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #20
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #20
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #20
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #20
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #20
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17LayoutBoxRareDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #4 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 80
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17CustomLayoutChildEE5TraceEPNS_7VisitorEPKv) #20
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17LayoutBoxRareDataEE8FinalizeEPv(i8*) #4 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 56
  %3 = bitcast i8* %2 to %"class.WTF::HashSet.3287"**
  %4 = load %"class.WTF::HashSet.3287"*, %"class.WTF::HashSet.3287"** %3, align 8
  store %"class.WTF::HashSet.3287"* null, %"class.WTF::HashSet.3287"** %3, align 8
  %5 = icmp eq %"class.WTF::HashSet.3287"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::HashSet.3287", %"class.WTF::HashSet.3287"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %7, align 8
  %9 = icmp eq %"class.blink::LayoutBox"** %8, null
  br i1 %9, label %12, label %10, !prof !3

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::LayoutBox"** %8 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %11) #20
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %7, align 8
  br label %12

12:                                               ; preds = %10, %6
  %13 = bitcast %"class.WTF::HashSet.3287"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %13) #20
  br label %14

14:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17LayoutBoxRareDataEE7GetNameEPKv(i8*) #4 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #5

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.3281"*, %"struct.blink::LayoutBoxRareData"*) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %0, i64 0, i32 0
  store %"struct.blink::LayoutBoxRareData"* %1, %"struct.blink::LayoutBoxRareData"** %3, align 8
  %4 = ptrtoint %"struct.blink::LayoutBoxRareData"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %35
    i64 -1, label %35
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %58

9:                                                ; preds = %5
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #20
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !2

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #20
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #20
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  %24 = icmp eq %"class.blink::PersistentNode"* %23, null
  br i1 %24, label %25, label %28, !prof !2

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %26) #20
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %22, align 8
  br label %28

28:                                               ; preds = %25, %16
  %29 = phi %"class.blink::PersistentNode"* [ %27, %25 ], [ %23, %16 ]
  %30 = bitcast %"class.blink::PersistentNode"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  store i64 %31, i64* %32, align 8
  %33 = bitcast %"class.blink::PersistentNode"* %29 to %"class.blink::PersistentBase.3281"**
  store %"class.blink::PersistentBase.3281"* %0, %"class.blink::PersistentBase.3281"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %29, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %34, align 8
  store %"class.blink::PersistentNode"* %29, %"class.blink::PersistentNode"** %6, align 8
  br label %58

35:                                               ; preds = %2, %2
  %36 = getelementptr inbounds %"class.blink::PersistentBase.3281", %"class.blink::PersistentBase.3281"* %0, i64 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #20
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !2

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #20
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #20
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %46, %35, %28, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17LayoutBoxRareDataELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #4 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"struct.blink::LayoutBoxRareData"**
  %5 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #20
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #20
  %7 = icmp eq %"struct.blink::LayoutBoxRareData"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"struct.blink::LayoutBoxRareData"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17LayoutBoxRareDataEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #20
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #20
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #5

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink18DisplayLockContext19ShouldPaintChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #5

declare void @_ZN5blink12LayoutObject61SetShouldDoFullPaintInvalidationWithoutGeometryChangeInternalENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #5

declare <2 x float> @_ZNK5blink12LayoutObject25LocalToAncestorFloatPointERKNS_10FloatPointEPKNS_20LayoutBoxModelObjectEj(%"class.blink::LayoutObject"*, %"class.blink::FloatPoint"* dereferenceable(8), %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow35LogicalRightOffsetForAvoidingFloatsENS_10LayoutUnitES1_(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = trunc i96 %6 to i32
  %8 = icmp slt i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0
  br i1 %8, label %10, label %21

10:                                               ; preds = %3
  %11 = tail call i32 @_ZNK5blink9LayoutBox10ClientLeftEv(%"class.blink::LayoutBox"* %9) #20
  %12 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %14 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, i64 120
  %16 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, align 8
  %17 = tail call i32 %16(%"class.blink::LayoutBoxModelObject"* %12) #20
  %18 = icmp slt i32 %17, 0
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 %17) #20
  br label %32

21:                                               ; preds = %3
  %22 = tail call i32 @_ZNK5blink9LayoutBox9ClientTopEv(%"class.blink::LayoutBox"* %9) #20
  %23 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %25, i64 118
  %27 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %26, align 8
  %28 = tail call i32 %27(%"class.blink::LayoutBoxModelObject"* %23) #20
  %29 = icmp slt i32 %28, 0
  %30 = select i1 %29, i32 -2147483648, i32 2147483647
  %31 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %22, i32 %28) #20
  br label %32

32:                                               ; preds = %10, %21
  %33 = phi { i32, i1 } [ %20, %10 ], [ %31, %21 ]
  %34 = phi i32 [ %19, %10 ], [ %30, %21 ]
  %35 = extractvalue { i32, i1 } %33, 1
  %36 = extractvalue { i32, i1 } %33, 0
  %37 = select i1 %35, i32 %34, i32 %36
  %38 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %9) #20
  %39 = icmp slt i32 %38, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 %38) #20
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !2
  %45 = tail call i32 @_ZNK5blink15LayoutBlockFlow40LogicalRightFloatOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %0, i32 %1, i32 %44, i32 %2) #20
  ret i32 %45
}

declare i32 @_ZNK5blink15LayoutBlockFlow39LogicalLeftFloatOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"*, i32, i32, i32) local_unnamed_addr #5

declare i32 @_ZNK5blink15LayoutBlockFlow40LogicalRightFloatOffsetForAvoidingFloatsENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"*, i32, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #20
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 120
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #20
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #20
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !2
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 121
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #20
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #20
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #20
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 118
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #20
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #20
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !2
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 119
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #20
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #20
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17DisplayItemClientD2Ev(%"class.blink::DisplayItemClient"*) unnamed_addr #4 comdat align 2 {
  ret void
}

declare void @_ZNK5blink18NGPhysicalFragment18SetChildrenInvalidEv(%"class.blink::NGPhysicalFragment"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink24NGExclusionSpaceInternaleqERKS0_(%"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"* dereferenceable(40)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24NGExclusionSpaceInternal28MoveAndUpdateDerivedGeometryERKS0_(%"class.blink::NGExclusionSpaceInternal"*, %"class.blink::NGExclusionSpaceInternal"* dereferenceable(40)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 6
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.3715", %"class.std::__1::unique_ptr.3715"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %4, align 8
  %6 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %5, null
  br i1 %6, label %57, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 5
  %9 = load i8, i8* %8, align 8, !range !4
  %10 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 5
  store i8 %9, i8* %10, align 8
  %11 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 6
  %12 = bitcast %"class.std::__1::unique_ptr.3715"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %4, align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.3715", %"class.std::__1::unique_ptr.3715"* %11, i64 0, i32 0, i32 0, i32 0
  %15 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %14, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.3715"* %11 to i64*
  store i64 %13, i64* %16, align 8
  %17 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %15, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.std::__1::unique_ptr.3715"* %11 to %"struct.std::__1::default_delete.3738"*
  tail call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.3738"* %19, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %15) #20
  br label %20

20:                                               ; preds = %18, %7
  %21 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %4, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %4, align 8
  %22 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = bitcast %"class.std::__1::unique_ptr.3715"* %3 to %"struct.std::__1::default_delete.3738"*
  tail call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.3738"* %24, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %21) #20
  br label %25

25:                                               ; preds = %20, %23
  %26 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %1, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp ult i32 %27, %29
  br i1 %30, label %31, label %57

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::NGExclusionSpaceInternal", %"class.blink::NGExclusionSpaceInternal"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %31, %52
  %35 = phi i32 [ %27, %31 ], [ %54, %52 ]
  %36 = load %"class.base::RefCountedData.3699"*, %"class.base::RefCountedData.3699"** %32, align 8
  %37 = getelementptr inbounds %"class.base::RefCountedData.3699", %"class.base::RefCountedData.3699"* %36, i64 0, i32 1
  %38 = tail call dereferenceable(8) %class.scoped_refptr.3704* @_ZN3WTF6VectorI13scoped_refptrIKN5blink11NGExclusionEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3701"* %37, i32 %35)
  %39 = getelementptr inbounds %class.scoped_refptr.3704, %class.scoped_refptr.3704* %38, i64 0, i32 0
  %40 = load %"struct.blink::NGExclusion"*, %"struct.blink::NGExclusion"** %39, align 8
  %41 = load i8, i8* %10, align 8, !range !4
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %52

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"struct.blink::NGExclusion", %"struct.blink::NGExclusion"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = load %"struct.blink::NGExclusionShapeData"*, %"struct.blink::NGExclusionShapeData"** %44, align 8
  %46 = icmp eq %"struct.blink::NGExclusionShapeData"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  store i8 1, i8* %10, align 8
  %48 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %14, align 8
  store %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* null, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %14, align 8
  %49 = icmp eq %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %48, null
  br i1 %49, label %57, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::unique_ptr.3715"* %11 to %"struct.std::__1::default_delete.3738"*
  tail call void @_ZNKSt3__114default_deleteIN5blink24NGExclusionSpaceInternal15DerivedGeometryEEclEPS3_(%"struct.std::__1::default_delete.3738"* %51, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* nonnull %48) #20
  br label %57

52:                                               ; preds = %43, %34
  %53 = load %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"** %33, align 8
  tail call void @_ZN5blink24NGExclusionSpaceInternal15DerivedGeometry3AddERKNS_11NGExclusionE(%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* %53, %"struct.blink::NGExclusion"* dereferenceable(40) %40) #20
  %54 = add nuw i32 %35, 1
  %55 = load i32, i32* %28, align 8
  %56 = icmp ult i32 %54, %55
  br i1 %56, label %34, label %57

57:                                               ; preds = %52, %25, %2, %50, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.3704* @_ZN3WTF6VectorI13scoped_refptrIKN5blink11NGExclusionEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3701"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #20
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3701", %"class.WTF::Vector.3701"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #20
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #20
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* %14, i8* %15) #20
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #20
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #20
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #20
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #20
  %23 = getelementptr inbounds %"class.WTF::Vector.3701", %"class.WTF::Vector.3701"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.3704*, %class.scoped_refptr.3704** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.3704, %class.scoped_refptr.3704* %24, i64 %25
  ret %class.scoped_refptr.3704* %26
}

declare void @_ZN5blink24NGExclusionSpaceInternal15DerivedGeometry3AddERKNS_11NGExclusionE(%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"*, %"struct.blink::NGExclusion"* dereferenceable(40)) local_unnamed_addr #5

declare void @_ZN5blink15LayoutBlockFlow31SetStaticInlinePositionForChildERNS_9LayoutBoxENS_10LayoutUnitE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #18

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

declare i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #5

declare dereferenceable(16) %"class.blink::LineBoxList"* @_ZN5blink11LineBoxList5EmptyEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem5StyleEb(%"class.blink::LineLayoutItem"*, i1 zeroext) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  br i1 %1, label %6, label %41

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6, %10
  %11 = phi %"class.blink::LayoutObject"* [ %13, %10 ], [ %5, %6 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %6
  %18 = phi %"class.blink::Node"* [ %8, %6 ], [ %15, %10 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 59, i32 0, i32 0
  %24 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %24, i64 0, i32 31, i32 0, i32 0
  %26 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 11
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %17
  %32 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #20
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.17, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0)) #20
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #20
  br label %34

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %5) #20
  %40 = icmp eq %"class.blink::ComputedStyle"* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %2, %34, %38
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi %"class.blink::ComputedStyle"* [ %39, %38 ], [ %43, %41 ]
  ret %"class.blink::ComputedStyle"* %45
}

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #5

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20BorderImageLengthBox7NonZeroEv(%"class.blink::BorderImageLengthBox"*) local_unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %17

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = icmp eq i8 %7, 8
  br i1 %8, label %103, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 0, i32 0, i32 3
  %11 = load i8, i8* %10, align 2, !range !4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::BorderImageLengthBox"* %0 to float*
  %15 = load float, float* %14, align 4
  %16 = fcmp oeq float %15, 0.000000e+00
  br i1 %16, label %25, label %103

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 0, i32 1
  %19 = load double, double* %18, align 8
  %20 = fcmp oeq double %19, 0.000000e+00
  br i1 %20, label %25, label %103

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %103

25:                                               ; preds = %13, %17, %21
  %26 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 1, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 1, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 1, i32 0, i32 3
  %36 = load i8, i8* %35, align 2, !range !4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %46, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.blink::BorderImageLength"* %26 to float*
  %40 = load float, float* %39, align 4
  %41 = fcmp oeq float %40, 0.000000e+00
  br i1 %41, label %50, label %103

42:                                               ; preds = %25
  %43 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 1, i32 1
  %44 = load double, double* %43, align 8
  %45 = fcmp oeq double %44, 0.000000e+00
  br i1 %45, label %50, label %103

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %26, i64 0, i32 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %103

50:                                               ; preds = %38, %42, %46
  %51 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 2
  %52 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 2, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 2, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %103, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 2, i32 0, i32 3
  %61 = load i8, i8* %60, align 2, !range !4
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %59
  %64 = bitcast %"class.blink::BorderImageLength"* %51 to float*
  %65 = load float, float* %64, align 4
  %66 = fcmp oeq float %65, 0.000000e+00
  br i1 %66, label %75, label %103

67:                                               ; preds = %50
  %68 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 2, i32 1
  %69 = load double, double* %68, align 8
  %70 = fcmp oeq double %69, 0.000000e+00
  br i1 %70, label %75, label %103

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %51, i64 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %103

75:                                               ; preds = %63, %67, %71
  %76 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 3
  %77 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 3, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %96

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 3, i32 0, i32 2
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 8
  br i1 %83, label %100, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 3, i32 0, i32 3
  %86 = load i8, i8* %85, align 2, !range !4
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = bitcast %"class.blink::BorderImageLength"* %76 to float*
  %90 = load float, float* %89, align 4
  %91 = fcmp oeq float %90, 0.000000e+00
  br label %100

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.blink::BorderImageLength", %"class.blink::BorderImageLength"* %76, i64 0, i32 0, i32 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp eq i32 %94, 0
  br label %100

96:                                               ; preds = %75
  %97 = getelementptr inbounds %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox"* %0, i64 0, i32 3, i32 1
  %98 = load double, double* %97, align 8
  %99 = fcmp oeq double %98, 0.000000e+00
  br label %100

100:                                              ; preds = %80, %88, %92, %96
  %101 = phi i1 [ %99, %96 ], [ false, %80 ], [ %91, %88 ], [ %95, %92 ]
  %102 = xor i1 %101, true
  br label %103

103:                                              ; preds = %55, %30, %5, %63, %67, %38, %42, %13, %17, %100, %71, %46, %21
  %104 = phi i1 [ true, %71 ], [ true, %46 ], [ true, %21 ], [ %102, %100 ], [ true, %17 ], [ true, %13 ], [ true, %42 ], [ true, %38 ], [ true, %67 ], [ true, %63 ], [ true, %5 ], [ true, %30 ], [ true, %55 ]
  ret i1 %104
}

declare void @_ZN5blink21NGPhysicalBoxFragment17RecalcInkOverflowEv(%"class.blink::NGPhysicalBoxFragment"*) local_unnamed_addr #5

declare void @_ZN5blink15LayoutBlockFlow27CollapseAnonymousBlockChildEPS0_(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBlockFlow"*) local_unnamed_addr #5

declare zeroext i1 @_ZN5blink16ShapeOutsideInfo12IsEnabledForERKNS_9LayoutBoxE(%"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #19

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #5

declare zeroext i8 @_ZNK5blink14NGFragmentItem17ResolvedDirectionEv(%"class.blink::NGFragmentItem"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17CustomLayoutChildEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #4 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CustomLayoutChild"*
  %4 = bitcast i8* %1 to void (%"class.blink::CustomLayoutChild"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CustomLayoutChild"*, %"class.blink::Visitor"*)**, void (%"class.blink::CustomLayoutChild"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CustomLayoutChild"*, %"class.blink::Visitor"*)*, void (%"class.blink::CustomLayoutChild"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::CustomLayoutChild"*, %"class.blink::Visitor"*)*, void (%"class.blink::CustomLayoutChild"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CustomLayoutChild"* %3, %"class.blink::Visitor"* %0) #20
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink9FloatQuadELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.4223"*, %"class.blink::FloatQuad"* dereferenceable(32)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.4223", %"class.WTF::Vector.4223"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.4223", %"class.WTF::Vector.4223"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %6, align 8
  %8 = icmp ugt %"class.blink::FloatQuad"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 %10
  %12 = icmp ugt %"class.blink::FloatQuad"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.4223", %"class.WTF::Vector.4223"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::FloatQuad"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm(i64 %26) #20
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatQuadEEEPKcv, i64 0, i64 0)) #20
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.4223"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::FloatQuad"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 5
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::FloatQuad"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::FloatQuad"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #20
  %47 = bitcast %"class.WTF::Vector.4223"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #20
  %51 = bitcast %"class.WTF::Vector.4223"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::FloatQuad"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::FloatQuad"* %1 to i64
  %56 = ptrtoint %"class.blink::FloatQuad"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 5
  %59 = getelementptr inbounds %"class.WTF::Vector.4223", %"class.WTF::Vector.4223"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::FloatQuad"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm(i64 %71) #20
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink9FloatQuadEEEPKcv, i64 0, i64 0)) #20
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.4223"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::FloatQuad"*, %"class.blink::FloatQuad"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::FloatQuad"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::FloatQuad"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 5
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #20
  %87 = bitcast %"class.WTF::Vector.4223"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #20
  %91 = bitcast %"class.WTF::Vector.4223"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 5
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::FloatQuad"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::FloatQuad"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::FloatQuad"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::FloatQuad"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %100, i64 %103
  %105 = bitcast %"class.blink::FloatQuad"* %104 to i8*
  %106 = bitcast %"class.blink::FloatQuad"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 32, i1 false) #20
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink9FloatQuadEEEmm(i64) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #20
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #20
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #20
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #20
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #20
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #20
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #20
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #20
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12PhysicalRectEEEmm(i64) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #20
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #20
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #20
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #20
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #20
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #20
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #20
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #20
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE14AppendSlowCaseIS5_EEvOT_(%"class.WTF::Vector.3248"*, %class.scoped_refptr.3247* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %6, align 8
  %8 = icmp ugt %class.scoped_refptr.3247* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %7, i64 %10
  %12 = icmp ugt %class.scoped_refptr.3247* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3248"* %0, i32 %5) #20
  %14 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %class.scoped_refptr.3247* %1 to i64
  %17 = ptrtoint %class.scoped_refptr.3247* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3248"* %0, i32 %5) #20
  %20 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %6, align 8
  %21 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %class.scoped_refptr.3247* [ %14, %13 ], [ %20, %15 ]
  %24 = phi %class.scoped_refptr.3247* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %23, i64 %26
  %28 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %24, i64 0, i32 0
  %29 = bitcast %class.scoped_refptr.3247* %24 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %class.scoped_refptr.3247* %27 to i64*
  store i64 %30, i64* %31, align 8
  store %"class.blink::NGLayoutResult"* null, %"class.blink::NGLayoutResult"** %28, align 8
  %32 = load i32, i32* %3, align 4
  %33 = add i32 %32, 1
  store i32 %33, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3248"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #20
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #20
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #20
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i8* %15, i8* %16) #20
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #20
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #20
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #20
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #20
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %31, align 8
  %33 = icmp eq %class.scoped_refptr.3247* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 1
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14NGLayoutResultEEEEmm(i64 %37) #20
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink14NGLayoutResultEEEEPKcv, i64 0, i64 0)) #20
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.3248"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.3248"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 1, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3248"* %0, i32 %27) #20
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3248"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %5, align 8
  %7 = icmp eq %class.scoped_refptr.3247* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %class.scoped_refptr.3247*
  %10 = icmp eq %class.scoped_refptr.3247* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.3248"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.3248"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %class.scoped_refptr.3247* %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #20
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3249"* %19, %class.scoped_refptr.3247* nonnull %6) #20
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14NGLayoutResultEEEEmm(i64 %30) #20
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink14NGLayoutResultEEEEPKcv, i64 0, i64 0)) #20
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %class.scoped_refptr.3247* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %class.scoped_refptr.3247* %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #20
  %46 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %class.scoped_refptr.3247* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %class.scoped_refptr.3247*
  %51 = icmp eq %class.scoped_refptr.3247* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3249"* %53, %class.scoped_refptr.3247* %48) #20
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.3248"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14NGLayoutResultEEEEmm(i64) local_unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #20
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #20
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #20
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #20
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #20
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #20
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #20
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #20
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #20
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.3247* @_ZN3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #20
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #20
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #20
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* %14, i8* %15) #20
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #20
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #20
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #20
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #20
  %23 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %24, i64 %25
  ret %class.scoped_refptr.3247* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.3247* @_ZNK3WTF6VectorI13scoped_refptrIKN5blink14NGLayoutResultEELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3248"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #20
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #20
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #20
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0), i8* %14, i8* %15) #20
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #20
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #20
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #20
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #20
  %23 = getelementptr inbounds %"class.WTF::Vector.3248", %"class.WTF::Vector.3248"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.3247*, %class.scoped_refptr.3247** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.3247, %class.scoped_refptr.3247* %24, i64 %25
  ret %class.scoped_refptr.3247* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::LayoutBox"**, i8 } @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS6_S8_S9_EERKS3_S3_EENS_18HashTableAddResultISA_S3_EEOT0_OT1_(%"class.WTF::HashTable.3288"*, %"class.blink::LayoutBox"** dereferenceable(8), %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3288", %"class.WTF::HashTable.3288"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %4, align 8
  %6 = icmp eq %"class.blink::LayoutBox"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.3288"* %0, %"class.blink::LayoutBox"** null)
  %9 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::LayoutBox"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3288", %"class.WTF::HashTable.3288"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %11, i64 %38
  %40 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutBox"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::LayoutBox"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::LayoutBox"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::LayoutBox"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::LayoutBox"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::LayoutBox"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::LayoutBox"* %58, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %66 = select i1 %65, %"class.blink::LayoutBox"** %59, %"class.blink::LayoutBox"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %11, i64 %70
  %72 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutBox"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::LayoutBox"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::LayoutBox"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::LayoutBox"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::LayoutBox"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.3288", %"class.WTF::HashTable.3288"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::LayoutBox"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::LayoutBox"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.3288", %"class.WTF::HashTable.3288"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.3288", %"class.WTF::HashTable.3288"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.3288"* %0, %"class.blink::LayoutBox"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::LayoutBox"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::LayoutBox"**, i8 } undef, %"class.blink::LayoutBox"** %105, 0
  %107 = insertvalue { %"class.blink::LayoutBox"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::LayoutBox"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.3288"*, %"class.blink::LayoutBox"**) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3288", %"class.WTF::HashTable.3288"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3288", %"class.WTF::HashTable.3288"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #20
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #20
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #20
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* %22, i8* %23) #20
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #20
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #20
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #20
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #20
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #20
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv, i64 0, i64 0)) #20
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #20
  %36 = bitcast i8* %35 to %"class.blink::LayoutBox"**
  %37 = call %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.3288"* %0, %"class.blink::LayoutBox"** %36, i32 %32, %"class.blink::LayoutBox"** %1) #20
  ret %"class.blink::LayoutBox"** %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPN5blink9LayoutBoxES3_NS_17IdentityExtractorENS_7PtrHashIS2_EENS_10HashTraitsIS3_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSB_(%"class.WTF::HashTable.3288"*, %"class.blink::LayoutBox"**, i32, %"class.blink::LayoutBox"**) local_unnamed_addr #4 comdat align 2 {
  %5 = ptrtoint %"class.blink::LayoutBox"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.3288", %"class.WTF::HashTable.3288"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.3288", %"class.WTF::HashTable.3288"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.3288"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %9, align 8
  %17 = ptrtoint %"class.blink::LayoutBox"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable.3288"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::LayoutBox"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #20
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.3288", %"class.WTF::HashTable.3288"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::LayoutBox"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::LayoutBox"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::LayoutBox"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %34, i64 %37
  %39 = bitcast %"class.blink::LayoutBox"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %1, i64 %62
  %64 = ptrtoint %"class.blink::LayoutBox"** %63 to i64
  %65 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %63, align 8
  %66 = icmp eq %"class.blink::LayoutBox"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::LayoutBox"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::LayoutBox"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::LayoutBox"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::LayoutBox"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::LayoutBox"** %87, null
  %89 = ptrtoint %"class.blink::LayoutBox"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::LayoutBox"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::LayoutBox"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::LayoutBox"* %93, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %1, i64 %104
  %106 = ptrtoint %"class.blink::LayoutBox"** %105 to i64
  %107 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %105, align 8
  %108 = icmp eq %"class.blink::LayoutBox"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::LayoutBox"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %113, i64 %37
  %115 = icmp eq %"class.blink::LayoutBox"** %114, %3
  %116 = select i1 %115, %"class.blink::LayoutBox"** %111, %"class.blink::LayoutBox"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::LayoutBox"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::LayoutBox"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::LayoutBox"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

declare void @_ZN5blink17CustomLayoutChildC1ERKNS_19CSSLayoutDefinitionENS_17NGLayoutInputNodeE(%"class.blink::CustomLayoutChild"*, %"class.blink::CSSLayoutDefinition"* dereferenceable(112), %"class.blink::LayoutBox"*, i64) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #4 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #20
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #20
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #20
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #20
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #4 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #4 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #4 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #20
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #5

attributes #0 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { argmemonly nounwind }
attributes #9 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind }
attributes #15 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind readnone speculatable }
attributes #19 = { nounwind readnone }
attributes #20 = { nounwind }
attributes #21 = { noreturn nounwind }
attributes #22 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 1, i32 1048575}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink6Length5FixedIiEES0_T_"}
!9 = distinct !{!9, !10, !"_ZN5blink26ComputedStyleInitialValues18InitialShapeMarginEv: argument 0"}
!10 = distinct !{!10, !"_ZN5blink26ComputedStyleInitialValues18InitialShapeMarginEv"}
!11 = !{!"branch_weights", i32 1073205, i32 2146410443}
!12 = !{!"branch_weights", i32 1, i32 4001}
!13 = !{!"branch_weights", i32 4001, i32 4000000}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!16 = distinct !{!16, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!17 = distinct !{!17, !18, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!18 = distinct !{!18, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN5blink6Length12MinIntrinsicEv: argument 0"}
!21 = distinct !{!21, !"_ZN5blink6Length12MinIntrinsicEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!24 = distinct !{!24, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!27 = distinct !{!27, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!30 = distinct !{!30, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!33 = distinct !{!33, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!36 = distinct !{!36, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!39 = distinct !{!39, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!42 = distinct !{!42, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!45 = distinct !{!45, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_: argument 0"}
!48 = distinct !{!48, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN5blink6Length4AutoEv: argument 0"}
!51 = distinct !{!51, !"_ZN5blink6Length4AutoEv"}
!52 = !{!53, !55}
!53 = distinct !{!53, !54, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj: argument 0"}
!54 = distinct !{!54, !"_ZNK5blink12LayoutObject23LocalRectToAncestorQuadERKNS_12PhysicalRectEPKNS_20LayoutBoxModelObjectEj"}
!55 = distinct !{!55, !56, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj: argument 0"}
!56 = distinct !{!56, !"_ZNK5blink12LayoutObject23LocalRectToAbsoluteQuadERKNS_12PhysicalRectEj"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!59 = distinct !{!59, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!60 = !{!61}
!61 = distinct !{!61, !62, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!62 = distinct !{!62, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!63 = !{!64}
!64 = distinct !{!64, !65, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!65 = distinct !{!65, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!66 = !{!67}
!67 = distinct !{!67, !68, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!68 = distinct !{!68, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!71 = distinct !{!71, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!72 = !{!73}
!73 = distinct !{!73, !74, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!74 = distinct !{!74, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!77 = distinct !{!77, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!80 = distinct !{!80, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!83 = distinct !{!83, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!86 = distinct !{!86, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!87 = !{!88}
!88 = distinct !{!88, !89, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!89 = distinct !{!89, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!90 = !{!91}
!91 = distinct !{!91, !92, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!92 = distinct !{!92, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!93 = !{!94}
!94 = distinct !{!94, !95, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!95 = distinct !{!95, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!96 = !{!97}
!97 = distinct !{!97, !98, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!98 = distinct !{!98, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!99 = !{!100}
!100 = distinct !{!100, !101, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!101 = distinct !{!101, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!102 = !{!103}
!103 = distinct !{!103, !104, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!104 = distinct !{!104, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!107 = distinct !{!107, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!108 = !{!109}
!109 = distinct !{!109, !110, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!110 = distinct !{!110, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!113 = distinct !{!113, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!116 = distinct !{!116, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!117 = !{!118}
!118 = distinct !{!118, !119, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!119 = distinct !{!119, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!120 = !{!121}
!121 = distinct !{!121, !122, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!122 = distinct !{!122, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!123 = !{!124}
!124 = distinct !{!124, !125, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!125 = distinct !{!125, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!126 = !{!127}
!127 = distinct !{!127, !128, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!128 = distinct !{!128, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!129 = !{!130}
!130 = distinct !{!130, !131, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!131 = distinct !{!131, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!134 = distinct !{!134, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!135 = !{!136}
!136 = distinct !{!136, !137, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!137 = distinct !{!137, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!138 = !{!139}
!139 = distinct !{!139, !140, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!140 = distinct !{!140, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!141 = !{!142}
!142 = distinct !{!142, !143, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!143 = distinct !{!143, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!144 = !{!145}
!145 = distinct !{!145, !146, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!146 = distinct !{!146, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!147 = !{!148}
!148 = distinct !{!148, !149, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!149 = distinct !{!149, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!150 = !{!151}
!151 = distinct !{!151, !152, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!152 = distinct !{!152, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!153 = !{!154}
!154 = distinct !{!154, !155, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!155 = distinct !{!155, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!158 = distinct !{!158, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!159 = !{!160}
!160 = distinct !{!160, !161, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!161 = distinct !{!161, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!162 = !{!163}
!163 = distinct !{!163, !164, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!164 = distinct !{!164, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!165 = !{!166}
!166 = distinct !{!166, !167, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!167 = distinct !{!167, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!168 = !{!169}
!169 = distinct !{!169, !170, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!170 = distinct !{!170, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!171 = !{!172}
!172 = distinct !{!172, !173, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!173 = distinct !{!173, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!174 = !{!175}
!175 = distinct !{!175, !176, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!176 = distinct !{!176, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!177 = !{!178}
!178 = distinct !{!178, !179, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!179 = distinct !{!179, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!180 = !{!181}
!181 = distinct !{!181, !182, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!182 = distinct !{!182, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!183 = !{!184}
!184 = distinct !{!184, !185, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!185 = distinct !{!185, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!186 = !{!187}
!187 = distinct !{!187, !188, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!188 = distinct !{!188, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!189 = !{!190}
!190 = distinct !{!190, !191, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!191 = distinct !{!191, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!192 = !{!193}
!193 = distinct !{!193, !194, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!194 = distinct !{!194, !"_ZN5blink6Length5FixedIiEES0_T_"}
!195 = !{!196}
!196 = distinct !{!196, !197, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!197 = distinct !{!197, !"_ZN5blink6Length5FixedIiEES0_T_"}
!198 = !{!199}
!199 = distinct !{!199, !200, !"_ZN5blink6Length4AutoEv: argument 0"}
!200 = distinct !{!200, !"_ZN5blink6Length4AutoEv"}
!201 = !{!202}
!202 = distinct !{!202, !203, !"_ZN5blink6Length4AutoEv: argument 0"}
!203 = distinct !{!203, !"_ZN5blink6Length4AutoEv"}
!204 = !{!205}
!205 = distinct !{!205, !206, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!206 = distinct !{!206, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!207 = !{!208}
!208 = distinct !{!208, !209, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!209 = distinct !{!209, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!210 = !{!211}
!211 = distinct !{!211, !212, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!212 = distinct !{!212, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!213 = !{!214}
!214 = distinct !{!214, !215, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!215 = distinct !{!215, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!216 = !{!217}
!217 = distinct !{!217, !218, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!218 = distinct !{!218, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!219 = !{!220}
!220 = distinct !{!220, !221, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!221 = distinct !{!221, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!222 = !{!223}
!223 = distinct !{!223, !224, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!224 = distinct !{!224, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!225 = !{!226}
!226 = distinct !{!226, !227, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!227 = distinct !{!227, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!228 = !{!229}
!229 = distinct !{!229, !230, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_: argument 0"}
!230 = distinct !{!230, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_"}
!231 = !{!232}
!232 = distinct !{!232, !233, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_: argument 0"}
!233 = distinct !{!233, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_"}
!234 = !{!235}
!235 = distinct !{!235, !236, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!236 = distinct !{!236, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!237 = !{!238}
!238 = distinct !{!238, !239, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!239 = distinct !{!239, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!240 = !{!241}
!241 = distinct !{!241, !242, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!242 = distinct !{!242, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!243 = !{!244}
!244 = distinct !{!244, !245, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!245 = distinct !{!245, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!246 = !{!247}
!247 = distinct !{!247, !248, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!248 = distinct !{!248, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!249 = !{!250}
!250 = distinct !{!250, !251, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!251 = distinct !{!251, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!252 = !{!253}
!253 = distinct !{!253, !254, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!254 = distinct !{!254, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!255 = !{!256}
!256 = distinct !{!256, !257, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!257 = distinct !{!257, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!258 = !{!259}
!259 = distinct !{!259, !260, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!260 = distinct !{!260, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!261 = !{!262}
!262 = distinct !{!262, !263, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!263 = distinct !{!263, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!264 = !{!265}
!265 = distinct !{!265, !266, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!266 = distinct !{!266, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!267 = !{!268}
!268 = distinct !{!268, !269, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!269 = distinct !{!269, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!270 = !{!271}
!271 = distinct !{!271, !272, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!272 = distinct !{!272, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!273 = !{!274}
!274 = distinct !{!274, !275, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!275 = distinct !{!275, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!276 = !{!277}
!277 = distinct !{!277, !278, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!278 = distinct !{!278, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!279 = !{!280}
!280 = distinct !{!280, !281, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!281 = distinct !{!281, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!282 = !{!283}
!283 = distinct !{!283, !284, !"_ZN5blink6Length13FillAvailableEv: argument 0"}
!284 = distinct !{!284, !"_ZN5blink6Length13FillAvailableEv"}
!285 = !{!286}
!286 = distinct !{!286, !287, !"_ZN5blink6Length13FillAvailableEv: argument 0"}
!287 = distinct !{!287, !"_ZN5blink6Length13FillAvailableEv"}
!288 = !{!289}
!289 = distinct !{!289, !290, !"_ZN5blink26ComputedStyleInitialValues16InitialMinHeightEv: argument 0"}
!290 = distinct !{!290, !"_ZN5blink26ComputedStyleInitialValues16InitialMinHeightEv"}
!291 = !{!292, !294}
!292 = distinct !{!292, !293, !"_ZN5blink6Length4NoneEv: argument 0"}
!293 = distinct !{!293, !"_ZN5blink6Length4NoneEv"}
!294 = distinct !{!294, !295, !"_ZN5blink26ComputedStyleInitialValues16InitialMaxHeightEv: argument 0"}
!295 = distinct !{!295, !"_ZN5blink26ComputedStyleInitialValues16InitialMaxHeightEv"}
!296 = !{!297}
!297 = distinct !{!297, !298, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!298 = distinct !{!298, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!299 = !{!300}
!300 = distinct !{!300, !301, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!301 = distinct !{!301, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!302 = !{!303}
!303 = distinct !{!303, !304, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!304 = distinct !{!304, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!305 = !{!306}
!306 = distinct !{!306, !307, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!307 = distinct !{!307, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!308 = !{!309}
!309 = distinct !{!309, !310, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!310 = distinct !{!310, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!311 = !{!312}
!312 = distinct !{!312, !313, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!313 = distinct !{!313, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!314 = !{!315}
!315 = distinct !{!315, !316, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!316 = distinct !{!316, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!317 = !{!318}
!318 = distinct !{!318, !319, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!319 = distinct !{!319, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!320 = !{!321}
!321 = distinct !{!321, !322, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!322 = distinct !{!322, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!323 = !{!324}
!324 = distinct !{!324, !325, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!325 = distinct !{!325, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!326 = !{!327}
!327 = distinct !{!327, !328, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!328 = distinct !{!328, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!329 = !{!330}
!330 = distinct !{!330, !331, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!331 = distinct !{!331, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!332 = !{!333}
!333 = distinct !{!333, !334, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!334 = distinct !{!334, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!335 = !{!336}
!336 = distinct !{!336, !337, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!337 = distinct !{!337, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!338 = !{!339}
!339 = distinct !{!339, !340, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!340 = distinct !{!340, !"_ZN5blink6Length5FixedIiEES0_T_"}
!341 = !{!342}
!342 = distinct !{!342, !343, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!343 = distinct !{!343, !"_ZN5blink6Length5FixedIiEES0_T_"}
!344 = !{!345}
!345 = distinct !{!345, !346, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_: argument 0"}
!346 = distinct !{!346, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_"}
!347 = !{!348}
!348 = distinct !{!348, !349, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!349 = distinct !{!349, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!350 = !{!351}
!351 = distinct !{!351, !352, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!352 = distinct !{!352, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!353 = !{!354}
!354 = distinct !{!354, !355, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_: argument 0"}
!355 = distinct !{!355, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_"}
!356 = !{!357}
!357 = distinct !{!357, !358, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!358 = distinct !{!358, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!359 = !{!360}
!360 = distinct !{!360, !361, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!361 = distinct !{!361, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!362 = !{!363}
!363 = distinct !{!363, !364, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_: argument 0"}
!364 = distinct !{!364, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_"}
!365 = !{!366}
!366 = distinct !{!366, !367, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_: argument 0"}
!367 = distinct !{!367, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_"}
!368 = !{!369}
!369 = distinct !{!369, !370, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!370 = distinct !{!370, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!371 = !{!372}
!372 = distinct !{!372, !373, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_: argument 0"}
!373 = distinct !{!373, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_"}
!374 = !{!375}
!375 = distinct !{!375, !376, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!376 = distinct !{!376, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!377 = !{}
!378 = !{!379}
!379 = distinct !{!379, !380, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!380 = distinct !{!380, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!381 = !{!382}
!382 = distinct !{!382, !383, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!383 = distinct !{!383, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!384 = !{!385}
!385 = distinct !{!385, !386, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!386 = distinct !{!386, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!387 = !{!388}
!388 = distinct !{!388, !389, !"_ZN5blink6Length4AutoEv: argument 0"}
!389 = distinct !{!389, !"_ZN5blink6Length4AutoEv"}
!390 = !{!391}
!391 = distinct !{!391, !392, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_: argument 0"}
!392 = distinct !{!392, !"_ZN5blink6Length5FixedINS_10LayoutUnitEEES0_T_"}
!393 = !{!394}
!394 = distinct !{!394, !395, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!395 = distinct !{!395, !"_ZN5blink6Length5FixedIiEES0_T_"}
!396 = !{!397}
!397 = distinct !{!397, !398, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!398 = distinct !{!398, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!399 = !{!400}
!400 = distinct !{!400, !401, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!401 = distinct !{!401, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!402 = !{!403}
!403 = distinct !{!403, !404, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!404 = distinct !{!404, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!405 = !{!406}
!406 = distinct !{!406, !407, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!407 = distinct !{!407, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!408 = !{!409}
!409 = distinct !{!409, !410, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!410 = distinct !{!410, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!411 = !{!412}
!412 = distinct !{!412, !413, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!413 = distinct !{!413, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!414 = !{!415}
!415 = distinct !{!415, !416, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!416 = distinct !{!416, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!417 = !{!418}
!418 = distinct !{!418, !419, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!419 = distinct !{!419, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!420 = !{!421}
!421 = distinct !{!421, !422, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!422 = distinct !{!422, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!423 = !{!"branch_weights", i32 2000, i32 2, i32 2000}
!424 = !{!425}
!425 = distinct !{!425, !426, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!426 = distinct !{!426, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!427 = !{!428}
!428 = distinct !{!428, !429, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!429 = distinct !{!429, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!430 = !{!431}
!431 = distinct !{!431, !432, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!432 = distinct !{!432, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!433 = !{!434}
!434 = distinct !{!434, !435, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!435 = distinct !{!435, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!436 = distinct !{!436, !437}
!437 = !{!"llvm.loop.unroll.disable"}
!438 = distinct !{!438, !437}
!439 = distinct !{!439, !437}
!440 = !{!441}
!441 = distinct !{!441, !442, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!442 = distinct !{!442, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
