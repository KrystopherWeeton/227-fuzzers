; ModuleID = '../../services/network/public/cpp/optional_trust_token_params.cc'
source_filename = "../../services/network/public/cpp/optional_trust_token_params.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::OptionalTrustTokenParams" = type { %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.network::mojom::TrustTokenParams"* }
%"class.network::mojom::TrustTokenParams" = type { i32, i32, i32, i8, %"class.std::__1::vector", %"class.std::__1::vector.9", %"class.absl::optional.16" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.4" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.3 }
%union.anon.3 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.url::Origin"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional.16" = type { %"class.absl::optional_internal::optional_data.17" }
%"class.absl::optional_internal::optional_data.17" = type { %"class.absl::optional_internal::optional_data_base.18" }
%"class.absl::optional_internal::optional_data_base.18" = type { %"class.absl::optional_internal::optional_data_dtor_base.19" }
%"class.absl::optional_internal::optional_data_dtor_base.19" = type { i8, %union.anon.20 }
%union.anon.20 = type { %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK7network5mojom16TrustTokenParams5CloneIN4mojo9StructPtrIS1_EEEES5_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom16TrustTokenParamsEEC2IJNS2_23TrustTokenOperationTypeENS2_23TrustTokenRefreshPolicyENS2_25TrustTokenSignRequestDataEbNSt3__16vectorIN3url6OriginENS9_9allocatorISC_EEEENSA_INS9_12basic_stringIcNS9_11char_traitsIcEENSD_IcEEEENSD_ISK_EEEEN4absl8optionalISK_EEEEEN4base10in_place_tEDpOT_ = comdat any

$_ZN4mojo11CloneTraitsINSt3__16vectorIN3url6OriginENS1_9allocatorIS4_EEEELb0EE5CloneERKS7_ = comdat any

$_ZNSt3__16vectorIN3url6OriginENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIN3url6OriginENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZN4mojo11CloneTraitsINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEELb0EE5CloneERKSA_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNK7network5mojom16TrustTokenParams6EqualsIS1_LPv0EEEbRKT_ = comdat any

$_ZN4mojo12EqualsTraitsINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEELb0EE6EqualsERKSA_SD_ = comdat any

@_ZN7network24OptionalTrustTokenParamsC1Ev = hidden unnamed_addr alias void (%"class.network::OptionalTrustTokenParams"*), void (%"class.network::OptionalTrustTokenParams"*)* @_ZN7network24OptionalTrustTokenParamsC2Ev
@_ZN7network24OptionalTrustTokenParamsC1EN4absl9nullopt_tE = hidden unnamed_addr alias void (%"class.network::OptionalTrustTokenParams"*), void (%"class.network::OptionalTrustTokenParams"*)* @_ZN7network24OptionalTrustTokenParamsC2EN4absl9nullopt_tE
@_ZN7network24OptionalTrustTokenParamsC1EN4mojo9StructPtrINS_5mojom16TrustTokenParamsEEE = hidden unnamed_addr alias void (%"class.network::OptionalTrustTokenParams"*, %"class.mojo::StructPtr"*), void (%"class.network::OptionalTrustTokenParams"*, %"class.mojo::StructPtr"*)* @_ZN7network24OptionalTrustTokenParamsC2EN4mojo9StructPtrINS_5mojom16TrustTokenParamsEEE
@_ZN7network24OptionalTrustTokenParamsC1ERKNS_5mojom16TrustTokenParamsE = hidden unnamed_addr alias void (%"class.network::OptionalTrustTokenParams"*, %"class.network::mojom::TrustTokenParams"*), void (%"class.network::OptionalTrustTokenParams"*, %"class.network::mojom::TrustTokenParams"*)* @_ZN7network24OptionalTrustTokenParamsC2ERKNS_5mojom16TrustTokenParamsE
@_ZN7network24OptionalTrustTokenParamsC1ERKS0_ = hidden unnamed_addr alias void (%"class.network::OptionalTrustTokenParams"*, %"class.network::OptionalTrustTokenParams"*), void (%"class.network::OptionalTrustTokenParams"*, %"class.network::OptionalTrustTokenParams"*)* @_ZN7network24OptionalTrustTokenParamsC2ERKS0_
@_ZN7network24OptionalTrustTokenParamsC1EOS0_ = hidden unnamed_addr alias void (%"class.network::OptionalTrustTokenParams"*, %"class.network::OptionalTrustTokenParams"*), void (%"class.network::OptionalTrustTokenParams"*, %"class.network::OptionalTrustTokenParams"*)* @_ZN7network24OptionalTrustTokenParamsC2EOS0_
@_ZN7network24OptionalTrustTokenParamsD1Ev = hidden unnamed_addr alias void (%"class.network::OptionalTrustTokenParams"*), void (%"class.network::OptionalTrustTokenParams"*)* @_ZN7network24OptionalTrustTokenParamsD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network24OptionalTrustTokenParamsC2Ev(%"class.network::OptionalTrustTokenParams"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.network::OptionalTrustTokenParams"* %0 to i64*
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN7network24OptionalTrustTokenParamsC2EN4absl9nullopt_tE(%"class.network::OptionalTrustTokenParams"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.network::OptionalTrustTokenParams"* %0 to i64*
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7network24OptionalTrustTokenParamsC2EN4mojo9StructPtrINS_5mojom16TrustTokenParamsEEE(%"class.network::OptionalTrustTokenParams"* nocapture, %"class.mojo::StructPtr"* nocapture) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.network::OptionalTrustTokenParams"* %0 to i64*
  %4 = getelementptr inbounds %"class.network::OptionalTrustTokenParams", %"class.network::OptionalTrustTokenParams"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TrustTokenParams"* null, %"class.network::mojom::TrustTokenParams"** %4, align 8
  %5 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %3, align 8
  store i64 0, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network24OptionalTrustTokenParamsC2ERKNS_5mojom16TrustTokenParamsE(%"class.network::OptionalTrustTokenParams"*, %"class.network::mojom::TrustTokenParams"* dereferenceable(96)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.network::OptionalTrustTokenParams", %"class.network::OptionalTrustTokenParams"* %0, i64 0, i32 0
  tail call void @_ZNK7network5mojom16TrustTokenParams5CloneIN4mojo9StructPtrIS1_EEEES5_v(%"class.mojo::StructPtr"* sret %3, %"class.network::mojom::TrustTokenParams"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom16TrustTokenParams5CloneIN4mojo9StructPtrIS1_EEEES5_v(%"class.mojo::StructPtr"* noalias sret, %"class.network::mojom::TrustTokenParams"*) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::vector.9", align 8
  %10 = alloca %"class.absl::optional.16", align 8
  %11 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %4, align 4
  %14 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %5, align 4
  %17 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #12
  %20 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 3
  %21 = load i8, i8* %20, align 1, !range !2
  store i8 %21, i8* %7, align 1
  %22 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #12
  %23 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 4
  call void @_ZN4mojo11CloneTraitsINSt3__16vectorIN3url6OriginENS1_9allocatorIS4_EEEELb0EE5CloneERKS7_(%"class.std::__1::vector"* nonnull sret %8, %"class.std::__1::vector"* dereferenceable(24) %23) #12
  %24 = bitcast %"class.std::__1::vector.9"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 5
  call void @_ZN4mojo11CloneTraitsINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEELb0EE5CloneERKSA_(%"class.std::__1::vector.9"* nonnull sret %9, %"class.std::__1::vector.9"* dereferenceable(24) %25) #12
  %26 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #12
  %27 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !2, !noalias !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %2
  store i8 0, i8* %26, align 8, !alias.scope !3
  %31 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %union.anon.20* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false) #12, !alias.scope !3
  br label %50

33:                                               ; preds = %2
  %34 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #12, !noalias !3
  %35 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %36 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1, !noalias !8
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %33
  %41 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 %41, i64 24, i1 false) #12, !noalias !3
  br label %47

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8, !noalias !8
  %45 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8, !noalias !8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %44, i64 %46) #12, !noalias !3
  br label %47

47:                                               ; preds = %42, %40
  store i8 1, i8* %26, align 8, !alias.scope !3
  %48 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %49 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* nonnull align 8 %34, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #12, !noalias !3
  br label %50

50:                                               ; preds = %30, %47
  call void @_ZN4mojo9StructPtrIN7network5mojom16TrustTokenParamsEEC2IJNS2_23TrustTokenOperationTypeENS2_23TrustTokenRefreshPolicyENS2_25TrustTokenSignRequestDataEbNSt3__16vectorIN3url6OriginENS9_9allocatorISC_EEEENSA_INS9_12basic_stringIcNS9_11char_traitsIcEENSD_IcEEEENSD_ISK_EEEEN4absl8optionalISK_EEEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr"* %0, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %6, i8* nonnull dereferenceable(1) %7, %"class.std::__1::vector"* nonnull dereferenceable(24) %8, %"class.std::__1::vector.9"* nonnull dereferenceable(24) %9, %"class.absl::optional.16"* nonnull dereferenceable(32) %10) #12
  %51 = load i8, i8* %26, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %63, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.absl::optional.16", %"class.absl::optional.16"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #13
  br label %62

62:                                               ; preds = %59, %53
  store i8 0, i8* %26, align 8
  br label %63

63:                                               ; preds = %50, %62
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #12
  %64 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %9, i64 0, i32 0, i32 0
  %65 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %64, align 8
  %66 = icmp eq %"class.std::__1::basic_string"* %65, null
  br i1 %66, label %89, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  %69 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %9, i64 0, i32 0, i32 1
  %70 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %69, align 8
  %71 = icmp eq %"class.std::__1::basic_string"* %70, %65
  br i1 %71, label %87, label %72

72:                                               ; preds = %67, %82
  %73 = phi %"class.std::__1::basic_string"* [ %74, %82 ], [ %70, %67 ]
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 -1
  %75 = bitcast %"class.std::__1::basic_string"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  call void @_ZdlPv(i8* %81) #13
  br label %82

82:                                               ; preds = %79, %72
  %83 = icmp eq %"class.std::__1::basic_string"* %74, %65
  br i1 %83, label %84, label %72

84:                                               ; preds = %82
  %85 = bitcast %"class.std::__1::vector.9"* %9 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %84, %67
  %88 = phi i8* [ %86, %84 ], [ %68, %67 ]
  store %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"** %69, align 8
  call void @_ZdlPv(i8* %88) #13
  br label %89

89:                                               ; preds = %63, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #12
  %90 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %91 = load %"class.url::Origin"*, %"class.url::Origin"** %90, align 8
  %92 = icmp eq %"class.url::Origin"* %91, null
  br i1 %92, label %107, label %93

93:                                               ; preds = %89
  %94 = bitcast %"class.url::Origin"* %91 to i8*
  %95 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %96 = load %"class.url::Origin"*, %"class.url::Origin"** %95, align 8
  %97 = icmp eq %"class.url::Origin"* %96, %91
  br i1 %97, label %105, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.url::Origin"* [ %100, %98 ], [ %96, %93 ]
  %100 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %99, i64 -1
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %100) #12
  %101 = icmp eq %"class.url::Origin"* %100, %91
  br i1 %101, label %102, label %98

102:                                              ; preds = %98
  %103 = bitcast %"class.std::__1::vector"* %8 to i8**
  %104 = load i8*, i8** %103, align 8
  br label %105

105:                                              ; preds = %102, %93
  %106 = phi i8* [ %104, %102 ], [ %94, %93 ]
  store %"class.url::Origin"* %91, %"class.url::Origin"** %95, align 8
  call void @_ZdlPv(i8* %106) #13
  br label %107

107:                                              ; preds = %89, %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network24OptionalTrustTokenParamsC2ERKS0_(%"class.network::OptionalTrustTokenParams"* nocapture, %"class.network::OptionalTrustTokenParams"* nocapture readonly dereferenceable(8)) unnamed_addr #2 align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = bitcast %"class.network::OptionalTrustTokenParams"* %0 to i64*
  store i64 0, i64* %4, align 8
  %5 = bitcast %"class.mojo::StructPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.network::OptionalTrustTokenParams", %"class.network::OptionalTrustTokenParams"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.network::mojom::TrustTokenParams"*, %"class.network::mojom::TrustTokenParams"** %6, align 8, !noalias !13
  %8 = icmp eq %"class.network::mojom::TrustTokenParams"* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  store i64 0, i64* %10, align 8, !alias.scope !13
  %11 = getelementptr inbounds %"class.network::OptionalTrustTokenParams", %"class.network::OptionalTrustTokenParams"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TrustTokenParams"* null, %"class.network::mojom::TrustTokenParams"** %11, align 8
  br label %17

12:                                               ; preds = %2
  call void @_ZNK7network5mojom16TrustTokenParams5CloneIN4mojo9StructPtrIS1_EEEES5_v(%"class.mojo::StructPtr"* nonnull sret %3, %"class.network::mojom::TrustTokenParams"* nonnull %7) #12
  %13 = getelementptr inbounds %"class.network::OptionalTrustTokenParams", %"class.network::OptionalTrustTokenParams"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.network::mojom::TrustTokenParams"*, %"class.network::mojom::TrustTokenParams"** %13, align 8
  %15 = getelementptr inbounds %"class.network::OptionalTrustTokenParams", %"class.network::OptionalTrustTokenParams"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TrustTokenParams"* null, %"class.network::mojom::TrustTokenParams"** %15, align 8
  %16 = icmp eq %"class.network::mojom::TrustTokenParams"* %14, null
  br i1 %16, label %17, label %21

17:                                               ; preds = %12, %9
  %18 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %4, align 8
  %20 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TrustTokenParams"* null, %"class.network::mojom::TrustTokenParams"** %20, align 8
  br label %31

21:                                               ; preds = %12
  %22 = bitcast %"class.network::mojom::TrustTokenParams"* %14 to i8*
  call void @_ZN7network5mojom16TrustTokenParamsD1Ev(%"class.network::mojom::TrustTokenParams"* nonnull %14) #12
  call void @_ZdlPv(i8* %22) #13
  %23 = load i64, i64* %4, align 8
  %24 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %4, align 8
  %26 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TrustTokenParams"* null, %"class.network::mojom::TrustTokenParams"** %26, align 8
  %27 = icmp eq i64 %23, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %21
  %29 = inttoptr i64 %23 to %"class.network::mojom::TrustTokenParams"*
  call void @_ZN7network5mojom16TrustTokenParamsD1Ev(%"class.network::mojom::TrustTokenParams"* nonnull %29) #12
  %30 = inttoptr i64 %23 to i8*
  call void @_ZdlPv(i8* %30) #13
  br label %31

31:                                               ; preds = %17, %21, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.network::OptionalTrustTokenParams"* @_ZN7network24OptionalTrustTokenParamsaSERKS0_(%"class.network::OptionalTrustTokenParams"* returned, %"class.network::OptionalTrustTokenParams"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.mojo::StructPtr", align 8
  %4 = bitcast %"class.mojo::StructPtr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.network::OptionalTrustTokenParams", %"class.network::OptionalTrustTokenParams"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.network::mojom::TrustTokenParams"*, %"class.network::mojom::TrustTokenParams"** %5, align 8, !noalias !16
  %7 = icmp eq %"class.network::mojom::TrustTokenParams"* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  store i64 0, i64* %9, align 8, !alias.scope !16
  br label %11

10:                                               ; preds = %2
  call void @_ZNK7network5mojom16TrustTokenParams5CloneIN4mojo9StructPtrIS1_EEEES5_v(%"class.mojo::StructPtr"* nonnull sret %3, %"class.network::mojom::TrustTokenParams"* nonnull %6) #12
  br label %11

11:                                               ; preds = %8, %10
  %12 = getelementptr inbounds %"class.network::OptionalTrustTokenParams", %"class.network::OptionalTrustTokenParams"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.network::mojom::TrustTokenParams"*, %"class.network::mojom::TrustTokenParams"** %12, align 8
  store %"class.network::mojom::TrustTokenParams"* null, %"class.network::mojom::TrustTokenParams"** %12, align 8
  %14 = icmp eq %"class.network::mojom::TrustTokenParams"* %13, null
  br i1 %14, label %15, label %20

15:                                               ; preds = %11
  %16 = bitcast %"class.network::OptionalTrustTokenParams"* %0 to i64*
  %17 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %16, align 8
  %19 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TrustTokenParams"* null, %"class.network::mojom::TrustTokenParams"** %19, align 8
  br label %31

20:                                               ; preds = %11
  call void @_ZN7network5mojom16TrustTokenParamsD1Ev(%"class.network::mojom::TrustTokenParams"* nonnull %13) #12
  %21 = bitcast %"class.network::mojom::TrustTokenParams"* %13 to i8*
  call void @_ZdlPv(i8* %21) #13
  %22 = bitcast %"class.network::OptionalTrustTokenParams"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.mojo::StructPtr"* %3 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %22, align 8
  %26 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TrustTokenParams"* null, %"class.network::mojom::TrustTokenParams"** %26, align 8
  %27 = icmp eq i64 %23, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %20
  %29 = inttoptr i64 %23 to %"class.network::mojom::TrustTokenParams"*
  call void @_ZN7network5mojom16TrustTokenParamsD1Ev(%"class.network::mojom::TrustTokenParams"* nonnull %29) #12
  %30 = inttoptr i64 %23 to i8*
  call void @_ZdlPv(i8* %30) #13
  br label %31

31:                                               ; preds = %15, %20, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  ret %"class.network::OptionalTrustTokenParams"* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7network24OptionalTrustTokenParamsC2EOS0_(%"class.network::OptionalTrustTokenParams"* nocapture, %"class.network::OptionalTrustTokenParams"* nocapture dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.network::OptionalTrustTokenParams"* %0 to i64*
  %4 = getelementptr inbounds %"class.network::OptionalTrustTokenParams", %"class.network::OptionalTrustTokenParams"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::TrustTokenParams"* null, %"class.network::mojom::TrustTokenParams"** %4, align 8
  %5 = bitcast %"class.network::OptionalTrustTokenParams"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  store i64 %6, i64* %3, align 8
  store i64 0, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.network::OptionalTrustTokenParams"* @_ZN7network24OptionalTrustTokenParamsaSEOS0_(%"class.network::OptionalTrustTokenParams"* returned, %"class.network::OptionalTrustTokenParams"* nocapture dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.network::OptionalTrustTokenParams", %"class.network::OptionalTrustTokenParams"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.network::mojom::TrustTokenParams"*, %"class.network::mojom::TrustTokenParams"** %3, align 8
  store %"class.network::mojom::TrustTokenParams"* null, %"class.network::mojom::TrustTokenParams"** %3, align 8
  %5 = icmp eq %"class.network::mojom::TrustTokenParams"* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = bitcast %"class.network::OptionalTrustTokenParams"* %0 to i64*
  br label %12

8:                                                ; preds = %2
  tail call void @_ZN7network5mojom16TrustTokenParamsD1Ev(%"class.network::mojom::TrustTokenParams"* nonnull %4) #12
  %9 = bitcast %"class.network::mojom::TrustTokenParams"* %4 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  %10 = bitcast %"class.network::OptionalTrustTokenParams"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  br label %12

12:                                               ; preds = %6, %8
  %13 = phi i64* [ %7, %6 ], [ %10, %8 ]
  %14 = phi i64 [ 0, %6 ], [ %11, %8 ]
  %15 = bitcast %"class.network::OptionalTrustTokenParams"* %1 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  ret %"class.network::OptionalTrustTokenParams"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network24OptionalTrustTokenParamsD2Ev(%"class.network::OptionalTrustTokenParams"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.network::OptionalTrustTokenParams", %"class.network::OptionalTrustTokenParams"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.network::mojom::TrustTokenParams"*, %"class.network::mojom::TrustTokenParams"** %2, align 8
  store %"class.network::mojom::TrustTokenParams"* null, %"class.network::mojom::TrustTokenParams"** %2, align 8
  %4 = icmp eq %"class.network::mojom::TrustTokenParams"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN7network5mojom16TrustTokenParamsD1Ev(%"class.network::mojom::TrustTokenParams"* nonnull %3) #12
  %6 = bitcast %"class.network::mojom::TrustTokenParams"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7network24OptionalTrustTokenParamseqERKS0_(%"class.network::OptionalTrustTokenParams"* nocapture readonly, %"class.network::OptionalTrustTokenParams"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.network::OptionalTrustTokenParams", %"class.network::OptionalTrustTokenParams"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.network::mojom::TrustTokenParams"*, %"class.network::mojom::TrustTokenParams"** %3, align 8
  %5 = icmp eq %"class.network::mojom::TrustTokenParams"* %4, null
  %6 = getelementptr inbounds %"class.network::OptionalTrustTokenParams", %"class.network::OptionalTrustTokenParams"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.network::mojom::TrustTokenParams"*, %"class.network::mojom::TrustTokenParams"** %6, align 8
  %8 = icmp eq %"class.network::mojom::TrustTokenParams"* %7, null
  %9 = or i1 %5, %8
  %10 = and i1 %5, %8
  br i1 %9, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call zeroext i1 @_ZNK7network5mojom16TrustTokenParams6EqualsIS1_LPv0EEEbRKT_(%"class.network::mojom::TrustTokenParams"* nonnull %4, %"class.network::mojom::TrustTokenParams"* nonnull dereferenceable(96) %7) #12
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i1 [ %12, %11 ], [ %10, %2 ]
  ret i1 %14
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom16TrustTokenParamsD1Ev(%"class.network::mojom::TrustTokenParams"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom16TrustTokenParamsEEC2IJNS2_23TrustTokenOperationTypeENS2_23TrustTokenRefreshPolicyENS2_25TrustTokenSignRequestDataEbNSt3__16vectorIN3url6OriginENS9_9allocatorISC_EEEENSA_INS9_12basic_stringIcNS9_11char_traitsIcEENSD_IcEEEENSD_ISK_EEEEN4absl8optionalISK_EEEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr"*, i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), i8* dereferenceable(1), %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::vector.9"* dereferenceable(24), %"class.absl::optional.16"* dereferenceable(32)) unnamed_addr #2 comdat align 2 {
  %9 = alloca %"class.std::__1::vector", align 16
  %10 = alloca %"class.std::__1::vector.9", align 16
  %11 = tail call i8* @_Znwm(i64 96) #13
  %12 = bitcast i8* %11 to %"class.network::mojom::TrustTokenParams"*
  %13 = load i32, i32* %1, align 4
  %14 = load i32, i32* %2, align 4
  %15 = load i32, i32* %3, align 4
  %16 = load i8, i8* %4, align 1, !range !2
  %17 = icmp ne i8 %16, 0
  %18 = bitcast %"class.std::__1::vector"* %5 to <2 x i64>*
  %19 = load <2 x i64>, <2 x i64>* %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::vector"* %9 to <2 x i64>*
  store <2 x i64> %19, <2 x i64>* %21, align 16
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.url::Origin"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %26 = bitcast %"class.url::Origin"** %25 to i64*
  store i64 %24, i64* %26, align 16
  %27 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #12
  %28 = bitcast %"class.std::__1::vector.9"* %6 to <2 x i64>*
  %29 = load <2 x i64>, <2 x i64>* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %10, i64 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::vector.9"* %10 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %31, align 16
  %32 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"class.std::__1::basic_string"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"class.std::__1::basic_string"** %35 to i64*
  store i64 %34, i64* %36, align 16
  %37 = bitcast %"class.std::__1::vector.9"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #12
  call void @_ZN7network5mojom16TrustTokenParamsC1ENS0_23TrustTokenOperationTypeENS0_23TrustTokenRefreshPolicyENS0_25TrustTokenSignRequestDataEbNSt3__16vectorIN3url6OriginENS5_9allocatorIS8_EEEENS6_INS5_12basic_stringIcNS5_11char_traitsIcEENS9_IcEEEENS9_ISG_EEEERKN4absl8optionalISG_EE(%"class.network::mojom::TrustTokenParams"* nonnull %12, i32 %13, i32 %14, i32 %15, i1 zeroext %17, %"class.std::__1::vector"* nonnull %9, %"class.std::__1::vector.9"* nonnull %10, %"class.absl::optional.16"* dereferenceable(32) %7) #12
  %38 = ptrtoint i8* %11 to i64
  %39 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %10, i64 0, i32 0, i32 0
  %41 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %40, align 16
  %42 = icmp eq %"class.std::__1::basic_string"* %41, null
  br i1 %42, label %64, label %43

43:                                               ; preds = %8
  %44 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %45 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %30, align 8
  %46 = icmp eq %"class.std::__1::basic_string"* %45, %41
  br i1 %46, label %62, label %47

47:                                               ; preds = %43, %57
  %48 = phi %"class.std::__1::basic_string"* [ %49, %57 ], [ %45, %43 ]
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #13
  br label %57

57:                                               ; preds = %54, %47
  %58 = icmp eq %"class.std::__1::basic_string"* %49, %41
  br i1 %58, label %59, label %47

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::vector.9"* %10 to i8**
  %61 = load i8*, i8** %60, align 16
  br label %62

62:                                               ; preds = %59, %43
  %63 = phi i8* [ %61, %59 ], [ %44, %43 ]
  store %"class.std::__1::basic_string"* %41, %"class.std::__1::basic_string"** %30, align 8
  call void @_ZdlPv(i8* %63) #13
  br label %64

64:                                               ; preds = %8, %62
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %66 = load %"class.url::Origin"*, %"class.url::Origin"** %65, align 16
  %67 = icmp eq %"class.url::Origin"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.url::Origin"* %66 to i8*
  %70 = load %"class.url::Origin"*, %"class.url::Origin"** %20, align 8
  %71 = icmp eq %"class.url::Origin"* %70, %66
  br i1 %71, label %79, label %72

72:                                               ; preds = %68, %72
  %73 = phi %"class.url::Origin"* [ %74, %72 ], [ %70, %68 ]
  %74 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %73, i64 -1
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %74) #12
  %75 = icmp eq %"class.url::Origin"* %74, %66
  br i1 %75, label %76, label %72

76:                                               ; preds = %72
  %77 = bitcast %"class.std::__1::vector"* %9 to i8**
  %78 = load i8*, i8** %77, align 16
  br label %79

79:                                               ; preds = %76, %68
  %80 = phi i8* [ %78, %76 ], [ %69, %68 ]
  store %"class.url::Origin"* %66, %"class.url::Origin"** %20, align 8
  call void @_ZdlPv(i8* %80) #13
  br label %81

81:                                               ; preds = %64, %79
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN7network5mojom16TrustTokenParamsC1ENS0_23TrustTokenOperationTypeENS0_23TrustTokenRefreshPolicyENS0_25TrustTokenSignRequestDataEbNSt3__16vectorIN3url6OriginENS5_9allocatorIS8_EEEENS6_INS5_12basic_stringIcNS5_11char_traitsIcEENS9_IcEEEENS9_ISG_EEEERKN4absl8optionalISG_EE(%"class.network::mojom::TrustTokenParams"*, i32, i32, i32, i1 zeroext, %"class.std::__1::vector"*, %"class.std::__1::vector.9"*, %"class.absl::optional.16"* dereferenceable(32)) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsINSt3__16vectorIN3url6OriginENS1_9allocatorIS4_EEEELb0EE5CloneERKS7_(%"class.std::__1::vector"* noalias sret, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.url::Origin", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #12
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.url::Origin"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 80
  tail call void @_ZNSt3__16vectorIN3url6OriginENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector"* %0, i64 %13)
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %15 = load %"class.url::Origin"*, %"class.url::Origin"** %14, align 8
  %16 = load %"class.url::Origin"*, %"class.url::Origin"** %7, align 8
  %17 = icmp eq %"class.url::Origin"* %15, %16
  br i1 %17, label %21, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.url::Origin"* %3 to i8*
  %20 = bitcast %"class.url::Origin"** %4 to i64*
  br label %22

21:                                               ; preds = %31, %2
  ret void

22:                                               ; preds = %18, %31
  %23 = phi %"class.url::Origin"* [ %15, %18 ], [ %32, %31 ]
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %19) #12
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* nonnull %3, %"class.url::Origin"* dereferenceable(80) %23) #12
  %24 = load %"class.url::Origin"*, %"class.url::Origin"** %4, align 8
  %25 = load %"class.url::Origin"*, %"class.url::Origin"** %5, align 8
  %26 = icmp ult %"class.url::Origin"* %24, %25
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %24, %"class.url::Origin"* nonnull dereferenceable(80) %3) #12
  %28 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %24, i64 1
  %29 = ptrtoint %"class.url::Origin"* %28 to i64
  store i64 %29, i64* %20, align 8
  br label %31

30:                                               ; preds = %22
  call void @_ZNSt3__16vectorIN3url6OriginENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %0, %"class.url::Origin"* nonnull dereferenceable(80) %3) #12
  br label %31

31:                                               ; preds = %27, %30
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %19) #12
  %32 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %23, i64 1
  %33 = icmp eq %"class.url::Origin"* %32, %16
  br i1 %33, label %21, label %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3url6OriginENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.url::Origin"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 80
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.url::Origin"*
  br i1 %10, label %12, label %55

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.url::Origin"** %13 to i64*
  %15 = icmp ugt i64 %1, 230584300921369395
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #14
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 80
  %21 = mul i64 %1, 80
  %22 = tail call i8* @_Znwm(i64 %21) #13
  %23 = bitcast i8* %22 to %"class.url::Origin"*
  %24 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %23, i64 %20
  %25 = ptrtoint %"class.url::Origin"* %24 to i64
  %26 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %23, i64 %1
  %27 = ptrtoint %"class.url::Origin"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.url::Origin"*
  %29 = icmp eq %"class.url::Origin"* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"class.url::Origin"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"class.url::Origin"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %31, i64 -1
  %34 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %32, i64 -1
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %33, %"class.url::Origin"* dereferenceable(80) %34) #12
  %35 = icmp eq %"class.url::Origin"* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.url::Origin"* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %"class.url::Origin"*, %"class.url::Origin"** %13, align 8
  %40 = inttoptr i64 %38 to %"class.url::Origin"*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %"class.url::Origin"* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %"class.url::Origin"* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %"class.url::Origin"* %43, %42
  br i1 %46, label %51, label %47

47:                                               ; preds = %41, %47
  %48 = phi %"class.url::Origin"* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %48, i64 -1
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %49) #12
  %50 = icmp eq %"class.url::Origin"* %49, %42
  br i1 %50, label %51, label %47

51:                                               ; preds = %47, %41
  %52 = icmp eq i64 %45, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  br label %55

55:                                               ; preds = %53, %51, %2
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3url6OriginENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.url::Origin"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 80
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 230584300921369395
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.url::Origin"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 80
  %20 = icmp ult i64 %19, 115292150460684697
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 230584300921369395, %14 ]
  %28 = mul i64 %27, 80
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.url::Origin"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.url::Origin"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %33, i64 %9
  %35 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %33, i64 %32
  %36 = ptrtoint %"class.url::Origin"* %35 to i64
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %34, %"class.url::Origin"* dereferenceable(80) %1) #12
  %37 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %34, i64 1
  %38 = ptrtoint %"class.url::Origin"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.url::Origin"*, %"class.url::Origin"** %39, align 8
  %41 = load %"class.url::Origin"*, %"class.url::Origin"** %3, align 8
  %42 = icmp eq %"class.url::Origin"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.url::Origin"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.url::Origin"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.url::Origin"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %46, i64 -1
  %49 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %47, i64 -1
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %48, %"class.url::Origin"* dereferenceable(80) %49) #12
  %50 = icmp eq %"class.url::Origin"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.url::Origin"*, %"class.url::Origin"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.url::Origin"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.url::Origin"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.url::Origin"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.url::Origin"*
  %60 = icmp eq %"class.url::Origin"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.url::Origin"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %62, i64 -1
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %63) #12
  %64 = icmp eq %"class.url::Origin"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #13
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEELb0EE5CloneERKSA_(%"class.std::__1::vector.9"* noalias sret, %"class.std::__1::vector.9"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.9"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #12
  %7 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.9"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 24
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector.9"* %0, i64 %13)
  %14 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1, i64 0, i32 0, i32 0
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %14, align 8
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %17 = icmp eq %"class.std::__1::basic_string"* %15, %16
  br i1 %17, label %24, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %20 = bitcast %"class.std::__1::basic_string"** %4 to i64*
  %21 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %25

24:                                               ; preds = %51, %2
  ret void

25:                                               ; preds = %18, %51
  %26 = phi %"class.std::__1::basic_string"* [ %15, %18 ], [ %52, %51 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #12
  %27 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1, !noalias !19
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %32, i64 24, i1 false) #12
  br label %38

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8, !noalias !19
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8, !noalias !19
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %3, i8* %35, i64 %37) #12
  br label %38

38:                                               ; preds = %31, %33
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %40 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %41 = icmp ult %"class.std::__1::basic_string"* %39, %40
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* nonnull align 8 %19, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #12
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 1
  %45 = ptrtoint %"class.std::__1::basic_string"* %44 to i64
  store i64 %45, i64* %20, align 8
  br label %51

46:                                               ; preds = %38
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.9"* %0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %47 = load i8, i8* %22, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  %50 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %50) #13
  br label %51

51:                                               ; preds = %42, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #12
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1
  %53 = icmp eq %"class.std::__1::basic_string"* %52, %16
  br i1 %53, label %24, label %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector.9"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.9"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::basic_string"*
  br i1 %10, label %12, label %62

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #14
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #13
  %23 = bitcast i8* %22 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::basic_string"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::basic_string"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::basic_string"*
  %29 = icmp eq %"class.std::__1::basic_string"* %28, %11
  br i1 %29, label %30, label %31

30:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %57

31:                                               ; preds = %17, %31
  %32 = phi %"class.std::__1::basic_string"* [ %34, %31 ], [ %24, %17 ]
  %33 = phi %"class.std::__1::basic_string"* [ %35, %31 ], [ %28, %17 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 -1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 -1
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #12
  %38 = icmp eq %"class.std::__1::basic_string"* %35, %11
  br i1 %38, label %39, label %31

39:                                               ; preds = %31
  %40 = ptrtoint %"class.std::__1::basic_string"* %34 to i64
  %41 = load i64, i64* %6, align 8
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %43 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  store i64 %40, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %42, %43
  br i1 %44, label %57, label %45

45:                                               ; preds = %39, %55
  %46 = phi %"class.std::__1::basic_string"* [ %47, %55 ], [ %42, %39 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #13
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string"* %47, %43
  br i1 %56, label %57, label %45

57:                                               ; preds = %55, %30, %39
  %58 = phi i64 [ %7, %30 ], [ %41, %39 ], [ %41, %55 ]
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %61) #13
  br label %62

62:                                               ; preds = %60, %57, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.9"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.9"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.9"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #13
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #12
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #12
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #13
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #13
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK7network5mojom16TrustTokenParams6EqualsIS1_LPv0EEEbRKT_(%"class.network::mojom::TrustTokenParams"*, %"class.network::mojom::TrustTokenParams"* dereferenceable(96)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 0
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %8, label %129

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 1
  %11 = load i32, i32* %9, align 4
  %12 = load i32, i32* %10, align 4
  %13 = icmp eq i32 %11, %12
  br i1 %13, label %14, label %129

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 2
  %17 = load i32, i32* %15, align 4
  %18 = load i32, i32* %16, align 4
  %19 = icmp eq i32 %17, %18
  br i1 %19, label %20, label %129

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %0, i64 0, i32 3
  %22 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 3
  %23 = load i8, i8* %21, align 1, !range !2
  %24 = load i8, i8* %22, align 1, !range !2
  %25 = icmp eq i8 %23, %24
  br i1 %25, label %26, label %129

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %0, i64 0, i32 4
  %28 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 4
  %29 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %0, i64 0, i32 4, i32 0, i32 1
  %30 = bitcast %"class.url::Origin"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector"* %27 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 4, i32 0, i32 1
  %36 = bitcast %"class.url::Origin"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.std::__1::vector"* %28 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = icmp eq i64 %34, %40
  %42 = inttoptr i64 %39 to %"class.url::Origin"*
  br i1 %41, label %43, label %129

43:                                               ; preds = %26
  %44 = icmp eq i64 %31, %33
  br i1 %44, label %63, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %28, i64 0, i32 0, i32 0
  %47 = inttoptr i64 %33 to %"class.url::Origin"*
  %48 = tail call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* %47, %"class.url::Origin"* dereferenceable(80) %42) #12
  br i1 %48, label %49, label %129

49:                                               ; preds = %45, %56
  %50 = phi i64 [ %62, %56 ], [ 1, %45 ]
  %51 = load i64, i64* %30, align 8
  %52 = load i64, i64* %32, align 8
  %53 = sub i64 %51, %52
  %54 = sdiv exact i64 %53, 80
  %55 = icmp ult i64 %50, %54
  br i1 %55, label %56, label %63

56:                                               ; preds = %49
  %57 = load %"class.url::Origin"*, %"class.url::Origin"** %46, align 8
  %58 = inttoptr i64 %52 to %"class.url::Origin"*
  %59 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %58, i64 %50
  %60 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %57, i64 %50
  %61 = tail call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* %59, %"class.url::Origin"* dereferenceable(80) %60) #12
  %62 = add nuw i64 %50, 1
  br i1 %61, label %49, label %129

63:                                               ; preds = %49, %43
  %64 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %0, i64 0, i32 5
  %65 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 5
  %66 = tail call zeroext i1 @_ZN4mojo12EqualsTraitsINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEELb0EE6EqualsERKSA_SD_(%"class.std::__1::vector.9"* dereferenceable(24) %64, %"class.std::__1::vector.9"* dereferenceable(24) %65) #12
  br i1 %66, label %67, label %129

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  %71 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp ne i8 %72, 0
  br i1 %70, label %74, label %75

74:                                               ; preds = %67
  br i1 %73, label %129, label %128

75:                                               ; preds = %67
  br i1 %73, label %76, label %129

76:                                               ; preds = %75
  %77 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = zext i8 %81 to i64
  %86 = select i1 %82, i64 %84, i64 %85
  %87 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = getelementptr inbounds %"class.network::mojom::TrustTokenParams", %"class.network::mojom::TrustTokenParams"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = zext i8 %89 to i64
  %94 = select i1 %90, i64 %92, i64 %93
  %95 = icmp eq i64 %86, %94
  br i1 %95, label %96, label %129

96:                                               ; preds = %76
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  %99 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  %100 = select i1 %82, i8* %98, i8* %99
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  %104 = select i1 %90, i8* %102, i8* %103
  %105 = icmp eq i64 %86, 0
  br i1 %82, label %112, label %106

106:                                              ; preds = %96
  br i1 %105, label %128, label %107

107:                                              ; preds = %106
  %108 = ptrtoint i8* %98 to i64
  %109 = trunc i64 %108 to i8
  %110 = load i8, i8* %104, align 1
  %111 = icmp eq i8 %110, %109
  br i1 %111, label %113, label %129

112:                                              ; preds = %96
  br i1 %105, label %128, label %125

113:                                              ; preds = %107, %120
  %114 = phi i64 [ %117, %120 ], [ %85, %107 ]
  %115 = phi i8* [ %118, %120 ], [ %99, %107 ]
  %116 = phi i8* [ %121, %120 ], [ %104, %107 ]
  %117 = add i64 %114, -1
  %118 = getelementptr inbounds i8, i8* %115, i64 1
  %119 = icmp eq i64 %117, 0
  br i1 %119, label %128, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds i8, i8* %116, i64 1
  %122 = load i8, i8* %118, align 1
  %123 = load i8, i8* %121, align 1
  %124 = icmp eq i8 %122, %123
  br i1 %124, label %113, label %129

125:                                              ; preds = %112
  %126 = tail call i32 @bcmp(i8* %100, i8* %104, i64 %86) #12
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %113, %74, %106, %112, %125
  br label %129

129:                                              ; preds = %56, %120, %74, %107, %76, %75, %45, %26, %128, %125, %63, %20, %14, %8, %2
  %130 = phi i1 [ false, %2 ], [ false, %8 ], [ false, %14 ], [ false, %20 ], [ false, %63 ], [ true, %128 ], [ false, %125 ], [ false, %74 ], [ false, %26 ], [ false, %45 ], [ false, %75 ], [ false, %76 ], [ false, %107 ], [ false, %120 ], [ false, %56 ]
  ret i1 %130
}

declare zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo12EqualsTraitsINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEELb0EE6EqualsERKSA_SD_(%"class.std::__1::vector.9"* dereferenceable(24), %"class.std::__1::vector.9"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.9"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.9"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 24
  %17 = icmp eq i64 %9, %16
  %18 = inttoptr i64 %7 to %"class.std::__1::basic_string"*
  %19 = inttoptr i64 %14 to %"class.std::__1::basic_string"*
  br i1 %17, label %20, label %78

20:                                               ; preds = %2
  %21 = icmp eq i64 %8, 0
  br i1 %21, label %78, label %22

22:                                               ; preds = %20, %75
  %23 = phi i64 [ %76, %75 ], [ 0, %20 ]
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 %23
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 %23
  %26 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 %23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 %23, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = zext i8 %36 to i64
  %41 = select i1 %37, i64 %39, i64 %40
  %42 = icmp eq i64 %33, %41
  br i1 %42, label %43, label %78

43:                                               ; preds = %22
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %47 = select i1 %29, i8* %45, i8* %46
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %51 = select i1 %37, i8* %49, i8* %50
  %52 = icmp eq i64 %33, 0
  br i1 %29, label %59, label %53

53:                                               ; preds = %43
  br i1 %52, label %75, label %54

54:                                               ; preds = %53
  %55 = ptrtoint i8* %45 to i64
  %56 = trunc i64 %55 to i8
  %57 = load i8, i8* %51, align 1
  %58 = icmp eq i8 %57, %56
  br i1 %58, label %60, label %78

59:                                               ; preds = %43
  br i1 %52, label %75, label %72

60:                                               ; preds = %54, %67
  %61 = phi i64 [ %64, %67 ], [ %32, %54 ]
  %62 = phi i8* [ %65, %67 ], [ %46, %54 ]
  %63 = phi i8* [ %68, %67 ], [ %51, %54 ]
  %64 = add i64 %61, -1
  %65 = getelementptr inbounds i8, i8* %62, i64 1
  %66 = icmp eq i64 %64, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds i8, i8* %63, i64 1
  %69 = load i8, i8* %65, align 1
  %70 = load i8, i8* %68, align 1
  %71 = icmp eq i8 %69, %70
  br i1 %71, label %60, label %78

72:                                               ; preds = %59
  %73 = tail call i32 @bcmp(i8* %47, i8* %51, i64 %33) #12
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %60, %53, %59, %72
  %76 = add nuw i64 %23, 1
  %77 = icmp ult i64 %76, %9
  br i1 %77, label %22, label %78

78:                                               ; preds = %75, %72, %22, %54, %67, %20, %2
  %79 = phi i1 [ false, %2 ], [ true, %20 ], [ false, %67 ], [ true, %75 ], [ false, %72 ], [ false, %22 ], [ false, %54 ]
  ret i1 %79
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4mojo11CloneTraitsIN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEELb0EE5CloneERKSA_: argument 0"}
!5 = distinct !{!5, !"_ZN4mojo11CloneTraitsIN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEELb0EE5CloneERKSA_"}
!6 = distinct !{!6, !7, !"_ZN4mojo5CloneIN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEET_RKSB_: argument 0"}
!7 = distinct !{!7, !"_ZN4mojo5CloneIN4absl8optionalINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEET_RKSB_"}
!8 = !{!9, !11, !4, !6}
!9 = distinct !{!9, !10, !"_ZN4mojo11CloneTraitsINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELb0EE5CloneERKS7_: argument 0"}
!10 = distinct !{!10, !"_ZN4mojo11CloneTraitsINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELb0EE5CloneERKS7_"}
!11 = distinct !{!11, !12, !"_ZN4mojo5CloneINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_RKS8_: argument 0"}
!12 = distinct !{!12, !"_ZN4mojo5CloneINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_RKS8_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK4mojo9StructPtrIN7network5mojom16TrustTokenParamsEE5CloneEv: argument 0"}
!15 = distinct !{!15, !"_ZNK4mojo9StructPtrIN7network5mojom16TrustTokenParamsEE5CloneEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK4mojo9StructPtrIN7network5mojom16TrustTokenParamsEE5CloneEv: argument 0"}
!18 = distinct !{!18, !"_ZNK4mojo9StructPtrIN7network5mojom16TrustTokenParamsEE5CloneEv"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN4mojo11CloneTraitsINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELb0EE5CloneERKS7_: argument 0"}
!21 = distinct !{!21, !"_ZN4mojo11CloneTraitsINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELb0EE5CloneERKS7_"}
!22 = distinct !{!22, !23, !"_ZN4mojo5CloneINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_RKS8_: argument 0"}
!23 = distinct !{!23, !"_ZN4mojo5CloneINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEET_RKS8_"}
