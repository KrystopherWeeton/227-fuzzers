; ModuleID = '../../ui/gfx/image/image_util.cc'
source_filename = "../../ui/gfx/image/image_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Image" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.gfx::ImageSkia" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.gfx::ImageSkiaRep" = type <{ %"class.cc::PaintImage", %class.sk_sp.13, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.12, %class.sk_sp.13, %"class.gfx::Rect", i32, %class.sk_sp.18, %class.sk_sp.19, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.12, %class.scoped_refptr.20 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.18 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.19 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.12 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.scoped_refptr.20 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.13 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.14", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i8* }
%"class.gfx::Size" = type { i32, i32 }
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i8* }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx26ImageFrom1xJPEGEncodedDataEPKhm(%"class.gfx::Image"* noalias sret, i8*, i64) local_unnamed_addr #0 {
  %4 = tail call %class.SkBitmap* @_ZN3gfx9JPEGCodec6DecodeEPKhm(i8* %1, i64 %2) #5
  %5 = icmp eq %class.SkBitmap* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"* %0) #5
  br label %9

7:                                                ; preds = %3
  tail call void @_ZN3gfx5Image18CreateFrom1xBitmapERK8SkBitmap(%"class.gfx::Image"* sret %0, %class.SkBitmap* nonnull dereferenceable(56) %4) #5
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #5
  %8 = bitcast %class.SkBitmap* %4 to i8*
  tail call void @_ZdlPv(i8* %8) #6
  br label %9

9:                                                ; preds = %6, %7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %class.SkBitmap* @_ZN3gfx9JPEGCodec6DecodeEPKhm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3gfx5Image18CreateFrom1xBitmapERK8SkBitmap(%"class.gfx::Image"* sret, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZN3gfx5ImageC1Ev(%"class.gfx::Image"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx28ResizedImageForSearchByImageERKNS_5ImageE(%"class.gfx::Image"* noalias sret, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #0 {
  tail call void @_ZN3gfx46ResizedImageForSearchByImageSkiaRepresentationERKNS_5ImageE(%"class.gfx::Image"* sret %0, %"class.gfx::Image"* dereferenceable(8) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx46ResizedImageForSearchByImageSkiaRepresentationERKNS_5ImageE(%"class.gfx::Image"* noalias sret, %"class.gfx::Image"* dereferenceable(8)) local_unnamed_addr #0 {
  %3 = alloca %"class.gfx::ImageSkia", align 8
  %4 = alloca %class.SkBitmap, align 8
  %5 = alloca %"class.gfx::ImageSkia", align 8
  %6 = alloca %"class.gfx::ImageSkiaRep", align 8
  %7 = bitcast %"class.gfx::ImageSkia"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  call void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* nonnull sret %3, %"class.gfx::Image"* %1) #5
  %8 = call dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"* nonnull %3, float 1.000000e+00) #5
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  %9 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %8, i64 0, i32 6
  %10 = load float, float* %9, align 8
  %11 = fcmp oeq float %10, 0.000000e+00
  %12 = select i1 %11, float 1.000000e+00, float %10
  %13 = fcmp une float %12, 1.000000e+00
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %0, %"class.gfx::Image"* dereferenceable(8) %1) #5
  br label %50

15:                                               ; preds = %2
  %16 = call dereferenceable(56) %class.SkBitmap* @_ZNK3gfx12ImageSkiaRep9GetBitmapEv(%"class.gfx::ImageSkiaRep"* %8) #5
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %16, i64 0, i32 1, i32 2, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %16, i64 0, i32 1, i32 2, i32 1, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = mul nsw i32 %20, %18
  %22 = icmp sgt i32 %21, 90000
  br i1 %22, label %23, label %49

23:                                               ; preds = %15
  %24 = icmp sgt i32 %20, 600
  %25 = icmp sgt i32 %18, 400
  %26 = or i1 %25, %24
  br i1 %26, label %27, label %49

27:                                               ; preds = %23
  %28 = sitofp i32 %20 to double
  %29 = fdiv double 6.000000e+02, %28
  %30 = sitofp i32 %18 to double
  %31 = fdiv double 4.000000e+02, %30
  %32 = fcmp olt double %31, %29
  %33 = select i1 %32, double %31, double %29
  %34 = fmul double %33, %28
  %35 = fptosi double %34 to i32
  %36 = icmp sgt i32 %35, 1
  %37 = select i1 %36, i32 %35, i32 1
  %38 = icmp slt i32 %37, 600
  %39 = select i1 %38, i32 %37, i32 600
  %40 = fmul double %33, %30
  %41 = fptosi double %40 to i32
  %42 = icmp sgt i32 %41, 1
  %43 = select i1 %42, i32 %41, i32 1
  %44 = icmp slt i32 %43, 400
  %45 = select i1 %44, i32 %43, i32 400
  %46 = bitcast %class.SkBitmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %46) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 56, i1 false)
  call void @_ZN4skia15ImageOperations6ResizeERK8SkBitmapNS0_12ResizeMethodEiiPNS1_9AllocatorE(%class.SkBitmap* nonnull sret %4, %class.SkBitmap* dereferenceable(56) %16, i32 0, i32 %39, i32 %45, %"class.SkBitmap::Allocator"* null) #5
  %47 = bitcast %"class.gfx::ImageSkia"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #5
  %48 = bitcast %"class.gfx::ImageSkiaRep"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %48) #5
  call void @_ZN3gfx12ImageSkiaRepC1ERK8SkBitmapf(%"class.gfx::ImageSkiaRep"* nonnull %6, %class.SkBitmap* nonnull dereferenceable(56) %4, float 0.000000e+00) #5
  call void @_ZN3gfx9ImageSkiaC1ERKNS_12ImageSkiaRepE(%"class.gfx::ImageSkia"* nonnull %5, %"class.gfx::ImageSkiaRep"* nonnull dereferenceable(192) %6) #5
  call void @_ZN3gfx5ImageC1ERKNS_9ImageSkiaE(%"class.gfx::Image"* %0, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %5) #5
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %5) #5
  call void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %48) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #5
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %46) #5
  br label %50

49:                                               ; preds = %23, %15
  call void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"* %0, %"class.gfx::Image"* dereferenceable(8) %1) #5
  br label %50

50:                                               ; preds = %27, %49, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx26JPEG1xEncodedDataFromImageERKNS_5ImageEiPNSt3__16vectorIhNS3_9allocatorIhEEEE(%"class.gfx::Image"* dereferenceable(8), i32, %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %4 = alloca %"class.gfx::ImageSkia", align 8
  %5 = bitcast %"class.gfx::ImageSkia"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  call void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* nonnull sret %4, %"class.gfx::Image"* %0) #5
  %6 = call dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"* nonnull %4, float 1.000000e+00) #5
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %7 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %6, i64 0, i32 6
  %8 = load float, float* %7, align 8
  %9 = fcmp oeq float %8, 0.000000e+00
  %10 = select i1 %9, float 1.000000e+00, float %8
  %11 = fcmp une float %10, 1.000000e+00
  br i1 %11, label %19, label %12

12:                                               ; preds = %3
  %13 = call dereferenceable(56) %class.SkBitmap* @_ZNK3gfx12ImageSkiaRep9GetBitmapEv(%"class.gfx::ImageSkiaRep"* %6) #5
  %14 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %13, i64 0, i32 1, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = call zeroext i1 @_ZN3gfx9JPEGCodec6EncodeERK8SkBitmapiPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* dereferenceable(56) %13, i32 %1, %"class.std::__1::vector"* %2) #5
  br label %19

19:                                               ; preds = %3, %12, %17
  %20 = phi i1 [ false, %3 ], [ %18, %17 ], [ false, %12 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gfx39JPEG1xEncodedDataFromSkiaRepresentationERKNS_5ImageEiPNSt3__16vectorIhNS3_9allocatorIhEEEE(%"class.gfx::Image"* dereferenceable(8), i32, %"class.std::__1::vector"*) local_unnamed_addr #0 {
  %4 = alloca %"class.gfx::ImageSkia", align 8
  %5 = bitcast %"class.gfx::ImageSkia"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #5
  call void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* nonnull sret %4, %"class.gfx::Image"* %0) #5
  %6 = call dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"* nonnull %4, float 1.000000e+00) #5
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #5
  %7 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %6, i64 0, i32 6
  %8 = load float, float* %7, align 8
  %9 = fcmp oeq float %8, 0.000000e+00
  %10 = select i1 %9, float 1.000000e+00, float %8
  %11 = fcmp une float %10, 1.000000e+00
  br i1 %11, label %19, label %12

12:                                               ; preds = %3
  %13 = call dereferenceable(56) %class.SkBitmap* @_ZNK3gfx12ImageSkiaRep9GetBitmapEv(%"class.gfx::ImageSkiaRep"* %6) #5
  %14 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %13, i64 0, i32 1, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %12
  %18 = call zeroext i1 @_ZN3gfx9JPEGCodec6EncodeERK8SkBitmapiPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* dereferenceable(56) %13, i32 %1, %"class.std::__1::vector"* %2) #5
  br label %19

19:                                               ; preds = %12, %17, %3
  %20 = phi i1 [ false, %3 ], [ %18, %17 ], [ false, %12 ]
  ret i1 %20
}

declare void @_ZNK3gfx5Image11AsImageSkiaEv(%"class.gfx::ImageSkia"* sret, %"class.gfx::Image"*) local_unnamed_addr #2

declare dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"*, float) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #3

declare dereferenceable(56) %class.SkBitmap* @_ZNK3gfx12ImageSkiaRep9GetBitmapEv(%"class.gfx::ImageSkiaRep"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3gfx9JPEGCodec6EncodeERK8SkBitmapiPNSt3__16vectorIhNS4_9allocatorIhEEEE(%class.SkBitmap* dereferenceable(56), i32, %"class.std::__1::vector"*) local_unnamed_addr #2

declare void @_ZN3gfx5ImageC1ERKS0_(%"class.gfx::Image"*, %"class.gfx::Image"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN4skia15ImageOperations6ResizeERK8SkBitmapNS0_12ResizeMethodEiiPNS1_9AllocatorE(%class.SkBitmap* sret, %class.SkBitmap* dereferenceable(56), i32, i32, i32, %"class.SkBitmap::Allocator"*) local_unnamed_addr #2

declare void @_ZN3gfx12ImageSkiaRepC1ERK8SkBitmapf(%"class.gfx::ImageSkiaRep"*, %class.SkBitmap* dereferenceable(56), float) unnamed_addr #2

declare void @_ZN3gfx9ImageSkiaC1ERKNS_12ImageSkiaRepE(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkiaRep"* dereferenceable(192)) unnamed_addr #2

declare void @_ZN3gfx5ImageC1ERKNS_9ImageSkiaE(%"class.gfx::Image"*, %"class.gfx::ImageSkia"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx12ImageSkiaRepD1Ev(%"class.gfx::ImageSkiaRep"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx17GetVisibleMarginsERKNS_9ImageSkiaEPiS3_(%"class.gfx::ImageSkia"* dereferenceable(8), i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  store i32 0, i32* %1, align 4
  store i32 0, i32* %2, align 4
  %4 = tail call zeroext i1 @_ZNK3gfx9ImageSkia17HasRepresentationEf(%"class.gfx::ImageSkia"* %0, float 1.000000e+00) #5
  br i1 %4, label %5, label %86

5:                                                ; preds = %3
  %6 = tail call dereferenceable(192) %"class.gfx::ImageSkiaRep"* @_ZNK3gfx9ImageSkia17GetRepresentationEf(%"class.gfx::ImageSkia"* %0, float 1.000000e+00) #5
  %7 = tail call dereferenceable(56) %class.SkBitmap* @_ZNK3gfx12ImageSkiaRep9GetBitmapEv(%"class.gfx::ImageSkiaRep"* %6) #5
  %8 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 0, i32 1, i32 2, i32 1, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %86, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 0, i32 1, i32 2, i32 1, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %86, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 0, i32 0, i32 0
  %17 = load %class.SkPixelRef*, %class.SkPixelRef** %16, align 8
  %18 = icmp eq %class.SkPixelRef* %17, null
  br i1 %18, label %86, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 0, i32 1, i32 2, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %86, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 0, i32 1
  br label %25

25:                                               ; preds = %23, %42
  %26 = phi i32 [ %9, %23 ], [ %43, %42 ]
  %27 = phi i32 [ %13, %23 ], [ %44, %42 ]
  %28 = phi i32 [ 0, %23 ], [ %45, %42 ]
  %29 = icmp sgt i32 %27, 0
  br i1 %29, label %33, label %42

30:                                               ; preds = %33
  %31 = load i32, i32* %12, align 4
  %32 = icmp slt i32 %37, %31
  br i1 %32, label %33, label %40

33:                                               ; preds = %25, %30
  %34 = phi i32 [ %37, %30 ], [ 0, %25 ]
  %35 = tail call i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap* %24, i32 %28, i32 %34) #5
  %36 = icmp ugt i32 %35, 218103807
  %37 = add nuw nsw i32 %34, 1
  br i1 %36, label %38, label %30

38:                                               ; preds = %33
  store i32 %28, i32* %1, align 4
  %39 = load i32, i32* %8, align 4
  br label %47

40:                                               ; preds = %30
  %41 = load i32, i32* %8, align 4
  br label %42

42:                                               ; preds = %40, %25
  %43 = phi i32 [ %41, %40 ], [ %26, %25 ]
  %44 = phi i32 [ %31, %40 ], [ %27, %25 ]
  %45 = add nuw nsw i32 %28, 1
  %46 = icmp slt i32 %45, %43
  br i1 %46, label %25, label %47

47:                                               ; preds = %42, %38
  %48 = phi i32 [ %39, %38 ], [ %43, %42 ]
  %49 = phi i32 [ %28, %38 ], [ %45, %42 ]
  %50 = icmp eq i32 %49, %48
  br i1 %50, label %58, label %51

51:                                               ; preds = %47
  %52 = add nsw i32 %48, -1
  %53 = load i32, i32* %1, align 4
  %54 = icmp sgt i32 %52, %53
  br i1 %54, label %55, label %82

55:                                               ; preds = %51
  %56 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 0, i32 1
  %57 = load i32, i32* %12, align 4
  br label %61

58:                                               ; preds = %47
  %59 = add nsw i32 %48, 1
  %60 = sdiv i32 %59, 2
  store i32 %60, i32* %1, align 4
  br label %82

61:                                               ; preds = %55, %77
  %62 = phi i32 [ %53, %55 ], [ %78, %77 ]
  %63 = phi i32 [ %57, %55 ], [ %79, %77 ]
  %64 = phi i32 [ %52, %55 ], [ %80, %77 ]
  %65 = phi i32 [ %48, %55 ], [ %64, %77 ]
  %66 = icmp sgt i32 %63, 0
  br i1 %66, label %70, label %77

67:                                               ; preds = %70
  %68 = load i32, i32* %12, align 4
  %69 = icmp slt i32 %74, %68
  br i1 %69, label %70, label %75

70:                                               ; preds = %61, %67
  %71 = phi i32 [ %74, %67 ], [ 0, %61 ]
  %72 = tail call i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap* %56, i32 %64, i32 %71) #5
  %73 = icmp ugt i32 %72, 218103807
  %74 = add nuw nsw i32 %71, 1
  br i1 %73, label %82, label %67

75:                                               ; preds = %67
  %76 = load i32, i32* %1, align 4
  br label %77

77:                                               ; preds = %75, %61
  %78 = phi i32 [ %76, %75 ], [ %62, %61 ]
  %79 = phi i32 [ %68, %75 ], [ %63, %61 ]
  %80 = add nsw i32 %64, -1
  %81 = icmp sgt i32 %80, %78
  br i1 %81, label %61, label %82

82:                                               ; preds = %77, %70, %51, %58
  %83 = phi i32 [ %60, %58 ], [ %48, %51 ], [ %65, %70 ], [ %64, %77 ]
  %84 = load i32, i32* %8, align 4
  %85 = sub i32 %84, %83
  store i32 %85, i32* %2, align 4
  br label %86

86:                                               ; preds = %5, %11, %82, %19, %15, %3
  ret void
}

declare zeroext i1 @_ZNK3gfx9ImageSkia17HasRepresentationEf(%"class.gfx::ImageSkia"*, float) local_unnamed_addr #2

declare i32 @_ZNK8SkPixmap8getColorEii(%class.SkPixmap*, i32, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
