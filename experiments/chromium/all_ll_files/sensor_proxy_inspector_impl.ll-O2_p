; ModuleID = '../../third_party/blink/renderer/modules/sensor/sensor_proxy_inspector_impl.cc'
source_filename = "../../third_party/blink/renderer/modules/sensor/sensor_proxy_inspector_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.128", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.168", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.15", %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.112", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.36" }
%"struct.std::__1::__atomic_base.36" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::Worklist.43"* }
%"class.blink::Worklist.43" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::Worklist.50"* }
%"class.blink::Worklist.50" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.92", %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.106", [4 x i8] }>
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94", %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { i64 }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { float }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.115", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.150" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.43"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.50"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.172" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__cxx_atomic_impl.170" }
%"struct.std::__1::__cxx_atomic_impl.170" = type { %"struct.std::__1::__cxx_atomic_base_impl.171" }
%"struct.std::__1::__cxx_atomic_base_impl.171" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::SensorProxyInspectorImpl" = type { %"class.blink::SensorProxy.base", i8, [6 x i8] }
%"class.blink::SensorProxy.base" = type <{ %"class.blink::PageVisibilityObserver", %"class.blink::FocusChangedObserver", i32, [4 x i8], %"class.blink::HeapHashSet", i32, [4 x i8], %"union.device::SensorReading", %"union.device::SensorReading", %"class.blink::Member", i8 }>
%"class.blink::PageVisibilityObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Page"* }
%"class.blink::FocusChangedObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.2"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::SensorProxy::Observer"* }
%"class.blink::SensorProxy::Observer" = type { %"class.blink::GarbageCollectedMixin" }
%"union.device::SensorReading" = type { %"struct.device::SensorReadingRaw" }
%"struct.device::SensorReadingRaw" = type { %"struct.device::SensorReadingBase", [4 x %"class.device::SensorReadingField"] }
%"struct.device::SensorReadingBase" = type { %"class.device::SensorReadingField" }
%"class.device::SensorReadingField" = type { %"union.device::SensorReadingField<double>::Storage" }
%"union.device::SensorReadingField<double>::Storage" = type { i64 }
%"class.blink::Member" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::SensorProviderProxy"* }
%"class.blink::SensorProviderProxy" = type opaque
%"class.blink::Page" = type opaque
%"class.blink::SensorProxy" = type <{ %"class.blink::PageVisibilityObserver", %"class.blink::FocusChangedObserver", i32, [4 x i8], %"class.blink::HeapHashSet", i32, [4 x i8], %"union.device::SensorReading", %"union.device::SensorReading", %"class.blink::Member", i8, [7 x i8] }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.177 }
%class.scoped_refptr.177 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.178" }
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::SensorProxyInspectorImpl"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::WeakPersistent" }
%"class.blink::Thread" = type { i32 (...)** }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.184" }>
%"class.base::RefCountedThreadSafe.184" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.184", [4 x i8] }>
%"class.mojo::InlinedStructPtr" = type <{ %"class.device::mojom::blink::SensorConfiguration", i32, [4 x i8] }>
%"class.device::mojom::blink::SensorConfiguration" = type { double }
%"class.base::OnceCallback.185" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::String" = type { %class.scoped_refptr.187 }
%class.scoped_refptr.187 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.188" }
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__atomic_base.190" }
%"struct.std::__1::__atomic_base.190" = type { %"struct.std::__1::__cxx_atomic_impl.191" }
%"struct.std::__1::__cxx_atomic_impl.191" = type { %"struct.std::__1::__cxx_atomic_base_impl.192" }
%"struct.std::__1::__cxx_atomic_base_impl.192" = type { i32 }

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_24SensorProxyInspectorImplELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_24SensorProxyInspectorImplELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink24SensorProxyInspectorImplEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink24SensorProxyInspectorImplEFvvEJNS2_14WeakPersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink24SensorProxyInspectorImplEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink24SensorProxyInspectorImplEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

@_ZTVN5blink24SensorProxyInspectorImplE = hidden unnamed_addr constant { [16 x i8*], [6 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SensorProxyInspectorImpl"*, %"class.blink::Visitor"*)* @_ZNK5blink24SensorProxyInspectorImpl5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::SensorProxy"*)* @_ZN5blink11SensorProxy21PageVisibilityChangedEv to i8*), i8* bitcast (void (%"class.blink::SensorProxyInspectorImpl"*)* @_ZN5blink24SensorProxyInspectorImplD2Ev to i8*), i8* bitcast (void (%"class.blink::SensorProxyInspectorImpl"*)* @_ZN5blink24SensorProxyInspectorImplD0Ev to i8*), i8* bitcast (void (%"class.blink::SensorProxyInspectorImpl"*)* @_ZN5blink24SensorProxyInspectorImpl10InitializeEv to i8*), i8* bitcast (void (%"class.blink::SensorProxyInspectorImpl"*, %"class.mojo::InlinedStructPtr"*, %"class.base::OnceCallback.185"*)* @_ZN5blink24SensorProxyInspectorImpl16AddConfigurationEN4mojo16InlinedStructPtrIN6device5mojom5blink19SensorConfigurationEEEN4base12OnceCallbackIFvbEEE to i8*), i8* bitcast (void (%"class.blink::SensorProxyInspectorImpl"*, %"class.mojo::InlinedStructPtr"*)* @_ZN5blink24SensorProxyInspectorImpl19RemoveConfigurationEN4mojo16InlinedStructPtrIN6device5mojom5blink19SensorConfigurationEEE to i8*), i8* bitcast (double (%"class.blink::SensorProxyInspectorImpl"*)* @_ZNK5blink24SensorProxyInspectorImpl19GetDefaultFrequencyEv to i8*), i8* bitcast ({ double, double } (%"class.blink::SensorProxyInspectorImpl"*)* @_ZNK5blink24SensorProxyInspectorImpl18GetFrequencyLimitsEv to i8*), i8* bitcast (void (%"class.blink::SensorProxyInspectorImpl"*, %"union.device::SensorReading"*)* @_ZN5blink24SensorProxyInspectorImpl22SetReadingForInspectorERKN6device13SensorReadingE to i8*), i8* bitcast (void (%"class.blink::SensorProxyInspectorImpl"*, i32, %"class.WTF::String"*)* @_ZN5blink24SensorProxyInspectorImpl11ReportErrorENS_16DOMExceptionCodeERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::SensorProxyInspectorImpl"*)* @_ZN5blink24SensorProxyInspectorImpl7SuspendEv to i8*), i8* bitcast (void (%"class.blink::SensorProxyInspectorImpl"*)* @_ZN5blink24SensorProxyInspectorImpl6ResumeEv to i8*), i8* bitcast (void (%"class.blink::SensorProxy"*)* @_ZN5blink11SensorProxy19FocusedFrameChangedEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::SensorProxyInspectorImpl"*, %"class.blink::Visitor"*)* @_ZThn16_NK5blink24SensorProxyInspectorImpl5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::SensorProxy"*)* @_ZThn16_N5blink11SensorProxy19FocusedFrameChangedEv to i8*), i8* bitcast (void (%"class.blink::SensorProxyInspectorImpl"*)* @_ZThn16_N5blink24SensorProxyInspectorImplD1Ev to i8*), i8* bitcast (void (%"class.blink::SensorProxyInspectorImpl"*)* @_ZThn16_N5blink24SensorProxyInspectorImplD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"Initialize\00", align 1
@.str.1 = private unnamed_addr constant [79 x i8] c"../../third_party/blink/renderer/modules/sensor/sensor_proxy_inspector_impl.cc\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1

@_ZN5blink24SensorProxyInspectorImplC1EN6device5mojom10SensorTypeEPNS_19SensorProviderProxyEPNS_4PageE = hidden unnamed_addr alias void (%"class.blink::SensorProxyInspectorImpl"*, i32, %"class.blink::SensorProviderProxy"*, %"class.blink::Page"*), void (%"class.blink::SensorProxyInspectorImpl"*, i32, %"class.blink::SensorProviderProxy"*, %"class.blink::Page"*)* @_ZN5blink24SensorProxyInspectorImplC2EN6device5mojom10SensorTypeEPNS_19SensorProviderProxyEPNS_4PageE
@_ZN5blink24SensorProxyInspectorImplD1Ev = hidden unnamed_addr alias void (%"class.blink::SensorProxyInspectorImpl"*), void (%"class.blink::SensorProxyInspectorImpl"*)* @_ZN5blink24SensorProxyInspectorImplD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24SensorProxyInspectorImplC2EN6device5mojom10SensorTypeEPNS_19SensorProviderProxyEPNS_4PageE(%"class.blink::SensorProxyInspectorImpl"*, i32, %"class.blink::SensorProviderProxy"*, %"class.blink::Page"*) unnamed_addr #0 align 2 {
  %5 = bitcast %"class.blink::SensorProxyInspectorImpl"* %0 to %"class.blink::SensorProxy"*
  tail call void @_ZN5blink11SensorProxyC2EN6device5mojom10SensorTypeEPNS_19SensorProviderProxyEPNS_4PageE(%"class.blink::SensorProxy"* %5, i32 %1, %"class.blink::SensorProviderProxy"* %2, %"class.blink::Page"* %3) #9
  %6 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink24SensorProxyInspectorImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*], [6 x i8*] }, { [16 x i8*], [6 x i8*] }* @_ZTVN5blink24SensorProxyInspectorImplE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 1
  store i8 0, i8* %8, align 1
  ret void
}

declare void @_ZN5blink11SensorProxyC2EN6device5mojom10SensorTypeEPNS_19SensorProviderProxyEPNS_4PageE(%"class.blink::SensorProxy"*, i32, %"class.blink::SensorProviderProxy"*, %"class.blink::Page"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink11SensorProxyD2Ev(%"class.blink::SensorProxy"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24SensorProxyInspectorImplD2Ev(%"class.blink::SensorProxyInspectorImpl"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::SensorProxyInspectorImpl"* %0 to %"class.blink::SensorProxy"*
  tail call void @_ZN5blink11SensorProxyD2Ev(%"class.blink::SensorProxy"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink24SensorProxyInspectorImplD1Ev(%"class.blink::SensorProxyInspectorImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 -1, i32 0, i32 9
  %3 = bitcast %"class.blink::Member"* %2 to %"class.blink::SensorProxy"*
  tail call void @_ZN5blink11SensorProxyD2Ev(%"class.blink::SensorProxy"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24SensorProxyInspectorImplD0Ev(%"class.blink::SensorProxyInspectorImpl"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::SensorProxyInspectorImpl"* %0 to %"class.blink::SensorProxy"*
  tail call void @_ZN5blink11SensorProxyD2Ev(%"class.blink::SensorProxy"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink24SensorProxyInspectorImplD0Ev(%"class.blink::SensorProxyInspectorImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 -1, i32 0, i32 9
  %3 = bitcast %"class.blink::Member"* %2 to %"class.blink::SensorProxy"*
  tail call void @_ZN5blink11SensorProxyD2Ev(%"class.blink::SensorProxy"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24SensorProxyInspectorImpl5TraceEPNS_7VisitorE(%"class.blink::SensorProxyInspectorImpl"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::SensorProxyInspectorImpl"* %0 to %"class.blink::SensorProxy"*
  tail call void @_ZNK5blink11SensorProxy5TraceEPNS_7VisitorE(%"class.blink::SensorProxy"* %3, %"class.blink::Visitor"* %1) #9
  ret void
}

declare void @_ZNK5blink11SensorProxy5TraceEPNS_7VisitorE(%"class.blink::SensorProxy"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_NK5blink24SensorProxyInspectorImpl5TraceEPNS_7VisitorE(%"class.blink::SensorProxyInspectorImpl"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 -1, i32 0, i32 9
  %4 = bitcast %"class.blink::Member"* %3 to %"class.blink::SensorProxy"*
  tail call void @_ZNK5blink11SensorProxy5TraceEPNS_7VisitorE(%"class.blink::SensorProxy"* %4, %"class.blink::Visitor"* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24SensorProxyInspectorImpl10InitializeEv(%"class.blink::SensorProxyInspectorImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to { i64, i64 }*
  %5 = alloca %"class.blink::WeakPersistent", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %99

11:                                               ; preds = %1
  store i32 1, i32* %8, align 8
  %12 = bitcast %"class.base::OnceCallback"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %13, align 8
  %14 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #9
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::SensorProxyInspectorImpl"*)* @_ZN5blink24SensorProxyInspectorImpl15OnSensorCreatedEv to i64), i64 0>, <2 x i64>* %3, align 16
  %15 = bitcast %"class.blink::WeakPersistent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %5, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %5, i64 0, i32 0, i32 0
  store %"class.blink::SensorProxyInspectorImpl"* %0, %"class.blink::SensorProxyInspectorImpl"** %17, align 8, !alias.scope !2
  %18 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %18, align 8, !alias.scope !2
  %19 = ptrtoint %"class.blink::SensorProxyInspectorImpl"* %0 to i64
  switch i64 %19, label %20 [
    i64 0, label %46
    i64 -1, label %46
  ]

20:                                               ; preds = %11
  %21 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !2
  %22 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %21, i64 0, i32 1
  %23 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %22) #9, !noalias !2
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %27, !prof !5

25:                                               ; preds = %20
  %26 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %22, i8* %26) #9
  br label %27

27:                                               ; preds = %25, %20
  %28 = phi i8* [ %26, %25 ], [ %23, %20 ]
  %29 = bitcast i8* %28 to %"class.blink::ThreadState"**
  %30 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %29, align 8, !noalias !2
  %31 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 4, i32 0, i32 0, i32 0
  %32 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %31, align 8, !noalias !2
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %33, align 8, !noalias !2
  %35 = icmp eq %"class.blink::PersistentNode"* %34, null
  br i1 %35, label %36, label %39, !prof !5

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %32, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %37) #9
  %38 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %33, align 8
  br label %39

39:                                               ; preds = %36, %27
  %40 = phi %"class.blink::PersistentNode"* [ %38, %36 ], [ %34, %27 ]
  %41 = bitcast %"class.blink::PersistentNode"* %40 to i64*
  %42 = load i64, i64* %41, align 8, !noalias !2
  %43 = bitcast %"class.blink::PersistentRegion"* %32 to i64*
  store i64 %42, i64* %43, align 8, !noalias !2
  %44 = bitcast %"class.blink::PersistentNode"* %40 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %16, %"class.blink::PersistentBase"** %44, align 8, !noalias !2
  %45 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %40, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_24SensorProxyInspectorImplELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %45, align 8
  store %"class.blink::PersistentNode"* %40, %"class.blink::PersistentNode"** %18, align 8, !alias.scope !2
  br label %46

46:                                               ; preds = %11, %11, %39
  %47 = call i8* @_Znwm(i64 64) #10, !noalias !6
  %48 = bitcast i8* %47 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink24SensorProxyInspectorImplEFvvEJNS2_14WeakPersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %48, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink24SensorProxyInspectorImplEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %4, %"class.blink::WeakPersistent"* nonnull dereferenceable(16) %5) #9, !noalias !6
  %49 = bitcast %"class.base::OnceCallback"* %2 to i8**
  store i8* %47, i8** %49, align 8, !alias.scope !6
  %50 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %18, align 8
  %51 = icmp eq %"class.blink::PersistentNode"* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %46
  %53 = ptrtoint i8* %47 to i64
  br label %75

54:                                               ; preds = %46
  %55 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %56 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %55, i64 0, i32 1
  %57 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %56) #9
  %58 = icmp eq i8* %57, null
  br i1 %58, label %59, label %61, !prof !5

59:                                               ; preds = %54
  %60 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %56, i8* %60) #9
  br label %61

61:                                               ; preds = %59, %54
  %62 = phi i8* [ %60, %59 ], [ %57, %54 ]
  %63 = bitcast i8* %62 to %"class.blink::ThreadState"**
  %64 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %64, i64 0, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %65, align 8
  %67 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %18, align 8
  %68 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %66, i64 0, i32 0, i32 0
  %69 = bitcast %"class.blink::PersistentRegion"* %66 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.blink::PersistentNode"* %67 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %67, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %72, align 8
  store %"class.blink::PersistentNode"* %67, %"class.blink::PersistentNode"** %68, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %18, align 8
  %73 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %74 = load i64, i64* %73, align 8
  br label %75

75:                                               ; preds = %52, %61
  %76 = phi i64 [ %53, %52 ], [ %74, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #9
  %77 = call %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() #9
  %78 = bitcast %"class.blink::Thread"* %77 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %79 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %78, align 8
  %80 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %79, i64 3
  %81 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %80, align 8
  %82 = call %"class.base::SingleThreadTaskRunner"* %81(%"class.blink::Thread"* %77) #9
  %83 = bitcast %"class.base::SingleThreadTaskRunner"* %82 to %"class.base::TaskRunner"*
  %84 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %84) #9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 38) #9
  %85 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %76, i64* %85, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %86 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %83, %"class.base::Location"* nonnull dereferenceable(32) %6, %"class.base::OnceCallback"* nonnull %7) #9
  %87 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %87) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %84) #9
  %88 = icmp eq %"class.base::SingleThreadTaskRunner"* %82, null
  br i1 %88, label %97, label %89

89:                                               ; preds = %75
  %90 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %82, i64 0, i32 0, i32 0, i32 1
  %91 = getelementptr inbounds %"class.base::RefCountedThreadSafe.184", %"class.base::RefCountedThreadSafe.184"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw sub i32* %91, i32 1 acq_rel
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %97

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.base::RefCountedThreadSafe.184", %"class.base::RefCountedThreadSafe.184"* %90, i64 -2
  %96 = bitcast %"class.base::RefCountedThreadSafe.184"* %95 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %96) #9
  br label %97

97:                                               ; preds = %75, %89, %94
  %98 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %98) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  br label %99

99:                                               ; preds = %1, %97
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24SensorProxyInspectorImpl15OnSensorCreatedEv(%"class.blink::SensorProxyInspectorImpl"*) #0 align 2 {
  %2 = bitcast %"class.blink::SensorProxyInspectorImpl"* %0 to %"class.blink::SensorProxy"*
  %3 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 5
  store i32 2, i32* %3, align 8
  tail call void @_ZN5blink11SensorProxy21UpdateSuspendedStatusEv(%"class.blink::SensorProxy"* %2) #9
  %4 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.blink::WeakMember.2"*, %"class.blink::WeakMember.2"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"class.blink::WeakMember.2", %"class.blink::WeakMember.2"* %8, i64 %11
  br i1 %6, label %25, label %13

13:                                               ; preds = %1
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %19
  %16 = phi %"class.blink::WeakMember.2"* [ %20, %19 ], [ %8, %13 ]
  %17 = bitcast %"class.blink::WeakMember.2"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %22 [
    i64 -1, label %19
    i64 0, label %19
  ]

19:                                               ; preds = %15, %15
  %20 = getelementptr inbounds %"class.blink::WeakMember.2", %"class.blink::WeakMember.2"* %16, i64 1
  %21 = icmp eq %"class.blink::WeakMember.2"* %20, %12
  br i1 %21, label %25, label %15

22:                                               ; preds = %15, %13
  %23 = phi %"class.blink::WeakMember.2"* [ %8, %13 ], [ %16, %15 ]
  %24 = icmp eq %"class.blink::WeakMember.2"* %23, %12
  br i1 %24, label %25, label %26

25:                                               ; preds = %19, %26, %43, %40, %1, %22
  ret void

26:                                               ; preds = %22, %43
  %27 = phi %"class.blink::WeakMember.2"* [ %37, %43 ], [ %23, %22 ]
  %28 = getelementptr inbounds %"class.blink::WeakMember.2", %"class.blink::WeakMember.2"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::SensorProxy::Observer"*, %"class.blink::SensorProxy::Observer"** %28, align 8
  %30 = bitcast %"class.blink::SensorProxy::Observer"* %29 to void (%"class.blink::SensorProxy::Observer"*)***
  %31 = load void (%"class.blink::SensorProxy::Observer"*)**, void (%"class.blink::SensorProxy::Observer"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::SensorProxy::Observer"*)*, void (%"class.blink::SensorProxy::Observer"*)** %31, i64 1
  %33 = load void (%"class.blink::SensorProxy::Observer"*)*, void (%"class.blink::SensorProxy::Observer"*)** %32, align 8
  tail call void %33(%"class.blink::SensorProxy::Observer"* %29) #9
  %34 = getelementptr inbounds %"class.blink::WeakMember.2", %"class.blink::WeakMember.2"* %27, i64 1
  %35 = icmp eq %"class.blink::WeakMember.2"* %34, %12
  br i1 %35, label %25, label %36

36:                                               ; preds = %26, %40
  %37 = phi %"class.blink::WeakMember.2"* [ %41, %40 ], [ %34, %26 ]
  %38 = bitcast %"class.blink::WeakMember.2"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  switch i64 %39, label %43 [
    i64 -1, label %40
    i64 0, label %40
  ]

40:                                               ; preds = %36, %36
  %41 = getelementptr inbounds %"class.blink::WeakMember.2", %"class.blink::WeakMember.2"* %37, i64 1
  %42 = icmp eq %"class.blink::WeakMember.2"* %41, %12
  br i1 %42, label %25, label %36

43:                                               ; preds = %36
  %44 = icmp eq %"class.blink::WeakMember.2"* %37, %12
  br i1 %44, label %25, label %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.blink::Thread"* @_ZN5blink6Thread7CurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24SensorProxyInspectorImpl16AddConfigurationEN4mojo16InlinedStructPtrIN6device5mojom5blink19SensorConfigurationEEEN4base12OnceCallbackIFvbEEE(%"class.blink::SensorProxyInspectorImpl"* nocapture readnone, %"class.mojo::InlinedStructPtr"* nocapture readnone, %"class.base::OnceCallback.185"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.185", align 8
  %5 = bitcast %"class.base::OnceCallback.185"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.base::OnceCallback.185", %"class.base::OnceCallback.185"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback.185"* %2 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback.185"* %4 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback.185", %"class.base::OnceCallback.185"* %4, i64 0, i32 0
  %11 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*, i1)**
  %14 = load void (%"class.base::internal::BindStateBase"*, i1)*, void (%"class.base::internal::BindStateBase"*, i1)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* %11, i1 zeroext true) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink24SensorProxyInspectorImpl19RemoveConfigurationEN4mojo16InlinedStructPtrIN6device5mojom5blink19SensorConfigurationEEE(%"class.blink::SensorProxyInspectorImpl"* nocapture, %"class.mojo::InlinedStructPtr"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink24SensorProxyInspectorImpl19GetDefaultFrequencyEv(%"class.blink::SensorProxyInspectorImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = tail call double @_ZN6device25GetSensorDefaultFrequencyENS_5mojom10SensorTypeE(i32 %3) #9
  ret double %4
}

declare double @_ZN6device25GetSensorDefaultFrequencyENS_5mojom10SensorTypeE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { double, double } @_ZNK5blink24SensorProxyInspectorImpl18GetFrequencyLimitsEv(%"class.blink::SensorProxyInspectorImpl"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = tail call double @_ZN6device28GetSensorMaxAllowedFrequencyENS_5mojom10SensorTypeE(i32 %3) #9
  %5 = insertvalue { double, double } { double 1.000000e+00, double undef }, double %4, 1
  ret { double, double } %5
}

declare double @_ZN6device28GetSensorMaxAllowedFrequencyENS_5mojom10SensorTypeE(i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink24SensorProxyInspectorImpl7SuspendEv(%"class.blink::SensorProxyInspectorImpl"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 1
  store i8 1, i8* %2, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink24SensorProxyInspectorImpl6ResumeEv(%"class.blink::SensorProxyInspectorImpl"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 1
  store i8 0, i8* %2, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24SensorProxyInspectorImpl22SetReadingForInspectorERKN6device13SensorReadingE(%"class.blink::SensorProxyInspectorImpl"*, %"union.device::SensorReading"* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %53

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 1
  %8 = load i8, i8* %7, align 1, !range !13
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %53

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 7
  %12 = tail call dereferenceable(40) %"union.device::SensorReading"* @_ZN6device13SensorReadingaSERKS0_(%"union.device::SensorReading"* %11, %"union.device::SensorReading"* dereferenceable(40) %1) #9
  %13 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::WeakMember.2"*, %"class.blink::WeakMember.2"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.blink::WeakMember.2", %"class.blink::WeakMember.2"* %17, i64 %20
  br i1 %15, label %53, label %22

22:                                               ; preds = %10
  %23 = icmp eq i32 %19, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %22, %28
  %25 = phi %"class.blink::WeakMember.2"* [ %29, %28 ], [ %17, %22 ]
  %26 = bitcast %"class.blink::WeakMember.2"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %31 [
    i64 -1, label %28
    i64 0, label %28
  ]

28:                                               ; preds = %24, %24
  %29 = getelementptr inbounds %"class.blink::WeakMember.2", %"class.blink::WeakMember.2"* %25, i64 1
  %30 = icmp eq %"class.blink::WeakMember.2"* %29, %21
  br i1 %30, label %53, label %24

31:                                               ; preds = %24, %22
  %32 = phi %"class.blink::WeakMember.2"* [ %17, %22 ], [ %25, %24 ]
  %33 = icmp eq %"class.blink::WeakMember.2"* %32, %21
  br i1 %33, label %53, label %34

34:                                               ; preds = %31, %51
  %35 = phi %"class.blink::WeakMember.2"* [ %45, %51 ], [ %32, %31 ]
  %36 = getelementptr inbounds %"class.blink::WeakMember.2", %"class.blink::WeakMember.2"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::SensorProxy::Observer"*, %"class.blink::SensorProxy::Observer"** %36, align 8
  %38 = bitcast %"class.blink::SensorProxy::Observer"* %37 to void (%"class.blink::SensorProxy::Observer"*)***
  %39 = load void (%"class.blink::SensorProxy::Observer"*)**, void (%"class.blink::SensorProxy::Observer"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::SensorProxy::Observer"*)*, void (%"class.blink::SensorProxy::Observer"*)** %39, i64 2
  %41 = load void (%"class.blink::SensorProxy::Observer"*)*, void (%"class.blink::SensorProxy::Observer"*)** %40, align 8
  tail call void %41(%"class.blink::SensorProxy::Observer"* %37) #9
  %42 = getelementptr inbounds %"class.blink::WeakMember.2", %"class.blink::WeakMember.2"* %35, i64 1
  %43 = icmp eq %"class.blink::WeakMember.2"* %42, %21
  br i1 %43, label %53, label %44

44:                                               ; preds = %34, %48
  %45 = phi %"class.blink::WeakMember.2"* [ %49, %48 ], [ %42, %34 ]
  %46 = bitcast %"class.blink::WeakMember.2"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  switch i64 %47, label %51 [
    i64 -1, label %48
    i64 0, label %48
  ]

48:                                               ; preds = %44, %44
  %49 = getelementptr inbounds %"class.blink::WeakMember.2", %"class.blink::WeakMember.2"* %45, i64 1
  %50 = icmp eq %"class.blink::WeakMember.2"* %49, %21
  br i1 %50, label %53, label %44

51:                                               ; preds = %44
  %52 = icmp eq %"class.blink::WeakMember.2"* %45, %21
  br i1 %52, label %53, label %34

53:                                               ; preds = %28, %34, %51, %48, %10, %31, %2, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink24SensorProxyInspectorImpl21ShouldProcessReadingsEv(%"class.blink::SensorProxyInspectorImpl"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 5
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 1
  %7 = load i8, i8* %6, align 1, !range !13
  %8 = icmp eq i8 %7, 0
  br label %9

9:                                                ; preds = %5, %1
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

declare dereferenceable(40) %"union.device::SensorReading"* @_ZN6device13SensorReadingaSERKS0_(%"union.device::SensorReading"*, %"union.device::SensorReading"* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24SensorProxyInspectorImpl11ReportErrorENS_16DOMExceptionCodeERKN3WTF6StringE(%"class.blink::SensorProxyInspectorImpl"*, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"union.device::SensorReading", align 8
  %5 = bitcast %"class.blink::SensorProxyInspectorImpl"* %0 to %"class.blink::SensorProxy"*
  %6 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 5
  store i32 0, i32* %6, align 8
  %7 = bitcast %"union.device::SensorReading"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #9
  call void @_ZN6device13SensorReadingC1Ev(%"union.device::SensorReading"* nonnull %4) #9
  %8 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %0, i64 0, i32 0, i32 7
  %9 = call dereferenceable(40) %"union.device::SensorReading"* @_ZN6device13SensorReadingaSERKS0_(%"union.device::SensorReading"* %8, %"union.device::SensorReading"* nonnull dereferenceable(40) %4) #9
  call void @_ZN6device13SensorReadingD1Ev(%"union.device::SensorReading"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #9
  call void @_ZN5blink11SensorProxy11ReportErrorENS_16DOMExceptionCodeERKN3WTF6StringE(%"class.blink::SensorProxy"* %5, i32 %1, %"class.WTF::String"* dereferenceable(8) %2) #9
  ret void
}

declare void @_ZN6device13SensorReadingC1Ev(%"union.device::SensorReading"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6device13SensorReadingD1Ev(%"union.device::SensorReading"*) unnamed_addr #2

declare void @_ZN5blink11SensorProxy11ReportErrorENS_16DOMExceptionCodeERKN3WTF6StringE(%"class.blink::SensorProxy"*, i32, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink11SensorProxy21UpdateSuspendedStatusEv(%"class.blink::SensorProxy"*) local_unnamed_addr #1

declare void @_ZN5blink11SensorProxy21PageVisibilityChangedEv(%"class.blink::SensorProxy"*) unnamed_addr #1

declare void @_ZN5blink11SensorProxy19FocusedFrameChangedEv(%"class.blink::SensorProxy"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn16_N5blink11SensorProxy19FocusedFrameChangedEv(%"class.blink::SensorProxy"*) unnamed_addr #0 align 2

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_24SensorProxyInspectorImplELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_24SensorProxyInspectorImplELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_24SensorProxyInspectorImplELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SensorProxyInspectorImpl"**
  %4 = load %"class.blink::SensorProxyInspectorImpl"*, %"class.blink::SensorProxyInspectorImpl"** %3, align 8
  %5 = icmp eq %"class.blink::SensorProxyInspectorImpl"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #9
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !5

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #9
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::SensorProxyInspectorImpl", %"class.blink::SensorProxyInspectorImpl"* %4, i64 -1, i32 0, i32 10
  %20 = getelementptr inbounds i8, i8* %19, i64 6
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::SensorProxyInspectorImpl"* null, %"class.blink::SensorProxyInspectorImpl"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #9
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !5

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #9
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink24SensorProxyInspectorImplEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %3 = bitcast void (%"class.base::internal::BindStateBase"*)** %2 to %"class.blink::SensorProxyInspectorImpl"**
  %4 = load %"class.blink::SensorProxyInspectorImpl"*, %"class.blink::SensorProxyInspectorImpl"** %3, align 8
  %5 = icmp eq %"class.blink::SensorProxyInspectorImpl"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %8 = bitcast %"class.blink::SensorProxyInspectorImpl"* %4 to i8*
  %9 = bitcast %"class.base::internal::BindStateBase"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 %13
  %15 = bitcast i8* %14 to %"class.blink::SensorProxyInspectorImpl"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %6
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.blink::SensorProxyInspectorImpl"*)**
  %24 = load void (%"class.blink::SensorProxyInspectorImpl"*)*, void (%"class.blink::SensorProxyInspectorImpl"*)** %23, align 8
  br label %27

25:                                               ; preds = %6
  %26 = inttoptr i64 %10 to void (%"class.blink::SensorProxyInspectorImpl"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.blink::SensorProxyInspectorImpl"*)* [ %24, %18 ], [ %26, %25 ]
  tail call void %28(%"class.blink::SensorProxyInspectorImpl"* %15) #9
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink24SensorProxyInspectorImplEFvvEJNS2_14WeakPersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::WeakPersistent"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink24SensorProxyInspectorImplEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink24SensorProxyInspectorImplEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #9
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::WeakPersistent"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #9
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !5

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #9
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 4, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !5

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #9
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %11, %"class.blink::PersistentBase"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_24SensorProxyInspectorImplELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink24SensorProxyInspectorImplEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #9
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !5

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #9
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink24SensorProxyInspectorImplEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::SensorProxyInspectorImpl"**
  %6 = load %"class.blink::SensorProxyInspectorImpl"*, %"class.blink::SensorProxyInspectorImpl"** %5, align 8
  %7 = icmp eq %"class.blink::SensorProxyInspectorImpl"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink18WrapWeakPersistentINS_24SensorProxyInspectorImplEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!4 = distinct !{!4, !"_ZN5blink18WrapWeakPersistentINS_24SensorProxyInspectorImplEEENS_14WeakPersistentIT_EEPS3_"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7, !9, !11}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink24SensorProxyInspectorImplEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink24SensorProxyInspectorImplEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIMN5blink24SensorProxyInspectorImplEFvvEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIMN5blink24SensorProxyInspectorImplEFvvEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!11 = distinct !{!11, !12, !"_ZN3WTF4BindIMN5blink24SensorProxyInspectorImplEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF4BindIMN5blink24SensorProxyInspectorImplEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!13 = !{i8 0, i8 2}
