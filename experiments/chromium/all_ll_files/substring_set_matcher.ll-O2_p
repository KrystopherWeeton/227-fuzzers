; ModuleID = '../../components/url_matcher/substring_set_matcher.cc'
source_filename = "../../components/url_matcher/substring_set_matcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.url_matcher::SubstringSetMatcher" = type <{ %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.std::__1::__compressed_pair.3" }
%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode" = type <{ %"class.base::flat_map", i32, i32, i32, [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.0" }
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair" }
%"struct.std::__1::pair" = type { i8, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::pair"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*, %"class.std::__1::__compressed_pair.15" }
%"class.url_matcher::StringPattern" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.url_matcher::StringPattern"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"**, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.url_matcher::StringPattern"** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.27", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::queue" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"**, i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::__split_buffer.43" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }

$_ZNSt3__16vectorIN11url_matcher19SubstringSetMatcher15AhoCorasickNodeENS_9allocatorIS3_EEE7reserveEm = comdat any

$_ZN4base14circular_dequeIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEED2Ev = comdat any

$_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm = comdat any

$_ZNSt3__16__sortIRPFbPKN11url_matcher13StringPatternES4_EPS4_EEvT0_S9_T_ = comdat any

$_ZNSt3__17__sort4IRPFbPKN11url_matcher13StringPatternES4_EPS4_EEjT0_S9_S9_S9_T_ = comdat any

$_ZNSt3__17__sort5IRPFbPKN11url_matcher13StringPatternES4_EPS4_EEjT0_S9_S9_S9_S9_T_ = comdat any

$_ZNSt3__118__insertion_sort_3IRPFbPKN11url_matcher13StringPatternES4_EPS4_EEvT0_S9_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRPFbPKN11url_matcher13StringPatternES4_EPS4_EEbT0_S9_T_ = comdat any

$_ZNSt3__16vectorIN11url_matcher19SubstringSetMatcher15AhoCorasickNodeENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_ = comdat any

$_ZN4base14circular_dequeIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE25ExpandCapacityIfNecessaryEm = comdat any

$_ZN4base14circular_dequeIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_ = comdat any

$_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE9MoveRangeIS5_Li0EEEvPS5_S8_S8_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNK4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm = comdat any

$_ZN4base14circular_dequeIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE25ShrinkCapacityIfNecessaryEv = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorINS_4pairIcjEENS_9allocatorIS2_EEE7emplaceIJRKcjEEENS_11__wrap_iterIPS2_EENS9_IPKS2_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_4pairIcjEERNS_9allocatorIS2_EEE12emplace_backIJRKcjEEEvDpOT_ = comdat any

@_ZN11url_matcher19SubstringSetMatcher14kInvalidNodeIDE = hidden local_unnamed_addr constant i32 -1, align 4
@_ZN11url_matcher19SubstringSetMatcher7kRootIDE = hidden local_unnamed_addr constant i32 0, align 4
@.str.1 = private unnamed_addr constant [15 x i8] c"i <= capacity_\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"../../base/containers/vector_buffer.h\00", align 1
@.str.3 = private unnamed_addr constant [41 x i8] c"!RangesOverlap(from_begin, from_end, to)\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"from_begin: 0x\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c", from_end: 0x\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c", to: 0x\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN11url_matcher19SubstringSetMatcherC1ERKNSt3__16vectorINS_13StringPatternENS1_9allocatorIS3_EEEE = hidden unnamed_addr alias void (%"class.url_matcher::SubstringSetMatcher"*, %"class.std::__1::vector.8"*), void (%"class.url_matcher::SubstringSetMatcher"*, %"class.std::__1::vector.8"*)* @_ZN11url_matcher19SubstringSetMatcherC2ERKNSt3__16vectorINS_13StringPatternENS1_9allocatorIS3_EEEE
@_ZN11url_matcher19SubstringSetMatcherC1ENSt3__16vectorIPKNS_13StringPatternENS1_9allocatorIS5_EEEE = hidden unnamed_addr alias void (%"class.url_matcher::SubstringSetMatcher"*, %"class.std::__1::vector.20"*), void (%"class.url_matcher::SubstringSetMatcher"*, %"class.std::__1::vector.20"*)* @_ZN11url_matcher19SubstringSetMatcherC2ENSt3__16vectorIPKNS_13StringPatternENS1_9allocatorIS5_EEEE
@_ZN11url_matcher19SubstringSetMatcherD1Ev = hidden unnamed_addr alias void (%"class.url_matcher::SubstringSetMatcher"*), void (%"class.url_matcher::SubstringSetMatcher"*)* @_ZN11url_matcher19SubstringSetMatcherD2Ev
@_ZN11url_matcher19SubstringSetMatcher15AhoCorasickNodeC1Ev = hidden unnamed_addr alias void (%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*), void (%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*)* @_ZN11url_matcher19SubstringSetMatcher15AhoCorasickNodeC2Ev
@_ZN11url_matcher19SubstringSetMatcher15AhoCorasickNodeD1Ev = hidden unnamed_addr alias void (%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*), void (%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*)* @_ZN11url_matcher19SubstringSetMatcher15AhoCorasickNodeD2Ev
@_ZN11url_matcher19SubstringSetMatcher15AhoCorasickNodeC1EOS1_ = hidden unnamed_addr alias void (%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*), void (%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*)* @_ZN11url_matcher19SubstringSetMatcher15AhoCorasickNodeC2EOS1_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11url_matcher19SubstringSetMatcherC2ERKNSt3__16vectorINS_13StringPatternENS1_9allocatorIS3_EEEE(%"class.url_matcher::SubstringSetMatcher"*, %"class.std::__1::vector.8"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, align 8
  %4 = alloca %"class.std::__1::vector.20", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %4, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast %"class.std::__1::vector.20"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #16, !alias.scope !2
  %8 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %1, i64 0, i32 0, i32 1
  %9 = bitcast %"class.url_matcher::StringPattern"** %8 to i64*
  %10 = load i64, i64* %9, align 8, !noalias !2
  %11 = bitcast %"class.std::__1::vector.8"* %1 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !2
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 5
  %15 = bitcast %"class.url_matcher::StringPattern"*** %6 to i64*
  %16 = bitcast %"class.std::__1::vector.20"* %4 to i64*
  %17 = icmp eq i64 %13, 0
  %18 = inttoptr i64 %12 to %"class.url_matcher::StringPattern"*
  %19 = inttoptr i64 %10 to %"class.url_matcher::StringPattern"*
  br i1 %17, label %32, label %20

20:                                               ; preds = %2
  %21 = icmp ugt i64 %14, 2305843009213693951
  br i1 %21, label %22, label %23

22:                                               ; preds = %20
  tail call void @abort() #17
  unreachable

23:                                               ; preds = %20
  %24 = bitcast %"class.url_matcher::StringPattern"*** %5 to i64*
  %25 = ashr exact i64 %13, 2
  %26 = tail call i8* @_Znwm(i64 %25) #18
  %27 = bitcast i8* %26 to %"class.url_matcher::StringPattern"**
  %28 = ptrtoint i8* %26 to i64
  %29 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %27, i64 %14
  %30 = ptrtoint %"class.url_matcher::StringPattern"** %29 to i64
  store i64 %28, i64* %16, align 8, !alias.scope !2
  store i64 %28, i64* %24, align 8, !alias.scope !2
  store i64 %30, i64* %15, align 8, !alias.scope !2
  %31 = bitcast i8* %26 to %"class.url_matcher::StringPattern"**
  br label %32

32:                                               ; preds = %23, %2
  %33 = phi %"class.url_matcher::StringPattern"** [ null, %2 ], [ %31, %23 ]
  %34 = phi i64 [ 0, %2 ], [ %28, %23 ]
  %35 = phi %"class.url_matcher::StringPattern"** [ null, %2 ], [ %29, %23 ]
  %36 = phi %"class.url_matcher::StringPattern"** [ null, %2 ], [ %27, %23 ]
  %37 = icmp eq %"class.url_matcher::StringPattern"* %18, %19
  br i1 %37, label %109, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.url_matcher::StringPattern"*** %5 to i64*
  br label %40

40:                                               ; preds = %106, %38
  %41 = phi %"class.url_matcher::StringPattern"** [ %33, %38 ], [ %102, %106 ]
  %42 = phi i64 [ %34, %38 ], [ %108, %106 ]
  %43 = phi %"class.url_matcher::StringPattern"** [ %35, %38 ], [ %107, %106 ]
  %44 = phi %"class.url_matcher::StringPattern"** [ %36, %38 ], [ %103, %106 ]
  %45 = phi %"class.url_matcher::StringPattern"* [ %18, %38 ], [ %104, %106 ]
  %46 = ptrtoint %"class.url_matcher::StringPattern"* %45 to i64
  %47 = icmp ult %"class.url_matcher::StringPattern"** %44, %43
  %48 = ptrtoint %"class.url_matcher::StringPattern"** %43 to i64
  br i1 %47, label %49, label %53

49:                                               ; preds = %40
  %50 = bitcast %"class.url_matcher::StringPattern"** %44 to i64*
  store i64 %46, i64* %50, align 8
  %51 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %44, i64 1
  %52 = ptrtoint %"class.url_matcher::StringPattern"** %51 to i64
  store i64 %52, i64* %39, align 8, !alias.scope !2
  br label %101

53:                                               ; preds = %40
  %54 = ptrtoint %"class.url_matcher::StringPattern"** %44 to i64
  %55 = load i64, i64* %16, align 8, !alias.scope !2
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 3
  %58 = add nsw i64 %57, 1
  %59 = icmp ugt i64 %58, 2305843009213693951
  br i1 %59, label %60, label %62

60:                                               ; preds = %53
  %61 = bitcast %"class.std::__1::vector.20"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %61) #17
  unreachable

62:                                               ; preds = %53
  %63 = sub i64 %48, %55
  %64 = ashr exact i64 %63, 3
  %65 = icmp ult i64 %64, 1152921504606846975
  br i1 %65, label %66, label %74

66:                                               ; preds = %62
  %67 = ashr exact i64 %63, 2
  %68 = icmp ult i64 %67, %58
  %69 = select i1 %68, i64 %58, i64 %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %66
  %72 = icmp ugt i64 %69, 2305843009213693951
  br i1 %72, label %73, label %74

73:                                               ; preds = %71
  tail call void @abort() #17
  unreachable

74:                                               ; preds = %71, %62
  %75 = phi i64 [ %69, %71 ], [ 2305843009213693951, %62 ]
  %76 = shl i64 %75, 3
  %77 = tail call i8* @_Znwm(i64 %76) #18
  %78 = bitcast i8* %77 to %"class.url_matcher::StringPattern"**
  br label %79

79:                                               ; preds = %74, %66
  %80 = phi i64 [ %75, %74 ], [ 0, %66 ]
  %81 = phi %"class.url_matcher::StringPattern"** [ %78, %74 ], [ null, %66 ]
  %82 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %81, i64 %57
  %83 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %81, i64 %80
  %84 = ptrtoint %"class.url_matcher::StringPattern"** %83 to i64
  %85 = bitcast %"class.url_matcher::StringPattern"** %82 to i64*
  store i64 %46, i64* %85, align 8, !noalias !2
  %86 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %82, i64 1
  %87 = ptrtoint %"class.url_matcher::StringPattern"** %86 to i64
  %88 = sub i64 %42, %55
  %89 = ashr exact i64 %88, 3
  %90 = sub nsw i64 0, %89
  %91 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %82, i64 %90
  %92 = ptrtoint %"class.url_matcher::StringPattern"** %91 to i64
  %93 = icmp sgt i64 %88, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %79
  %95 = bitcast %"class.url_matcher::StringPattern"** %91 to i8*
  %96 = inttoptr i64 %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %95, i8* align 8 %96, i64 %88, i1 false) #16
  br label %97

97:                                               ; preds = %94, %79
  store i64 %92, i64* %16, align 8, !alias.scope !2
  store i64 %87, i64* %39, align 8, !alias.scope !2
  store i64 %84, i64* %15, align 8, !alias.scope !2
  %98 = icmp eq i64 %55, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = inttoptr i64 %55 to i8*
  tail call void @_ZdlPv(i8* %100) #18
  br label %101

101:                                              ; preds = %99, %97, %49
  %102 = phi %"class.url_matcher::StringPattern"** [ %91, %99 ], [ %91, %97 ], [ %41, %49 ]
  %103 = phi %"class.url_matcher::StringPattern"** [ %86, %99 ], [ %86, %97 ], [ %51, %49 ]
  %104 = getelementptr inbounds %"class.url_matcher::StringPattern", %"class.url_matcher::StringPattern"* %45, i64 1
  %105 = icmp eq %"class.url_matcher::StringPattern"* %104, %19
  br i1 %105, label %109, label %106

106:                                              ; preds = %101
  %107 = load %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"*** %6, align 8, !alias.scope !2
  %108 = ptrtoint %"class.url_matcher::StringPattern"** %103 to i64
  br label %40

109:                                              ; preds = %101, %32
  %110 = phi %"class.url_matcher::StringPattern"** [ %33, %32 ], [ %103, %101 ]
  %111 = phi %"class.url_matcher::StringPattern"** [ %33, %32 ], [ %102, %101 ]
  %112 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0
  %113 = bitcast %"class.url_matcher::SubstringSetMatcher"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 24, i1 false) #16
  %114 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 1
  store i8 1, i8* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %4, i64 0, i32 0, i32 0
  %116 = bitcast i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #16
  store i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)* @_ZN11url_matcher12_GLOBAL__N_115ComparePatternsEPKNS_13StringPatternES3_, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %3, align 8
  call void @_ZNSt3__16__sortIRPFbPKN11url_matcher13StringPatternES4_EPS4_EEvT0_S9_T_(%"class.url_matcher::StringPattern"** %111, %"class.url_matcher::StringPattern"** %110, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** nonnull dereferenceable(8) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #16
  %117 = call i32 @_ZNK11url_matcher19SubstringSetMatcher11GetTreeSizeERKNSt3__16vectorIPKNS_13StringPatternENS1_9allocatorIS5_EEEE(%"class.url_matcher::SubstringSetMatcher"* undef, %"class.std::__1::vector.20"* nonnull dereferenceable(24) %4) #16
  %118 = zext i32 %117 to i64
  call void @_ZNSt3__16vectorIN11url_matcher19SubstringSetMatcher15AhoCorasickNodeENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector"* %112, i64 %118) #16
  call void @_ZN11url_matcher19SubstringSetMatcher20BuildAhoCorasickTreeERKNSt3__16vectorIPKNS_13StringPatternENS1_9allocatorIS5_EEEE(%"class.url_matcher::SubstringSetMatcher"* %0, %"class.std::__1::vector.20"* nonnull dereferenceable(24) %4) #16
  %119 = load %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"*** %115, align 8
  %120 = load %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"*** %5, align 8
  %121 = icmp eq %"class.url_matcher::StringPattern"** %119, %120
  br i1 %121, label %122, label %131

122:                                              ; preds = %109
  %123 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0, i32 0, i32 1
  %124 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.url_matcher::SubstringSetMatcher"* %0 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = sub i64 %125, %127
  %129 = icmp eq i64 %128, 40
  %130 = zext i1 %129 to i8
  br label %131

131:                                              ; preds = %109, %122
  %132 = phi i8 [ 0, %109 ], [ %130, %122 ]
  store i8 %132, i8* %114, align 8
  %133 = icmp eq %"class.url_matcher::StringPattern"** %119, null
  br i1 %133, label %138, label %134

134:                                              ; preds = %131
  %135 = ptrtoint %"class.url_matcher::StringPattern"** %119 to i64
  %136 = bitcast %"class.url_matcher::StringPattern"*** %5 to i64*
  store i64 %135, i64* %136, align 8
  %137 = bitcast %"class.url_matcher::StringPattern"** %119 to i8*
  call void @_ZdlPv(i8* %137) #18
  br label %138

138:                                              ; preds = %131, %134
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11url_matcher19SubstringSetMatcherC2ENSt3__16vectorIPKNS_13StringPatternENS1_9allocatorIS5_EEEE(%"class.url_matcher::SubstringSetMatcher"*, %"class.std::__1::vector.20"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, align 8
  %4 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0
  %5 = bitcast %"class.url_matcher::SubstringSetMatcher"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #16
  %6 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 1
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 1
  %10 = load %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"*** %9, align 8
  %11 = bitcast i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  store i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)* @_ZN11url_matcher12_GLOBAL__N_115ComparePatternsEPKNS_13StringPatternES3_, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %3, align 8
  call void @_ZNSt3__16__sortIRPFbPKN11url_matcher13StringPatternES4_EPS4_EEvT0_S9_T_(%"class.url_matcher::StringPattern"** %8, %"class.url_matcher::StringPattern"** %10, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** nonnull dereferenceable(8) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  %12 = call i32 @_ZNK11url_matcher19SubstringSetMatcher11GetTreeSizeERKNSt3__16vectorIPKNS_13StringPatternENS1_9allocatorIS5_EEEE(%"class.url_matcher::SubstringSetMatcher"* undef, %"class.std::__1::vector.20"* dereferenceable(24) %1)
  %13 = zext i32 %12 to i64
  call void @_ZNSt3__16vectorIN11url_matcher19SubstringSetMatcher15AhoCorasickNodeENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector"* %4, i64 %13)
  call void @_ZN11url_matcher19SubstringSetMatcher20BuildAhoCorasickTreeERKNSt3__16vectorIPKNS_13StringPatternENS1_9allocatorIS5_EEEE(%"class.url_matcher::SubstringSetMatcher"* %0, %"class.std::__1::vector.20"* dereferenceable(24) %1)
  %14 = load %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"*** %7, align 8
  %15 = load %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"*** %9, align 8
  %16 = icmp eq %"class.url_matcher::StringPattern"** %14, %15
  br i1 %16, label %17, label %26

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0, i32 0, i32 1
  %19 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.url_matcher::SubstringSetMatcher"* %0 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = icmp eq i64 %23, 40
  %25 = zext i1 %24 to i8
  br label %26

26:                                               ; preds = %17, %2
  %27 = phi i8 [ 0, %2 ], [ %25, %17 ]
  store i8 %27, i8* %6, align 8
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN11url_matcher12_GLOBAL__N_115ComparePatternsEPKNS_13StringPatternES3_(%"class.url_matcher::StringPattern"* nocapture readonly, %"class.url_matcher::StringPattern"* nocapture readonly) #1 {
  %3 = bitcast %"class.url_matcher::StringPattern"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.url_matcher::StringPattern", %"class.url_matcher::StringPattern"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"class.url_matcher::StringPattern"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.url_matcher::StringPattern", %"class.url_matcher::StringPattern"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp ult i64 %10, %18
  %20 = select i1 %19, i64 %10, i64 %18
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.url_matcher::StringPattern", %"class.url_matcher::StringPattern"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = bitcast %"class.url_matcher::StringPattern"* %0 to i8*
  %26 = select i1 %14, i8* %24, i8* %25
  %27 = getelementptr inbounds %"class.url_matcher::StringPattern", %"class.url_matcher::StringPattern"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.url_matcher::StringPattern"* %1 to i8*
  %30 = select i1 %6, i8* %28, i8* %29
  %31 = tail call i32 @memcmp(i8* %26, i8* %30, i64 %20) #16
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %22, %2
  %34 = icmp ult i64 %18, %10
  %35 = zext i1 %19 to i32
  %36 = select i1 %34, i32 -1, i32 %35
  br label %37

37:                                               ; preds = %22, %33
  %38 = phi i32 [ %36, %33 ], [ %31, %22 ]
  %39 = icmp slt i32 %38, 0
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN11url_matcher19SubstringSetMatcher15AhoCorasickNodeENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 40
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*
  br i1 %10, label %12, label %83

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %13 to i64*
  %15 = icmp ugt i64 %1, 461168601842738790
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #17
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 40
  %21 = mul i64 %1, 40
  %22 = tail call i8* @_Znwm(i64 %21) #18
  %23 = bitcast i8* %22 to %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*
  %24 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %23, i64 %20
  %25 = ptrtoint %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %24 to i64
  %26 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %23, i64 %1
  %27 = ptrtoint %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*
  %29 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %28, %11
  br i1 %29, label %60, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %31, i64 -1
  %34 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %32, i64 -1
  %35 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #16
  %36 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %34 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %33 to i64*
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %32, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = bitcast %"struct.std::__1::pair"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %31, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = bitcast %"struct.std::__1::pair"** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %32, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"struct.std::__1::pair"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %31, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %48 = bitcast %"struct.std::__1::pair"** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #16
  %50 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %31, i64 -1, i32 1
  %51 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %32, i64 -1, i32 1
  %52 = bitcast i32* %50 to i8*
  %53 = bitcast i32* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 12, i1 false) #16
  %54 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %34, %11
  br i1 %54, label %55, label %30

55:                                               ; preds = %30
  %56 = ptrtoint %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %33 to i64
  %57 = load i64, i64* %6, align 8
  %58 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %13, align 8
  %59 = inttoptr i64 %57 to %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*
  br label %60

60:                                               ; preds = %17, %55
  %61 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %59, %55 ], [ %28, %17 ]
  %62 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %58, %55 ], [ %11, %17 ]
  %63 = phi i64 [ %56, %55 ], [ %25, %17 ]
  %64 = phi i64 [ %57, %55 ], [ %18, %17 ]
  store i64 %63, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %65 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %62, %61
  br i1 %65, label %79, label %66

66:                                               ; preds = %60, %77
  %67 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %68, %77 ], [ %62, %60 ]
  %68 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %67, i64 -1
  %69 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %69, align 8
  %71 = icmp eq %"struct.std::__1::pair"* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %66
  %73 = ptrtoint %"struct.std::__1::pair"* %70 to i64
  %74 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %67, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = bitcast %"struct.std::__1::pair"** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %70, i64 0, i32 0
  tail call void @_ZdlPv(i8* %76) #18
  br label %77

77:                                               ; preds = %72, %66
  %78 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %68, %61
  br i1 %78, label %79, label %66

79:                                               ; preds = %77, %60
  %80 = icmp eq i64 %64, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %79
  %82 = inttoptr i64 %64 to i8*
  tail call void @_ZdlPv(i8* %82) #18
  br label %83

83:                                               ; preds = %81, %79, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK11url_matcher19SubstringSetMatcher11GetTreeSizeERKNSt3__16vectorIPKNS_13StringPatternENS1_9allocatorIS5_EEEE(%"class.url_matcher::SubstringSetMatcher"* nocapture readnone, %"class.std::__1::vector.20"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"*** %5, align 8
  %7 = icmp eq %"class.url_matcher::StringPattern"** %4, %6
  br i1 %7, label %133, label %8

8:                                                ; preds = %2
  %9 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %4, align 8
  %10 = bitcast %"class.url_matcher::StringPattern"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.url_matcher::StringPattern", %"class.url_matcher::StringPattern"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  br label %19

17:                                               ; preds = %8
  %18 = zext i8 %12 to i64
  br label %19

19:                                               ; preds = %14, %17
  %20 = phi i64 [ %16, %14 ], [ %18, %17 ]
  %21 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %20, i64 1) #16
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = icmp ugt i64 %23, 4294967295
  %25 = or i1 %22, %24
  %26 = xor i1 %25, true
  %27 = zext i1 %26 to i8
  %28 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %4, i64 1
  %29 = icmp eq %"class.url_matcher::StringPattern"** %28, %6
  br i1 %29, label %127, label %30

30:                                               ; preds = %19, %122
  %31 = phi i8 [ %126, %122 ], [ %12, %19 ]
  %32 = phi %"class.url_matcher::StringPattern"* [ %123, %122 ], [ %9, %19 ]
  %33 = phi %"class.url_matcher::StringPattern"** [ %120, %122 ], [ %28, %19 ]
  %34 = phi i64 [ %117, %122 ], [ %23, %19 ]
  %35 = phi i8 [ %118, %122 ], [ %27, %19 ]
  %36 = phi %"class.url_matcher::StringPattern"** [ %119, %122 ], [ %4, %19 ]
  %37 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %33, align 8
  %38 = icmp slt i8 %31, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.url_matcher::StringPattern", %"class.url_matcher::StringPattern"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  br label %44

42:                                               ; preds = %30
  %43 = zext i8 %31 to i64
  br label %44

44:                                               ; preds = %39, %42
  %45 = phi i64 [ %41, %39 ], [ %43, %42 ]
  %46 = bitcast %"class.url_matcher::StringPattern"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.url_matcher::StringPattern", %"class.url_matcher::StringPattern"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  br label %55

53:                                               ; preds = %44
  %54 = zext i8 %48 to i64
  br label %55

55:                                               ; preds = %50, %53
  %56 = phi i64 [ %52, %50 ], [ %54, %53 ]
  %57 = icmp ult i64 %56, %45
  %58 = select i1 %57, i64 %56, i64 %45
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %83, label %60

60:                                               ; preds = %55
  %61 = bitcast %"class.url_matcher::StringPattern"* %32 to i8*
  %62 = getelementptr inbounds %"class.url_matcher::StringPattern", %"class.url_matcher::StringPattern"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.url_matcher::StringPattern"* %37 to i8*
  %64 = getelementptr inbounds %"class.url_matcher::StringPattern", %"class.url_matcher::StringPattern"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %65

65:                                               ; preds = %60, %80
  %66 = phi i64 [ 0, %60 ], [ %81, %80 ]
  br i1 %38, label %67, label %69

67:                                               ; preds = %65
  %68 = load i8*, i8** %62, align 8
  br label %69

69:                                               ; preds = %65, %67
  %70 = phi i8* [ %68, %67 ], [ %61, %65 ]
  %71 = getelementptr inbounds i8, i8* %70, i64 %66
  %72 = load i8, i8* %71, align 1
  br i1 %49, label %73, label %75

73:                                               ; preds = %69
  %74 = load i8*, i8** %64, align 8
  br label %75

75:                                               ; preds = %69, %73
  %76 = phi i8* [ %74, %73 ], [ %63, %69 ]
  %77 = getelementptr inbounds i8, i8* %76, i64 %66
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %72, %78
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = add nuw i64 %66, 1
  %82 = icmp ult i64 %81, %58
  br i1 %82, label %65, label %83

83:                                               ; preds = %75, %80, %55
  %84 = phi i64 [ 0, %55 ], [ %81, %80 ], [ %66, %75 ]
  %85 = icmp eq i8 %35, 0
  br i1 %85, label %96, label %86

86:                                               ; preds = %83
  %87 = and i64 %34, 4294967295
  %88 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %87, i64 %84) #16
  %89 = extractvalue { i64, i1 } %88, 1
  %90 = extractvalue { i64, i1 } %88, 0
  %91 = icmp ugt i64 %90, 4294967295
  %92 = or i1 %89, %91
  %93 = xor i1 %92, true
  %94 = and i64 %90, 4294967295
  %95 = zext i1 %93 to i64
  br label %96

96:                                               ; preds = %83, %86
  %97 = phi i64 [ %94, %86 ], [ 0, %83 ]
  %98 = phi i64 [ %95, %86 ], [ 0, %83 ]
  br i1 %49, label %99, label %102

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.url_matcher::StringPattern", %"class.url_matcher::StringPattern"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  br label %104

102:                                              ; preds = %96
  %103 = zext i8 %48 to i64
  br label %104

104:                                              ; preds = %99, %102
  %105 = phi i64 [ %101, %99 ], [ %103, %102 ]
  %106 = icmp eq i64 %98, 0
  br i1 %106, label %116, label %107

107:                                              ; preds = %104
  %108 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %97, i64 %105) #16
  %109 = extractvalue { i64, i1 } %108, 1
  %110 = extractvalue { i64, i1 } %108, 0
  %111 = icmp ugt i64 %110, 4294967295
  %112 = or i1 %109, %111
  %113 = xor i1 %112, true
  %114 = and i64 %110, 4294967295
  %115 = zext i1 %113 to i8
  br label %116

116:                                              ; preds = %104, %107
  %117 = phi i64 [ %114, %107 ], [ 0, %104 ]
  %118 = phi i8 [ %115, %107 ], [ 0, %104 ]
  %119 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %36, i64 1
  %120 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %33, i64 1
  %121 = icmp eq %"class.url_matcher::StringPattern"** %120, %6
  br i1 %121, label %127, label %122

122:                                              ; preds = %116
  %123 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %119, align 8
  %124 = bitcast %"class.url_matcher::StringPattern"* %123 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %125 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %124, i64 0, i32 1, i32 0
  %126 = load i8, i8* %125, align 1
  br label %30

127:                                              ; preds = %116, %19
  %128 = phi i8 [ %27, %19 ], [ %118, %116 ]
  %129 = phi i64 [ %23, %19 ], [ %117, %116 ]
  %130 = trunc i64 %129 to i32
  %131 = icmp eq i8 %128, 0
  br i1 %131, label %132, label %133, !prof !5

132:                                              ; preds = %127
  tail call void @llvm.trap() #16
  unreachable

133:                                              ; preds = %127, %2
  %134 = phi i32 [ 1, %2 ], [ %130, %127 ]
  ret i32 %134
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11url_matcher19SubstringSetMatcher20BuildAhoCorasickTreeERKNSt3__16vectorIPKNS_13StringPatternENS1_9allocatorIS5_EEEE(%"class.url_matcher::SubstringSetMatcher"*, %"class.std::__1::vector.20"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %3, align 8
  %5 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %5, align 8
  %7 = icmp ult %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %4, %6
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #16
  %10 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %4, i64 0, i32 1
  store i32 -1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %4, i64 0, i32 2
  store i32 -1, i32* %11, align 4
  %12 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %4, i64 0, i32 3
  store i32 -1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %4, i64 1
  %14 = ptrtoint %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %13 to i64
  %15 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %3 to i64*
  store i64 %14, i64* %15, align 8
  br label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0
  tail call void @_ZNSt3__16vectorIN11url_matcher19SubstringSetMatcher15AhoCorasickNodeENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector"* %17) #16
  br label %18

18:                                               ; preds = %8, %16
  %19 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 0
  %20 = load %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"*** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %1, i64 0, i32 0, i32 1
  %22 = load %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"*** %21, align 8
  %23 = icmp eq %"class.url_matcher::StringPattern"** %20, %22
  br i1 %23, label %24, label %29

24:                                               ; preds = %29, %18
  %25 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %25, align 8
  %27 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %3, align 8
  %28 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %26, %27
  br i1 %28, label %34, label %35

29:                                               ; preds = %18, %29
  %30 = phi %"class.url_matcher::StringPattern"** [ %32, %29 ], [ %20, %18 ]
  %31 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %30, align 8
  tail call void @_ZN11url_matcher19SubstringSetMatcher32InsertPatternIntoAhoCorasickTreeEPKNS_13StringPatternE(%"class.url_matcher::SubstringSetMatcher"* %0, %"class.url_matcher::StringPattern"* %31)
  %32 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %30, i64 1
  %33 = icmp eq %"class.url_matcher::StringPattern"** %32, %22
  br i1 %33, label %24, label %29

34:                                               ; preds = %74, %24
  tail call void @_ZN11url_matcher19SubstringSetMatcher27CreateFailureAndOutputEdgesEv(%"class.url_matcher::SubstringSetMatcher"* %0)
  ret void

35:                                               ; preds = %24, %74
  %36 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %75, %74 ], [ %26, %24 ]
  %37 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"struct.std::__1::pair"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %36 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = ashr exact i64 %42, 3
  %44 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = bitcast %"struct.std::__1::pair"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %46, %41
  %48 = ashr exact i64 %47, 3
  %49 = icmp ugt i64 %43, %48
  %50 = inttoptr i64 %41 to %"struct.std::__1::pair"*
  br i1 %49, label %51, label %74

51:                                               ; preds = %35
  %52 = icmp eq i64 %47, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* null, i64 %48
  %55 = ptrtoint %"struct.std::__1::pair"* %54 to i64
  br label %68

56:                                               ; preds = %51
  %57 = icmp ugt i64 %48, 2305843009213693951
  br i1 %57, label %58, label %59

58:                                               ; preds = %56
  tail call void @abort() #17
  unreachable

59:                                               ; preds = %56
  %60 = tail call i8* @_Znwm(i64 %47) #18
  %61 = bitcast i8* %60 to %"struct.std::__1::pair"*
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 %48
  %63 = ptrtoint %"struct.std::__1::pair"* %62 to i64
  %64 = ptrtoint i8* %60 to i64
  %65 = icmp sgt i64 %47, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %50, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %60, i8* align 4 %67, i64 %47, i1 false) #16
  br label %68

68:                                               ; preds = %66, %59, %53
  %69 = phi i64 [ %64, %59 ], [ %64, %66 ], [ 0, %53 ]
  %70 = phi i64 [ %63, %59 ], [ %63, %66 ], [ %55, %53 ]
  store i64 %69, i64* %40, align 8
  store i64 %70, i64* %45, align 8
  store i64 %70, i64* %38, align 8
  %71 = icmp eq i64 %41, 0
  br i1 %71, label %74, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %50, i64 0, i32 0
  tail call void @_ZdlPv(i8* %73) #18
  br label %74

74:                                               ; preds = %35, %68, %72
  %75 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %36, i64 1
  %76 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %75, %27
  br i1 %76, label %34, label %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11url_matcher19SubstringSetMatcherD2Ev(%"class.url_matcher::SubstringSetMatcher"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %2, align 8
  %4 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %3 to i8*
  %7 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %7, align 8
  %9 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %8, %3
  br i1 %9, label %26, label %10

10:                                               ; preds = %5, %21
  %11 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %12, %21 ], [ %8, %5 ]
  %12 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %11, i64 -1
  %13 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %13, align 8
  %15 = icmp eq %"struct.std::__1::pair"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %10
  %17 = ptrtoint %"struct.std::__1::pair"* %14 to i64
  %18 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %11, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %14, i64 0, i32 0
  tail call void @_ZdlPv(i8* %20) #18
  br label %21

21:                                               ; preds = %16, %10
  %22 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %12, %3
  br i1 %22, label %23, label %10

23:                                               ; preds = %21
  %24 = bitcast %"class.url_matcher::SubstringSetMatcher"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %5
  %27 = phi i8* [ %25, %23 ], [ %6, %5 ]
  store %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %3, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %7, align 8
  tail call void @_ZdlPv(i8* %27) #18
  br label %28

28:                                               ; preds = %1, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11url_matcher19SubstringSetMatcher5MatchERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_3setIiNS1_4lessIiEENS5_IiEEEE(%"class.url_matcher::SubstringSetMatcher"* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::set"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %6, align 8
  tail call void @_ZNK11url_matcher19SubstringSetMatcher24AccumulateMatchesForNodeEPKNS0_15AhoCorasickNodeEPNSt3__13setIiNS4_4lessIiEENS4_9allocatorIiEEEE(%"class.url_matcher::SubstringSetMatcher"* %0, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %7, %"class.std::__1::set"* %2)
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %17 = zext i8 %10 to i64
  %18 = select i1 %11, i8* %13, i8* %16
  %19 = select i1 %11, i64 %15, i64 %17
  %20 = getelementptr inbounds i8, i8* %18, i64 %19
  %21 = icmp eq i64 %19, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %149, %3
  %23 = load i64, i64* %4, align 8
  %24 = icmp ne i64 %5, %23
  ret i1 %24

25:                                               ; preds = %3, %149
  %26 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %150, %149 ], [ %7, %3 ]
  %27 = phi i8* [ %151, %149 ], [ %18, %3 ]
  %28 = load i8, i8* %27, align 1
  %29 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %29, align 8
  %31 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast %"struct.std::__1::pair"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = ptrtoint %"struct.std::__1::pair"* %30 to i64
  %35 = sub i64 %33, %34
  %36 = icmp eq i64 %35, 0
  %37 = inttoptr i64 %33 to %"struct.std::__1::pair"*
  br i1 %36, label %56, label %38

38:                                               ; preds = %25
  %39 = ashr exact i64 %35, 3
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi %"struct.std::__1::pair"* [ %30, %38 ], [ %52, %40 ]
  %42 = phi i64 [ %39, %38 ], [ %51, %40 ]
  %43 = lshr i64 %42, 1
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %41, i64 %43
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 0, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, %28
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %44, i64 1
  %49 = xor i64 %43, -1
  %50 = add i64 %42, %49
  %51 = select i1 %47, i64 %50, i64 %43
  %52 = select i1 %47, %"struct.std::__1::pair"* %48, %"struct.std::__1::pair"* %41
  %53 = icmp eq i64 %51, 0
  br i1 %53, label %54, label %40

54:                                               ; preds = %40
  %55 = ptrtoint %"struct.std::__1::pair"* %52 to i64
  br label %56

56:                                               ; preds = %54, %25
  %57 = phi i64 [ %55, %54 ], [ %34, %25 ]
  %58 = phi %"struct.std::__1::pair"* [ %52, %54 ], [ %30, %25 ]
  %59 = icmp eq %"struct.std::__1::pair"* %58, %37
  br i1 %59, label %67, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %58, i64 0, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp sgt i8 %62, %28
  br i1 %63, label %67, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %58, i64 1
  %66 = ptrtoint %"struct.std::__1::pair"* %65 to i64
  br label %67

67:                                               ; preds = %64, %60, %56
  %68 = phi i64 [ %66, %64 ], [ %57, %56 ], [ %57, %60 ]
  %69 = inttoptr i64 %68 to %"struct.std::__1::pair"*
  %70 = icmp eq %"struct.std::__1::pair"* %58, %69
  %71 = select i1 %70, %"struct.std::__1::pair"* %37, %"struct.std::__1::pair"* %58
  %72 = icmp eq %"struct.std::__1::pair"* %71, %37
  br i1 %72, label %76, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %71, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  br label %76

76:                                               ; preds = %67, %73
  %77 = phi i32 [ %75, %73 ], [ -1, %67 ]
  %78 = icmp ne i32 %77, -1
  %79 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %26, %7
  %80 = or i1 %79, %78
  br i1 %80, label %141, label %81

81:                                               ; preds = %76
  %82 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %6, align 8
  br label %83

83:                                               ; preds = %81, %136
  %84 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %26, %81 ], [ %88, %136 ]
  %85 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %84, i64 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %82, i64 %87
  %89 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %89, align 8
  %91 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %82, i64 %87, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = bitcast %"struct.std::__1::pair"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = ptrtoint %"struct.std::__1::pair"* %90 to i64
  %95 = sub i64 %93, %94
  %96 = icmp eq i64 %95, 0
  %97 = inttoptr i64 %93 to %"struct.std::__1::pair"*
  br i1 %96, label %116, label %98

98:                                               ; preds = %83
  %99 = ashr exact i64 %95, 3
  br label %100

100:                                              ; preds = %100, %98
  %101 = phi %"struct.std::__1::pair"* [ %90, %98 ], [ %112, %100 ]
  %102 = phi i64 [ %99, %98 ], [ %111, %100 ]
  %103 = lshr i64 %102, 1
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 %103
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 0, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, %28
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %104, i64 1
  %109 = xor i64 %103, -1
  %110 = add i64 %102, %109
  %111 = select i1 %107, i64 %110, i64 %103
  %112 = select i1 %107, %"struct.std::__1::pair"* %108, %"struct.std::__1::pair"* %101
  %113 = icmp eq i64 %111, 0
  br i1 %113, label %114, label %100

114:                                              ; preds = %100
  %115 = ptrtoint %"struct.std::__1::pair"* %112 to i64
  br label %116

116:                                              ; preds = %114, %83
  %117 = phi i64 [ %115, %114 ], [ %94, %83 ]
  %118 = phi %"struct.std::__1::pair"* [ %112, %114 ], [ %90, %83 ]
  %119 = icmp eq %"struct.std::__1::pair"* %118, %97
  br i1 %119, label %127, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 0, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp sgt i8 %122, %28
  br i1 %123, label %127, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %118, i64 1
  %126 = ptrtoint %"struct.std::__1::pair"* %125 to i64
  br label %127

127:                                              ; preds = %124, %120, %116
  %128 = phi i64 [ %126, %124 ], [ %117, %116 ], [ %117, %120 ]
  %129 = inttoptr i64 %128 to %"struct.std::__1::pair"*
  %130 = icmp eq %"struct.std::__1::pair"* %118, %129
  %131 = select i1 %130, %"struct.std::__1::pair"* %97, %"struct.std::__1::pair"* %118
  %132 = icmp eq %"struct.std::__1::pair"* %131, %97
  br i1 %132, label %136, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %131, i64 0, i32 1
  %135 = load i32, i32* %134, align 4
  br label %136

136:                                              ; preds = %127, %133
  %137 = phi i32 [ %135, %133 ], [ -1, %127 ]
  %138 = icmp ne i32 %137, -1
  %139 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %88, %7
  %140 = or i1 %139, %138
  br i1 %140, label %141, label %83

141:                                              ; preds = %136, %76
  %142 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %26, %76 ], [ %88, %136 ]
  %143 = phi i32 [ %77, %76 ], [ %137, %136 ]
  %144 = icmp eq i32 %143, -1
  br i1 %144, label %149, label %145

145:                                              ; preds = %141
  %146 = zext i32 %143 to i64
  %147 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %6, align 8
  %148 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %147, i64 %146
  tail call void @_ZNK11url_matcher19SubstringSetMatcher24AccumulateMatchesForNodeEPKNS0_15AhoCorasickNodeEPNSt3__13setIiNS4_4lessIiEENS4_9allocatorIiEEEE(%"class.url_matcher::SubstringSetMatcher"* %0, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %148, %"class.std::__1::set"* %2)
  br label %149

149:                                              ; preds = %141, %145
  %150 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %148, %145 ], [ %142, %141 ]
  %151 = getelementptr inbounds i8, i8* %27, i64 1
  %152 = icmp eq i8* %151, %20
  br i1 %152, label %22, label %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK11url_matcher19SubstringSetMatcher24AccumulateMatchesForNodeEPKNS0_15AhoCorasickNodeEPNSt3__13setIiNS4_4lessIiEENS4_9allocatorIiEEEE(%"class.url_matcher::SubstringSetMatcher"* nocapture readonly, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* nocapture readonly, %"class.std::__1::set"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %1, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %72, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %40, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %14

14:                                               ; preds = %36, %12
  %15 = phi %"class.std::__1::__tree_node"* [ %39, %36 ], [ %10, %12 ]
  %16 = phi %"class.std::__1::__tree_node_base"** [ %38, %36 ], [ %13, %12 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %5, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  %23 = icmp eq %"class.std::__1::__tree_node_base"* %22, null
  br i1 %23, label %24, label %36

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %42

26:                                               ; preds = %14
  %27 = icmp slt i32 %18, %5
  br i1 %27, label %28, label %34

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 1
  %30 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node_base"* %30, null
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %42

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 0, i32 0
  br label %42

36:                                               ; preds = %28, %20
  %37 = phi %"class.std::__1::__tree_node_base"* [ %22, %20 ], [ %30, %28 ]
  %38 = phi %"class.std::__1::__tree_node_base"** [ %21, %20 ], [ %29, %28 ]
  %39 = bitcast %"class.std::__1::__tree_node_base"* %37 to %"class.std::__1::__tree_node"*
  br label %14

40:                                               ; preds = %7
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 0, i32 0
  br label %42

42:                                               ; preds = %40, %34, %32, %24
  %43 = phi %"class.std::__1::__tree_end_node"* [ %8, %40 ], [ %25, %24 ], [ %33, %32 ], [ %35, %34 ]
  %44 = phi %"class.std::__1::__tree_node_base"** [ %41, %40 ], [ %21, %24 ], [ %29, %32 ], [ %16, %34 ]
  %45 = bitcast %"class.std::__1::__tree_node_base"** %44 to %"class.std::__1::__tree_node"**
  %46 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node"* %46, null
  br i1 %47, label %48, label %72

48:                                               ; preds = %42
  %49 = tail call i8* @_Znwm(i64 32) #18, !noalias !6
  %50 = getelementptr inbounds i8, i8* %49, i64 28
  %51 = bitcast i8* %50 to i32*
  store i32 %5, i32* %51, align 4, !noalias !6
  %52 = bitcast i8* %49 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds i8, i8* %49, i64 16
  %54 = bitcast i8* %53 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %54, align 8
  %55 = bitcast %"class.std::__1::__tree_node_base"** %44 to i8**
  store i8* %49, i8** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %48
  %62 = ptrtoint %"class.std::__1::__tree_node_base"* %59 to i64
  %63 = bitcast %"class.std::__1::set"* %2 to i64*
  store i64 %62, i64* %63, align 8
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  br label %65

65:                                               ; preds = %61, %48
  %66 = phi %"class.std::__1::__tree_node_base"* [ %52, %48 ], [ %64, %61 ]
  %67 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %68, %"class.std::__1::__tree_node_base"* %66) #16
  %69 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %69, align 8
  br label %72

72:                                               ; preds = %65, %42, %3
  %73 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %1, i64 0, i32 3
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, -1
  br i1 %75, label %149, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %79 = bitcast %"class.std::__1::__tree_end_node"* %78 to %"class.std::__1::__tree_node"**
  %80 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %78, i64 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::set"* %2 to i64*
  %84 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %85

85:                                               ; preds = %76, %145
  %86 = phi i32 [ %74, %76 ], [ %147, %145 ]
  %87 = zext i32 %86 to i64
  %88 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %77, align 8
  %89 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %88, i64 %87, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %79, align 8
  %92 = icmp eq %"class.std::__1::__tree_node"* %91, null
  br i1 %92, label %119, label %93

93:                                               ; preds = %85, %115
  %94 = phi %"class.std::__1::__tree_node"* [ %118, %115 ], [ %91, %85 ]
  %95 = phi %"class.std::__1::__tree_node_base"** [ %117, %115 ], [ %80, %85 ]
  %96 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %94, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %90, %97
  br i1 %98, label %99, label %105

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %94, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %100, align 8
  %102 = icmp eq %"class.std::__1::__tree_node_base"* %101, null
  br i1 %102, label %103, label %115

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %94, i64 0, i32 0, i32 0
  br label %119

105:                                              ; preds = %93
  %106 = icmp slt i32 %97, %90
  br i1 %106, label %107, label %113

107:                                              ; preds = %105
  %108 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %94, i64 0, i32 0, i32 1
  %109 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %108, align 8
  %110 = icmp eq %"class.std::__1::__tree_node_base"* %109, null
  br i1 %110, label %111, label %115

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %94, i64 0, i32 0, i32 0
  br label %119

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %94, i64 0, i32 0, i32 0
  br label %119

115:                                              ; preds = %107, %99
  %116 = phi %"class.std::__1::__tree_node_base"* [ %101, %99 ], [ %109, %107 ]
  %117 = phi %"class.std::__1::__tree_node_base"** [ %100, %99 ], [ %108, %107 ]
  %118 = bitcast %"class.std::__1::__tree_node_base"* %116 to %"class.std::__1::__tree_node"*
  br label %93

119:                                              ; preds = %85, %113, %111, %103
  %120 = phi %"class.std::__1::__tree_end_node"* [ %104, %103 ], [ %112, %111 ], [ %114, %113 ], [ %78, %85 ]
  %121 = phi %"class.std::__1::__tree_node_base"** [ %100, %103 ], [ %108, %111 ], [ %95, %113 ], [ %81, %85 ]
  %122 = bitcast %"class.std::__1::__tree_node_base"** %121 to %"class.std::__1::__tree_node"**
  %123 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node"* %123, null
  br i1 %124, label %125, label %145

125:                                              ; preds = %119
  %126 = tail call i8* @_Znwm(i64 32) #18, !noalias !9
  %127 = getelementptr inbounds i8, i8* %126, i64 28
  %128 = bitcast i8* %127 to i32*
  store i32 %90, i32* %128, align 4, !noalias !9
  %129 = bitcast i8* %126 to %"class.std::__1::__tree_node_base"*
  %130 = getelementptr inbounds i8, i8* %126, i64 16
  %131 = bitcast i8* %130 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %131, align 8
  %132 = bitcast %"class.std::__1::__tree_node_base"** %121 to i8**
  store i8* %126, i8** %132, align 8
  %133 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %82, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, null
  br i1 %136, label %140, label %137

137:                                              ; preds = %125
  %138 = ptrtoint %"class.std::__1::__tree_node_base"* %135 to i64
  store i64 %138, i64* %83, align 8
  %139 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %140

140:                                              ; preds = %137, %125
  %141 = phi %"class.std::__1::__tree_node_base"* [ %129, %125 ], [ %139, %137 ]
  %142 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %80, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %142, %"class.std::__1::__tree_node_base"* %141) #16
  %143 = load i64, i64* %84, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %84, align 8
  br label %145

145:                                              ; preds = %119, %140
  %146 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %88, i64 %87, i32 3
  %147 = load i32, i32* %146, align 8
  %148 = icmp eq i32 %147, -1
  br i1 %148, label %149, label %85

149:                                              ; preds = %145, %72
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK11url_matcher19SubstringSetMatcher15AhoCorasickNode7GetEdgeEc(%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* nocapture readonly, i8 signext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.std::__1::pair"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"struct.std::__1::pair"*
  br i1 %10, label %30, label %12

12:                                               ; preds = %2
  %13 = ashr exact i64 %9, 3
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi %"struct.std::__1::pair"* [ %4, %12 ], [ %26, %14 ]
  %16 = phi i64 [ %13, %12 ], [ %25, %14 ]
  %17 = lshr i64 %16, 1
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 %17
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 0, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, %1
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 1
  %23 = xor i64 %17, -1
  %24 = add i64 %16, %23
  %25 = select i1 %21, i64 %24, i64 %17
  %26 = select i1 %21, %"struct.std::__1::pair"* %22, %"struct.std::__1::pair"* %15
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %28, label %14

28:                                               ; preds = %14
  %29 = ptrtoint %"struct.std::__1::pair"* %26 to i64
  br label %30

30:                                               ; preds = %28, %2
  %31 = phi i64 [ %29, %28 ], [ %8, %2 ]
  %32 = phi %"struct.std::__1::pair"* [ %26, %28 ], [ %4, %2 ]
  %33 = icmp eq %"struct.std::__1::pair"* %32, %11
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 0, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp sgt i8 %36, %1
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 1
  %40 = ptrtoint %"struct.std::__1::pair"* %39 to i64
  br label %41

41:                                               ; preds = %30, %34, %38
  %42 = phi i64 [ %40, %38 ], [ %31, %30 ], [ %31, %34 ]
  %43 = inttoptr i64 %42 to %"struct.std::__1::pair"*
  %44 = icmp eq %"struct.std::__1::pair"* %32, %43
  %45 = select i1 %44, %"struct.std::__1::pair"* %11, %"struct.std::__1::pair"* %32
  %46 = icmp eq %"struct.std::__1::pair"* %45, %11
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  br label %50

50:                                               ; preds = %41, %47
  %51 = phi i32 [ %49, %47 ], [ -1, %41 ]
  ret i32 %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK11url_matcher19SubstringSetMatcher19EstimateMemoryUsageEv(%"class.url_matcher::SubstringSetMatcher"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.url_matcher::SubstringSetMatcher"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = inttoptr i64 %6 to %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*
  %9 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %9, align 8
  %11 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %10, %8
  br i1 %11, label %24, label %12

12:                                               ; preds = %1, %12
  %13 = phi i64 [ %21, %12 ], [ 0, %1 ]
  %14 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %22, %12 ], [ %8, %1 ]
  %15 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.std::__1::pair"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %17, %13
  %21 = sub i64 %20, %19
  %22 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %14, i64 1
  %23 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %22, %10
  br i1 %23, label %24, label %12

24:                                               ; preds = %12, %1
  %25 = phi i64 [ 0, %1 ], [ %21, %12 ]
  %26 = add i64 %7, %25
  ret i64 %26
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11url_matcher19SubstringSetMatcher32InsertPatternIntoAhoCorasickTreeEPKNS_13StringPatternE(%"class.url_matcher::SubstringSetMatcher"*, %"class.url_matcher::StringPattern"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = bitcast %"class.url_matcher::StringPattern"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.url_matcher::StringPattern", %"class.url_matcher::StringPattern"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.url_matcher::StringPattern", %"class.url_matcher::StringPattern"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 %13
  br label %19

15:                                               ; preds = %2
  %16 = bitcast %"class.url_matcher::StringPattern"* %1 to i8*
  %17 = zext i8 %7 to i64
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  br label %19

19:                                               ; preds = %9, %15
  %20 = phi i8* [ %14, %9 ], [ %18, %15 ]
  %21 = phi i8* [ %11, %9 ], [ %16, %15 ]
  %22 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0
  %23 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %23, align 8
  %25 = icmp eq i8* %21, %20
  br i1 %25, label %157, label %26

26:                                               ; preds = %19, %78
  %27 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %80, %78 ], [ %24, %19 ]
  %28 = phi i8* [ %81, %78 ], [ %21, %19 ]
  %29 = load i8, i8* %28, align 1
  %30 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %30, align 8
  %32 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast %"struct.std::__1::pair"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = ptrtoint %"struct.std::__1::pair"* %31 to i64
  %36 = sub i64 %34, %35
  %37 = icmp eq i64 %36, 0
  %38 = inttoptr i64 %34 to %"struct.std::__1::pair"*
  br i1 %37, label %57, label %39

39:                                               ; preds = %26
  %40 = ashr exact i64 %36, 3
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %"struct.std::__1::pair"* [ %31, %39 ], [ %53, %41 ]
  %43 = phi i64 [ %40, %39 ], [ %52, %41 ]
  %44 = lshr i64 %43, 1
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %42, i64 %44
  %46 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 0, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = icmp slt i8 %47, %29
  %49 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %45, i64 1
  %50 = xor i64 %44, -1
  %51 = add i64 %43, %50
  %52 = select i1 %48, i64 %51, i64 %44
  %53 = select i1 %48, %"struct.std::__1::pair"* %49, %"struct.std::__1::pair"* %42
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %55, label %41

55:                                               ; preds = %41
  %56 = ptrtoint %"struct.std::__1::pair"* %53 to i64
  br label %57

57:                                               ; preds = %55, %26
  %58 = phi i64 [ %56, %55 ], [ %35, %26 ]
  %59 = phi %"struct.std::__1::pair"* [ %53, %55 ], [ %31, %26 ]
  %60 = icmp eq %"struct.std::__1::pair"* %59, %38
  br i1 %60, label %68, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %59, i64 0, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp sgt i8 %63, %29
  br i1 %64, label %68, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %59, i64 1
  %67 = ptrtoint %"struct.std::__1::pair"* %66 to i64
  br label %68

68:                                               ; preds = %65, %61, %57
  %69 = phi i64 [ %67, %65 ], [ %58, %57 ], [ %58, %61 ]
  %70 = inttoptr i64 %69 to %"struct.std::__1::pair"*
  %71 = icmp eq %"struct.std::__1::pair"* %59, %70
  %72 = select i1 %71, %"struct.std::__1::pair"* %38, %"struct.std::__1::pair"* %59
  %73 = icmp eq %"struct.std::__1::pair"* %72, %38
  br i1 %73, label %83, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %72, i64 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, -1
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = zext i32 %76 to i64
  %80 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %24, i64 %79
  %81 = getelementptr inbounds i8, i8* %28, i64 1
  %82 = icmp eq i8* %81, %20
  br i1 %82, label %157, label %26

83:                                               ; preds = %74, %68
  %84 = icmp eq i8* %28, %20
  br i1 %84, label %157, label %85

85:                                               ; preds = %83
  %86 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0, i32 0, i32 1
  %87 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %88 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %86 to i64*
  %89 = bitcast %"class.url_matcher::SubstringSetMatcher"* %0 to i64*
  %90 = bitcast i32* %3 to i8*
  %91 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %86, align 8
  br label %92

92:                                               ; preds = %85, %150
  %93 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %91, %85 ], [ %153, %150 ]
  %94 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %27, %85 ], [ %154, %150 ]
  %95 = phi i8* [ %28, %85 ], [ %155, %150 ]
  %96 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %87, align 8
  %97 = icmp ult %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %93, %96
  br i1 %97, label %98, label %105

98:                                               ; preds = %92
  %99 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %93 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #16
  %100 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %93, i64 0, i32 1
  store i32 -1, i32* %100, align 8
  %101 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %93, i64 0, i32 2
  store i32 -1, i32* %101, align 4
  %102 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %93, i64 0, i32 3
  store i32 -1, i32* %102, align 8
  %103 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %93, i64 1
  %104 = ptrtoint %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %103 to i64
  store i64 %104, i64* %88, align 8
  br label %107

105:                                              ; preds = %92
  call void @_ZNSt3__16vectorIN11url_matcher19SubstringSetMatcher15AhoCorasickNodeENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector"* %22) #16
  %106 = load i64, i64* %88, align 8
  br label %107

107:                                              ; preds = %98, %105
  %108 = phi i64 [ %104, %98 ], [ %106, %105 ]
  %109 = load i8, i8* %95, align 1
  %110 = load i64, i64* %89, align 8
  %111 = sub i64 %108, %110
  %112 = sdiv exact i64 %111, 40
  %113 = trunc i64 %112 to i32
  %114 = add i32 %113, -1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4)
  store i8 %109, i8* %4, align 1
  %115 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %115, align 8
  %117 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = bitcast %"struct.std::__1::pair"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = ptrtoint %"struct.std::__1::pair"* %116 to i64
  %121 = sub i64 %119, %120
  %122 = icmp eq i64 %121, 0
  %123 = inttoptr i64 %119 to %"struct.std::__1::pair"*
  br i1 %122, label %140, label %124

124:                                              ; preds = %107
  %125 = ashr exact i64 %121, 3
  br label %126

126:                                              ; preds = %126, %124
  %127 = phi %"struct.std::__1::pair"* [ %116, %124 ], [ %138, %126 ]
  %128 = phi i64 [ %125, %124 ], [ %137, %126 ]
  %129 = lshr i64 %128, 1
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %127, i64 %129
  %131 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %130, i64 0, i32 0
  %132 = load i8, i8* %131, align 1
  %133 = icmp slt i8 %132, %109
  %134 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %130, i64 1
  %135 = xor i64 %129, -1
  %136 = add i64 %128, %135
  %137 = select i1 %133, i64 %136, i64 %129
  %138 = select i1 %133, %"struct.std::__1::pair"* %134, %"struct.std::__1::pair"* %127
  %139 = icmp eq i64 %137, 0
  br i1 %139, label %140, label %126

140:                                              ; preds = %126, %107
  %141 = phi %"struct.std::__1::pair"* [ %116, %107 ], [ %138, %126 ]
  %142 = icmp eq %"struct.std::__1::pair"* %141, %123
  br i1 %142, label %147, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 0, i32 0
  %145 = load i8, i8* %144, align 1
  %146 = icmp sgt i8 %145, %109
  br i1 %146, label %147, label %150

147:                                              ; preds = %143, %140
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90) #16
  store i32 0, i32* %3, align 4
  %148 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %94, i64 0, i32 0, i32 0, i32 0
  %149 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIcjEENS_9allocatorIS2_EEE7emplaceIJRKcjEEENS_11__wrap_iterIPS2_EENS9_IPKS2_EEDpOT_(%"class.std::__1::vector.0"* %148, %"struct.std::__1::pair"* %141, i8* nonnull dereferenceable(1) %4, i32* nonnull dereferenceable(4) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90) #16
  br label %150

150:                                              ; preds = %143, %147
  %151 = phi %"struct.std::__1::pair"* [ %149, %147 ], [ %141, %143 ]
  %152 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %151, i64 0, i32 1
  store i32 %114, i32* %152, align 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4)
  %153 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %86, align 8
  %154 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %153, i64 -1
  %155 = getelementptr inbounds i8, i8* %95, i64 1
  %156 = icmp eq i8* %155, %20
  br i1 %156, label %157, label %92

157:                                              ; preds = %78, %150, %19, %83
  %158 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %27, %83 ], [ %24, %19 ], [ %154, %150 ], [ %80, %78 ]
  %159 = getelementptr inbounds %"class.url_matcher::StringPattern", %"class.url_matcher::StringPattern"* %1, i64 0, i32 1
  %160 = load i32, i32* %159, align 8
  %161 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %158, i64 0, i32 2
  store i32 %160, i32* %161, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11url_matcher19SubstringSetMatcher27CreateFailureAndOutputEdgesEv(%"class.url_matcher::SubstringSetMatcher"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::queue", align 8
  %3 = bitcast %"class.std::__1::queue"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #16
  %4 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %2, i64 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %2, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %2, i64 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 32, i1 false) #16
  %7 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher", %"class.url_matcher::SubstringSetMatcher"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %7, align 8
  %9 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %8, i64 0, i32 1
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %8, i64 0, i32 3
  store i32 -1, i32* %10, align 8
  %11 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %8, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, -1
  %14 = sext i1 %13 to i32
  %15 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %15, align 8
  %17 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair"* %16, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %1
  %21 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %2, i64 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %2, i64 0, i32 0, i32 0
  br label %32

23:                                               ; preds = %54
  %24 = load i64, i64* %5, align 8
  br label %25

25:                                               ; preds = %23, %1
  %26 = phi i64 [ %24, %23 ], [ 0, %1 ]
  %27 = load i64, i64* %6, align 8
  %28 = icmp eq i64 %26, %27
  br i1 %28, label %242, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %2, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %2, i64 0, i32 0
  br label %63

32:                                               ; preds = %20, %54
  %33 = phi %"struct.std::__1::pair"* [ %16, %20 ], [ %57, %54 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i64
  %37 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %7, align 8
  %38 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %37, i64 %36
  %39 = ptrtoint %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %38 to i64
  %40 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %37, i64 %36, i32 1
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %37, i64 %36, i32 3
  store i32 %14, i32* %41, align 8
  call void @_ZN4base14circular_dequeIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* nonnull %21, i64 1) #16
  %42 = load i64, i64* %6, align 8
  %43 = call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* nonnull %22, i64 %42) #16
  %44 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %43 to i64*
  store i64 %39, i64* %44, align 8
  %45 = load i64, i64* %6, align 8
  %46 = load i64, i64* %4, align 8
  %47 = add i64 %46, -1
  %48 = icmp eq i64 %45, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %32
  store i64 0, i64* %6, align 8
  br label %53

50:                                               ; preds = %32
  %51 = add i64 %45, 1
  store i64 %51, i64* %6, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50, %49
  br label %54

54:                                               ; preds = %50, %53
  %55 = phi i64 [ %47, %53 ], [ %45, %50 ]
  %56 = call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZNK4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* nonnull %22, i64 %55) #16
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 1
  %58 = icmp eq %"struct.std::__1::pair"* %57, %18
  br i1 %58, label %23, label %32

59:                                               ; preds = %237, %63
  %60 = load i64, i64* %5, align 8
  %61 = load i64, i64* %6, align 8
  %62 = icmp eq i64 %60, %61
  br i1 %62, label %242, label %63

63:                                               ; preds = %29, %59
  %64 = phi i64 [ %26, %29 ], [ %60, %59 ]
  %65 = call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* nonnull %30, i64 %64) #16
  %66 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %65, align 8
  %67 = load i64, i64* %5, align 8
  %68 = call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* nonnull %30, i64 %67) #16
  %69 = load i64, i64* %5, align 8
  %70 = add i64 %69, 1
  %71 = call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* nonnull %30, i64 %70) #16
  %72 = load i64, i64* %5, align 8
  %73 = add i64 %72, 1
  %74 = load i64, i64* %4, align 8
  %75 = icmp eq i64 %73, %74
  %76 = select i1 %75, i64 0, i64 %73
  store i64 %76, i64* %5, align 8
  call void @_ZN4base14circular_dequeIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"* nonnull %31) #16
  %77 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %77, align 8
  %79 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %79, align 8
  %81 = icmp eq %"struct.std::__1::pair"* %78, %80
  br i1 %81, label %59, label %82

82:                                               ; preds = %63
  %83 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %66, i64 0, i32 1
  br label %84

84:                                               ; preds = %82, %237
  %85 = phi %"struct.std::__1::pair"* [ %78, %82 ], [ %240, %237 ]
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 0, i32 0
  %87 = load i8, i8* %86, align 4
  %88 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  %91 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %7, align 8
  %92 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %91, i64 %90
  %93 = ptrtoint %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %92 to i64
  %94 = load i32, i32* %83, align 8
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %91, i64 %95
  %97 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %97, align 8
  %99 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %91, i64 %95, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = bitcast %"struct.std::__1::pair"** %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = ptrtoint %"struct.std::__1::pair"* %98 to i64
  %103 = sub i64 %101, %102
  %104 = icmp eq i64 %103, 0
  %105 = inttoptr i64 %101 to %"struct.std::__1::pair"*
  br i1 %104, label %124, label %106

106:                                              ; preds = %84
  %107 = ashr exact i64 %103, 3
  br label %108

108:                                              ; preds = %108, %106
  %109 = phi %"struct.std::__1::pair"* [ %98, %106 ], [ %120, %108 ]
  %110 = phi i64 [ %107, %106 ], [ %119, %108 ]
  %111 = lshr i64 %110, 1
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %109, i64 %111
  %113 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %112, i64 0, i32 0
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, %87
  %116 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %112, i64 1
  %117 = xor i64 %111, -1
  %118 = add i64 %110, %117
  %119 = select i1 %115, i64 %118, i64 %111
  %120 = select i1 %115, %"struct.std::__1::pair"* %116, %"struct.std::__1::pair"* %109
  %121 = icmp eq i64 %119, 0
  br i1 %121, label %122, label %108

122:                                              ; preds = %108
  %123 = ptrtoint %"struct.std::__1::pair"* %120 to i64
  br label %124

124:                                              ; preds = %122, %84
  %125 = phi i64 [ %123, %122 ], [ %102, %84 ]
  %126 = phi %"struct.std::__1::pair"* [ %120, %122 ], [ %98, %84 ]
  %127 = icmp eq %"struct.std::__1::pair"* %126, %105
  br i1 %127, label %135, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 0, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp sgt i8 %130, %87
  br i1 %131, label %135, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %126, i64 1
  %134 = ptrtoint %"struct.std::__1::pair"* %133 to i64
  br label %135

135:                                              ; preds = %132, %128, %124
  %136 = phi i64 [ %134, %132 ], [ %125, %124 ], [ %125, %128 ]
  %137 = inttoptr i64 %136 to %"struct.std::__1::pair"*
  %138 = icmp eq %"struct.std::__1::pair"* %126, %137
  %139 = select i1 %138, %"struct.std::__1::pair"* %105, %"struct.std::__1::pair"* %126
  %140 = icmp eq %"struct.std::__1::pair"* %139, %105
  br i1 %140, label %144, label %141

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %139, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  br label %144

144:                                              ; preds = %135, %141
  %145 = phi i32 [ %143, %141 ], [ -1, %135 ]
  %146 = icmp eq i32 %145, -1
  %147 = xor i1 %146, true
  %148 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %96, %8
  %149 = or i1 %148, %147
  br i1 %149, label %209, label %150

150:                                              ; preds = %144, %203
  %151 = phi i64 [ %154, %203 ], [ %95, %144 ]
  %152 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %91, i64 %151, i32 1
  %153 = load i32, i32* %152, align 8
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %91, i64 %154
  %156 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %155, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %156, align 8
  %158 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %91, i64 %154, i32 0, i32 0, i32 0, i32 0, i32 1
  %159 = bitcast %"struct.std::__1::pair"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = ptrtoint %"struct.std::__1::pair"* %157 to i64
  %162 = sub i64 %160, %161
  %163 = icmp eq i64 %162, 0
  %164 = inttoptr i64 %160 to %"struct.std::__1::pair"*
  br i1 %163, label %183, label %165

165:                                              ; preds = %150
  %166 = ashr exact i64 %162, 3
  br label %167

167:                                              ; preds = %167, %165
  %168 = phi %"struct.std::__1::pair"* [ %157, %165 ], [ %179, %167 ]
  %169 = phi i64 [ %166, %165 ], [ %178, %167 ]
  %170 = lshr i64 %169, 1
  %171 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %168, i64 %170
  %172 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %171, i64 0, i32 0
  %173 = load i8, i8* %172, align 1
  %174 = icmp slt i8 %173, %87
  %175 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %171, i64 1
  %176 = xor i64 %170, -1
  %177 = add i64 %169, %176
  %178 = select i1 %174, i64 %177, i64 %170
  %179 = select i1 %174, %"struct.std::__1::pair"* %175, %"struct.std::__1::pair"* %168
  %180 = icmp eq i64 %178, 0
  br i1 %180, label %181, label %167

181:                                              ; preds = %167
  %182 = ptrtoint %"struct.std::__1::pair"* %179 to i64
  br label %183

183:                                              ; preds = %181, %150
  %184 = phi i64 [ %182, %181 ], [ %161, %150 ]
  %185 = phi %"struct.std::__1::pair"* [ %179, %181 ], [ %157, %150 ]
  %186 = icmp eq %"struct.std::__1::pair"* %185, %164
  br i1 %186, label %194, label %187

187:                                              ; preds = %183
  %188 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %185, i64 0, i32 0
  %189 = load i8, i8* %188, align 1
  %190 = icmp sgt i8 %189, %87
  br i1 %190, label %194, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %185, i64 1
  %193 = ptrtoint %"struct.std::__1::pair"* %192 to i64
  br label %194

194:                                              ; preds = %191, %187, %183
  %195 = phi i64 [ %193, %191 ], [ %184, %183 ], [ %184, %187 ]
  %196 = inttoptr i64 %195 to %"struct.std::__1::pair"*
  %197 = icmp eq %"struct.std::__1::pair"* %185, %196
  %198 = select i1 %197, %"struct.std::__1::pair"* %164, %"struct.std::__1::pair"* %185
  %199 = icmp eq %"struct.std::__1::pair"* %198, %164
  br i1 %199, label %203, label %200

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %198, i64 0, i32 1
  %202 = load i32, i32* %201, align 4
  br label %203

203:                                              ; preds = %194, %200
  %204 = phi i32 [ %202, %200 ], [ -1, %194 ]
  %205 = icmp eq i32 %204, -1
  %206 = xor i1 %205, true
  %207 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %155, %8
  %208 = or i1 %207, %206
  br i1 %208, label %209, label %150

209:                                              ; preds = %203, %144
  %210 = phi i32 [ %145, %144 ], [ %204, %203 ]
  %211 = phi i1 [ %146, %144 ], [ %205, %203 ]
  %212 = select i1 %211, i32 0, i32 %210
  %213 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %91, i64 %90, i32 1
  store i32 %212, i32* %213, align 8
  %214 = zext i32 %212 to i64
  %215 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %7, align 8
  %216 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %215, i64 %214, i32 2
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %217, -1
  br i1 %218, label %219, label %222

219:                                              ; preds = %209
  %220 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %215, i64 %214, i32 3
  %221 = load i32, i32* %220, align 8
  br label %222

222:                                              ; preds = %209, %219
  %223 = phi i32 [ %221, %219 ], [ %212, %209 ]
  %224 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %91, i64 %90, i32 3
  store i32 %223, i32* %224, align 8
  call void @_ZN4base14circular_dequeIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"* nonnull %31, i64 1) #16
  %225 = load i64, i64* %6, align 8
  %226 = call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* nonnull %30, i64 %225) #16
  %227 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %226 to i64*
  store i64 %93, i64* %227, align 8
  %228 = load i64, i64* %6, align 8
  %229 = load i64, i64* %4, align 8
  %230 = add i64 %229, -1
  %231 = icmp eq i64 %228, %230
  br i1 %231, label %232, label %233

232:                                              ; preds = %222
  store i64 0, i64* %6, align 8
  br label %236

233:                                              ; preds = %222
  %234 = add i64 %228, 1
  store i64 %234, i64* %6, align 8
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %237

236:                                              ; preds = %233, %232
  br label %237

237:                                              ; preds = %233, %236
  %238 = phi i64 [ %230, %236 ], [ %228, %233 ]
  %239 = call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZNK4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* nonnull %30, i64 %238) #16
  %240 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %85, i64 1
  %241 = icmp eq %"struct.std::__1::pair"* %240, %80
  br i1 %241, label %59, label %84

242:                                              ; preds = %59, %25
  %243 = getelementptr inbounds %"class.std::__1::queue", %"class.std::__1::queue"* %2, i64 0, i32 0
  call void @_ZN4base14circular_dequeIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEED2Ev(%"class.base::circular_deque"* nonnull %243) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11url_matcher19SubstringSetMatcher15AhoCorasickNode7SetEdgeEcj(%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, i8 signext, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store i8 %1, i8* %5, align 1
  %6 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  %12 = sub i64 %10, %11
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %10 to %"struct.std::__1::pair"*
  br i1 %13, label %31, label %15

15:                                               ; preds = %3
  %16 = ashr exact i64 %12, 3
  br label %17

17:                                               ; preds = %17, %15
  %18 = phi %"struct.std::__1::pair"* [ %7, %15 ], [ %29, %17 ]
  %19 = phi i64 [ %16, %15 ], [ %28, %17 ]
  %20 = lshr i64 %19, 1
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 %20
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 0, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, %1
  %25 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %21, i64 1
  %26 = xor i64 %20, -1
  %27 = add i64 %19, %26
  %28 = select i1 %24, i64 %27, i64 %20
  %29 = select i1 %24, %"struct.std::__1::pair"* %25, %"struct.std::__1::pair"* %18
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %31, label %17

31:                                               ; preds = %17, %3
  %32 = phi %"struct.std::__1::pair"* [ %7, %3 ], [ %29, %17 ]
  %33 = icmp eq %"struct.std::__1::pair"* %32, %14
  br i1 %33, label %38, label %34

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 0, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp sgt i8 %36, %1
  br i1 %37, label %38, label %42

38:                                               ; preds = %34, %31
  %39 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #16
  store i32 0, i32* %4, align 4
  %40 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = call %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIcjEENS_9allocatorIS2_EEE7emplaceIJRKcjEEENS_11__wrap_iterIPS2_EENS9_IPKS2_EEDpOT_(%"class.std::__1::vector.0"* %40, %"struct.std::__1::pair"* %32, i8* nonnull dereferenceable(1) %5, i32* nonnull dereferenceable(4) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #16
  br label %42

42:                                               ; preds = %34, %38
  %43 = phi %"struct.std::__1::pair"* [ %41, %38 ], [ %32, %34 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %43, i64 0, i32 1
  store i32 %2, i32* %44, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11url_matcher19SubstringSetMatcher15AhoCorasickNode10SetFailureEj(%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 1
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11url_matcher19SubstringSetMatcher15AhoCorasickNodeC2Ev(%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #16
  %3 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 1
  store i32 -1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 2
  store i32 -1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 3
  store i32 -1, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11url_matcher19SubstringSetMatcher15AhoCorasickNodeD2Ev(%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %2, align 8
  %4 = icmp eq %"struct.std::__1::pair"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.std::__1::pair"* %3 to i64
  %7 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %3, i64 0, i32 0
  tail call void @_ZdlPv(i8* %9) #18
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11url_matcher19SubstringSetMatcher15AhoCorasickNodeC2EOS1_(%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* nocapture, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* nocapture dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #16
  %4 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.std::__1::pair"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::pair"** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"struct.std::__1::pair"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.std::__1::pair"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #16
  %18 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %1, i64 0, i32 1
  %20 = bitcast i32* %18 to i8*
  %21 = bitcast i32* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 12, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* @_ZN11url_matcher19SubstringSetMatcher15AhoCorasickNodeaSEOS1_(%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* returned, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* nocapture dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = ptrtoint %"struct.std::__1::pair"* %4 to i64
  %8 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  tail call void @_ZdlPv(i8* %10) #18
  %11 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #16
  br label %12

12:                                               ; preds = %2, %6
  %13 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %1 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"struct.std::__1::pair"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %"struct.std::__1::pair"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %22 = bitcast %"struct.std::__1::pair"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast %"struct.std::__1::pair"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #16
  %27 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 1
  %28 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %1, i64 0, i32 1
  %29 = bitcast i32* %27 to i8*
  %30 = bitcast i32* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 12, i1 false)
  ret %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK11url_matcher19SubstringSetMatcher15AhoCorasickNode19EstimateMemoryUsageEv(%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = bitcast %"struct.std::__1::pair"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  ret i64 %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.usub.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEED2Ev(%"class.base::circular_deque"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, %3
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = icmp ugt i64 %5, %3
  %9 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  %10 = tail call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %3) #16
  br i1 %8, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %13) #16
  %15 = tail call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 0) #16
  br label %16

16:                                               ; preds = %7, %11
  %17 = tail call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* %9, i64 %5) #16
  br label %18

18:                                               ; preds = %16, %1
  %19 = bitcast %"class.base::circular_deque"* %0 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @free(i8* %20) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 84, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"**, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*** %23, align 8
  %25 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %24, i64 %1
  ret %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %25
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #12

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #12

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #13

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #12

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #12

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRPFbPKN11url_matcher13StringPatternES4_EPS4_EEvT0_S9_T_(%"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"**, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  br label %4

4:                                                ; preds = %264, %3
  %5 = phi %"class.url_matcher::StringPattern"** [ %1, %3 ], [ %243, %264 ]
  %6 = phi %"class.url_matcher::StringPattern"** [ %0, %3 ], [ %17, %264 ]
  %7 = ptrtoint %"class.url_matcher::StringPattern"** %5 to i64
  %8 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %5, i64 -1
  %9 = bitcast %"class.url_matcher::StringPattern"** %8 to i64*
  %10 = bitcast %"class.url_matcher::StringPattern"** %8 to i64*
  %11 = bitcast %"class.url_matcher::StringPattern"** %8 to i64*
  %12 = bitcast %"class.url_matcher::StringPattern"** %8 to i64*
  %13 = ptrtoint %"class.url_matcher::StringPattern"** %5 to i64
  br label %14

14:                                               ; preds = %273, %4
  %15 = phi %"class.url_matcher::StringPattern"** [ %6, %4 ], [ %274, %273 ]
  br label %16

16:                                               ; preds = %187, %14
  %17 = phi %"class.url_matcher::StringPattern"** [ %15, %14 ], [ %174, %187 ]
  %18 = ptrtoint %"class.url_matcher::StringPattern"** %17 to i64
  %19 = sub i64 %7, %18
  %20 = ashr exact i64 %19, 3
  switch i64 %20, label %86 [
    i64 0, label %277
    i64 1, label %277
    i64 2, label %21
    i64 3, label %32
    i64 4, label %75
    i64 5, label %80
  ]

21:                                               ; preds = %16
  %22 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %23 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %5, i64 -1
  %24 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %23, align 8
  %25 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, align 8
  %26 = tail call zeroext i1 %22(%"class.url_matcher::StringPattern"* %24, %"class.url_matcher::StringPattern"* %25) #16
  br i1 %26, label %27, label %277

27:                                               ; preds = %21
  %28 = bitcast %"class.url_matcher::StringPattern"** %17 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.url_matcher::StringPattern"** %23 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %28, align 8
  store i64 %29, i64* %30, align 8
  br label %277

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, i64 1
  %34 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %5, i64 -1
  %35 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %36 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %33, align 8
  %37 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, align 8
  %38 = tail call zeroext i1 %35(%"class.url_matcher::StringPattern"* %36, %"class.url_matcher::StringPattern"* %37) #16
  %39 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %40 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %34, align 8
  %41 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %33, align 8
  %42 = tail call zeroext i1 %39(%"class.url_matcher::StringPattern"* %40, %"class.url_matcher::StringPattern"* %41) #16
  br i1 %38, label %58, label %43

43:                                               ; preds = %32
  br i1 %42, label %44, label %277

44:                                               ; preds = %43
  %45 = bitcast %"class.url_matcher::StringPattern"** %33 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.url_matcher::StringPattern"** %34 to i64*
  %48 = load i64, i64* %47, align 8
  store i64 %48, i64* %45, align 8
  store i64 %46, i64* %47, align 8
  %49 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %50 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %33, align 8
  %51 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, align 8
  %52 = tail call zeroext i1 %49(%"class.url_matcher::StringPattern"* %50, %"class.url_matcher::StringPattern"* %51) #16
  br i1 %52, label %53, label %277

53:                                               ; preds = %44
  %54 = bitcast %"class.url_matcher::StringPattern"** %17 to <2 x i64>*
  %55 = load <2 x i64>, <2 x i64>* %54, align 8
  %56 = shufflevector <2 x i64> %55, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %57 = bitcast %"class.url_matcher::StringPattern"** %17 to <2 x i64>*
  store <2 x i64> %56, <2 x i64>* %57, align 8
  br label %277

58:                                               ; preds = %32
  %59 = bitcast %"class.url_matcher::StringPattern"** %17 to i64*
  %60 = load i64, i64* %59, align 8
  br i1 %42, label %61, label %64

61:                                               ; preds = %58
  %62 = bitcast %"class.url_matcher::StringPattern"** %34 to i64*
  %63 = load i64, i64* %62, align 8
  store i64 %63, i64* %59, align 8
  store i64 %60, i64* %62, align 8
  br label %277

64:                                               ; preds = %58
  %65 = bitcast %"class.url_matcher::StringPattern"** %33 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %59, align 8
  store i64 %60, i64* %65, align 8
  %67 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %68 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %34, align 8
  %69 = inttoptr i64 %60 to %"class.url_matcher::StringPattern"*
  %70 = tail call zeroext i1 %67(%"class.url_matcher::StringPattern"* %68, %"class.url_matcher::StringPattern"* %69) #16
  br i1 %70, label %71, label %277

71:                                               ; preds = %64
  %72 = load i64, i64* %65, align 8
  %73 = bitcast %"class.url_matcher::StringPattern"** %34 to i64*
  %74 = load i64, i64* %73, align 8
  store i64 %74, i64* %65, align 8
  store i64 %72, i64* %73, align 8
  br label %277

75:                                               ; preds = %16
  %76 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, i64 1
  %77 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, i64 2
  %78 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %5, i64 -1
  %79 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN11url_matcher13StringPatternES4_EPS4_EEjT0_S9_S9_S9_T_(%"class.url_matcher::StringPattern"** %17, %"class.url_matcher::StringPattern"** %76, %"class.url_matcher::StringPattern"** %77, %"class.url_matcher::StringPattern"** %78, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8) %2)
  br label %277

80:                                               ; preds = %16
  %81 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, i64 1
  %82 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, i64 2
  %83 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, i64 3
  %84 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %5, i64 -1
  %85 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN11url_matcher13StringPatternES4_EPS4_EEjT0_S9_S9_S9_S9_T_(%"class.url_matcher::StringPattern"** %17, %"class.url_matcher::StringPattern"** %81, %"class.url_matcher::StringPattern"** %82, %"class.url_matcher::StringPattern"** %83, %"class.url_matcher::StringPattern"** %84, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8) %2)
  br label %277

86:                                               ; preds = %16
  %87 = icmp slt i64 %19, 248
  br i1 %87, label %88, label %89

88:                                               ; preds = %86
  tail call void @_ZNSt3__118__insertion_sort_3IRPFbPKN11url_matcher13StringPatternES4_EPS4_EEvT0_S9_T_(%"class.url_matcher::StringPattern"** %17, %"class.url_matcher::StringPattern"** %5, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8) %2)
  br label %277

89:                                               ; preds = %86
  %90 = icmp sgt i64 %19, 7992
  %91 = sdiv i64 %20, 2
  %92 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, i64 %91
  br i1 %90, label %93, label %98

93:                                               ; preds = %89
  %94 = sdiv i64 %20, 4
  %95 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, i64 %94
  %96 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %92, i64 %94
  %97 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN11url_matcher13StringPatternES4_EPS4_EEjT0_S9_S9_S9_S9_T_(%"class.url_matcher::StringPattern"** %17, %"class.url_matcher::StringPattern"** %95, %"class.url_matcher::StringPattern"** %92, %"class.url_matcher::StringPattern"** %96, %"class.url_matcher::StringPattern"** %8, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8) %2)
  br label %135

98:                                               ; preds = %89
  %99 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %100 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %92, align 8
  %101 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, align 8
  %102 = tail call zeroext i1 %99(%"class.url_matcher::StringPattern"* %100, %"class.url_matcher::StringPattern"* %101) #16
  %103 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %104 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %8, align 8
  %105 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %92, align 8
  %106 = tail call zeroext i1 %103(%"class.url_matcher::StringPattern"* %104, %"class.url_matcher::StringPattern"* %105) #16
  br i1 %102, label %120, label %107

107:                                              ; preds = %98
  br i1 %106, label %108, label %135

108:                                              ; preds = %107
  %109 = bitcast %"class.url_matcher::StringPattern"** %92 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = load i64, i64* %9, align 8
  store i64 %111, i64* %109, align 8
  store i64 %110, i64* %9, align 8
  %112 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %113 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %92, align 8
  %114 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, align 8
  %115 = tail call zeroext i1 %112(%"class.url_matcher::StringPattern"* %113, %"class.url_matcher::StringPattern"* %114) #16
  br i1 %115, label %116, label %135

116:                                              ; preds = %108
  %117 = bitcast %"class.url_matcher::StringPattern"** %17 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = load i64, i64* %109, align 8
  store i64 %119, i64* %117, align 8
  store i64 %118, i64* %109, align 8
  br label %135

120:                                              ; preds = %98
  %121 = bitcast %"class.url_matcher::StringPattern"** %17 to i64*
  %122 = load i64, i64* %121, align 8
  br i1 %106, label %123, label %125

123:                                              ; preds = %120
  %124 = load i64, i64* %11, align 8
  store i64 %124, i64* %121, align 8
  store i64 %122, i64* %11, align 8
  br label %135

125:                                              ; preds = %120
  %126 = bitcast %"class.url_matcher::StringPattern"** %92 to i64*
  %127 = load i64, i64* %126, align 8
  store i64 %127, i64* %121, align 8
  store i64 %122, i64* %126, align 8
  %128 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %129 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %8, align 8
  %130 = inttoptr i64 %122 to %"class.url_matcher::StringPattern"*
  %131 = tail call zeroext i1 %128(%"class.url_matcher::StringPattern"* %129, %"class.url_matcher::StringPattern"* %130) #16
  br i1 %131, label %132, label %135

132:                                              ; preds = %125
  %133 = load i64, i64* %126, align 8
  %134 = load i64, i64* %10, align 8
  store i64 %134, i64* %126, align 8
  store i64 %133, i64* %10, align 8
  br label %135

135:                                              ; preds = %132, %125, %123, %116, %108, %107, %93
  %136 = phi i32 [ %97, %93 ], [ 1, %123 ], [ 0, %107 ], [ 2, %116 ], [ 1, %108 ], [ 2, %132 ], [ 1, %125 ]
  %137 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %138 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, align 8
  %139 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %92, align 8
  %140 = tail call zeroext i1 %137(%"class.url_matcher::StringPattern"* %138, %"class.url_matcher::StringPattern"* %139) #16
  br i1 %140, label %205, label %141

141:                                              ; preds = %135, %194
  %142 = phi %"class.url_matcher::StringPattern"** [ %143, %194 ], [ %8, %135 ]
  %143 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %142, i64 -1
  %144 = icmp eq %"class.url_matcher::StringPattern"** %17, %143
  br i1 %144, label %145, label %194

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, i64 1
  %147 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %148 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, align 8
  %149 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %8, align 8
  %150 = tail call zeroext i1 %147(%"class.url_matcher::StringPattern"* %148, %"class.url_matcher::StringPattern"* %149) #16
  br i1 %150, label %167, label %151

151:                                              ; preds = %145
  %152 = icmp eq %"class.url_matcher::StringPattern"** %146, %8
  br i1 %152, label %277, label %153

153:                                              ; preds = %151, %164
  %154 = phi %"class.url_matcher::StringPattern"** [ %165, %164 ], [ %146, %151 ]
  %155 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %156 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, align 8
  %157 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %154, align 8
  %158 = tail call zeroext i1 %155(%"class.url_matcher::StringPattern"* %156, %"class.url_matcher::StringPattern"* %157) #16
  br i1 %158, label %159, label %164

159:                                              ; preds = %153
  %160 = bitcast %"class.url_matcher::StringPattern"** %154 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = load i64, i64* %12, align 8
  store i64 %162, i64* %160, align 8
  store i64 %161, i64* %12, align 8
  %163 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %154, i64 1
  br label %167

164:                                              ; preds = %153
  %165 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %154, i64 1
  %166 = icmp eq %"class.url_matcher::StringPattern"** %165, %8
  br i1 %166, label %277, label %153

167:                                              ; preds = %159, %145
  %168 = phi %"class.url_matcher::StringPattern"** [ %146, %145 ], [ %163, %159 ]
  %169 = icmp eq %"class.url_matcher::StringPattern"** %168, %8
  br i1 %169, label %277, label %170

170:                                              ; preds = %167, %189
  %171 = phi %"class.url_matcher::StringPattern"** [ %179, %189 ], [ %168, %167 ]
  %172 = phi %"class.url_matcher::StringPattern"** [ %184, %189 ], [ %8, %167 ]
  br label %173

173:                                              ; preds = %173, %170
  %174 = phi %"class.url_matcher::StringPattern"** [ %171, %170 ], [ %179, %173 ]
  %175 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %176 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, align 8
  %177 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %174, align 8
  %178 = tail call zeroext i1 %175(%"class.url_matcher::StringPattern"* %176, %"class.url_matcher::StringPattern"* %177) #16
  %179 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %174, i64 1
  br i1 %178, label %180, label %173

180:                                              ; preds = %173, %180
  %181 = phi %"class.url_matcher::StringPattern"** [ %184, %180 ], [ %172, %173 ]
  %182 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %183 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, align 8
  %184 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %181, i64 -1
  %185 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %184, align 8
  %186 = tail call zeroext i1 %182(%"class.url_matcher::StringPattern"* %183, %"class.url_matcher::StringPattern"* %185) #16
  br i1 %186, label %180, label %187

187:                                              ; preds = %180
  %188 = icmp ult %"class.url_matcher::StringPattern"** %174, %184
  br i1 %188, label %189, label %16

189:                                              ; preds = %187
  %190 = bitcast %"class.url_matcher::StringPattern"** %174 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"class.url_matcher::StringPattern"** %184 to i64*
  %193 = load i64, i64* %192, align 8
  store i64 %193, i64* %190, align 8
  store i64 %191, i64* %192, align 8
  br label %170

194:                                              ; preds = %141
  %195 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %196 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %143, align 8
  %197 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %92, align 8
  %198 = tail call zeroext i1 %195(%"class.url_matcher::StringPattern"* %196, %"class.url_matcher::StringPattern"* %197) #16
  br i1 %198, label %199, label %141

199:                                              ; preds = %194
  %200 = bitcast %"class.url_matcher::StringPattern"** %17 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = bitcast %"class.url_matcher::StringPattern"** %143 to i64*
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %200, align 8
  store i64 %201, i64* %202, align 8
  %204 = add i32 %136, 1
  br label %205

205:                                              ; preds = %135, %199
  %206 = phi i32 [ %204, %199 ], [ %136, %135 ]
  %207 = phi %"class.url_matcher::StringPattern"** [ %143, %199 ], [ %8, %135 ]
  %208 = ptrtoint %"class.url_matcher::StringPattern"** %17 to i64
  %209 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %17, i64 1
  %210 = icmp ult %"class.url_matcher::StringPattern"** %209, %207
  br i1 %210, label %211, label %240

211:                                              ; preds = %205, %232
  %212 = phi %"class.url_matcher::StringPattern"** [ %239, %232 ], [ %92, %205 ]
  %213 = phi i32 [ %237, %232 ], [ %206, %205 ]
  %214 = phi %"class.url_matcher::StringPattern"** [ %222, %232 ], [ %209, %205 ]
  %215 = phi %"class.url_matcher::StringPattern"** [ %226, %232 ], [ %207, %205 ]
  br label %216

216:                                              ; preds = %216, %211
  %217 = phi %"class.url_matcher::StringPattern"** [ %214, %211 ], [ %222, %216 ]
  %218 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %219 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %217, align 8
  %220 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %212, align 8
  %221 = tail call zeroext i1 %218(%"class.url_matcher::StringPattern"* %219, %"class.url_matcher::StringPattern"* %220) #16
  %222 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %217, i64 1
  br i1 %221, label %216, label %223

223:                                              ; preds = %216, %223
  %224 = phi %"class.url_matcher::StringPattern"** [ %226, %223 ], [ %215, %216 ]
  %225 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %226 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %224, i64 -1
  %227 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %226, align 8
  %228 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %212, align 8
  %229 = tail call zeroext i1 %225(%"class.url_matcher::StringPattern"* %227, %"class.url_matcher::StringPattern"* %228) #16
  br i1 %229, label %230, label %223

230:                                              ; preds = %223
  %231 = icmp ugt %"class.url_matcher::StringPattern"** %217, %226
  br i1 %231, label %240, label %232

232:                                              ; preds = %230
  %233 = bitcast %"class.url_matcher::StringPattern"** %217 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = bitcast %"class.url_matcher::StringPattern"** %226 to i64*
  %236 = load i64, i64* %235, align 8
  store i64 %236, i64* %233, align 8
  store i64 %234, i64* %235, align 8
  %237 = add i32 %213, 1
  %238 = icmp eq %"class.url_matcher::StringPattern"** %212, %217
  %239 = select i1 %238, %"class.url_matcher::StringPattern"** %226, %"class.url_matcher::StringPattern"** %212
  br label %211

240:                                              ; preds = %230, %205
  %241 = phi %"class.url_matcher::StringPattern"** [ %92, %205 ], [ %212, %230 ]
  %242 = phi i32 [ %206, %205 ], [ %213, %230 ]
  %243 = phi %"class.url_matcher::StringPattern"** [ %209, %205 ], [ %217, %230 ]
  %244 = icmp eq %"class.url_matcher::StringPattern"** %243, %241
  br i1 %244, label %256, label %245

245:                                              ; preds = %240
  %246 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %247 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %241, align 8
  %248 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %243, align 8
  %249 = tail call zeroext i1 %246(%"class.url_matcher::StringPattern"* %247, %"class.url_matcher::StringPattern"* %248) #16
  br i1 %249, label %250, label %256

250:                                              ; preds = %245
  %251 = bitcast %"class.url_matcher::StringPattern"** %243 to i64*
  %252 = load i64, i64* %251, align 8
  %253 = bitcast %"class.url_matcher::StringPattern"** %241 to i64*
  %254 = load i64, i64* %253, align 8
  store i64 %254, i64* %251, align 8
  store i64 %252, i64* %253, align 8
  %255 = add i32 %242, 1
  br label %256

256:                                              ; preds = %240, %250, %245
  %257 = phi i32 [ %255, %250 ], [ %242, %245 ], [ %242, %240 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %256
  %260 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN11url_matcher13StringPatternES4_EPS4_EEbT0_S9_T_(%"class.url_matcher::StringPattern"** %17, %"class.url_matcher::StringPattern"** %243, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8) %2)
  %261 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %243, i64 1
  %262 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN11url_matcher13StringPatternES4_EPS4_EEbT0_S9_T_(%"class.url_matcher::StringPattern"** %261, %"class.url_matcher::StringPattern"** %5, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8) %2)
  br i1 %262, label %263, label %265

263:                                              ; preds = %259
  br i1 %260, label %277, label %264

264:                                              ; preds = %263, %275
  br label %4

265:                                              ; preds = %259
  br i1 %260, label %273, label %266

266:                                              ; preds = %265, %256
  %267 = ptrtoint %"class.url_matcher::StringPattern"** %243 to i64
  %268 = sub i64 %267, %208
  %269 = sub i64 %13, %267
  %270 = icmp slt i64 %268, %269
  br i1 %270, label %271, label %275

271:                                              ; preds = %266
  tail call void @_ZNSt3__16__sortIRPFbPKN11url_matcher13StringPatternES4_EPS4_EEvT0_S9_T_(%"class.url_matcher::StringPattern"** %17, %"class.url_matcher::StringPattern"** %243, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8) %2)
  %272 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %243, i64 1
  br label %273

273:                                              ; preds = %271, %265
  %274 = phi %"class.url_matcher::StringPattern"** [ %261, %265 ], [ %272, %271 ]
  br label %14

275:                                              ; preds = %266
  %276 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %243, i64 1
  tail call void @_ZNSt3__16__sortIRPFbPKN11url_matcher13StringPatternES4_EPS4_EEvT0_S9_T_(%"class.url_matcher::StringPattern"** %276, %"class.url_matcher::StringPattern"** %5, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8) %2)
  br label %264

277:                                              ; preds = %263, %167, %16, %16, %151, %164, %71, %64, %61, %53, %44, %43, %21, %27, %75, %80, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRPFbPKN11url_matcher13StringPatternES4_EPS4_EEjT0_S9_S9_S9_T_(%"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"**, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %6 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %4, align 8
  %7 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %1, align 8
  %8 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, align 8
  %9 = tail call zeroext i1 %6(%"class.url_matcher::StringPattern"* %7, %"class.url_matcher::StringPattern"* %8) #16
  %10 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %4, align 8
  %11 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %2, align 8
  %12 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %1, align 8
  %13 = tail call zeroext i1 %10(%"class.url_matcher::StringPattern"* %11, %"class.url_matcher::StringPattern"* %12) #16
  br i1 %9, label %28, label %14

14:                                               ; preds = %5
  br i1 %13, label %15, label %45

15:                                               ; preds = %14
  %16 = bitcast %"class.url_matcher::StringPattern"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.url_matcher::StringPattern"** %2 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %4, align 8
  %21 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %1, align 8
  %22 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, align 8
  %23 = tail call zeroext i1 %20(%"class.url_matcher::StringPattern"* %21, %"class.url_matcher::StringPattern"* %22) #16
  br i1 %23, label %24, label %45

24:                                               ; preds = %15
  %25 = bitcast %"class.url_matcher::StringPattern"** %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* %16, align 8
  store i64 %27, i64* %25, align 8
  store i64 %26, i64* %16, align 8
  br label %45

28:                                               ; preds = %5
  %29 = bitcast %"class.url_matcher::StringPattern"** %0 to i64*
  %30 = load i64, i64* %29, align 8
  br i1 %13, label %31, label %34

31:                                               ; preds = %28
  %32 = bitcast %"class.url_matcher::StringPattern"** %2 to i64*
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %29, align 8
  store i64 %30, i64* %32, align 8
  br label %45

34:                                               ; preds = %28
  %35 = bitcast %"class.url_matcher::StringPattern"** %1 to i64*
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %29, align 8
  store i64 %30, i64* %35, align 8
  %37 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %4, align 8
  %38 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %2, align 8
  %39 = inttoptr i64 %30 to %"class.url_matcher::StringPattern"*
  %40 = tail call zeroext i1 %37(%"class.url_matcher::StringPattern"* %38, %"class.url_matcher::StringPattern"* %39) #16
  br i1 %40, label %41, label %45

41:                                               ; preds = %34
  %42 = load i64, i64* %35, align 8
  %43 = bitcast %"class.url_matcher::StringPattern"** %2 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %35, align 8
  store i64 %42, i64* %43, align 8
  br label %45

45:                                               ; preds = %14, %15, %24, %31, %34, %41
  %46 = phi i32 [ 1, %31 ], [ 0, %14 ], [ 2, %24 ], [ 1, %15 ], [ 2, %41 ], [ 1, %34 ]
  %47 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %4, align 8
  %48 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %3, align 8
  %49 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %2, align 8
  %50 = tail call zeroext i1 %47(%"class.url_matcher::StringPattern"* %48, %"class.url_matcher::StringPattern"* %49) #16
  br i1 %50, label %51, label %75

51:                                               ; preds = %45
  %52 = bitcast %"class.url_matcher::StringPattern"** %2 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.url_matcher::StringPattern"** %3 to i64*
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %52, align 8
  store i64 %53, i64* %54, align 8
  %56 = add nuw nsw i32 %46, 1
  %57 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %4, align 8
  %58 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %2, align 8
  %59 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %1, align 8
  %60 = tail call zeroext i1 %57(%"class.url_matcher::StringPattern"* %58, %"class.url_matcher::StringPattern"* %59) #16
  br i1 %60, label %61, label %75

61:                                               ; preds = %51
  %62 = bitcast %"class.url_matcher::StringPattern"** %1 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = load i64, i64* %52, align 8
  store i64 %64, i64* %62, align 8
  store i64 %63, i64* %52, align 8
  %65 = add nuw nsw i32 %46, 2
  %66 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %4, align 8
  %67 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %1, align 8
  %68 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, align 8
  %69 = tail call zeroext i1 %66(%"class.url_matcher::StringPattern"* %67, %"class.url_matcher::StringPattern"* %68) #16
  br i1 %69, label %70, label %75

70:                                               ; preds = %61
  %71 = bitcast %"class.url_matcher::StringPattern"** %0 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = load i64, i64* %62, align 8
  store i64 %73, i64* %71, align 8
  store i64 %72, i64* %62, align 8
  %74 = add nuw nsw i32 %46, 3
  br label %75

75:                                               ; preds = %51, %70, %61, %45
  %76 = phi i32 [ %74, %70 ], [ %65, %61 ], [ %56, %51 ], [ %46, %45 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort5IRPFbPKN11url_matcher13StringPatternES4_EPS4_EEjT0_S9_S9_S9_S9_T_(%"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"**, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN11url_matcher13StringPatternES4_EPS4_EEjT0_S9_S9_S9_T_(%"class.url_matcher::StringPattern"** %0, %"class.url_matcher::StringPattern"** %1, %"class.url_matcher::StringPattern"** %2, %"class.url_matcher::StringPattern"** %3, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8) %5)
  %8 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %5, align 8
  %9 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %4, align 8
  %10 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %3, align 8
  %11 = tail call zeroext i1 %8(%"class.url_matcher::StringPattern"* %9, %"class.url_matcher::StringPattern"* %10) #16
  br i1 %11, label %12, label %45

12:                                               ; preds = %6
  %13 = bitcast %"class.url_matcher::StringPattern"** %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.url_matcher::StringPattern"** %4 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  %17 = add i32 %7, 1
  %18 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %5, align 8
  %19 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %3, align 8
  %20 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %2, align 8
  %21 = tail call zeroext i1 %18(%"class.url_matcher::StringPattern"* %19, %"class.url_matcher::StringPattern"* %20) #16
  br i1 %21, label %22, label %45

22:                                               ; preds = %12
  %23 = bitcast %"class.url_matcher::StringPattern"** %2 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* %13, align 8
  store i64 %25, i64* %23, align 8
  store i64 %24, i64* %13, align 8
  %26 = add i32 %7, 2
  %27 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %5, align 8
  %28 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %2, align 8
  %29 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %1, align 8
  %30 = tail call zeroext i1 %27(%"class.url_matcher::StringPattern"* %28, %"class.url_matcher::StringPattern"* %29) #16
  br i1 %30, label %31, label %45

31:                                               ; preds = %22
  %32 = bitcast %"class.url_matcher::StringPattern"** %1 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = load i64, i64* %23, align 8
  store i64 %34, i64* %32, align 8
  store i64 %33, i64* %23, align 8
  %35 = add i32 %7, 3
  %36 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %5, align 8
  %37 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %1, align 8
  %38 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, align 8
  %39 = tail call zeroext i1 %36(%"class.url_matcher::StringPattern"* %37, %"class.url_matcher::StringPattern"* %38) #16
  br i1 %39, label %40, label %45

40:                                               ; preds = %31
  %41 = bitcast %"class.url_matcher::StringPattern"** %0 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %32, align 8
  store i64 %43, i64* %41, align 8
  store i64 %42, i64* %32, align 8
  %44 = add i32 %7, 4
  br label %45

45:                                               ; preds = %12, %31, %40, %22, %6
  %46 = phi i32 [ %44, %40 ], [ %35, %31 ], [ %26, %22 ], [ %17, %12 ], [ %7, %6 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__insertion_sort_3IRPFbPKN11url_matcher13StringPatternES4_EPS4_EEvT0_S9_T_(%"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"**, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, i64 2
  %5 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, i64 1
  %6 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %7 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %5, align 8
  %8 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, align 8
  %9 = tail call zeroext i1 %6(%"class.url_matcher::StringPattern"* %7, %"class.url_matcher::StringPattern"* %8) #16
  %10 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %11 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %4, align 8
  %12 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %5, align 8
  %13 = tail call zeroext i1 %10(%"class.url_matcher::StringPattern"* %11, %"class.url_matcher::StringPattern"* %12) #16
  br i1 %9, label %29, label %14

14:                                               ; preds = %3
  br i1 %13, label %15, label %47

15:                                               ; preds = %14
  %16 = bitcast %"class.url_matcher::StringPattern"** %5 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.url_matcher::StringPattern"** %4 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  %20 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %21 = inttoptr i64 %19 to %"class.url_matcher::StringPattern"*
  %22 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, align 8
  %23 = tail call zeroext i1 %20(%"class.url_matcher::StringPattern"* %21, %"class.url_matcher::StringPattern"* %22) #16
  br i1 %23, label %24, label %47

24:                                               ; preds = %15
  %25 = bitcast %"class.url_matcher::StringPattern"** %0 to <2 x i64>*
  %26 = load <2 x i64>, <2 x i64>* %25, align 8
  %27 = shufflevector <2 x i64> %26, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %28 = bitcast %"class.url_matcher::StringPattern"** %0 to <2 x i64>*
  store <2 x i64> %27, <2 x i64>* %28, align 8
  br label %47

29:                                               ; preds = %3
  %30 = bitcast %"class.url_matcher::StringPattern"** %0 to i64*
  %31 = load i64, i64* %30, align 8
  br i1 %13, label %32, label %35

32:                                               ; preds = %29
  %33 = bitcast %"class.url_matcher::StringPattern"** %4 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %30, align 8
  store i64 %31, i64* %33, align 8
  br label %47

35:                                               ; preds = %29
  %36 = bitcast %"class.url_matcher::StringPattern"** %5 to i64*
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %30, align 8
  store i64 %31, i64* %36, align 8
  %38 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %39 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %4, align 8
  %40 = inttoptr i64 %31 to %"class.url_matcher::StringPattern"*
  %41 = tail call zeroext i1 %38(%"class.url_matcher::StringPattern"* %39, %"class.url_matcher::StringPattern"* %40) #16
  br i1 %41, label %42, label %47

42:                                               ; preds = %35
  %43 = bitcast %"class.url_matcher::StringPattern"** %5 to <2 x i64>*
  %44 = load <2 x i64>, <2 x i64>* %43, align 8
  %45 = shufflevector <2 x i64> %44, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %46 = bitcast %"class.url_matcher::StringPattern"** %5 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %46, align 8
  br label %47

47:                                               ; preds = %14, %15, %24, %32, %35, %42
  %48 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, i64 3
  %49 = icmp eq %"class.url_matcher::StringPattern"** %48, %1
  br i1 %49, label %50, label %51

50:                                               ; preds = %77, %47
  ret void

51:                                               ; preds = %47, %77
  %52 = phi %"class.url_matcher::StringPattern"** [ %78, %77 ], [ %48, %47 ]
  %53 = phi %"class.url_matcher::StringPattern"** [ %52, %77 ], [ %4, %47 ]
  %54 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %55 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %52, align 8
  %56 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %53, align 8
  %57 = tail call zeroext i1 %54(%"class.url_matcher::StringPattern"* %55, %"class.url_matcher::StringPattern"* %56) #16
  br i1 %57, label %58, label %77

58:                                               ; preds = %51
  %59 = bitcast %"class.url_matcher::StringPattern"** %52 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = inttoptr i64 %60 to %"class.url_matcher::StringPattern"*
  br label %62

62:                                               ; preds = %69, %58
  %63 = phi %"class.url_matcher::StringPattern"** [ %52, %58 ], [ %64, %69 ]
  %64 = phi %"class.url_matcher::StringPattern"** [ %53, %58 ], [ %71, %69 ]
  %65 = bitcast %"class.url_matcher::StringPattern"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.url_matcher::StringPattern"** %63 to i64*
  store i64 %66, i64* %67, align 8
  %68 = icmp eq %"class.url_matcher::StringPattern"** %64, %0
  br i1 %68, label %74, label %69

69:                                               ; preds = %62
  %70 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %71 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %64, i64 -1
  %72 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %71, align 8
  %73 = tail call zeroext i1 %70(%"class.url_matcher::StringPattern"* %61, %"class.url_matcher::StringPattern"* %72) #16
  br i1 %73, label %62, label %74

74:                                               ; preds = %62, %69
  %75 = phi %"class.url_matcher::StringPattern"** [ %64, %69 ], [ %0, %62 ]
  %76 = bitcast %"class.url_matcher::StringPattern"** %75 to i64*
  store i64 %60, i64* %76, align 8
  br label %77

77:                                               ; preds = %74, %51
  %78 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %52, i64 1
  %79 = icmp eq %"class.url_matcher::StringPattern"** %78, %1
  br i1 %79, label %50, label %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRPFbPKN11url_matcher13StringPatternES4_EPS4_EEbT0_S9_T_(%"class.url_matcher::StringPattern"**, %"class.url_matcher::StringPattern"**, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = ptrtoint %"class.url_matcher::StringPattern"** %1 to i64
  %5 = ptrtoint %"class.url_matcher::StringPattern"** %0 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  switch i64 %7, label %73 [
    i64 0, label %156
    i64 1, label %156
    i64 2, label %8
    i64 3, label %19
    i64 4, label %62
    i64 5, label %67
  ]

8:                                                ; preds = %3
  %9 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %10 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %1, i64 -1
  %11 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %10, align 8
  %12 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, align 8
  %13 = tail call zeroext i1 %9(%"class.url_matcher::StringPattern"* %11, %"class.url_matcher::StringPattern"* %12) #16
  br i1 %13, label %14, label %156

14:                                               ; preds = %8
  %15 = bitcast %"class.url_matcher::StringPattern"** %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.url_matcher::StringPattern"** %10 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 %16, i64* %17, align 8
  br label %156

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, i64 1
  %21 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %1, i64 -1
  %22 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %23 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %20, align 8
  %24 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, align 8
  %25 = tail call zeroext i1 %22(%"class.url_matcher::StringPattern"* %23, %"class.url_matcher::StringPattern"* %24) #16
  %26 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %27 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %21, align 8
  %28 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %20, align 8
  %29 = tail call zeroext i1 %26(%"class.url_matcher::StringPattern"* %27, %"class.url_matcher::StringPattern"* %28) #16
  br i1 %25, label %45, label %30

30:                                               ; preds = %19
  br i1 %29, label %31, label %156

31:                                               ; preds = %30
  %32 = bitcast %"class.url_matcher::StringPattern"** %20 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.url_matcher::StringPattern"** %21 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 %33, i64* %34, align 8
  %36 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %37 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %20, align 8
  %38 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, align 8
  %39 = tail call zeroext i1 %36(%"class.url_matcher::StringPattern"* %37, %"class.url_matcher::StringPattern"* %38) #16
  br i1 %39, label %40, label %156

40:                                               ; preds = %31
  %41 = bitcast %"class.url_matcher::StringPattern"** %0 to <2 x i64>*
  %42 = load <2 x i64>, <2 x i64>* %41, align 8
  %43 = shufflevector <2 x i64> %42, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %44 = bitcast %"class.url_matcher::StringPattern"** %0 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %44, align 8
  br label %156

45:                                               ; preds = %19
  %46 = bitcast %"class.url_matcher::StringPattern"** %0 to i64*
  %47 = load i64, i64* %46, align 8
  br i1 %29, label %48, label %51

48:                                               ; preds = %45
  %49 = bitcast %"class.url_matcher::StringPattern"** %21 to i64*
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %46, align 8
  store i64 %47, i64* %49, align 8
  br label %156

51:                                               ; preds = %45
  %52 = bitcast %"class.url_matcher::StringPattern"** %20 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %46, align 8
  store i64 %47, i64* %52, align 8
  %54 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %55 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %21, align 8
  %56 = inttoptr i64 %47 to %"class.url_matcher::StringPattern"*
  %57 = tail call zeroext i1 %54(%"class.url_matcher::StringPattern"* %55, %"class.url_matcher::StringPattern"* %56) #16
  br i1 %57, label %58, label %156

58:                                               ; preds = %51
  %59 = load i64, i64* %52, align 8
  %60 = bitcast %"class.url_matcher::StringPattern"** %21 to i64*
  %61 = load i64, i64* %60, align 8
  store i64 %61, i64* %52, align 8
  store i64 %59, i64* %60, align 8
  br label %156

62:                                               ; preds = %3
  %63 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, i64 1
  %64 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, i64 2
  %65 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %1, i64 -1
  %66 = tail call i32 @_ZNSt3__17__sort4IRPFbPKN11url_matcher13StringPatternES4_EPS4_EEjT0_S9_S9_S9_T_(%"class.url_matcher::StringPattern"** %0, %"class.url_matcher::StringPattern"** %63, %"class.url_matcher::StringPattern"** %64, %"class.url_matcher::StringPattern"** %65, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8) %2)
  br label %156

67:                                               ; preds = %3
  %68 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, i64 1
  %69 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, i64 2
  %70 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, i64 3
  %71 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %1, i64 -1
  %72 = tail call i32 @_ZNSt3__17__sort5IRPFbPKN11url_matcher13StringPatternES4_EPS4_EEjT0_S9_S9_S9_S9_T_(%"class.url_matcher::StringPattern"** %0, %"class.url_matcher::StringPattern"** %68, %"class.url_matcher::StringPattern"** %69, %"class.url_matcher::StringPattern"** %70, %"class.url_matcher::StringPattern"** %71, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** dereferenceable(8) %2)
  br label %156

73:                                               ; preds = %3
  %74 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, i64 2
  %75 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, i64 1
  %76 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %77 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %75, align 8
  %78 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, align 8
  %79 = tail call zeroext i1 %76(%"class.url_matcher::StringPattern"* %77, %"class.url_matcher::StringPattern"* %78) #16
  %80 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %81 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %74, align 8
  %82 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %75, align 8
  %83 = tail call zeroext i1 %80(%"class.url_matcher::StringPattern"* %81, %"class.url_matcher::StringPattern"* %82) #16
  br i1 %79, label %99, label %84

84:                                               ; preds = %73
  br i1 %83, label %85, label %117

85:                                               ; preds = %84
  %86 = bitcast %"class.url_matcher::StringPattern"** %75 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.url_matcher::StringPattern"** %74 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %86, align 8
  store i64 %87, i64* %88, align 8
  %90 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %91 = inttoptr i64 %89 to %"class.url_matcher::StringPattern"*
  %92 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, align 8
  %93 = tail call zeroext i1 %90(%"class.url_matcher::StringPattern"* %91, %"class.url_matcher::StringPattern"* %92) #16
  br i1 %93, label %94, label %117

94:                                               ; preds = %85
  %95 = bitcast %"class.url_matcher::StringPattern"** %0 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8
  %97 = shufflevector <2 x i64> %96, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %98 = bitcast %"class.url_matcher::StringPattern"** %0 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %98, align 8
  br label %117

99:                                               ; preds = %73
  %100 = bitcast %"class.url_matcher::StringPattern"** %0 to i64*
  %101 = load i64, i64* %100, align 8
  br i1 %83, label %102, label %105

102:                                              ; preds = %99
  %103 = bitcast %"class.url_matcher::StringPattern"** %74 to i64*
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %100, align 8
  store i64 %101, i64* %103, align 8
  br label %117

105:                                              ; preds = %99
  %106 = bitcast %"class.url_matcher::StringPattern"** %75 to i64*
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %100, align 8
  store i64 %101, i64* %106, align 8
  %108 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %109 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %74, align 8
  %110 = inttoptr i64 %101 to %"class.url_matcher::StringPattern"*
  %111 = tail call zeroext i1 %108(%"class.url_matcher::StringPattern"* %109, %"class.url_matcher::StringPattern"* %110) #16
  br i1 %111, label %112, label %117

112:                                              ; preds = %105
  %113 = bitcast %"class.url_matcher::StringPattern"** %75 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 8
  %115 = shufflevector <2 x i64> %114, <2 x i64> undef, <2 x i32> <i32 1, i32 0>
  %116 = bitcast %"class.url_matcher::StringPattern"** %75 to <2 x i64>*
  store <2 x i64> %115, <2 x i64>* %116, align 8
  br label %117

117:                                              ; preds = %84, %85, %94, %102, %105, %112
  %118 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %0, i64 3
  %119 = icmp eq %"class.url_matcher::StringPattern"** %118, %1
  br i1 %119, label %156, label %120

120:                                              ; preds = %117, %149
  %121 = phi %"class.url_matcher::StringPattern"** [ %151, %149 ], [ %118, %117 ]
  %122 = phi i32 [ %150, %149 ], [ 0, %117 ]
  %123 = phi %"class.url_matcher::StringPattern"** [ %121, %149 ], [ %74, %117 ]
  %124 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %125 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %121, align 8
  %126 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %123, align 8
  %127 = tail call zeroext i1 %124(%"class.url_matcher::StringPattern"* %125, %"class.url_matcher::StringPattern"* %126) #16
  br i1 %127, label %128, label %149

128:                                              ; preds = %120
  %129 = bitcast %"class.url_matcher::StringPattern"** %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = inttoptr i64 %130 to %"class.url_matcher::StringPattern"*
  br label %132

132:                                              ; preds = %139, %128
  %133 = phi %"class.url_matcher::StringPattern"** [ %121, %128 ], [ %134, %139 ]
  %134 = phi %"class.url_matcher::StringPattern"** [ %123, %128 ], [ %141, %139 ]
  %135 = bitcast %"class.url_matcher::StringPattern"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"class.url_matcher::StringPattern"** %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = icmp eq %"class.url_matcher::StringPattern"** %134, %0
  br i1 %138, label %144, label %139

139:                                              ; preds = %132
  %140 = load i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)*, i1 (%"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"*)** %2, align 8
  %141 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %134, i64 -1
  %142 = load %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %141, align 8
  %143 = tail call zeroext i1 %140(%"class.url_matcher::StringPattern"* %131, %"class.url_matcher::StringPattern"* %142) #16
  br i1 %143, label %132, label %144

144:                                              ; preds = %132, %139
  %145 = phi %"class.url_matcher::StringPattern"** [ %134, %139 ], [ %0, %132 ]
  %146 = bitcast %"class.url_matcher::StringPattern"** %145 to i64*
  store i64 %130, i64* %146, align 8
  %147 = add i32 %122, 1
  %148 = icmp eq i32 %147, 8
  br i1 %148, label %153, label %149

149:                                              ; preds = %144, %120
  %150 = phi i32 [ %147, %144 ], [ %122, %120 ]
  %151 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %121, i64 1
  %152 = icmp eq %"class.url_matcher::StringPattern"** %151, %1
  br i1 %152, label %156, label %120

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"class.url_matcher::StringPattern"*, %"class.url_matcher::StringPattern"** %121, i64 1
  %155 = icmp eq %"class.url_matcher::StringPattern"** %154, %1
  br label %156

156:                                              ; preds = %149, %153, %117, %58, %51, %48, %40, %31, %30, %8, %14, %3, %3, %67, %62
  %157 = phi i1 [ true, %67 ], [ true, %62 ], [ true, %3 ], [ true, %3 ], [ true, %14 ], [ true, %8 ], [ true, %30 ], [ true, %31 ], [ true, %40 ], [ true, %48 ], [ true, %51 ], [ true, %58 ], [ true, %117 ], [ %155, %153 ], [ true, %149 ]
  ret i1 %157
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN11url_matcher19SubstringSetMatcher15AhoCorasickNodeENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJEEEvDpOT_(%"class.std::__1::vector"*) local_unnamed_addr #14 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %3 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.std::__1::vector"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %4, %6
  %8 = sdiv exact i64 %7, 40
  %9 = add nsw i64 %8, 1
  %10 = icmp ugt i64 %9, 461168601842738790
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %12) #17
  unreachable

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %6
  %18 = sdiv exact i64 %17, 40
  %19 = icmp ult i64 %18, 230584300921369395
  br i1 %19, label %20, label %25

20:                                               ; preds = %13
  %21 = shl nsw i64 %18, 1
  %22 = icmp ult i64 %21, %9
  %23 = select i1 %22, i64 %9, i64 %21
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %13, %20
  %26 = phi i64 [ %23, %20 ], [ 461168601842738790, %13 ]
  %27 = mul i64 %26, 40
  %28 = tail call i8* @_Znwm(i64 %27) #18
  %29 = bitcast i8* %28 to %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*
  br label %30

30:                                               ; preds = %20, %25
  %31 = phi i64 [ %26, %25 ], [ 0, %20 ]
  %32 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %29, %25 ], [ null, %20 ]
  %33 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %32, i64 %8
  %34 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %32, i64 %31
  %35 = ptrtoint %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %34 to i64
  %36 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #16
  %37 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %32, i64 %8, i32 1
  store i32 -1, i32* %37, align 8
  %38 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %32, i64 %8, i32 2
  store i32 -1, i32* %38, align 4
  %39 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %32, i64 %8, i32 3
  store i32 -1, i32* %39, align 8
  %40 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %33, i64 1
  %41 = ptrtoint %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %42, align 8
  %44 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %2, align 8
  %45 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %30
  %47 = ptrtoint %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %43 to i64
  br label %76

48:                                               ; preds = %30, %48
  %49 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %51, %48 ], [ %33, %30 ]
  %50 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %52, %48 ], [ %44, %30 ]
  %51 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %49, i64 -1
  %52 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %50, i64 -1
  %53 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #16
  %54 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %52 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %51 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %50, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast %"struct.std::__1::pair"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %49, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = bitcast %"struct.std::__1::pair"** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %50, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast %"struct.std::__1::pair"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %49, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %66 = bitcast %"struct.std::__1::pair"** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 24, i1 false) #16
  %68 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %49, i64 -1, i32 1
  %69 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %50, i64 -1, i32 1
  %70 = bitcast i32* %68 to i8*
  %71 = bitcast i32* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 12, i1 false) #16
  %72 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %52, %43
  br i1 %72, label %73, label %48

73:                                               ; preds = %48
  %74 = load i64, i64* %5, align 8
  %75 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %2, align 8
  br label %76

76:                                               ; preds = %46, %73
  %77 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %43, %46 ], [ %75, %73 ]
  %78 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %33, %46 ], [ %51, %73 ]
  %79 = phi i64 [ %47, %46 ], [ %74, %73 ]
  %80 = ptrtoint %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %78 to i64
  store i64 %80, i64* %5, align 8
  store i64 %41, i64* %3, align 8
  store i64 %35, i64* %15, align 8
  %81 = inttoptr i64 %79 to %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*
  %82 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %77, %81
  br i1 %82, label %96, label %83

83:                                               ; preds = %76, %94
  %84 = phi %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* [ %85, %94 ], [ %77, %76 ]
  %85 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %84, i64 -1
  %86 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %86, align 8
  %88 = icmp eq %"struct.std::__1::pair"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %83
  %90 = ptrtoint %"struct.std::__1::pair"* %87 to i64
  %91 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode", %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %84, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = bitcast %"struct.std::__1::pair"** %91 to i64*
  store i64 %90, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 0, i32 0
  tail call void @_ZdlPv(i8* %93) #18
  br label %94

94:                                               ; preds = %89, %83
  %95 = icmp eq %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"* %85, %81
  br i1 %95, label %96, label %83

96:                                               ; preds = %94, %76
  %97 = icmp eq i64 %79, 0
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = inttoptr i64 %79 to i8*
  tail call void @_ZdlPv(i8* %99) #18
  br label %100

100:                                              ; preds = %96, %98
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE25ExpandCapacityIfNecessaryEm(%"class.base::circular_deque"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.base::internal::VectorBuffer"*
  %5 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp ult i64 %8, %6
  br i1 %9, label %14, label %10

10:                                               ; preds = %2
  %11 = sub i64 %8, %6
  %12 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %19

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %8, %6
  %18 = add i64 %17, %16
  br label %19

19:                                               ; preds = %10, %14
  %20 = phi i64 [ %13, %10 ], [ %16, %14 ]
  %21 = phi i64 [ %11, %10 ], [ %18, %14 ]
  %22 = add i64 %21, %1
  %23 = icmp eq i64 %20, 0
  %24 = add i64 %20, -1
  %25 = select i1 %23, i64 0, i64 %24
  %26 = icmp ult i64 %25, %22
  br i1 %26, label %27, label %49

27:                                               ; preds = %19
  %28 = icmp ugt i64 %22, 3
  %29 = select i1 %28, i64 %22, i64 3
  %30 = lshr i64 %25, 2
  %31 = add i64 %30, %25
  %32 = icmp ult i64 %29, %31
  %33 = select i1 %32, i64 %31, i64 %29
  %34 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #16
  %35 = add i64 %33, 1
  %36 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %35, i64 8) #16
  %37 = extractvalue { i64, i1 } %36, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %34, i8 -86, i64 16, i1 false) #16
  br i1 %37, label %38, label %39, !prof !5

38:                                               ; preds = %27
  tail call void @llvm.trap() #16
  unreachable

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %4, i64 0, i32 1
  %41 = extractvalue { i64, i1 } %36, 0
  %42 = tail call noalias i8* @malloc(i64 %41) #16
  %43 = bitcast <2 x i64>* %3 to i8**
  store i8* %42, i8** %43, align 16
  store i64 %35, i64* %40, align 8
  %44 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %44, i64 %6, i64 %8, %"class.base::internal::VectorBuffer"* nonnull %4, i64* %5, i64* %7) #16
  %45 = bitcast %"class.base::circular_deque"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  call void @free(i8* %46) #16
  %47 = load <2 x i64>, <2 x i64>* %3, align 16
  %48 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #16
  br label %49

49:                                               ; preds = %19, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_(%"class.base::internal::VectorBuffer"* dereferenceable(16), i64, i64, %"class.base::internal::VectorBuffer"*, i64*, i64*) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  store i64 0, i64* %4, align 8
  %9 = icmp ugt i64 %2, %1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = tail call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %12 = tail call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %13 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %14 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"**, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*** %13, align 8
  tail call void @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE9MoveRangeIS5_Li0EEEvPS5_S8_S8_(%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %11, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %12, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %14)
  %15 = sub i64 %2, %1
  br label %28

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, %1
  br i1 %17, label %18, label %28

18:                                               ; preds = %16
  %19 = tail call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %1)
  %20 = tail call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %8)
  %21 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 0
  %22 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"**, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*** %21, align 8
  tail call void @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE9MoveRangeIS5_Li0EEEvPS5_S8_S8_(%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %19, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %20, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %22)
  %23 = sub i64 %8, %1
  %24 = tail call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 0)
  %25 = tail call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* %0, i64 %2)
  %26 = tail call dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"* %3, i64 %23)
  tail call void @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE9MoveRangeIS5_Li0EEEvPS5_S8_S8_(%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %24, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %25, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %26)
  %27 = add i64 %23, %2
  br label %28

28:                                               ; preds = %16, %18, %10
  %29 = phi i64 [ %27, %18 ], [ %15, %10 ], [ 0, %16 ]
  store i64 %29, i64* %5, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #15

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE9MoveRangeIS5_Li0EEEvPS5_S8_S8_(%"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"**, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"**, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"**) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = ptrtoint %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %0 to i64
  %6 = icmp ult %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %2, %1
  br i1 %6, label %7, label %41

7:                                                ; preds = %3
  %8 = ptrtoint %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %2 to i64
  %9 = ptrtoint %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %1 to i64
  %10 = tail call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %9, i64 %5) #16
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = tail call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %8, i64 %12) #16
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = or i1 %11, %14
  br i1 %15, label %16, label %17, !prof !5

16:                                               ; preds = %7
  tail call void @llvm.trap() #16
  unreachable

17:                                               ; preds = %7
  %18 = extractvalue { i64, i1 } %13, 0
  %19 = icmp ugt i64 %18, %5
  br i1 %19, label %20, label %46

20:                                               ; preds = %17
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0)) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  %23 = bitcast %"class.std::__1::basic_ostream"* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr i8, i8* %24, i64 -24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::basic_ostream"* %22 to i8*
  %29 = getelementptr inbounds i8, i8* %28, i64 %27
  %30 = getelementptr inbounds i8, i8* %29, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, -75
  %34 = or i32 %33, 8
  store i32 %34, i32* %31, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i64 14) #16
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %35, i64 %5) #16
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 14) #16
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %9) #16
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i64 8) #16
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %39, i64 %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %46

41:                                               ; preds = %3
  %42 = ptrtoint %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %1 to i64
  %43 = call { i64, i1 } @llvm.usub.with.overflow.i64(i64 %42, i64 %5) #16
  %44 = extractvalue { i64, i1 } %43, 1
  br i1 %44, label %45, label %46, !prof !5

45:                                               ; preds = %41
  call void @llvm.trap() #16
  unreachable

46:                                               ; preds = %20, %17, %41
  %47 = phi { i64, i1 } [ %43, %41 ], [ %10, %17 ], [ %10, %20 ]
  %48 = extractvalue { i64, i1 } %47, 0
  %49 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %0 to i8*
  %50 = bitcast %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %49, i64 %48, i1 false)
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #12

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #16
  %7 = load i8, i8* %6, align 8, !range !12
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #16
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #16
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #16
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #18
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #16
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #16
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #16
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #13

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #12

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #13

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #12

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** @_ZNK4base8internal12VectorBufferIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEEixEm(%"class.base::internal::VectorBuffer"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ult i64 %9, %1
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 89, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %0, i64 0, i32 0
  %24 = load %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"**, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*** %23, align 8
  %25 = getelementptr inbounds %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"*, %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %24, i64 %1
  ret %"class.url_matcher::SubstringSetMatcher::AhoCorasickNode"** %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base14circular_dequeIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE25ShrinkCapacityIfNecessaryEv(%"class.base::circular_deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.base::internal::VectorBuffer"*
  %4 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  %7 = add i64 %5, -1
  %8 = select i1 %6, i64 0, i64 %7
  %9 = icmp ult i64 %8, 4
  br i1 %9, label %43, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 2
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, %12
  %16 = sub i64 %14, %12
  %17 = select i1 %15, i64 %5, i64 0
  %18 = add i64 %17, %16
  %19 = sub i64 %8, %18
  %20 = icmp ult i64 %19, %18
  br i1 %20, label %43, label %21

21:                                               ; preds = %10
  %22 = lshr i64 %18, 2
  %23 = add i64 %22, %18
  %24 = icmp ugt i64 %23, 3
  %25 = select i1 %24, i64 %23, i64 3
  %26 = icmp ult i64 %25, %8
  br i1 %26, label %27, label %43

27:                                               ; preds = %21
  %28 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #16
  %29 = add nuw i64 %25, 1
  %30 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %29, i64 8) #16
  %31 = extractvalue { i64, i1 } %30, 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %28, i8 -86, i64 16, i1 false) #16
  br i1 %31, label %32, label %33, !prof !5

32:                                               ; preds = %27
  tail call void @llvm.trap() #16
  unreachable

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.base::internal::VectorBuffer", %"class.base::internal::VectorBuffer"* %3, i64 0, i32 1
  %35 = extractvalue { i64, i1 } %30, 0
  %36 = tail call noalias i8* @malloc(i64 %35) #16
  %37 = bitcast <2 x i64>* %2 to i8**
  store i8* %36, i8** %37, align 16
  store i64 %29, i64* %34, align 8
  %38 = getelementptr inbounds %"class.base::circular_deque", %"class.base::circular_deque"* %0, i64 0, i32 0
  call void @_ZN4base14circular_dequeIPN11url_matcher19SubstringSetMatcher15AhoCorasickNodeEE10MoveBufferERNS_8internal12VectorBufferIS4_EEmmPS8_PmSB_(%"class.base::internal::VectorBuffer"* dereferenceable(16) %38, i64 %12, i64 %14, %"class.base::internal::VectorBuffer"* nonnull %3, i64* %11, i64* %13) #16
  %39 = bitcast %"class.base::circular_deque"* %0 to i8**
  %40 = load i8*, i8** %39, align 8
  call void @free(i8* %40) #16
  %41 = load <2 x i64>, <2 x i64>* %2, align 16
  %42 = bitcast %"class.base::circular_deque"* %0 to <2 x i64>*
  store <2 x i64> %41, <2 x i64>* %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #16
  br label %43

43:                                               ; preds = %10, %33, %21, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !12
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !12
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !12
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::pair"* @_ZNSt3__16vectorINS_4pairIcjEENS_9allocatorIS2_EEE7emplaceIJRKcjEEENS_11__wrap_iterIPS2_EENS9_IPKS2_EEDpOT_(%"class.std::__1::vector.0"*, %"struct.std::__1::pair"*, i8* dereferenceable(1), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %6 = alloca %"struct.std::__1::__split_buffer.43", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 1
  %9 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = icmp ult %"struct.std::__1::pair"* %9, %12
  %14 = ptrtoint %"struct.std::__1::pair"* %9 to i64
  %15 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  br i1 %13, label %16, label %217

16:                                               ; preds = %4
  %17 = icmp eq %"struct.std::__1::pair"* %9, %1
  br i1 %17, label %18, label %26

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  %20 = load i8, i8* %2, align 1
  store i8 %20, i8* %19, align 4
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  %22 = load i32, i32* %3, align 4
  store i32 %22, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %24 = ptrtoint %"struct.std::__1::pair"* %23 to i64
  %25 = bitcast %"struct.std::__1::pair"** %8 to i64*
  store i64 %24, i64* %25, align 8
  br label %373

26:                                               ; preds = %16
  %27 = load i8, i8* %2, align 1
  %28 = load i32, i32* %3, align 4
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 1
  %30 = ptrtoint %"struct.std::__1::pair"* %29 to i64
  %31 = sub i64 %14, %30
  %32 = ashr exact i64 %31, 3
  %33 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %32
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 0, i32 0
  %35 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %36 = icmp ult %"struct.std::__1::pair"* %33, %9
  br i1 %36, label %37, label %148

37:                                               ; preds = %26
  %38 = sub nsw i64 0, %32
  %39 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %38, i32 0
  %40 = xor i64 %5, -1
  %41 = getelementptr i8, i8* %39, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = icmp ult i64 %44, 4
  br i1 %45, label %46, label %49

46:                                               ; preds = %143, %49, %37
  %47 = phi %"struct.std::__1::pair"* [ %9, %49 ], [ %9, %37 ], [ %66, %143 ]
  %48 = phi %"struct.std::__1::pair"* [ %33, %49 ], [ %33, %37 ], [ %67, %143 ]
  br label %205

49:                                               ; preds = %37
  %50 = sub nsw i64 0, %32
  %51 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %50, i32 0
  %52 = xor i64 %5, -1
  %53 = getelementptr i8, i8* %51, i64 %52
  %54 = ptrtoint i8* %53 to i64
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %56, i32 0
  %58 = add nsw i64 %32, %55
  %59 = add nsw i64 %58, 1
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 %59, i32 0
  %61 = icmp ult i8* %10, %60
  %62 = icmp ult i8* %34, %57
  %63 = and i1 %61, %62
  br i1 %63, label %46, label %64

64:                                               ; preds = %49
  %65 = and i64 %44, 4611686018427387900
  %66 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %65
  %67 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 %65
  %68 = add nsw i64 %65, -4
  %69 = lshr exact i64 %68, 2
  %70 = add nuw nsw i64 %69, 1
  %71 = and i64 %70, 3
  %72 = icmp ult i64 %68, 12
  br i1 %72, label %124, label %73

73:                                               ; preds = %64
  %74 = sub nsw i64 %70, %71
  br label %75

75:                                               ; preds = %75, %73
  %76 = phi i64 [ 0, %73 ], [ %121, %75 ]
  %77 = phi i64 [ %74, %73 ], [ %122, %75 ]
  %78 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %76
  %79 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 %76
  %80 = bitcast %"struct.std::__1::pair"* %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 4, !alias.scope !13
  %82 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %79, i64 2
  %83 = bitcast %"struct.std::__1::pair"* %82 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 4, !alias.scope !13
  %85 = bitcast %"struct.std::__1::pair"* %78 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %85, align 4, !alias.scope !16, !noalias !13
  %86 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %78, i64 2
  %87 = bitcast %"struct.std::__1::pair"* %86 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %87, align 4, !alias.scope !16, !noalias !13
  %88 = or i64 %76, 4
  %89 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %88
  %90 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 %88
  %91 = bitcast %"struct.std::__1::pair"* %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 4, !alias.scope !13
  %93 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %90, i64 2
  %94 = bitcast %"struct.std::__1::pair"* %93 to <2 x i64>*
  %95 = load <2 x i64>, <2 x i64>* %94, align 4, !alias.scope !13
  %96 = bitcast %"struct.std::__1::pair"* %89 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %96, align 4, !alias.scope !16, !noalias !13
  %97 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %89, i64 2
  %98 = bitcast %"struct.std::__1::pair"* %97 to <2 x i64>*
  store <2 x i64> %95, <2 x i64>* %98, align 4, !alias.scope !16, !noalias !13
  %99 = or i64 %76, 8
  %100 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %99
  %101 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 %99
  %102 = bitcast %"struct.std::__1::pair"* %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 4, !alias.scope !13
  %104 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 2
  %105 = bitcast %"struct.std::__1::pair"* %104 to <2 x i64>*
  %106 = load <2 x i64>, <2 x i64>* %105, align 4, !alias.scope !13
  %107 = bitcast %"struct.std::__1::pair"* %100 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %107, align 4, !alias.scope !16, !noalias !13
  %108 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 2
  %109 = bitcast %"struct.std::__1::pair"* %108 to <2 x i64>*
  store <2 x i64> %106, <2 x i64>* %109, align 4, !alias.scope !16, !noalias !13
  %110 = or i64 %76, 12
  %111 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %110
  %112 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 %110
  %113 = bitcast %"struct.std::__1::pair"* %112 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 4, !alias.scope !13
  %115 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %112, i64 2
  %116 = bitcast %"struct.std::__1::pair"* %115 to <2 x i64>*
  %117 = load <2 x i64>, <2 x i64>* %116, align 4, !alias.scope !13
  %118 = bitcast %"struct.std::__1::pair"* %111 to <2 x i64>*
  store <2 x i64> %114, <2 x i64>* %118, align 4, !alias.scope !16, !noalias !13
  %119 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %111, i64 2
  %120 = bitcast %"struct.std::__1::pair"* %119 to <2 x i64>*
  store <2 x i64> %117, <2 x i64>* %120, align 4, !alias.scope !16, !noalias !13
  %121 = add i64 %76, 16
  %122 = add i64 %77, -4
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %75, !llvm.loop !18

124:                                              ; preds = %75, %64
  %125 = phi i64 [ 0, %64 ], [ %121, %75 ]
  %126 = icmp eq i64 %71, 0
  br i1 %126, label %143, label %127

127:                                              ; preds = %124, %127
  %128 = phi i64 [ %140, %127 ], [ %125, %124 ]
  %129 = phi i64 [ %141, %127 ], [ %71, %124 ]
  %130 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %9, i64 %128
  %131 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 %128
  %132 = bitcast %"struct.std::__1::pair"* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 4, !alias.scope !13
  %134 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %131, i64 2
  %135 = bitcast %"struct.std::__1::pair"* %134 to <2 x i64>*
  %136 = load <2 x i64>, <2 x i64>* %135, align 4, !alias.scope !13
  %137 = bitcast %"struct.std::__1::pair"* %130 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %137, align 4, !alias.scope !16, !noalias !13
  %138 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %130, i64 2
  %139 = bitcast %"struct.std::__1::pair"* %138 to <2 x i64>*
  store <2 x i64> %136, <2 x i64>* %139, align 4, !alias.scope !16, !noalias !13
  %140 = add i64 %128, 4
  %141 = add i64 %129, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %127, !llvm.loop !20

143:                                              ; preds = %127, %124
  %144 = icmp eq i64 %44, %65
  br i1 %144, label %145, label %46

145:                                              ; preds = %205, %143
  %146 = phi %"struct.std::__1::pair"* [ %66, %143 ], [ %212, %205 ]
  %147 = ptrtoint %"struct.std::__1::pair"* %146 to i64
  br label %148

148:                                              ; preds = %145, %26
  %149 = phi i64 [ %147, %145 ], [ %14, %26 ]
  store i64 %149, i64* %35, align 8
  %150 = icmp eq i64 %31, 0
  br i1 %150, label %214, label %151

151:                                              ; preds = %148
  %152 = add i64 %31, -8
  %153 = lshr i64 %152, 3
  %154 = add nuw nsw i64 %153, 1
  %155 = and i64 %154, 3
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %171, label %157

157:                                              ; preds = %151, %157
  %158 = phi %"struct.std::__1::pair"* [ %162, %157 ], [ %9, %151 ]
  %159 = phi %"struct.std::__1::pair"* [ %161, %157 ], [ %33, %151 ]
  %160 = phi i64 [ %169, %157 ], [ %155, %151 ]
  %161 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %159, i64 -1
  %162 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %158, i64 -1
  %163 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %161, i64 0, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %162, i64 0, i32 0
  store i8 %164, i8* %165, align 4
  %166 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %159, i64 -1, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %158, i64 -1, i32 1
  store i32 %167, i32* %168, align 4
  %169 = add i64 %160, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %157, !llvm.loop !22

171:                                              ; preds = %157, %151
  %172 = phi %"struct.std::__1::pair"* [ %9, %151 ], [ %162, %157 ]
  %173 = phi %"struct.std::__1::pair"* [ %33, %151 ], [ %161, %157 ]
  %174 = icmp ult i64 %152, 24
  br i1 %174, label %214, label %175

175:                                              ; preds = %171, %175
  %176 = phi %"struct.std::__1::pair"* [ %197, %175 ], [ %172, %171 ]
  %177 = phi %"struct.std::__1::pair"* [ %196, %175 ], [ %173, %171 ]
  %178 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %177, i64 -1, i32 0
  %179 = load i8, i8* %178, align 1
  %180 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %176, i64 -1, i32 0
  store i8 %179, i8* %180, align 4
  %181 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %177, i64 -1, i32 1
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %176, i64 -1, i32 1
  store i32 %182, i32* %183, align 4
  %184 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %177, i64 -2, i32 0
  %185 = load i8, i8* %184, align 1
  %186 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %176, i64 -2, i32 0
  store i8 %185, i8* %186, align 4
  %187 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %177, i64 -2, i32 1
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %176, i64 -2, i32 1
  store i32 %188, i32* %189, align 4
  %190 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %177, i64 -3, i32 0
  %191 = load i8, i8* %190, align 1
  %192 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %176, i64 -3, i32 0
  store i8 %191, i8* %192, align 4
  %193 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %177, i64 -3, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %176, i64 -3, i32 1
  store i32 %194, i32* %195, align 4
  %196 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %177, i64 -4
  %197 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %176, i64 -4
  %198 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %196, i64 0, i32 0
  %199 = load i8, i8* %198, align 1
  %200 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %197, i64 0, i32 0
  store i8 %199, i8* %200, align 4
  %201 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %177, i64 -4, i32 1
  %202 = load i32, i32* %201, align 4
  %203 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %176, i64 -4, i32 1
  store i32 %202, i32* %203, align 4
  %204 = icmp eq %"struct.std::__1::pair"* %196, %1
  br i1 %204, label %214, label %175

205:                                              ; preds = %46, %205
  %206 = phi %"struct.std::__1::pair"* [ %212, %205 ], [ %47, %46 ]
  %207 = phi %"struct.std::__1::pair"* [ %211, %205 ], [ %48, %46 ]
  %208 = bitcast %"struct.std::__1::pair"* %207 to i64*
  %209 = bitcast %"struct.std::__1::pair"* %206 to i64*
  %210 = load i64, i64* %208, align 4
  store i64 %210, i64* %209, align 4
  %211 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %207, i64 1
  %212 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %206, i64 1
  %213 = icmp ult %"struct.std::__1::pair"* %211, %9
  br i1 %213, label %205, label %145, !llvm.loop !23

214:                                              ; preds = %171, %175, %148
  %215 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0
  store i8 %27, i8* %215, align 4
  %216 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  store i32 %28, i32* %216, align 4
  br label %373

217:                                              ; preds = %4
  %218 = getelementptr inbounds %"class.std::__1::vector.0", %"class.std::__1::vector.0"* %0, i64 0, i32 0, i32 2
  %219 = bitcast %"struct.std::__1::__split_buffer.43"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %219) #16
  %220 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %6, i64 0, i32 0
  %221 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %6, i64 0, i32 1
  %222 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %6, i64 0, i32 2
  %223 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %6, i64 0, i32 3, i32 0, i32 0
  %224 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %6, i64 0, i32 3, i32 1, i32 0
  %225 = bitcast %"struct.std::__1::pair"** %8 to i64*
  %226 = bitcast %"class.std::__1::vector.0"* %0 to i64*
  %227 = bitcast %"struct.std::__1::__split_buffer.43"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %227, i8 -86, i64 40, i1 false)
  %228 = load i64, i64* %226, align 8
  %229 = sub i64 %14, %228
  %230 = ashr exact i64 %229, 3
  %231 = add nsw i64 %230, 1
  %232 = icmp ugt i64 %231, 2305843009213693951
  br i1 %232, label %233, label %235

233:                                              ; preds = %217
  %234 = bitcast %"class.std::__1::vector.0"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %234) #17
  unreachable

235:                                              ; preds = %217
  %236 = bitcast %"struct.std::__1::pair"** %11 to i64*
  %237 = sub i64 %15, %228
  %238 = ashr exact i64 %237, 3
  %239 = icmp ult i64 %238, 1152921504606846975
  br i1 %239, label %244, label %240

240:                                              ; preds = %235
  %241 = sub i64 %5, %228
  %242 = ashr exact i64 %241, 3
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %223, align 8
  %243 = bitcast %"class.std::__1::allocator"** %224 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %218, %"class.std::__1::__compressed_pair"** %243, align 8
  br label %255

244:                                              ; preds = %235
  %245 = ashr exact i64 %237, 2
  %246 = icmp ult i64 %245, %231
  %247 = select i1 %246, i64 %231, i64 %245
  %248 = sub i64 %5, %228
  %249 = ashr exact i64 %248, 3
  store %"struct.std::__1::pair"* null, %"struct.std::__1::pair"** %223, align 8
  %250 = bitcast %"class.std::__1::allocator"** %224 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %218, %"class.std::__1::__compressed_pair"** %250, align 8
  %251 = icmp eq i64 %247, 0
  br i1 %251, label %261, label %252

252:                                              ; preds = %244
  %253 = icmp ugt i64 %247, 2305843009213693951
  br i1 %253, label %254, label %255

254:                                              ; preds = %252
  tail call void @abort() #17
  unreachable

255:                                              ; preds = %240, %252
  %256 = phi i64 [ 2305843009213693951, %240 ], [ %247, %252 ]
  %257 = phi i64 [ %242, %240 ], [ %249, %252 ]
  %258 = shl i64 %256, 3
  %259 = tail call i8* @_Znwm(i64 %258) #18
  %260 = bitcast i8* %259 to %"struct.std::__1::pair"*
  br label %261

261:                                              ; preds = %244, %255
  %262 = phi i64 [ %257, %255 ], [ %249, %244 ]
  %263 = phi i64 [ %256, %255 ], [ 0, %244 ]
  %264 = phi %"struct.std::__1::pair"* [ %260, %255 ], [ null, %244 ]
  store %"struct.std::__1::pair"* %264, %"struct.std::__1::pair"** %220, align 8
  %265 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %264, i64 %262
  store %"struct.std::__1::pair"* %265, %"struct.std::__1::pair"** %222, align 8
  store %"struct.std::__1::pair"* %265, %"struct.std::__1::pair"** %221, align 8
  %266 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %264, i64 %263
  store %"struct.std::__1::pair"* %266, %"struct.std::__1::pair"** %223, align 8
  call void @_ZNSt3__114__split_bufferINS_4pairIcjEERNS_9allocatorIS2_EEE12emplace_backIJRKcjEEEvDpOT_(%"struct.std::__1::__split_buffer.43"* nonnull %6, i8* dereferenceable(1) %2, i32* dereferenceable(4) %3)
  %267 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %221, align 8
  %268 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %7, align 8
  %269 = ptrtoint %"struct.std::__1::pair"* %268 to i64
  %270 = sub i64 %5, %269
  %271 = ashr exact i64 %270, 3
  %272 = sub nsw i64 0, %271
  %273 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %267, i64 %272
  store %"struct.std::__1::pair"* %273, %"struct.std::__1::pair"** %221, align 8
  %274 = icmp sgt i64 %270, 0
  br i1 %274, label %275, label %278

275:                                              ; preds = %261
  %276 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %273, i64 0, i32 0
  %277 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %268, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %276, i8* align 4 %277, i64 %270, i1 false) #16
  br label %278

278:                                              ; preds = %275, %261
  %279 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %8, align 8
  %280 = icmp eq %"struct.std::__1::pair"* %279, %1
  br i1 %280, label %281, label %285

281:                                              ; preds = %278
  %282 = ptrtoint %"struct.std::__1::pair"* %279 to i64
  %283 = bitcast %"struct.std::__1::pair"** %222 to i64*
  %284 = load i64, i64* %283, align 8
  br label %347

285:                                              ; preds = %278
  %286 = bitcast %"struct.std::__1::pair"** %222 to i64**
  %287 = load i64*, i64** %286, align 8
  %288 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %279, i64 -1, i32 0
  %289 = ptrtoint i8* %288 to i64
  %290 = sub i64 %289, %5
  %291 = lshr i64 %290, 3
  %292 = add nuw nsw i64 %291, 1
  %293 = and i64 %292, 3
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %309, label %295

295:                                              ; preds = %285, %295
  %296 = phi i64* [ %304, %295 ], [ %287, %285 ]
  %297 = phi %"struct.std::__1::pair"* [ %301, %295 ], [ %1, %285 ]
  %298 = phi i64 [ %305, %295 ], [ %293, %285 ]
  %299 = bitcast %"struct.std::__1::pair"* %297 to i64*
  %300 = load i64, i64* %299, align 4
  store i64 %300, i64* %296, align 4
  %301 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %297, i64 1
  %302 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %222, align 8
  %303 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %302, i64 1
  store %"struct.std::__1::pair"* %303, %"struct.std::__1::pair"** %222, align 8
  %304 = bitcast %"struct.std::__1::pair"* %303 to i64*
  %305 = add i64 %298, -1
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %307, label %295, !llvm.loop !24

307:                                              ; preds = %295
  %308 = bitcast %"struct.std::__1::pair"* %303 to i64*
  br label %309

309:                                              ; preds = %285, %307
  %310 = phi %"struct.std::__1::pair"* [ undef, %285 ], [ %303, %307 ]
  %311 = phi i64* [ %287, %285 ], [ %308, %307 ]
  %312 = phi %"struct.std::__1::pair"* [ %1, %285 ], [ %301, %307 ]
  %313 = icmp ult i64 %290, 24
  br i1 %313, label %342, label %314

314:                                              ; preds = %309, %314
  %315 = phi i64* [ %341, %314 ], [ %311, %309 ]
  %316 = phi %"struct.std::__1::pair"* [ %337, %314 ], [ %312, %309 ]
  %317 = bitcast %"struct.std::__1::pair"* %316 to i64*
  %318 = load i64, i64* %317, align 4
  store i64 %318, i64* %315, align 4
  %319 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %316, i64 1
  %320 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %222, align 8
  %321 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %320, i64 1
  store %"struct.std::__1::pair"* %321, %"struct.std::__1::pair"** %222, align 8
  %322 = bitcast %"struct.std::__1::pair"* %321 to i64*
  %323 = bitcast %"struct.std::__1::pair"* %319 to i64*
  %324 = load i64, i64* %323, align 4
  store i64 %324, i64* %322, align 4
  %325 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %316, i64 2
  %326 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %222, align 8
  %327 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %326, i64 1
  store %"struct.std::__1::pair"* %327, %"struct.std::__1::pair"** %222, align 8
  %328 = bitcast %"struct.std::__1::pair"* %327 to i64*
  %329 = bitcast %"struct.std::__1::pair"* %325 to i64*
  %330 = load i64, i64* %329, align 4
  store i64 %330, i64* %328, align 4
  %331 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %316, i64 3
  %332 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %222, align 8
  %333 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %332, i64 1
  store %"struct.std::__1::pair"* %333, %"struct.std::__1::pair"** %222, align 8
  %334 = bitcast %"struct.std::__1::pair"* %333 to i64*
  %335 = bitcast %"struct.std::__1::pair"* %331 to i64*
  %336 = load i64, i64* %335, align 4
  store i64 %336, i64* %334, align 4
  %337 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %316, i64 4
  %338 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %222, align 8
  %339 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %338, i64 1
  store %"struct.std::__1::pair"* %339, %"struct.std::__1::pair"** %222, align 8
  %340 = icmp eq %"struct.std::__1::pair"* %337, %279
  %341 = bitcast %"struct.std::__1::pair"* %339 to i64*
  br i1 %340, label %342, label %314

342:                                              ; preds = %314, %309
  %343 = phi %"struct.std::__1::pair"* [ %310, %309 ], [ %339, %314 ]
  %344 = ptrtoint %"struct.std::__1::pair"* %343 to i64
  %345 = load i64, i64* %225, align 8
  %346 = bitcast %"struct.std::__1::pair"** %222 to i64*
  br label %347

347:                                              ; preds = %281, %342
  %348 = phi i64* [ %283, %281 ], [ %346, %342 ]
  %349 = phi i64 [ %284, %281 ], [ %344, %342 ]
  %350 = phi i64 [ %282, %281 ], [ %345, %342 ]
  %351 = load i64, i64* %226, align 8
  %352 = bitcast %"struct.std::__1::pair"** %221 to i64*
  %353 = load i64, i64* %352, align 8
  store i64 %353, i64* %226, align 8
  store i64 %351, i64* %352, align 8
  store i64 %349, i64* %225, align 8
  store i64 %350, i64* %348, align 8
  %354 = load i64, i64* %236, align 8
  %355 = bitcast %"struct.std::__1::pair"** %223 to i64*
  %356 = load i64, i64* %355, align 8
  store i64 %356, i64* %236, align 8
  store i64 %354, i64* %355, align 8
  %357 = bitcast %"struct.std::__1::__split_buffer.43"* %6 to i64*
  store i64 %351, i64* %357, align 8
  %358 = inttoptr i64 %351 to %"struct.std::__1::pair"*
  %359 = inttoptr i64 %350 to %"struct.std::__1::pair"*
  %360 = icmp eq %"struct.std::__1::pair"* %359, %358
  br i1 %360, label %368, label %361

361:                                              ; preds = %347
  %362 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %359, i64 -1, i32 0
  %363 = ptrtoint i8* %362 to i64
  %364 = sub i64 %363, %351
  %365 = lshr i64 %364, 3
  %366 = xor i64 %365, -1
  %367 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %359, i64 %366
  store %"struct.std::__1::pair"* %367, %"struct.std::__1::pair"** %222, align 8
  br label %368

368:                                              ; preds = %361, %347
  %369 = icmp eq i64 %351, 0
  br i1 %369, label %372, label %370

370:                                              ; preds = %368
  %371 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %358, i64 0, i32 0
  call void @_ZdlPv(i8* %371) #18
  br label %372

372:                                              ; preds = %368, %370
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %219) #16
  br label %373

373:                                              ; preds = %18, %214, %372
  %374 = phi %"struct.std::__1::pair"* [ %1, %18 ], [ %1, %214 ], [ %267, %372 ]
  ret %"struct.std::__1::pair"* %374
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_4pairIcjEERNS_9allocatorIS2_EEE12emplace_backIJRKcjEEEvDpOT_(%"struct.std::__1::__split_buffer.43"*, i8* dereferenceable(1), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %0, i64 0, i32 2
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp eq %"struct.std::__1::pair"* %5, %7
  %9 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  br i1 %8, label %10, label %199

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer.43", %"struct.std::__1::__split_buffer.43"* %0, i64 0, i32 0
  %15 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  %16 = icmp ugt %"struct.std::__1::pair"* %12, %15
  %17 = ptrtoint %"struct.std::__1::pair"* %15 to i64
  br i1 %16, label %18, label %90

18:                                               ; preds = %10
  %19 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %12, i64 %23
  %25 = icmp eq %"struct.std::__1::pair"* %12, %5
  br i1 %25, label %86, label %26

26:                                               ; preds = %18
  %27 = getelementptr %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 -1, i32 0
  %28 = ptrtoint i8* %27 to i64
  %29 = sub i64 %28, %13
  %30 = lshr i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 3
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %34
  %35 = phi %"struct.std::__1::pair"* [ %45, %34 ], [ %24, %26 ]
  %36 = phi %"struct.std::__1::pair"* [ %44, %34 ], [ %12, %26 ]
  %37 = phi i64 [ %46, %34 ], [ %32, %26 ]
  %38 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 0
  store i8 %39, i8* %40, align 4
  %41 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 0, i32 1
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %36, i64 1
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %35, i64 1
  %46 = add i64 %37, -1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %34, !llvm.loop !25

48:                                               ; preds = %34, %26
  %49 = phi %"struct.std::__1::pair"* [ undef, %26 ], [ %45, %34 ]
  %50 = phi %"struct.std::__1::pair"* [ %24, %26 ], [ %45, %34 ]
  %51 = phi %"struct.std::__1::pair"* [ %12, %26 ], [ %44, %34 ]
  %52 = icmp ult i64 %29, 24
  br i1 %52, label %83, label %53

53:                                               ; preds = %48, %53
  %54 = phi %"struct.std::__1::pair"* [ %81, %53 ], [ %50, %48 ]
  %55 = phi %"struct.std::__1::pair"* [ %80, %53 ], [ %51, %48 ]
  %56 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 0, i32 0
  store i8 %57, i8* %58, align 4
  %59 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 0, i32 1
  store i32 %60, i32* %61, align 4
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 1, i32 0
  store i8 %63, i8* %64, align 4
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 1, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 1, i32 1
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 2, i32 0
  store i8 %69, i8* %70, align 4
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 2, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 2, i32 1
  store i32 %72, i32* %73, align 4
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 3, i32 0
  store i8 %75, i8* %76, align 4
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 3, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 3, i32 1
  store i32 %78, i32* %79, align 4
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %55, i64 4
  %81 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %54, i64 4
  %82 = icmp eq %"struct.std::__1::pair"* %80, %5
  br i1 %82, label %83, label %53

83:                                               ; preds = %53, %48
  %84 = phi %"struct.std::__1::pair"* [ %49, %48 ], [ %81, %53 ]
  %85 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  br label %86

86:                                               ; preds = %83, %18
  %87 = phi %"struct.std::__1::pair"* [ %5, %18 ], [ %85, %83 ]
  %88 = phi %"struct.std::__1::pair"* [ %24, %18 ], [ %84, %83 ]
  store %"struct.std::__1::pair"* %88, %"struct.std::__1::pair"** %4, align 8
  %89 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %87, i64 %23
  store %"struct.std::__1::pair"* %89, %"struct.std::__1::pair"** %11, align 8
  br label %199

90:                                               ; preds = %10
  %91 = bitcast %"struct.std::__1::pair"** %6 to i64*
  %92 = bitcast %"struct.std::__1::__split_buffer.43"* %0 to i64*
  %93 = sub i64 %9, %17
  %94 = ashr exact i64 %93, 2
  %95 = icmp eq i64 %93, 0
  %96 = select i1 %95, i64 1, i64 %94
  %97 = icmp ugt i64 %96, 2305843009213693951
  br i1 %97, label %98, label %99

98:                                               ; preds = %90
  tail call void @abort() #17
  unreachable

99:                                               ; preds = %90
  %100 = lshr i64 %96, 2
  %101 = shl i64 %96, 3
  %102 = tail call i8* @_Znwm(i64 %101) #18
  %103 = bitcast i8* %102 to %"struct.std::__1::pair"*
  %104 = ptrtoint i8* %102 to i64
  %105 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 %100
  %106 = ptrtoint %"struct.std::__1::pair"* %105 to i64
  %107 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 %96
  %108 = ptrtoint %"struct.std::__1::pair"* %107 to i64
  %109 = ptrtoint %"struct.std::__1::pair"* %5 to i64
  %110 = sub i64 %109, %13
  %111 = ashr exact i64 %110, 3
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %105, i64 %111
  %113 = icmp eq i64 %110, 0
  br i1 %113, label %189, label %114

114:                                              ; preds = %99
  %115 = add i64 %110, -8
  %116 = lshr i64 %115, 3
  %117 = add nuw nsw i64 %116, 1
  %118 = and i64 %117, 7
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %135, label %120

120:                                              ; preds = %114, %120
  %121 = phi %"struct.std::__1::pair"* [ %128, %120 ], [ %105, %114 ]
  %122 = phi i64 [ %129, %120 ], [ %106, %114 ]
  %123 = phi %"struct.std::__1::pair"* [ %130, %120 ], [ %12, %114 ]
  %124 = phi i64 [ %131, %120 ], [ %118, %114 ]
  %125 = bitcast %"struct.std::__1::pair"* %123 to i64*
  %126 = inttoptr i64 %122 to i64*
  %127 = load i64, i64* %125, align 4
  store i64 %127, i64* %126, align 4
  %128 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %121, i64 1
  %129 = ptrtoint %"struct.std::__1::pair"* %128 to i64
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %123, i64 1
  %131 = add i64 %124, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %120, !llvm.loop !26

133:                                              ; preds = %120
  %134 = ptrtoint %"struct.std::__1::pair"* %128 to i64
  br label %135

135:                                              ; preds = %114, %133
  %136 = phi %"struct.std::__1::pair"* [ %105, %114 ], [ %128, %133 ]
  %137 = phi i64 [ %106, %114 ], [ %134, %133 ]
  %138 = phi %"struct.std::__1::pair"* [ %12, %114 ], [ %130, %133 ]
  %139 = icmp ult i64 %115, 56
  br i1 %139, label %186, label %140

140:                                              ; preds = %135, %140
  %141 = phi %"struct.std::__1::pair"* [ %182, %140 ], [ %136, %135 ]
  %142 = phi i64 [ %183, %140 ], [ %137, %135 ]
  %143 = phi %"struct.std::__1::pair"* [ %184, %140 ], [ %138, %135 ]
  %144 = bitcast %"struct.std::__1::pair"* %143 to i64*
  %145 = inttoptr i64 %142 to i64*
  %146 = load i64, i64* %144, align 4
  store i64 %146, i64* %145, align 4
  %147 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 1
  %148 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 1
  %149 = bitcast %"struct.std::__1::pair"* %148 to i64*
  %150 = bitcast %"struct.std::__1::pair"* %147 to i64*
  %151 = load i64, i64* %149, align 4
  store i64 %151, i64* %150, align 4
  %152 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 2
  %153 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 2
  %154 = bitcast %"struct.std::__1::pair"* %153 to i64*
  %155 = bitcast %"struct.std::__1::pair"* %152 to i64*
  %156 = load i64, i64* %154, align 4
  store i64 %156, i64* %155, align 4
  %157 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 3
  %158 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 3
  %159 = bitcast %"struct.std::__1::pair"* %158 to i64*
  %160 = bitcast %"struct.std::__1::pair"* %157 to i64*
  %161 = load i64, i64* %159, align 4
  store i64 %161, i64* %160, align 4
  %162 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 4
  %163 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 4
  %164 = bitcast %"struct.std::__1::pair"* %163 to i64*
  %165 = bitcast %"struct.std::__1::pair"* %162 to i64*
  %166 = load i64, i64* %164, align 4
  store i64 %166, i64* %165, align 4
  %167 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 5
  %168 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 5
  %169 = bitcast %"struct.std::__1::pair"* %168 to i64*
  %170 = bitcast %"struct.std::__1::pair"* %167 to i64*
  %171 = load i64, i64* %169, align 4
  store i64 %171, i64* %170, align 4
  %172 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 6
  %173 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 6
  %174 = bitcast %"struct.std::__1::pair"* %173 to i64*
  %175 = bitcast %"struct.std::__1::pair"* %172 to i64*
  %176 = load i64, i64* %174, align 4
  store i64 %176, i64* %175, align 4
  %177 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 7
  %178 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 7
  %179 = bitcast %"struct.std::__1::pair"* %178 to i64*
  %180 = bitcast %"struct.std::__1::pair"* %177 to i64*
  %181 = load i64, i64* %179, align 4
  store i64 %181, i64* %180, align 4
  %182 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %141, i64 8
  %183 = ptrtoint %"struct.std::__1::pair"* %182 to i64
  %184 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %143, i64 8
  %185 = icmp eq %"struct.std::__1::pair"* %112, %182
  br i1 %185, label %186, label %140

186:                                              ; preds = %140, %135
  %187 = ptrtoint %"struct.std::__1::pair"* %112 to i64
  %188 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %14, align 8
  br label %189

189:                                              ; preds = %99, %186
  %190 = phi %"struct.std::__1::pair"* [ %188, %186 ], [ %15, %99 ]
  %191 = phi i64 [ %187, %186 ], [ %106, %99 ]
  store i64 %104, i64* %92, align 8
  %192 = bitcast %"struct.std::__1::pair"** %11 to i64*
  store i64 %106, i64* %192, align 8
  %193 = bitcast %"struct.std::__1::pair"** %4 to i64*
  store i64 %191, i64* %193, align 8
  store i64 %108, i64* %91, align 8
  %194 = icmp eq %"struct.std::__1::pair"* %190, null
  %195 = inttoptr i64 %191 to %"struct.std::__1::pair"*
  br i1 %194, label %199, label %196

196:                                              ; preds = %189
  %197 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %190, i64 0, i32 0
  tail call void @_ZdlPv(i8* %197) #18
  %198 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %199

199:                                              ; preds = %196, %189, %86, %3
  %200 = phi %"struct.std::__1::pair"* [ %198, %196 ], [ %195, %189 ], [ %88, %86 ], [ %5, %3 ]
  %201 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %200, i64 0, i32 0
  %202 = load i8, i8* %1, align 1
  store i8 %202, i8* %201, align 4
  %203 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %200, i64 0, i32 1
  %204 = load i32, i32* %2, align 4
  store i32 %204, i32* %203, align 4
  %205 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %206 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %205, i64 1
  store %"struct.std::__1::pair"* %206, %"struct.std::__1::pair"** %4, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN11url_matcher12_GLOBAL__N_119GetVectorOfPointersERKNSt3__16vectorINS_13StringPatternENS1_9allocatorIS3_EEEE: argument 0"}
!4 = distinct !{!4, !"_ZN11url_matcher12_GLOBAL__N_119GetVectorOfPointersERKNSt3__16vectorINS_13StringPatternENS1_9allocatorIS3_EEEE"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeIiNS_4lessIiEENS_9allocatorIiEEE16__construct_nodeIJiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!12 = !{i8 0, i8 2}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.isvectorized", i32 1}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.unroll.disable"}
!22 = distinct !{!22, !21}
!23 = distinct !{!23, !19}
!24 = distinct !{!24, !21}
!25 = distinct !{!25, !21}
!26 = distinct !{!26, !21}
