; ModuleID = '../../components/download/internal/common/download_task_runner.cc'
source_filename = "../../components/download/internal/common/download_task_runner.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::internal::LazyThreadPoolTaskRunner" = type { %"class.base::TaskTraits", i32, i64 }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.base::LazyInstance" = type { i64, [8 x i8] }
%"class.base::LazyInstance.2" = type { i64, [8 x i8] }
%"class.base::NoDestructor" = type { [40 x i8] }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.1 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }

$_ZN4base12LazyInstanceI13scoped_refptrINS_22SingleThreadTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv = comdat any

$_ZN4base12LazyInstanceI13scoped_refptrINS_19SequencedTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv = comdat any

@_ZN8download12_GLOBAL__N_122g_download_task_runnerE = internal global %"class.base::internal::LazyThreadPoolTaskRunner" { %"class.base::TaskTraits" { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 1, i8 1, i8 0, i8 1, i8 0, i8 0 }, i32 0, i64 0 }, align 8
@_ZN8download12_GLOBAL__N_116g_io_task_runnerE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZN8download12_GLOBAL__N_116g_db_task_runnerE = internal global %"class.base::LazyInstance.2" zeroinitializer, align 8
@_ZZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance = internal global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SequencedTaskRunner"* @_ZN8download21GetDownloadTaskRunnerEv() local_unnamed_addr #0 {
  %1 = tail call %"class.base::SequencedTaskRunner"* @_ZN4base8internal24LazyThreadPoolTaskRunnerINS_19SequencedTaskRunnerELb0EE3GetEv(%"class.base::internal::LazyThreadPoolTaskRunner"* nonnull @_ZN8download12_GLOBAL__N_122g_download_task_runnerE) #4
  ret %"class.base::SequencedTaskRunner"* %1
}

declare %"class.base::SequencedTaskRunner"* @_ZN4base8internal24LazyThreadPoolTaskRunnerINS_19SequencedTaskRunnerELb0EE3GetEv(%"class.base::internal::LazyThreadPoolTaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8download15SetIOTaskRunnerERK13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%class.scoped_refptr.1* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %8, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance) #4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %4
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance to %"class.base::internal::LockImpl"*)) #4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance) #4
  br label %8

8:                                                ; preds = %1, %4, %7
  %9 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance to %union.pthread_mutex_t*)) #4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !3

11:                                               ; preds = %8
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance to %"class.base::internal::LockImpl"*)) #4
  br label %12

12:                                               ; preds = %8, %11
  %13 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 0) acquire, align 8
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %20, label %15

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 0)) #4
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 1, i64 0) to %"class.base::SingleThreadTaskRunner"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI13scoped_refptrINS_22SingleThreadTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE to i8*)) #4
  br label %20

18:                                               ; preds = %15
  %19 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 0) acquire, align 8
  br label %20

20:                                               ; preds = %12, %17, %18
  %21 = phi i64 [ %13, %12 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 1, i64 0) to i64), %17 ], [ %19, %18 ]
  %22 = inttoptr i64 %21 to %class.scoped_refptr.1*
  %23 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %22, i64 0, i32 0
  %24 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %23, align 8
  %25 = icmp eq %"class.base::SingleThreadTaskRunner"* %24, null
  br i1 %25, label %26, label %57

26:                                               ; preds = %20
  %27 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %0, i64 0, i32 0
  %28 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %27, align 8
  %29 = icmp eq %"class.base::SingleThreadTaskRunner"* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %28, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 1 monotonic
  br label %33

33:                                               ; preds = %26, %30
  %34 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 0) acquire, align 8
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %41, label %36

36:                                               ; preds = %33
  %37 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 0)) #4
  br i1 %37, label %38, label %39

38:                                               ; preds = %36
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 1, i64 0) to %"class.base::SingleThreadTaskRunner"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI13scoped_refptrINS_22SingleThreadTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE to i8*)) #4
  br label %41

39:                                               ; preds = %36
  %40 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 0) acquire, align 8
  br label %41

41:                                               ; preds = %33, %38, %39
  %42 = phi i64 [ %34, %33 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 1, i64 0) to i64), %38 ], [ %40, %39 ]
  %43 = inttoptr i64 %42 to %class.scoped_refptr.1*
  %44 = ptrtoint %"class.base::SingleThreadTaskRunner"* %28 to i64
  %45 = inttoptr i64 %42 to i64*
  %46 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %43, i64 0, i32 0
  %47 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %46, align 8
  store i64 %44, i64* %45, align 8
  %48 = icmp eq %"class.base::SingleThreadTaskRunner"* %47, null
  br i1 %48, label %57, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %47, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw sub i32* %51, i32 1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %50, i64 -2
  %56 = bitcast %"class.base::RefCountedThreadSafe"* %55 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %56) #4
  br label %57

57:                                               ; preds = %20, %54, %49, %41
  %58 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance to %union.pthread_mutex_t*)) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SingleThreadTaskRunner"* @_ZN8download15GetIOTaskRunnerEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance) #4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance to %"class.base::internal::LockImpl"*)) #4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance) #4
  br label %7

7:                                                ; preds = %0, %3, %6
  %8 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance to %union.pthread_mutex_t*)) #4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %7
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* bitcast (%"class.base::NoDestructor"* @_ZZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance to %"class.base::internal::LockImpl"*)) #4
  br label %11

11:                                               ; preds = %7, %10
  %12 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 0) acquire, align 8
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %19, label %14

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 0)) #4
  br i1 %15, label %16, label %17

16:                                               ; preds = %14
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 1, i64 0) to %"class.base::SingleThreadTaskRunner"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI13scoped_refptrINS_22SingleThreadTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE to i8*)) #4
  br label %19

17:                                               ; preds = %14
  %18 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 0) acquire, align 8
  br label %19

19:                                               ; preds = %11, %16, %17
  %20 = phi i64 [ %12, %11 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN8download12_GLOBAL__N_116g_io_task_runnerE, i64 0, i32 1, i64 0) to i64), %16 ], [ %18, %17 ]
  %21 = inttoptr i64 %20 to %class.scoped_refptr.1*
  %22 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %21, i64 0, i32 0
  %23 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %22, align 8
  %24 = icmp eq %"class.base::SingleThreadTaskRunner"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %23, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %19, %25
  %29 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* bitcast (%"class.base::NoDestructor"* @_ZZN8download12_GLOBAL__N_119GetIOTaskRunnerLockEvE8instance to %union.pthread_mutex_t*)) #4
  ret %"class.base::SingleThreadTaskRunner"* %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8download33SetDownloadDBTaskRunnerForTestingERK13scoped_refptrIN4base19SequencedTaskRunnerEE(%class.scoped_refptr* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %3 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %2, align 8
  %4 = icmp eq %"class.base::SequencedTaskRunner"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic
  br label %8

8:                                                ; preds = %1, %5
  %9 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.2", %"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE, i64 0, i32 0) acquire, align 8
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.2", %"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE, i64 0, i32 0)) #4
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.2", %"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE, i64 0, i32 1, i64 0) to %"class.base::SequencedTaskRunner"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.2", %"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.2", %"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI13scoped_refptrINS_19SequencedTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE to i8*)) #4
  br label %16

14:                                               ; preds = %11
  %15 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.2", %"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE, i64 0, i32 0) acquire, align 8
  br label %16

16:                                               ; preds = %8, %13, %14
  %17 = phi i64 [ %9, %8 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.2", %"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE, i64 0, i32 1, i64 0) to i64), %13 ], [ %15, %14 ]
  %18 = inttoptr i64 %17 to %class.scoped_refptr*
  %19 = ptrtoint %"class.base::SequencedTaskRunner"* %3 to i64
  %20 = inttoptr i64 %17 to i64*
  %21 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %18, i64 0, i32 0
  %22 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %21, align 8
  store i64 %19, i64* %20, align 8
  %23 = icmp eq %"class.base::SequencedTaskRunner"* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %22, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw sub i32* %26, i32 1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %25, i64 -2
  %31 = bitcast %"class.base::RefCountedThreadSafe"* %30 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %31) #4
  br label %32

32:                                               ; preds = %16, %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SequencedTaskRunner"* @_ZN8download33GetDownloadDBTaskRunnerForTestingEv() local_unnamed_addr #0 {
  %1 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.2", %"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE, i64 0, i32 0) acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %8, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.2", %"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE, i64 0, i32 0)) #4
  br i1 %4, label %5, label %6

5:                                                ; preds = %3
  store %"class.base::SequencedTaskRunner"* null, %"class.base::SequencedTaskRunner"** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.2", %"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE, i64 0, i32 1, i64 0) to %"class.base::SequencedTaskRunner"**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.2", %"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.2", %"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceI13scoped_refptrINS_19SequencedTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE to i8*)) #4
  br label %8

6:                                                ; preds = %3
  %7 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.2", %"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE, i64 0, i32 0) acquire, align 8
  br label %8

8:                                                ; preds = %0, %5, %6
  %9 = phi i64 [ %1, %0 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.2", %"class.base::LazyInstance.2"* @_ZN8download12_GLOBAL__N_116g_db_task_runnerE, i64 0, i32 1, i64 0) to i64), %5 ], [ %7, %6 ]
  %10 = inttoptr i64 %9 to %class.scoped_refptr*
  %11 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %10, i64 0, i32 0
  %12 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %11, align 8
  %13 = icmp eq %"class.base::SequencedTaskRunner"* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %12, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  br label %17

17:                                               ; preds = %8, %14
  ret %"class.base::SequencedTaskRunner"* %12
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #1

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12LazyInstanceI13scoped_refptrINS_22SingleThreadTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = inttoptr i64 %3 to %class.scoped_refptr.1*
  %5 = getelementptr inbounds %class.scoped_refptr.1, %class.scoped_refptr.1* %4, i64 0, i32 0
  %6 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SingleThreadTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %6, i64 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #4
  br label %16

16:                                               ; preds = %1, %8, %13
  store atomic volatile i64 0, i64* %2 monotonic, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #1

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base12LazyInstanceI13scoped_refptrINS_19SequencedTaskRunnerEENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = inttoptr i64 %3 to %class.scoped_refptr*
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %6 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %5, align 8
  %7 = icmp eq %"class.base::SequencedTaskRunner"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe"* %14 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %15) #4
  br label %16

16:                                               ; preds = %1, %8, %13
  store atomic volatile i64 0, i64* %2 monotonic, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 2000, i32 1}
