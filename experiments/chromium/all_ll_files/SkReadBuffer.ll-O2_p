; ModuleID = '../../third_party/skia/src/core/SkReadBuffer.cpp'
source_filename = "../../third_party/skia/src/core/SkReadBuffer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp*, i32, [4 x i8], void (%class.sk_sp.7*, %class.SkReadBuffer*)**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.7*, %class.SkReadBuffer*)* }
%class.sk_sp.7 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkDeserialProcs = type { {}*, i8*, void (%class.sk_sp.9*, i8*, i64, i8*)*, i8*, void (%class.sk_sp*, i8*, i64, i8*)*, i8* }
%class.sk_sp.9 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.10, i32, i32 }
%class.sk_sp.10 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%class.SkString = type { %class.sk_sp.11 }
%class.sk_sp.11 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkRGBA4f = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%struct.SkPoint3 = type { float, float, float }
%class.SkM44 = type { [16 x float] }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%class.SkPath = type <{ %class.sk_sp.12, i32, %"struct.std::__1::atomic.2", %"struct.std::__1::atomic.2", i8, i8 }>
%class.sk_sp.12 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.13, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.14, %class.SkTDArray.15, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.13 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.14 = type { i8*, i32, i32 }
%class.SkTDArray.15 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.16 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.16 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.17", [3 x i8] }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i8 }
%class.sk_sp.21 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.22, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.22 = type { %"struct.std::__1::atomic" }
%class.SkImageGenerator = type <{ i32 (...)**, %struct.SkImageInfo, i32, [4 x i8] }>
%class.GrDirectContext = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkMipmapBuilder = type { %class.sk_sp.27 }
%class.sk_sp.27 = type { %class.SkMipmap* }
%class.SkMipmap = type <{ %class.SkCachedData.base, [6 x i8], %class.sk_sp.10, %"struct.SkMipmap::Level"*, i32, [4 x i8] }>
%class.SkCachedData.base = type <{ i32 (...)**, %class.SkMutex, %union.anon, i8*, i64, i32, i32, i8, i8 }>
%union.anon = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%"struct.SkMipmap::Level" = type { %class.SkPixmap, %struct.SkSize }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkSize = type { float, float }
%"class.(anonymous namespace)::EmptyImageGenerator" = type { %class.SkImageGenerator.base, [4 x i8] }
%class.SkImageGenerator.base = type <{ i32 (...)**, %struct.SkImageInfo, i32 }>
%"struct.SkImageGenerator::Options" = type { i8 }
%class.GrRecordingContext = type opaque
%"class.SkYUVAPixmapInfo::SupportedDataTypes" = type { %"class.std::__1::bitset" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%class.SkYUVAPixmapInfo = type <{ %class.SkYUVAInfo, %"struct.std::__1::array", %"struct.std::__1::array.40", i32, [4 x i8] }>
%class.SkYUVAInfo = type { %struct.SkISize, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array" = type { [4 x %struct.SkImageInfo] }
%"struct.std::__1::array.40" = type { [4 x i64] }
%class.SkYUVAPixmaps = type <{ %"struct.std::__1::array.41", %class.sk_sp.21, %class.SkYUVAInfo, i32, [4 x i8] }>
%"struct.std::__1::array.41" = type { [4 x %class.SkPixmap] }

$_ZN10SkTHashMapIjPF5sk_spI13SkFlattenableER12SkReadBufferE10SkGoodHashE3setEjS6_ = comdat any

$_ZN16SkImageGeneratorD2Ev = comdat any

$_ZN16SkImageGenerator16onRefEncodedDataEv = comdat any

$_ZN16SkImageGenerator11onGetPixelsERK11SkImageInfoPvmRKNS_7OptionsE = comdat any

$_ZNK16SkImageGenerator9onIsValidEP18GrRecordingContext = comdat any

$_ZNK16SkImageGenerator15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ = comdat any

$_ZN16SkImageGenerator15onGetYUVAPlanesERK13SkYUVAPixmaps = comdat any

$_ZN12SkTHashTableIN10SkTHashMapIjPF5sk_spI13SkFlattenableER12SkReadBufferE10SkGoodHashE4PairEjSA_E6resizeEi = comdat any

@constinit = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@_ZTVN12_GLOBAL__N_119EmptyImageGeneratorE = internal unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkImageGenerator*)* @_ZN16SkImageGeneratorD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::EmptyImageGenerator"*)* @_ZN12_GLOBAL__N_119EmptyImageGeneratorD0Ev to i8*), i8* bitcast (void (%class.sk_sp.21*, %class.SkImageGenerator*)* @_ZN16SkImageGenerator16onRefEncodedDataEv to i8*), i8* bitcast (i1 (%class.SkImageGenerator*, %struct.SkImageInfo*, i8*, i64, %"struct.SkImageGenerator::Options"*)* @_ZN16SkImageGenerator11onGetPixelsERK11SkImageInfoPvmRKNS_7OptionsE to i8*), i8* bitcast (i1 (%class.SkImageGenerator*, %class.GrRecordingContext*)* @_ZNK16SkImageGenerator9onIsValidEP18GrRecordingContext to i8*), i8* bitcast (i1 (%class.SkImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"*, %class.SkYUVAPixmapInfo*)* @_ZNK16SkImageGenerator15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_ to i8*), i8* bitcast (i1 (%class.SkImageGenerator*, %class.SkYUVAPixmaps*)* @_ZN16SkImageGenerator15onGetYUVAPlanesERK13SkYUVAPixmaps to i8*), i8* bitcast (void ()* @_ZN16SkImageGenerator17onGenerateTextureEP18GrRecordingContextRK11SkImageInfoRK8SkIPoint11GrMipmapped19GrImageTexGenPolicy to i8*)] }, align 8
@_ZTV16SkImageGenerator = external unnamed_addr constant { [10 x i8*] }, align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer9setMemoryEPKvm(%class.SkReadBuffer* nocapture, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = ptrtoint i8* %1 to i64
  %5 = and i64 %4, 3
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %9 = load i8, i8* %8, align 8, !range !2
  br label %16

10:                                               ; preds = %3
  %11 = add i64 %2, 3
  %12 = and i64 %11, -4
  %13 = icmp eq i64 %12, %2
  %14 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %15 = load i8, i8* %14, align 8, !range !2
  br i1 %13, label %25, label %16

16:                                               ; preds = %7, %10
  %17 = phi i8 [ %9, %7 ], [ %15, %10 ]
  %18 = phi i8* [ %8, %7 ], [ %14, %10 ]
  %19 = icmp eq i8 %17, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %23, i64* %24, align 8
  store i8 1, i8* %18, align 8
  br label %32

25:                                               ; preds = %10
  %26 = icmp eq i8 %15, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %25
  %28 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  store i8* %1, i8** %28, align 8
  %29 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 2
  store i8* %1, i8** %29, align 8
  %30 = getelementptr inbounds i8, i8* %1, i64 %2
  %31 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  store i8* %30, i8** %31, align 8
  br label %32

32:                                               ; preds = %16, %20, %25, %27
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer10setInvalidEv(%class.SkReadBuffer* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %7 = bitcast i8** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %8, i64* %9, align 8
  store i8 1, i8* %2, align 8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN12SkReadBuffer4skipEm(%class.SkReadBuffer* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = add i64 %1, 3
  %4 = and i64 %3, -4
  %5 = icmp ult i64 %4, %1
  %6 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  br i1 %5, label %7, label %15

7:                                                ; preds = %2
  %8 = load i8, i8* %6, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %7
  %11 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %13, i64* %14, align 8
  store i8 1, i8* %6, align 8
  br label %15

15:                                               ; preds = %2, %7, %10
  %16 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = ptrtoint i8* %17 to i64
  %19 = and i64 %18, 3
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %15
  %22 = load i8, i8* %6, align 8, !range !2
  br label %30

23:                                               ; preds = %15
  %24 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %26, %18
  %28 = icmp ult i64 %27, %4
  %29 = load i8, i8* %6, align 8, !range !2
  br i1 %28, label %30, label %38

30:                                               ; preds = %23, %21
  %31 = phi i8 [ %22, %21 ], [ %29, %23 ]
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %42

33:                                               ; preds = %30
  %34 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %36, i64* %37, align 8
  store i8 1, i8* %6, align 8
  br label %42

38:                                               ; preds = %23
  %39 = icmp eq i8 %29, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %38
  %41 = getelementptr inbounds i8, i8* %17, i64 %4
  store i8* %41, i8** %16, align 8
  br label %42

42:                                               ; preds = %30, %33, %38, %40
  %43 = phi i8* [ %17, %40 ], [ null, %38 ], [ null, %33 ], [ null, %30 ]
  ret i8* %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN12SkReadBuffer4skipEmm(%class.SkReadBuffer* nocapture, i64, i64) local_unnamed_addr #2 align 2 {
  %4 = tail call i64 @_ZN10SkSafeMath3MulEmm(i64 %1, i64 %2) #9
  %5 = add i64 %4, 3
  %6 = and i64 %5, -4
  %7 = icmp ult i64 %6, %4
  %8 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  br i1 %7, label %9, label %17

9:                                                ; preds = %3
  %10 = load i8, i8* %8, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %17

12:                                               ; preds = %9
  %13 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %15, i64* %16, align 8
  store i8 1, i8* %8, align 8
  br label %17

17:                                               ; preds = %12, %9, %3
  %18 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = ptrtoint i8* %19 to i64
  %21 = and i64 %20, 3
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = load i8, i8* %8, align 8, !range !2
  br label %32

25:                                               ; preds = %17
  %26 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %28, %20
  %30 = icmp ult i64 %29, %6
  %31 = load i8, i8* %8, align 8, !range !2
  br i1 %30, label %32, label %40

32:                                               ; preds = %25, %23
  %33 = phi i8 [ %24, %23 ], [ %31, %25 ]
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %44

35:                                               ; preds = %32
  %36 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %38, i64* %39, align 8
  store i8 1, i8* %8, align 8
  br label %44

40:                                               ; preds = %25
  %41 = icmp eq i8 %31, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = getelementptr inbounds i8, i8* %19, i64 %6
  store i8* %43, i8** %18, align 8
  br label %44

44:                                               ; preds = %32, %35, %40, %42
  %45 = phi i8* [ %19, %42 ], [ null, %40 ], [ null, %35 ], [ null, %32 ]
  ret i8* %45
}

declare i64 @_ZN10SkSafeMath3MulEmm(i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer16setDeserialProcsERK15SkDeserialProcs(%class.SkReadBuffer* nocapture, %struct.SkDeserialProcs* nocapture readonly dereferenceable(48)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 12
  %4 = bitcast %struct.SkDeserialProcs* %3 to i8*
  %5 = bitcast %struct.SkDeserialProcs* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 48, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkReadBuffer8readBoolEv(%class.SkReadBuffer* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %3 = bitcast %class.SkReadBuffer* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 3
  %6 = icmp eq i64 %5, 0
  %7 = inttoptr i64 %4 to i8*
  br i1 %6, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %10 = load i8, i8* %9, align 8, !range !2
  br label %19

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %4
  %16 = icmp ugt i64 %15, 3
  %17 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %18 = load i8, i8* %17, align 8, !range !2
  br i1 %16, label %27, label %19

19:                                               ; preds = %11, %8
  %20 = phi i8 [ %10, %8 ], [ %18, %11 ]
  %21 = phi i8* [ %9, %8 ], [ %17, %11 ]
  %22 = icmp eq i8 %20, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %3, align 8
  store i8 1, i8* %21, align 8
  br label %35

27:                                               ; preds = %11
  %28 = icmp eq i8 %18, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %27
  %30 = inttoptr i64 %4 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i8, i8* %7, i64 4
  store i8* %32, i8** %2, align 8
  %33 = icmp ult i32 %31, 2
  br i1 %33, label %35, label %34

34:                                               ; preds = %29
  store i64 %14, i64* %3, align 8
  store i8 1, i8* %17, align 8
  br label %35

35:                                               ; preds = %19, %23, %27, %29, %34
  %36 = phi i32 [ %31, %34 ], [ %31, %29 ], [ 0, %27 ], [ 0, %23 ], [ 0, %19 ]
  %37 = icmp ne i32 %36, 0
  ret i1 %37
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN12SkReadBuffer8readUIntEv(%class.SkReadBuffer* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %3 = bitcast %class.SkReadBuffer* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 3
  %6 = icmp eq i64 %5, 0
  %7 = inttoptr i64 %4 to i8*
  br i1 %6, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %10 = load i8, i8* %9, align 8, !range !2
  br label %19

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %4
  %16 = icmp ugt i64 %15, 3
  %17 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %18 = load i8, i8* %17, align 8, !range !2
  br i1 %16, label %27, label %19

19:                                               ; preds = %11, %8
  %20 = phi i8 [ %10, %8 ], [ %18, %11 ]
  %21 = phi i8* [ %9, %8 ], [ %17, %11 ]
  %22 = icmp eq i8 %20, 0
  br i1 %22, label %23, label %33

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %3, align 8
  store i8 1, i8* %21, align 8
  br label %33

27:                                               ; preds = %11
  %28 = icmp eq i8 %18, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = inttoptr i64 %4 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i8, i8* %7, i64 4
  store i8* %32, i8** %2, align 8
  br label %33

33:                                               ; preds = %19, %23, %27, %29
  %34 = phi i32 [ %31, %29 ], [ 0, %27 ], [ 0, %23 ], [ 0, %19 ]
  ret i32 %34
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN12SkReadBuffer9readColorEv(%class.SkReadBuffer* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %3 = bitcast %class.SkReadBuffer* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 3
  %6 = icmp eq i64 %5, 0
  %7 = inttoptr i64 %4 to i8*
  br i1 %6, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %10 = load i8, i8* %9, align 8, !range !2
  br label %19

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %4
  %16 = icmp ugt i64 %15, 3
  %17 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %18 = load i8, i8* %17, align 8, !range !2
  br i1 %16, label %27, label %19

19:                                               ; preds = %11, %8
  %20 = phi i8 [ %10, %8 ], [ %18, %11 ]
  %21 = phi i8* [ %9, %8 ], [ %17, %11 ]
  %22 = icmp eq i8 %20, 0
  br i1 %22, label %23, label %33

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %3, align 8
  store i8 1, i8* %21, align 8
  br label %33

27:                                               ; preds = %11
  %28 = icmp eq i8 %18, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = inttoptr i64 %4 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i8, i8* %7, i64 4
  store i8* %32, i8** %2, align 8
  br label %33

33:                                               ; preds = %19, %23, %27, %29
  %34 = phi i32 [ %31, %29 ], [ 0, %27 ], [ 0, %23 ], [ 0, %19 ]
  ret i32 %34
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN12SkReadBuffer7readIntEv(%class.SkReadBuffer* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %3 = bitcast %class.SkReadBuffer* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 3
  %6 = icmp eq i64 %5, 0
  %7 = inttoptr i64 %4 to i8*
  br i1 %6, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %10 = load i8, i8* %9, align 8, !range !2
  br label %19

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %4
  %16 = icmp ugt i64 %15, 3
  %17 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %18 = load i8, i8* %17, align 8, !range !2
  br i1 %16, label %27, label %19

19:                                               ; preds = %8, %11
  %20 = phi i8 [ %10, %8 ], [ %18, %11 ]
  %21 = phi i8* [ %9, %8 ], [ %17, %11 ]
  %22 = icmp eq i8 %20, 0
  br i1 %22, label %23, label %33

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %3, align 8
  store i8 1, i8* %21, align 8
  br label %33

27:                                               ; preds = %11
  %28 = icmp eq i8 %18, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = inttoptr i64 %4 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i8, i8* %7, i64 4
  store i8* %32, i8** %2, align 8
  br label %33

33:                                               ; preds = %19, %23, %27, %29
  %34 = phi i32 [ %31, %29 ], [ 0, %27 ], [ 0, %23 ], [ 0, %19 ]
  ret i32 %34
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %3 = bitcast %class.SkReadBuffer* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 3
  %6 = icmp eq i64 %5, 0
  %7 = inttoptr i64 %4 to i8*
  br i1 %6, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %10 = load i8, i8* %9, align 8, !range !2
  br label %19

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %4
  %16 = icmp ugt i64 %15, 3
  %17 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %18 = load i8, i8* %17, align 8, !range !2
  br i1 %16, label %27, label %19

19:                                               ; preds = %8, %11
  %20 = phi i8 [ %10, %8 ], [ %18, %11 ]
  %21 = phi i8* [ %9, %8 ], [ %17, %11 ]
  %22 = icmp eq i8 %20, 0
  br i1 %22, label %23, label %33

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %3, align 8
  store i8 1, i8* %21, align 8
  br label %33

27:                                               ; preds = %11
  %28 = icmp eq i8 %18, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = inttoptr i64 %4 to float*
  %31 = load float, float* %30, align 4
  %32 = getelementptr inbounds i8, i8* %7, i64 4
  store i8* %32, i8** %2, align 8
  br label %33

33:                                               ; preds = %19, %23, %27, %29
  %34 = phi float [ %31, %29 ], [ 0.000000e+00, %27 ], [ 0.000000e+00, %23 ], [ 0.000000e+00, %19 ]
  ret float %34
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN12SkReadBuffer6read32Ev(%class.SkReadBuffer* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %3 = bitcast %class.SkReadBuffer* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 3
  %6 = icmp eq i64 %5, 0
  %7 = inttoptr i64 %4 to i8*
  br i1 %6, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %10 = load i8, i8* %9, align 8, !range !2
  br label %19

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %4
  %16 = icmp ugt i64 %15, 3
  %17 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %18 = load i8, i8* %17, align 8, !range !2
  br i1 %16, label %27, label %19

19:                                               ; preds = %11, %8
  %20 = phi i8 [ %10, %8 ], [ %18, %11 ]
  %21 = phi i8* [ %9, %8 ], [ %17, %11 ]
  %22 = icmp eq i8 %20, 0
  br i1 %22, label %23, label %33

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %3, align 8
  store i8 1, i8* %21, align 8
  br label %33

27:                                               ; preds = %11
  %28 = icmp eq i8 %18, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = inttoptr i64 %4 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i8, i8* %7, i64 4
  store i8* %32, i8** %2, align 8
  br label %33

33:                                               ; preds = %19, %23, %27, %29
  %34 = phi i32 [ %31, %29 ], [ 0, %27 ], [ 0, %23 ], [ 0, %19 ]
  ret i32 %34
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i8 @_ZN12SkReadBuffer8peekByteEv(%class.SkReadBuffer* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %class.SkReadBuffer* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  store i8 1, i8* %9, align 8
  br label %13

10:                                               ; preds = %1
  %11 = inttoptr i64 %6 to i8*
  %12 = load i8, i8* %11, align 1
  br label %13

13:                                               ; preds = %10, %8
  %14 = phi i8 [ 0, %8 ], [ %12, %10 ]
  ret i8 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkReadBuffer9readPad32EPvm(%class.SkReadBuffer* nocapture, i8* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = add i64 %2, 3
  %5 = and i64 %4, -4
  %6 = icmp ult i64 %5, %2
  %7 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  br i1 %6, label %8, label %16

8:                                                ; preds = %3
  %9 = load i8, i8* %7, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %16

11:                                               ; preds = %8
  %12 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %14, i64* %15, align 8
  store i8 1, i8* %7, align 8
  br label %16

16:                                               ; preds = %11, %8, %3
  %17 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = ptrtoint i8* %18 to i64
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = load i8, i8* %7, align 8, !range !2
  br label %31

24:                                               ; preds = %16
  %25 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %27, %19
  %29 = icmp ult i64 %28, %5
  %30 = load i8, i8* %7, align 8, !range !2
  br i1 %29, label %31, label %39

31:                                               ; preds = %24, %22
  %32 = phi i8 [ %23, %22 ], [ %30, %24 ]
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %47

34:                                               ; preds = %31
  %35 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %37, i64* %38, align 8
  store i8 1, i8* %7, align 8
  br label %47

39:                                               ; preds = %24
  %40 = icmp eq i8 %30, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %39
  %42 = getelementptr inbounds i8, i8* %18, i64 %5
  store i8* %42, i8** %17, align 8
  %43 = icmp eq i8* %18, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = icmp eq i64 %2, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %44
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 1 %18, i64 %2, i1 false) #9
  br label %47

47:                                               ; preds = %31, %34, %39, %41, %44, %46
  %48 = phi i1 [ true, %46 ], [ true, %44 ], [ false, %41 ], [ false, %39 ], [ false, %34 ], [ false, %31 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN12SkReadBuffer10readStringEPm(%class.SkReadBuffer* nocapture, i64* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %4 = bitcast %class.SkReadBuffer* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 3
  %7 = icmp eq i64 %6, 0
  %8 = inttoptr i64 %5 to i8*
  br i1 %7, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %11 = load i8, i8* %10, align 8, !range !2
  br label %20

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %5
  %17 = icmp ugt i64 %16, 3
  %18 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %19 = load i8, i8* %18, align 8, !range !2
  br i1 %17, label %28, label %20

20:                                               ; preds = %12, %9
  %21 = phi i8 [ %11, %9 ], [ %19, %12 ]
  %22 = phi i8* [ %10, %9 ], [ %18, %12 ]
  %23 = icmp eq i8 %21, 0
  br i1 %23, label %24, label %35

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %4, align 8
  store i8 1, i8* %22, align 8
  br label %35

28:                                               ; preds = %12
  %29 = icmp eq i8 %19, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %28
  %31 = inttoptr i64 %5 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds i8, i8* %8, i64 4
  store i8* %33, i8** %3, align 8
  %34 = zext i32 %32 to i64
  br label %35

35:                                               ; preds = %20, %24, %28, %30
  %36 = phi i64 [ %34, %30 ], [ 0, %28 ], [ 0, %24 ], [ 0, %20 ]
  store i64 %36, i64* %1, align 8
  %37 = add nuw nsw i64 %36, 1
  %38 = tail call i64 @_ZN10SkSafeMath3MulEmm(i64 %37, i64 1) #9
  %39 = add i64 %38, 3
  %40 = and i64 %39, -4
  %41 = icmp ult i64 %40, %38
  %42 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  br i1 %41, label %43, label %51

43:                                               ; preds = %35
  %44 = load i8, i8* %42, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %51

46:                                               ; preds = %43
  %47 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %48 = bitcast i8** %47 to i64*
  %49 = load i64, i64* %48, align 8
  store i64 %49, i64* %4, align 8
  store i8 1, i8* %42, align 8
  %50 = inttoptr i64 %49 to i8*
  br label %53

51:                                               ; preds = %35, %43
  %52 = load i8*, i8** %3, align 8
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %50, %46 ]
  %55 = ptrtoint i8* %54 to i64
  %56 = and i64 %55, 3
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = load i8, i8* %42, align 8, !range !2
  br label %67

60:                                               ; preds = %53
  %61 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %62 = bitcast i8** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = sub i64 %63, %55
  %65 = icmp ult i64 %64, %40
  %66 = load i8, i8* %42, align 8, !range !2
  br i1 %65, label %67, label %74

67:                                               ; preds = %60, %58
  %68 = phi i8 [ %59, %58 ], [ %66, %60 ]
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %88

70:                                               ; preds = %67
  %71 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %72 = bitcast i8** %71 to i64*
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %4, align 8
  store i8 1, i8* %42, align 8
  br label %88

74:                                               ; preds = %60
  %75 = icmp eq i8 %66, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %74
  %77 = getelementptr inbounds i8, i8* %54, i64 %40
  store i8* %77, i8** %3, align 8
  %78 = icmp eq i8* %54, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %76
  %80 = load i64, i64* %1, align 8
  %81 = getelementptr inbounds i8, i8* %54, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %79, %76
  %85 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %86 = bitcast i8** %85 to i64*
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %4, align 8
  store i8 1, i8* %42, align 8
  br label %88

88:                                               ; preds = %84, %74, %70, %67, %79
  %89 = phi i8* [ %54, %79 ], [ null, %67 ], [ null, %70 ], [ null, %74 ], [ null, %84 ]
  ret i8* %89
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer10readStringEP8SkString(%class.SkReadBuffer* nocapture, %class.SkString*) local_unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  store i64 -6148914691236517206, i64* %3, align 8
  %5 = call i8* @_ZN12SkReadBuffer10readStringEPm(%class.SkReadBuffer* %0, i64* nonnull %3)
  %6 = icmp eq i8* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = load i64, i64* %3, align 8
  tail call void @_ZN8SkString3setEPKcm(%class.SkString* %1, i8* nonnull %5, i64 %8) #9
  br label %10

9:                                                ; preds = %2
  tail call void @_ZN8SkString5resetEv(%class.SkString* %1) #9
  br label %10

10:                                               ; preds = %7, %9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  ret void
}

declare void @_ZN8SkString3setEPKcm(%class.SkString*, i8*, i64) local_unnamed_addr #3

declare void @_ZN8SkString5resetEv(%class.SkString*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer11readColor4fEP8SkRGBA4fIL11SkAlphaType3EE(%class.SkReadBuffer* nocapture, %struct.SkRGBA4f* nocapture) local_unnamed_addr #2 align 2 {
  %3 = bitcast %struct.SkRGBA4f* %1 to i8*
  %4 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %5 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = ptrtoint i8* %6 to i64
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = load i8, i8* %4, align 8, !range !2
  br label %19

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %7
  %17 = icmp ult i64 %16, 16
  %18 = load i8, i8* %4, align 8, !range !2
  br i1 %17, label %19, label %27

19:                                               ; preds = %12, %10
  %20 = phi i8 [ %11, %10 ], [ %18, %12 ]
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %33

22:                                               ; preds = %19
  %23 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %25, i64* %26, align 8
  store i8 1, i8* %4, align 8
  br label %33

27:                                               ; preds = %12
  %28 = icmp eq i8 %18, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = getelementptr inbounds i8, i8* %6, i64 16
  store i8* %30, i8** %5, align 8
  %31 = icmp eq i8* %6, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* nonnull align 1 %6, i64 16, i1 false) #9
  br label %35

33:                                               ; preds = %29, %27, %22, %19
  %34 = bitcast %struct.SkRGBA4f* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 0, i64 16, i1 false)
  br label %35

35:                                               ; preds = %32, %33
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer9readPointEP7SkPoint(%class.SkReadBuffer* nocapture, %struct.SkPoint* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %4 = bitcast %class.SkReadBuffer* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 3
  %7 = icmp eq i64 %6, 0
  %8 = inttoptr i64 %5 to i8*
  br i1 %7, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %11 = load i8, i8* %10, align 8, !range !2
  br label %20

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %5
  %17 = icmp ugt i64 %16, 3
  %18 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %19 = load i8, i8* %18, align 8, !range !2
  br i1 %17, label %28, label %20

20:                                               ; preds = %12, %9
  %21 = phi i8 [ %11, %9 ], [ %19, %12 ]
  %22 = phi i8* [ %10, %9 ], [ %18, %12 ]
  %23 = icmp eq i8 %21, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %4, align 8
  store i8 1, i8* %22, align 8
  br label %34

28:                                               ; preds = %12
  %29 = icmp eq i8 %19, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %28
  %31 = inttoptr i64 %5 to float*
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds i8, i8* %8, i64 4
  store i8* %33, i8** %3, align 8
  br label %34

34:                                               ; preds = %20, %24, %28, %30
  %35 = phi float [ %32, %30 ], [ 0.000000e+00, %28 ], [ 0.000000e+00, %24 ], [ 0.000000e+00, %20 ]
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  store float %35, float* %36, align 4
  %37 = load i64, i64* %4, align 8
  %38 = and i64 %37, 3
  %39 = icmp eq i64 %38, 0
  %40 = inttoptr i64 %37 to i8*
  br i1 %39, label %44, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %43 = load i8, i8* %42, align 8, !range !2
  br label %52

44:                                               ; preds = %34
  %45 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %46 = bitcast i8** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %47, %37
  %49 = icmp ugt i64 %48, 3
  %50 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %51 = load i8, i8* %50, align 8, !range !2
  br i1 %49, label %60, label %52

52:                                               ; preds = %44, %41
  %53 = phi i8 [ %43, %41 ], [ %51, %44 ]
  %54 = phi i8* [ %42, %41 ], [ %50, %44 ]
  %55 = icmp eq i8 %53, 0
  br i1 %55, label %56, label %66

56:                                               ; preds = %52
  %57 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %4, align 8
  store i8 1, i8* %54, align 8
  br label %66

60:                                               ; preds = %44
  %61 = icmp eq i8 %51, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %60
  %63 = inttoptr i64 %37 to float*
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds i8, i8* %40, i64 4
  store i8* %65, i8** %3, align 8
  br label %66

66:                                               ; preds = %52, %56, %60, %62
  %67 = phi float [ %64, %62 ], [ 0.000000e+00, %60 ], [ 0.000000e+00, %56 ], [ 0.000000e+00, %52 ]
  %68 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  store float %67, float* %68, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer10readPoint3EP8SkPoint3(%class.SkReadBuffer* nocapture, %struct.SkPoint3* nocapture) local_unnamed_addr #2 align 2 {
  %3 = bitcast %struct.SkPoint3* %1 to i8*
  %4 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %5 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = ptrtoint i8* %6 to i64
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = load i8, i8* %4, align 8, !range !2
  br label %19

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %7
  %17 = icmp ult i64 %16, 12
  %18 = load i8, i8* %4, align 8, !range !2
  br i1 %17, label %19, label %27

19:                                               ; preds = %12, %10
  %20 = phi i8 [ %11, %10 ], [ %18, %12 ]
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %33

22:                                               ; preds = %19
  %23 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %25, i64* %26, align 8
  store i8 1, i8* %4, align 8
  br label %33

27:                                               ; preds = %12
  %28 = icmp eq i8 %18, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = getelementptr inbounds i8, i8* %6, i64 12
  store i8* %30, i8** %5, align 8
  %31 = icmp eq i8* %6, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* nonnull align 1 %6, i64 12, i1 false) #9
  br label %33

33:                                               ; preds = %19, %22, %27, %29, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer4readEP5SkM44(%class.SkReadBuffer* nocapture, %class.SkM44* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %44

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, 3
  %11 = icmp ne i64 %10, 0
  %12 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %9
  %16 = icmp ult i64 %15, 64
  %17 = or i1 %11, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %6
  %19 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %14, i64* %19, align 8
  store i8 1, i8* %3, align 8
  br label %44

20:                                               ; preds = %6
  %21 = getelementptr inbounds i8, i8* %8, i64 64
  store i8* %21, i8** %7, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %46, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds i8, i8* %8, i64 16
  %25 = getelementptr inbounds i8, i8* %8, i64 32
  %26 = getelementptr inbounds i8, i8* %8, i64 48
  %27 = bitcast i8* %8 to <4 x i32>*
  %28 = load <4 x i32>, <4 x i32>* %27, align 4, !noalias !3
  %29 = bitcast i8* %24 to <4 x i32>*
  %30 = load <4 x i32>, <4 x i32>* %29, align 4, !noalias !3
  %31 = bitcast i8* %25 to <4 x i32>*
  %32 = load <4 x i32>, <4 x i32>* %31, align 4, !noalias !3
  %33 = bitcast i8* %26 to <4 x i32>*
  %34 = load <4 x i32>, <4 x i32>* %33, align 4, !noalias !3
  %35 = bitcast %class.SkM44* %1 to <4 x i32>*
  store <4 x i32> %28, <4 x i32>* %35, align 4
  %36 = getelementptr inbounds %class.SkM44, %class.SkM44* %1, i64 0, i32 0, i64 4
  %37 = bitcast float* %36 to <4 x i32>*
  store <4 x i32> %30, <4 x i32>* %37, align 4
  %38 = getelementptr inbounds %class.SkM44, %class.SkM44* %1, i64 0, i32 0, i64 8
  %39 = bitcast float* %38 to <4 x i32>*
  store <4 x i32> %32, <4 x i32>* %39, align 4
  %40 = getelementptr inbounds %class.SkM44, %class.SkM44* %1, i64 0, i32 0, i64 12
  %41 = bitcast float* %40 to <4 x i32>*
  store <4 x i32> %34, <4 x i32>* %41, align 4
  %42 = load i8, i8* %3, align 8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %2, %18, %23
  %45 = bitcast %class.SkM44* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* nonnull align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false)
  br label %46

46:                                               ; preds = %20, %44, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer10readMatrixEP8SkMatrix(%class.SkReadBuffer* nocapture, %class.SkMatrix*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %27

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.SkReadBuffer* %0 to i64*
  %13 = ptrtoint i8* %8 to i64
  %14 = sub i64 %11, %13
  %15 = tail call i64 @_ZN8SkMatrix14readFromMemoryEPKvm(%class.SkMatrix* %1, i8* %8, i64 %14) #9
  %16 = add i64 %15, 3
  %17 = and i64 %16, -4
  %18 = icmp eq i64 %17, %15
  %19 = icmp ne i64 %15, 0
  %20 = and i1 %19, %18
  %21 = load i8, i8* %3, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %20, label %26, label %23

23:                                               ; preds = %6
  br i1 %22, label %24, label %27

24:                                               ; preds = %23
  %25 = load i64, i64* %10, align 8
  store i64 %25, i64* %12, align 8
  store i8 1, i8* %3, align 8
  br label %27

26:                                               ; preds = %6
  br i1 %22, label %32, label %27

27:                                               ; preds = %2, %23, %24, %26
  %28 = phi i64 [ %15, %26 ], [ %15, %24 ], [ %15, %23 ], [ 0, %2 ]
  %29 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* %1) #9
  %30 = add i64 %28, 3
  %31 = and i64 %30, -4
  br label %32

32:                                               ; preds = %27, %26
  %33 = phi i64 [ %31, %27 ], [ %17, %26 ]
  %34 = phi i64 [ %28, %27 ], [ %15, %26 ]
  %35 = icmp ult i64 %33, %34
  br i1 %35, label %36, label %44

36:                                               ; preds = %32
  %37 = load i8, i8* %3, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %36
  %40 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %41 = bitcast i8** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %42, i64* %43, align 8
  store i8 1, i8* %3, align 8
  br label %44

44:                                               ; preds = %39, %36, %32
  %45 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = ptrtoint i8* %46 to i64
  %48 = and i64 %47, 3
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %44
  %51 = load i8, i8* %3, align 8, !range !2
  br label %59

52:                                               ; preds = %44
  %53 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %54 = bitcast i8** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %55, %47
  %57 = icmp ult i64 %56, %33
  %58 = load i8, i8* %3, align 8, !range !2
  br i1 %57, label %59, label %67

59:                                               ; preds = %52, %50
  %60 = phi i8 [ %51, %50 ], [ %58, %52 ]
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %71

62:                                               ; preds = %59
  %63 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %64 = bitcast i8** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %65, i64* %66, align 8
  store i8 1, i8* %3, align 8
  br label %71

67:                                               ; preds = %52
  %68 = icmp eq i8 %58, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = getelementptr inbounds i8, i8* %46, i64 %33
  store i8* %70, i8** %45, align 8
  br label %71

71:                                               ; preds = %59, %62, %67, %69
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer9readIRectEP7SkIRect(%class.SkReadBuffer* nocapture, %struct.SkIRect* nocapture) local_unnamed_addr #2 align 2 {
  %3 = bitcast %struct.SkIRect* %1 to i8*
  %4 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %5 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = ptrtoint i8* %6 to i64
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = load i8, i8* %4, align 8, !range !2
  br label %19

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %7
  %17 = icmp ult i64 %16, 16
  %18 = load i8, i8* %4, align 8, !range !2
  br i1 %17, label %19, label %27

19:                                               ; preds = %12, %10
  %20 = phi i8 [ %11, %10 ], [ %18, %12 ]
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %33

22:                                               ; preds = %19
  %23 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %25, i64* %26, align 8
  store i8 1, i8* %4, align 8
  br label %33

27:                                               ; preds = %12
  %28 = icmp eq i8 %18, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = getelementptr inbounds i8, i8* %6, i64 16
  store i8* %30, i8** %5, align 8
  %31 = icmp eq i8* %6, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* nonnull align 1 %6, i64 16, i1 false) #9
  br label %34

33:                                               ; preds = %29, %27, %22, %19
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 16, i1 false) #9
  br label %34

34:                                               ; preds = %32, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer8readRectEP6SkRect(%class.SkReadBuffer* nocapture, %struct.SkRect* nocapture) local_unnamed_addr #2 align 2 {
  %3 = bitcast %struct.SkRect* %1 to i8*
  %4 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %5 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = ptrtoint i8* %6 to i64
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = load i8, i8* %4, align 8, !range !2
  br label %19

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %7
  %17 = icmp ult i64 %16, 16
  %18 = load i8, i8* %4, align 8, !range !2
  br i1 %17, label %19, label %27

19:                                               ; preds = %12, %10
  %20 = phi i8 [ %11, %10 ], [ %18, %12 ]
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %33

22:                                               ; preds = %19
  %23 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %25, i64* %26, align 8
  store i8 1, i8* %4, align 8
  br label %33

27:                                               ; preds = %12
  %28 = icmp eq i8 %18, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %27
  %30 = getelementptr inbounds i8, i8* %6, i64 16
  store i8* %30, i8** %5, align 8
  %31 = icmp eq i8* %6, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %3, i8* nonnull align 1 %6, i64 16, i1 false) #9
  br label %34

33:                                               ; preds = %29, %27, %22, %19
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 16, i1 false) #9
  br label %34

34:                                               ; preds = %32, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN12SkReadBuffer8readRectEv(%class.SkReadBuffer* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %3 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = ptrtoint i8* %4 to i64
  %6 = and i64 %5, 3
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = load i8, i8* %2, align 8, !range !2
  br label %17

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %5
  %15 = icmp ult i64 %14, 16
  %16 = load i8, i8* %2, align 8, !range !2
  br i1 %15, label %17, label %25

17:                                               ; preds = %10, %8
  %18 = phi i8 [ %9, %8 ], [ %16, %10 ]
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %36

20:                                               ; preds = %17
  %21 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %23, i64* %24, align 8
  store i8 1, i8* %2, align 8
  br label %36

25:                                               ; preds = %10
  %26 = icmp eq i8 %16, 0
  br i1 %26, label %27, label %36

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %4, i64 16
  store i8* %28, i8** %3, align 8
  %29 = icmp eq i8* %4, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %27
  %31 = bitcast i8* %4 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 1
  %33 = getelementptr inbounds i8, i8* %4, i64 8
  %34 = bitcast i8* %33 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 1
  br label %36

36:                                               ; preds = %17, %20, %25, %27, %30
  %37 = phi <2 x float> [ %35, %30 ], [ zeroinitializer, %27 ], [ zeroinitializer, %25 ], [ zeroinitializer, %20 ], [ zeroinitializer, %17 ]
  %38 = phi <2 x float> [ %32, %30 ], [ zeroinitializer, %27 ], [ zeroinitializer, %25 ], [ zeroinitializer, %20 ], [ zeroinitializer, %17 ]
  %39 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %38, 0
  %40 = insertvalue { <2 x float>, <2 x float> } %39, <2 x float> %37, 1
  ret { <2 x float>, <2 x float> } %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer12readSamplingEv(%struct.SkSamplingOptions* noalias nocapture sret, %class.SkReadBuffer*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 0
  %4 = bitcast %class.SkReadBuffer* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 3
  %7 = icmp eq i64 %6, 0
  %8 = inttoptr i64 %5 to i8*
  br i1 %7, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %11 = load i8, i8* %10, align 8, !range !2
  br label %20

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %5
  %17 = icmp ugt i64 %16, 3
  %18 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %19 = load i8, i8* %18, align 8, !range !2
  br i1 %17, label %28, label %20

20:                                               ; preds = %12, %9
  %21 = phi i8 [ %11, %9 ], [ %19, %12 ]
  %22 = phi i8* [ %10, %9 ], [ %18, %12 ]
  %23 = icmp eq i8 %21, 0
  br i1 %23, label %24, label %80

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %4, align 8
  store i8 1, i8* %22, align 8
  br label %80

28:                                               ; preds = %12
  %29 = icmp eq i8 %19, 0
  br i1 %29, label %30, label %80

30:                                               ; preds = %28
  %31 = inttoptr i64 %5 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds i8, i8* %8, i64 4
  store i8* %33, i8** %3, align 8
  %34 = icmp ult i32 %32, 2
  %35 = ptrtoint i8* %33 to i64
  br i1 %34, label %37, label %36

36:                                               ; preds = %30
  store i64 %15, i64* %4, align 8
  store i8 1, i8* %18, align 8
  br label %39

37:                                               ; preds = %30
  %38 = icmp eq i32 %32, 0
  br i1 %38, label %80, label %39

39:                                               ; preds = %37, %36
  %40 = phi i64 [ %35, %37 ], [ %15, %36 ]
  %41 = phi i1 [ true, %37 ], [ false, %36 ]
  %42 = and i64 %40, 3
  %43 = icmp eq i64 %42, 0
  %44 = inttoptr i64 %40 to i8*
  %45 = sub i64 %15, %40
  %46 = icmp ugt i64 %45, 3
  %47 = and i1 %43, %46
  br i1 %47, label %50, label %48

48:                                               ; preds = %39
  br i1 %41, label %49, label %56

49:                                               ; preds = %48
  store i64 %15, i64* %4, align 8
  store i8 1, i8* %18, align 8
  br label %56

50:                                               ; preds = %39
  br i1 %41, label %51, label %56

51:                                               ; preds = %50
  %52 = inttoptr i64 %40 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds i8, i8* %44, i64 4
  store i8* %54, i8** %3, align 8
  %55 = ptrtoint i8* %54 to i64
  br label %56

56:                                               ; preds = %48, %49, %50, %51
  %57 = phi i1 [ true, %51 ], [ false, %50 ], [ false, %49 ], [ false, %48 ]
  %58 = phi i64 [ %55, %51 ], [ %40, %50 ], [ %15, %49 ], [ %40, %48 ]
  %59 = phi i32 [ %53, %51 ], [ 0, %50 ], [ 0, %49 ], [ 0, %48 ]
  %60 = and i64 %58, 3
  %61 = icmp eq i64 %60, 0
  %62 = inttoptr i64 %58 to i8*
  %63 = sub i64 %15, %58
  %64 = icmp ugt i64 %63, 3
  %65 = and i1 %61, %64
  br i1 %65, label %68, label %66

66:                                               ; preds = %56
  br i1 %57, label %67, label %73

67:                                               ; preds = %66
  store i64 %15, i64* %4, align 8
  store i8 1, i8* %18, align 8
  br label %73

68:                                               ; preds = %56
  br i1 %57, label %69, label %73

69:                                               ; preds = %68
  %70 = inttoptr i64 %58 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds i8, i8* %62, i64 4
  store i8* %72, i8** %3, align 8
  br label %73

73:                                               ; preds = %66, %67, %68, %69
  %74 = phi i32 [ %71, %69 ], [ 0, %68 ], [ 0, %67 ], [ 0, %66 ]
  %75 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 0
  store i8 1, i8* %75, align 4
  %76 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 1
  %77 = bitcast %struct.SkCubicResampler* %76 to i32*
  store i32 %59, i32* %77, align 4
  %78 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 1, i32 1
  %79 = bitcast float* %78 to i32*
  store i32 %74, i32* %79, align 4
  br label %147

80:                                               ; preds = %37, %20, %24, %28
  %81 = phi i64 [ %35, %37 ], [ %5, %20 ], [ %27, %24 ], [ %5, %28 ]
  %82 = phi i8 [ 0, %37 ], [ 1, %20 ], [ 1, %24 ], [ 1, %28 ]
  %83 = and i64 %81, 3
  %84 = icmp eq i64 %83, 0
  %85 = inttoptr i64 %81 to i8*
  br i1 %84, label %88, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  br label %95

88:                                               ; preds = %80
  %89 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %90 = bitcast i8** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %91, %81
  %93 = icmp ugt i64 %92, 3
  %94 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  br i1 %93, label %102, label %95

95:                                               ; preds = %88, %86
  %96 = phi i8* [ %87, %86 ], [ %94, %88 ]
  %97 = icmp eq i8 %82, 0
  br i1 %97, label %98, label %111

98:                                               ; preds = %95
  %99 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %100 = bitcast i8** %99 to i64*
  %101 = load i64, i64* %100, align 8
  store i64 %101, i64* %4, align 8
  store i8 1, i8* %96, align 8
  br label %111

102:                                              ; preds = %88
  %103 = icmp eq i8 %82, 0
  br i1 %103, label %104, label %111

104:                                              ; preds = %102
  %105 = inttoptr i64 %81 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds i8, i8* %85, i64 4
  store i8* %107, i8** %3, align 8
  %108 = icmp ugt i32 %106, 1
  %109 = ptrtoint i8* %107 to i64
  br i1 %108, label %110, label %111

110:                                              ; preds = %104
  store i64 %91, i64* %4, align 8
  store i8 1, i8* %94, align 8
  br label %111

111:                                              ; preds = %95, %98, %102, %104, %110
  %112 = phi i8 [ 1, %110 ], [ 0, %104 ], [ 1, %102 ], [ 1, %98 ], [ 1, %95 ]
  %113 = phi i64 [ %91, %110 ], [ %109, %104 ], [ %81, %102 ], [ %101, %98 ], [ %81, %95 ]
  %114 = phi i32 [ 0, %110 ], [ %106, %104 ], [ 0, %102 ], [ 0, %98 ], [ 0, %95 ]
  %115 = and i64 %113, 3
  %116 = icmp eq i64 %115, 0
  %117 = inttoptr i64 %113 to i8*
  br i1 %116, label %120, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  br label %127

120:                                              ; preds = %111
  %121 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %122 = bitcast i8** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = sub i64 %123, %113
  %125 = icmp ugt i64 %124, 3
  %126 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  br i1 %125, label %134, label %127

127:                                              ; preds = %120, %118
  %128 = phi i8* [ %119, %118 ], [ %126, %120 ]
  %129 = icmp eq i8 %112, 0
  br i1 %129, label %130, label %142

130:                                              ; preds = %127
  %131 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %132 = bitcast i8** %131 to i64*
  %133 = load i64, i64* %132, align 8
  store i64 %133, i64* %4, align 8
  store i8 1, i8* %128, align 8
  br label %142

134:                                              ; preds = %120
  %135 = icmp eq i8 %112, 0
  br i1 %135, label %136, label %142

136:                                              ; preds = %134
  %137 = inttoptr i64 %113 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds i8, i8* %117, i64 4
  store i8* %139, i8** %3, align 8
  %140 = icmp ugt i32 %138, 2
  br i1 %140, label %141, label %142

141:                                              ; preds = %136
  store i64 %123, i64* %4, align 8
  store i8 1, i8* %126, align 8
  br label %142

142:                                              ; preds = %127, %130, %134, %136, %141
  %143 = phi i32 [ 0, %141 ], [ %138, %136 ], [ 0, %134 ], [ 0, %130 ], [ 0, %127 ]
  %144 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 0
  store i8 0, i8* %144, align 4
  %145 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %145, align 4
  %146 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %146, align 4
  br label %147

147:                                              ; preds = %142, %73
  %148 = phi i32 [ %114, %142 ], [ 0, %73 ]
  %149 = phi i32 [ %143, %142 ], [ 0, %73 ]
  %150 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 2
  store i32 %148, i32* %150, align 4
  %151 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %0, i64 0, i32 3
  store i32 %149, i32* %151, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer9readRRectEP7SkRRect(%class.SkReadBuffer* nocapture, %class.SkRRect*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %36

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.SkReadBuffer* %0 to i64*
  %13 = ptrtoint i8* %8 to i64
  %14 = sub i64 %11, %13
  %15 = tail call i64 @_ZN7SkRRect14readFromMemoryEPKvm(%class.SkRRect* %1, i8* %8, i64 %14) #9
  %16 = add i64 %15, 3
  %17 = and i64 %16, -4
  %18 = icmp eq i64 %17, %15
  %19 = icmp ne i64 %15, 0
  %20 = and i1 %19, %18
  %21 = load i8, i8* %3, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %20, label %26, label %23

23:                                               ; preds = %6
  br i1 %22, label %24, label %27

24:                                               ; preds = %23
  %25 = load i64, i64* %10, align 8
  store i64 %25, i64* %12, align 8
  store i8 1, i8* %3, align 8
  br label %27

26:                                               ; preds = %6
  br i1 %22, label %29, label %27

27:                                               ; preds = %23, %24, %26
  %28 = bitcast %class.SkRRect* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 52, i1 false) #9
  br label %29

29:                                               ; preds = %26, %27
  %30 = icmp ult i64 %17, %15
  br i1 %30, label %31, label %36

31:                                               ; preds = %29
  %32 = load i8, i8* %3, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  %35 = load i64, i64* %10, align 8
  store i64 %35, i64* %12, align 8
  store i8 1, i8* %3, align 8
  br label %36

36:                                               ; preds = %2, %34, %31, %29
  %37 = phi i64 [ %17, %34 ], [ %17, %31 ], [ %17, %29 ], [ 0, %2 ]
  %38 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = ptrtoint i8* %39 to i64
  %41 = and i64 %40, 3
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %36
  %44 = load i8, i8* %3, align 8, !range !2
  br label %52

45:                                               ; preds = %36
  %46 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %48, %40
  %50 = icmp ult i64 %49, %37
  %51 = load i8, i8* %3, align 8, !range !2
  br i1 %50, label %52, label %60

52:                                               ; preds = %45, %43
  %53 = phi i8 [ %44, %43 ], [ %51, %45 ]
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %64

55:                                               ; preds = %52
  %56 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %58, i64* %59, align 8
  store i8 1, i8* %3, align 8
  br label %64

60:                                               ; preds = %45
  %61 = icmp eq i8 %51, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = getelementptr inbounds i8, i8* %39, i64 %37
  store i8* %63, i8** %38, align 8
  br label %64

64:                                               ; preds = %52, %55, %60, %62
  ret void
}

declare i64 @_ZN7SkRRect14readFromMemoryEPKvm(%class.SkRRect*, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer10readRegionEP8SkRegion(%class.SkReadBuffer* nocapture, %class.SkRegion*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %36

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.SkReadBuffer* %0 to i64*
  %13 = ptrtoint i8* %8 to i64
  %14 = sub i64 %11, %13
  %15 = tail call i64 @_ZN8SkRegion14readFromMemoryEPKvm(%class.SkRegion* %1, i8* %8, i64 %14) #9
  %16 = add i64 %15, 3
  %17 = and i64 %16, -4
  %18 = icmp eq i64 %17, %15
  %19 = icmp ne i64 %15, 0
  %20 = and i1 %19, %18
  %21 = load i8, i8* %3, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %20, label %26, label %23

23:                                               ; preds = %6
  br i1 %22, label %24, label %27

24:                                               ; preds = %23
  %25 = load i64, i64* %10, align 8
  store i64 %25, i64* %12, align 8
  store i8 1, i8* %3, align 8
  br label %27

26:                                               ; preds = %6
  br i1 %22, label %29, label %27

27:                                               ; preds = %23, %24, %26
  %28 = tail call zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion* %1) #9
  br label %29

29:                                               ; preds = %26, %27
  %30 = icmp ult i64 %17, %15
  br i1 %30, label %31, label %36

31:                                               ; preds = %29
  %32 = load i8, i8* %3, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  %35 = load i64, i64* %10, align 8
  store i64 %35, i64* %12, align 8
  store i8 1, i8* %3, align 8
  br label %36

36:                                               ; preds = %2, %34, %31, %29
  %37 = phi i64 [ %17, %34 ], [ %17, %31 ], [ %17, %29 ], [ 0, %2 ]
  %38 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = ptrtoint i8* %39 to i64
  %41 = and i64 %40, 3
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %36
  %44 = load i8, i8* %3, align 8, !range !2
  br label %52

45:                                               ; preds = %36
  %46 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %48, %40
  %50 = icmp ult i64 %49, %37
  %51 = load i8, i8* %3, align 8, !range !2
  br i1 %50, label %52, label %60

52:                                               ; preds = %45, %43
  %53 = phi i8 [ %44, %43 ], [ %51, %45 ]
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %64

55:                                               ; preds = %52
  %56 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %58, i64* %59, align 8
  store i8 1, i8* %3, align 8
  br label %64

60:                                               ; preds = %45
  %61 = icmp eq i8 %51, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = getelementptr inbounds i8, i8* %39, i64 %37
  store i8* %63, i8** %38, align 8
  br label %64

64:                                               ; preds = %52, %55, %60, %62
  ret void
}

declare i64 @_ZN8SkRegion14readFromMemoryEPKvm(%class.SkRegion*, i8*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer8readPathEP6SkPath(%class.SkReadBuffer* nocapture, %class.SkPath*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %36

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %class.SkReadBuffer* %0 to i64*
  %13 = ptrtoint i8* %8 to i64
  %14 = sub i64 %11, %13
  %15 = tail call i64 @_ZN6SkPath14readFromMemoryEPKvm(%class.SkPath* %1, i8* %8, i64 %14) #9
  %16 = add i64 %15, 3
  %17 = and i64 %16, -4
  %18 = icmp eq i64 %17, %15
  %19 = icmp ne i64 %15, 0
  %20 = and i1 %19, %18
  %21 = load i8, i8* %3, align 8, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %20, label %26, label %23

23:                                               ; preds = %6
  br i1 %22, label %24, label %27

24:                                               ; preds = %23
  %25 = load i64, i64* %10, align 8
  store i64 %25, i64* %12, align 8
  store i8 1, i8* %3, align 8
  br label %27

26:                                               ; preds = %6
  br i1 %22, label %29, label %27

27:                                               ; preds = %23, %24, %26
  %28 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %1) #9
  br label %29

29:                                               ; preds = %26, %27
  %30 = icmp ult i64 %17, %15
  br i1 %30, label %31, label %36

31:                                               ; preds = %29
  %32 = load i8, i8* %3, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  %35 = load i64, i64* %10, align 8
  store i64 %35, i64* %12, align 8
  store i8 1, i8* %3, align 8
  br label %36

36:                                               ; preds = %2, %34, %31, %29
  %37 = phi i64 [ %17, %34 ], [ %17, %31 ], [ %17, %29 ], [ 0, %2 ]
  %38 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = ptrtoint i8* %39 to i64
  %41 = and i64 %40, 3
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %36
  %44 = load i8, i8* %3, align 8, !range !2
  br label %52

45:                                               ; preds = %36
  %46 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = sub i64 %48, %40
  %50 = icmp ult i64 %49, %37
  %51 = load i8, i8* %3, align 8, !range !2
  br i1 %50, label %52, label %60

52:                                               ; preds = %45, %43
  %53 = phi i8 [ %44, %43 ], [ %51, %45 ]
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %64

55:                                               ; preds = %52
  %56 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %class.SkReadBuffer* %0 to i64*
  store i64 %58, i64* %59, align 8
  store i8 1, i8* %3, align 8
  br label %64

60:                                               ; preds = %45
  %61 = icmp eq i8 %51, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %60
  %63 = getelementptr inbounds i8, i8* %39, i64 %37
  store i8* %63, i8** %38, align 8
  br label %64

64:                                               ; preds = %52, %55, %60, %62
  ret void
}

declare i64 @_ZN6SkPath14readFromMemoryEPKvm(%class.SkPath*, i8*, i64) local_unnamed_addr #3

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkReadBuffer9readArrayEPvmm(%class.SkReadBuffer* nocapture, i8* nocapture, i64, i64) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %6 = bitcast %class.SkReadBuffer* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 0
  %10 = inttoptr i64 %7 to i8*
  br i1 %9, label %14, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %13 = load i8, i8* %12, align 8, !range !2
  br label %22

14:                                               ; preds = %4
  %15 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = icmp ugt i64 %18, 3
  %20 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %21 = load i8, i8* %20, align 8, !range !2
  br i1 %19, label %30, label %22

22:                                               ; preds = %14, %11
  %23 = phi i8 [ %13, %11 ], [ %21, %14 ]
  %24 = phi i8* [ %12, %11 ], [ %20, %14 ]
  %25 = icmp eq i8 %23, 0
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %6, align 8
  store i8 1, i8* %24, align 8
  br label %37

30:                                               ; preds = %14
  %31 = icmp eq i8 %21, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %30
  %33 = inttoptr i64 %7 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds i8, i8* %10, i64 4
  store i8* %35, i8** %5, align 8
  %36 = zext i32 %34 to i64
  br label %37

37:                                               ; preds = %22, %26, %30, %32
  %38 = phi i1 [ true, %32 ], [ false, %30 ], [ false, %26 ], [ false, %22 ]
  %39 = phi i64 [ %36, %32 ], [ 0, %30 ], [ 0, %26 ], [ 0, %22 ]
  %40 = icmp eq i64 %39, %2
  %41 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  br i1 %40, label %47, label %42

42:                                               ; preds = %37
  br i1 %38, label %43, label %92

43:                                               ; preds = %42
  %44 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %6, align 8
  store i8 1, i8* %41, align 8
  br label %92

47:                                               ; preds = %37
  br i1 %38, label %48, label %92

48:                                               ; preds = %47
  %49 = tail call i64 @_ZN10SkSafeMath3MulEmm(i64 %2, i64 %3) #9
  %50 = add i64 %49, 3
  %51 = and i64 %50, -4
  %52 = icmp ult i64 %51, %49
  br i1 %52, label %53, label %61

53:                                               ; preds = %48
  %54 = load i8, i8* %41, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %53
  %57 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %6, align 8
  store i8 1, i8* %41, align 8
  %60 = inttoptr i64 %59 to i8*
  br label %63

61:                                               ; preds = %48, %53
  %62 = load i8*, i8** %5, align 8
  br label %63

63:                                               ; preds = %61, %56
  %64 = phi i8* [ %62, %61 ], [ %60, %56 ]
  %65 = ptrtoint i8* %64 to i64
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  %69 = load i8, i8* %41, align 8, !range !2
  br label %77

70:                                               ; preds = %63
  %71 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %72 = bitcast i8** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %73, %65
  %75 = icmp ult i64 %74, %51
  %76 = load i8, i8* %41, align 8, !range !2
  br i1 %75, label %77, label %84

77:                                               ; preds = %70, %68
  %78 = phi i8 [ %69, %68 ], [ %76, %70 ]
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %92

80:                                               ; preds = %77
  %81 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %82 = bitcast i8** %81 to i64*
  %83 = load i64, i64* %82, align 8
  store i64 %83, i64* %6, align 8
  store i8 1, i8* %41, align 8
  br label %92

84:                                               ; preds = %70
  %85 = icmp eq i8 %76, 0
  br i1 %85, label %86, label %92

86:                                               ; preds = %84
  %87 = getelementptr inbounds i8, i8* %64, i64 %51
  store i8* %87, i8** %5, align 8
  %88 = icmp eq i8* %64, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %86
  %90 = icmp eq i64 %49, 0
  br i1 %90, label %92, label %91

91:                                               ; preds = %89
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 1 %64, i64 %49, i1 false) #9
  br label %92

92:                                               ; preds = %42, %43, %91, %89, %86, %84, %80, %77, %47
  %93 = phi i1 [ false, %47 ], [ true, %91 ], [ true, %89 ], [ false, %86 ], [ false, %84 ], [ false, %80 ], [ false, %77 ], [ false, %43 ], [ false, %42 ]
  ret i1 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkReadBuffer13readByteArrayEPvm(%class.SkReadBuffer* nocapture, i8* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = tail call zeroext i1 @_ZN12SkReadBuffer9readArrayEPvmm(%class.SkReadBuffer* %0, i8* %1, i64 %2, i64 1)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkReadBuffer14readColorArrayEPjm(%class.SkReadBuffer* nocapture, i32* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = bitcast i32* %1 to i8*
  %5 = tail call zeroext i1 @_ZN12SkReadBuffer9readArrayEPvmm(%class.SkReadBuffer* %0, i8* %4, i64 %2, i64 4)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkReadBuffer16readColor4fArrayEP8SkRGBA4fIL11SkAlphaType3EEm(%class.SkReadBuffer* nocapture, %struct.SkRGBA4f* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = bitcast %struct.SkRGBA4f* %1 to i8*
  %5 = tail call zeroext i1 @_ZN12SkReadBuffer9readArrayEPvmm(%class.SkReadBuffer* %0, i8* %4, i64 %2, i64 16)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkReadBuffer12readIntArrayEPim(%class.SkReadBuffer* nocapture, i32* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = bitcast i32* %1 to i8*
  %5 = tail call zeroext i1 @_ZN12SkReadBuffer9readArrayEPvmm(%class.SkReadBuffer* %0, i8* %4, i64 %2, i64 4)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkReadBuffer14readPointArrayEP7SkPointm(%class.SkReadBuffer* nocapture, %struct.SkPoint* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = bitcast %struct.SkPoint* %1 to i8*
  %5 = tail call zeroext i1 @_ZN12SkReadBuffer9readArrayEPvmm(%class.SkReadBuffer* %0, i8* %4, i64 %2, i64 8)
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkReadBuffer15readScalarArrayEPfm(%class.SkReadBuffer* nocapture, float* nocapture, i64) local_unnamed_addr #2 align 2 {
  %4 = bitcast float* %1 to i8*
  %5 = tail call zeroext i1 @_ZN12SkReadBuffer9readArrayEPvmm(%class.SkReadBuffer* %0, i8* %4, i64 %2, i64 4)
  ret i1 %5
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZN12SkReadBuffer13skipByteArrayEPm(%class.SkReadBuffer* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %4 = bitcast %class.SkReadBuffer* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 3
  %7 = icmp eq i64 %6, 0
  %8 = inttoptr i64 %5 to i8*
  br i1 %7, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %11 = load i8, i8* %10, align 8, !range !2
  br label %20

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %5
  %17 = icmp ugt i64 %16, 3
  %18 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %19 = load i8, i8* %18, align 8, !range !2
  br i1 %17, label %29, label %20

20:                                               ; preds = %12, %9
  %21 = phi i8 [ %11, %9 ], [ %19, %12 ]
  %22 = phi i8* [ %10, %9 ], [ %18, %12 ]
  %23 = icmp eq i8 %21, 0
  br i1 %23, label %24, label %31

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %4, align 8
  store i8 1, i8* %22, align 8
  %28 = inttoptr i64 %27 to i8*
  br label %31

29:                                               ; preds = %12
  %30 = icmp eq i8 %19, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %29, %24, %20
  %32 = phi i8* [ %8, %20 ], [ %28, %24 ], [ %8, %29 ]
  %33 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  br label %48

34:                                               ; preds = %29
  %35 = inttoptr i64 %5 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds i8, i8* %8, i64 4
  store i8* %37, i8** %3, align 8
  %38 = zext i32 %36 to i64
  %39 = add nuw nsw i64 %38, 3
  %40 = and i64 %39, 8589934588
  %41 = icmp ult i64 %40, %38
  %42 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  br i1 %41, label %43, label %48

43:                                               ; preds = %34
  %44 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %45 = bitcast i8** %44 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %4, align 8
  store i8 1, i8* %42, align 8
  %47 = inttoptr i64 %46 to i8*
  br label %48

48:                                               ; preds = %31, %43, %34
  %49 = phi i8* [ %42, %43 ], [ %42, %34 ], [ %33, %31 ]
  %50 = phi i64 [ %40, %43 ], [ %40, %34 ], [ 0, %31 ]
  %51 = phi i64 [ %38, %43 ], [ %38, %34 ], [ 0, %31 ]
  %52 = phi i8 [ 1, %43 ], [ 0, %34 ], [ 1, %31 ]
  %53 = phi i8* [ %47, %43 ], [ %37, %34 ], [ %32, %31 ]
  %54 = ptrtoint i8* %53 to i64
  %55 = and i64 %54, 3
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %48
  %58 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = sub i64 %60, %54
  %62 = icmp ult i64 %61, %50
  br i1 %62, label %63, label %69

63:                                               ; preds = %48, %57
  %64 = icmp eq i8 %52, 0
  br i1 %64, label %65, label %73

65:                                               ; preds = %63
  %66 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %67 = bitcast i8** %66 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %4, align 8
  store i8 1, i8* %49, align 8
  br label %73

69:                                               ; preds = %57
  %70 = icmp eq i8 %52, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %69
  %72 = getelementptr inbounds i8, i8* %53, i64 %50
  store i8* %72, i8** %3, align 8
  br label %73

73:                                               ; preds = %63, %65, %69, %71
  %74 = phi i8 [ 0, %71 ], [ 1, %69 ], [ 1, %65 ], [ 1, %63 ]
  %75 = phi i8* [ %53, %71 ], [ null, %69 ], [ null, %65 ], [ null, %63 ]
  %76 = icmp eq i64* %1, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %73
  %78 = icmp eq i8 %74, 0
  %79 = select i1 %78, i64 %51, i64 0
  store i64 %79, i64* %1, align 8
  br label %80

80:                                               ; preds = %73, %77
  ret i8* %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer19readByteArrayAsDataEv(%class.sk_sp.21* noalias sret, %class.SkReadBuffer* nocapture) local_unnamed_addr #2 align 2 {
  %3 = bitcast %class.SkReadBuffer* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 3
  %6 = icmp eq i64 %5, 0
  %7 = inttoptr i64 %4 to i32*
  br i1 %6, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %10 = load i8, i8* %9, align 8, !range !2
  br label %19

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %4
  %16 = icmp ugt i64 %15, 3
  %17 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %18 = load i8, i8* %17, align 8, !range !2
  br i1 %16, label %27, label %19

19:                                               ; preds = %11, %8
  %20 = phi i8 [ %10, %8 ], [ %18, %11 ]
  %21 = phi i8* [ %9, %8 ], [ %17, %11 ]
  %22 = icmp eq i8 %20, 0
  br i1 %22, label %23, label %36

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %3, align 8
  store i8 1, i8* %21, align 8
  br label %36

27:                                               ; preds = %11
  %28 = icmp eq i8 %18, 0
  br i1 %28, label %29, label %36

29:                                               ; preds = %27
  %30 = load i32, i32* %7, align 4
  %31 = zext i32 %30 to i64
  %32 = sub i64 %14, %4
  %33 = icmp ult i64 %32, %31
  br i1 %33, label %34, label %38

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  store i64 %14, i64* %3, align 8
  store i8 1, i8* %35, align 8
  br label %36

36:                                               ; preds = %19, %23, %27, %34
  %37 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %37, align 8
  br label %51

38:                                               ; preds = %29
  %39 = icmp eq i32 %30, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %31, i32 2) #9
  br label %42

42:                                               ; preds = %38, %40
  %43 = phi i64 [ %31, %40 ], [ 0, %38 ]
  %44 = phi i8* [ %41, %40 ], [ null, %38 ]
  %45 = tail call zeroext i1 @_ZN12SkReadBuffer9readArrayEPvmm(%class.SkReadBuffer* %1, i8* %44, i64 %43, i64 1) #9
  br i1 %45, label %46, label %47

46:                                               ; preds = %42
  tail call void @_ZN6SkData14MakeFromMallocEPKvm(%class.sk_sp.21* sret %0, i8* %44, i64 %43) #9
  br label %51

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %48, align 8
  %49 = icmp eq i8* %44, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %47
  tail call void @_Z7sk_freePv(i8* nonnull %44) #9
  br label %51

51:                                               ; preds = %50, %47, %46, %36
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN12SkReadBuffer13getArrayCountEv(%class.SkReadBuffer* nocapture) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkReadBuffer* %0 to i64*
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, 3
  %5 = icmp eq i64 %4, 0
  %6 = inttoptr i64 %3 to i32*
  br i1 %5, label %10, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %9 = load i8, i8* %8, align 8, !range !2
  br label %18

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %3
  %15 = icmp ugt i64 %14, 3
  %16 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %17 = load i8, i8* %16, align 8, !range !2
  br i1 %15, label %26, label %18

18:                                               ; preds = %7, %10
  %19 = phi i8 [ %9, %7 ], [ %17, %10 ]
  %20 = phi i8* [ %8, %7 ], [ %16, %10 ]
  %21 = icmp eq i8 %19, 0
  br i1 %21, label %22, label %30

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %2, align 8
  store i8 1, i8* %20, align 8
  br label %30

26:                                               ; preds = %10
  %27 = icmp eq i8 %17, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = load i32, i32* %6, align 4
  br label %30

30:                                               ; preds = %18, %22, %26, %28
  %31 = phi i32 [ %29, %28 ], [ 0, %26 ], [ 0, %22 ], [ 0, %18 ]
  ret i32 %31
}

declare void @_ZN6SkData14MakeFromMallocEPKvm(%class.sk_sp.21* sret, i8*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer16readImage_preV78Ev(%class.sk_sp.9* noalias sret, %class.SkReadBuffer*) local_unnamed_addr #2 align 2 {
  %3 = alloca %struct.SkImageInfo, align 16
  %4 = alloca %struct.SkImageInfo, align 16
  %5 = alloca %struct.SkIRect, align 4
  %6 = alloca %class.sk_sp.21, align 8
  %7 = alloca %class.sk_sp.9, align 8
  %8 = alloca %class.sk_sp.9, align 8
  %9 = alloca %class.sk_sp.21, align 8
  %10 = alloca %class.sk_sp.9, align 8
  %11 = bitcast %struct.SkIRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #9
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 0
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 1
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 2
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %5, i64 0, i32 3
  %16 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %17 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 0
  %18 = bitcast %struct.SkIRect* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %18, i8 -86, i64 16, i1 false)
  %19 = load i8*, i8** %17, align 8
  %20 = ptrtoint i8* %19 to i64
  %21 = and i64 %20, 3
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %2
  %24 = load i8, i8* %16, align 8, !range !2
  br label %32

25:                                               ; preds = %2
  %26 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %28, %20
  %30 = icmp ult i64 %29, 16
  %31 = load i8, i8* %16, align 8, !range !2
  br i1 %30, label %32, label %40

32:                                               ; preds = %25, %23
  %33 = phi i8 [ %24, %23 ], [ %31, %25 ]
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %51

35:                                               ; preds = %32
  %36 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %class.SkReadBuffer* %1 to i64*
  store i64 %38, i64* %39, align 8
  store i8 1, i8* %16, align 8
  br label %51

40:                                               ; preds = %25
  %41 = icmp eq i8 %31, 0
  br i1 %41, label %42, label %51

42:                                               ; preds = %40
  %43 = getelementptr inbounds i8, i8* %19, i64 16
  store i8* %43, i8** %17, align 8
  %44 = icmp eq i8* %19, null
  %45 = ptrtoint i8* %43 to i64
  br i1 %44, label %51, label %46

46:                                               ; preds = %42
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %11, i8* nonnull align 1 %19, i64 16, i1 false) #9
  %47 = load i32, i32* %14, align 4
  %48 = load i32, i32* %12, align 4
  %49 = load i32, i32* %15, align 4
  %50 = load i32, i32* %13, align 4
  br label %54

51:                                               ; preds = %42, %40, %35, %32
  %52 = phi i8 [ 0, %42 ], [ 1, %40 ], [ 1, %35 ], [ 1, %32 ]
  %53 = phi i64 [ %45, %42 ], [ %20, %40 ], [ %38, %35 ], [ %20, %32 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 0, i64 16, i1 false) #9
  br label %54

54:                                               ; preds = %46, %51
  %55 = phi i8 [ 0, %46 ], [ %52, %51 ]
  %56 = phi i64 [ %45, %46 ], [ %53, %51 ]
  %57 = phi i32 [ %50, %46 ], [ 0, %51 ]
  %58 = phi i32 [ %49, %46 ], [ 0, %51 ]
  %59 = phi i32 [ %48, %46 ], [ 0, %51 ]
  %60 = phi i32 [ %47, %46 ], [ 0, %51 ]
  %61 = sub i32 %60, %59
  %62 = sub i32 %58, %57
  %63 = icmp slt i32 %61, 1
  %64 = icmp slt i32 %62, 1
  %65 = or i1 %63, %64
  br i1 %65, label %66, label %75

66:                                               ; preds = %54
  %67 = icmp eq i8 %55, 0
  br i1 %67, label %68, label %73

68:                                               ; preds = %66
  %69 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %70 = bitcast i8** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %class.SkReadBuffer* %1 to i64*
  store i64 %71, i64* %72, align 8
  store i8 1, i8* %16, align 8
  br label %73

73:                                               ; preds = %66, %68
  %74 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %74, align 8
  br label %304

75:                                               ; preds = %54
  %76 = bitcast %class.SkReadBuffer* %1 to i64*
  %77 = and i64 %56, 3
  %78 = icmp eq i64 %77, 0
  %79 = inttoptr i64 %56 to i8*
  br i1 %78, label %80, label %86

80:                                               ; preds = %75
  %81 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %82 = bitcast i8** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 %83, %56
  %85 = icmp ugt i64 %84, 3
  br i1 %85, label %92, label %86

86:                                               ; preds = %75, %80
  %87 = icmp eq i8 %55, 0
  br i1 %87, label %88, label %101

88:                                               ; preds = %86
  %89 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %90 = bitcast i8** %89 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %76, align 8
  store i8 1, i8* %16, align 8
  br label %101

92:                                               ; preds = %80
  %93 = icmp eq i8 %55, 0
  br i1 %93, label %94, label %101

94:                                               ; preds = %92
  %95 = inttoptr i64 %56 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds i8, i8* %79, i64 4
  store i8* %97, i8** %17, align 8
  %98 = ptrtoint i8* %97 to i64
  switch i32 %96, label %123 [
    i32 -2147483648, label %99
    i32 0, label %101
  ]

99:                                               ; preds = %94
  store i64 %83, i64* %76, align 8
  store i8 1, i8* %16, align 8
  %100 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %100, align 8
  br label %304

101:                                              ; preds = %86, %88, %92, %94
  %102 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102) #9, !noalias !6
  %103 = zext i32 %62 to i64
  %104 = shl nuw i64 %103, 32
  %105 = zext i32 %61 to i64
  %106 = or i64 %104, %105
  %107 = bitcast %struct.SkImageInfo* %3 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %107, align 16, !alias.scope !9, !noalias !6
  %108 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1
  %109 = bitcast %struct.SkISize* %108 to i64*
  store i64 %106, i64* %109, align 16, !alias.scope !9, !noalias !6
  %110 = tail call i8* @_Znwm(i64 40) #10, !noalias !6
  %111 = bitcast i8* %110 to %class.SkImageGenerator*
  call void @_ZN16SkImageGeneratorC2ERK11SkImageInfoj(%class.SkImageGenerator* nonnull %111, %struct.SkImageInfo* nonnull dereferenceable(24) %3, i32 0) #9, !noalias !6
  %112 = bitcast i8* %110 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_119EmptyImageGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %112, align 8, !noalias !6
  call void @_ZN7SkImage17MakeFromGeneratorENSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE(%class.sk_sp.9* sret %0, %class.SkImageGenerator* nonnull %111) #9
  %113 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %114 = load %class.SkColorSpace*, %class.SkColorSpace** %113, align 16, !noalias !6
  %115 = icmp eq %class.SkColorSpace* %114, null
  br i1 %115, label %122, label %116

116:                                              ; preds = %101
  %117 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %114, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = atomicrmw add i32* %117, i32 -1 acq_rel
  %119 = icmp eq i32 %118, 1
  br i1 %119, label %120, label %122

120:                                              ; preds = %116
  %121 = bitcast %class.SkColorSpace* %114 to i8*
  call void @_ZdlPv(i8* %121) #10
  br label %122

122:                                              ; preds = %101, %116, %120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102) #9, !noalias !6
  br label %304

123:                                              ; preds = %94
  %124 = icmp slt i32 %96, 0
  %125 = sub nsw i32 0, %96
  %126 = select i1 %124, i32 %125, i32 %96
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %130

128:                                              ; preds = %123
  store i64 %83, i64* %76, align 8
  store i8 1, i8* %16, align 8
  %129 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %129, align 8
  br label %304

130:                                              ; preds = %123
  %131 = zext i32 %126 to i64
  %132 = sub i64 %83, %98
  %133 = icmp ult i64 %132, %131
  br i1 %133, label %134, label %136

134:                                              ; preds = %130
  store i64 %83, i64* %76, align 8
  store i8 1, i8* %16, align 8
  %135 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %135, align 8
  br label %304

136:                                              ; preds = %130
  %137 = bitcast %class.sk_sp.21* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #9
  %138 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %6, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %138, align 8
  call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.21* nonnull sret %6, i64 %131) #9
  %139 = load %class.SkData*, %class.SkData** %138, align 8
  %140 = getelementptr inbounds %class.SkData, %class.SkData* %139, i64 0, i32 3
  %141 = load i8*, i8** %140, align 8
  %142 = add nuw nsw i64 %131, 3
  %143 = and i64 %142, 4294967292
  %144 = icmp ult i64 %143, %131
  br i1 %144, label %145, label %151

145:                                              ; preds = %136
  %146 = load i8, i8* %16, align 8, !range !2
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %148, label %151

148:                                              ; preds = %145
  %149 = load i64, i64* %82, align 8
  store i64 %149, i64* %76, align 8
  store i8 1, i8* %16, align 8
  %150 = inttoptr i64 %149 to i8*
  br label %153

151:                                              ; preds = %136, %145
  %152 = load i8*, i8** %17, align 8
  br label %153

153:                                              ; preds = %151, %148
  %154 = phi i8* [ %152, %151 ], [ %150, %148 ]
  %155 = ptrtoint i8* %154 to i64
  %156 = and i64 %155, 3
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %160, label %158

158:                                              ; preds = %153
  %159 = load i8, i8* %16, align 8, !range !2
  br label %165

160:                                              ; preds = %153
  %161 = load i64, i64* %82, align 8
  %162 = sub i64 %161, %155
  %163 = icmp ult i64 %162, %143
  %164 = load i8, i8* %16, align 8, !range !2
  br i1 %163, label %165, label %170

165:                                              ; preds = %160, %158
  %166 = phi i8 [ %159, %158 ], [ %164, %160 ]
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %168, label %177

168:                                              ; preds = %165
  %169 = load i64, i64* %82, align 8
  store i64 %169, i64* %76, align 8
  store i8 1, i8* %16, align 8
  br label %177

170:                                              ; preds = %160
  %171 = icmp eq i8 %164, 0
  br i1 %171, label %172, label %177

172:                                              ; preds = %170
  %173 = getelementptr inbounds i8, i8* %154, i64 %143
  store i8* %173, i8** %17, align 8
  %174 = icmp eq i8* %154, null
  br i1 %174, label %175, label %179

175:                                              ; preds = %172
  %176 = load i64, i64* %82, align 8
  store i64 %176, i64* %76, align 8
  store i8 1, i8* %16, align 8
  br label %177

177:                                              ; preds = %165, %168, %170, %175
  %178 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %178, align 8
  br label %294

179:                                              ; preds = %172
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %141, i8* nonnull align 1 %154, i64 %131, i1 false) #9
  %180 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 12, i32 2
  %181 = load void (%class.sk_sp.9*, i8*, i64, i8*)*, void (%class.sk_sp.9*, i8*, i64, i8*)** %180, align 8
  %182 = icmp eq void (%class.sk_sp.9*, i8*, i64, i8*)* %181, null
  br i1 %182, label %195, label %183

183:                                              ; preds = %179
  %184 = bitcast %class.sk_sp.9* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #9
  %185 = load %class.SkData*, %class.SkData** %138, align 8
  %186 = getelementptr inbounds %class.SkData, %class.SkData* %185, i64 0, i32 3
  %187 = load i8*, i8** %186, align 8
  %188 = getelementptr inbounds %class.SkData, %class.SkData* %185, i64 0, i32 4
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 12, i32 3
  %191 = load i8*, i8** %190, align 8
  call void %181(%class.sk_sp.9* nonnull sret %7, i8* %187, i64 %189, i8* %191) #9
  %192 = bitcast %class.sk_sp.9* %7 to i64*
  %193 = load i64, i64* %192, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #9
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %214

195:                                              ; preds = %183, %179
  %196 = bitcast %class.sk_sp.9* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %196) #9
  %197 = bitcast %class.sk_sp.21* %6 to i64*
  %198 = load i64, i64* %197, align 8
  store %class.SkData* null, %class.SkData** %138, align 8
  %199 = bitcast %class.sk_sp.21* %9 to i64*
  store i64 %198, i64* %199, align 8
  call void @_ZN7SkImage15MakeFromEncodedE5sk_spI6SkDataE(%class.sk_sp.9* nonnull sret %8, %class.sk_sp.21* nonnull %9) #9
  %200 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %8, i64 0, i32 0
  %201 = bitcast %class.sk_sp.9* %8 to i64*
  %202 = load i64, i64* %201, align 8
  store %class.SkImage* null, %class.SkImage** %200, align 8
  %203 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %9, i64 0, i32 0
  %204 = load %class.SkData*, %class.SkData** %203, align 8
  %205 = icmp eq %class.SkData* %204, null
  br i1 %205, label %212, label %206

206:                                              ; preds = %195
  %207 = getelementptr inbounds %class.SkData, %class.SkData* %204, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = atomicrmw add i32* %207, i32 -1 acq_rel
  %209 = icmp eq i32 %208, 1
  br i1 %209, label %210, label %212

210:                                              ; preds = %206
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %204) #9
  %211 = bitcast %class.SkData* %204 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %211) #9
  br label %212

212:                                              ; preds = %210, %206, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %196) #9
  %213 = icmp eq i64 %202, 0
  br i1 %213, label %258, label %214

214:                                              ; preds = %183, %212
  %215 = phi i64 [ %202, %212 ], [ %193, %183 ]
  %216 = inttoptr i64 %215 to %class.SkImage*
  %217 = load i32, i32* %12, align 4
  %218 = load i32, i32* %13, align 4
  %219 = or i32 %218, %217
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %229

221:                                              ; preds = %214
  %222 = getelementptr inbounds %class.SkImage, %class.SkImage* %216, i64 0, i32 2, i32 1, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp slt i32 %61, %223
  br i1 %224, label %229, label %225

225:                                              ; preds = %221
  %226 = getelementptr inbounds %class.SkImage, %class.SkImage* %216, i64 0, i32 2, i32 1, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = icmp slt i32 %62, %227
  br i1 %228, label %229, label %280

229:                                              ; preds = %221, %225, %214
  %230 = bitcast %class.sk_sp.9* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %230) #9
  call void @_ZNK7SkImage10makeSubsetERK7SkIRectP15GrDirectContext(%class.sk_sp.9* nonnull sret %10, %class.SkImage* nonnull %216, %struct.SkIRect* nonnull dereferenceable(16) %5, %class.GrDirectContext* null) #9
  %231 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %10, i64 0, i32 0
  %232 = bitcast %class.sk_sp.9* %10 to i64*
  %233 = load i64, i64* %232, align 8
  store %class.SkImage* null, %class.SkImage** %231, align 8
  %234 = getelementptr inbounds %class.SkImage, %class.SkImage* %216, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = atomicrmw add i32* %234, i32 -1 acq_rel
  %236 = icmp eq i32 %235, 1
  br i1 %236, label %237, label %243

237:                                              ; preds = %229
  %238 = inttoptr i64 %215 to %class.SkRefCntBase*
  %239 = inttoptr i64 %215 to void (%class.SkRefCntBase*)***
  %240 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %239, align 8
  %241 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %240, i64 2
  %242 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %241, align 8
  call void %242(%class.SkRefCntBase* nonnull %238) #9
  br label %243

243:                                              ; preds = %229, %237
  %244 = load %class.SkImage*, %class.SkImage** %231, align 8
  %245 = icmp eq %class.SkImage* %244, null
  br i1 %245, label %256, label %246

246:                                              ; preds = %243
  %247 = getelementptr inbounds %class.SkImage, %class.SkImage* %244, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = atomicrmw add i32* %247, i32 -1 acq_rel
  %249 = icmp eq i32 %248, 1
  br i1 %249, label %250, label %256

250:                                              ; preds = %246
  %251 = bitcast %class.SkImage* %244 to %class.SkRefCntBase*
  %252 = bitcast %class.SkImage* %244 to void (%class.SkRefCntBase*)***
  %253 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %252, align 8
  %254 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %253, i64 2
  %255 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %254, align 8
  call void %255(%class.SkRefCntBase* nonnull %251) #9
  br label %256

256:                                              ; preds = %250, %246, %243
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %230) #9
  %257 = icmp eq i64 %233, 0
  br i1 %257, label %258, label %280

258:                                              ; preds = %212, %256
  %259 = bitcast %struct.SkImageInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %259) #9, !noalias !14
  %260 = zext i32 %62 to i64
  %261 = shl nuw i64 %260, 32
  %262 = zext i32 %61 to i64
  %263 = or i64 %261, %262
  %264 = bitcast %struct.SkImageInfo* %4 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %264, align 16, !alias.scope !17, !noalias !14
  %265 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 1
  %266 = bitcast %struct.SkISize* %265 to i64*
  store i64 %263, i64* %266, align 16, !alias.scope !17, !noalias !14
  %267 = call i8* @_Znwm(i64 40) #10, !noalias !14
  %268 = bitcast i8* %267 to %class.SkImageGenerator*
  call void @_ZN16SkImageGeneratorC2ERK11SkImageInfoj(%class.SkImageGenerator* nonnull %268, %struct.SkImageInfo* nonnull dereferenceable(24) %4, i32 0) #9, !noalias !14
  %269 = bitcast i8* %267 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_119EmptyImageGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %269, align 8, !noalias !14
  call void @_ZN7SkImage17MakeFromGeneratorENSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE(%class.sk_sp.9* sret %0, %class.SkImageGenerator* nonnull %268) #9
  %270 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %4, i64 0, i32 0, i32 0, i32 0
  %271 = load %class.SkColorSpace*, %class.SkColorSpace** %270, align 16, !noalias !14
  %272 = icmp eq %class.SkColorSpace* %271, null
  br i1 %272, label %279, label %273

273:                                              ; preds = %258
  %274 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %271, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = atomicrmw add i32* %274, i32 -1 acq_rel
  %276 = icmp eq i32 %275, 1
  br i1 %276, label %277, label %279

277:                                              ; preds = %273
  %278 = bitcast %class.SkColorSpace* %271 to i8*
  call void @_ZdlPv(i8* %278) #10
  br label %279

279:                                              ; preds = %277, %273, %258
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %259) #9, !noalias !14
  br label %294

280:                                              ; preds = %225, %256
  %281 = phi i64 [ %233, %256 ], [ %215, %225 ]
  %282 = inttoptr i64 %281 to %class.SkImage*
  %283 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %0, i64 0, i32 0
  %284 = getelementptr inbounds %class.SkImage, %class.SkImage* %282, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %285 = atomicrmw add i32* %284, i32 1 monotonic
  store %class.SkImage* %282, %class.SkImage** %283, align 8
  %286 = atomicrmw add i32* %284, i32 -1 acq_rel
  %287 = icmp eq i32 %286, 1
  br i1 %287, label %288, label %294

288:                                              ; preds = %280
  %289 = inttoptr i64 %281 to %class.SkRefCntBase*
  %290 = inttoptr i64 %281 to void (%class.SkRefCntBase*)***
  %291 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %290, align 8
  %292 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %291, i64 2
  %293 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %292, align 8
  call void %293(%class.SkRefCntBase* nonnull %289) #9
  br label %294

294:                                              ; preds = %288, %280, %279, %177
  %295 = load %class.SkData*, %class.SkData** %138, align 8
  %296 = icmp eq %class.SkData* %295, null
  br i1 %296, label %303, label %297

297:                                              ; preds = %294
  %298 = getelementptr inbounds %class.SkData, %class.SkData* %295, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = atomicrmw add i32* %298, i32 -1 acq_rel
  %300 = icmp eq i32 %299, 1
  br i1 %300, label %301, label %303

301:                                              ; preds = %297
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %295) #9
  %302 = bitcast %class.SkData* %295 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %302) #9
  br label %303

303:                                              ; preds = %294, %297, %301
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #9
  br label %304

304:                                              ; preds = %99, %122, %128, %134, %303, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #9
  ret void
}

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.21* sret, i64) local_unnamed_addr #3

declare void @_ZN7SkImage15MakeFromEncodedE5sk_spI6SkDataE(%class.sk_sp.9* sret, %class.sk_sp.21*) local_unnamed_addr #3

declare void @_ZNK7SkImage10makeSubsetERK7SkIRectP15GrDirectContext(%class.sk_sp.9* sret, %class.SkImage*, %struct.SkIRect* dereferenceable(16), %class.GrDirectContext*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer9readImageEv(%class.sk_sp.9* noalias sret, %class.SkReadBuffer*) local_unnamed_addr #2 align 2 {
  %3 = alloca %struct.SkImageInfo, align 16
  %4 = alloca %class.sk_sp.21, align 8
  %5 = alloca %class.sk_sp.9, align 8
  %6 = alloca %class.sk_sp.9, align 8
  %7 = alloca %class.sk_sp.21, align 8
  %8 = alloca %struct.SkIRect, align 4
  %9 = alloca %class.sk_sp.9, align 8
  %10 = alloca %class.sk_sp.21, align 8
  %11 = alloca %class.SkMipmapBuilder, align 8
  %12 = alloca %class.sk_sp.9, align 8
  %13 = alloca %class.sk_sp.9, align 8
  %14 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 4
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = icmp ult i32 %16, 77
  br i1 %17, label %18, label %19

18:                                               ; preds = %2
  tail call void @_ZN12SkReadBuffer16readImage_preV78Ev(%class.sk_sp.9* sret %0, %class.SkReadBuffer* %1)
  br label %345

19:                                               ; preds = %2
  %20 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 0
  %21 = bitcast %class.SkReadBuffer* %1 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, 3
  %24 = icmp eq i64 %23, 0
  %25 = inttoptr i64 %22 to i8*
  br i1 %24, label %29, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %28 = load i8, i8* %27, align 8, !range !2
  br label %37

29:                                               ; preds = %19
  %30 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %32, %22
  %34 = icmp ugt i64 %33, 3
  %35 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %36 = load i8, i8* %35, align 8, !range !2
  br i1 %34, label %45, label %37

37:                                               ; preds = %29, %26
  %38 = phi i8 [ %28, %26 ], [ %36, %29 ]
  %39 = phi i8* [ %27, %26 ], [ %35, %29 ]
  %40 = icmp eq i8 %38, 0
  br i1 %40, label %41, label %51

41:                                               ; preds = %37
  %42 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %43 = bitcast i8** %42 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %21, align 8
  store i8 1, i8* %39, align 8
  br label %51

45:                                               ; preds = %29
  %46 = icmp eq i8 %36, 0
  br i1 %46, label %47, label %51

47:                                               ; preds = %45
  %48 = inttoptr i64 %22 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds i8, i8* %25, i64 4
  store i8* %50, i8** %20, align 8
  br label %51

51:                                               ; preds = %37, %41, %45, %47
  %52 = phi i32 [ %49, %47 ], [ 0, %45 ], [ 0, %41 ], [ 0, %37 ]
  %53 = bitcast %class.sk_sp.21* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #9
  %54 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %4, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %54, align 8
  call void @_ZN12SkReadBuffer19readByteArrayAsDataEv(%class.sk_sp.21* nonnull sret %4, %class.SkReadBuffer* %1)
  %55 = load %class.SkData*, %class.SkData** %54, align 8
  %56 = icmp eq %class.SkData* %55, null
  br i1 %56, label %57, label %67

57:                                               ; preds = %51
  %58 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %65

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %63 = bitcast i8** %62 to i64*
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* %21, align 8
  store i8 1, i8* %58, align 8
  br label %65

65:                                               ; preds = %57, %61
  %66 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %66, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #9
  br label %345

67:                                               ; preds = %51
  %68 = ptrtoint %class.SkData* %55 to i64
  %69 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 12, i32 2
  %70 = load void (%class.sk_sp.9*, i8*, i64, i8*)*, void (%class.sk_sp.9*, i8*, i64, i8*)** %69, align 8
  %71 = icmp eq void (%class.sk_sp.9*, i8*, i64, i8*)* %70, null
  br i1 %71, label %86, label %72

72:                                               ; preds = %67
  %73 = bitcast %class.sk_sp.9* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #9
  %74 = getelementptr inbounds %class.SkData, %class.SkData* %55, i64 0, i32 3
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds %class.SkData, %class.SkData* %55, i64 0, i32 4
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 12, i32 3
  %79 = load i8*, i8** %78, align 8
  call void %70(%class.sk_sp.9* nonnull sret %5, i8* %75, i64 %77, i8* %79) #9
  %80 = bitcast %class.sk_sp.9* %5 to i64*
  %81 = load i64, i64* %80, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #9
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %103

83:                                               ; preds = %72
  %84 = bitcast %class.sk_sp.21* %4 to i64*
  %85 = load i64, i64* %84, align 8
  br label %86

86:                                               ; preds = %67, %83
  %87 = phi i64 [ %85, %83 ], [ %68, %67 ]
  %88 = bitcast %class.sk_sp.9* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #9
  store %class.SkData* null, %class.SkData** %54, align 8
  %89 = bitcast %class.sk_sp.21* %7 to i64*
  store i64 %87, i64* %89, align 8
  call void @_ZN7SkImage15MakeFromEncodedE5sk_spI6SkDataE(%class.sk_sp.9* nonnull sret %6, %class.sk_sp.21* nonnull %7) #9
  %90 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %6, i64 0, i32 0
  %91 = bitcast %class.sk_sp.9* %6 to i64*
  %92 = load i64, i64* %91, align 8
  store %class.SkImage* null, %class.SkImage** %90, align 8
  %93 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %7, i64 0, i32 0
  %94 = load %class.SkData*, %class.SkData** %93, align 8
  %95 = icmp eq %class.SkData* %94, null
  br i1 %95, label %102, label %96

96:                                               ; preds = %86
  %97 = getelementptr inbounds %class.SkData, %class.SkData* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = atomicrmw add i32* %97, i32 -1 acq_rel
  %99 = icmp eq i32 %98, 1
  br i1 %99, label %100, label %102

100:                                              ; preds = %96
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %94) #9
  %101 = bitcast %class.SkData* %94 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %101) #9
  br label %102

102:                                              ; preds = %86, %96, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #9
  br label %103

103:                                              ; preds = %72, %102
  %104 = phi i64 [ %81, %72 ], [ %92, %102 ]
  %105 = load %class.SkData*, %class.SkData** %54, align 8
  %106 = icmp eq %class.SkData* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %class.SkData, %class.SkData* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw add i32* %108, i32 -1 acq_rel
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %111, label %113

111:                                              ; preds = %107
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %105) #9
  %112 = bitcast %class.SkData* %105 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %112) #9
  br label %113

113:                                              ; preds = %103, %107, %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #9
  %114 = and i32 %52, 256
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %180, label %116

116:                                              ; preds = %113
  %117 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #9
  %118 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %119 = bitcast %struct.SkIRect* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %119, i8 -86, i64 16, i1 false)
  %120 = load i8*, i8** %20, align 8
  %121 = ptrtoint i8* %120 to i64
  %122 = and i64 %121, 3
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %116
  %125 = load i8, i8* %118, align 8, !range !2
  br label %133

126:                                              ; preds = %116
  %127 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %128 = bitcast i8** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %129, %121
  %131 = icmp ult i64 %130, 16
  %132 = load i8, i8* %118, align 8, !range !2
  br i1 %131, label %133, label %140

133:                                              ; preds = %126, %124
  %134 = phi i8 [ %125, %124 ], [ %132, %126 ]
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %146

136:                                              ; preds = %133
  %137 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %138 = bitcast i8** %137 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %21, align 8
  store i8 1, i8* %118, align 8
  br label %146

140:                                              ; preds = %126
  %141 = icmp eq i8 %132, 0
  br i1 %141, label %142, label %146

142:                                              ; preds = %140
  %143 = getelementptr inbounds i8, i8* %120, i64 16
  store i8* %143, i8** %20, align 8
  %144 = icmp eq i8* %120, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %142
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %117, i8* nonnull align 1 %120, i64 16, i1 false) #9
  br label %147

146:                                              ; preds = %142, %140, %136, %133
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %117, i8 0, i64 16, i1 false) #9
  br label %147

147:                                              ; preds = %145, %146
  %148 = inttoptr i64 %104 to %class.SkImage*
  %149 = icmp eq i64 %104, 0
  br i1 %149, label %178, label %150

150:                                              ; preds = %147
  %151 = bitcast %class.sk_sp.9* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #9
  call void @_ZNK7SkImage10makeSubsetERK7SkIRectP15GrDirectContext(%class.sk_sp.9* nonnull sret %9, %class.SkImage* nonnull %148, %struct.SkIRect* nonnull dereferenceable(16) %8, %class.GrDirectContext* null) #9
  %152 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %9, i64 0, i32 0
  %153 = bitcast %class.sk_sp.9* %9 to i64*
  %154 = load i64, i64* %153, align 8
  store %class.SkImage* null, %class.SkImage** %152, align 8
  %155 = getelementptr inbounds %class.SkImage, %class.SkImage* %148, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = atomicrmw add i32* %155, i32 -1 acq_rel
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %158, label %164

158:                                              ; preds = %150
  %159 = inttoptr i64 %104 to %class.SkRefCntBase*
  %160 = inttoptr i64 %104 to void (%class.SkRefCntBase*)***
  %161 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %160, align 8
  %162 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %161, i64 2
  %163 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %162, align 8
  call void %163(%class.SkRefCntBase* nonnull %159) #9
  br label %164

164:                                              ; preds = %150, %158
  %165 = load %class.SkImage*, %class.SkImage** %152, align 8
  %166 = icmp eq %class.SkImage* %165, null
  br i1 %166, label %177, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %class.SkImage, %class.SkImage* %165, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = atomicrmw add i32* %168, i32 -1 acq_rel
  %170 = icmp eq i32 %169, 1
  br i1 %170, label %171, label %177

171:                                              ; preds = %167
  %172 = bitcast %class.SkImage* %165 to %class.SkRefCntBase*
  %173 = bitcast %class.SkImage* %165 to void (%class.SkRefCntBase*)***
  %174 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %173, align 8
  %175 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %174, i64 2
  %176 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %175, align 8
  call void %176(%class.SkRefCntBase* nonnull %172) #9
  br label %177

177:                                              ; preds = %164, %167, %171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #9
  br label %178

178:                                              ; preds = %147, %177
  %179 = phi i64 [ %154, %177 ], [ 0, %147 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #9
  br label %180

180:                                              ; preds = %113, %178
  %181 = phi i64 [ %104, %113 ], [ %179, %178 ]
  %182 = and i32 %52, 512
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %304, label %184

184:                                              ; preds = %180
  %185 = bitcast %class.sk_sp.21* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #9
  %186 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %10, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %186, align 8
  call void @_ZN12SkReadBuffer19readByteArrayAsDataEv(%class.sk_sp.21* nonnull sret %10, %class.SkReadBuffer* %1)
  %187 = load %class.SkData*, %class.SkData** %186, align 8
  %188 = icmp eq %class.SkData* %187, null
  br i1 %188, label %189, label %197

189:                                              ; preds = %184
  %190 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %191 = load i8, i8* %190, align 8, !range !2
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %193, label %330

193:                                              ; preds = %189
  %194 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %195 = bitcast i8** %194 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %21, align 8
  store i8 1, i8* %190, align 8
  br label %330

197:                                              ; preds = %184
  %198 = inttoptr i64 %181 to %class.SkImage*
  %199 = icmp eq i64 %181, 0
  br i1 %199, label %294, label %200

200:                                              ; preds = %197
  %201 = bitcast %class.SkMipmapBuilder* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %201) #9
  %202 = getelementptr inbounds %class.SkMipmapBuilder, %class.SkMipmapBuilder* %11, i64 0, i32 0, i32 0
  store %class.SkMipmap* inttoptr (i64 -6148914691236517206 to %class.SkMipmap*), %class.SkMipmap** %202, align 8
  %203 = getelementptr inbounds %class.SkImage, %class.SkImage* %198, i64 0, i32 2
  call void @_ZN15SkMipmapBuilderC1ERK11SkImageInfo(%class.SkMipmapBuilder* nonnull %11, %struct.SkImageInfo* dereferenceable(24) %203) #9
  %204 = load %class.SkData*, %class.SkData** %186, align 8
  %205 = getelementptr inbounds %class.SkData, %class.SkData* %204, i64 0, i32 3
  %206 = load i8*, i8** %205, align 8
  %207 = getelementptr inbounds %class.SkData, %class.SkData* %204, i64 0, i32 4
  %208 = load i64, i64* %207, align 8
  %209 = call zeroext i1 @_ZN8SkMipmap11DeserializeEP15SkMipmapBuilderPKvm(%class.SkMipmapBuilder* nonnull %11, i8* %206, i64 %208) #9
  br i1 %209, label %210, label %290

210:                                              ; preds = %200
  %211 = bitcast %class.sk_sp.9* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211) #9
  %212 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %12, i64 0, i32 0
  store %class.SkImage* inttoptr (i64 -6148914691236517206 to %class.SkImage*), %class.SkImage** %212, align 8
  call void @_ZNK7SkImage15makeRasterImageENS_11CachingHintE(%class.sk_sp.9* nonnull sret %12, %class.SkImage* nonnull %198, i32 1) #9
  %213 = load %class.SkImage*, %class.SkImage** %212, align 8
  %214 = icmp eq %class.SkImage* %213, null
  br i1 %214, label %242, label %215

215:                                              ; preds = %210
  %216 = getelementptr inbounds %class.SkImage, %class.SkImage* %213, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = atomicrmw add i32* %216, i32 1 monotonic
  %218 = getelementptr inbounds %class.SkImage, %class.SkImage* %198, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = atomicrmw add i32* %218, i32 -1 acq_rel
  %220 = icmp eq i32 %219, 1
  br i1 %220, label %221, label %227

221:                                              ; preds = %215
  %222 = inttoptr i64 %181 to %class.SkRefCntBase*
  %223 = inttoptr i64 %181 to void (%class.SkRefCntBase*)***
  %224 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %223, align 8
  %225 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %224, i64 2
  %226 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %225, align 8
  call void %226(%class.SkRefCntBase* nonnull %222) #9
  br label %227

227:                                              ; preds = %221, %215
  %228 = load %class.SkImage*, %class.SkImage** %212, align 8
  %229 = icmp eq %class.SkImage* %228, null
  br i1 %229, label %240, label %230

230:                                              ; preds = %227
  %231 = getelementptr inbounds %class.SkImage, %class.SkImage* %228, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = atomicrmw add i32* %231, i32 -1 acq_rel
  %233 = icmp eq i32 %232, 1
  br i1 %233, label %234, label %240

234:                                              ; preds = %230
  %235 = bitcast %class.SkImage* %228 to %class.SkRefCntBase*
  %236 = bitcast %class.SkImage* %228 to void (%class.SkRefCntBase*)***
  %237 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %236, align 8
  %238 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %237, i64 2
  %239 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %238, align 8
  call void %239(%class.SkRefCntBase* nonnull %235) #9
  br label %240

240:                                              ; preds = %227, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211) #9
  %241 = bitcast %class.sk_sp.9* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %241) #9
  br label %245

242:                                              ; preds = %210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211) #9
  %243 = bitcast %class.sk_sp.9* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243) #9
  %244 = icmp eq i64 %181, 0
  br i1 %244, label %250, label %245

245:                                              ; preds = %240, %242
  %246 = phi i8* [ %241, %240 ], [ %243, %242 ]
  %247 = phi %class.SkImage* [ %213, %240 ], [ %198, %242 ]
  %248 = getelementptr inbounds %class.SkImage, %class.SkImage* %247, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = atomicrmw add i32* %248, i32 1 monotonic
  br label %250

250:                                              ; preds = %242, %245
  %251 = phi i1 [ true, %242 ], [ false, %245 ]
  %252 = phi i8* [ %243, %242 ], [ %246, %245 ]
  %253 = phi %class.SkImage* [ null, %242 ], [ %247, %245 ]
  call void @_ZN15SkMipmapBuilder8attachToEPK7SkImage(%class.sk_sp.9* nonnull sret %13, %class.SkMipmapBuilder* nonnull %11, %class.SkImage* %253) #9
  %254 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %13, i64 0, i32 0
  %255 = bitcast %class.sk_sp.9* %13 to i64*
  %256 = load i64, i64* %255, align 8
  store %class.SkImage* null, %class.SkImage** %254, align 8
  br i1 %251, label %289, label %257

257:                                              ; preds = %250
  %258 = getelementptr inbounds %class.SkImage, %class.SkImage* %253, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = atomicrmw add i32* %258, i32 -1 acq_rel
  %260 = icmp eq i32 %259, 1
  br i1 %260, label %261, label %267

261:                                              ; preds = %257
  %262 = bitcast %class.SkImage* %253 to %class.SkRefCntBase*
  %263 = bitcast %class.SkImage* %253 to void (%class.SkRefCntBase*)***
  %264 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %263, align 8
  %265 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %264, i64 2
  %266 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %265, align 8
  call void %266(%class.SkRefCntBase* nonnull %262) #9
  br label %267

267:                                              ; preds = %257, %261
  %268 = load %class.SkImage*, %class.SkImage** %254, align 8
  %269 = icmp eq %class.SkImage* %268, null
  br i1 %269, label %280, label %270

270:                                              ; preds = %267
  %271 = getelementptr inbounds %class.SkImage, %class.SkImage* %268, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = atomicrmw add i32* %271, i32 -1 acq_rel
  %273 = icmp eq i32 %272, 1
  br i1 %273, label %274, label %280

274:                                              ; preds = %270
  %275 = bitcast %class.SkImage* %268 to %class.SkRefCntBase*
  %276 = bitcast %class.SkImage* %268 to void (%class.SkRefCntBase*)***
  %277 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %276, align 8
  %278 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %277, i64 2
  %279 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %278, align 8
  call void %279(%class.SkRefCntBase* nonnull %275) #9
  br label %280

280:                                              ; preds = %267, %270, %274
  %281 = atomicrmw add i32* %258, i32 -1 acq_rel
  %282 = icmp eq i32 %281, 1
  br i1 %282, label %283, label %289

283:                                              ; preds = %280
  %284 = bitcast %class.SkImage* %253 to %class.SkRefCntBase*
  %285 = bitcast %class.SkImage* %253 to void (%class.SkRefCntBase*)***
  %286 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %285, align 8
  %287 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %286, i64 2
  %288 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %287, align 8
  call void %288(%class.SkRefCntBase* nonnull %284) #9
  br label %289

289:                                              ; preds = %250, %280, %283
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252) #9
  br label %290

290:                                              ; preds = %200, %289
  %291 = phi i64 [ %256, %289 ], [ %181, %200 ]
  call void @_ZN15SkMipmapBuilderD1Ev(%class.SkMipmapBuilder* nonnull %11) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %201) #9
  %292 = load %class.SkData*, %class.SkData** %186, align 8
  %293 = icmp eq %class.SkData* %292, null
  br i1 %293, label %302, label %294

294:                                              ; preds = %197, %290
  %295 = phi i64 [ %291, %290 ], [ 0, %197 ]
  %296 = phi %class.SkData* [ %292, %290 ], [ %187, %197 ]
  %297 = getelementptr inbounds %class.SkData, %class.SkData* %296, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %298 = atomicrmw add i32* %297, i32 -1 acq_rel
  %299 = icmp eq i32 %298, 1
  br i1 %299, label %300, label %302

300:                                              ; preds = %294
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %296) #9
  %301 = bitcast %class.SkData* %296 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %301) #9
  br label %302

302:                                              ; preds = %290, %294, %300
  %303 = phi i64 [ %291, %290 ], [ %295, %294 ], [ %295, %300 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #9
  br label %304

304:                                              ; preds = %302, %180
  %305 = phi i64 [ %181, %180 ], [ %303, %302 ]
  %306 = inttoptr i64 %305 to %class.SkImage*
  %307 = icmp eq i64 %305, 0
  br i1 %307, label %312, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %0, i64 0, i32 0
  %310 = getelementptr inbounds %class.SkImage, %class.SkImage* %306, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %311 = atomicrmw add i32* %310, i32 1 monotonic
  store %class.SkImage* %306, %class.SkImage** %309, align 8
  br label %333

312:                                              ; preds = %304
  %313 = bitcast %struct.SkImageInfo* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %313) #9, !noalias !22
  %314 = bitcast %struct.SkImageInfo* %3 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %314, align 16, !alias.scope !25, !noalias !22
  %315 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 1
  %316 = bitcast %struct.SkISize* %315 to i64*
  store i64 4294967297, i64* %316, align 16, !alias.scope !25, !noalias !22
  %317 = call i8* @_Znwm(i64 40) #10, !noalias !22
  %318 = bitcast i8* %317 to %class.SkImageGenerator*
  call void @_ZN16SkImageGeneratorC2ERK11SkImageInfoj(%class.SkImageGenerator* nonnull %318, %struct.SkImageInfo* nonnull dereferenceable(24) %3, i32 0) #9, !noalias !22
  %319 = bitcast i8* %317 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN12_GLOBAL__N_119EmptyImageGeneratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %319, align 8, !noalias !22
  call void @_ZN7SkImage17MakeFromGeneratorENSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE(%class.sk_sp.9* sret %0, %class.SkImageGenerator* nonnull %318) #9
  %320 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %3, i64 0, i32 0, i32 0, i32 0
  %321 = load %class.SkColorSpace*, %class.SkColorSpace** %320, align 16, !noalias !22
  %322 = icmp eq %class.SkColorSpace* %321, null
  br i1 %322, label %329, label %323

323:                                              ; preds = %312
  %324 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %321, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = atomicrmw add i32* %324, i32 -1 acq_rel
  %326 = icmp eq i32 %325, 1
  br i1 %326, label %327, label %329

327:                                              ; preds = %323
  %328 = bitcast %class.SkColorSpace* %321 to i8*
  call void @_ZdlPv(i8* %328) #10
  br label %329

329:                                              ; preds = %327, %323, %312
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %313) #9, !noalias !22
  br label %345

330:                                              ; preds = %189, %193
  %331 = getelementptr inbounds %class.sk_sp.9, %class.sk_sp.9* %0, i64 0, i32 0
  store %class.SkImage* null, %class.SkImage** %331, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #9
  %332 = icmp eq i64 %181, 0
  br i1 %332, label %345, label %333

333:                                              ; preds = %308, %330
  %334 = phi i64 [ %305, %308 ], [ %181, %330 ]
  %335 = inttoptr i64 %334 to %class.SkImage*
  %336 = getelementptr inbounds %class.SkImage, %class.SkImage* %335, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = atomicrmw add i32* %336, i32 -1 acq_rel
  %338 = icmp eq i32 %337, 1
  br i1 %338, label %339, label %345

339:                                              ; preds = %333
  %340 = inttoptr i64 %334 to %class.SkRefCntBase*
  %341 = inttoptr i64 %334 to void (%class.SkRefCntBase*)***
  %342 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %341, align 8
  %343 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %342, i64 2
  %344 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %343, align 8
  call void %344(%class.SkRefCntBase* nonnull %340) #9
  br label %345

345:                                              ; preds = %329, %339, %333, %330, %65, %18
  ret void
}

declare void @_ZN15SkMipmapBuilderC1ERK11SkImageInfo(%class.SkMipmapBuilder*, %struct.SkImageInfo* dereferenceable(24)) unnamed_addr #3

declare zeroext i1 @_ZN8SkMipmap11DeserializeEP15SkMipmapBuilderPKvm(%class.SkMipmapBuilder*, i8*, i64) local_unnamed_addr #3

declare void @_ZNK7SkImage15makeRasterImageENS_11CachingHintE(%class.sk_sp.9* sret, %class.SkImage*, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN15SkMipmapBuilderD1Ev(%class.SkMipmapBuilder*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkReadBuffer12readTypefaceEv(%class.sk_sp* noalias sret, %class.SkReadBuffer*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 0
  %4 = bitcast %class.SkReadBuffer* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 3
  %7 = icmp eq i64 %6, 0
  %8 = inttoptr i64 %5 to i8*
  br i1 %7, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %11 = load i8, i8* %10, align 8, !range !2
  br label %20

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %5
  %17 = icmp ugt i64 %16, 3
  %18 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %19 = load i8, i8* %18, align 8, !range !2
  br i1 %17, label %28, label %20

20:                                               ; preds = %12, %9
  %21 = phi i8 [ %11, %9 ], [ %19, %12 ]
  %22 = phi i8* [ %10, %9 ], [ %18, %12 ]
  %23 = icmp eq i8 %21, 0
  br i1 %23, label %24, label %35

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %4, align 8
  store i8 1, i8* %22, align 8
  br label %35

28:                                               ; preds = %12
  %29 = icmp eq i8 %19, 0
  br i1 %29, label %30, label %35

30:                                               ; preds = %28
  %31 = inttoptr i64 %5 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds i8, i8* %8, i64 4
  store i8* %33, i8** %3, align 8
  %34 = icmp eq i32 %32, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %20, %24, %28, %30
  %36 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %36, align 8
  br label %91

37:                                               ; preds = %30
  %38 = icmp sgt i32 %32, 0
  br i1 %38, label %39, label %58

39:                                               ; preds = %37
  %40 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 7
  %41 = load i32, i32* %40, align 8
  %42 = icmp sgt i32 %32, %41
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  store i64 %15, i64* %4, align 8
  store i8 1, i8* %18, align 8
  %44 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %44, align 8
  br label %91

45:                                               ; preds = %39
  %46 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 6
  %47 = load %class.sk_sp*, %class.sk_sp** %46, align 8
  %48 = add nsw i32 %32, -1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %51 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %47, i64 %49, i32 0
  %52 = load %class.SkTypeface*, %class.SkTypeface** %51, align 8
  %53 = icmp eq %class.SkTypeface* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %45
  %55 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %52, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw add i32* %55, i32 1 monotonic
  br label %57

57:                                               ; preds = %45, %54
  store %class.SkTypeface* %52, %class.SkTypeface** %50, align 8
  br label %91

58:                                               ; preds = %37
  %59 = sext i32 %32 to i64
  %60 = sub nsw i64 0, %59
  %61 = sub nsw i64 3, %59
  %62 = and i64 %61, -4
  %63 = icmp ult i64 %62, %60
  br i1 %63, label %64, label %66

64:                                               ; preds = %58
  store i64 %15, i64* %4, align 8
  store i8 1, i8* %18, align 8
  %65 = inttoptr i64 %15 to i8*
  br label %66

66:                                               ; preds = %58, %64
  %67 = phi i1 [ false, %64 ], [ true, %58 ]
  %68 = phi i8* [ %65, %64 ], [ %33, %58 ]
  %69 = ptrtoint i8* %68 to i64
  %70 = and i64 %69, 3
  %71 = icmp ne i64 %70, 0
  %72 = sub i64 %15, %69
  %73 = icmp ult i64 %72, %62
  %74 = or i1 %71, %73
  br i1 %74, label %75, label %77

75:                                               ; preds = %66
  br i1 %67, label %76, label %86

76:                                               ; preds = %75
  store i64 %15, i64* %4, align 8
  store i8 1, i8* %18, align 8
  br label %86

77:                                               ; preds = %66
  br i1 %67, label %78, label %86

78:                                               ; preds = %77
  %79 = getelementptr inbounds i8, i8* %68, i64 %62
  store i8* %79, i8** %3, align 8
  %80 = icmp eq i8* %68, null
  br i1 %80, label %85, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 12, i32 4
  %83 = load void (%class.sk_sp*, i8*, i64, i8*)*, void (%class.sk_sp*, i8*, i64, i8*)** %82, align 8
  %84 = icmp eq void (%class.sk_sp*, i8*, i64, i8*)* %83, null
  br i1 %84, label %85, label %88

85:                                               ; preds = %81, %78
  store i64 %15, i64* %4, align 8
  store i8 1, i8* %18, align 8
  br label %86

86:                                               ; preds = %75, %76, %77, %85
  %87 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %87, align 8
  br label %91

88:                                               ; preds = %81
  %89 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 12, i32 5
  %90 = load i8*, i8** %89, align 8
  tail call void %83(%class.sk_sp* sret %0, i8* nonnull %68, i64 %60, i8* %90) #9
  br label %91

91:                                               ; preds = %86, %88, %57, %43, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkFlattenable* @_ZN12SkReadBuffer15readFlattenableEN13SkFlattenable4TypeE(%class.SkReadBuffer*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %class.sk_sp.7, align 8
  %5 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 10
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %52

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %10 = bitcast %class.SkReadBuffer* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 3
  %13 = icmp eq i64 %12, 0
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %18, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %17 = load i8, i8* %16, align 8, !range !2
  br label %26

18:                                               ; preds = %8
  %19 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %21, %11
  %23 = icmp ugt i64 %22, 3
  %24 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %25 = load i8, i8* %24, align 8, !range !2
  br i1 %23, label %34, label %26

26:                                               ; preds = %18, %15
  %27 = phi i8 [ %17, %15 ], [ %25, %18 ]
  %28 = phi i8* [ %16, %15 ], [ %24, %18 ]
  %29 = icmp eq i8 %27, 0
  br i1 %29, label %30, label %294

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %10, align 8
  store i8 1, i8* %28, align 8
  br label %294

34:                                               ; preds = %18
  %35 = icmp eq i8 %25, 0
  br i1 %35, label %36, label %294

36:                                               ; preds = %34
  %37 = inttoptr i64 %11 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds i8, i8* %14, i64 4
  store i8* %39, i8** %9, align 8
  %40 = icmp eq i32 %38, 0
  %41 = ptrtoint i8* %39 to i64
  br i1 %40, label %294, label %42

42:                                               ; preds = %36
  %43 = add nsw i32 %38, -1
  %44 = icmp ult i32 %43, %6
  br i1 %44, label %46, label %45

45:                                               ; preds = %42
  store i64 %21, i64* %10, align 8
  store i8 1, i8* %24, align 8
  br label %294

46:                                               ; preds = %42
  %47 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 9
  %48 = load void (%class.sk_sp.7*, %class.SkReadBuffer*)**, void (%class.sk_sp.7*, %class.SkReadBuffer*)*** %47, align 8
  %49 = sext i32 %43 to i64
  %50 = getelementptr inbounds void (%class.sk_sp.7*, %class.SkReadBuffer*)*, void (%class.sk_sp.7*, %class.SkReadBuffer*)** %48, i64 %49
  %51 = load void (%class.sk_sp.7*, %class.SkReadBuffer*)*, void (%class.sk_sp.7*, %class.SkReadBuffer*)** %50, align 8
  br label %167

52:                                               ; preds = %2
  %53 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %54 = bitcast i8** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %class.SkReadBuffer* %0 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %55, %57
  br i1 %58, label %59, label %62

59:                                               ; preds = %52
  %60 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  store i8 1, i8* %60, align 8
  %61 = inttoptr i64 %57 to i8*
  br label %81

62:                                               ; preds = %52
  %63 = inttoptr i64 %57 to i8*
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %81, label %66

66:                                               ; preds = %62
  %67 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #9
  store i64 -6148914691236517206, i64* %3, align 8
  %68 = call i8* @_ZN12SkReadBuffer10readStringEPm(%class.SkReadBuffer* %0, i64* nonnull %3)
  %69 = icmp eq i8* %68, null
  br i1 %69, label %77, label %70

70:                                               ; preds = %66
  %71 = tail call void (%class.sk_sp.7*, %class.SkReadBuffer*)* @_ZN13SkFlattenable13NameToFactoryEPKc(i8* nonnull %68) #9
  %72 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 3
  %73 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %72, i64 0, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = add nsw i32 %74, 1
  %76 = tail call void (%class.sk_sp.7*, %class.SkReadBuffer*)** @_ZN10SkTHashMapIjPF5sk_spI13SkFlattenableER12SkReadBufferE10SkGoodHashE3setEjS6_(%class.SkTHashMap* %72, i32 %75, void (%class.sk_sp.7*, %class.SkReadBuffer*)* %71)
  br label %77

77:                                               ; preds = %66, %70
  %78 = phi void (%class.sk_sp.7*, %class.SkReadBuffer*)* [ %71, %70 ], [ null, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #9
  %79 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %80 = load i8, i8* %79, align 8, !range !2
  br label %154

81:                                               ; preds = %59, %62
  %82 = phi i8* [ %61, %59 ], [ %63, %62 ]
  %83 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %84 = and i64 %57, 3
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %88 = load i8, i8* %87, align 8, !range !2
  br label %94

89:                                               ; preds = %81
  %90 = sub i64 %55, %57
  %91 = icmp ugt i64 %90, 3
  %92 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %93 = load i8, i8* %92, align 8, !range !2
  br i1 %91, label %99, label %94

94:                                               ; preds = %89, %86
  %95 = phi i8 [ %88, %86 ], [ %93, %89 ]
  %96 = phi i8* [ %87, %86 ], [ %92, %89 ]
  %97 = icmp eq i8 %95, 0
  br i1 %97, label %98, label %294

98:                                               ; preds = %94
  store i64 %55, i64* %56, align 8
  store i8 1, i8* %96, align 8
  br label %294

99:                                               ; preds = %89
  %100 = icmp eq i8 %93, 0
  br i1 %100, label %101, label %294

101:                                              ; preds = %99
  %102 = inttoptr i64 %57 to i32*
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds i8, i8* %82, i64 4
  store i8* %104, i8** %83, align 8
  %105 = lshr i32 %103, 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %294, label %107

107:                                              ; preds = %101
  %108 = lshr i32 %103, 24
  %109 = xor i32 %108, %105
  %110 = mul i32 %109, -2048144789
  %111 = lshr i32 %110, 13
  %112 = xor i32 %111, %110
  %113 = mul i32 %112, -1028477387
  %114 = lshr i32 %113, 16
  %115 = xor i32 %114, %113
  %116 = icmp eq i32 %115, 0
  %117 = select i1 %116, i32 1, i32 %115
  %118 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 3, i32 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = icmp sgt i32 %119, 0
  br i1 %120, label %121, label %161

121:                                              ; preds = %107
  %122 = add nsw i32 %119, -1
  %123 = and i32 %122, %117
  %124 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %125 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"** %124, align 8
  br label %126

126:                                              ; preds = %140, %121
  %127 = phi i32 [ 0, %121 ], [ %145, %140 ]
  %128 = phi i32 [ %123, %121 ], [ %144, %140 ]
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %125, i64 %129, i32 1
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %161, label %133

133:                                              ; preds = %126
  %134 = icmp eq i32 %117, %131
  br i1 %134, label %135, label %140

135:                                              ; preds = %133
  %136 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %125, i64 %129, i32 0
  %137 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair"* %136, i64 0, i32 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %105, %138
  br i1 %139, label %147, label %140

140:                                              ; preds = %135, %133
  %141 = add nsw i32 %128, -1
  %142 = icmp slt i32 %128, 1
  %143 = select i1 %142, i32 %119, i32 0
  %144 = add nsw i32 %141, %143
  %145 = add nuw nsw i32 %127, 1
  %146 = icmp eq i32 %145, %119
  br i1 %146, label %161, label %126

147:                                              ; preds = %135
  %148 = icmp eq %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair"* %136, null
  %149 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %125, i64 %129, i32 0, i32 0, i32 1
  %150 = icmp eq void (%class.sk_sp.7*, %class.SkReadBuffer*)** %149, null
  %151 = or i1 %148, %150
  br i1 %151, label %161, label %152

152:                                              ; preds = %147
  %153 = load void (%class.sk_sp.7*, %class.SkReadBuffer*)*, void (%class.sk_sp.7*, %class.SkReadBuffer*)** %149, align 8
  br label %154

154:                                              ; preds = %152, %77
  %155 = phi i8 [ %80, %77 ], [ 0, %152 ]
  %156 = phi void (%class.sk_sp.7*, %class.SkReadBuffer*)* [ %78, %77 ], [ %153, %152 ]
  %157 = icmp eq void (%class.sk_sp.7*, %class.SkReadBuffer*)* %156, null
  %158 = icmp eq i8 %155, 0
  br i1 %157, label %159, label %164

159:                                              ; preds = %154
  %160 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  br i1 %158, label %161, label %294

161:                                              ; preds = %126, %140, %107, %147, %159
  %162 = phi i8* [ %160, %159 ], [ %92, %147 ], [ %92, %107 ], [ %92, %140 ], [ %92, %126 ]
  %163 = load i64, i64* %54, align 8
  store i64 %163, i64* %56, align 8
  store i8 1, i8* %162, align 8
  br label %294

164:                                              ; preds = %154
  br i1 %158, label %165, label %294

165:                                              ; preds = %164
  %166 = load i64, i64* %56, align 8
  br label %167

167:                                              ; preds = %165, %46
  %168 = phi i64 [ %166, %165 ], [ %41, %46 ]
  %169 = phi i64* [ %56, %165 ], [ %10, %46 ]
  %170 = phi void (%class.sk_sp.7*, %class.SkReadBuffer*)* [ %156, %165 ], [ %51, %46 ]
  %171 = inttoptr i64 %168 to i8*
  %172 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %173 = and i64 %168, 3
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %181

175:                                              ; preds = %167
  %176 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %177 = bitcast i8** %176 to i64*
  %178 = load i64, i64* %177, align 8
  %179 = sub i64 %178, %168
  %180 = icmp ugt i64 %179, 3
  br i1 %180, label %187, label %181

181:                                              ; preds = %175, %167
  %182 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %183 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %184 = bitcast i8** %183 to i64*
  %185 = load i64, i64* %184, align 8
  store i64 %185, i64* %169, align 8
  store i8 1, i8* %182, align 8
  %186 = inttoptr i64 %185 to i8*
  br label %193

187:                                              ; preds = %175
  %188 = inttoptr i64 %168 to i32*
  %189 = load i32, i32* %188, align 4
  %190 = getelementptr inbounds i8, i8* %171, i64 4
  store i8* %190, i8** %172, align 8
  %191 = zext i32 %189 to i64
  %192 = ptrtoint i8* %190 to i64
  br label %193

193:                                              ; preds = %181, %187
  %194 = phi i8* [ %190, %187 ], [ %186, %181 ]
  %195 = phi i8 [ 0, %187 ], [ 1, %181 ]
  %196 = phi i64 [ %192, %187 ], [ %185, %181 ]
  %197 = phi i64 [ %191, %187 ], [ 0, %181 ]
  %198 = icmp eq void (%class.sk_sp.7*, %class.SkReadBuffer*)* %170, null
  br i1 %198, label %238, label %199

199:                                              ; preds = %193
  %200 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 2
  %201 = bitcast i8** %200 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = bitcast %class.sk_sp.7* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #9
  call void %170(%class.sk_sp.7* nonnull sret %4, %class.SkReadBuffer* dereferenceable(136) %0) #9
  %204 = bitcast %class.sk_sp.7* %4 to i64*
  %205 = load i64, i64* %204, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %203) #9
  %206 = load i64, i64* %169, align 8
  %207 = load i64, i64* %201, align 8
  %208 = sub i64 %202, %196
  %209 = add i64 %208, %206
  %210 = sub i64 %209, %207
  %211 = icmp eq i64 %210, %197
  br i1 %211, label %220, label %212

212:                                              ; preds = %199
  %213 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %214 = load i8, i8* %213, align 8, !range !2
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %216, label %279

216:                                              ; preds = %212
  %217 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %218 = bitcast i8** %217 to i64*
  %219 = load i64, i64* %218, align 8
  store i64 %219, i64* %169, align 8
  store i8 1, i8* %213, align 8
  br label %279

220:                                              ; preds = %199
  %221 = icmp eq i64 %205, 0
  br i1 %221, label %272, label %222

222:                                              ; preds = %220
  %223 = inttoptr i64 %205 to %class.SkFlattenable*
  %224 = inttoptr i64 %205 to i32 (%class.SkFlattenable*)***
  %225 = load i32 (%class.SkFlattenable*)**, i32 (%class.SkFlattenable*)*** %224, align 8
  %226 = getelementptr inbounds i32 (%class.SkFlattenable*)*, i32 (%class.SkFlattenable*)** %225, i64 6
  %227 = load i32 (%class.SkFlattenable*)*, i32 (%class.SkFlattenable*)** %226, align 8
  %228 = call i32 %227(%class.SkFlattenable* nonnull %223) #9
  %229 = icmp eq i32 %228, %1
  br i1 %229, label %272, label %230

230:                                              ; preds = %222
  %231 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %232 = load i8, i8* %231, align 8, !range !2
  %233 = icmp eq i8 %232, 0
  br i1 %233, label %234, label %282

234:                                              ; preds = %230
  %235 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %236 = bitcast i8** %235 to i64*
  %237 = load i64, i64* %236, align 8
  store i64 %237, i64* %169, align 8
  store i8 1, i8* %231, align 8
  br label %282

238:                                              ; preds = %193
  %239 = add nuw nsw i64 %197, 3
  %240 = and i64 %239, 8589934588
  %241 = icmp ult i64 %240, %197
  %242 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  br i1 %241, label %243, label %250

243:                                              ; preds = %238
  %244 = icmp eq i8 %195, 0
  br i1 %244, label %245, label %250

245:                                              ; preds = %243
  %246 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %247 = bitcast i8** %246 to i64*
  %248 = load i64, i64* %247, align 8
  store i64 %248, i64* %169, align 8
  store i8 1, i8* %242, align 8
  %249 = inttoptr i64 %248 to i8*
  br label %250

250:                                              ; preds = %245, %243, %238
  %251 = phi i8 [ 1, %245 ], [ 1, %243 ], [ %195, %238 ]
  %252 = phi i8* [ %249, %245 ], [ %194, %243 ], [ %194, %238 ]
  %253 = ptrtoint i8* %252 to i64
  %254 = and i64 %253, 3
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %256, label %262

256:                                              ; preds = %250
  %257 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %258 = bitcast i8** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = sub i64 %259, %253
  %261 = icmp ult i64 %260, %240
  br i1 %261, label %262, label %268

262:                                              ; preds = %250, %256
  %263 = icmp eq i8 %251, 0
  br i1 %263, label %264, label %272

264:                                              ; preds = %262
  %265 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %266 = bitcast i8** %265 to i64*
  %267 = load i64, i64* %266, align 8
  store i64 %267, i64* %169, align 8
  store i8 1, i8* %242, align 8
  br label %272

268:                                              ; preds = %256
  %269 = icmp eq i8 %251, 0
  br i1 %269, label %270, label %272

270:                                              ; preds = %268
  %271 = getelementptr inbounds i8, i8* %252, i64 %240
  store i8* %271, i8** %172, align 8
  br label %272

272:                                              ; preds = %220, %270, %268, %264, %262, %222
  %273 = phi i64 [ %205, %222 ], [ 0, %220 ], [ 0, %262 ], [ 0, %264 ], [ 0, %268 ], [ 0, %270 ]
  %274 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %275 = load i8, i8* %274, align 8, !range !2
  %276 = icmp eq i8 %275, 0
  br i1 %276, label %277, label %279

277:                                              ; preds = %272
  %278 = inttoptr i64 %273 to %class.SkFlattenable*
  br label %294

279:                                              ; preds = %216, %212, %272
  %280 = phi i64 [ %273, %272 ], [ %205, %212 ], [ %205, %216 ]
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %294, label %282

282:                                              ; preds = %234, %230, %279
  %283 = phi i64 [ %280, %279 ], [ %205, %230 ], [ %205, %234 ]
  %284 = inttoptr i64 %283 to %class.SkFlattenable*
  %285 = getelementptr inbounds %class.SkFlattenable, %class.SkFlattenable* %284, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = atomicrmw add i32* %285, i32 -1 acq_rel
  %287 = icmp eq i32 %286, 1
  br i1 %287, label %288, label %294

288:                                              ; preds = %282
  %289 = inttoptr i64 %283 to %class.SkRefCntBase*
  %290 = inttoptr i64 %283 to void (%class.SkRefCntBase*)***
  %291 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %290, align 8
  %292 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %291, i64 2
  %293 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %292, align 8
  call void %293(%class.SkRefCntBase* nonnull %289) #9
  br label %294

294:                                              ; preds = %159, %161, %94, %98, %99, %26, %30, %34, %36, %45, %288, %282, %279, %277, %101, %164
  %295 = phi %class.SkFlattenable* [ null, %164 ], [ null, %101 ], [ %278, %277 ], [ null, %279 ], [ null, %282 ], [ null, %288 ], [ null, %45 ], [ null, %36 ], [ null, %34 ], [ null, %30 ], [ null, %26 ], [ null, %99 ], [ null, %98 ], [ null, %94 ], [ null, %161 ], [ null, %159 ]
  ret %class.SkFlattenable* %295
}

declare void (%class.sk_sp.7*, %class.SkReadBuffer*)* @_ZN13SkFlattenable13NameToFactoryEPKc(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.7*, %class.SkReadBuffer*)** @_ZN10SkTHashMapIjPF5sk_spI13SkFlattenableER12SkReadBufferE10SkGoodHashE3setEjS6_(%class.SkTHashMap*, i32, void (%class.sk_sp.7*, %class.SkReadBuffer*)*) local_unnamed_addr #2 comdat align 2 {
  %4 = ptrtoint void (%class.sk_sp.7*, %class.SkReadBuffer*)* %2 to i64
  %5 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = shl nsw i32 %6, 2
  %8 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = mul nsw i32 %9, 3
  %11 = icmp slt i32 %7, %10
  br i1 %11, label %18, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0
  %14 = icmp sgt i32 %9, 0
  %15 = shl nsw i32 %9, 1
  %16 = select i1 %14, i32 %15, i32 4
  tail call void @_ZN12SkTHashTableIN10SkTHashMapIjPF5sk_spI13SkFlattenableER12SkReadBufferE10SkGoodHashE4PairEjSA_E6resizeEi(%class.SkTHashTable* %13, i32 %16) #9
  %17 = load i32, i32* %8, align 4
  br label %18

18:                                               ; preds = %3, %12
  %19 = phi i32 [ %9, %3 ], [ %17, %12 ]
  %20 = lshr i32 %1, 16
  %21 = xor i32 %20, %1
  %22 = mul i32 %21, -2048144789
  %23 = lshr i32 %22, 13
  %24 = xor i32 %23, %22
  %25 = mul i32 %24, -1028477387
  %26 = lshr i32 %25, 16
  %27 = xor i32 %26, %25
  %28 = icmp eq i32 %27, 0
  %29 = select i1 %28, i32 1, i32 %27
  %30 = icmp sgt i32 %19, 0
  br i1 %30, label %31, label %69

31:                                               ; preds = %18
  %32 = add nsw i32 %19, -1
  %33 = and i32 %32, %29
  %34 = getelementptr inbounds %class.SkTHashMap, %class.SkTHashMap* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"** %34, align 8
  br label %36

36:                                               ; preds = %62, %31
  %37 = phi i32 [ 0, %31 ], [ %67, %62 ]
  %38 = phi i32 [ %33, %31 ], [ %66, %62 ]
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %35, i64 %39
  %41 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %35, i64 %39, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %40, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %40, i64 0, i32 0, i32 0, i32 0
  store i32 %1, i32* %46, align 8
  %47 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %35, i64 %39, i32 0, i32 0, i32 1
  %48 = bitcast void (%class.sk_sp.7*, %class.SkReadBuffer*)** %47 to i64*
  store i64 %4, i64* %48, align 8
  store i32 %29, i32* %41, align 8
  %49 = load i32, i32* %5, align 8
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %5, align 8
  br label %69

51:                                               ; preds = %36
  %52 = icmp eq i32 %29, %42
  br i1 %52, label %53, label %62

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %40, i64 0, i32 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %1
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %40, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %40, i64 0, i32 0
  store i32 %1, i32* %58, align 8
  %60 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %35, i64 %39, i32 0, i32 0, i32 1
  %61 = bitcast void (%class.sk_sp.7*, %class.SkReadBuffer*)** %60 to i64*
  store i64 %4, i64* %61, align 8
  br label %69

62:                                               ; preds = %53, %51
  %63 = add nsw i32 %38, -1
  %64 = icmp slt i32 %38, 1
  %65 = select i1 %64, i32 %19, i32 0
  %66 = add nsw i32 %63, %65
  %67 = add nuw nsw i32 %37, 1
  %68 = icmp eq i32 %67, %19
  br i1 %68, label %69, label %36

69:                                               ; preds = %62, %18, %44, %57
  %70 = phi %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair"* [ %59, %57 ], [ %45, %44 ], [ null, %18 ], [ null, %62 ]
  %71 = getelementptr inbounds %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair"* %70, i64 0, i32 0, i32 1
  ret void (%class.sk_sp.7*, %class.SkReadBuffer*)** %71
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN12SkReadBuffer8checkIntEii(%class.SkReadBuffer* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %5 = bitcast %class.SkReadBuffer* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 3
  %8 = icmp eq i64 %7, 0
  %9 = inttoptr i64 %6 to i8*
  br i1 %8, label %13, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %12 = load i8, i8* %11, align 8, !range !2
  br label %21

13:                                               ; preds = %3
  %14 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %15 = bitcast i8** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %16, %6
  %18 = icmp ugt i64 %17, 3
  %19 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %20 = load i8, i8* %19, align 8, !range !2
  br i1 %18, label %29, label %21

21:                                               ; preds = %13, %10
  %22 = phi i8 [ %12, %10 ], [ %20, %13 ]
  %23 = phi i8* [ %11, %10 ], [ %19, %13 ]
  %24 = icmp eq i8 %22, 0
  br i1 %24, label %25, label %35

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %27 = bitcast i8** %26 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %5, align 8
  store i8 1, i8* %23, align 8
  br label %35

29:                                               ; preds = %13
  %30 = icmp eq i8 %20, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %29
  %32 = inttoptr i64 %6 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds i8, i8* %9, i64 4
  store i8* %34, i8** %4, align 8
  br label %35

35:                                               ; preds = %21, %25, %29, %31
  %36 = phi i8 [ 0, %31 ], [ 1, %29 ], [ 1, %25 ], [ 1, %21 ]
  %37 = phi i32 [ %33, %31 ], [ 0, %29 ], [ 0, %25 ], [ 0, %21 ]
  %38 = icmp slt i32 %37, %1
  %39 = icmp sgt i32 %37, %2
  %40 = or i1 %38, %39
  br i1 %40, label %41, label %48

41:                                               ; preds = %35
  %42 = icmp eq i8 %36, 0
  br i1 %42, label %43, label %48

43:                                               ; preds = %41
  %44 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %45 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %46 = bitcast i8** %45 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %5, align 8
  store i8 1, i8* %44, align 8
  br label %48

48:                                               ; preds = %43, %41, %35
  %49 = phi i32 [ %37, %35 ], [ %1, %41 ], [ %1, %43 ]
  ret i32 %49
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN12SkReadBuffer18checkFilterQualityEv(%class.SkReadBuffer* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 0
  %3 = bitcast %class.SkReadBuffer* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 3
  %6 = icmp eq i64 %5, 0
  %7 = inttoptr i64 %4 to i8*
  br i1 %6, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %10 = load i8, i8* %9, align 8, !range !2
  br label %19

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %14, %4
  %16 = icmp ugt i64 %15, 3
  %17 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %18 = load i8, i8* %17, align 8, !range !2
  br i1 %16, label %27, label %19

19:                                               ; preds = %11, %8
  %20 = phi i8 [ %10, %8 ], [ %18, %11 ]
  %21 = phi i8* [ %9, %8 ], [ %17, %11 ]
  %22 = icmp eq i8 %20, 0
  br i1 %22, label %23, label %39

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %3, align 8
  store i8 1, i8* %21, align 8
  br label %39

27:                                               ; preds = %11
  %28 = icmp eq i8 %18, 0
  br i1 %28, label %29, label %39

29:                                               ; preds = %27
  %30 = inttoptr i64 %4 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i8, i8* %7, i64 4
  store i8* %32, i8** %2, align 8
  %33 = icmp ugt i32 %31, 3
  br i1 %33, label %34, label %39

34:                                               ; preds = %29
  %35 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 13
  %36 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %0, i64 0, i32 1
  %37 = bitcast i8** %36 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %3, align 8
  store i8 1, i8* %35, align 8
  br label %39

39:                                               ; preds = %19, %23, %27, %29, %34
  %40 = phi i32 [ %31, %29 ], [ 0, %34 ], [ 0, %27 ], [ 0, %23 ], [ 0, %19 ]
  ret i32 %40
}

declare i64 @_ZN8SkMatrix14readFromMemoryEPKvm(%class.SkMatrix*, i8*, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

declare void @_ZN7SkImage17MakeFromGeneratorENSt3__110unique_ptrI16SkImageGeneratorNS0_14default_deleteIS2_EEEE(%class.sk_sp.9* sret, %class.SkImageGenerator*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN16SkImageGeneratorC2ERK11SkImageInfoj(%class.SkImageGenerator*, %struct.SkImageInfo* dereferenceable(24), i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkImageGeneratorD2Ev(%class.SkImageGenerator*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16SkImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkImageGenerator, %class.SkImageGenerator* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_119EmptyImageGeneratorD0Ev(%"class.(anonymous namespace)::EmptyImageGenerator"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.(anonymous namespace)::EmptyImageGenerator", %"class.(anonymous namespace)::EmptyImageGenerator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTV16SkImageGenerator, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.(anonymous namespace)::EmptyImageGenerator", %"class.(anonymous namespace)::EmptyImageGenerator"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %class.SkColorSpace*, %class.SkColorSpace** %3, align 8
  %5 = icmp eq %class.SkColorSpace* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = bitcast %class.SkColorSpace* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = bitcast %"class.(anonymous namespace)::EmptyImageGenerator"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkImageGenerator16onRefEncodedDataEv(%class.sk_sp.21* noalias sret, %class.SkImageGenerator*) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16SkImageGenerator11onGetPixelsERK11SkImageInfoPvmRKNS_7OptionsE(%class.SkImageGenerator*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %"struct.SkImageGenerator::Options"* dereferenceable(1)) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkImageGenerator9onIsValidEP18GrRecordingContext(%class.SkImageGenerator*, %class.GrRecordingContext*) unnamed_addr #2 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkImageGenerator15onQueryYUVAInfoERKN16SkYUVAPixmapInfo18SupportedDataTypesEPS0_(%class.SkImageGenerator*, %"class.SkYUVAPixmapInfo::SupportedDataTypes"* dereferenceable(8), %class.SkYUVAPixmapInfo*) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN16SkImageGenerator15onGetYUVAPlanesERK13SkYUVAPixmaps(%class.SkImageGenerator*, %class.SkYUVAPixmaps* dereferenceable(208)) unnamed_addr #2 comdat align 2 {
  ret i1 false
}

declare void @_ZN16SkImageGenerator17onGenerateTextureEP18GrRecordingContextRK11SkImageInfoRK8SkIPoint11GrMipmapped19GrImageTexGenPolicy() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN15SkMipmapBuilder8attachToEPK7SkImage(%class.sk_sp.9* sret, %class.SkMipmapBuilder*, %class.SkImage*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkTHashTableIN10SkTHashMapIjPF5sk_spI13SkFlattenableER12SkReadBufferE10SkGoodHashE4PairEjSA_E6resizeEi(%class.SkTHashTable*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 0
  store i32 0, i32* %5, align 8
  store i32 %1, i32* %3, align 4
  %6 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.SkAutoTArray, %class.SkAutoTArray* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %class.SkAutoTArray* %6 to i64*
  %9 = load i64, i64* %8, align 8
  store %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* null, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"** %7, align 8
  %10 = icmp eq i32 %1, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i64 0, i64* %8, align 8
  br label %32

12:                                               ; preds = %2
  %13 = sext i32 %1 to i64
  %14 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %13, i64 24) #9
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 -1, i64 %16
  %18 = tail call i8* @_Znam(i64 %17) #10
  %19 = bitcast i8* %18 to %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"*
  %20 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %19, i64 %13
  br label %21

21:                                               ; preds = %21, %12
  %22 = phi %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* [ %19, %12 ], [ %24, %21 ]
  %23 = bitcast %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 20, i1 false) #9
  %24 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %22, i64 1
  %25 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %24, %20
  br i1 %25, label %26, label %21

26:                                               ; preds = %21
  %27 = ptrtoint i8* %18 to i64
  %28 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"** %7, align 8
  %29 = icmp eq %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %28, null
  store i64 %27, i64* %8, align 8
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = bitcast %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %28 to i8*
  tail call void @_ZdaPv(i8* %31) #10
  br label %32

32:                                               ; preds = %30, %26, %11
  %33 = icmp sgt i32 %4, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %32
  %35 = inttoptr i64 %9 to %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"*
  %36 = getelementptr inbounds %class.SkTHashTable, %class.SkTHashTable* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %37 = zext i32 %4 to i64
  br label %43

38:                                               ; preds = %104, %32
  %39 = icmp eq i64 %9, 0
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = inttoptr i64 %9 to i8*
  tail call void @_ZdaPv(i8* %41) #10
  br label %42

42:                                               ; preds = %38, %40
  ret void

43:                                               ; preds = %104, %34
  %44 = phi i64 [ 0, %34 ], [ %105, %104 ]
  %45 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %35, i64 %44, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %104, label %48

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %35, i64 %44, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = lshr i32 %50, 16
  %52 = xor i32 %51, %50
  %53 = mul i32 %52, -2048144789
  %54 = lshr i32 %53, 13
  %55 = xor i32 %54, %53
  %56 = mul i32 %55, -1028477387
  %57 = lshr i32 %56, 16
  %58 = xor i32 %57, %56
  %59 = icmp eq i32 %58, 0
  %60 = select i1 %59, i32 1, i32 %58
  %61 = load i32, i32* %3, align 4
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %104

63:                                               ; preds = %48
  %64 = add nsw i32 %61, -1
  %65 = and i32 %60, %64
  %66 = load %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"*, %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"** %36, align 8
  br label %67

67:                                               ; preds = %97, %63
  %68 = phi i32 [ 0, %63 ], [ %102, %97 ]
  %69 = phi i32 [ %65, %63 ], [ %101, %97 ]
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %66, i64 %70
  %72 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %66, i64 %70, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %84

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %71, i64 0, i32 0, i32 0, i32 0
  store i32 %50, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %35, i64 %44, i32 0, i32 0, i32 1
  %78 = bitcast void (%class.sk_sp.7*, %class.SkReadBuffer*)** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %66, i64 %70, i32 0, i32 0, i32 1
  %81 = bitcast void (%class.sk_sp.7*, %class.SkReadBuffer*)** %80 to i64*
  store i64 %79, i64* %81, align 8
  store i32 %60, i32* %72, align 8
  %82 = load i32, i32* %5, align 8
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %5, align 8
  br label %104

84:                                               ; preds = %67
  %85 = icmp eq i32 %60, %73
  br i1 %85, label %86, label %97

86:                                               ; preds = %84
  %87 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %71, i64 0, i32 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %50, %88
  br i1 %89, label %90, label %97

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %71, i64 0, i32 0, i32 0, i32 0
  store i32 %50, i32* %91, align 8
  %92 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %35, i64 %44, i32 0, i32 0, i32 1
  %93 = bitcast void (%class.sk_sp.7*, %class.SkReadBuffer*)** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot", %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* %66, i64 %70, i32 0, i32 0, i32 1
  %96 = bitcast void (%class.sk_sp.7*, %class.SkReadBuffer*)** %95 to i64*
  store i64 %94, i64* %96, align 8
  br label %104

97:                                               ; preds = %86, %84
  %98 = add nsw i32 %69, -1
  %99 = icmp slt i32 %69, 1
  %100 = select i1 %99, i32 %61, i32 0
  %101 = add nsw i32 %98, %100
  %102 = add nuw nsw i32 %68, 1
  %103 = icmp eq i32 %102, %61
  br i1 %103, label %104, label %67

104:                                              ; preds = %97, %90, %75, %48, %43
  %105 = add nuw nsw i64 %44, 1
  %106 = icmp eq i64 %105, %37
  br i1 %106, label %38, label %43
}

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5SkM448ColMajorEPKf: argument 0"}
!5 = distinct !{!5, !"_ZN5SkM448ColMajorEPKf"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN12_GLOBAL__N_114MakeEmptyImageEii: argument 0"}
!8 = distinct !{!8, !"_ZN12_GLOBAL__N_114MakeEmptyImageEii"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!11 = distinct !{!11, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!12 = distinct !{!12, !13, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!13 = distinct !{!13, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN12_GLOBAL__N_114MakeEmptyImageEii: argument 0"}
!16 = distinct !{!16, !"_ZN12_GLOBAL__N_114MakeEmptyImageEii"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!19 = distinct !{!19, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!20 = distinct !{!20, !21, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!21 = distinct !{!21, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN12_GLOBAL__N_114MakeEmptyImageEii: argument 0"}
!24 = distinct !{!24, !"_ZN12_GLOBAL__N_114MakeEmptyImageEii"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!27 = distinct !{!27, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!28 = distinct !{!28, !29, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!29 = distinct !{!29, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
