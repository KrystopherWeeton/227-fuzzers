; ModuleID = '../../content/browser/renderer_host/input/synthetic_touchpad_pinch_gesture.cc'
source_filename = "../../content/browser/renderer_host/input/synthetic_touchpad_pinch_gesture.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::SyntheticTouchpadPinchGesture" = type <{ %"class.content::SyntheticGesture", %"struct.content::SyntheticPinchGestureParams", i32, i32, %"class.base::TimeTicks", %"class.base::TimeTicks", float, [4 x i8] }>
%"class.content::SyntheticGesture" = type { i32 (...)** }
%"struct.content::SyntheticPinchGestureParams" = type { %"struct.content::SyntheticGestureParams.base", float, %"class.gfx::PointF", float, [4 x i8] }
%"struct.content::SyntheticGestureParams.base" = type <{ i32 (...)**, i32 }>
%"class.gfx::PointF" = type { float, float }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.content::SyntheticGestureTarget" = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::WebGestureEvent" = type <{ %"class.blink::WebInputEvent", i8, [3 x i8], i32, i32, [4 x i8], %union.anon, %"class.gfx::PointF", %"class.gfx::PointF", i32, [4 x i8] }>
%"class.blink::WebInputEvent" = type { i32 (...)**, float, %"class.gfx::Vector2dF", %"class.base::TimeTicks", i32, i32 }
%"class.gfx::Vector2dF" = type { float, float }
%union.anon = type { %struct.anon.5 }
%struct.anon.5 = type { i64, float, float, i32, i8, i32, i8, i8, i8, i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.13 }
%union.anon.13 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK4base9TimeDeltadvES0_ = comdat any

@_ZTVN7content29SyntheticTouchpadPinchGestureE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::SyntheticTouchpadPinchGesture"*)* @_ZN7content29SyntheticTouchpadPinchGestureD2Ev to i8*), i8* bitcast (void (%"class.content::SyntheticTouchpadPinchGesture"*)* @_ZN7content29SyntheticTouchpadPinchGestureD0Ev to i8*), i8* bitcast (i32 (%"class.content::SyntheticTouchpadPinchGesture"*, %"class.base::TimeTicks"*, %"class.content::SyntheticGestureTarget"*)* @_ZN7content29SyntheticTouchpadPinchGesture18ForwardInputEventsERKN4base9TimeTicksEPNS_22SyntheticGestureTargetE to i8*), i8* bitcast (void (%"class.content::SyntheticTouchpadPinchGesture"*, %"class.base::OnceCallback"*, %"class.content::SyntheticGestureTarget"*)* @_ZNK7content29SyntheticTouchpadPinchGesture16WaitForTargetAckEN4base12OnceCallbackIFvvEEEPNS_22SyntheticGestureTargetE to i8*), i8* bitcast (i1 (%"class.content::SyntheticGesture"*)* @_ZNK7content16SyntheticGesture26AllowHighFrequencyDispatchEv to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"!is_zero() || !a.is_zero()\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"!is_inf() || !a.is_inf()\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN7content29SyntheticTouchpadPinchGestureC1ERKNS_27SyntheticPinchGestureParamsE = hidden unnamed_addr alias void (%"class.content::SyntheticTouchpadPinchGesture"*, %"struct.content::SyntheticPinchGestureParams"*), void (%"class.content::SyntheticTouchpadPinchGesture"*, %"struct.content::SyntheticPinchGestureParams"*)* @_ZN7content29SyntheticTouchpadPinchGestureC2ERKNS_27SyntheticPinchGestureParamsE
@_ZN7content29SyntheticTouchpadPinchGestureD1Ev = hidden unnamed_addr alias void (%"class.content::SyntheticTouchpadPinchGesture"*), void (%"class.content::SyntheticTouchpadPinchGesture"*)* @_ZN7content29SyntheticTouchpadPinchGestureD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content29SyntheticTouchpadPinchGestureC2ERKNS_27SyntheticPinchGestureParamsE(%"class.content::SyntheticTouchpadPinchGesture"*, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 0
  tail call void @_ZN7content16SyntheticGestureC2Ev(%"class.content::SyntheticGesture"* %3) #7
  %4 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content29SyntheticTouchpadPinchGestureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 1
  tail call void @_ZN7content27SyntheticPinchGestureParamsC1ERKS0_(%"struct.content::SyntheticPinchGestureParams"* %5, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32) %1) #7
  %6 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 6
  %8 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false)
  store float 1.000000e+00, float* %7, align 8
  %9 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 2
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  store i32 2, i32* %9, align 8
  br label %13

13:                                               ; preds = %2, %12
  ret void
}

declare void @_ZN7content16SyntheticGestureC2Ev(%"class.content::SyntheticGesture"*) unnamed_addr #1

declare void @_ZN7content27SyntheticPinchGestureParamsC1ERKS0_(%"struct.content::SyntheticPinchGestureParams"*, %"struct.content::SyntheticPinchGestureParams"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content29SyntheticTouchpadPinchGestureD2Ev(%"class.content::SyntheticTouchpadPinchGesture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content29SyntheticTouchpadPinchGestureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 1
  tail call void @_ZN7content27SyntheticPinchGestureParamsD1Ev(%"struct.content::SyntheticPinchGestureParams"* %3) #7
  %4 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 0
  tail call void @_ZN7content16SyntheticGestureD2Ev(%"class.content::SyntheticGesture"* %4) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7content27SyntheticPinchGestureParamsD1Ev(%"struct.content::SyntheticPinchGestureParams"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7content16SyntheticGestureD2Ev(%"class.content::SyntheticGesture"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content29SyntheticTouchpadPinchGestureD0Ev(%"class.content::SyntheticTouchpadPinchGesture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content29SyntheticTouchpadPinchGestureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 1
  tail call void @_ZN7content27SyntheticPinchGestureParamsD1Ev(%"struct.content::SyntheticPinchGestureParams"* %3) #7
  %4 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 0
  tail call void @_ZN7content16SyntheticGestureD2Ev(%"class.content::SyntheticGesture"* %4) #7
  %5 = bitcast %"class.content::SyntheticTouchpadPinchGesture"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content29SyntheticTouchpadPinchGesture18ForwardInputEventsERKN4base9TimeTicksEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTouchpadPinchGesture"* nocapture, %"class.base::TimeTicks"* nocapture readonly dereferenceable(8), %"class.content::SyntheticGestureTarget"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  br label %26

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 2
  store i32 %12, i32* %13, align 8
  %14 = icmp eq i32 %12, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = bitcast %"class.content::SyntheticGestureTarget"* %2 to i32 (%"class.content::SyntheticGestureTarget"*)***
  %17 = load i32 (%"class.content::SyntheticGestureTarget"*)**, i32 (%"class.content::SyntheticGestureTarget"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.content::SyntheticGestureTarget"*)*, i32 (%"class.content::SyntheticGestureTarget"*)** %17, i64 3
  %19 = load i32 (%"class.content::SyntheticGestureTarget"*)*, i32 (%"class.content::SyntheticGestureTarget"*)** %18, align 8
  %20 = tail call i32 %19(%"class.content::SyntheticGestureTarget"* %2) #7
  store i32 %20, i32* %13, align 8
  br label %21

21:                                               ; preds = %15, %10
  %22 = phi i32 [ %20, %15 ], [ %12, %10 ]
  store i32 1, i32* %4, align 4
  %23 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 4, i32 0, i32 0
  %25 = load i64, i64* %23, align 8
  store i64 %25, i64* %24, align 8
  br label %26

26:                                               ; preds = %7, %21
  %27 = phi i32 [ %9, %7 ], [ %22, %21 ]
  %28 = icmp eq i32 %27, 2
  br i1 %28, label %29, label %33

29:                                               ; preds = %26
  tail call void @_ZN7content29SyntheticTouchpadPinchGesture20ForwardGestureEventsERKN4base9TimeTicksEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTouchpadPinchGesture"* %0, %"class.base::TimeTicks"* dereferenceable(8) %1, %"class.content::SyntheticGestureTarget"* %2)
  %30 = load i32, i32* %4, align 4
  %31 = icmp eq i32 %30, 3
  %32 = zext i1 %31 to i32
  br label %33

33:                                               ; preds = %26, %29
  %34 = phi i32 [ %32, %29 ], [ 3, %26 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content29SyntheticTouchpadPinchGesture20ForwardGestureEventsERKN4base9TimeTicksEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTouchpadPinchGesture"* nocapture, %"class.base::TimeTicks"* nocapture readonly dereferenceable(8), %"class.content::SyntheticGestureTarget"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeDelta", align 8
  %5 = alloca %"class.blink::WebGestureEvent", align 8
  %6 = alloca %"class.blink::WebGestureEvent", align 8
  %7 = alloca %"class.blink::WebGestureEvent", align 8
  %8 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  switch i32 %9, label %74 [
    i32 1, label %10
    i32 2, label %22
  ]

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 1, i32 1
  %12 = load float, float* %11, align 4
  %13 = fcmp oeq float %12, 1.000000e+00
  br i1 %13, label %14, label %15

14:                                               ; preds = %10
  store i32 3, i32* %8, align 4
  br label %74

15:                                               ; preds = %10
  tail call void @_ZN7content29SyntheticTouchpadPinchGesture16CalculateEndTimeEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTouchpadPinchGesture"* %0, %"class.content::SyntheticGestureTarget"* undef)
  %16 = bitcast %"class.blink::WebGestureEvent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %16) #7
  call void @_ZN5blink31SyntheticWebGestureEventBuilder5BuildENS_5mojom9EventTypeENS1_13GestureDeviceEi(%"class.blink::WebGestureEvent"* nonnull sret %5, i32 16, i32 1, i32 0) #7
  %17 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %5, i64 0, i32 0
  %18 = bitcast %"class.content::SyntheticGestureTarget"* %2 to void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)***
  %19 = load void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)**, void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)*, void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)** %19, i64 2
  %21 = load void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)*, void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)** %20, align 8
  call void %21(%"class.content::SyntheticGestureTarget"* %2, %"class.blink::WebInputEvent"* nonnull dereferenceable(40) %17) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %16) #7
  store i32 2, i32* %8, align 4
  br label %74

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 5
  %24 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %23, i64 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp slt i64 %27, %25
  %29 = select i1 %28, %"class.base::TimeTicks"* %23, %"class.base::TimeTicks"* %1
  %30 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %29, i64 0, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = icmp slt i64 %31, %27
  br i1 %33, label %37, label %34

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 1, i32 1
  %36 = load float, float* %35, align 4
  br label %51

37:                                               ; preds = %22
  %38 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #7
  %39 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 4, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = sub nsw i64 %31, %40
  %42 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %4, i64 0, i32 0
  store i64 %41, i64* %42, align 8
  %43 = sub nsw i64 %27, %40
  %44 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %4, i64 %43) #7
  %45 = fptrunc double %44 to float
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #7
  %46 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 1, i32 1
  %47 = load float, float* %46, align 4
  %48 = fadd float %47, -1.000000e+00
  %49 = fmul float %48, %45
  %50 = fadd float %49, 1.000000e+00
  br label %51

51:                                               ; preds = %34, %37
  %52 = phi float [ %36, %34 ], [ %50, %37 ]
  %53 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 6
  %54 = load float, float* %53, align 8
  %55 = fdiv float %52, %54
  store float %52, float* %53, align 8
  %56 = bitcast %"class.blink::WebGestureEvent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %56) #7
  %57 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 1, i32 2, i32 0
  %58 = load float, float* %57, align 4
  %59 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 1, i32 2, i32 1
  %60 = load float, float* %59, align 4
  call void @_ZN5blink31SyntheticWebGestureEventBuilder16BuildPinchUpdateEfffiNS_5mojom13GestureDeviceE(%"class.blink::WebGestureEvent"* nonnull sret %6, float %55, float %58, float %60, i32 0, i32 1) #7
  %61 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %6, i64 0, i32 0
  %62 = bitcast %"class.content::SyntheticGestureTarget"* %2 to void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)***
  %63 = load void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)**, void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)*, void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)** %63, i64 2
  %65 = load void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)*, void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)** %64, align 8
  call void %65(%"class.content::SyntheticGestureTarget"* %2, %"class.blink::WebInputEvent"* nonnull dereferenceable(40) %61) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %56) #7
  %66 = load i64, i64* %32, align 8
  %67 = icmp slt i64 %31, %66
  br i1 %67, label %74, label %68

68:                                               ; preds = %51
  %69 = bitcast %"class.blink::WebGestureEvent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %69) #7
  call void @_ZN5blink31SyntheticWebGestureEventBuilder5BuildENS_5mojom9EventTypeENS1_13GestureDeviceEi(%"class.blink::WebGestureEvent"* nonnull sret %7, i32 17, i32 1, i32 0) #7
  %70 = getelementptr inbounds %"class.blink::WebGestureEvent", %"class.blink::WebGestureEvent"* %7, i64 0, i32 0
  %71 = load void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)**, void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)*** %62, align 8
  %72 = getelementptr inbounds void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)*, void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)** %71, i64 2
  %73 = load void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)*, void (%"class.content::SyntheticGestureTarget"*, %"class.blink::WebInputEvent"*)** %72, align 8
  call void %73(%"class.content::SyntheticGestureTarget"* %2, %"class.blink::WebInputEvent"* nonnull dereferenceable(40) %70) #7
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %69) #7
  store i32 3, i32* %8, align 4
  br label %74

74:                                               ; preds = %51, %68, %3, %15, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7content29SyntheticTouchpadPinchGesture16WaitForTargetAckEN4base12OnceCallbackIFvvEEEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTouchpadPinchGesture"*, %"class.base::OnceCallback"* nocapture, %"class.content::SyntheticGestureTarget"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 1
  %6 = tail call i32 @_ZNK7content27SyntheticPinchGestureParams14GetGestureTypeEv(%"struct.content::SyntheticPinchGestureParams"* %5) #7
  %7 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.content::SyntheticGestureTarget"* %2 to void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)***
  %14 = load void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)**, void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)*, void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)** %14, i64 9
  %16 = load void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)*, void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)** %15, align 8
  call void %16(%"class.content::SyntheticGestureTarget"* %2, i32 %6, i32 %8, %"class.base::OnceCallback"* nonnull %4) #7
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #7
  ret void
}

declare i32 @_ZNK7content27SyntheticPinchGestureParams14GetGestureTypeEv(%"struct.content::SyntheticPinchGestureParams"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content29SyntheticTouchpadPinchGesture16CalculateEndTimeEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTouchpadPinchGesture"* nocapture, %"class.content::SyntheticGestureTarget"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 1, i32 1
  %5 = load float, float* %4, align 4
  %6 = fcmp olt float %5, 1.000000e+00
  %7 = fdiv float 1.000000e+00, %5
  %8 = select i1 %6, float %7, float %5
  %9 = fadd float %8, -1.000000e+00
  %10 = fmul float %9, 2.000000e+02
  %11 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 1, i32 3
  %12 = load float, float* %11, align 8
  %13 = fdiv float %10, %12
  %14 = fpext float %13 to double
  %15 = fmul double %14, 1.000000e+06
  %16 = fcmp ult double %15, 0xC3E0000000000000
  %17 = fcmp ugt double %15, 0x43DFFFFFFFFFFFFF
  %18 = fcmp ogt double %15, 0xC3E0000000000000
  %19 = select i1 %18, double %15, double 0xC3E0000000000000
  %20 = fptosi double %19 to i64
  %21 = select i1 %16, i64 0, i64 9223372036854775807
  %22 = select i1 %17, i64 %21, i64 %20
  %23 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 4, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %22, -9223372036854775807
  %26 = icmp ult i64 %25, 2
  br i1 %26, label %34, label %27

27:                                               ; preds = %2
  %28 = icmp slt i64 %22, 0
  %29 = select i1 %28, i64 -9223372036854775808, i64 9223372036854775807
  %30 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %24, i64 %22) #7
  %31 = extractvalue { i64, i1 } %30, 1
  %32 = extractvalue { i64, i1 } %30, 0
  %33 = select i1 %31, i64 %29, i64 %32, !prof !2
  br label %42

34:                                               ; preds = %2
  %35 = add i64 %24, -9223372036854775807
  %36 = icmp ugt i64 %35, 1
  %37 = icmp eq i64 %24, %22
  %38 = or i1 %36, %37
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0)) #7
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #7
  br label %42

42:                                               ; preds = %27, %34, %39
  %43 = phi i64 [ %33, %27 ], [ %22, %34 ], [ %22, %39 ]
  %44 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 %43, i64* %44, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN5blink31SyntheticWebGestureEventBuilder5BuildENS_5mojom9EventTypeENS1_13GestureDeviceEi(%"class.blink::WebGestureEvent"* sret, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK7content29SyntheticTouchpadPinchGesture14ClampTimestampERKN4base9TimeTicksE(%"class.content::SyntheticTouchpadPinchGesture"* nocapture readonly, %"class.base::TimeTicks"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp slt i64 %7, %5
  %9 = select i1 %8, %"class.base::TimeTicks"* %3, %"class.base::TimeTicks"* %1
  %10 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %9, i64 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK7content29SyntheticTouchpadPinchGesture20CalculateTargetScaleERKN4base9TimeTicksE(%"class.content::SyntheticTouchpadPinchGesture"* nocapture readonly, %"class.base::TimeTicks"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp slt i64 %7, %5
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 1, i32 1
  %11 = load float, float* %10, align 4
  br label %26

12:                                               ; preds = %2
  %13 = bitcast %"class.base::TimeDelta"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 4, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = sub nsw i64 %7, %15
  %17 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %16, i64* %17, align 8
  %18 = sub nsw i64 %5, %15
  %19 = call double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"* nonnull %3, i64 %18)
  %20 = fptrunc double %19 to float
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  %21 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 1, i32 1
  %22 = load float, float* %21, align 4
  %23 = fadd float %22, -1.000000e+00
  %24 = fmul float %23, %20
  %25 = fadd float %24, 1.000000e+00
  br label %26

26:                                               ; preds = %12, %9
  %27 = phi float [ %11, %9 ], [ %25, %12 ]
  ret float %27
}

declare void @_ZN5blink31SyntheticWebGestureEventBuilder16BuildPinchUpdateEfffiNS_5mojom13GestureDeviceE(%"class.blink::WebGestureEvent"* sret, float, float, float, i32, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7content29SyntheticTouchpadPinchGesture16HasReachedTargetERKN4base9TimeTicksE(%"class.content::SyntheticTouchpadPinchGesture"* nocapture readonly, %"class.base::TimeTicks"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.content::SyntheticTouchpadPinchGesture", %"class.content::SyntheticTouchpadPinchGesture"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp sge i64 %6, %4
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK4base9TimeDeltadvES0_(%"class.base::TimeDelta"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = or i64 %6, %1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 302, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #7
  %11 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #7
  %12 = load i64, i64* %5, align 8
  br label %13

13:                                               ; preds = %2, %9
  %14 = phi i64 [ %6, %2 ], [ %12, %9 ]
  %15 = add i64 %14, -9223372036854775807
  %16 = add i64 %1, -9223372036854775807
  %17 = or i64 %15, %16
  %18 = icmp ult i64 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0)) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  %22 = load i64, i64* %5, align 8
  %23 = add i64 %22, -9223372036854775807
  br label %24

24:                                               ; preds = %13, %19
  %25 = phi i64 [ %15, %13 ], [ %23, %19 ]
  %26 = phi i64 [ %14, %13 ], [ %22, %19 ]
  %27 = icmp ult i64 %25, 2
  %28 = icmp slt i64 %26, 0
  %29 = select i1 %28, double 0xFFF0000000000000, double 0x7FF0000000000000
  %30 = sitofp i64 %26 to double
  %31 = select i1 %27, double %29, double %30
  %32 = icmp ult i64 %16, 2
  %33 = icmp slt i64 %1, 0
  %34 = select i1 %33, double 0xFFF0000000000000, double 0x7FF0000000000000
  %35 = sitofp i64 %1 to double
  %36 = select i1 %32, double %34, double %35
  %37 = fdiv double %31, %36
  ret double %37
}

declare zeroext i1 @_ZNK7content16SyntheticGesture26AllowHighFrequencyDispatchEv(%"class.content::SyntheticGesture"*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
