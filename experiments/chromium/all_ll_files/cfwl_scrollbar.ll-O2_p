; ModuleID = '../../third_party/pdfium/xfa/fwl/cfwl_scrollbar.cpp'
source_filename = "../../third_party/pdfium/xfa/fwl/cfwl_scrollbar.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_RectF = type { float, float, float, float }
%"class.fxcrt::UnownedPtr.30" = type { %class.CFX_RectF* }
%"class.fxcrt::UnownedPtr.31" = type { %class.CFWL_Widget* }
%class.CFWL_Widget = type { %class.IFWL_WidgetDelegate, %"class.CFWL_Widget::Properties", %class.CFX_RectF, i32, i64, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.0", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.2", %"class.cppgc::internal::BasicMember.3" }
%class.IFWL_WidgetDelegate = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.CFWL_Widget::Properties" = type { i32, i32, i32 }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.0" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.2" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.3" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::UnownedPtr.32" = type { %class.CFGAS_GEPath* }
%class.CFGAS_GEPath = type opaque
%"class.fxcrt::UnownedPtr.33" = type { %class.CFGAS_GEGraphics* }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr.14", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.22" }
%"class.fxcrt::UnownedPtr.14" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { float* }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.20", %"class.fxcrt::UnownedPtr.21" }
%"class.fxcrt::UnownedPtr.20" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.21" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { %"class.std::__1::unique_ptr.24"*, %"class.std::__1::unique_ptr.24"*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::unique_ptr.24" = type opaque
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.std::__1::unique_ptr.24"* }
%class.CFWL_ScrollBar = type { %class.CFWL_Widget, %"class.CFX_Timer::CallbackIface", float, float, float, float, float, float, i32, i32, i32, i32, i32, float, %class.CFX_PTemplate, i32, float, i8, i8, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %class.CFX_RectF, %"class.std::__1::unique_ptr" }
%"class.CFX_Timer::CallbackIface" = type { i32 (...)** }
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_Timer* }
%class.CFX_Timer = type { i32, %"class.fxcrt::ObservedPtr", %"class.fxcrt::UnownedPtr" }
%"class.fxcrt::ObservedPtr" = type { %"class.fxcrt::Observable::ObserverIface", %"class.CFX_Timer::HandlerIface"* }
%"class.fxcrt::Observable::ObserverIface" = type { i32 (...)** }
%"class.CFX_Timer::HandlerIface" = type { i32 (...)**, %"class.fxcrt::Observable" }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %"class.CFX_Timer::CallbackIface"* }
%class.CFWL_App = type { %"class.cppgc::internal::BasicMember.12", %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.13" }
%"class.cppgc::internal::BasicMember.12" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.13" = type { %"class.cppgc::internal::MemberBase" }
%class.CFWL_ThemeBackground = type { %class.CFWL_ThemePart, %"class.fxcrt::UnownedPtr.32", %"class.fxcrt::UnownedPtr.33" }
%class.CFWL_ThemePart = type { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, %"class.fxcrt::UnownedPtr.31" }
%class.IFWL_ThemeProvider = type { %"class.cppgc::GarbageCollectedMixin", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34", %"class.cppgc::internal::BasicMember.34" }
%"class.cppgc::internal::BasicMember.34" = type { %"class.cppgc::internal::MemberBase" }
%class.CFWL_EventScroll = type { %class.CFWL_Event, i32, float }
%class.CFWL_Event = type { i32 (...)**, i32, %class.CFWL_Widget*, %class.CFWL_Widget* }
%class.CFWL_Message = type { i32 (...)**, i32, %"class.fxcrt::UnownedPtr.31", %"class.fxcrt::UnownedPtr.31" }
%class.CFWL_MessageMouse = type <{ %class.CFWL_Message, i8, i8, [2 x i8], %class.CFX_PTemplate, [4 x i8] }>
%"class.CFWL_App::AdapterIface" = type { %"class.cppgc::GarbageCollectedMixin" }
%class.CFX_VTemplate = type { %class.CFX_PTemplate.35 }
%class.CFX_PTemplate.35 = type { i32, i32 }
%"class.cppgc::Visitor" = type { i32 (...)** }

@_ZTV14CFWL_ScrollBar = hidden unnamed_addr constant { [21 x i8*], [5 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFWL_Widget*, %"class.cppgc::Visitor"*)* @_ZNK11CFWL_Widget5TraceEPN5cppgc7VisitorE to i8*), i8* bitcast (void (%class.CFWL_ScrollBar*)* @_ZN14CFWL_ScrollBarD2Ev to i8*), i8* bitcast (void (%class.CFWL_ScrollBar*)* @_ZN14CFWL_ScrollBarD0Ev to i8*), i8* bitcast (void (%class.CFWL_ScrollBar*, %class.CFWL_Message*)* @_ZN14CFWL_ScrollBar16OnProcessMessageEP12CFWL_Message to i8*), i8* bitcast (void (%class.CFWL_Widget*, %class.CFWL_Event*)* @_ZN11CFWL_Widget14OnProcessEventEP10CFWL_Event to i8*), i8* bitcast (void (%class.CFWL_ScrollBar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)* @_ZN14CFWL_ScrollBar12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CFWL_Widget*)* @_ZN11CFWL_Widget11PreFinalizeEv to i8*), i8* bitcast (i32 (%class.CFWL_ScrollBar*)* @_ZNK14CFWL_ScrollBar10GetClassIDEv to i8*), i8* bitcast (i1 (%class.CFWL_Widget*)* @_ZNK11CFWL_Widget6IsFormEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget22GetAutosizedWidgetRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget13GetWidgetRectEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%class.CFWL_Widget*)* @_ZN11CFWL_Widget13GetClientRectEv to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32, i32)* @_ZN11CFWL_Widget14ModifyStylesExEjj to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32)* @_ZN11CFWL_Widget9SetStatesEj to i8*), i8* bitcast (void (%class.CFWL_Widget*, i32)* @_ZN11CFWL_Widget12RemoveStatesEj to i8*), i8* bitcast (void (%class.CFWL_ScrollBar*)* @_ZN14CFWL_ScrollBar6UpdateEv to i8*), i8* bitcast (i32 (%class.CFWL_Widget*, %class.CFX_PTemplate*)* @_ZN11CFWL_Widget7HitTestERK13CFX_PTemplateIfE to i8*), i8* bitcast (void (%class.CFWL_ScrollBar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix*)* @_ZN14CFWL_ScrollBar10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix to i8*), i8* bitcast (void (%class.CFWL_ScrollBar*)* @_ZN14CFWL_ScrollBar12OnTimerFiredEv to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%class.CFWL_ScrollBar*)* @_ZThn88_N14CFWL_ScrollBarD1Ev to i8*), i8* bitcast (void (%class.CFWL_ScrollBar*)* @_ZThn88_N14CFWL_ScrollBarD0Ev to i8*), i8* bitcast (void (%class.CFWL_ScrollBar*)* @_ZThn88_N14CFWL_ScrollBar12OnTimerFiredEv to i8*)] }, align 8
@__const._ZN14CFWL_ScrollBar9DrawThumbEP16CFGAS_GEGraphicsRK10CFX_Matrix.param = private unnamed_addr constant { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.31" }, %"class.fxcrt::UnownedPtr.32", %"class.fxcrt::UnownedPtr.33" } { { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.31" } { %class.CFX_Matrix { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %class.CFX_RectF { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"class.fxcrt::UnownedPtr.30" { %class.CFX_RectF* inttoptr (i64 -6148914691236517206 to %class.CFX_RectF*) }, i32 -1431655766, i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", %"class.fxcrt::UnownedPtr.31" { %class.CFWL_Widget* inttoptr (i64 -6148914691236517206 to %class.CFWL_Widget*) } }, %"class.fxcrt::UnownedPtr.32" { %class.CFGAS_GEPath* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEPath*) }, %"class.fxcrt::UnownedPtr.33" { %class.CFGAS_GEGraphics* inttoptr (i64 -6148914691236517206 to %class.CFGAS_GEGraphics*) } }, align 8
@__const._ZN14CFWL_ScrollBar8OnScrollEN16CFWL_EventScroll4CodeEf.ev = private unnamed_addr constant { { i32 (...)**, i32, [4 x i8], %class.CFWL_Widget*, %class.CFWL_Widget* }, i32, float } { { i32 (...)**, i32, [4 x i8], %class.CFWL_Widget*, %class.CFWL_Widget* } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.CFWL_Widget* inttoptr (i64 -6148914691236517206 to %class.CFWL_Widget*), %class.CFWL_Widget* inttoptr (i64 -6148914691236517206 to %class.CFWL_Widget*) }, i32 -1431655766, float 0xFFFFFFFFE0000000 }, align 8

@_ZN14CFWL_ScrollBarC1EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_ = hidden unnamed_addr alias void (%class.CFWL_ScrollBar*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"*, %class.CFWL_Widget*), void (%class.CFWL_ScrollBar*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"*, %class.CFWL_Widget*)* @_ZN14CFWL_ScrollBarC2EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_
@_ZN14CFWL_ScrollBarD1Ev = hidden unnamed_addr alias void (%class.CFWL_ScrollBar*), void (%class.CFWL_ScrollBar*)* @_ZN14CFWL_ScrollBarD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBarC2EP8CFWL_AppRKN11CFWL_Widget10PropertiesEPS2_(%class.CFWL_ScrollBar*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"* dereferenceable(12), %class.CFWL_Widget*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_WidgetC2EP8CFWL_AppRKNS_10PropertiesEPS_(%class.CFWL_Widget* %5, %class.CFWL_App* %1, %"class.CFWL_Widget::Properties"* dereferenceable(12) %2, %class.CFWL_Widget* %3) #10
  %6 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV14CFWL_ScrollBar, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV14CFWL_ScrollBar, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 2
  store float 0.000000e+00, float* %8, align 8
  %9 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 3
  store float -1.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 4
  %11 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19
  %12 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 25
  %13 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 0, i64* %13, align 8
  %14 = bitcast float* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 58, i1 false)
  %15 = bitcast %class.CFX_RectF* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 96, i1 false)
  ret void
}

declare void @_ZN11CFWL_WidgetC2EP8CFWL_AppRKNS_10PropertiesEPS_(%class.CFWL_Widget*, %class.CFWL_App*, %"class.CFWL_Widget::Properties"* dereferenceable(12), %class.CFWL_Widget*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBarD2Ev(%class.CFWL_ScrollBar*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV14CFWL_ScrollBar, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV14CFWL_ScrollBar, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %5 = load %class.CFX_Timer*, %class.CFX_Timer** %4, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %4, align 8
  %6 = icmp eq %class.CFX_Timer* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %5) #10
  %8 = bitcast %class.CFX_Timer* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #11
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget* %10) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N14CFWL_ScrollBarD1Ev(%class.CFWL_ScrollBar*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 -1, i32 20, i32 1
  %3 = bitcast float* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV14CFWL_ScrollBar, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds float, float* %2, i64 22
  %5 = bitcast float* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV14CFWL_ScrollBar, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds float, float* %2, i64 66
  %7 = bitcast float* %6 to %class.CFX_Timer**
  %8 = load %class.CFX_Timer*, %class.CFX_Timer** %7, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %7, align 8
  %9 = icmp eq %class.CFX_Timer* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %8) #10
  %11 = bitcast %class.CFX_Timer* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  br label %12

12:                                               ; preds = %1, %10
  %13 = bitcast float* %2 to %class.CFWL_Widget*
  tail call void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget* %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBarD0Ev(%class.CFWL_ScrollBar*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV14CFWL_ScrollBar, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV14CFWL_ScrollBar, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %5 = load %class.CFX_Timer*, %class.CFX_Timer** %4, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %4, align 8
  %6 = icmp eq %class.CFX_Timer* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %5) #10
  %8 = bitcast %class.CFX_Timer* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #11
  br label %9

9:                                                ; preds = %1, %7
  %10 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget* %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N14CFWL_ScrollBarD0Ev(%class.CFWL_ScrollBar*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 -1, i32 20, i32 1
  %3 = bitcast float* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV14CFWL_ScrollBar, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds float, float* %2, i64 22
  %5 = bitcast float* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*], [5 x i8*] }, { [21 x i8*], [5 x i8*] }* @_ZTV14CFWL_ScrollBar, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds float, float* %2, i64 66
  %7 = bitcast float* %6 to %class.CFX_Timer**
  %8 = load %class.CFX_Timer*, %class.CFX_Timer** %7, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %7, align 8
  %9 = icmp eq %class.CFX_Timer* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %8) #10
  %11 = bitcast %class.CFX_Timer* %8 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  br label %12

12:                                               ; preds = %1, %10
  %13 = bitcast float* %2 to %class.CFWL_Widget*
  tail call void @_ZN11CFWL_WidgetD2Ev(%class.CFWL_Widget* %13) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK14CFWL_ScrollBar10GetClassIDEv(%class.CFWL_ScrollBar* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar6UpdateEv(%class.CFWL_ScrollBar*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 3
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN14CFWL_ScrollBar6LayoutEv(%class.CFWL_ScrollBar* %0)
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar6LayoutEv(%class.CFWL_ScrollBar*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  %3 = tail call { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetClientRectEv(%class.CFWL_Widget* %2) #10
  %4 = extractvalue { <2 x float>, <2 x float> } %3, 0
  %5 = extractvalue { <2 x float>, <2 x float> } %3, 1
  %6 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19
  %7 = bitcast %class.CFX_RectF* %6 to <2 x float>*
  store <2 x float> %4, <2 x float>* %7, align 4
  %8 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 2
  %9 = bitcast float* %8 to <2 x float>*
  store <2 x float> %5, <2 x float>* %9, align 4
  %10 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp ne i32 %12, 0
  %14 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 3
  %15 = select i1 %13, float* %8, float* %14
  %16 = bitcast float* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 16
  %19 = bitcast float* %18 to i32*
  store i32 %17, i32* %19, align 4
  %20 = select i1 %13, float* %14, float* %8
  %21 = load float, float* %20, align 4
  %22 = bitcast i32 %17 to float
  %23 = fmul float %22, 2.000000e+00
  %24 = fcmp olt float %21, %23
  %25 = extractelement <2 x float> %5, i32 0
  %26 = extractelement <2 x float> %5, i32 1
  %27 = extractelement <2 x float> %4, i32 0
  %28 = extractelement <2 x float> %4, i32 1
  br i1 %24, label %29, label %31

29:                                               ; preds = %1
  %30 = fmul float %21, 5.000000e-01
  store float %30, float* %18, align 4
  br label %31

31:                                               ; preds = %1, %29
  %32 = phi float [ %30, %29 ], [ %22, %1 ]
  %33 = phi i8 [ 1, %29 ], [ 0, %1 ]
  %34 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 18
  store i8 %33, i8* %34, align 1
  %35 = icmp eq i32 %12, 0
  %36 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 1
  %37 = bitcast float* %36 to i32*
  br i1 %35, label %51, label %38

38:                                               ; preds = %31
  %39 = insertelement <2 x float> undef, float %25, i32 0
  %40 = insertelement <2 x float> %39, float %32, i32 1
  %41 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21
  %42 = bitcast %class.CFX_RectF* %41 to <2 x float>*
  store <2 x float> %4, <2 x float>* %42, align 4
  %43 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 2
  %44 = bitcast float* %43 to <2 x float>*
  store <2 x float> %40, <2 x float>* %44, align 4
  %45 = fadd float %28, %26
  %46 = fsub float %45, %32
  %47 = insertelement <2 x float> undef, float %27, i32 0
  %48 = insertelement <2 x float> %47, float %46, i32 1
  %49 = insertelement <2 x float> undef, float %25, i32 0
  %50 = insertelement <2 x float> %49, float %32, i32 1
  br label %61

51:                                               ; preds = %31
  %52 = insertelement <2 x float> %5, float %32, i32 0
  %53 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21
  %54 = bitcast %class.CFX_RectF* %53 to <2 x float>*
  store <2 x float> %4, <2 x float>* %54, align 4
  %55 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 2
  %56 = bitcast float* %55 to <2 x float>*
  store <2 x float> %52, <2 x float>* %56, align 4
  %57 = fadd float %27, %25
  %58 = fsub float %57, %32
  %59 = insertelement <2 x float> %4, float %58, i32 0
  %60 = insertelement <2 x float> %5, float %32, i32 0
  br label %61

61:                                               ; preds = %38, %51
  %62 = phi <2 x float> [ %50, %38 ], [ %60, %51 ]
  %63 = phi <2 x float> [ %48, %38 ], [ %59, %51 ]
  %64 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 0
  %65 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22
  %66 = bitcast %class.CFX_RectF* %65 to <2 x float>*
  store <2 x float> %63, <2 x float>* %66, align 4
  %67 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 2
  %68 = bitcast float* %67 to <2 x float>*
  store <2 x float> %62, <2 x float>* %68, align 4
  %69 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20
  %70 = tail call zeroext i1 @_ZNK11CFWL_Widget9IsEnabledEv(%class.CFWL_Widget* %2) #10
  %71 = load i8, i8* %34, align 1, !range !2
  br i1 %70, label %72, label %165

72:                                               ; preds = %61
  %73 = icmp eq i8 %71, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %72
  %75 = bitcast %class.CFX_RectF* %69 to <2 x float>*
  %76 = load <2 x float>, <2 x float>* %75, align 4
  br label %165

77:                                               ; preds = %72
  %78 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 3
  %79 = load float, float* %78, align 4
  %80 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 2
  %81 = load float, float* %80, align 8
  %82 = fsub float %79, %81
  %83 = fcmp olt float %82, 0.000000e+00
  br i1 %83, label %84, label %109

84:                                               ; preds = %77
  %85 = load i32, i32* %10, align 4
  %86 = and i32 %85, 1
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %99, label %88

88:                                               ; preds = %84
  %89 = load float, float* %64, align 4
  %90 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 1
  %91 = load float, float* %90, align 4
  %92 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 3
  %93 = load float, float* %92, align 4
  %94 = fadd float %91, %93
  %95 = load float, float* %8, align 4
  %96 = insertelement <2 x float> undef, float %89, i32 0
  %97 = insertelement <2 x float> %96, float %94, i32 1
  %98 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %95, i32 0
  br label %165

99:                                               ; preds = %84
  %100 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 0
  %101 = load float, float* %100, align 4
  %102 = load float, float* %67, align 4
  %103 = fadd float %101, %102
  %104 = load float, float* %36, align 4
  %105 = load float, float* %14, align 4
  %106 = insertelement <2 x float> undef, float %103, i32 0
  %107 = insertelement <2 x float> %106, float %104, i32 1
  %108 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %105, i32 1
  br label %165

109:                                              ; preds = %77
  %110 = bitcast float* %64 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = load i32, i32* %37, align 4
  %113 = load float, float* %8, align 4
  %114 = load float, float* %14, align 4
  %115 = load i32, i32* %10, align 4
  %116 = and i32 %115, 1
  %117 = icmp ne i32 %116, 0
  %118 = select i1 %117, float %114, float %113
  %119 = load float, float* %18, align 4
  %120 = fmul float %119, 2.000000e+00
  %121 = fsub float %118, %120
  %122 = fcmp olt float %121, %119
  %123 = select i1 %122, float 0.000000e+00, float %121
  %124 = fmul float %123, %123
  %125 = fadd float %82, %123
  %126 = fdiv float %124, %125
  %127 = fcmp olt float %126, 5.000000e+00
  %128 = select i1 %127, float 5.000000e+00, float %126
  %129 = fsub float %123, %128
  %130 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 7
  %131 = load float, float* %130, align 4
  %132 = fcmp olt float %131, %81
  %133 = select i1 %132, float* %80, float* %130
  %134 = fcmp une float %82, 0.000000e+00
  br i1 %134, label %135, label %165

135:                                              ; preds = %109
  %136 = load float, float* %133, align 4
  %137 = fcmp olt float %79, %136
  %138 = select i1 %137, float* %78, float* %133
  %139 = fcmp olt float %129, 0.000000e+00
  %140 = select i1 %139, float 0.000000e+00, float %129
  %141 = load float, float* %138, align 4
  %142 = fsub float %141, %81
  %143 = fmul float %140, %142
  %144 = fdiv float %143, %82
  %145 = fadd float %119, %144
  br i1 %117, label %146, label %150

146:                                              ; preds = %135
  %147 = bitcast i32 %112 to float
  %148 = fadd float %145, %147
  %149 = bitcast float %148 to i32
  br label %154

150:                                              ; preds = %135
  %151 = bitcast i32 %111 to float
  %152 = fadd float %145, %151
  %153 = bitcast float %152 to i32
  br label %154

154:                                              ; preds = %150, %146
  %155 = phi float [ %128, %150 ], [ %113, %146 ]
  %156 = phi i32 [ %153, %150 ], [ %111, %146 ]
  %157 = phi i32 [ %112, %150 ], [ %149, %146 ]
  %158 = phi float [ %114, %150 ], [ %128, %146 ]
  %159 = bitcast i32 %156 to float
  %160 = insertelement <2 x float> undef, float %159, i32 0
  %161 = bitcast i32 %157 to float
  %162 = insertelement <2 x float> %160, float %161, i32 1
  %163 = insertelement <2 x float> undef, float %155, i32 0
  %164 = insertelement <2 x float> %163, float %158, i32 1
  br label %165

165:                                              ; preds = %61, %74, %88, %99, %109, %154
  %166 = phi i8 [ 0, %88 ], [ 0, %99 ], [ 1, %74 ], [ 0, %154 ], [ 0, %109 ], [ %71, %61 ]
  %167 = phi <2 x float> [ %97, %88 ], [ %107, %99 ], [ %76, %74 ], [ %162, %154 ], [ zeroinitializer, %109 ], [ zeroinitializer, %61 ]
  %168 = phi <2 x float> [ %98, %88 ], [ %108, %99 ], [ zeroinitializer, %74 ], [ %164, %154 ], [ zeroinitializer, %109 ], [ zeroinitializer, %61 ]
  %169 = bitcast %class.CFX_RectF* %69 to <2 x float>*
  store <2 x float> %167, <2 x float>* %169, align 4
  %170 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 2
  %171 = bitcast float* %170 to <2 x float>*
  store <2 x float> %168, <2 x float>* %171, align 4
  %172 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23
  %173 = icmp eq i8 %166, 0
  %174 = extractelement <2 x float> %167, i32 1
  %175 = extractelement <2 x float> %168, i32 1
  %176 = extractelement <2 x float> %167, i32 0
  %177 = extractelement <2 x float> %168, i32 0
  br i1 %173, label %178, label %186

178:                                              ; preds = %165
  %179 = load float, float* %64, align 4
  %180 = insertelement <2 x float> undef, float %179, i32 0
  %181 = load float, float* %36, align 4
  %182 = insertelement <2 x float> %180, float %181, i32 1
  %183 = load i32, i32* %10, align 4
  %184 = and i32 %183, 1
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %213, label %192

186:                                              ; preds = %165
  %187 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23, i32 2
  %188 = bitcast float* %187 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %188, align 4
  %189 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24
  %190 = bitcast %class.CFX_RectF* %189 to <2 x float>*
  %191 = load <2 x float>, <2 x float>* %190, align 4, !noalias !3
  br label %233

192:                                              ; preds = %178
  %193 = load float, float* %8, align 4
  %194 = insertelement <2 x float> undef, float %193, i32 0
  %195 = fadd float %174, %175
  %196 = fadd float %174, %195
  %197 = fmul float %196, 5.000000e-01
  %198 = insertelement <2 x float> %194, float %197, i32 1
  %199 = bitcast %class.CFX_RectF* %172 to <2 x float>*
  store <2 x float> %182, <2 x float>* %199, align 4
  %200 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23, i32 2
  %201 = bitcast float* %200 to <2 x float>*
  store <2 x float> %198, <2 x float>* %201, align 4
  %202 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24
  %203 = fadd float %174, %175
  %204 = fadd float %174, %203
  %205 = fmul float %204, 5.000000e-01
  %206 = load float, float* %8, align 4
  %207 = load float, float* %14, align 4
  %208 = fadd float %181, %207
  %209 = fsub float %208, %205
  %210 = insertelement <2 x float> %180, float %205, i32 1
  %211 = insertelement <2 x float> undef, float %206, i32 0
  %212 = insertelement <2 x float> %211, float %209, i32 1
  br label %233

213:                                              ; preds = %178
  %214 = fadd float %176, %177
  %215 = fadd float %176, %214
  %216 = fmul float %215, 5.000000e-01
  %217 = insertelement <2 x float> undef, float %216, i32 0
  %218 = load float, float* %14, align 4
  %219 = insertelement <2 x float> %217, float %218, i32 1
  %220 = bitcast %class.CFX_RectF* %172 to <2 x float>*
  store <2 x float> %182, <2 x float>* %220, align 4
  %221 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23, i32 2
  %222 = bitcast float* %221 to <2 x float>*
  store <2 x float> %219, <2 x float>* %222, align 4
  %223 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24
  %224 = fadd float %176, %177
  %225 = fadd float %176, %224
  %226 = fmul float %225, 5.000000e-01
  %227 = load float, float* %14, align 4
  %228 = fsub float %227, %226
  %229 = insertelement <2 x float> undef, float %226, i32 0
  %230 = insertelement <2 x float> %229, float %181, i32 1
  %231 = insertelement <2 x float> undef, float %228, i32 0
  %232 = insertelement <2 x float> %231, float %227, i32 1
  br label %233

233:                                              ; preds = %186, %192, %213
  %234 = phi %class.CFX_RectF* [ %202, %192 ], [ %223, %213 ], [ %189, %186 ]
  %235 = phi <2 x float> [ %210, %192 ], [ %230, %213 ], [ %191, %186 ]
  %236 = phi <2 x float> [ %212, %192 ], [ %232, %213 ], [ zeroinitializer, %186 ]
  %237 = bitcast %class.CFX_RectF* %234 to <2 x float>*
  store <2 x float> %235, <2 x float>* %237, align 4
  %238 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24, i32 2
  %239 = bitcast float* %238 to <2 x float>*
  store <2 x float> %236, <2 x float>* %239, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_ScrollBar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = alloca %class.CFWL_ThemeBackground, align 8
  %6 = alloca %class.CFWL_ThemeBackground, align 8
  %7 = alloca %class.CFWL_ThemeBackground, align 8
  %8 = alloca %class.CFWL_ThemeBackground, align 8
  %9 = icmp eq %class.CFGAS_GEGraphics* %1, null
  br i1 %9, label %135, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  %12 = tail call zeroext i1 @_ZNK11CFWL_Widget9HasBorderEv(%class.CFWL_Widget* %11) #10
  br i1 %12, label %13, label %14

13:                                               ; preds = %10
  tail call void @_ZN11CFWL_Widget10DrawBorderEP16CFGAS_GEGraphics9CFWL_PartRK10CFX_Matrix(%class.CFWL_Widget* %11, %class.CFGAS_GEGraphics* nonnull %1, i8 zeroext 3, %class.CFX_Matrix* dereferenceable(24) %2) #10
  br label %14

14:                                               ; preds = %13, %10
  %15 = bitcast %class.CFWL_ThemeBackground* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %15) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.31" }, %"class.fxcrt::UnownedPtr.32", %"class.fxcrt::UnownedPtr.33" }* @__const._ZN14CFWL_ScrollBar9DrawThumbEP16CFGAS_GEGraphicsRK10CFX_Matrix.param to i8*), i64 80, i1 false) #10
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %8, %class.CFWL_Widget* %11, %class.CFGAS_GEGraphics* nonnull %1) #10
  %16 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %8, i64 0, i32 0, i32 4
  store i8 23, i8* %16, align 4
  %17 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 11
  %23 = load i32, i32* %22, align 4
  br label %24

24:                                               ; preds = %14, %21
  %25 = phi i32 [ 8, %14 ], [ %23, %21 ]
  %26 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %8, i64 0, i32 0, i32 3
  store i32 %25, i32* %26, align 8
  %27 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %15, i8* align 4 %27, i64 24, i1 false) #10
  %28 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23
  %29 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %8, i64 0, i32 0, i32 1
  %30 = bitcast %class.CFX_RectF* %29 to i8*
  %31 = bitcast %class.CFX_RectF* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 4 %31, i64 16, i1 false) #10
  %32 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %11) #10
  %33 = bitcast %class.IFWL_ThemeProvider* %32 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %34 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %33, align 8
  %35 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %34, i64 3
  %36 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %35, align 8
  call void %36(%class.IFWL_ThemeProvider* %32, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %8) #10
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %15) #10
  %37 = bitcast %class.CFWL_ThemeBackground* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %37) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.31" }, %"class.fxcrt::UnownedPtr.32", %"class.fxcrt::UnownedPtr.33" }* @__const._ZN14CFWL_ScrollBar9DrawThumbEP16CFGAS_GEGraphicsRK10CFX_Matrix.param to i8*), i64 80, i1 false) #10
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %7, %class.CFWL_Widget* %11, %class.CFGAS_GEGraphics* nonnull %1) #10
  %38 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %7, i64 0, i32 0, i32 4
  store i8 37, i8* %38, align 4
  %39 = load i32, i32* %17, align 8
  %40 = and i32 %39, 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %24
  %43 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 12
  %44 = load i32, i32* %43, align 8
  br label %45

45:                                               ; preds = %24, %42
  %46 = phi i32 [ 8, %24 ], [ %44, %42 ]
  %47 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %7, i64 0, i32 0, i32 3
  store i32 %46, i32* %47, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 4 %27, i64 24, i1 false) #10
  %48 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24
  %49 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %7, i64 0, i32 0, i32 1
  %50 = bitcast %class.CFX_RectF* %49 to i8*
  %51 = bitcast %class.CFX_RectF* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 4 %51, i64 16, i1 false) #10
  %52 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %11) #10
  %53 = bitcast %class.IFWL_ThemeProvider* %52 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %54 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %53, align 8
  %55 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %54, i64 3
  %56 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %55, align 8
  call void %56(%class.IFWL_ThemeProvider* %52, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %7) #10
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %37) #10
  %57 = bitcast %class.CFWL_ThemeBackground* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %57) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.31" }, %"class.fxcrt::UnownedPtr.32", %"class.fxcrt::UnownedPtr.33" }* @__const._ZN14CFWL_ScrollBar9DrawThumbEP16CFGAS_GEGraphicsRK10CFX_Matrix.param to i8*), i64 80, i1 false) #10
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %6, %class.CFWL_Widget* %11, %class.CFGAS_GEGraphics* nonnull %1) #10
  %58 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %6, i64 0, i32 0, i32 4
  store i8 15, i8* %58, align 4
  %59 = load i32, i32* %17, align 8
  %60 = and i32 %59, 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %45
  %63 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 8
  %64 = load i32, i32* %63, align 8
  br label %65

65:                                               ; preds = %62, %45
  %66 = phi i32 [ 8, %45 ], [ %64, %62 ]
  %67 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %6, i64 0, i32 0, i32 3
  store i32 %66, i32* %67, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* align 4 %27, i64 24, i1 false) #10
  %68 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21
  %69 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %6, i64 0, i32 0, i32 1
  %70 = bitcast %class.CFX_RectF* %69 to i8*
  %71 = bitcast %class.CFX_RectF* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 4 %71, i64 16, i1 false) #10
  %72 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %6, i64 0, i32 0, i32 1, i32 3
  %73 = load float, float* %72, align 4
  %74 = fcmp ogt float %73, 0.000000e+00
  br i1 %74, label %75, label %85

75:                                               ; preds = %65
  %76 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %6, i64 0, i32 0, i32 1, i32 2
  %77 = load float, float* %76, align 8
  %78 = fcmp ogt float %77, 0.000000e+00
  br i1 %78, label %79, label %85

79:                                               ; preds = %75
  %80 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %11) #10
  %81 = bitcast %class.IFWL_ThemeProvider* %80 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %82 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %81, align 8
  %83 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %82, i64 3
  %84 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %83, align 8
  call void %84(%class.IFWL_ThemeProvider* %80, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %6) #10
  br label %85

85:                                               ; preds = %65, %75, %79
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %57) #10
  %86 = bitcast %class.CFWL_ThemeBackground* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %86) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %86, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.31" }, %"class.fxcrt::UnownedPtr.32", %"class.fxcrt::UnownedPtr.33" }* @__const._ZN14CFWL_ScrollBar9DrawThumbEP16CFGAS_GEGraphicsRK10CFX_Matrix.param to i8*), i64 80, i1 false) #10
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %5, %class.CFWL_Widget* %11, %class.CFGAS_GEGraphics* nonnull %1) #10
  %87 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 4
  store i8 1, i8* %87, align 4
  %88 = load i32, i32* %17, align 8
  %89 = and i32 %88, 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 9
  %93 = load i32, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ 8, %85 ], [ %93, %91 ]
  %96 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 3
  store i32 %95, i32* %96, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %86, i8* align 4 %27, i64 24, i1 false) #10
  %97 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22
  %98 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 1
  %99 = bitcast %class.CFX_RectF* %98 to i8*
  %100 = bitcast %class.CFX_RectF* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 4 %100, i64 16, i1 false) #10
  %101 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 1, i32 3
  %102 = load float, float* %101, align 4
  %103 = fcmp ogt float %102, 0.000000e+00
  br i1 %103, label %104, label %114

104:                                              ; preds = %94
  %105 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 1, i32 2
  %106 = load float, float* %105, align 8
  %107 = fcmp ogt float %106, 0.000000e+00
  br i1 %107, label %108, label %114

108:                                              ; preds = %104
  %109 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %11) #10
  %110 = bitcast %class.IFWL_ThemeProvider* %109 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %111 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %110, align 8
  %112 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %111, i64 3
  %113 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %112, align 8
  call void %113(%class.IFWL_ThemeProvider* %109, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %5) #10
  br label %114

114:                                              ; preds = %94, %104, %108
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %86) #10
  %115 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %115) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.31" }, %"class.fxcrt::UnownedPtr.32", %"class.fxcrt::UnownedPtr.33" }* @__const._ZN14CFWL_ScrollBar9DrawThumbEP16CFGAS_GEGraphicsRK10CFX_Matrix.param to i8*), i64 80, i1 false) #10
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %11, %class.CFGAS_GEGraphics* nonnull %1) #10
  %116 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 28, i8* %116, align 4
  %117 = load i32, i32* %17, align 8
  %118 = and i32 %117, 4
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %114
  %121 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 10
  %122 = load i32, i32* %121, align 8
  br label %123

123:                                              ; preds = %114, %120
  %124 = phi i32 [ %122, %120 ], [ 8, %114 ]
  %125 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 3
  store i32 %124, i32* %125, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* align 4 %27, i64 24, i1 false) #10
  %126 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20
  %127 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1
  %128 = bitcast %class.CFX_RectF* %127 to i8*
  %129 = bitcast %class.CFX_RectF* %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 4 %129, i64 16, i1 false) #10
  %130 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %11) #10
  %131 = bitcast %class.IFWL_ThemeProvider* %130 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %132 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %131, align 8
  %133 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %132, i64 3
  %134 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %133, align 8
  call void %134(%class.IFWL_ThemeProvider* %130, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #10
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %115) #10
  br label %135

135:                                              ; preds = %3, %123
  ret void
}

declare zeroext i1 @_ZNK11CFWL_Widget9HasBorderEv(%class.CFWL_Widget*) local_unnamed_addr #1

declare void @_ZN11CFWL_Widget10DrawBorderEP16CFGAS_GEGraphics9CFWL_PartRK10CFX_Matrix(%class.CFWL_Widget*, %class.CFGAS_GEGraphics*, i8 zeroext, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar9DrawTrackEP16CFGAS_GEGraphicsbRK10CFX_Matrix(%class.CFWL_ScrollBar*, %class.CFGAS_GEGraphics*, i1 zeroext, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.CFWL_ThemeBackground, align 8
  %6 = bitcast %class.CFWL_ThemeBackground* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.31" }, %"class.fxcrt::UnownedPtr.32", %"class.fxcrt::UnownedPtr.33" }* @__const._ZN14CFWL_ScrollBar9DrawThumbEP16CFGAS_GEGraphicsRK10CFX_Matrix.param to i8*), i64 80, i1 false)
  %7 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %5, %class.CFWL_Widget* %7, %class.CFGAS_GEGraphics* %1) #10
  %8 = select i1 %2, i8 23, i8 37
  %9 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 4
  store i8 %8, i8* %9, align 4
  %10 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %4
  br i1 %2, label %15, label %18

15:                                               ; preds = %14
  %16 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 11
  %17 = load i32, i32* %16, align 4
  br label %21

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 12
  %20 = load i32, i32* %19, align 8
  br label %21

21:                                               ; preds = %4, %15, %18
  %22 = phi i32 [ 8, %4 ], [ %17, %15 ], [ %20, %18 ]
  %23 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 3
  store i32 %22, i32* %23, align 8
  %24 = bitcast %class.CFX_Matrix* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 4 %24, i64 24, i1 false)
  %25 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23
  %26 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24
  %27 = select i1 %2, %class.CFX_RectF* %25, %class.CFX_RectF* %26
  %28 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 1
  %29 = bitcast %class.CFX_RectF* %28 to i8*
  %30 = bitcast %class.CFX_RectF* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 4 %30, i64 16, i1 false)
  %31 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %7) #10
  %32 = bitcast %class.IFWL_ThemeProvider* %31 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %33 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %33, i64 3
  %35 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %34, align 8
  call void %35(%class.IFWL_ThemeProvider* %31, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %5) #10
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar12DrawArrowBtnEP16CFGAS_GEGraphicsbRK10CFX_Matrix(%class.CFWL_ScrollBar*, %class.CFGAS_GEGraphics*, i1 zeroext, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.CFWL_ThemeBackground, align 8
  %6 = bitcast %class.CFWL_ThemeBackground* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.31" }, %"class.fxcrt::UnownedPtr.32", %"class.fxcrt::UnownedPtr.33" }* @__const._ZN14CFWL_ScrollBar9DrawThumbEP16CFGAS_GEGraphicsRK10CFX_Matrix.param to i8*), i64 80, i1 false)
  %7 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %5, %class.CFWL_Widget* %7, %class.CFGAS_GEGraphics* %1) #10
  %8 = select i1 %2, i8 15, i8 1
  %9 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 4
  store i8 %8, i8* %9, align 4
  %10 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 2
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %4
  br i1 %2, label %15, label %18

15:                                               ; preds = %14
  %16 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 8
  %17 = load i32, i32* %16, align 8
  br label %21

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 9
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %4, %15, %18
  %22 = phi i32 [ 8, %4 ], [ %17, %15 ], [ %20, %18 ]
  %23 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 3
  store i32 %22, i32* %23, align 8
  %24 = bitcast %class.CFX_Matrix* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 4 %24, i64 24, i1 false)
  %25 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21
  %26 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22
  %27 = select i1 %2, %class.CFX_RectF* %25, %class.CFX_RectF* %26
  %28 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 1
  %29 = bitcast %class.CFX_RectF* %28 to i8*
  %30 = bitcast %class.CFX_RectF* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 4 %30, i64 16, i1 false)
  %31 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 1, i32 3
  %32 = load float, float* %31, align 4
  %33 = fcmp ogt float %32, 0.000000e+00
  br i1 %33, label %34, label %44

34:                                               ; preds = %21
  %35 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %5, i64 0, i32 0, i32 1, i32 2
  %36 = load float, float* %35, align 8
  %37 = fcmp ogt float %36, 0.000000e+00
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %7) #10
  %40 = bitcast %class.IFWL_ThemeProvider* %39 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %41 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %41, i64 3
  %43 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %42, align 8
  call void %43(%class.IFWL_ThemeProvider* %39, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %5) #10
  br label %44

44:                                               ; preds = %38, %34, %21
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar9DrawThumbEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_ScrollBar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_ThemeBackground, align 8
  %5 = bitcast %class.CFWL_ThemeBackground* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr.30", i32, i8, i8, i8, [1 x i8], %"class.fxcrt::UnownedPtr.31" }, %"class.fxcrt::UnownedPtr.32", %"class.fxcrt::UnownedPtr.33" }* @__const._ZN14CFWL_ScrollBar9DrawThumbEP16CFGAS_GEGraphicsRK10CFX_Matrix.param to i8*), i64 80, i1 false)
  %6 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  call void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground* nonnull %4, %class.CFWL_Widget* %6, %class.CFGAS_GEGraphics* %1) #10
  %7 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 4
  store i8 28, i8* %7, align 4
  %8 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 10
  %14 = load i32, i32* %13, align 8
  br label %15

15:                                               ; preds = %3, %12
  %16 = phi i32 [ %14, %12 ], [ 8, %3 ]
  %17 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 3
  store i32 %16, i32* %17, align 8
  %18 = bitcast %class.CFX_Matrix* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 4 %18, i64 24, i1 false)
  %19 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20
  %20 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %4, i64 0, i32 0, i32 1
  %21 = bitcast %class.CFX_RectF* %20 to i8*
  %22 = bitcast %class.CFX_RectF* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %22, i64 16, i1 false)
  %23 = call %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget* %6) #10
  %24 = bitcast %class.IFWL_ThemeProvider* %23 to void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)***
  %25 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)**, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*** %24, align 8
  %26 = getelementptr inbounds void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %25, i64 3
  %27 = load void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)*, void (%class.IFWL_ThemeProvider*, %class.CFWL_ThemeBackground*)** %26, align 8
  call void %27(%class.IFWL_ThemeProvider* %23, %class.CFWL_ThemeBackground* nonnull dereferenceable(80) %4) #10
  call void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar11SetTrackPosEf(%class.CFWL_ScrollBar*, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 7
  store float %1, float* %3, align 4
  %4 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20
  %5 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK11CFWL_Widget9IsEnabledEv(%class.CFWL_Widget* %5) #10
  %7 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 18
  %8 = load i8, i8* %7, align 1, !range !2
  br i1 %6, label %9, label %114

9:                                                ; preds = %2
  %10 = icmp eq i8 %8, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %9
  %12 = bitcast %class.CFX_RectF* %4 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  br label %114

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 3
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 2
  %18 = load float, float* %17, align 8
  %19 = fsub float %16, %18
  %20 = fcmp olt float %19, 0.000000e+00
  br i1 %20, label %21, label %52

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %39, label %26

26:                                               ; preds = %21
  %27 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 0
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 1
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 3
  %32 = load float, float* %31, align 4
  %33 = fadd float %30, %32
  %34 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 2
  %35 = load float, float* %34, align 4
  %36 = insertelement <2 x float> undef, float %28, i32 0
  %37 = insertelement <2 x float> %36, float %33, i32 1
  %38 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %35, i32 0
  br label %114

39:                                               ; preds = %21
  %40 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 0
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 2
  %43 = load float, float* %42, align 4
  %44 = fadd float %41, %43
  %45 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 1
  %46 = load float, float* %45, align 4
  %47 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 3
  %48 = load float, float* %47, align 4
  %49 = insertelement <2 x float> undef, float %44, i32 0
  %50 = insertelement <2 x float> %49, float %46, i32 1
  %51 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %48, i32 1
  br label %114

52:                                               ; preds = %14
  %53 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 0
  %54 = bitcast float* %53 to i32*
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 1
  %57 = bitcast float* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 2
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 3
  %62 = load float, float* %61, align 4
  %63 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = and i32 %64, 1
  %66 = icmp ne i32 %65, 0
  %67 = select i1 %66, float %62, float %60
  %68 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 16
  %69 = load float, float* %68, align 4
  %70 = fmul float %69, 2.000000e+00
  %71 = fsub float %67, %70
  %72 = fcmp olt float %71, %69
  %73 = select i1 %72, float 0.000000e+00, float %71
  %74 = fmul float %73, %73
  %75 = fadd float %19, %73
  %76 = fdiv float %74, %75
  %77 = fcmp olt float %76, 5.000000e+00
  %78 = select i1 %77, float 5.000000e+00, float %76
  %79 = fsub float %73, %78
  %80 = load float, float* %3, align 4
  %81 = fcmp olt float %80, %18
  %82 = select i1 %81, float* %17, float* %3
  %83 = fcmp une float %19, 0.000000e+00
  br i1 %83, label %84, label %114

84:                                               ; preds = %52
  %85 = load float, float* %82, align 4
  %86 = fcmp olt float %16, %85
  %87 = select i1 %86, float* %15, float* %82
  %88 = fcmp olt float %79, 0.000000e+00
  %89 = select i1 %88, float 0.000000e+00, float %79
  %90 = load float, float* %87, align 4
  %91 = fsub float %90, %18
  %92 = fmul float %89, %91
  %93 = fdiv float %92, %19
  %94 = fadd float %69, %93
  br i1 %66, label %95, label %99

95:                                               ; preds = %84
  %96 = bitcast i32 %58 to float
  %97 = fadd float %94, %96
  %98 = bitcast float %97 to i32
  br label %103

99:                                               ; preds = %84
  %100 = bitcast i32 %55 to float
  %101 = fadd float %94, %100
  %102 = bitcast float %101 to i32
  br label %103

103:                                              ; preds = %99, %95
  %104 = phi float [ %78, %99 ], [ %60, %95 ]
  %105 = phi i32 [ %102, %99 ], [ %55, %95 ]
  %106 = phi i32 [ %58, %99 ], [ %98, %95 ]
  %107 = phi float [ %62, %99 ], [ %78, %95 ]
  %108 = bitcast i32 %105 to float
  %109 = insertelement <2 x float> undef, float %108, i32 0
  %110 = bitcast i32 %106 to float
  %111 = insertelement <2 x float> %109, float %110, i32 1
  %112 = insertelement <2 x float> undef, float %104, i32 0
  %113 = insertelement <2 x float> %112, float %107, i32 1
  br label %114

114:                                              ; preds = %2, %11, %26, %39, %52, %103
  %115 = phi i8 [ 0, %26 ], [ 0, %39 ], [ 1, %11 ], [ 0, %103 ], [ 0, %52 ], [ %8, %2 ]
  %116 = phi <2 x float> [ %37, %26 ], [ %50, %39 ], [ %13, %11 ], [ %111, %103 ], [ zeroinitializer, %52 ], [ zeroinitializer, %2 ]
  %117 = phi <2 x float> [ %38, %26 ], [ %51, %39 ], [ zeroinitializer, %11 ], [ %113, %103 ], [ zeroinitializer, %52 ], [ zeroinitializer, %2 ]
  %118 = bitcast %class.CFX_RectF* %4 to <2 x float>*
  store <2 x float> %116, <2 x float>* %118, align 4
  %119 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 2
  %120 = bitcast float* %119 to <2 x float>*
  store <2 x float> %117, <2 x float>* %120, align 4
  %121 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23
  %122 = icmp eq i8 %115, 0
  %123 = extractelement <2 x float> %116, i32 1
  %124 = extractelement <2 x float> %117, i32 1
  %125 = extractelement <2 x float> %116, i32 0
  %126 = extractelement <2 x float> %117, i32 0
  br i1 %122, label %127, label %138

127:                                              ; preds = %114
  %128 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 0
  %129 = load float, float* %128, align 4
  %130 = insertelement <2 x float> undef, float %129, i32 0
  %131 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 1
  %132 = load float, float* %131, align 4
  %133 = insertelement <2 x float> %130, float %132, i32 1
  %134 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = and i32 %135, 1
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %168, label %144

138:                                              ; preds = %114
  %139 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23, i32 2
  %140 = bitcast float* %139 to <2 x float>*
  store <2 x float> zeroinitializer, <2 x float>* %140, align 4
  %141 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24
  %142 = bitcast %class.CFX_RectF* %141 to <2 x float>*
  %143 = load <2 x float>, <2 x float>* %142, align 4, !noalias !6
  br label %190

144:                                              ; preds = %127
  %145 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 2
  %146 = load float, float* %145, align 4
  %147 = insertelement <2 x float> undef, float %146, i32 0
  %148 = fadd float %123, %124
  %149 = fadd float %123, %148
  %150 = fmul float %149, 5.000000e-01
  %151 = insertelement <2 x float> %147, float %150, i32 1
  %152 = bitcast %class.CFX_RectF* %121 to <2 x float>*
  store <2 x float> %133, <2 x float>* %152, align 4
  %153 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23, i32 2
  %154 = bitcast float* %153 to <2 x float>*
  store <2 x float> %151, <2 x float>* %154, align 4
  %155 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24
  %156 = fadd float %123, %124
  %157 = fadd float %123, %156
  %158 = fmul float %157, 5.000000e-01
  %159 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 2
  %160 = load float, float* %159, align 4
  %161 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 3
  %162 = load float, float* %161, align 4
  %163 = fadd float %132, %162
  %164 = fsub float %163, %158
  %165 = insertelement <2 x float> %130, float %158, i32 1
  %166 = insertelement <2 x float> undef, float %160, i32 0
  %167 = insertelement <2 x float> %166, float %164, i32 1
  br label %190

168:                                              ; preds = %127
  %169 = fadd float %125, %126
  %170 = fadd float %125, %169
  %171 = fmul float %170, 5.000000e-01
  %172 = insertelement <2 x float> undef, float %171, i32 0
  %173 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 3
  %174 = load float, float* %173, align 4
  %175 = insertelement <2 x float> %172, float %174, i32 1
  %176 = bitcast %class.CFX_RectF* %121 to <2 x float>*
  store <2 x float> %133, <2 x float>* %176, align 4
  %177 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23, i32 2
  %178 = bitcast float* %177 to <2 x float>*
  store <2 x float> %175, <2 x float>* %178, align 4
  %179 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24
  %180 = fadd float %125, %126
  %181 = fadd float %125, %180
  %182 = fmul float %181, 5.000000e-01
  %183 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 3
  %184 = load float, float* %183, align 4
  %185 = fsub float %184, %182
  %186 = insertelement <2 x float> undef, float %182, i32 0
  %187 = insertelement <2 x float> %186, float %132, i32 1
  %188 = insertelement <2 x float> undef, float %185, i32 0
  %189 = insertelement <2 x float> %188, float %184, i32 1
  br label %190

190:                                              ; preds = %138, %144, %168
  %191 = phi %class.CFX_RectF* [ %155, %144 ], [ %179, %168 ], [ %141, %138 ]
  %192 = phi <2 x float> [ %165, %144 ], [ %187, %168 ], [ %143, %138 ]
  %193 = phi <2 x float> [ %167, %144 ], [ %189, %168 ], [ zeroinitializer, %138 ]
  %194 = bitcast %class.CFX_RectF* %191 to <2 x float>*
  store <2 x float> %192, <2 x float>* %194, align 4
  %195 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24, i32 2
  %196 = bitcast float* %195 to <2 x float>*
  store <2 x float> %193, <2 x float>* %196, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN14CFWL_ScrollBar19CalcThumbButtonRectERK9CFX_RectF(%class.CFWL_ScrollBar*, %class.CFX_RectF* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK11CFWL_Widget9IsEnabledEv(%class.CFWL_Widget* %3) #10
  br i1 %4, label %5, label %113

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 18
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = bitcast %class.CFX_RectF* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  br label %113

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 3
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 2
  %16 = load float, float* %15, align 8
  %17 = fsub float %14, %16
  %18 = fcmp olt float %17, 0.000000e+00
  br i1 %18, label %19, label %50

19:                                               ; preds = %12
  %20 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %37, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 0
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 1
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 3
  %30 = load float, float* %29, align 4
  %31 = fadd float %28, %30
  %32 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 2
  %33 = load float, float* %32, align 4
  %34 = insertelement <2 x float> undef, float %26, i32 0
  %35 = insertelement <2 x float> %34, float %31, i32 1
  %36 = insertelement <2 x float> <float undef, float 0.000000e+00>, float %33, i32 0
  br label %113

37:                                               ; preds = %19
  %38 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 0
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 2
  %41 = load float, float* %40, align 4
  %42 = fadd float %39, %41
  %43 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 1
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 3
  %46 = load float, float* %45, align 4
  %47 = insertelement <2 x float> undef, float %42, i32 0
  %48 = insertelement <2 x float> %47, float %44, i32 1
  %49 = insertelement <2 x float> <float 0.000000e+00, float undef>, float %46, i32 1
  br label %113

50:                                               ; preds = %12
  %51 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 0
  %52 = bitcast float* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 1
  %55 = bitcast float* %54 to i32*
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 2
  %58 = load float, float* %57, align 4
  %59 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 3
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 1
  %64 = icmp ne i32 %63, 0
  %65 = select i1 %64, float %60, float %58
  %66 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 16
  %67 = load float, float* %66, align 4
  %68 = fmul float %67, 2.000000e+00
  %69 = fsub float %65, %68
  %70 = fcmp olt float %69, %67
  %71 = select i1 %70, float 0.000000e+00, float %69
  %72 = fmul float %71, %71
  %73 = fadd float %17, %71
  %74 = fdiv float %72, %73
  %75 = fcmp olt float %74, 5.000000e+00
  %76 = select i1 %75, float 5.000000e+00, float %74
  %77 = fsub float %71, %76
  %78 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 7
  %79 = load float, float* %78, align 4
  %80 = fcmp olt float %79, %16
  %81 = select i1 %80, float* %15, float* %78
  %82 = fcmp une float %17, 0.000000e+00
  br i1 %82, label %83, label %113

83:                                               ; preds = %50
  %84 = load float, float* %81, align 4
  %85 = fcmp olt float %14, %84
  %86 = select i1 %85, float* %13, float* %81
  %87 = fcmp olt float %77, 0.000000e+00
  %88 = select i1 %87, float 0.000000e+00, float %77
  %89 = load float, float* %86, align 4
  %90 = fsub float %89, %16
  %91 = fmul float %88, %90
  %92 = fdiv float %91, %17
  %93 = fadd float %67, %92
  br i1 %64, label %94, label %98

94:                                               ; preds = %83
  %95 = bitcast i32 %56 to float
  %96 = fadd float %93, %95
  %97 = bitcast float %96 to i32
  br label %102

98:                                               ; preds = %83
  %99 = bitcast i32 %53 to float
  %100 = fadd float %93, %99
  %101 = bitcast float %100 to i32
  br label %102

102:                                              ; preds = %98, %94
  %103 = phi float [ %76, %98 ], [ %58, %94 ]
  %104 = phi i32 [ %101, %98 ], [ %53, %94 ]
  %105 = phi i32 [ %56, %98 ], [ %97, %94 ]
  %106 = phi float [ %60, %98 ], [ %76, %94 ]
  %107 = bitcast i32 %104 to float
  %108 = insertelement <2 x float> undef, float %107, i32 0
  %109 = bitcast i32 %105 to float
  %110 = insertelement <2 x float> %108, float %109, i32 1
  %111 = insertelement <2 x float> undef, float %103, i32 0
  %112 = insertelement <2 x float> %111, float %106, i32 1
  br label %113

113:                                              ; preds = %102, %50, %2, %24, %37, %9
  %114 = phi <2 x float> [ %35, %24 ], [ %48, %37 ], [ %11, %9 ], [ zeroinitializer, %2 ], [ %110, %102 ], [ zeroinitializer, %50 ]
  %115 = phi <2 x float> [ %36, %24 ], [ %49, %37 ], [ zeroinitializer, %9 ], [ zeroinitializer, %2 ], [ %112, %102 ], [ zeroinitializer, %50 ]
  %116 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %114, 0
  %117 = insertvalue { <2 x float>, <2 x float> } %116, <2 x float> %115, 1
  ret { <2 x float>, <2 x float> } %117
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN14CFWL_ScrollBar16CalcMinTrackRectERK9CFX_RectF(%class.CFWL_ScrollBar* nocapture readonly, %class.CFX_RectF* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 18
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = bitcast %class.CFX_RectF* %1 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  br label %41

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 0
  %11 = bitcast float* %10 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  %13 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 2
  %19 = load float, float* %18, align 4
  %20 = insertelement <2 x float> undef, float %19, i32 0
  %21 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 1
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 3
  %24 = load float, float* %23, align 4
  %25 = fadd float %22, %24
  %26 = fadd float %22, %25
  %27 = fmul float %26, 5.000000e-01
  %28 = insertelement <2 x float> %20, float %27, i32 1
  br label %41

29:                                               ; preds = %9
  %30 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 0
  %31 = load float, float* %30, align 4
  %32 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 2
  %33 = load float, float* %32, align 4
  %34 = fadd float %31, %33
  %35 = fadd float %31, %34
  %36 = fmul float %35, 5.000000e-01
  %37 = insertelement <2 x float> undef, float %36, i32 0
  %38 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 3
  %39 = load float, float* %38, align 4
  %40 = insertelement <2 x float> %37, float %39, i32 1
  br label %41

41:                                               ; preds = %17, %29, %6
  %42 = phi <2 x float> [ %28, %17 ], [ %40, %29 ], [ zeroinitializer, %6 ]
  %43 = phi <2 x float> [ %12, %17 ], [ %12, %29 ], [ %8, %6 ]
  %44 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %43, 0
  %45 = insertvalue { <2 x float>, <2 x float> } %44, <2 x float> %42, 1
  ret { <2 x float>, <2 x float> } %45
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN14CFWL_ScrollBar16CalcMaxTrackRectERK9CFX_RectF(%class.CFWL_ScrollBar* nocapture readonly, %class.CFX_RectF* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 18
  %4 = load i8, i8* %3, align 1, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = bitcast %class.CFX_RectF* %1 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4, !noalias !9
  br label %53

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %36, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 1
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 3
  %18 = load float, float* %17, align 4
  %19 = fadd float %16, %18
  %20 = fadd float %16, %19
  %21 = fmul float %20, 5.000000e-01
  %22 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 0
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 2
  %25 = load float, float* %24, align 4
  %26 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 1
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 3
  %29 = load float, float* %28, align 4
  %30 = fadd float %27, %29
  %31 = fsub float %30, %21
  %32 = insertelement <2 x float> undef, float %23, i32 0
  %33 = insertelement <2 x float> %32, float %21, i32 1
  %34 = insertelement <2 x float> undef, float %25, i32 0
  %35 = insertelement <2 x float> %34, float %31, i32 1
  br label %53

36:                                               ; preds = %9
  %37 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 0
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 2
  %40 = load float, float* %39, align 4
  %41 = fadd float %38, %40
  %42 = fadd float %38, %41
  %43 = fmul float %42, 5.000000e-01
  %44 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 1
  %45 = load float, float* %44, align 4
  %46 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 3
  %47 = load float, float* %46, align 4
  %48 = fsub float %47, %43
  %49 = insertelement <2 x float> undef, float %43, i32 0
  %50 = insertelement <2 x float> %49, float %45, i32 1
  %51 = insertelement <2 x float> undef, float %48, i32 0
  %52 = insertelement <2 x float> %51, float %47, i32 1
  br label %53

53:                                               ; preds = %36, %14, %6
  %54 = phi <2 x float> [ %33, %14 ], [ %50, %36 ], [ %8, %6 ]
  %55 = phi <2 x float> [ %35, %14 ], [ %52, %36 ], [ zeroinitializer, %6 ]
  %56 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %54, 0
  %57 = insertvalue { <2 x float>, <2 x float> } %56, <2 x float> %55, 1
  ret { <2 x float>, <2 x float> } %57
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14CFWL_ScrollBar8DoScrollEN16CFWL_EventScroll4CodeEf(%class.CFWL_ScrollBar*, i32, float) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_EventScroll, align 8
  %5 = icmp eq i32 %1, 1
  br i1 %5, label %10, label %6

6:                                                ; preds = %3
  %7 = bitcast %class.CFWL_EventScroll* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast ({ { i32 (...)**, i32, [4 x i8], %class.CFWL_Widget*, %class.CFWL_Widget* }, i32, float }* @__const._ZN14CFWL_ScrollBar8OnScrollEN16CFWL_EventScroll4CodeEf.ev to i8*), i64 40, i1 false) #10
  %8 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  call void @_ZN16CFWL_EventScrollC1EP11CFWL_WidgetNS_4CodeEf(%class.CFWL_EventScroll* nonnull %4, %class.CFWL_Widget* %8, i32 %1, float %2) #10
  %9 = getelementptr inbounds %class.CFWL_EventScroll, %class.CFWL_EventScroll* %4, i64 0, i32 0
  call void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget* %8, %class.CFWL_Event* nonnull %9) #10
  call void @_ZN16CFWL_EventScrollD1Ev(%class.CFWL_EventScroll* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #10
  br label %10

10:                                               ; preds = %3, %6
  %11 = phi i1 [ true, %6 ], [ false, %3 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14CFWL_ScrollBar8OnScrollEN16CFWL_EventScroll4CodeEf(%class.CFWL_ScrollBar*, i32, float) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CFWL_EventScroll, align 8
  %5 = bitcast %class.CFWL_EventScroll* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %5) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ { i32 (...)**, i32, [4 x i8], %class.CFWL_Widget*, %class.CFWL_Widget* }, i32, float }* @__const._ZN14CFWL_ScrollBar8OnScrollEN16CFWL_EventScroll4CodeEf.ev to i8*), i64 40, i1 false)
  %6 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  call void @_ZN16CFWL_EventScrollC1EP11CFWL_WidgetNS_4CodeEf(%class.CFWL_EventScroll* nonnull %4, %class.CFWL_Widget* %6, i32 %1, float %2) #10
  %7 = getelementptr inbounds %class.CFWL_EventScroll, %class.CFWL_EventScroll* %4, i64 0, i32 0
  call void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget* %6, %class.CFWL_Event* nonnull %7) #10
  call void @_ZN16CFWL_EventScrollD1Ev(%class.CFWL_EventScroll* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %5) #10
  ret i1 true
}

declare void @_ZN20CFWL_ThemeBackgroundC1EP11CFWL_WidgetP16CFGAS_GEGraphics(%class.CFWL_ThemeBackground*, %class.CFWL_Widget*, %class.CFGAS_GEGraphics*) unnamed_addr #1

declare %class.IFWL_ThemeProvider* @_ZNK11CFWL_Widget16GetThemeProviderEv(%class.CFWL_Widget*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN20CFWL_ThemeBackgroundD1Ev(%class.CFWL_ThemeBackground*) unnamed_addr #2

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetClientRectEv(%class.CFWL_Widget*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar13CalcButtonLenEv(%class.CFWL_ScrollBar* nocapture) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 1
  %5 = icmp ne i32 %4, 0
  %6 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 2
  %7 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 3
  %8 = select i1 %5, float* %6, float* %7
  %9 = bitcast float* %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 16
  %12 = bitcast float* %11 to i32*
  store i32 %10, i32* %12, align 4
  %13 = select i1 %5, float* %7, float* %6
  %14 = load float, float* %13, align 4
  %15 = bitcast i32 %10 to float
  %16 = fmul float %15, 2.000000e+00
  %17 = fcmp olt float %14, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %1
  %19 = fmul float %14, 5.000000e-01
  store float %19, float* %11, align 4
  br label %20

20:                                               ; preds = %1, %18
  %21 = phi i8 [ 1, %18 ], [ 0, %1 ]
  %22 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 18
  store i8 %21, i8* %22, align 1
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN14CFWL_ScrollBar17CalcMinButtonRectEv(%class.CFWL_ScrollBar* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19
  %7 = bitcast %class.CFX_RectF* %6 to <2 x float>*
  %8 = load <2 x float>, <2 x float>* %7, align 4
  %9 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 16
  %10 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 3
  %11 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 2
  %12 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 16
  %13 = select i1 %5, float* %10, float* %12
  %14 = select i1 %5, float* %9, float* %11
  %15 = load float, float* %14, align 4
  %16 = load float, float* %13, align 4
  %17 = insertelement <2 x float> undef, float %15, i32 0
  %18 = insertelement <2 x float> %17, float %16, i32 1
  %19 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %8, 0
  %20 = insertvalue { <2 x float>, <2 x float> } %19, <2 x float> %18, 1
  ret { <2 x float>, <2 x float> } %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN14CFWL_ScrollBar17CalcMaxButtonRectEv(%class.CFWL_ScrollBar* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 0
  %7 = load float, float* %6, align 4
  br i1 %5, label %19, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 1
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 3
  %12 = load float, float* %11, align 4
  %13 = fadd float %10, %12
  %14 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 16
  %15 = load float, float* %14, align 4
  %16 = fsub float %13, %15
  %17 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 2
  %18 = load float, float* %17, align 4
  br label %30

19:                                               ; preds = %1
  %20 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 2
  %21 = load float, float* %20, align 4
  %22 = fadd float %7, %21
  %23 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 16
  %24 = load float, float* %23, align 4
  %25 = fsub float %22, %24
  %26 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 1
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 19, i32 3
  %29 = load float, float* %28, align 4
  br label %30

30:                                               ; preds = %19, %8
  %31 = phi float [ %25, %19 ], [ %7, %8 ]
  %32 = phi float [ %27, %19 ], [ %16, %8 ]
  %33 = phi float [ %24, %19 ], [ %18, %8 ]
  %34 = phi float [ %29, %19 ], [ %15, %8 ]
  %35 = insertelement <2 x float> undef, float %31, i32 0
  %36 = insertelement <2 x float> %35, float %32, i32 1
  %37 = insertelement <2 x float> undef, float %33, i32 0
  %38 = insertelement <2 x float> %37, float %34, i32 1
  %39 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %36, 0
  %40 = insertvalue { <2 x float>, <2 x float> } %39, <2 x float> %38, 1
  ret { <2 x float>, <2 x float> } %40
}

declare zeroext i1 @_ZNK11CFWL_Widget9IsEnabledEv(%class.CFWL_Widget*) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden float @_ZN14CFWL_ScrollBar16GetTrackPointPosERK13CFX_PTemplateIfE(%class.CFWL_ScrollBar* nocapture readonly, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %3 = alloca float, align 4
  %4 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 0
  %5 = load float, float* %4, align 4, !noalias !12
  %6 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 14, i32 0
  %7 = load float, float* %6, align 4, !noalias !12
  %8 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %9 = load float, float* %8, align 4, !noalias !12
  %10 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 14, i32 1
  %11 = load float, float* %10, align 4, !noalias !12
  %12 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 3
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 2
  %15 = load float, float* %14, align 8
  %16 = fsub float %13, %15
  %17 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  store float 0xFFFFFFFFE0000000, float* %3, align 4
  %18 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %33, label %22

22:                                               ; preds = %2
  %23 = fsub float %9, %11
  %24 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 1
  %25 = load float, float* %24, align 4
  %26 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 1
  %27 = load float, float* %26, align 4
  %28 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 3
  %29 = load float, float* %28, align 4
  %30 = fadd float %27, %29
  %31 = fsub float %25, %30
  %32 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 3
  br label %44

33:                                               ; preds = %2
  %34 = fsub float %5, %7
  %35 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 0
  %36 = load float, float* %35, align 4
  %37 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 0
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 2
  %40 = load float, float* %39, align 4
  %41 = fadd float %38, %40
  %42 = fsub float %36, %41
  %43 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 2
  br label %44

44:                                               ; preds = %33, %22
  %45 = phi float* [ %43, %33 ], [ %32, %22 ]
  %46 = phi float [ %42, %33 ], [ %31, %22 ]
  %47 = phi float [ %34, %33 ], [ %23, %22 ]
  %48 = fmul float %47, %16
  %49 = load float, float* %45, align 4
  %50 = fsub float %46, %49
  %51 = fdiv float %48, %50
  %52 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 13
  %53 = load float, float* %52, align 4
  %54 = fadd float %51, %53
  store float %54, float* %3, align 4
  %55 = fcmp olt float %54, %15
  %56 = select i1 %55, float* %14, float* %3
  %57 = load float, float* %56, align 4
  %58 = fcmp olt float %13, %57
  %59 = select i1 %58, float* %12, float* %56
  %60 = load float, float* %59, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  ret float %60
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN14CFWL_ScrollBar9SendEventEv(%class.CFWL_ScrollBar*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.CFWL_EventScroll, align 8
  %3 = alloca %class.CFWL_EventScroll, align 8
  %4 = alloca %class.CFWL_EventScroll, align 8
  %5 = alloca %class.CFWL_EventScroll, align 8
  %6 = alloca %class.CFWL_EventScroll, align 8
  %7 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1024
  br i1 %9, label %10, label %16

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 7
  %12 = load float, float* %11, align 4
  %13 = bitcast %class.CFWL_EventScroll* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 bitcast ({ { i32 (...)**, i32, [4 x i8], %class.CFWL_Widget*, %class.CFWL_Widget* }, i32, float }* @__const._ZN14CFWL_ScrollBar8OnScrollEN16CFWL_EventScroll4CodeEf.ev to i8*), i64 40, i1 false) #10
  %14 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  call void @_ZN16CFWL_EventScrollC1EP11CFWL_WidgetNS_4CodeEf(%class.CFWL_EventScroll* nonnull %6, %class.CFWL_Widget* %14, i32 6, float %12) #10
  %15 = getelementptr inbounds %class.CFWL_EventScroll, %class.CFWL_EventScroll* %6, i64 0, i32 0
  call void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget* %14, %class.CFWL_Event* nonnull %15) #10
  call void @_ZN16CFWL_EventScrollD1Ev(%class.CFWL_EventScroll* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #10
  br label %100

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 9
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 1024
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 7
  %22 = load float, float* %21, align 4
  %23 = bitcast %class.CFWL_EventScroll* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* align 8 bitcast ({ { i32 (...)**, i32, [4 x i8], %class.CFWL_Widget*, %class.CFWL_Widget* }, i32, float }* @__const._ZN14CFWL_ScrollBar8OnScrollEN16CFWL_EventScroll4CodeEf.ev to i8*), i64 40, i1 false) #10
  %24 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  call void @_ZN16CFWL_EventScrollC1EP11CFWL_WidgetNS_4CodeEf(%class.CFWL_EventScroll* nonnull %5, %class.CFWL_Widget* %24, i32 7, float %22) #10
  %25 = getelementptr inbounds %class.CFWL_EventScroll, %class.CFWL_EventScroll* %5, i64 0, i32 0
  call void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget* %24, %class.CFWL_Event* nonnull %25) #10
  call void @_ZN16CFWL_EventScrollD1Ev(%class.CFWL_EventScroll* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #10
  br label %100

26:                                               ; preds = %16
  %27 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 11
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 1024
  br i1 %29, label %30, label %57

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 7
  %32 = load float, float* %31, align 4
  %33 = bitcast %class.CFWL_EventScroll* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %33) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 8 bitcast ({ { i32 (...)**, i32, [4 x i8], %class.CFWL_Widget*, %class.CFWL_Widget* }, i32, float }* @__const._ZN14CFWL_ScrollBar8OnScrollEN16CFWL_EventScroll4CodeEf.ev to i8*), i64 40, i1 false) #10
  %34 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  call void @_ZN16CFWL_EventScrollC1EP11CFWL_WidgetNS_4CodeEf(%class.CFWL_EventScroll* nonnull %4, %class.CFWL_Widget* %34, i32 4, float %32) #10
  %35 = getelementptr inbounds %class.CFWL_EventScroll, %class.CFWL_EventScroll* %4, i64 0, i32 0
  call void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget* %34, %class.CFWL_Event* nonnull %35) #10
  call void @_ZN16CFWL_EventScrollD1Ev(%class.CFWL_EventScroll* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %33) #10
  %36 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 14, i32 0
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 0
  %39 = load float, float* %38, align 4
  %40 = fcmp ult float %37, %39
  br i1 %40, label %100, label %41

41:                                               ; preds = %30
  %42 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 2
  %43 = load float, float* %42, align 4
  %44 = fadd float %39, %43
  %45 = fcmp olt float %37, %44
  br i1 %45, label %46, label %100

46:                                               ; preds = %41
  %47 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 14, i32 1
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 1
  %50 = load float, float* %49, align 4
  %51 = fcmp ult float %48, %50
  br i1 %51, label %100, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 3
  %54 = load float, float* %53, align 4
  %55 = fadd float %50, %54
  %56 = fcmp olt float %48, %55
  br label %100

57:                                               ; preds = %26
  %58 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 12
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 1024
  br i1 %60, label %61, label %88

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 7
  %63 = load float, float* %62, align 4
  %64 = bitcast %class.CFWL_EventScroll* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %64) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %64, i8* align 8 bitcast ({ { i32 (...)**, i32, [4 x i8], %class.CFWL_Widget*, %class.CFWL_Widget* }, i32, float }* @__const._ZN14CFWL_ScrollBar8OnScrollEN16CFWL_EventScroll4CodeEf.ev to i8*), i64 40, i1 false) #10
  %65 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  call void @_ZN16CFWL_EventScrollC1EP11CFWL_WidgetNS_4CodeEf(%class.CFWL_EventScroll* nonnull %3, %class.CFWL_Widget* %65, i32 5, float %63) #10
  %66 = getelementptr inbounds %class.CFWL_EventScroll, %class.CFWL_EventScroll* %3, i64 0, i32 0
  call void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget* %65, %class.CFWL_Event* nonnull %66) #10
  call void @_ZN16CFWL_EventScrollD1Ev(%class.CFWL_EventScroll* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %64) #10
  %67 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 14, i32 0
  %68 = load float, float* %67, align 4
  %69 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 0
  %70 = load float, float* %69, align 4
  %71 = fcmp ult float %68, %70
  br i1 %71, label %100, label %72

72:                                               ; preds = %61
  %73 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 2
  %74 = load float, float* %73, align 4
  %75 = fadd float %70, %74
  %76 = fcmp olt float %68, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %72
  %78 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 14, i32 1
  %79 = load float, float* %78, align 4
  %80 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 1
  %81 = load float, float* %80, align 4
  %82 = fcmp ult float %79, %81
  br i1 %82, label %100, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 3
  %85 = load float, float* %84, align 4
  %86 = fadd float %81, %85
  %87 = fcmp olt float %79, %86
  br label %100

88:                                               ; preds = %57
  %89 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 15
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %100, label %92

92:                                               ; preds = %88
  %93 = icmp slt i32 %90, 0
  %94 = select i1 %93, i32 7, i32 6
  %95 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 7
  %96 = load float, float* %95, align 4
  %97 = bitcast %class.CFWL_EventScroll* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %97) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %97, i8* align 8 bitcast ({ { i32 (...)**, i32, [4 x i8], %class.CFWL_Widget*, %class.CFWL_Widget* }, i32, float }* @__const._ZN14CFWL_ScrollBar8OnScrollEN16CFWL_EventScroll4CodeEf.ev to i8*), i64 40, i1 false) #10
  %98 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  call void @_ZN16CFWL_EventScrollC1EP11CFWL_WidgetNS_4CodeEf(%class.CFWL_EventScroll* nonnull %2, %class.CFWL_Widget* %98, i32 %94, float %96) #10
  %99 = getelementptr inbounds %class.CFWL_EventScroll, %class.CFWL_EventScroll* %2, i64 0, i32 0
  call void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget* %98, %class.CFWL_Event* nonnull %99) #10
  call void @_ZN16CFWL_EventScrollD1Ev(%class.CFWL_EventScroll* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %97) #10
  br label %100

100:                                              ; preds = %83, %77, %72, %61, %52, %46, %41, %30, %92, %88, %20, %10
  %101 = phi i1 [ false, %10 ], [ false, %20 ], [ true, %88 ], [ true, %92 ], [ false, %46 ], [ false, %41 ], [ false, %30 ], [ %56, %52 ], [ false, %77 ], [ false, %72 ], [ false, %61 ], [ %87, %83 ]
  ret i1 %101
}

declare void @_ZN16CFWL_EventScrollC1EP11CFWL_WidgetNS_4CodeEf(%class.CFWL_EventScroll*, %class.CFWL_Widget*, i32, float) unnamed_addr #1

declare void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget*, %class.CFWL_Event*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN16CFWL_EventScrollD1Ev(%class.CFWL_EventScroll*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar16OnProcessMessageEP12CFWL_Message(%class.CFWL_ScrollBar*, %class.CFWL_Message* readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %23 [
    i32 2, label %5
    i32 3, label %17
  ]

5:                                                ; preds = %2
  %6 = bitcast %class.CFWL_Message* %1 to %class.CFWL_MessageMouse*
  %7 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1
  %8 = bitcast %class.CFWL_Message* %7 to i8*
  %9 = load i8, i8* %8, align 8
  switch i8 %9, label %23 [
    i8 0, label %10
    i8 1, label %12
    i8 6, label %14
    i8 8, label %16
  ]

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %6, i64 0, i32 4
  tail call void @_ZN14CFWL_ScrollBar13OnLButtonDownERK13CFX_PTemplateIfE(%class.CFWL_ScrollBar* %0, %class.CFX_PTemplate* dereferenceable(8) %11)
  br label %23

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %6, i64 0, i32 4
  tail call void @_ZN14CFWL_ScrollBar11OnLButtonUpERK13CFX_PTemplateIfE(%class.CFWL_ScrollBar* %0, %class.CFX_PTemplate* dereferenceable(8) %13)
  br label %23

14:                                               ; preds = %5
  %15 = getelementptr inbounds %class.CFWL_MessageMouse, %class.CFWL_MessageMouse* %6, i64 0, i32 4
  tail call void @_ZN14CFWL_ScrollBar11OnMouseMoveERK13CFX_PTemplateIfE(%class.CFWL_ScrollBar* %0, %class.CFX_PTemplate* dereferenceable(8) %15)
  br label %23

16:                                               ; preds = %5
  tail call void @_ZN14CFWL_ScrollBar12OnMouseLeaveEv(%class.CFWL_ScrollBar* %0)
  br label %23

17:                                               ; preds = %2
  %18 = getelementptr inbounds %class.CFWL_Message, %class.CFWL_Message* %1, i64 1, i32 1
  %19 = getelementptr inbounds i32, i32* %18, i64 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 15
  store i32 %20, i32* %21, align 8
  %22 = tail call zeroext i1 @_ZN14CFWL_ScrollBar9SendEventEv(%class.CFWL_ScrollBar* %0) #10
  store i32 0, i32* %21, align 8
  br label %23

23:                                               ; preds = %2, %10, %12, %14, %16, %5, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar13OnLButtonDownERK13CFX_PTemplateIfE(%class.CFWL_ScrollBar*, %class.CFX_PTemplate* readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK11CFWL_Widget9IsEnabledEv(%class.CFWL_Widget* %3) #10
  br i1 %4, label %5, label %180

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 17
  store i8 1, i8* %6, align 8
  tail call void @_ZN11CFWL_Widget7SetGrabEb(%class.CFWL_Widget* %3, i1 zeroext true) #10
  %7 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 14
  %8 = icmp eq %class.CFX_PTemplate* %7, %1
  br i1 %8, label %18, label %9

9:                                                ; preds = %5
  %10 = bitcast %class.CFX_PTemplate* %1 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = bitcast %class.CFX_PTemplate* %7 to i32*
  store i32 %11, i32* %12, align 4
  %13 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 14, i32 1
  %17 = bitcast float* %16 to i32*
  store i32 %15, i32* %17, align 4
  br label %18

18:                                               ; preds = %5, %9
  %19 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 7
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 13
  %23 = bitcast float* %22 to i32*
  store i32 %21, i32* %23, align 4
  %24 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21
  %25 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %24, i64 0, i32 0
  %28 = load float, float* %27, align 4
  %29 = fcmp ult float %26, %28
  br i1 %29, label %51, label %30

30:                                               ; preds = %18
  %31 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 2
  %32 = load float, float* %31, align 4
  %33 = fadd float %28, %32
  %34 = fcmp olt float %26, %33
  br i1 %34, label %35, label %51

35:                                               ; preds = %30
  %36 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 1
  %39 = load float, float* %38, align 4
  %40 = fcmp ult float %37, %39
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 3
  %43 = load float, float* %42, align 4
  %44 = fadd float %39, %43
  %45 = fcmp olt float %37, %44
  br i1 %45, label %46, label %51

46:                                               ; preds = %41
  %47 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 8
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 1024
  br i1 %49, label %155, label %50

50:                                               ; preds = %46
  store i32 1024, i32* %47, align 4
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %3, %class.CFX_RectF* dereferenceable(16) %24) #10
  br label %155

51:                                               ; preds = %18, %30, %35, %41
  %52 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20
  %53 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %52, i64 0, i32 0
  %54 = load float, float* %53, align 4
  %55 = fcmp ult float %26, %54
  br i1 %55, label %77, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 2
  %58 = load float, float* %57, align 4
  %59 = fadd float %54, %58
  %60 = fcmp olt float %26, %59
  br i1 %60, label %61, label %77

61:                                               ; preds = %56
  %62 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %63 = load float, float* %62, align 4
  %64 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 1
  %65 = load float, float* %64, align 4
  %66 = fcmp ult float %63, %65
  br i1 %66, label %77, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 3
  %69 = load float, float* %68, align 4
  %70 = fadd float %65, %69
  %71 = fcmp olt float %63, %70
  br i1 %71, label %72, label %77

72:                                               ; preds = %67
  %73 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 10
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 1024
  br i1 %75, label %155, label %76

76:                                               ; preds = %72
  store i32 1024, i32* %73, align 4
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %3, %class.CFX_RectF* dereferenceable(16) %52) #10
  br label %155

77:                                               ; preds = %51, %56, %61, %67
  %78 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22
  %79 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %78, i64 0, i32 0
  %80 = load float, float* %79, align 4
  %81 = fcmp ult float %26, %80
  br i1 %81, label %103, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 2
  %84 = load float, float* %83, align 4
  %85 = fadd float %80, %84
  %86 = fcmp olt float %26, %85
  br i1 %86, label %87, label %103

87:                                               ; preds = %82
  %88 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %89 = load float, float* %88, align 4
  %90 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 1
  %91 = load float, float* %90, align 4
  %92 = fcmp ult float %89, %91
  br i1 %92, label %103, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 3
  %95 = load float, float* %94, align 4
  %96 = fadd float %91, %95
  %97 = fcmp olt float %89, %96
  br i1 %97, label %98, label %103

98:                                               ; preds = %93
  %99 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 9
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 1024
  br i1 %101, label %155, label %102

102:                                              ; preds = %98
  store i32 1024, i32* %99, align 4
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %3, %class.CFX_RectF* dereferenceable(16) %78) #10
  br label %155

103:                                              ; preds = %77, %82, %87, %93
  %104 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23
  %105 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %104, i64 0, i32 0
  %106 = load float, float* %105, align 4
  %107 = fcmp ult float %26, %106
  br i1 %107, label %129, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23, i32 2
  %110 = load float, float* %109, align 4
  %111 = fadd float %106, %110
  %112 = fcmp olt float %26, %111
  br i1 %112, label %113, label %129

113:                                              ; preds = %108
  %114 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %115 = load float, float* %114, align 4
  %116 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23, i32 1
  %117 = load float, float* %116, align 4
  %118 = fcmp ult float %115, %117
  br i1 %118, label %129, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23, i32 3
  %121 = load float, float* %120, align 4
  %122 = fadd float %117, %121
  %123 = fcmp olt float %115, %122
  br i1 %123, label %124, label %129

124:                                              ; preds = %119
  %125 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 11
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 1024
  br i1 %127, label %155, label %128

128:                                              ; preds = %124
  store i32 1024, i32* %125, align 4
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %3, %class.CFX_RectF* dereferenceable(16) %104) #10
  br label %155

129:                                              ; preds = %103, %108, %113, %119
  %130 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24
  %131 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 12
  %132 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %130, i64 0, i32 0
  %133 = load float, float* %132, align 4
  %134 = fcmp ult float %26, %133
  br i1 %134, label %155, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24, i32 2
  %137 = load float, float* %136, align 4
  %138 = fadd float %133, %137
  %139 = fcmp olt float %26, %138
  br i1 %139, label %140, label %155

140:                                              ; preds = %135
  %141 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %142 = load float, float* %141, align 4
  %143 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24, i32 1
  %144 = load float, float* %143, align 4
  %145 = fcmp ult float %142, %144
  br i1 %145, label %155, label %146

146:                                              ; preds = %140
  %147 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24, i32 3
  %148 = load float, float* %147, align 4
  %149 = fadd float %144, %148
  %150 = fcmp uge float %142, %149
  %151 = load i32, i32* %131, align 4
  %152 = icmp eq i32 %151, 1024
  %153 = or i1 %150, %152
  br i1 %153, label %155, label %154

154:                                              ; preds = %146
  store i32 1024, i32* %131, align 4
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %3, %class.CFX_RectF* dereferenceable(16) %130) #10
  br label %155

155:                                              ; preds = %154, %146, %140, %135, %129, %128, %124, %102, %98, %76, %72, %50, %46
  %156 = tail call zeroext i1 @_ZN14CFWL_ScrollBar9SendEventEv(%class.CFWL_ScrollBar* %0)
  br i1 %156, label %180, label %157

157:                                              ; preds = %155
  %158 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 6
  %159 = bitcast %"class.cppgc::internal::BasicMember.0"* %158 to %"class.CFWL_App::AdapterIface"***
  %160 = load %"class.CFWL_App::AdapterIface"**, %"class.CFWL_App::AdapterIface"*** %159, align 8
  %161 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %160, align 8
  %162 = bitcast %"class.CFWL_App::AdapterIface"* %161 to %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)***
  %163 = load %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)**, %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)*** %162, align 8
  %164 = getelementptr inbounds %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)*, %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)** %163, i64 4
  %165 = load %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)*, %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)** %164, align 8
  %166 = tail call %"class.CFX_Timer::HandlerIface"* %165(%"class.CFWL_App::AdapterIface"* %161) #10
  %167 = tail call i8* @_Znwm(i64 32) #11
  %168 = bitcast i8* %167 to %class.CFX_Timer*
  %169 = icmp eq %class.CFWL_ScrollBar* %0, null
  %170 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 1
  %171 = select i1 %169, %"class.CFX_Timer::CallbackIface"* null, %"class.CFX_Timer::CallbackIface"* %170
  tail call void @_ZN9CFX_TimerC1EPNS_12HandlerIfaceEPNS_13CallbackIfaceEi(%class.CFX_Timer* nonnull %168, %"class.CFX_Timer::HandlerIface"* %166, %"class.CFX_Timer::CallbackIface"* %171, i32 500) #10
  %172 = ptrtoint i8* %167 to i64
  %173 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 25
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %173, i64 0, i32 0, i32 0, i32 0
  %175 = load %class.CFX_Timer*, %class.CFX_Timer** %174, align 8
  %176 = bitcast %"class.std::__1::unique_ptr"* %173 to i64*
  store i64 %172, i64* %176, align 8
  %177 = icmp eq %class.CFX_Timer* %175, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %157
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %175) #10
  %179 = bitcast %class.CFX_Timer* %175 to i8*
  tail call void @_ZdlPv(i8* %179) #11
  br label %180

180:                                              ; preds = %157, %178, %2, %155
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar11OnLButtonUpERK13CFX_PTemplateIfE(%class.CFWL_ScrollBar*, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %4 = load %class.CFX_Timer*, %class.CFX_Timer** %3, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %3, align 8
  %5 = icmp eq %class.CFX_Timer* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %4) #10
  %7 = bitcast %class.CFX_Timer* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #11
  br label %8

8:                                                ; preds = %2, %6
  %9 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 17
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21
  %11 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 8
  tail call void @_ZN14CFWL_ScrollBar9DoMouseUpEiRK9CFX_RectFRiRK13CFX_PTemplateIfE(%class.CFWL_ScrollBar* %0, i32 undef, %class.CFX_RectF* dereferenceable(16) %10, i32* dereferenceable(4) %11, %class.CFX_PTemplate* dereferenceable(8) %1)
  %12 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20
  %13 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 10
  tail call void @_ZN14CFWL_ScrollBar9DoMouseUpEiRK9CFX_RectFRiRK13CFX_PTemplateIfE(%class.CFWL_ScrollBar* %0, i32 undef, %class.CFX_RectF* dereferenceable(16) %12, i32* dereferenceable(4) %13, %class.CFX_PTemplate* dereferenceable(8) %1)
  %14 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22
  %15 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 9
  tail call void @_ZN14CFWL_ScrollBar9DoMouseUpEiRK9CFX_RectFRiRK13CFX_PTemplateIfE(%class.CFWL_ScrollBar* %0, i32 undef, %class.CFX_RectF* dereferenceable(16) %14, i32* dereferenceable(4) %15, %class.CFX_PTemplate* dereferenceable(8) %1)
  %16 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23
  %17 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 11
  tail call void @_ZN14CFWL_ScrollBar9DoMouseUpEiRK9CFX_RectFRiRK13CFX_PTemplateIfE(%class.CFWL_ScrollBar* %0, i32 undef, %class.CFX_RectF* dereferenceable(16) %16, i32* dereferenceable(4) %17, %class.CFX_PTemplate* dereferenceable(8) %1)
  %18 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24
  %19 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 12
  tail call void @_ZN14CFWL_ScrollBar9DoMouseUpEiRK9CFX_RectFRiRK13CFX_PTemplateIfE(%class.CFWL_ScrollBar* %0, i32 undef, %class.CFX_RectF* dereferenceable(16) %18, i32* dereferenceable(4) %19, %class.CFX_PTemplate* dereferenceable(8) %1)
  %20 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget7SetGrabEb(%class.CFWL_Widget* %20, i1 zeroext false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar11OnMouseMoveERK13CFX_PTemplateIfE(%class.CFWL_ScrollBar*, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21
  %4 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 8
  %5 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 17
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %69

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %3, i64 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = fcmp ult float %10, %12
  br i1 %13, label %31, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 2
  %16 = load float, float* %15, align 4
  %17 = fadd float %12, %16
  %18 = fcmp olt float %10, %17
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 1
  %23 = load float, float* %22, align 4
  %24 = fcmp ult float %21, %23
  br i1 %24, label %31, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 3
  %27 = load float, float* %26, align 4
  %28 = fadd float %23, %27
  %29 = fcmp olt float %21, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  br label %31

31:                                               ; preds = %30, %25, %19, %14, %8
  %32 = phi i32 [ 128, %30 ], [ 0, %25 ], [ 0, %19 ], [ 0, %14 ], [ 0, %8 ]
  %33 = load i32, i32* %4, align 4
  %34 = icmp eq i32 %33, %32
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  store i32 %32, i32* %4, align 4
  %36 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %36, %class.CFX_RectF* dereferenceable(16) %3) #10
  %37 = load i8, i8* %5, align 8
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %69

39:                                               ; preds = %31, %35
  %40 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20
  %41 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 10
  %42 = load float, float* %9, align 4
  %43 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %40, i64 0, i32 0
  %44 = load float, float* %43, align 4
  %45 = fcmp ult float %42, %44
  br i1 %45, label %63, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 2
  %48 = load float, float* %47, align 4
  %49 = fadd float %44, %48
  %50 = fcmp olt float %42, %49
  br i1 %50, label %51, label %63

51:                                               ; preds = %46
  %52 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %53 = load float, float* %52, align 4
  %54 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 1
  %55 = load float, float* %54, align 4
  %56 = fcmp ult float %53, %55
  br i1 %56, label %63, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 3
  %59 = load float, float* %58, align 4
  %60 = fadd float %55, %59
  %61 = fcmp olt float %53, %60
  br i1 %61, label %62, label %63

62:                                               ; preds = %57
  br label %63

63:                                               ; preds = %62, %57, %51, %46, %39
  %64 = phi i32 [ 128, %62 ], [ 0, %57 ], [ 0, %51 ], [ 0, %46 ], [ 0, %39 ]
  %65 = load i32, i32* %41, align 4
  %66 = icmp eq i32 %65, %64
  br i1 %66, label %69, label %67

67:                                               ; preds = %63
  store i32 %64, i32* %41, align 4
  %68 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %68, %class.CFX_RectF* dereferenceable(16) %40) #10
  br label %69

69:                                               ; preds = %2, %35, %63, %67
  %70 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22
  %71 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 9
  tail call void @_ZN14CFWL_ScrollBar11DoMouseMoveEiRK9CFX_RectFRiRK13CFX_PTemplateIfE(%class.CFWL_ScrollBar* %0, i32 2, %class.CFX_RectF* dereferenceable(16) %70, i32* dereferenceable(4) %71, %class.CFX_PTemplate* dereferenceable(8) %1)
  %72 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23
  %73 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 11
  %74 = load i8, i8* %5, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %137

76:                                               ; preds = %69
  %77 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 0
  %78 = load float, float* %77, align 4
  %79 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %72, i64 0, i32 0
  %80 = load float, float* %79, align 4
  %81 = fcmp ult float %78, %80
  br i1 %81, label %99, label %82

82:                                               ; preds = %76
  %83 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23, i32 2
  %84 = load float, float* %83, align 4
  %85 = fadd float %80, %84
  %86 = fcmp olt float %78, %85
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %89 = load float, float* %88, align 4
  %90 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23, i32 1
  %91 = load float, float* %90, align 4
  %92 = fcmp ult float %89, %91
  br i1 %92, label %99, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23, i32 3
  %95 = load float, float* %94, align 4
  %96 = fadd float %91, %95
  %97 = fcmp olt float %89, %96
  br i1 %97, label %98, label %99

98:                                               ; preds = %93
  br label %99

99:                                               ; preds = %98, %93, %87, %82, %76
  %100 = phi i32 [ 128, %98 ], [ 0, %93 ], [ 0, %87 ], [ 0, %82 ], [ 0, %76 ]
  %101 = load i32, i32* %73, align 4
  %102 = icmp eq i32 %101, %100
  br i1 %102, label %107, label %103

103:                                              ; preds = %99
  store i32 %100, i32* %73, align 4
  %104 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %104, %class.CFX_RectF* dereferenceable(16) %72) #10
  %105 = load i8, i8* %5, align 8
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %107, label %137

107:                                              ; preds = %99, %103
  %108 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24
  %109 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 12
  %110 = load float, float* %77, align 4
  %111 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %108, i64 0, i32 0
  %112 = load float, float* %111, align 4
  %113 = fcmp ult float %110, %112
  br i1 %113, label %131, label %114

114:                                              ; preds = %107
  %115 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24, i32 2
  %116 = load float, float* %115, align 4
  %117 = fadd float %112, %116
  %118 = fcmp olt float %110, %117
  br i1 %118, label %119, label %131

119:                                              ; preds = %114
  %120 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %121 = load float, float* %120, align 4
  %122 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24, i32 1
  %123 = load float, float* %122, align 4
  %124 = fcmp ult float %121, %123
  br i1 %124, label %131, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24, i32 3
  %127 = load float, float* %126, align 4
  %128 = fadd float %123, %127
  %129 = fcmp olt float %121, %128
  br i1 %129, label %130, label %131

130:                                              ; preds = %125
  br label %131

131:                                              ; preds = %130, %125, %119, %114, %107
  %132 = phi i32 [ 128, %130 ], [ 0, %125 ], [ 0, %119 ], [ 0, %114 ], [ 0, %107 ]
  %133 = load i32, i32* %109, align 4
  %134 = icmp eq i32 %133, %132
  br i1 %134, label %137, label %135

135:                                              ; preds = %131
  store i32 %132, i32* %109, align 4
  %136 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %136, %class.CFX_RectF* dereferenceable(16) %108) #10
  br label %137

137:                                              ; preds = %69, %103, %131, %135
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar12OnMouseLeaveEv(%class.CFWL_ScrollBar*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21
  store i32 0, i32* %2, align 4
  %7 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %7, %class.CFX_RectF* dereferenceable(16) %6) #10
  br label %8

8:                                                ; preds = %1, %5
  %9 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 10
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20
  store i32 0, i32* %9, align 4
  %14 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %14, %class.CFX_RectF* dereferenceable(16) %13) #10
  br label %15

15:                                               ; preds = %8, %12
  %16 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 9
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22
  store i32 0, i32* %16, align 4
  %21 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %21, %class.CFX_RectF* dereferenceable(16) %20) #10
  br label %22

22:                                               ; preds = %15, %19
  %23 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 11
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 23
  store i32 0, i32* %23, align 4
  %28 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %28, %class.CFX_RectF* dereferenceable(16) %27) #10
  br label %29

29:                                               ; preds = %22, %26
  %30 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 12
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 24
  store i32 0, i32* %30, align 4
  %35 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %35, %class.CFX_RectF* dereferenceable(16) %34) #10
  br label %36

36:                                               ; preds = %29, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar12OnMouseWheelERK13CFX_VTemplateIiE(%class.CFWL_ScrollBar*, %class.CFX_VTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_VTemplate, %class.CFX_VTemplate* %1, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 15
  store i32 %4, i32* %5, align 8
  %6 = tail call zeroext i1 @_ZN14CFWL_ScrollBar9SendEventEv(%class.CFWL_ScrollBar* %0)
  store i32 0, i32* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar12OnDrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_ScrollBar*, %class.CFGAS_GEGraphics*, %class.CFX_Matrix* dereferenceable(24)) unnamed_addr #0 align 2 {
  tail call void @_ZN14CFWL_ScrollBar10DrawWidgetEP16CFGAS_GEGraphicsRK10CFX_Matrix(%class.CFWL_ScrollBar* %0, %class.CFGAS_GEGraphics* %1, %class.CFX_Matrix* dereferenceable(24) %2)
  ret void
}

declare void @_ZN11CFWL_Widget7SetGrabEb(%class.CFWL_Widget*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar11DoMouseDownEiRK9CFX_RectFRiRK13CFX_PTemplateIfE(%class.CFWL_ScrollBar*, i32, %class.CFX_RectF* dereferenceable(16), i32* nocapture dereferenceable(4), %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = fcmp ult float %7, %9
  br i1 %10, label %32, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %13 = load float, float* %12, align 4
  %14 = fadd float %9, %13
  %15 = fcmp olt float %7, %14
  br i1 %15, label %16, label %32

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = fcmp ult float %18, %20
  br i1 %21, label %32, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %24 = load float, float* %23, align 4
  %25 = fadd float %20, %24
  %26 = fcmp uge float %18, %25
  %27 = load i32, i32* %3, align 4
  %28 = icmp eq i32 %27, 1024
  %29 = or i1 %26, %28
  br i1 %29, label %32, label %30

30:                                               ; preds = %22
  store i32 1024, i32* %3, align 4
  %31 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %31, %class.CFX_RectF* dereferenceable(16) %2) #10
  br label %32

32:                                               ; preds = %5, %11, %16, %22, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar9DoMouseUpEiRK9CFX_RectFRiRK13CFX_PTemplateIfE(%class.CFWL_ScrollBar*, i32, %class.CFX_RectF* dereferenceable(16), i32* nocapture dereferenceable(4), %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.CFWL_EventScroll, align 8
  %7 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %10 = load float, float* %9, align 4
  %11 = fcmp ult float %8, %10
  br i1 %11, label %29, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = fadd float %10, %14
  %16 = fcmp olt float %8, %15
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = fcmp ult float %19, %21
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %25 = load float, float* %24, align 4
  %26 = fadd float %21, %25
  %27 = fcmp olt float %19, %26
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  br label %29

29:                                               ; preds = %5, %12, %17, %23, %28
  %30 = phi i32 [ 128, %28 ], [ 0, %23 ], [ 0, %17 ], [ 0, %12 ], [ 0, %5 ]
  %31 = load i32, i32* %3, align 4
  %32 = icmp eq i32 %31, %30
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  store i32 %30, i32* %3, align 4
  %34 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %34, %class.CFX_RectF* dereferenceable(16) %2) #10
  %35 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 7
  %36 = load float, float* %35, align 4
  %37 = bitcast %class.CFWL_EventScroll* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %37) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 bitcast ({ { i32 (...)**, i32, [4 x i8], %class.CFWL_Widget*, %class.CFWL_Widget* }, i32, float }* @__const._ZN14CFWL_ScrollBar8OnScrollEN16CFWL_EventScroll4CodeEf.ev to i8*), i64 40, i1 false) #10
  call void @_ZN16CFWL_EventScrollC1EP11CFWL_WidgetNS_4CodeEf(%class.CFWL_EventScroll* nonnull %6, %class.CFWL_Widget* %34, i32 10, float %36) #10
  %38 = getelementptr inbounds %class.CFWL_EventScroll, %class.CFWL_EventScroll* %6, i64 0, i32 0
  call void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget* %34, %class.CFWL_Event* nonnull %38) #10
  call void @_ZN16CFWL_EventScrollD1Ev(%class.CFWL_EventScroll* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %37) #10
  br label %39

39:                                               ; preds = %29, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar11DoMouseMoveEiRK9CFX_RectFRiRK13CFX_PTemplateIfE(%class.CFWL_ScrollBar*, i32, %class.CFX_RectF* dereferenceable(16), i32* nocapture dereferenceable(4), %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca float, align 4
  %7 = alloca %class.CFWL_EventScroll, align 8
  %8 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 17
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %41

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 0
  %15 = load float, float* %14, align 4
  %16 = fcmp ult float %13, %15
  br i1 %16, label %34, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 2
  %19 = load float, float* %18, align 4
  %20 = fadd float %15, %19
  %21 = fcmp olt float %13, %20
  br i1 %21, label %22, label %34

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fcmp ult float %24, %26
  br i1 %27, label %34, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.CFX_RectF, %class.CFX_RectF* %2, i64 0, i32 3
  %30 = load float, float* %29, align 4
  %31 = fadd float %26, %30
  %32 = fcmp olt float %24, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %28
  br label %34

34:                                               ; preds = %11, %17, %22, %28, %33
  %35 = phi i32 [ 128, %33 ], [ 0, %28 ], [ 0, %22 ], [ 0, %17 ], [ 0, %11 ]
  %36 = load i32, i32* %3, align 4
  %37 = icmp eq i32 %36, %35
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  store i32 %35, i32* %3, align 4
  %39 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %39, %class.CFX_RectF* dereferenceable(16) %2) #10
  br label %40

40:                                               ; preds = %34, %88, %43, %41, %38
  ret void

41:                                               ; preds = %5
  %42 = icmp eq i32 %1, 2
  br i1 %42, label %43, label %40

43:                                               ; preds = %41
  %44 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 10
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 1024
  br i1 %46, label %47, label %40

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 0
  %49 = load float, float* %48, align 4, !noalias !15
  %50 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 14, i32 0
  %51 = load float, float* %50, align 4, !noalias !15
  %52 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %4, i64 0, i32 1
  %53 = load float, float* %52, align 4, !noalias !15
  %54 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 14, i32 1
  %55 = load float, float* %54, align 4, !noalias !15
  %56 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 3
  %57 = load float, float* %56, align 4
  %58 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 2
  %59 = load float, float* %58, align 8
  %60 = fsub float %57, %59
  %61 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61)
  store float 0xFFFFFFFFE0000000, float* %6, align 4
  %62 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 1, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %63, 1
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %77, label %66

66:                                               ; preds = %47
  %67 = fsub float %53, %55
  %68 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 1
  %69 = load float, float* %68, align 4
  %70 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 1
  %71 = load float, float* %70, align 4
  %72 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 3
  %73 = load float, float* %72, align 4
  %74 = fadd float %71, %73
  %75 = fsub float %69, %74
  %76 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 3
  br label %88

77:                                               ; preds = %47
  %78 = fsub float %49, %51
  %79 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 22, i32 0
  %80 = load float, float* %79, align 4
  %81 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 0
  %82 = load float, float* %81, align 4
  %83 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 21, i32 2
  %84 = load float, float* %83, align 4
  %85 = fadd float %82, %84
  %86 = fsub float %80, %85
  %87 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 20, i32 2
  br label %88

88:                                               ; preds = %66, %77
  %89 = phi float* [ %76, %66 ], [ %87, %77 ]
  %90 = phi float [ %75, %66 ], [ %86, %77 ]
  %91 = phi float [ %67, %66 ], [ %78, %77 ]
  %92 = fmul float %91, %60
  %93 = load float, float* %89, align 4
  %94 = fsub float %90, %93
  %95 = fdiv float %92, %94
  %96 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 13
  %97 = load float, float* %96, align 4
  %98 = fadd float %95, %97
  store float %98, float* %6, align 4
  %99 = fcmp olt float %98, %59
  %100 = select i1 %99, float* %58, float* %6
  %101 = load float, float* %100, align 4
  %102 = fcmp olt float %57, %101
  %103 = select i1 %102, float* %56, float* %100
  %104 = load float, float* %103, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61)
  %105 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 7
  store float %104, float* %105, align 4
  %106 = bitcast %class.CFWL_EventScroll* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %106) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %106, i8* align 8 bitcast ({ { i32 (...)**, i32, [4 x i8], %class.CFWL_Widget*, %class.CFWL_Widget* }, i32, float }* @__const._ZN14CFWL_ScrollBar8OnScrollEN16CFWL_EventScroll4CodeEf.ev to i8*), i64 40, i1 false) #10
  %107 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  call void @_ZN16CFWL_EventScrollC1EP11CFWL_WidgetNS_4CodeEf(%class.CFWL_EventScroll* nonnull %7, %class.CFWL_Widget* %107, i32 9, float %104) #10
  %108 = getelementptr inbounds %class.CFWL_EventScroll, %class.CFWL_EventScroll* %7, i64 0, i32 0
  call void @_ZN11CFWL_Widget13DispatchEventEP10CFWL_Event(%class.CFWL_Widget* %107, %class.CFWL_Event* nonnull %108) #10
  call void @_ZN16CFWL_EventScrollD1Ev(%class.CFWL_EventScroll* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %106) #10
  br label %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar12DoMouseLeaveEiRK9CFX_RectFRi(%class.CFWL_ScrollBar*, i32, %class.CFX_RectF* dereferenceable(16), i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  store i32 0, i32* %3, align 4
  %8 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %8, %class.CFX_RectF* dereferenceable(16) %2) #10
  br label %9

9:                                                ; preds = %4, %7
  ret void
}

declare void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget*, %class.CFX_RectF* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar12DoMouseHoverEiRK9CFX_RectFRi(%class.CFWL_ScrollBar*, i32, %class.CFX_RectF* dereferenceable(16), i32* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp eq i32 %5, 128
  br i1 %6, label %9, label %7

7:                                                ; preds = %4
  store i32 128, i32* %3, align 4
  %8 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0
  tail call void @_ZN11CFWL_Widget11RepaintRectERK9CFX_RectF(%class.CFWL_Widget* %8, %class.CFX_RectF* dereferenceable(16) %2) #10
  br label %9

9:                                                ; preds = %4, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFWL_ScrollBar12OnTimerFiredEv(%class.CFWL_ScrollBar*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 25
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_Timer*, %class.CFX_Timer** %3, align 8
  store %class.CFX_Timer* null, %class.CFX_Timer** %3, align 8
  %5 = icmp eq %class.CFX_Timer* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %4) #10
  %7 = bitcast %class.CFX_Timer* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = tail call zeroext i1 @_ZN14CFWL_ScrollBar9SendEventEv(%class.CFWL_ScrollBar* %0)
  br i1 %9, label %31, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 0, i32 6
  %12 = bitcast %"class.cppgc::internal::BasicMember.0"* %11 to %"class.CFWL_App::AdapterIface"***
  %13 = load %"class.CFWL_App::AdapterIface"**, %"class.CFWL_App::AdapterIface"*** %12, align 8
  %14 = load %"class.CFWL_App::AdapterIface"*, %"class.CFWL_App::AdapterIface"** %13, align 8
  %15 = bitcast %"class.CFWL_App::AdapterIface"* %14 to %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)***
  %16 = load %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)**, %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)*, %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)** %16, i64 4
  %18 = load %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)*, %"class.CFX_Timer::HandlerIface"* (%"class.CFWL_App::AdapterIface"*)** %17, align 8
  %19 = tail call %"class.CFX_Timer::HandlerIface"* %18(%"class.CFWL_App::AdapterIface"* %14) #10
  %20 = tail call i8* @_Znwm(i64 32) #11
  %21 = bitcast i8* %20 to %class.CFX_Timer*
  %22 = icmp eq %class.CFWL_ScrollBar* %0, null
  %23 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 0, i32 1
  %24 = select i1 %22, %"class.CFX_Timer::CallbackIface"* null, %"class.CFX_Timer::CallbackIface"* %23
  tail call void @_ZN9CFX_TimerC1EPNS_12HandlerIfaceEPNS_13CallbackIfaceEi(%class.CFX_Timer* nonnull %21, %"class.CFX_Timer::HandlerIface"* %19, %"class.CFX_Timer::CallbackIface"* %24, i32 0) #10
  %25 = ptrtoint i8* %20 to i64
  %26 = load %class.CFX_Timer*, %class.CFX_Timer** %3, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %25, i64* %27, align 8
  %28 = icmp eq %class.CFX_Timer* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %10
  tail call void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer* nonnull %26) #10
  %30 = bitcast %class.CFX_Timer* %26 to i8*
  tail call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %10, %29, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N14CFWL_ScrollBar12OnTimerFiredEv(%class.CFWL_ScrollBar*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_ScrollBar, %class.CFWL_ScrollBar* %0, i64 -1, i32 20, i32 1
  %3 = bitcast float* %2 to %class.CFWL_ScrollBar*
  tail call void @_ZN14CFWL_ScrollBar12OnTimerFiredEv(%class.CFWL_ScrollBar* %3)
  ret void
}

declare void @_ZNK11CFWL_Widget5TraceEPN5cppgc7VisitorE(%class.CFWL_Widget*, %"class.cppgc::Visitor"*) unnamed_addr #1

declare void @_ZN11CFWL_Widget14OnProcessEventEP10CFWL_Event(%class.CFWL_Widget*, %class.CFWL_Event*) unnamed_addr #1

declare void @_ZN11CFWL_Widget11PreFinalizeEv(%class.CFWL_Widget*) unnamed_addr #1

declare zeroext i1 @_ZNK11CFWL_Widget6IsFormEv(%class.CFWL_Widget*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget22GetAutosizedWidgetRectEv(%class.CFWL_Widget*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN11CFWL_Widget13GetWidgetRectEv(%class.CFWL_Widget*) unnamed_addr #1

declare void @_ZN11CFWL_Widget14ModifyStylesExEjj(%class.CFWL_Widget*, i32, i32) unnamed_addr #1

declare void @_ZN11CFWL_Widget9SetStatesEj(%class.CFWL_Widget*, i32) unnamed_addr #1

declare void @_ZN11CFWL_Widget12RemoveStatesEj(%class.CFWL_Widget*, i32) unnamed_addr #1

declare i32 @_ZN11CFWL_Widget7HitTestERK13CFX_PTemplateIfE(%class.CFWL_Widget*, %class.CFX_PTemplate* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN9CFX_TimerC1EPNS_12HandlerIfaceEPNS_13CallbackIfaceEi(%class.CFX_Timer*, %"class.CFX_Timer::HandlerIface"*, %"class.CFX_Timer::CallbackIface"*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9CFX_TimerD1Ev(%class.CFX_Timer*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK9CFX_RectF7TopLeftEv: argument 0"}
!5 = distinct !{!5, !"_ZNK9CFX_RectF7TopLeftEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK9CFX_RectF7TopLeftEv: argument 0"}
!8 = distinct !{!8, !"_ZNK9CFX_RectF7TopLeftEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK9CFX_RectF7TopLeftEv: argument 0"}
!11 = distinct !{!11, !"_ZNK9CFX_RectF7TopLeftEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK13CFX_PTemplateIfEmiERKS0_: argument 0"}
!14 = distinct !{!14, !"_ZNK13CFX_PTemplateIfEmiERKS0_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK13CFX_PTemplateIfEmiERKS0_: argument 0"}
!17 = distinct !{!17, !"_ZNK13CFX_PTemplateIfEmiERKS0_"}
