; ModuleID = '../../v8/src/compiler/control-flow-optimizer.cc'
source_filename = "../../v8/src/compiler/control-flow-optimizer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::compiler::ControlFlowOptimizer" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::ZoneQueue", %"class.v8::internal::compiler::NodeMarker", %"class.v8::internal::Zone"*, %"class.v8::internal::TickCounter"* }
%"class.v8::internal::ZoneQueue" = type { %"class.std::__1::queue" }
%"class.std::__1::queue" = type { %"class.v8::internal::ZoneDeque" }
%"class.v8::internal::ZoneDeque" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.16" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.12" }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.v8::internal::compiler::Node"*** }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.v8::internal::RecyclingZoneAllocator" }
%"class.v8::internal::RecyclingZoneAllocator" = type { %"class.v8::internal::ZoneAllocator.15", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.15" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, i64 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17", %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i64 }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.v8::internal::RecyclingZoneAllocator.19" }
%"class.v8::internal::RecyclingZoneAllocator.19" = type { %"class.v8::internal::ZoneAllocator.20", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* }
%"class.v8::internal::ZoneAllocator.20" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock" = type { %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, i64 }
%"class.v8::internal::compiler::NodeMarker" = type { %"class.v8::internal::compiler::NodeMarkerBase" }
%"class.v8::internal::compiler::NodeMarkerBase" = type { i32, i32 }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.8" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::CommonOperatorBuilder" = type { %"struct.v8::internal::compiler::CommonOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::CommonOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::MachineOperatorBuilder" = type <{ %"class.v8::internal::Zone"*, %"struct.v8::internal::compiler::MachineOperatorGlobalCache"*, i8, [3 x i8], %"class.v8::base::Flags.11", %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements", [4 x i8] }>
%"struct.v8::internal::compiler::MachineOperatorGlobalCache" = type opaque
%"class.v8::base::Flags.11" = type { i32 }
%"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements" = type { i32, %"class.v8::base::EnumSet", %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.v8::internal::TickCounter" = type { i64, %"class.v8::internal::LocalHeap"* }
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type opaque
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"struct.v8::internal::compiler::BinopMatcher" = type { %"struct.v8::internal::compiler::NodeMatcher", %"struct.v8::internal::compiler::IntMatcher", %"struct.v8::internal::compiler::IntMatcher" }
%"struct.v8::internal::compiler::NodeMatcher" = type { %"class.v8::internal::compiler::Node"* }
%"struct.v8::internal::compiler::IntMatcher" = type { %"struct.v8::internal::compiler::ValueMatcher.base", [3 x i8] }
%"struct.v8::internal::compiler::ValueMatcher.base" = type <{ %"struct.v8::internal::compiler::NodeMatcher", i32, i8 }>
%"class.v8::internal::ZoneSet" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22", %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_end_node" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.v8::internal::ZoneAllocator.24" }
%"class.v8::internal::ZoneAllocator.24" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::internal::compiler::BranchMatcher" = type { %"struct.v8::internal::compiler::NodeMatcher", %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::Node::Uses::const_iterator" = type { %"struct.v8::internal::compiler::Node::Use"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__split_buffer.28" = type { %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"***, %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.13", %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.v8::internal::RecyclingZoneAllocator"* }

$_ZN2v88internal8compiler12BinopMatcherINS1_10IntMatcherIiLNS1_8IrOpcode5ValueE22EEES6_EC2EPNS1_4NodeE = comdat any

$_ZNSt3__16__treeIiNS_4lessIiEEN2v88internal13ZoneAllocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE = comdat any

$_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_ = comdat any

$_ZN2v88internal8compiler12BinopMatcherINS1_10IntMatcherIiLNS1_8IrOpcode5ValueE22EEES6_E10SwapInputsEv = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"index < node->op()->ValueInputCount()\00", align 1

@_ZN2v88internal8compiler20ControlFlowOptimizerC1EPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS1_22MachineOperatorBuilderEPNS0_11TickCounterEPNS0_4ZoneE = hidden unnamed_addr alias void (%"class.v8::internal::compiler::ControlFlowOptimizer"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::TickCounter"*, %"class.v8::internal::Zone"*), void (%"class.v8::internal::compiler::ControlFlowOptimizer"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::TickCounter"*, %"class.v8::internal::Zone"*)* @_ZN2v88internal8compiler20ControlFlowOptimizerC2EPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS1_22MachineOperatorBuilderEPNS0_11TickCounterEPNS0_4ZoneE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler20ControlFlowOptimizerC2EPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS1_22MachineOperatorBuilderEPNS0_11TickCounterEPNS0_4ZoneE(%"class.v8::internal::compiler::ControlFlowOptimizer"*, %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::TickCounter"*, %"class.v8::internal::Zone"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 0
  store %"class.v8::internal::compiler::Graph"* %1, %"class.v8::internal::compiler::Graph"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 1
  store %"class.v8::internal::compiler::CommonOperatorBuilder"* %2, %"class.v8::internal::compiler::CommonOperatorBuilder"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 2
  store %"class.v8::internal::compiler::MachineOperatorBuilder"* %3, %"class.v8::internal::compiler::MachineOperatorBuilder"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3
  %11 = ptrtoint %"class.v8::internal::Zone"* %5 to i64
  %12 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %13 = bitcast %"struct.std::__1::__compressed_pair_elem.14"* %12 to i64*
  %14 = bitcast %"class.v8::internal::ZoneQueue"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false) #6
  store i64 %11, i64* %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1
  %17 = bitcast %"struct.std::__1::__compressed_pair_elem.18"* %16 to i64*
  %18 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #6
  store i64 %11, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %20 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN2v88internal8compiler14NodeMarkerBaseC2EPNS1_5GraphEj(%"class.v8::internal::compiler::NodeMarkerBase"* %21, %"class.v8::internal::compiler::Graph"* %1, i32 2) #6
  %22 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 5
  store %"class.v8::internal::Zone"* %5, %"class.v8::internal::Zone"** %22, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 6
  store %"class.v8::internal::TickCounter"* %4, %"class.v8::internal::TickCounter"** %23, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler20ControlFlowOptimizer8OptimizeEv(%"class.v8::internal::compiler::ControlFlowOptimizer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %3, i64 0, i32 1
  %5 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, align 8
  %6 = ptrtoint %"class.v8::internal::compiler::Node"* %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = lshr i32 %8, 24
  %10 = and i32 %9, 15
  %11 = icmp eq i32 %10, 15
  %12 = add i64 %6, 32
  br i1 %11, label %13, label %20

13:                                               ; preds = %1
  %14 = inttoptr i64 %12 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %15 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %14, align 8
  %16 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %15 to i64
  %17 = add i64 %16, 16
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  br label %20

20:                                               ; preds = %13, %1
  %21 = phi i32 [ %19, %13 ], [ %10, %1 ]
  %22 = phi i64 [ %17, %13 ], [ %12, %1 ]
  %23 = icmp sgt i32 %21, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = inttoptr i64 %22 to %"class.v8::internal::compiler::Node"**
  %26 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %25, align 8
  %27 = icmp eq %"class.v8::internal::compiler::Node"* %26, null
  br i1 %27, label %79, label %28

28:                                               ; preds = %24, %20
  %29 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 4, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = tail call i32 @llvm.usub.sat.i32(i32 %30, i32 %32) #6
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %79

35:                                               ; preds = %28
  %36 = add i32 %32, 1
  store i32 %36, i32* %29, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %"class.v8::internal::compiler::Node"**** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %39, %42
  %44 = icmp eq i64 %43, 0
  %45 = shl i64 %43, 6
  %46 = add i64 %45, -1
  %47 = select i1 %44, i64 0, i64 %46
  %48 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, %49
  %53 = icmp eq i64 %47, %52
  %54 = inttoptr i64 %42 to %"class.v8::internal::compiler::Node"***
  %55 = inttoptr i64 %39 to %"class.v8::internal::compiler::Node"***
  br i1 %53, label %56, label %63

56:                                               ; preds = %35
  %57 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %57) #6
  %58 = load i64, i64* %50, align 8
  %59 = load i64, i64* %48, align 8
  %60 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %40, align 8
  %61 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %37, align 8
  %62 = add i64 %59, %58
  br label %63

63:                                               ; preds = %56, %35
  %64 = phi i64 [ %62, %56 ], [ %52, %35 ]
  %65 = phi %"class.v8::internal::compiler::Node"*** [ %61, %56 ], [ %55, %35 ]
  %66 = phi %"class.v8::internal::compiler::Node"*** [ %60, %56 ], [ %54, %35 ]
  %67 = icmp eq %"class.v8::internal::compiler::Node"*** %65, %66
  br i1 %67, label %75, label %68

68:                                               ; preds = %63
  %69 = lshr i64 %64, 9
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %66, i64 %69
  %71 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %70, align 8
  %72 = and i64 %64, 511
  %73 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %71, i64 %72
  %74 = bitcast %"class.v8::internal::compiler::Node"** %73 to i64*
  br label %75

75:                                               ; preds = %68, %63
  %76 = phi i64* [ %74, %68 ], [ null, %63 ]
  store i64 %6, i64* %76, align 8
  %77 = load i64, i64* %50, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %50, align 8
  br label %79

79:                                               ; preds = %24, %28, %75
  %80 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %162, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 6
  %85 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %88 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %87 to i64*
  %89 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %87 to %"class.v8::internal::compiler::Node"***
  %90 = bitcast i64* %86 to <2 x i64>*
  %91 = bitcast i64* %86 to <2 x i64>*
  br label %92

92:                                               ; preds = %83, %159
  %93 = load %"class.v8::internal::TickCounter"*, %"class.v8::internal::TickCounter"** %84, align 8
  tail call void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"* %93) #6
  %94 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %85, align 8
  %95 = load <2 x i64>, <2 x i64>* %90, align 8
  %96 = extractelement <2 x i64> %95, i32 0
  %97 = lshr i64 %96, 9
  %98 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %94, i64 %97
  %99 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %98, align 8
  %100 = and i64 %96, 511
  %101 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %99, i64 %100
  %102 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %101, align 8
  %103 = add <2 x i64> %95, <i64 1, i64 -1>
  store <2 x i64> %103, <2 x i64>* %91, align 8
  %104 = extractelement <2 x i64> %103, i32 0
  %105 = icmp ult i64 %104, 1024
  br i1 %105, label %126, label %106

106:                                              ; preds = %92
  %107 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %94, align 8
  %108 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %87, align 8
  %109 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %108, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %108, i64 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = icmp ugt i64 %112, 512
  br i1 %113, label %121, label %114

114:                                              ; preds = %110, %106
  %115 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %107, i64 1
  %116 = bitcast %"class.v8::internal::compiler::Node"** %115 to i64*
  store i64 512, i64* %116, align 8
  %117 = load i64, i64* %88, align 8
  %118 = bitcast %"class.v8::internal::compiler::Node"** %107 to i64*
  store i64 %117, i64* %118, align 8
  store %"class.v8::internal::compiler::Node"** %107, %"class.v8::internal::compiler::Node"*** %89, align 8
  %119 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %85, align 8
  %120 = load i64, i64* %86, align 8
  br label %121

121:                                              ; preds = %114, %110
  %122 = phi i64 [ %104, %110 ], [ %120, %114 ]
  %123 = phi %"class.v8::internal::compiler::Node"*** [ %94, %110 ], [ %119, %114 ]
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 1
  store %"class.v8::internal::compiler::Node"*** %124, %"class.v8::internal::compiler::Node"**** %85, align 8
  %125 = add i64 %122, -512
  store i64 %125, i64* %86, align 8
  br label %126

126:                                              ; preds = %92, %121
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %102, i64 0, i32 3
  %128 = load i32, i32* %127, align 4
  %129 = lshr i32 %128, 24
  %130 = and i32 %129, 15
  %131 = icmp eq i32 %130, 15
  %132 = ptrtoint %"class.v8::internal::compiler::Node"* %102 to i64
  %133 = add i64 %132, 32
  br i1 %131, label %134, label %141

134:                                              ; preds = %126
  %135 = inttoptr i64 %133 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %136 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %135, align 8
  %137 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %136 to i64
  %138 = add i64 %137, 16
  %139 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %136, i64 0, i32 1
  %140 = load i32, i32* %139, align 8
  br label %141

141:                                              ; preds = %134, %126
  %142 = phi i32 [ %140, %134 ], [ %130, %126 ]
  %143 = phi i64 [ %138, %134 ], [ %133, %126 ]
  %144 = icmp sgt i32 %142, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %141
  %146 = inttoptr i64 %143 to %"class.v8::internal::compiler::Node"**
  %147 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %146, align 8
  %148 = icmp eq %"class.v8::internal::compiler::Node"* %147, null
  br i1 %148, label %159, label %149

149:                                              ; preds = %141, %145
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %102, i64 0, i32 0
  %151 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %151, i64 0, i32 2
  %153 = load i16, i16* %152, align 8
  %154 = icmp eq i16 %153, 2
  br i1 %154, label %155, label %158

155:                                              ; preds = %149
  %156 = tail call zeroext i1 @_ZN2v88internal8compiler20ControlFlowOptimizer14TryBuildSwitchEPNS1_4NodeE(%"class.v8::internal::compiler::ControlFlowOptimizer"* %0, %"class.v8::internal::compiler::Node"* %102) #6
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  tail call void @_ZN2v88internal8compiler20ControlFlowOptimizer9VisitNodeEPNS1_4NodeE(%"class.v8::internal::compiler::ControlFlowOptimizer"* %0, %"class.v8::internal::compiler::Node"* %102) #6
  br label %159

158:                                              ; preds = %149
  tail call void @_ZN2v88internal8compiler20ControlFlowOptimizer9VisitNodeEPNS1_4NodeE(%"class.v8::internal::compiler::ControlFlowOptimizer"* %0, %"class.v8::internal::compiler::Node"* %102)
  br label %159

159:                                              ; preds = %157, %155, %158, %145
  %160 = load i64, i64* %80, align 8
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %92

162:                                              ; preds = %159, %79
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler20ControlFlowOptimizer7EnqueueEPNS1_4NodeE(%"class.v8::internal::compiler::ControlFlowOptimizer"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = lshr i32 %5, 24
  %7 = and i32 %6, 15
  %8 = icmp eq i32 %7, 15
  %9 = add i64 %3, 32
  br i1 %8, label %10, label %17

10:                                               ; preds = %2
  %11 = inttoptr i64 %9 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %12 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %11, align 8
  %13 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %12 to i64
  %14 = add i64 %13, 16
  %15 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  br label %17

17:                                               ; preds = %10, %2
  %18 = phi i32 [ %16, %10 ], [ %7, %2 ]
  %19 = phi i64 [ %14, %10 ], [ %9, %2 ]
  %20 = icmp sgt i32 %18, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %17
  %22 = inttoptr i64 %19 to %"class.v8::internal::compiler::Node"**
  %23 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %22, align 8
  %24 = icmp eq %"class.v8::internal::compiler::Node"* %23, null
  br i1 %24, label %76, label %25

25:                                               ; preds = %17, %21
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 4, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = tail call i32 @llvm.usub.sat.i32(i32 %27, i32 %29) #6
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %76

32:                                               ; preds = %25
  %33 = add i32 %29, 1
  store i32 %33, i32* %26, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %35 = bitcast %"class.v8::internal::compiler::Node"**** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %36, %39
  %41 = icmp eq i64 %40, 0
  %42 = shl i64 %40, 6
  %43 = add i64 %42, -1
  %44 = select i1 %41, i64 0, i64 %43
  %45 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, %46
  %50 = icmp eq i64 %44, %49
  %51 = inttoptr i64 %39 to %"class.v8::internal::compiler::Node"***
  %52 = inttoptr i64 %36 to %"class.v8::internal::compiler::Node"***
  br i1 %50, label %53, label %60

53:                                               ; preds = %32
  %54 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %54) #6
  %55 = load i64, i64* %47, align 8
  %56 = load i64, i64* %45, align 8
  %57 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %37, align 8
  %58 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %34, align 8
  %59 = add i64 %56, %55
  br label %60

60:                                               ; preds = %53, %32
  %61 = phi i64 [ %59, %53 ], [ %49, %32 ]
  %62 = phi %"class.v8::internal::compiler::Node"*** [ %58, %53 ], [ %52, %32 ]
  %63 = phi %"class.v8::internal::compiler::Node"*** [ %57, %53 ], [ %51, %32 ]
  %64 = icmp eq %"class.v8::internal::compiler::Node"*** %62, %63
  br i1 %64, label %72, label %65

65:                                               ; preds = %60
  %66 = lshr i64 %61, 9
  %67 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %63, i64 %66
  %68 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %67, align 8
  %69 = and i64 %61, 511
  %70 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %68, i64 %69
  %71 = bitcast %"class.v8::internal::compiler::Node"** %70 to i64*
  br label %72

72:                                               ; preds = %60, %65
  %73 = phi i64* [ %71, %65 ], [ null, %60 ]
  store i64 %3, i64* %73, align 8
  %74 = load i64, i64* %47, align 8
  %75 = add i64 %74, 1
  store i64 %75, i64* %47, align 8
  br label %76

76:                                               ; preds = %25, %21, %72
  ret void
}

declare void @_ZN2v88internal11TickCounter26TickAndMaybeEnterSafepointEv(%"class.v8::internal::TickCounter"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler20ControlFlowOptimizer11VisitBranchEPNS1_4NodeE(%"class.v8::internal::compiler::ControlFlowOptimizer"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN2v88internal8compiler20ControlFlowOptimizer14TryBuildSwitchEPNS1_4NodeE(%"class.v8::internal::compiler::ControlFlowOptimizer"* %0, %"class.v8::internal::compiler::Node"* %1)
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZN2v88internal8compiler20ControlFlowOptimizer9VisitNodeEPNS1_4NodeE(%"class.v8::internal::compiler::ControlFlowOptimizer"* %0, %"class.v8::internal::compiler::Node"* %1)
  br label %5

5:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler20ControlFlowOptimizer9VisitNodeEPNS1_4NodeE(%"class.v8::internal::compiler::ControlFlowOptimizer"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 4
  %4 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %3, align 8
  %5 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %4, null
  br i1 %5, label %15, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %9 = bitcast %"class.v8::internal::compiler::Node"**** %8 to i64*
  %10 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %12 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  br label %16

15:                                               ; preds = %113, %2
  ret void

16:                                               ; preds = %113, %6
  %17 = phi %"struct.v8::internal::compiler::Node::Use"* [ %4, %6 ], [ %19, %113 ]
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %17, i64 0, i32 0
  %19 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %18, align 8
  %20 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %17, i64 0, i32 2
  %21 = load i32, i32* %20, align 8
  %22 = lshr i32 %21, 1
  %23 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %17, i64 1
  %24 = zext i32 %22 to i64
  %25 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %23, i64 %24
  %26 = and i32 %21, 1
  %27 = icmp eq i32 %26, 0
  %28 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %25 to i64
  %29 = select i1 %27, i64 16, i64 32
  %30 = add i64 %29, %28
  %31 = inttoptr i64 %30 to %"class.v8::internal::compiler::Node"**
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, i64 %24
  %33 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsControlEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %17, %"class.v8::internal::compiler::Node"** %32) #6
  br i1 %33, label %34, label %113

34:                                               ; preds = %16
  %35 = load i32, i32* %20, align 8
  %36 = lshr i32 %35, 1
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %23, i64 %37
  %39 = and i32 %35, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  %42 = bitcast %"struct.v8::internal::compiler::Node::Use"* %38 to %"class.v8::internal::compiler::Node"*
  br label %46

43:                                               ; preds = %34
  %44 = bitcast %"struct.v8::internal::compiler::Node::Use"* %38 to %"class.v8::internal::compiler::Node"**
  %45 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %44, align 8
  br label %46

46:                                               ; preds = %41, %43
  %47 = phi %"class.v8::internal::compiler::Node"* [ %42, %41 ], [ %45, %43 ]
  %48 = ptrtoint %"class.v8::internal::compiler::Node"* %47 to i64
  %49 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %47, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = lshr i32 %50, 24
  %52 = and i32 %51, 15
  %53 = icmp eq i32 %52, 15
  %54 = add i64 %48, 32
  br i1 %53, label %55, label %62

55:                                               ; preds = %46
  %56 = inttoptr i64 %54 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %57 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %56, align 8
  %58 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %57 to i64
  %59 = add i64 %58, 16
  %60 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %57, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  br label %62

62:                                               ; preds = %55, %46
  %63 = phi i32 [ %61, %55 ], [ %52, %46 ]
  %64 = phi i64 [ %59, %55 ], [ %54, %46 ]
  %65 = icmp sgt i32 %63, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %62
  %67 = inttoptr i64 %64 to %"class.v8::internal::compiler::Node"**
  %68 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %67, align 8
  %69 = icmp eq %"class.v8::internal::compiler::Node"* %68, null
  br i1 %69, label %113, label %70

70:                                               ; preds = %66, %62
  %71 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %47, i64 0, i32 2
  %72 = load i32, i32* %71, align 8
  %73 = load i32, i32* %7, align 4
  %74 = tail call i32 @llvm.usub.sat.i32(i32 %72, i32 %73) #6
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %113

76:                                               ; preds = %70
  %77 = add i32 %73, 1
  store i32 %77, i32* %71, align 8
  %78 = load i64, i64* %9, align 8
  %79 = load i64, i64* %11, align 8
  %80 = sub i64 %78, %79
  %81 = icmp eq i64 %80, 0
  %82 = shl i64 %80, 6
  %83 = add i64 %82, -1
  %84 = select i1 %81, i64 0, i64 %83
  %85 = load i64, i64* %12, align 8
  %86 = load i64, i64* %13, align 8
  %87 = add i64 %86, %85
  %88 = icmp eq i64 %84, %87
  %89 = inttoptr i64 %79 to %"class.v8::internal::compiler::Node"***
  %90 = inttoptr i64 %78 to %"class.v8::internal::compiler::Node"***
  br i1 %88, label %91, label %97

91:                                               ; preds = %76
  tail call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %14) #6
  %92 = load i64, i64* %13, align 8
  %93 = load i64, i64* %12, align 8
  %94 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %95 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %8, align 8
  %96 = add i64 %93, %92
  br label %97

97:                                               ; preds = %91, %76
  %98 = phi i64 [ %96, %91 ], [ %87, %76 ]
  %99 = phi %"class.v8::internal::compiler::Node"*** [ %95, %91 ], [ %90, %76 ]
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %94, %91 ], [ %89, %76 ]
  %101 = icmp eq %"class.v8::internal::compiler::Node"*** %99, %100
  br i1 %101, label %109, label %102

102:                                              ; preds = %97
  %103 = lshr i64 %98, 9
  %104 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 %103
  %105 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %104, align 8
  %106 = and i64 %98, 511
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %105, i64 %106
  %108 = bitcast %"class.v8::internal::compiler::Node"** %107 to i64*
  br label %109

109:                                              ; preds = %102, %97
  %110 = phi i64* [ %108, %102 ], [ null, %97 ]
  store i64 %48, i64* %110, align 8
  %111 = load i64, i64* %13, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %13, align 8
  br label %113

113:                                              ; preds = %109, %70, %66, %16
  %114 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %19, null
  br i1 %114, label %15, label %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsControlEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal8compiler20ControlFlowOptimizer14TryBuildSwitchEPNS1_4NodeE(%"class.v8::internal::compiler::ControlFlowOptimizer"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::compiler::BinopMatcher", align 8
  %4 = alloca %"class.v8::internal::ZoneSet", align 8
  %5 = alloca %"struct.v8::internal::compiler::BranchMatcher", align 8
  %6 = alloca %"class.v8::internal::compiler::Node::Uses::const_iterator", align 8
  %7 = alloca %"struct.v8::internal::compiler::BinopMatcher", align 8
  %8 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %9 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %8, align 8
  %10 = tail call zeroext i8 @_ZN2v88internal8compiler12BranchHintOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %9) #6
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %617

12:                                               ; preds = %2
  %13 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %8, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %13, i64 0, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %18, label %17, !prof !2

17:                                               ; preds = %12
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 251658240
  %22 = icmp eq i32 %21, 251658240
  %23 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %24 = add i64 %23, 32
  br i1 %22, label %25, label %29

25:                                               ; preds = %18
  %26 = inttoptr i64 %24 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 16
  br label %29

29:                                               ; preds = %18, %25
  %30 = phi i64 [ %28, %25 ], [ %24, %18 ]
  %31 = inttoptr i64 %30 to %"class.v8::internal::compiler::Node"**
  %32 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %32, i64 0, i32 0
  %34 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %34, i64 0, i32 2
  %36 = load i16, i16* %35, align 8
  %37 = icmp eq i16 %36, 342
  br i1 %37, label %38, label %617

38:                                               ; preds = %29
  %39 = bitcast %"struct.v8::internal::compiler::BinopMatcher"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %39) #6
  call void @_ZN2v88internal8compiler12BinopMatcherINS1_10IntMatcherIiLNS1_8IrOpcode5ValueE22EEES6_EC2EPNS1_4NodeE(%"struct.v8::internal::compiler::BinopMatcher"* nonnull %3, %"class.v8::internal::compiler::Node"* %32)
  %40 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %40, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %3, i64 0, i32 2, i32 0, i32 2
  %43 = load i8, i8* %42, align 4, !range !3
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %615, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %3, i64 0, i32 2, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = bitcast %"class.v8::internal::ZoneSet"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #6
  %49 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 5
  %50 = bitcast %"class.v8::internal::Zone"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %4, i64 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %4, i64 0, i32 0, i32 0, i32 1, i32 1
  %54 = bitcast %"struct.std::__1::__compressed_pair_elem.23"* %53 to i64*
  %55 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %4, i64 0, i32 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::__compressed_pair.21"* %55 to i64*
  store i64 0, i64* %56, align 8
  store i64 %51, i64* %54, align 8
  %57 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %58, %"class.std::__1::__tree_end_node"** %52, align 8
  %59 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %4, i64 0, i32 0, i32 0
  %60 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_node"**
  %61 = inttoptr i64 %51 to %"class.v8::internal::Zone"*
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %63 = bitcast %"class.std::__1::__tree_end_node"* %58 to %"class.std::__1::__tree_node"**
  %64 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node"* %64, null
  br i1 %65, label %66, label %96

66:                                               ; preds = %45
  %67 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %68 = load i64, i64* %67, align 8, !noalias !4
  %69 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %70 = load i64, i64* %69, align 8, !noalias !4
  %71 = sub i64 %70, %68
  %72 = icmp ult i64 %71, 32
  br i1 %72, label %73, label %75, !prof !7

73:                                               ; preds = %66
  %74 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 32) #6, !noalias !4
  br label %77

75:                                               ; preds = %66
  %76 = add i64 %68, 32
  store i64 %76, i64* %67, align 8, !noalias !4
  br label %77

77:                                               ; preds = %75, %73
  %78 = phi i64 [ %74, %73 ], [ %68, %75 ]
  %79 = inttoptr i64 %78 to %"class.std::__1::__tree_node"*
  %80 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %79, i64 0, i32 1
  store i32 %47, i32* %80, align 4, !noalias !4
  %81 = inttoptr i64 %78 to %"class.std::__1::__tree_node_base"*
  %82 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %81, i64 0, i32 2
  %83 = inttoptr i64 %78 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %58, %"class.std::__1::__tree_end_node"** %82, align 8
  store %"class.std::__1::__tree_node_base"* %81, %"class.std::__1::__tree_node_base"** %62, align 8
  %84 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %84, i64 0, i32 0
  %86 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %85, align 8
  %87 = icmp eq %"class.std::__1::__tree_node_base"* %86, null
  br i1 %87, label %91, label %88

88:                                               ; preds = %77
  %89 = ptrtoint %"class.std::__1::__tree_node_base"* %86 to i64
  %90 = bitcast %"class.v8::internal::ZoneSet"* %4 to i64*
  store i64 %89, i64* %90, align 8
  br label %91

91:                                               ; preds = %88, %77
  %92 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %93 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %92, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %93, %"class.std::__1::__tree_node_base"* %81) #6
  %94 = load i64, i64* %57, align 8
  %95 = add i64 %94, 1
  store i64 %95, i64* %57, align 8
  br label %96

96:                                               ; preds = %45, %91
  %97 = bitcast %"struct.v8::internal::compiler::BranchMatcher"* %5 to i8*
  %98 = getelementptr inbounds %"struct.v8::internal::compiler::BranchMatcher", %"struct.v8::internal::compiler::BranchMatcher"* %5, i64 0, i32 1
  %99 = getelementptr inbounds %"struct.v8::internal::compiler::BranchMatcher", %"struct.v8::internal::compiler::BranchMatcher"* %5, i64 0, i32 2
  %100 = bitcast %"class.v8::internal::compiler::Node::Uses::const_iterator"* %6 to i8*
  %101 = getelementptr inbounds %"class.v8::internal::compiler::Node::Uses::const_iterator", %"class.v8::internal::compiler::Node::Uses::const_iterator"* %6, i64 0, i32 0
  %102 = bitcast %"struct.v8::internal::compiler::BinopMatcher"* %7 to i8*
  %103 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %104 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %7, i64 0, i32 2, i32 0, i32 2
  %105 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %7, i64 0, i32 2, i32 0, i32 1
  %106 = icmp eq %"class.v8::internal::compiler::Node"* %1, null
  %107 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 1
  %108 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 4, i32 0, i32 0
  %109 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %110 = bitcast %"class.v8::internal::compiler::Node"**** %109 to i64*
  %111 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %112 = bitcast %"class.v8::internal::compiler::Node"**** %111 to i64*
  %113 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %115 = getelementptr inbounds %"class.v8::internal::compiler::ControlFlowOptimizer", %"class.v8::internal::compiler::ControlFlowOptimizer"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %58, i64 0, i32 0
  %118 = getelementptr inbounds %"class.v8::internal::ZoneSet", %"class.v8::internal::ZoneSet"* %4, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %119 = bitcast %"class.v8::internal::ZoneSet"* %4 to i64*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #6
  call void @_ZN2v88internal8compiler13BranchMatcherC1EPNS1_4NodeE(%"struct.v8::internal::compiler::BranchMatcher"* nonnull %5, %"class.v8::internal::compiler::Node"* %1) #6
  %120 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %98, align 8
  %121 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %99, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #6
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %121, i64 0, i32 4
  %123 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %122, align 8
  store %"struct.v8::internal::compiler::Node::Use"* %123, %"struct.v8::internal::compiler::Node::Use"** %101, align 8
  %124 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %123, null
  br i1 %124, label %385, label %125

125:                                              ; preds = %96, %378
  %126 = phi %"class.v8::internal::compiler::Node"* [ %380, %378 ], [ %121, %96 ]
  %127 = phi %"class.v8::internal::compiler::Node"* [ %379, %378 ], [ %120, %96 ]
  %128 = phi %"class.v8::internal::compiler::Node"* [ %146, %378 ], [ %1, %96 ]
  %129 = phi i32 [ %247, %378 ], [ 1, %96 ]
  %130 = phi i32 [ %185, %378 ], [ %47, %96 ]
  %131 = call %"struct.v8::internal::compiler::Node::Use"* @_ZN2v88internal8compiler4Node4Uses14const_iteratorppEi(%"class.v8::internal::compiler::Node::Uses::const_iterator"* nonnull %6, i32 0) #6
  %132 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %131, i64 1
  %133 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %131, i64 0, i32 2
  %134 = load i32, i32* %133, align 8
  %135 = lshr i32 %134, 1
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %132, i64 %136
  %138 = and i32 %134, 1
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %125
  %141 = bitcast %"struct.v8::internal::compiler::Node::Use"* %137 to %"class.v8::internal::compiler::Node"*
  br label %145

142:                                              ; preds = %125
  %143 = bitcast %"struct.v8::internal::compiler::Node::Use"* %137 to %"class.v8::internal::compiler::Node"**
  %144 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %143, align 8
  br label %145

145:                                              ; preds = %140, %142
  %146 = phi %"class.v8::internal::compiler::Node"* [ %141, %140 ], [ %144, %142 ]
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %146, i64 0, i32 0
  %148 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %147, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %148, i64 0, i32 2
  %150 = load i16, i16* %149, align 8
  %151 = icmp eq i16 %150, 2
  br i1 %151, label %152, label %385

152:                                              ; preds = %145
  %153 = call zeroext i8 @_ZN2v88internal8compiler12BranchHintOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %148) #6
  %154 = icmp ne i8 %153, 0
  %155 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %101, align 8
  %156 = icmp ne %"struct.v8::internal::compiler::Node::Use"* %155, null
  %157 = or i1 %154, %156
  br i1 %157, label %385, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %146, i64 0, i32 3
  %160 = load i32, i32* %159, align 4
  %161 = and i32 %160, 251658240
  %162 = icmp eq i32 %161, 251658240
  %163 = ptrtoint %"class.v8::internal::compiler::Node"* %146 to i64
  %164 = add i64 %163, 32
  br i1 %162, label %165, label %169

165:                                              ; preds = %158
  %166 = inttoptr i64 %164 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = add i64 %167, 16
  br label %169

169:                                              ; preds = %158, %165
  %170 = phi i64 [ %168, %165 ], [ %164, %158 ]
  %171 = inttoptr i64 %170 to %"class.v8::internal::compiler::Node"**
  %172 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %172, i64 0, i32 0
  %174 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %173, align 8
  %175 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %174, i64 0, i32 2
  %176 = load i16, i16* %175, align 8
  %177 = icmp eq i16 %176, 342
  br i1 %177, label %178, label %385

178:                                              ; preds = %169
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %102) #6
  call void @_ZN2v88internal8compiler12BinopMatcherINS1_10IntMatcherIiLNS1_8IrOpcode5ValueE22EEES6_EC2EPNS1_4NodeE(%"struct.v8::internal::compiler::BinopMatcher"* nonnull %7, %"class.v8::internal::compiler::Node"* %172)
  %179 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %103, align 8
  %180 = icmp ne %"class.v8::internal::compiler::Node"* %179, %41
  %181 = load i8, i8* %104, align 4
  %182 = icmp eq i8 %181, 0
  %183 = or i1 %180, %182
  br i1 %183, label %384, label %184

184:                                              ; preds = %178
  %185 = load i32, i32* %105, align 8
  %186 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %60, align 8
  %187 = icmp eq %"class.std::__1::__tree_node"* %186, null
  br i1 %187, label %209, label %188

188:                                              ; preds = %184, %188
  %189 = phi %"class.std::__1::__tree_end_node"* [ %199, %188 ], [ %58, %184 ]
  %190 = phi %"class.std::__1::__tree_node"* [ %200, %188 ], [ %186, %184 ]
  %191 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %190, i64 0, i32 1
  %192 = load i32, i32* %191, align 4
  %193 = icmp slt i32 %192, %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %190, i64 0, i32 0, i32 1
  %195 = bitcast %"class.std::__1::__tree_node_base"** %194 to %"class.std::__1::__tree_node"**
  %196 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %190, i64 0, i32 0, i32 0
  %197 = bitcast %"class.std::__1::__tree_node"* %190 to %"class.std::__1::__tree_node"**
  %198 = select i1 %193, %"class.std::__1::__tree_node"** %195, %"class.std::__1::__tree_node"** %197
  %199 = select i1 %193, %"class.std::__1::__tree_end_node"* %189, %"class.std::__1::__tree_end_node"* %196
  %200 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %198, align 8
  %201 = icmp eq %"class.std::__1::__tree_node"* %200, null
  br i1 %201, label %202, label %188

202:                                              ; preds = %188
  %203 = icmp eq %"class.std::__1::__tree_end_node"* %199, %58
  br i1 %203, label %209, label %204

204:                                              ; preds = %202
  %205 = bitcast %"class.std::__1::__tree_end_node"* %199 to %"class.std::__1::__tree_node"*
  %206 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %205, i64 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = icmp slt i32 %185, %207
  br i1 %208, label %209, label %384

209:                                              ; preds = %204, %202, %184
  %210 = icmp eq %"class.v8::internal::compiler::Node"* %128, %1
  br i1 %210, label %211, label %214

211:                                              ; preds = %209
  %212 = ptrtoint %"class.v8::internal::compiler::Node"* %127 to i64
  %213 = add i64 %212, 32
  br label %243

214:                                              ; preds = %209
  call void @_ZN2v88internal8compiler4Node13NullAllInputsEv(%"class.v8::internal::compiler::Node"* %128) #6
  %215 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %127, i64 0, i32 3
  %216 = load i32, i32* %215, align 4
  %217 = and i32 %216, 251658240
  %218 = icmp eq i32 %217, 251658240
  %219 = ptrtoint %"class.v8::internal::compiler::Node"* %127 to i64
  %220 = add i64 %219, 32
  br i1 %218, label %221, label %225

221:                                              ; preds = %214
  %222 = inttoptr i64 %220 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = add i64 %223, 16
  br label %225

225:                                              ; preds = %214, %221
  %226 = phi i64 [ %224, %221 ], [ %220, %214 ]
  %227 = inttoptr i64 %226 to %"class.v8::internal::compiler::Node"**
  %228 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %227, align 8
  %229 = icmp eq %"class.v8::internal::compiler::Node"* %228, %1
  br i1 %229, label %243, label %230

230:                                              ; preds = %225
  br i1 %218, label %233, label %231

231:                                              ; preds = %230
  %232 = bitcast %"class.v8::internal::compiler::Node"* %127 to %"struct.v8::internal::compiler::Node::Use"*
  br label %236

233:                                              ; preds = %230
  %234 = inttoptr i64 %220 to %"struct.v8::internal::compiler::Node::Use"**
  %235 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %234, align 8
  br label %236

236:                                              ; preds = %233, %231
  %237 = phi %"struct.v8::internal::compiler::Node::Use"* [ %232, %231 ], [ %235, %233 ]
  %238 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %237, i64 -1
  %239 = icmp eq %"class.v8::internal::compiler::Node"* %228, null
  br i1 %239, label %241, label %240

240:                                              ; preds = %236
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %228, %"struct.v8::internal::compiler::Node::Use"* %238) #6
  br label %241

241:                                              ; preds = %240, %236
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %227, align 8
  br i1 %106, label %243, label %242

242:                                              ; preds = %241
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1, %"struct.v8::internal::compiler::Node::Use"* %238) #6
  br label %243

243:                                              ; preds = %211, %242, %241, %225
  %244 = phi i64 [ %213, %211 ], [ %220, %242 ], [ %220, %241 ], [ %220, %225 ]
  %245 = phi i64 [ %212, %211 ], [ %219, %242 ], [ %219, %241 ], [ %219, %225 ]
  %246 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %107, align 8
  %247 = add nuw nsw i32 %129, 1
  %248 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder7IfValueEiiNS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %246, i32 %130, i32 %129, i8 zeroext 0) #6
  call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %127, %"class.v8::internal::compiler::Operator"* %248) #6
  call void @_ZN2v88internal8compiler4Node13NullAllInputsEv(%"class.v8::internal::compiler::Node"* %126) #6
  %249 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %127, i64 0, i32 3
  %250 = load i32, i32* %249, align 4
  %251 = lshr i32 %250, 24
  %252 = and i32 %251, 15
  %253 = icmp eq i32 %252, 15
  br i1 %253, label %254, label %261

254:                                              ; preds = %243
  %255 = inttoptr i64 %244 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %256 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %255, align 8
  %257 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %256 to i64
  %258 = add i64 %257, 16
  %259 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %256, i64 0, i32 1
  %260 = load i32, i32* %259, align 8
  br label %261

261:                                              ; preds = %254, %243
  %262 = phi i32 [ %260, %254 ], [ %252, %243 ]
  %263 = phi i64 [ %258, %254 ], [ %244, %243 ]
  %264 = icmp sgt i32 %262, 0
  br i1 %264, label %265, label %269

265:                                              ; preds = %261
  %266 = inttoptr i64 %263 to %"class.v8::internal::compiler::Node"**
  %267 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %266, align 8
  %268 = icmp eq %"class.v8::internal::compiler::Node"* %267, null
  br i1 %268, label %312, label %269

269:                                              ; preds = %265, %261
  %270 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %127, i64 0, i32 2
  %271 = load i32, i32* %270, align 8
  %272 = load i32, i32* %108, align 4
  %273 = call i32 @llvm.usub.sat.i32(i32 %271, i32 %272) #6
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %312

275:                                              ; preds = %269
  %276 = add i32 %272, 1
  store i32 %276, i32* %270, align 8
  %277 = load i64, i64* %110, align 8
  %278 = load i64, i64* %112, align 8
  %279 = sub i64 %277, %278
  %280 = icmp eq i64 %279, 0
  %281 = shl i64 %279, 6
  %282 = add i64 %281, -1
  %283 = select i1 %280, i64 0, i64 %282
  %284 = load i64, i64* %113, align 8
  %285 = load i64, i64* %114, align 8
  %286 = add i64 %285, %284
  %287 = icmp eq i64 %283, %286
  %288 = inttoptr i64 %278 to %"class.v8::internal::compiler::Node"***
  %289 = inttoptr i64 %277 to %"class.v8::internal::compiler::Node"***
  br i1 %287, label %290, label %296

290:                                              ; preds = %275
  call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %115) #6
  %291 = load i64, i64* %114, align 8
  %292 = load i64, i64* %113, align 8
  %293 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %111, align 8
  %294 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %109, align 8
  %295 = add i64 %292, %291
  br label %296

296:                                              ; preds = %290, %275
  %297 = phi i64 [ %295, %290 ], [ %286, %275 ]
  %298 = phi %"class.v8::internal::compiler::Node"*** [ %294, %290 ], [ %289, %275 ]
  %299 = phi %"class.v8::internal::compiler::Node"*** [ %293, %290 ], [ %288, %275 ]
  %300 = icmp eq %"class.v8::internal::compiler::Node"*** %298, %299
  br i1 %300, label %308, label %301

301:                                              ; preds = %296
  %302 = lshr i64 %297, 9
  %303 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %299, i64 %302
  %304 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %303, align 8
  %305 = and i64 %297, 511
  %306 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %304, i64 %305
  %307 = bitcast %"class.v8::internal::compiler::Node"** %306 to i64*
  br label %308

308:                                              ; preds = %301, %296
  %309 = phi i64* [ %307, %301 ], [ null, %296 ]
  store i64 %245, i64* %309, align 8
  %310 = load i64, i64* %114, align 8
  %311 = add i64 %310, 1
  store i64 %311, i64* %114, align 8
  br label %312

312:                                              ; preds = %265, %269, %308
  %313 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %60, align 8
  %314 = icmp eq %"class.std::__1::__tree_node"* %313, null
  br i1 %314, label %341, label %315

315:                                              ; preds = %312, %337
  %316 = phi %"class.std::__1::__tree_node"* [ %340, %337 ], [ %313, %312 ]
  %317 = phi %"class.std::__1::__tree_node_base"** [ %339, %337 ], [ %116, %312 ]
  %318 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %316, i64 0, i32 1
  %319 = load i32, i32* %318, align 4
  %320 = icmp slt i32 %185, %319
  br i1 %320, label %321, label %327

321:                                              ; preds = %315
  %322 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %316, i64 0, i32 0, i32 0, i32 0
  %323 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %322, align 8
  %324 = icmp eq %"class.std::__1::__tree_node_base"* %323, null
  br i1 %324, label %325, label %337

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %316, i64 0, i32 0, i32 0
  br label %341

327:                                              ; preds = %315
  %328 = icmp slt i32 %319, %185
  br i1 %328, label %329, label %335

329:                                              ; preds = %327
  %330 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %316, i64 0, i32 0, i32 1
  %331 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %330, align 8
  %332 = icmp eq %"class.std::__1::__tree_node_base"* %331, null
  br i1 %332, label %333, label %337

333:                                              ; preds = %329
  %334 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %316, i64 0, i32 0, i32 0
  br label %341

335:                                              ; preds = %327
  %336 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %316, i64 0, i32 0, i32 0
  br label %341

337:                                              ; preds = %329, %321
  %338 = phi %"class.std::__1::__tree_node_base"* [ %323, %321 ], [ %331, %329 ]
  %339 = phi %"class.std::__1::__tree_node_base"** [ %322, %321 ], [ %330, %329 ]
  %340 = bitcast %"class.std::__1::__tree_node_base"* %338 to %"class.std::__1::__tree_node"*
  br label %315

341:                                              ; preds = %312, %335, %333, %325
  %342 = phi %"class.std::__1::__tree_end_node"* [ %326, %325 ], [ %334, %333 ], [ %336, %335 ], [ %58, %312 ]
  %343 = phi %"class.std::__1::__tree_node_base"** [ %322, %325 ], [ %330, %333 ], [ %317, %335 ], [ %117, %312 ]
  %344 = bitcast %"class.std::__1::__tree_node_base"** %343 to %"class.std::__1::__tree_node"**
  %345 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %344, align 8
  %346 = icmp eq %"class.std::__1::__tree_node"* %345, null
  br i1 %346, label %347, label %378

347:                                              ; preds = %341
  %348 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %118, align 8, !noalias !8
  %349 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %348, i64 0, i32 2
  %350 = load i64, i64* %349, align 8, !noalias !8
  %351 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %348, i64 0, i32 3
  %352 = load i64, i64* %351, align 8, !noalias !8
  %353 = sub i64 %352, %350
  %354 = icmp ult i64 %353, 32
  br i1 %354, label %355, label %357, !prof !7

355:                                              ; preds = %347
  %356 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %348, i64 32) #6, !noalias !8
  br label %359

357:                                              ; preds = %347
  %358 = add i64 %350, 32
  store i64 %358, i64* %349, align 8, !noalias !8
  br label %359

359:                                              ; preds = %357, %355
  %360 = phi i64 [ %356, %355 ], [ %350, %357 ]
  %361 = inttoptr i64 %360 to %"class.std::__1::__tree_node"*
  %362 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %361, i64 0, i32 1
  store i32 %185, i32* %362, align 4, !noalias !8
  %363 = inttoptr i64 %360 to %"class.std::__1::__tree_node_base"*
  %364 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %363, i64 0, i32 2
  %365 = inttoptr i64 %360 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %365, i8 0, i64 16, i1 false) #6
  store %"class.std::__1::__tree_end_node"* %342, %"class.std::__1::__tree_end_node"** %364, align 8
  store %"class.std::__1::__tree_node_base"* %363, %"class.std::__1::__tree_node_base"** %343, align 8
  %366 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %367 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %366, i64 0, i32 0
  %368 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %367, align 8
  %369 = icmp eq %"class.std::__1::__tree_node_base"* %368, null
  br i1 %369, label %373, label %370

370:                                              ; preds = %359
  %371 = ptrtoint %"class.std::__1::__tree_node_base"* %368 to i64
  store i64 %371, i64* %119, align 8
  %372 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %343, align 8
  br label %373

373:                                              ; preds = %370, %359
  %374 = phi %"class.std::__1::__tree_node_base"* [ %363, %359 ], [ %372, %370 ]
  %375 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %375, %"class.std::__1::__tree_node_base"* %374) #6
  %376 = load i64, i64* %57, align 8
  %377 = add i64 %376, 1
  store i64 %377, i64* %57, align 8
  br label %378

378:                                              ; preds = %373, %341
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %102) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #6
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #6
  call void @_ZN2v88internal8compiler13BranchMatcherC1EPNS1_4NodeE(%"struct.v8::internal::compiler::BranchMatcher"* nonnull %5, %"class.v8::internal::compiler::Node"* %146) #6
  %379 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %98, align 8
  %380 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %99, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #6
  %381 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %380, i64 0, i32 4
  %382 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %381, align 8
  store %"struct.v8::internal::compiler::Node::Use"* %382, %"struct.v8::internal::compiler::Node::Use"** %101, align 8
  %383 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %382, null
  br i1 %383, label %385, label %125

384:                                              ; preds = %178, %204
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %102) #6
  br label %385

385:                                              ; preds = %152, %378, %145, %169, %96, %384
  %386 = phi i32 [ %130, %384 ], [ %47, %96 ], [ %130, %169 ], [ %130, %145 ], [ %185, %378 ], [ %130, %152 ]
  %387 = phi i32 [ %129, %384 ], [ 1, %96 ], [ %129, %169 ], [ %129, %145 ], [ %247, %378 ], [ %129, %152 ]
  %388 = phi %"class.v8::internal::compiler::Node"* [ %128, %384 ], [ %1, %96 ], [ %128, %169 ], [ %128, %145 ], [ %146, %378 ], [ %128, %152 ]
  %389 = phi %"class.v8::internal::compiler::Node"* [ %127, %384 ], [ %120, %96 ], [ %127, %169 ], [ %127, %145 ], [ %379, %378 ], [ %127, %152 ]
  %390 = phi %"class.v8::internal::compiler::Node"* [ %126, %384 ], [ %121, %96 ], [ %126, %169 ], [ %126, %145 ], [ %380, %378 ], [ %126, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #6
  %391 = icmp eq %"class.v8::internal::compiler::Node"* %388, %1
  br i1 %391, label %612, label %392

392:                                              ; preds = %385
  %393 = load i32, i32* %19, align 4
  %394 = and i32 %393, 251658240
  %395 = icmp eq i32 %394, 251658240
  br i1 %395, label %396, label %400

396:                                              ; preds = %392
  %397 = inttoptr i64 %24 to i64*
  %398 = load i64, i64* %397, align 8
  %399 = add i64 %398, 16
  br label %400

400:                                              ; preds = %392, %396
  %401 = phi i64 [ %399, %396 ], [ %24, %392 ]
  %402 = inttoptr i64 %401 to %"class.v8::internal::compiler::Node"**
  %403 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %402, align 8
  %404 = icmp eq %"class.v8::internal::compiler::Node"* %403, %41
  br i1 %404, label %419, label %405

405:                                              ; preds = %400
  br i1 %395, label %408, label %406

406:                                              ; preds = %405
  %407 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %411

408:                                              ; preds = %405
  %409 = inttoptr i64 %24 to %"struct.v8::internal::compiler::Node::Use"**
  %410 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %409, align 8
  br label %411

411:                                              ; preds = %408, %406
  %412 = phi %"struct.v8::internal::compiler::Node::Use"* [ %407, %406 ], [ %410, %408 ]
  %413 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %412, i64 -1
  %414 = icmp eq %"class.v8::internal::compiler::Node"* %403, null
  br i1 %414, label %416, label %415

415:                                              ; preds = %411
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %403, %"struct.v8::internal::compiler::Node::Use"* %413) #6
  br label %416

416:                                              ; preds = %415, %411
  store %"class.v8::internal::compiler::Node"* %41, %"class.v8::internal::compiler::Node"** %402, align 8
  %417 = icmp eq %"class.v8::internal::compiler::Node"* %41, null
  br i1 %417, label %419, label %418

418:                                              ; preds = %416
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %41, %"struct.v8::internal::compiler::Node::Use"* %413) #6
  br label %419

419:                                              ; preds = %400, %416, %418
  %420 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %107, align 8
  %421 = load i64, i64* %57, align 8
  %422 = add i64 %421, 1
  %423 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6SwitchEm(%"class.v8::internal::compiler::CommonOperatorBuilder"* %420, i64 %422) #6
  call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Operator"* %423) #6
  %424 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %389, i64 0, i32 3
  %425 = load i32, i32* %424, align 4
  %426 = and i32 %425, 251658240
  %427 = icmp eq i32 %426, 251658240
  %428 = ptrtoint %"class.v8::internal::compiler::Node"* %389 to i64
  %429 = add i64 %428, 32
  br i1 %427, label %430, label %434

430:                                              ; preds = %419
  %431 = inttoptr i64 %429 to i64*
  %432 = load i64, i64* %431, align 8
  %433 = add i64 %432, 16
  br label %434

434:                                              ; preds = %419, %430
  %435 = phi i64 [ %433, %430 ], [ %429, %419 ]
  %436 = inttoptr i64 %435 to %"class.v8::internal::compiler::Node"**
  %437 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %436, align 8
  %438 = icmp eq %"class.v8::internal::compiler::Node"* %437, %1
  br i1 %438, label %452, label %439

439:                                              ; preds = %434
  br i1 %427, label %442, label %440

440:                                              ; preds = %439
  %441 = bitcast %"class.v8::internal::compiler::Node"* %389 to %"struct.v8::internal::compiler::Node::Use"*
  br label %445

442:                                              ; preds = %439
  %443 = inttoptr i64 %429 to %"struct.v8::internal::compiler::Node::Use"**
  %444 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %443, align 8
  br label %445

445:                                              ; preds = %442, %440
  %446 = phi %"struct.v8::internal::compiler::Node::Use"* [ %441, %440 ], [ %444, %442 ]
  %447 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %446, i64 -1
  %448 = icmp eq %"class.v8::internal::compiler::Node"* %437, null
  br i1 %448, label %450, label %449

449:                                              ; preds = %445
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %437, %"struct.v8::internal::compiler::Node::Use"* %447) #6
  br label %450

450:                                              ; preds = %449, %445
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %436, align 8
  br i1 %106, label %452, label %451

451:                                              ; preds = %450
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1, %"struct.v8::internal::compiler::Node::Use"* %447) #6
  br label %452

452:                                              ; preds = %434, %450, %451
  %453 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %107, align 8
  %454 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder7IfValueEiiNS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %453, i32 %386, i32 %387, i8 zeroext 0) #6
  call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %389, %"class.v8::internal::compiler::Operator"* %454) #6
  %455 = load i32, i32* %424, align 4
  %456 = lshr i32 %455, 24
  %457 = and i32 %456, 15
  %458 = icmp eq i32 %457, 15
  br i1 %458, label %459, label %466

459:                                              ; preds = %452
  %460 = inttoptr i64 %429 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %461 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %460, align 8
  %462 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %461 to i64
  %463 = add i64 %462, 16
  %464 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %461, i64 0, i32 1
  %465 = load i32, i32* %464, align 8
  br label %466

466:                                              ; preds = %459, %452
  %467 = phi i32 [ %465, %459 ], [ %457, %452 ]
  %468 = phi i64 [ %463, %459 ], [ %429, %452 ]
  %469 = icmp sgt i32 %467, 0
  br i1 %469, label %470, label %474

470:                                              ; preds = %466
  %471 = inttoptr i64 %468 to %"class.v8::internal::compiler::Node"**
  %472 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %471, align 8
  %473 = icmp eq %"class.v8::internal::compiler::Node"* %472, null
  br i1 %473, label %517, label %474

474:                                              ; preds = %470, %466
  %475 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %389, i64 0, i32 2
  %476 = load i32, i32* %475, align 8
  %477 = load i32, i32* %108, align 4
  %478 = call i32 @llvm.usub.sat.i32(i32 %476, i32 %477) #6
  %479 = icmp eq i32 %478, 0
  br i1 %479, label %480, label %517

480:                                              ; preds = %474
  %481 = add i32 %477, 1
  store i32 %481, i32* %475, align 8
  %482 = load i64, i64* %110, align 8
  %483 = load i64, i64* %112, align 8
  %484 = sub i64 %482, %483
  %485 = icmp eq i64 %484, 0
  %486 = shl i64 %484, 6
  %487 = add i64 %486, -1
  %488 = select i1 %485, i64 0, i64 %487
  %489 = load i64, i64* %113, align 8
  %490 = load i64, i64* %114, align 8
  %491 = add i64 %490, %489
  %492 = icmp eq i64 %488, %491
  %493 = inttoptr i64 %483 to %"class.v8::internal::compiler::Node"***
  %494 = inttoptr i64 %482 to %"class.v8::internal::compiler::Node"***
  br i1 %492, label %495, label %501

495:                                              ; preds = %480
  call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %115) #6
  %496 = load i64, i64* %114, align 8
  %497 = load i64, i64* %113, align 8
  %498 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %111, align 8
  %499 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %109, align 8
  %500 = add i64 %497, %496
  br label %501

501:                                              ; preds = %495, %480
  %502 = phi i64 [ %500, %495 ], [ %491, %480 ]
  %503 = phi %"class.v8::internal::compiler::Node"*** [ %499, %495 ], [ %494, %480 ]
  %504 = phi %"class.v8::internal::compiler::Node"*** [ %498, %495 ], [ %493, %480 ]
  %505 = icmp eq %"class.v8::internal::compiler::Node"*** %503, %504
  br i1 %505, label %513, label %506

506:                                              ; preds = %501
  %507 = lshr i64 %502, 9
  %508 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %504, i64 %507
  %509 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %508, align 8
  %510 = and i64 %502, 511
  %511 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %509, i64 %510
  %512 = bitcast %"class.v8::internal::compiler::Node"** %511 to i64*
  br label %513

513:                                              ; preds = %506, %501
  %514 = phi i64* [ %512, %506 ], [ null, %501 ]
  store i64 %428, i64* %514, align 8
  %515 = load i64, i64* %114, align 8
  %516 = add i64 %515, 1
  store i64 %516, i64* %114, align 8
  br label %517

517:                                              ; preds = %470, %474, %513
  %518 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %390, i64 0, i32 3
  %519 = load i32, i32* %518, align 4
  %520 = and i32 %519, 251658240
  %521 = icmp eq i32 %520, 251658240
  %522 = ptrtoint %"class.v8::internal::compiler::Node"* %390 to i64
  %523 = add i64 %522, 32
  br i1 %521, label %524, label %528

524:                                              ; preds = %517
  %525 = inttoptr i64 %523 to i64*
  %526 = load i64, i64* %525, align 8
  %527 = add i64 %526, 16
  br label %528

528:                                              ; preds = %517, %524
  %529 = phi i64 [ %527, %524 ], [ %523, %517 ]
  %530 = inttoptr i64 %529 to %"class.v8::internal::compiler::Node"**
  %531 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %530, align 8
  %532 = icmp eq %"class.v8::internal::compiler::Node"* %531, %1
  br i1 %532, label %546, label %533

533:                                              ; preds = %528
  br i1 %521, label %536, label %534

534:                                              ; preds = %533
  %535 = bitcast %"class.v8::internal::compiler::Node"* %390 to %"struct.v8::internal::compiler::Node::Use"*
  br label %539

536:                                              ; preds = %533
  %537 = inttoptr i64 %523 to %"struct.v8::internal::compiler::Node::Use"**
  %538 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %537, align 8
  br label %539

539:                                              ; preds = %536, %534
  %540 = phi %"struct.v8::internal::compiler::Node::Use"* [ %535, %534 ], [ %538, %536 ]
  %541 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %540, i64 -1
  %542 = icmp eq %"class.v8::internal::compiler::Node"* %531, null
  br i1 %542, label %544, label %543

543:                                              ; preds = %539
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %531, %"struct.v8::internal::compiler::Node::Use"* %541) #6
  br label %544

544:                                              ; preds = %543, %539
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %530, align 8
  br i1 %106, label %546, label %545

545:                                              ; preds = %544
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1, %"struct.v8::internal::compiler::Node::Use"* %541) #6
  br label %546

546:                                              ; preds = %528, %544, %545
  %547 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %107, align 8
  %548 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9IfDefaultENS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %547, i8 zeroext 0) #6
  call void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"* %390, %"class.v8::internal::compiler::Operator"* %548) #6
  %549 = load i32, i32* %518, align 4
  %550 = lshr i32 %549, 24
  %551 = and i32 %550, 15
  %552 = icmp eq i32 %551, 15
  br i1 %552, label %553, label %560

553:                                              ; preds = %546
  %554 = inttoptr i64 %523 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %555 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %554, align 8
  %556 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %555 to i64
  %557 = add i64 %556, 16
  %558 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %555, i64 0, i32 1
  %559 = load i32, i32* %558, align 8
  br label %560

560:                                              ; preds = %553, %546
  %561 = phi i32 [ %559, %553 ], [ %551, %546 ]
  %562 = phi i64 [ %557, %553 ], [ %523, %546 ]
  %563 = icmp sgt i32 %561, 0
  br i1 %563, label %564, label %568

564:                                              ; preds = %560
  %565 = inttoptr i64 %562 to %"class.v8::internal::compiler::Node"**
  %566 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %565, align 8
  %567 = icmp eq %"class.v8::internal::compiler::Node"* %566, null
  br i1 %567, label %611, label %568

568:                                              ; preds = %564, %560
  %569 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %390, i64 0, i32 2
  %570 = load i32, i32* %569, align 8
  %571 = load i32, i32* %108, align 4
  %572 = call i32 @llvm.usub.sat.i32(i32 %570, i32 %571) #6
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %574, label %611

574:                                              ; preds = %568
  %575 = add i32 %571, 1
  store i32 %575, i32* %569, align 8
  %576 = load i64, i64* %110, align 8
  %577 = load i64, i64* %112, align 8
  %578 = sub i64 %576, %577
  %579 = icmp eq i64 %578, 0
  %580 = shl i64 %578, 6
  %581 = add i64 %580, -1
  %582 = select i1 %579, i64 0, i64 %581
  %583 = load i64, i64* %113, align 8
  %584 = load i64, i64* %114, align 8
  %585 = add i64 %584, %583
  %586 = icmp eq i64 %582, %585
  %587 = inttoptr i64 %577 to %"class.v8::internal::compiler::Node"***
  %588 = inttoptr i64 %576 to %"class.v8::internal::compiler::Node"***
  br i1 %586, label %589, label %595

589:                                              ; preds = %574
  call void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %115) #6
  %590 = load i64, i64* %114, align 8
  %591 = load i64, i64* %113, align 8
  %592 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %111, align 8
  %593 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %109, align 8
  %594 = add i64 %591, %590
  br label %595

595:                                              ; preds = %589, %574
  %596 = phi i64 [ %594, %589 ], [ %585, %574 ]
  %597 = phi %"class.v8::internal::compiler::Node"*** [ %593, %589 ], [ %588, %574 ]
  %598 = phi %"class.v8::internal::compiler::Node"*** [ %592, %589 ], [ %587, %574 ]
  %599 = icmp eq %"class.v8::internal::compiler::Node"*** %597, %598
  br i1 %599, label %607, label %600

600:                                              ; preds = %595
  %601 = lshr i64 %596, 9
  %602 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %598, i64 %601
  %603 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %602, align 8
  %604 = and i64 %596, 511
  %605 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %603, i64 %604
  %606 = bitcast %"class.v8::internal::compiler::Node"** %605 to i64*
  br label %607

607:                                              ; preds = %600, %595
  %608 = phi i64* [ %606, %600 ], [ null, %595 ]
  store i64 %522, i64* %608, align 8
  %609 = load i64, i64* %114, align 8
  %610 = add i64 %609, 1
  store i64 %610, i64* %114, align 8
  br label %611

611:                                              ; preds = %564, %568, %607
  call void @_ZN2v88internal8compiler4Node13NullAllInputsEv(%"class.v8::internal::compiler::Node"* %388) #6
  br label %612

612:                                              ; preds = %385, %611
  %613 = phi i1 [ true, %611 ], [ false, %385 ]
  %614 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %60, align 8
  call void @_ZNSt3__16__treeIiNS_4lessIiEEN2v88internal13ZoneAllocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"* nonnull %59, %"class.std::__1::__tree_node"* %614) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #6
  br label %615

615:                                              ; preds = %38, %612
  %616 = phi i1 [ %613, %612 ], [ false, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %39) #6
  br label %617

617:                                              ; preds = %615, %29, %2
  %618 = phi i1 [ false, %2 ], [ %616, %615 ], [ false, %29 ]
  ret i1 %618
}

declare zeroext i8 @_ZN2v88internal8compiler12BranchHintOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler12BinopMatcherINS1_10IntMatcherIiLNS1_8IrOpcode5ValueE22EEES6_EC2EPNS1_4NodeE(%"struct.v8::internal::compiler::BinopMatcher"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = and i32 %5, 251658240
  %7 = icmp eq i32 %6, 251658240
  %8 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %9 = add i64 %8, 32
  br i1 %7, label %10, label %14

10:                                               ; preds = %2
  %11 = inttoptr i64 %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 16
  br label %14

14:                                               ; preds = %2, %10
  %15 = phi i64 [ %13, %10 ], [ %9, %2 ]
  %16 = inttoptr i64 %15 to %"class.v8::internal::compiler::Node"**
  %17 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %16, align 8
  %18 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %17, %"class.v8::internal::compiler::Node"** %18, align 8
  %19 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 1, i32 0, i32 1
  store i32 0, i32* %19, align 8
  %20 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 1, i32 0, i32 2
  store i8 0, i8* %20, align 4
  %21 = ptrtoint %"class.v8::internal::compiler::Node"* %17 to i64
  br label %22

22:                                               ; preds = %67, %14
  %23 = phi i64 [ %21, %14 ], [ %69, %67 ]
  %24 = inttoptr i64 %23 to %"class.v8::internal::compiler::Node"*
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %24, i64 0, i32 0
  %26 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %26, i64 0, i32 2
  %28 = load i16, i16* %27, align 8
  switch i16 %28, label %70 [
    i16 59, label %29
    i16 58, label %47
  ]

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %26, i64 0, i32 5
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, 0
  br i1 %32, label %34, label %33, !prof !2

33:                                               ; preds = %29
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %24, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 251658240
  %38 = icmp eq i32 %37, 251658240
  %39 = add i64 %23, 32
  br i1 %38, label %40, label %44

40:                                               ; preds = %34
  %41 = inttoptr i64 %39 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %42, 16
  br label %44

44:                                               ; preds = %40, %34
  %45 = phi i64 [ %43, %40 ], [ %39, %34 ]
  %46 = inttoptr i64 %45 to i64*
  br label %67

47:                                               ; preds = %22
  %48 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %26, i64 0, i32 5
  %49 = load i32, i32* %48, align 4
  %50 = icmp sgt i32 %49, 1
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %47
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %24, i64 0, i32 3
  %54 = load i32, i32* %53, align 4
  %55 = and i32 %54, 251658240
  %56 = icmp eq i32 %55, 251658240
  %57 = add i64 %23, 32
  br i1 %56, label %58, label %62

58:                                               ; preds = %52
  %59 = inttoptr i64 %57 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %60, 16
  br label %62

62:                                               ; preds = %58, %52
  %63 = phi i64 [ %61, %58 ], [ %57, %52 ]
  %64 = inttoptr i64 %63 to %"class.v8::internal::compiler::Node"**
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %64, i64 1
  %66 = bitcast %"class.v8::internal::compiler::Node"** %65 to i64*
  br label %67

67:                                               ; preds = %62, %44
  %68 = phi i64* [ %66, %62 ], [ %46, %44 ]
  %69 = load i64, i64* %68, align 8
  br label %22

70:                                               ; preds = %22
  %71 = icmp eq i16 %28, 22
  %72 = zext i1 %71 to i8
  store i8 %72, i8* %20, align 4
  br i1 %71, label %73, label %80

73:                                               ; preds = %70
  %74 = inttoptr i64 %23 to %"class.v8::internal::compiler::Node"*
  %75 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %74, i64 0, i32 0
  %76 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %76, i64 0, i32 12
  %78 = bitcast [4 x i8]* %77 to i32*
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %19, align 8
  br label %80

80:                                               ; preds = %70, %73
  %81 = load i32, i32* %4, align 4
  %82 = and i32 %81, 251658240
  %83 = icmp eq i32 %82, 251658240
  br i1 %83, label %84, label %88

84:                                               ; preds = %80
  %85 = inttoptr i64 %9 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 16
  br label %88

88:                                               ; preds = %80, %84
  %89 = phi i64 [ %87, %84 ], [ %9, %80 ]
  %90 = inttoptr i64 %89 to %"class.v8::internal::compiler::Node"**
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %90, i64 1
  %92 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %91, align 8
  %93 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %92, %"class.v8::internal::compiler::Node"** %93, align 8
  %94 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 2, i32 0, i32 1
  store i32 0, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 2, i32 0, i32 2
  store i8 0, i8* %95, align 4
  %96 = ptrtoint %"class.v8::internal::compiler::Node"* %92 to i64
  br label %97

97:                                               ; preds = %142, %88
  %98 = phi i64 [ %96, %88 ], [ %144, %142 ]
  %99 = inttoptr i64 %98 to %"class.v8::internal::compiler::Node"*
  %100 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %99, i64 0, i32 0
  %101 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %100, align 8
  %102 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %101, i64 0, i32 2
  %103 = load i16, i16* %102, align 8
  switch i16 %103, label %145 [
    i16 59, label %104
    i16 58, label %122
  ]

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %101, i64 0, i32 5
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %106, 0
  br i1 %107, label %109, label %108, !prof !2

108:                                              ; preds = %104
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %99, i64 0, i32 3
  %111 = load i32, i32* %110, align 4
  %112 = and i32 %111, 251658240
  %113 = icmp eq i32 %112, 251658240
  %114 = add i64 %98, 32
  br i1 %113, label %115, label %119

115:                                              ; preds = %109
  %116 = inttoptr i64 %114 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, 16
  br label %119

119:                                              ; preds = %115, %109
  %120 = phi i64 [ %118, %115 ], [ %114, %109 ]
  %121 = inttoptr i64 %120 to i64*
  br label %142

122:                                              ; preds = %97
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %101, i64 0, i32 5
  %124 = load i32, i32* %123, align 4
  %125 = icmp sgt i32 %124, 1
  br i1 %125, label %127, label %126, !prof !2

126:                                              ; preds = %122
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #7
  unreachable

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %99, i64 0, i32 3
  %129 = load i32, i32* %128, align 4
  %130 = and i32 %129, 251658240
  %131 = icmp eq i32 %130, 251658240
  %132 = add i64 %98, 32
  br i1 %131, label %133, label %137

133:                                              ; preds = %127
  %134 = inttoptr i64 %132 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %135, 16
  br label %137

137:                                              ; preds = %133, %127
  %138 = phi i64 [ %136, %133 ], [ %132, %127 ]
  %139 = inttoptr i64 %138 to %"class.v8::internal::compiler::Node"**
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %139, i64 1
  %141 = bitcast %"class.v8::internal::compiler::Node"** %140 to i64*
  br label %142

142:                                              ; preds = %137, %119
  %143 = phi i64* [ %141, %137 ], [ %121, %119 ]
  %144 = load i64, i64* %143, align 8
  br label %97

145:                                              ; preds = %97
  %146 = icmp eq i16 %103, 22
  %147 = zext i1 %146 to i8
  store i8 %147, i8* %95, align 4
  br i1 %146, label %148, label %155

148:                                              ; preds = %145
  %149 = inttoptr i64 %98 to %"class.v8::internal::compiler::Node"*
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %149, i64 0, i32 0
  %151 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %151, i64 0, i32 12
  %153 = bitcast [4 x i8]* %152 to i32*
  %154 = load i32, i32* %153, align 4
  store i32 %154, i32* %94, align 8
  br label %155

155:                                              ; preds = %145, %148
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %157 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %156, align 8
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %157, i64 0, i32 3, i32 0
  %159 = load i8, i8* %158, align 2
  %160 = and i8 %159, 1
  %161 = icmp eq i8 %160, 0
  %162 = xor i1 %71, true
  %163 = or i1 %161, %162
  %164 = or i1 %163, %146
  br i1 %164, label %166, label %165

165:                                              ; preds = %155
  tail call void @_ZN2v88internal8compiler12BinopMatcherINS1_10IntMatcherIiLNS1_8IrOpcode5ValueE22EEES6_E10SwapInputsEv(%"struct.v8::internal::compiler::BinopMatcher"* %0) #6
  br label %166

166:                                              ; preds = %155, %165
  ret void
}

declare void @_ZN2v88internal8compiler13BranchMatcherC1EPNS1_4NodeE(%"struct.v8::internal::compiler::BranchMatcher"*, %"class.v8::internal::compiler::Node"*) unnamed_addr #1

declare %"struct.v8::internal::compiler::Node::Use"* @_ZN2v88internal8compiler4Node4Uses14const_iteratorppEi(%"class.v8::internal::compiler::Node::Uses::const_iterator"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal8compiler4Node13NullAllInputsEv(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #1

declare void @_ZN2v88internal8compiler14NodeProperties8ChangeOpEPNS1_4NodeEPKNS1_8OperatorE(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Operator"*) local_unnamed_addr #1

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder7IfValueEiiNS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32, i32, i8 zeroext) local_unnamed_addr #1

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6SwitchEm(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i64) local_unnamed_addr #1

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9IfDefaultENS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #1

declare void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIiNS_4lessIiEEN2v88internal13ZoneAllocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2, %4
  %5 = phi %"class.std::__1::__tree_node"* [ %10, %4 ], [ %1, %2 ]
  %6 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeIiNS_4lessIiEEN2v88internal13ZoneAllocatorIiEEE7destroyEPNS_11__tree_nodeIiPvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %7) #6
  %8 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %5, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::__tree_node_base"** %8 to %"class.std::__1::__tree_node"**
  %10 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %11 = icmp eq %"class.std::__1::__tree_node"* %10, null
  br i1 %11, label %12, label %4

12:                                               ; preds = %4, %2
  ret void
}

declare void @_ZN2v88internal8compiler14NodeMarkerBaseC2EPNS1_5GraphEj(%"class.v8::internal::compiler::NodeMarkerBase"*, %"class.v8::internal::compiler::Graph"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %3 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %4 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %5 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %6 = alloca %"struct.std::__1::__split_buffer.28", align 16
  %7 = alloca %"class.v8::internal::compiler::Node"**, align 8
  %8 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, 511
  br i1 %11, label %12, label %22

12:                                               ; preds = %1
  %13 = add i64 %10, -512
  store i64 %13, i64* %9, align 8
  %14 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %17 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %16, align 8
  %18 = bitcast %"class.v8::internal::compiler::Node"*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::compiler::Node"*** %2 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %17, i64 1
  store %"class.v8::internal::compiler::Node"*** %21, %"class.v8::internal::compiler::Node"**** %16, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %15, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  br label %247

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.v8::internal::compiler::Node"**** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::compiler::Node"**** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 3
  %32 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = bitcast %"class.v8::internal::compiler::Node"**** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.std::__1::deque"* %0 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = sub i64 %34, %36
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %31, %38
  br i1 %39, label %40, label %112

40:                                               ; preds = %22
  %41 = icmp eq i64 %34, %26
  br i1 %41, label %74, label %42

42:                                               ; preds = %40
  %43 = bitcast %"class.v8::internal::compiler::Node"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #6
  %44 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %45 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44, align 8
  %46 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to %"class.v8::internal::compiler::Node"**
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %45 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %44 to i64*
  store i64 %54, i64* %55, align 8
  br label %72

56:                                               ; preds = %47, %42
  %57 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.19", %"class.v8::internal::RecyclingZoneAllocator.19"* %8, i64 0, i32 0, i32 0
  %58 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %57, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %58, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, %60
  %64 = icmp ult i64 %63, 4096
  br i1 %64, label %65, label %67, !prof !7

65:                                               ; preds = %56
  %66 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %58, i64 4096) #6
  br label %69

67:                                               ; preds = %56
  %68 = add i64 %60, 4096
  store i64 %68, i64* %59, align 8
  br label %69

69:                                               ; preds = %67, %65
  %70 = phi i64 [ %66, %65 ], [ %60, %67 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::Node"**
  br label %72

72:                                               ; preds = %51, %69
  %73 = phi %"class.v8::internal::compiler::Node"** [ %52, %51 ], [ %71, %69 ]
  store %"class.v8::internal::compiler::Node"** %73, %"class.v8::internal::compiler::Node"*** %3, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #6
  br label %247

74:                                               ; preds = %40
  %75 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #6
  %76 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %77 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76, align 8
  %78 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77, i64 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp ult i64 %81, 512
  br i1 %82, label %88, label %83

83:                                               ; preds = %79
  %84 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to %"class.v8::internal::compiler::Node"**
  %85 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %77 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %76 to i64*
  store i64 %86, i64* %87, align 8
  br label %104

88:                                               ; preds = %79, %74
  %89 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.19", %"class.v8::internal::RecyclingZoneAllocator.19"* %8, i64 0, i32 0, i32 0
  %90 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 2
  %92 = load i64, i64* %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %90, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %94, %92
  %96 = icmp ult i64 %95, 4096
  br i1 %96, label %97, label %99, !prof !7

97:                                               ; preds = %88
  %98 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %90, i64 4096) #6
  br label %101

99:                                               ; preds = %88
  %100 = add i64 %92, 4096
  store i64 %100, i64* %91, align 8
  br label %101

101:                                              ; preds = %99, %97
  %102 = phi i64 [ %98, %97 ], [ %92, %99 ]
  %103 = inttoptr i64 %102 to %"class.v8::internal::compiler::Node"**
  br label %104

104:                                              ; preds = %83, %101
  %105 = phi %"class.v8::internal::compiler::Node"** [ %84, %83 ], [ %103, %101 ]
  store %"class.v8::internal::compiler::Node"** %105, %"class.v8::internal::compiler::Node"*** %4, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #6
  %106 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #6
  %107 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %108 = bitcast %"class.v8::internal::compiler::Node"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::compiler::Node"*** %5 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %107, i64 1
  store %"class.v8::internal::compiler::Node"*** %111, %"class.v8::internal::compiler::Node"**** %27, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"* %23, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %5)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #6
  br label %247

112:                                              ; preds = %22
  %113 = bitcast %"struct.std::__1::__split_buffer.28"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #6
  %114 = ashr exact i64 %37, 2
  %115 = icmp eq i64 %37, 0
  %116 = select i1 %115, i64 1, i64 %114
  %117 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %118 = getelementptr inbounds %"struct.std::__1::__split_buffer.28", %"struct.std::__1::__split_buffer.28"* %6, i64 0, i32 3, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"*** null, %"class.v8::internal::compiler::Node"**** %118, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__split_buffer.28", %"struct.std::__1::__split_buffer.28"* %6, i64 0, i32 3, i32 1, i32 0
  store %"class.v8::internal::RecyclingZoneAllocator"* %117, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0, i32 1
  %121 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120, align 8
  %122 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, null
  br i1 %122, label %132, label %123

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = icmp ult i64 %125, %116
  br i1 %126, label %132, label %127

127:                                              ; preds = %123
  %128 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to %"class.v8::internal::compiler::Node"***
  %129 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %121 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %120 to i64*
  store i64 %130, i64* %131, align 8
  br label %149

132:                                              ; preds = %123, %112
  %133 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %117, i64 0, i32 0, i32 0
  %134 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %133, align 8
  %135 = shl i64 %116, 3
  %136 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %134, i64 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 %139, %137
  %141 = icmp ugt i64 %135, %140
  br i1 %141, label %142, label %144, !prof !7

142:                                              ; preds = %132
  %143 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %134, i64 %135) #6
  br label %146

144:                                              ; preds = %132
  %145 = add i64 %137, %135
  store i64 %145, i64* %136, align 8
  br label %146

146:                                              ; preds = %144, %142
  %147 = phi i64 [ %143, %142 ], [ %137, %144 ]
  %148 = inttoptr i64 %147 to %"class.v8::internal::compiler::Node"***
  br label %149

149:                                              ; preds = %127, %146
  %150 = phi %"class.v8::internal::compiler::Node"*** [ %128, %127 ], [ %148, %146 ]
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.28", %"struct.std::__1::__split_buffer.28"* %6, i64 0, i32 0
  store %"class.v8::internal::compiler::Node"*** %150, %"class.v8::internal::compiler::Node"**** %151, align 16
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %31
  %153 = getelementptr inbounds %"struct.std::__1::__split_buffer.28", %"struct.std::__1::__split_buffer.28"* %6, i64 0, i32 2
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %153, align 16
  %154 = getelementptr inbounds %"struct.std::__1::__split_buffer.28", %"struct.std::__1::__split_buffer.28"* %6, i64 0, i32 1
  store %"class.v8::internal::compiler::Node"*** %152, %"class.v8::internal::compiler::Node"**** %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %150, i64 %116
  store %"class.v8::internal::compiler::Node"*** %155, %"class.v8::internal::compiler::Node"**** %118, align 8
  %156 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 1
  %157 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156, align 8
  %158 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, null
  br i1 %158, label %168, label %159

159:                                              ; preds = %149
  %160 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157, i64 0, i32 1
  %161 = load i64, i64* %160, align 8
  %162 = icmp ult i64 %161, 512
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to %"class.v8::internal::compiler::Node"**
  %165 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"* %157 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node *>::FreeBlock"** %156 to i64*
  store i64 %166, i64* %167, align 8
  br label %184

168:                                              ; preds = %159, %149
  %169 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator.19", %"class.v8::internal::RecyclingZoneAllocator.19"* %8, i64 0, i32 0, i32 0
  %170 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %170, i64 0, i32 3
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %174, %172
  %176 = icmp ult i64 %175, 4096
  br i1 %176, label %177, label %179, !prof !7

177:                                              ; preds = %168
  %178 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %170, i64 4096) #6
  br label %181

179:                                              ; preds = %168
  %180 = add i64 %172, 4096
  store i64 %180, i64* %171, align 8
  br label %181

181:                                              ; preds = %179, %177
  %182 = phi i64 [ %178, %177 ], [ %172, %179 ]
  %183 = inttoptr i64 %182 to %"class.v8::internal::compiler::Node"**
  br label %184

184:                                              ; preds = %163, %181
  %185 = phi %"class.v8::internal::compiler::Node"** [ %164, %163 ], [ %183, %181 ]
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186) #6
  store %"class.v8::internal::compiler::Node"** %185, %"class.v8::internal::compiler::Node"*** %7, align 8
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.28"* nonnull %6, %"class.v8::internal::compiler::Node"*** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186) #6
  %187 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %24, align 8
  %188 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %189 = icmp eq %"class.v8::internal::compiler::Node"*** %187, %188
  %190 = ptrtoint %"class.v8::internal::compiler::Node"*** %187 to i64
  br i1 %189, label %193, label %242

191:                                              ; preds = %242
  %192 = load i64, i64* %25, align 8
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i64 [ %192, %191 ], [ %190, %184 ]
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %245, %191 ], [ %188, %184 ]
  %196 = ptrtoint %"class.v8::internal::compiler::Node"*** %195 to i64
  %197 = load i64, i64* %35, align 8
  %198 = bitcast %"struct.std::__1::__split_buffer.28"* %6 to i64*
  %199 = bitcast %"class.v8::internal::compiler::Node"**** %154 to i64*
  %200 = bitcast %"struct.std::__1::__split_buffer.28"* %6 to <2 x i64>*
  %201 = load <2 x i64>, <2 x i64>* %200, align 16
  store i64 %197, i64* %198, align 16
  %202 = bitcast %"class.std::__1::deque"* %0 to <2 x i64>*
  store <2 x i64> %201, <2 x i64>* %202, align 8
  store i64 %196, i64* %199, align 8
  %203 = bitcast %"class.v8::internal::compiler::Node"**** %153 to i64*
  %204 = bitcast %"class.v8::internal::compiler::Node"**** %118 to i64*
  %205 = bitcast %"class.v8::internal::compiler::Node"**** %153 to <2 x i64>*
  %206 = load <2 x i64>, <2 x i64>* %205, align 16
  store i64 %194, i64* %203, align 16
  %207 = load i64, i64* %33, align 8
  %208 = bitcast %"class.v8::internal::compiler::Node"**** %24 to <2 x i64>*
  store <2 x i64> %206, <2 x i64>* %208, align 8
  store i64 %207, i64* %204, align 8
  %209 = inttoptr i64 %194 to %"class.v8::internal::compiler::Node"***
  %210 = icmp eq %"class.v8::internal::compiler::Node"*** %195, %209
  %211 = inttoptr i64 %197 to %"class.v8::internal::compiler::Node"***
  br i1 %210, label %219, label %212

212:                                              ; preds = %193
  %213 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 -1
  %214 = ptrtoint %"class.v8::internal::compiler::Node"*** %213 to i64
  %215 = sub i64 %214, %196
  %216 = lshr i64 %215, 3
  %217 = xor i64 %216, -1
  %218 = getelementptr %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %209, i64 %217
  store %"class.v8::internal::compiler::Node"*** %218, %"class.v8::internal::compiler::Node"**** %153, align 16
  br label %219

219:                                              ; preds = %212, %193
  %220 = icmp eq i64 %197, 0
  br i1 %220, label %241, label %221

221:                                              ; preds = %219
  %222 = sub i64 %207, %197
  %223 = ashr exact i64 %222, 3
  %224 = icmp ult i64 %222, 16
  br i1 %224, label %241, label %225

225:                                              ; preds = %221
  %226 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %119, align 8
  %227 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %226, i64 0, i32 1
  %228 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227, align 8
  %229 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %228, i64 0, i32 1
  %232 = load i64, i64* %231, align 8
  %233 = icmp ugt i64 %232, %223
  br i1 %233, label %241, label %234

234:                                              ; preds = %230, %225
  %235 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %211, i64 1
  %236 = bitcast %"class.v8::internal::compiler::Node"*** %235 to i64*
  store i64 %223, i64* %236, align 8
  %237 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %197 to i64*
  store i64 %238, i64* %239, align 8
  %240 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %227 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %211, %"class.v8::internal::compiler::Node"**** %240, align 8
  br label %241

241:                                              ; preds = %219, %221, %230, %234
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #6
  br label %247

242:                                              ; preds = %184, %242
  %243 = phi %"class.v8::internal::compiler::Node"*** [ %244, %242 ], [ %187, %184 ]
  %244 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %243, i64 -1
  call void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.28"* nonnull %6, %"class.v8::internal::compiler::Node"*** dereferenceable(8) %244)
  %245 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %27, align 8
  %246 = icmp eq %"class.v8::internal::compiler::Node"*** %244, %245
  br i1 %246, label %191, label %242

247:                                              ; preds = %241, %104, %72, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backERKS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #6
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !7

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #6
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !11

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %10 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %11, label %195

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %15 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %14, align 8
  %16 = icmp ugt %"class.v8::internal::compiler::Node"*** %13, %15
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %15 to i64
  br i1 %16, label %18, label %37

18:                                               ; preds = %11
  %19 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %20 = sub i64 %19, %17
  %21 = ashr exact i64 %20, 3
  %22 = add nsw i64 %21, 1
  %23 = sdiv i64 %22, -2
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %13, i64 %23
  %25 = sub i64 %9, %19
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %24 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #6
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  br label %32

32:                                               ; preds = %18, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %13, %18 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %24, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %23
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %12, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %195

37:                                               ; preds = %11
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %17
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %46 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp ult i64 %50, %43
  br i1 %51, label %58, label %52

52:                                               ; preds = %48
  %53 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to %"class.v8::internal::compiler::Node"***
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %46 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  store i64 %55, i64* %56, align 8
  %57 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  br label %78

58:                                               ; preds = %48, %37
  %59 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %59, align 8
  %61 = shl i64 %43, 3
  %62 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %60, i64 0, i32 3
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %65, %63
  %67 = icmp ugt i64 %61, %66
  br i1 %67, label %68, label %70, !prof !7

68:                                               ; preds = %58
  %69 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %60, i64 %61) #6
  br label %72

70:                                               ; preds = %58
  %71 = add i64 %63, %61
  store i64 %71, i64* %62, align 8
  br label %72

72:                                               ; preds = %70, %68
  %73 = phi i64 [ %69, %68 ], [ %63, %70 ]
  %74 = inttoptr i64 %73 to %"class.v8::internal::compiler::Node"***
  %75 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %76 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %77 = load i64, i64* %76, align 8
  br label %78

78:                                               ; preds = %52, %72
  %79 = phi i64* [ %57, %52 ], [ %76, %72 ]
  %80 = phi i64 [ %9, %52 ], [ %77, %72 ]
  %81 = phi %"class.v8::internal::compiler::Node"*** [ %13, %52 ], [ %75, %72 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %53, %52 ], [ %74, %72 ]
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %44
  %85 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %86 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %82, i64 %43
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %86 to i64
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %89 = sub i64 %80, %88
  %90 = ashr exact i64 %89, 3
  %91 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %84, i64 %90
  %92 = icmp eq i64 %89, 0
  br i1 %92, label %167, label %93

93:                                               ; preds = %78
  %94 = add i64 %89, -8
  %95 = lshr i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 7
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %114, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %99 ], [ %84, %93 ]
  %101 = phi i64 [ %108, %99 ], [ %85, %93 ]
  %102 = phi %"class.v8::internal::compiler::Node"*** [ %109, %99 ], [ %81, %93 ]
  %103 = phi i64 [ %110, %99 ], [ %97, %93 ]
  %104 = bitcast %"class.v8::internal::compiler::Node"*** %102 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = inttoptr i64 %101 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %102, i64 1
  %110 = add i64 %103, -1
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %99, !llvm.loop !13

112:                                              ; preds = %99
  %113 = ptrtoint %"class.v8::internal::compiler::Node"*** %107 to i64
  br label %114

114:                                              ; preds = %93, %112
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %84, %93 ], [ %107, %112 ]
  %116 = phi i64 [ %85, %93 ], [ %113, %112 ]
  %117 = phi %"class.v8::internal::compiler::Node"*** [ %81, %93 ], [ %109, %112 ]
  %118 = icmp ult i64 %94, 56
  br i1 %118, label %165, label %119

119:                                              ; preds = %114, %119
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %119 ], [ %115, %114 ]
  %121 = phi i64 [ %162, %119 ], [ %116, %114 ]
  %122 = phi %"class.v8::internal::compiler::Node"*** [ %163, %119 ], [ %117, %114 ]
  %123 = bitcast %"class.v8::internal::compiler::Node"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = inttoptr i64 %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 1
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 2
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 3
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 4
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 5
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 6
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  store i64 %154, i64* %155, align 8
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 7
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = ptrtoint %"class.v8::internal::compiler::Node"*** %161 to i64
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %122, i64 8
  %164 = icmp eq %"class.v8::internal::compiler::Node"*** %91, %161
  br i1 %164, label %165, label %119

165:                                              ; preds = %119, %114
  %166 = ptrtoint %"class.v8::internal::compiler::Node"*** %91 to i64
  br label %167

167:                                              ; preds = %78, %165
  %168 = phi i64 [ %166, %165 ], [ %85, %78 ]
  %169 = load i64, i64* %39, align 8
  store i64 %83, i64* %39, align 8
  %170 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  store i64 %85, i64* %170, align 8
  store i64 %168, i64* %79, align 8
  %171 = load i64, i64* %38, align 8
  store i64 %87, i64* %38, align 8
  %172 = inttoptr i64 %169 to %"class.v8::internal::compiler::Node"***
  %173 = icmp eq i64 %169, 0
  %174 = inttoptr i64 %168 to i64*
  br i1 %173, label %195, label %175

175:                                              ; preds = %167
  %176 = sub i64 %171, %169
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %195, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %195, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %172, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %169 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %45 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %172, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %194 = load i64*, i64** %193, align 8
  br label %195

195:                                              ; preds = %186, %182, %175, %167, %32, %2
  %196 = phi i64* [ %194, %186 ], [ %174, %182 ], [ %174, %175 ], [ %174, %167 ], [ %36, %32 ], [ %10, %2 ]
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %196, align 8
  %199 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %200 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %199, i64 1
  store %"class.v8::internal::compiler::Node"*** %200, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeENS2_22RecyclingZoneAllocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %194

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  %17 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  br i1 %14, label %18, label %38

18:                                               ; preds = %9
  %19 = sub i64 %16, %17
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %17, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %18
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #6
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %18, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %18 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %18 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %194

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 1
  %47 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %48 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, null
  br i1 %48, label %59, label %49

49:                                               ; preds = %38
  %50 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp ult i64 %51, %43
  br i1 %52, label %59, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to %"class.v8::internal::compiler::Node"***
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %47 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  store i64 %56, i64* %57, align 8
  %58 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  br label %79

59:                                               ; preds = %49, %38
  %60 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !7

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #6
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  %76 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %77 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %78 = load i64, i64* %77, align 8
  br label %79

79:                                               ; preds = %53, %73
  %80 = phi i64* [ %58, %53 ], [ %77, %73 ]
  %81 = phi i64 [ %17, %53 ], [ %78, %73 ]
  %82 = phi %"class.v8::internal::compiler::Node"*** [ %4, %53 ], [ %76, %73 ]
  %83 = phi %"class.v8::internal::compiler::Node"*** [ %54, %53 ], [ %75, %73 ]
  %84 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %85 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %45
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %83, i64 %43
  %88 = ptrtoint %"class.v8::internal::compiler::Node"*** %87 to i64
  %89 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %90 = sub i64 %81, %89
  %91 = ashr exact i64 %90, 3
  %92 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %85, i64 %91
  %93 = icmp eq i64 %90, 0
  br i1 %93, label %168, label %94

94:                                               ; preds = %79
  %95 = add i64 %90, -8
  %96 = lshr i64 %95, 3
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 7
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %94, %100
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %100 ], [ %85, %94 ]
  %102 = phi i64 [ %109, %100 ], [ %86, %94 ]
  %103 = phi %"class.v8::internal::compiler::Node"*** [ %110, %100 ], [ %82, %94 ]
  %104 = phi i64 [ %111, %100 ], [ %98, %94 ]
  %105 = bitcast %"class.v8::internal::compiler::Node"*** %103 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = inttoptr i64 %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  %110 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %103, i64 1
  %111 = add i64 %104, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %100, !llvm.loop !14

113:                                              ; preds = %100
  %114 = ptrtoint %"class.v8::internal::compiler::Node"*** %108 to i64
  br label %115

115:                                              ; preds = %94, %113
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %85, %94 ], [ %108, %113 ]
  %117 = phi i64 [ %86, %94 ], [ %114, %113 ]
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %82, %94 ], [ %110, %113 ]
  %119 = icmp ult i64 %95, 56
  br i1 %119, label %166, label %120

120:                                              ; preds = %115, %120
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %120 ], [ %116, %115 ]
  %122 = phi i64 [ %163, %120 ], [ %117, %115 ]
  %123 = phi %"class.v8::internal::compiler::Node"*** [ %164, %120 ], [ %118, %115 ]
  %124 = bitcast %"class.v8::internal::compiler::Node"*** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = inttoptr i64 %122 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %128 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 1
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %127 to i64*
  store i64 %130, i64* %131, align 8
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 2
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 3
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %137 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 4
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %143 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %142 to i64*
  store i64 %145, i64* %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 5
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %148 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %153 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 6
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %158 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 7
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.v8::internal::compiler::Node"*** %157 to i64*
  store i64 %160, i64* %161, align 8
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = ptrtoint %"class.v8::internal::compiler::Node"*** %162 to i64
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %123, i64 8
  %165 = icmp eq %"class.v8::internal::compiler::Node"*** %92, %162
  br i1 %165, label %166, label %120

166:                                              ; preds = %120, %115
  %167 = ptrtoint %"class.v8::internal::compiler::Node"*** %92 to i64
  br label %168

168:                                              ; preds = %79, %166
  %169 = phi i64 [ %167, %166 ], [ %86, %79 ]
  %170 = load i64, i64* %39, align 8
  store i64 %84, i64* %39, align 8
  %171 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %86, i64* %171, align 8
  store i64 %169, i64* %80, align 8
  %172 = load i64, i64* %15, align 8
  store i64 %88, i64* %15, align 8
  %173 = inttoptr i64 %170 to %"class.v8::internal::compiler::Node"***
  %174 = icmp eq i64 %170, 0
  br i1 %174, label %194, label %175

175:                                              ; preds = %168
  %176 = sub i64 %172, %170
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %176, 16
  br i1 %178, label %194, label %179

179:                                              ; preds = %175
  %180 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46, align 8
  %181 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, null
  br i1 %181, label %186, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %180, i64 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = icmp ugt i64 %184, %177
  br i1 %185, label %194, label %186

186:                                              ; preds = %182, %179
  %187 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %173, i64 1
  %188 = bitcast %"class.v8::internal::compiler::Node"*** %187 to i64*
  store i64 %177, i64* %188, align 8
  %189 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = inttoptr i64 %170 to i64*
  store i64 %190, i64* %191, align 8
  %192 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %46 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %173, %"class.v8::internal::compiler::Node"**** %192, align 8
  %193 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %194

194:                                              ; preds = %186, %182, %175, %168, %34, %2
  %195 = phi %"class.v8::internal::compiler::Node"*** [ %193, %186 ], [ %85, %182 ], [ %85, %175 ], [ %85, %168 ], [ %36, %34 ], [ %4, %2 ]
  %196 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %195, i64 -1
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.v8::internal::compiler::Node"*** %196 to i64*
  store i64 %198, i64* %199, align 8
  %200 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %200, i64 -1
  store %"class.v8::internal::compiler::Node"*** %201, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer.28"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.28", %"struct.std::__1::__split_buffer.28"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.28", %"struct.std::__1::__split_buffer.28"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  %9 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i64*
  br i1 %7, label %10, label %193

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.28", %"struct.std::__1::__split_buffer.28"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.28", %"struct.std::__1::__split_buffer.28"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %13, align 8
  %15 = icmp ugt %"class.v8::internal::compiler::Node"*** %12, %14
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::compiler::Node"*** %23 to i8*
  %30 = bitcast %"class.v8::internal::compiler::Node"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #6
  %31 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::compiler::Node"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %26
  store %"class.v8::internal::compiler::Node"*** %34, %"class.v8::internal::compiler::Node"**** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %33, i64 %22
  store %"class.v8::internal::compiler::Node"*** %35, %"class.v8::internal::compiler::Node"**** %11, align 8
  %36 = bitcast %"class.v8::internal::compiler::Node"*** %34 to i64*
  br label %193

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::compiler::Node"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.28"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = lshr i64 %43, 2
  %45 = getelementptr inbounds %"struct.std::__1::__split_buffer.28", %"struct.std::__1::__split_buffer.28"* %0, i64 0, i32 3, i32 1, i32 0
  %46 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 1
  %48 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %49 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %37
  %51 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %43
  br i1 %53, label %59, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to %"class.v8::internal::compiler::Node"***
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %48 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  store i64 %57, i64* %58, align 8
  br label %76

59:                                               ; preds = %50, %37
  %60 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %46, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %60, align 8
  %62 = shl i64 %43, 3
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 2
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %61, i64 0, i32 3
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %66, %64
  %68 = icmp ugt i64 %62, %67
  br i1 %68, label %69, label %71, !prof !7

69:                                               ; preds = %59
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %61, i64 %62) #6
  br label %73

71:                                               ; preds = %59
  %72 = add i64 %64, %62
  store i64 %72, i64* %63, align 8
  br label %73

73:                                               ; preds = %71, %69
  %74 = phi i64 [ %70, %69 ], [ %64, %71 ]
  %75 = inttoptr i64 %74 to %"class.v8::internal::compiler::Node"***
  br label %76

76:                                               ; preds = %54, %73
  %77 = phi %"class.v8::internal::compiler::Node"*** [ %55, %54 ], [ %75, %73 ]
  %78 = ptrtoint %"class.v8::internal::compiler::Node"*** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %44
  %80 = ptrtoint %"class.v8::internal::compiler::Node"*** %79 to i64
  %81 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %77, i64 %43
  %82 = ptrtoint %"class.v8::internal::compiler::Node"*** %81 to i64
  %83 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %11, align 8
  %84 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = ptrtoint %"class.v8::internal::compiler::Node"*** %83 to i64
  %87 = sub i64 %85, %86
  %88 = ashr exact i64 %87, 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %79, i64 %88
  %90 = icmp eq i64 %87, 0
  br i1 %90, label %165, label %91

91:                                               ; preds = %76
  %92 = add i64 %87, -8
  %93 = lshr i64 %92, 3
  %94 = add nuw nsw i64 %93, 1
  %95 = and i64 %94, 7
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %91, %97
  %98 = phi %"class.v8::internal::compiler::Node"*** [ %105, %97 ], [ %79, %91 ]
  %99 = phi i64 [ %106, %97 ], [ %80, %91 ]
  %100 = phi %"class.v8::internal::compiler::Node"*** [ %107, %97 ], [ %83, %91 ]
  %101 = phi i64 [ %108, %97 ], [ %95, %91 ]
  %102 = bitcast %"class.v8::internal::compiler::Node"*** %100 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %99 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %98, i64 1
  %106 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  %107 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %100, i64 1
  %108 = add i64 %101, -1
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %110, label %97, !llvm.loop !15

110:                                              ; preds = %97
  %111 = ptrtoint %"class.v8::internal::compiler::Node"*** %105 to i64
  br label %112

112:                                              ; preds = %91, %110
  %113 = phi %"class.v8::internal::compiler::Node"*** [ %79, %91 ], [ %105, %110 ]
  %114 = phi i64 [ %80, %91 ], [ %111, %110 ]
  %115 = phi %"class.v8::internal::compiler::Node"*** [ %83, %91 ], [ %107, %110 ]
  %116 = icmp ult i64 %92, 56
  br i1 %116, label %163, label %117

117:                                              ; preds = %112, %117
  %118 = phi %"class.v8::internal::compiler::Node"*** [ %159, %117 ], [ %113, %112 ]
  %119 = phi i64 [ %160, %117 ], [ %114, %112 ]
  %120 = phi %"class.v8::internal::compiler::Node"*** [ %161, %117 ], [ %115, %112 ]
  %121 = bitcast %"class.v8::internal::compiler::Node"*** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 1
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 1
  %126 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::compiler::Node"*** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 2
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 2
  %131 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::compiler::Node"*** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 3
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 3
  %136 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::compiler::Node"*** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 4
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 4
  %141 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::compiler::Node"*** %139 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 5
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 5
  %146 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = bitcast %"class.v8::internal::compiler::Node"*** %144 to i64*
  store i64 %147, i64* %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 6
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 6
  %151 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast %"class.v8::internal::compiler::Node"*** %149 to i64*
  store i64 %152, i64* %153, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 7
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 7
  %156 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.v8::internal::compiler::Node"*** %154 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %118, i64 8
  %160 = ptrtoint %"class.v8::internal::compiler::Node"*** %159 to i64
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, i64 8
  %162 = icmp eq %"class.v8::internal::compiler::Node"*** %89, %159
  br i1 %162, label %163, label %117

163:                                              ; preds = %117, %112
  %164 = ptrtoint %"class.v8::internal::compiler::Node"*** %89 to i64
  br label %165

165:                                              ; preds = %76, %163
  %166 = phi i64 [ %164, %163 ], [ %80, %76 ]
  %167 = load i64, i64* %39, align 8
  store i64 %78, i64* %39, align 8
  %168 = bitcast %"class.v8::internal::compiler::Node"**** %11 to i64*
  store i64 %80, i64* %168, align 8
  store i64 %166, i64* %84, align 8
  %169 = load i64, i64* %38, align 8
  store i64 %82, i64* %38, align 8
  %170 = inttoptr i64 %167 to %"class.v8::internal::compiler::Node"***
  %171 = icmp eq i64 %167, 0
  %172 = inttoptr i64 %166 to i64*
  br i1 %171, label %193, label %173

173:                                              ; preds = %165
  %174 = sub i64 %169, %167
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %193, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %193, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %170, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %167 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %47 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %170, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64**
  %192 = load i64*, i64** %191, align 8
  br label %193

193:                                              ; preds = %184, %180, %173, %165, %32, %2
  %194 = phi i64* [ %192, %184 ], [ %172, %180 ], [ %172, %173 ], [ %172, %165 ], [ %36, %32 ], [ %9, %2 ]
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  store i64 %196, i64* %194, align 8
  %197 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %197, i64 1
  store %"class.v8::internal::compiler::Node"*** %198, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPN2v88internal8compiler4NodeERNS2_22RecyclingZoneAllocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.28"*, %"class.v8::internal::compiler::Node"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.28", %"struct.std::__1::__split_buffer.28"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.28", %"struct.std::__1::__split_buffer.28"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %5, align 8
  %7 = icmp eq %"class.v8::internal::compiler::Node"*** %4, %6
  %8 = ptrtoint %"class.v8::internal::compiler::Node"*** %6 to i64
  br i1 %7, label %9, label %192

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.28", %"struct.std::__1::__split_buffer.28"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.28", %"struct.std::__1::__split_buffer.28"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %12, align 8
  %14 = icmp ult %"class.v8::internal::compiler::Node"*** %11, %13
  %15 = bitcast %"class.v8::internal::compiler::Node"**** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::compiler::Node"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::compiler::Node"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::compiler::Node"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %23, i64 %29
  %31 = bitcast %"class.v8::internal::compiler::Node"*** %30 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #6
  %33 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::compiler::Node"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::compiler::Node"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::compiler::Node"*** %36, %"class.v8::internal::compiler::Node"**** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %35, i64 %22
  store %"class.v8::internal::compiler::Node"*** %37, %"class.v8::internal::compiler::Node"**** %10, align 8
  br label %192

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.28"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = add nsw i64 %43, 3
  %45 = lshr i64 %44, 2
  %46 = getelementptr inbounds %"struct.std::__1::__split_buffer.28", %"struct.std::__1::__split_buffer.28"* %0, i64 0, i32 3, i32 1, i32 0
  %47 = load %"class.v8::internal::RecyclingZoneAllocator"*, %"class.v8::internal::RecyclingZoneAllocator"** %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 1
  %49 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %50 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, null
  br i1 %50, label %60, label %51

51:                                               ; preds = %38
  %52 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49, i64 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %53, %43
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to %"class.v8::internal::compiler::Node"***
  %57 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %49 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  store i64 %58, i64* %59, align 8
  br label %77

60:                                               ; preds = %51, %38
  %61 = getelementptr inbounds %"class.v8::internal::RecyclingZoneAllocator", %"class.v8::internal::RecyclingZoneAllocator"* %47, i64 0, i32 0, i32 0
  %62 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %61, align 8
  %63 = shl i64 %43, 3
  %64 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %67, %65
  %69 = icmp ugt i64 %63, %68
  br i1 %69, label %70, label %72, !prof !7

70:                                               ; preds = %60
  %71 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %62, i64 %63) #6
  br label %74

72:                                               ; preds = %60
  %73 = add i64 %65, %63
  store i64 %73, i64* %64, align 8
  br label %74

74:                                               ; preds = %72, %70
  %75 = phi i64 [ %71, %70 ], [ %65, %72 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::Node"***
  br label %77

77:                                               ; preds = %55, %74
  %78 = phi %"class.v8::internal::compiler::Node"*** [ %56, %55 ], [ %76, %74 ]
  %79 = ptrtoint %"class.v8::internal::compiler::Node"*** %78 to i64
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %45
  %81 = ptrtoint %"class.v8::internal::compiler::Node"*** %80 to i64
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %78, i64 %43
  %83 = ptrtoint %"class.v8::internal::compiler::Node"*** %82 to i64
  %84 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %85 = bitcast %"class.v8::internal::compiler::Node"**** %10 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = ptrtoint %"class.v8::internal::compiler::Node"*** %84 to i64
  %88 = sub i64 %86, %87
  %89 = ashr exact i64 %88, 3
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %80, i64 %89
  %91 = icmp eq i64 %88, 0
  br i1 %91, label %166, label %92

92:                                               ; preds = %77
  %93 = add i64 %88, -8
  %94 = lshr i64 %93, 3
  %95 = add nuw nsw i64 %94, 1
  %96 = and i64 %95, 7
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %113, label %98

98:                                               ; preds = %92, %98
  %99 = phi %"class.v8::internal::compiler::Node"*** [ %106, %98 ], [ %80, %92 ]
  %100 = phi i64 [ %107, %98 ], [ %81, %92 ]
  %101 = phi %"class.v8::internal::compiler::Node"*** [ %108, %98 ], [ %84, %92 ]
  %102 = phi i64 [ %109, %98 ], [ %96, %92 ]
  %103 = bitcast %"class.v8::internal::compiler::Node"*** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %99, i64 1
  %107 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %101, i64 1
  %109 = add i64 %102, -1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %98, !llvm.loop !16

111:                                              ; preds = %98
  %112 = ptrtoint %"class.v8::internal::compiler::Node"*** %106 to i64
  br label %113

113:                                              ; preds = %92, %111
  %114 = phi %"class.v8::internal::compiler::Node"*** [ %80, %92 ], [ %106, %111 ]
  %115 = phi i64 [ %81, %92 ], [ %112, %111 ]
  %116 = phi %"class.v8::internal::compiler::Node"*** [ %84, %92 ], [ %108, %111 ]
  %117 = icmp ult i64 %93, 56
  br i1 %117, label %164, label %118

118:                                              ; preds = %113, %118
  %119 = phi %"class.v8::internal::compiler::Node"*** [ %160, %118 ], [ %114, %113 ]
  %120 = phi i64 [ %161, %118 ], [ %115, %113 ]
  %121 = phi %"class.v8::internal::compiler::Node"*** [ %162, %118 ], [ %116, %113 ]
  %122 = bitcast %"class.v8::internal::compiler::Node"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = inttoptr i64 %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 1
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 1
  %127 = bitcast %"class.v8::internal::compiler::Node"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::compiler::Node"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 2
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 2
  %132 = bitcast %"class.v8::internal::compiler::Node"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 3
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 3
  %137 = bitcast %"class.v8::internal::compiler::Node"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.v8::internal::compiler::Node"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 4
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 4
  %142 = bitcast %"class.v8::internal::compiler::Node"*** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast %"class.v8::internal::compiler::Node"*** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 5
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 5
  %147 = bitcast %"class.v8::internal::compiler::Node"*** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.v8::internal::compiler::Node"*** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 6
  %151 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 6
  %152 = bitcast %"class.v8::internal::compiler::Node"*** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast %"class.v8::internal::compiler::Node"*** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 7
  %156 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 7
  %157 = bitcast %"class.v8::internal::compiler::Node"*** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast %"class.v8::internal::compiler::Node"*** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %119, i64 8
  %161 = ptrtoint %"class.v8::internal::compiler::Node"*** %160 to i64
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, i64 8
  %163 = icmp eq %"class.v8::internal::compiler::Node"*** %90, %160
  br i1 %163, label %164, label %118

164:                                              ; preds = %118, %113
  %165 = ptrtoint %"class.v8::internal::compiler::Node"*** %90 to i64
  br label %166

166:                                              ; preds = %77, %164
  %167 = phi i64 [ %165, %164 ], [ %81, %77 ]
  %168 = load i64, i64* %39, align 8
  store i64 %79, i64* %39, align 8
  %169 = bitcast %"class.v8::internal::compiler::Node"**** %3 to i64*
  store i64 %81, i64* %169, align 8
  store i64 %167, i64* %85, align 8
  %170 = load i64, i64* %15, align 8
  store i64 %83, i64* %15, align 8
  %171 = inttoptr i64 %168 to %"class.v8::internal::compiler::Node"***
  %172 = icmp eq i64 %168, 0
  br i1 %172, label %192, label %173

173:                                              ; preds = %166
  %174 = sub i64 %170, %168
  %175 = ashr exact i64 %174, 3
  %176 = icmp ult i64 %174, 16
  br i1 %176, label %192, label %177

177:                                              ; preds = %173
  %178 = load %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"*, %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48, align 8
  %179 = icmp eq %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, null
  br i1 %179, label %184, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock", %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"* %178, i64 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = icmp ugt i64 %182, %175
  br i1 %183, label %192, label %184

184:                                              ; preds = %180, %177
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %171, i64 1
  %186 = bitcast %"class.v8::internal::compiler::Node"*** %185 to i64*
  store i64 %175, i64* %186, align 8
  %187 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = inttoptr i64 %168 to i64*
  store i64 %188, i64* %189, align 8
  %190 = bitcast %"struct.v8::internal::RecyclingZoneAllocator<v8::internal::compiler::Node **>::FreeBlock"** %48 to %"class.v8::internal::compiler::Node"****
  store %"class.v8::internal::compiler::Node"*** %171, %"class.v8::internal::compiler::Node"**** %190, align 8
  %191 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  br label %192

192:                                              ; preds = %184, %180, %173, %166, %34, %2
  %193 = phi %"class.v8::internal::compiler::Node"*** [ %191, %184 ], [ %80, %180 ], [ %80, %173 ], [ %80, %166 ], [ %36, %34 ], [ %4, %2 ]
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %193, i64 -1
  %195 = bitcast %"class.v8::internal::compiler::Node"*** %1 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::compiler::Node"*** %194 to i64*
  store i64 %196, i64* %197, align 8
  %198 = load %"class.v8::internal::compiler::Node"***, %"class.v8::internal::compiler::Node"**** %3, align 8
  %199 = getelementptr inbounds %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %198, i64 -1
  store %"class.v8::internal::compiler::Node"*** %199, %"class.v8::internal::compiler::Node"**** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler12BinopMatcherINS1_10IntMatcherIiLNS1_8IrOpcode5ValueE22EEES6_E10SwapInputsEv(%"struct.v8::internal::compiler::BinopMatcher"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca [16 x i8], align 8
  %3 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 2
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5)
  %6 = bitcast %"struct.v8::internal::compiler::IntMatcher"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 %6, i64 16, i1 false) #6
  %7 = bitcast %"struct.v8::internal::compiler::IntMatcher"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 13, i1 false) #6
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* nonnull align 8 %5, i64 13, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5)
  %8 = getelementptr inbounds %"struct.v8::internal::compiler::BinopMatcher", %"struct.v8::internal::compiler::BinopMatcher"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::compiler::IntMatcher", %"struct.v8::internal::compiler::IntMatcher"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %9, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 251658240
  %15 = icmp eq i32 %14, 251658240
  %16 = ptrtoint %"class.v8::internal::compiler::Node"* %9 to i64
  %17 = add i64 %16, 32
  br i1 %15, label %18, label %22

18:                                               ; preds = %1
  %19 = inttoptr i64 %17 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 16
  br label %22

22:                                               ; preds = %1, %18
  %23 = phi i64 [ %21, %18 ], [ %17, %1 ]
  %24 = inttoptr i64 %23 to %"class.v8::internal::compiler::Node"**
  %25 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %24, align 8
  %26 = icmp eq %"class.v8::internal::compiler::Node"* %25, %11
  br i1 %26, label %41, label %27

27:                                               ; preds = %22
  br i1 %15, label %30, label %28

28:                                               ; preds = %27
  %29 = bitcast %"class.v8::internal::compiler::Node"* %9 to %"struct.v8::internal::compiler::Node::Use"*
  br label %33

30:                                               ; preds = %27
  %31 = inttoptr i64 %17 to %"struct.v8::internal::compiler::Node::Use"**
  %32 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %31, align 8
  br label %33

33:                                               ; preds = %30, %28
  %34 = phi %"struct.v8::internal::compiler::Node::Use"* [ %29, %28 ], [ %32, %30 ]
  %35 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %34, i64 -1
  %36 = icmp eq %"class.v8::internal::compiler::Node"* %25, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %25, %"struct.v8::internal::compiler::Node::Use"* %35) #6
  br label %38

38:                                               ; preds = %37, %33
  store %"class.v8::internal::compiler::Node"* %11, %"class.v8::internal::compiler::Node"** %24, align 8
  %39 = icmp eq %"class.v8::internal::compiler::Node"* %11, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %38
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %11, %"struct.v8::internal::compiler::Node::Use"* %35) #6
  br label %41

41:                                               ; preds = %22, %38, %40
  %42 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %8, align 8
  %43 = getelementptr inbounds %"struct.v8::internal::compiler::IntMatcher", %"struct.v8::internal::compiler::IntMatcher"* %4, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %42, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = and i32 %46, 251658240
  %48 = icmp eq i32 %47, 251658240
  %49 = ptrtoint %"class.v8::internal::compiler::Node"* %42 to i64
  %50 = add i64 %49, 32
  br i1 %48, label %51, label %55

51:                                               ; preds = %41
  %52 = inttoptr i64 %50 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = add i64 %53, 16
  br label %55

55:                                               ; preds = %41, %51
  %56 = phi i64 [ %54, %51 ], [ %50, %41 ]
  %57 = inttoptr i64 %56 to %"class.v8::internal::compiler::Node"**
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %57, i64 1
  %59 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %58, align 8
  %60 = icmp eq %"class.v8::internal::compiler::Node"* %59, %44
  br i1 %60, label %75, label %61

61:                                               ; preds = %55
  br i1 %48, label %64, label %62

62:                                               ; preds = %61
  %63 = bitcast %"class.v8::internal::compiler::Node"* %42 to %"struct.v8::internal::compiler::Node::Use"*
  br label %67

64:                                               ; preds = %61
  %65 = inttoptr i64 %50 to %"struct.v8::internal::compiler::Node::Use"**
  %66 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %65, align 8
  br label %67

67:                                               ; preds = %64, %62
  %68 = phi %"struct.v8::internal::compiler::Node::Use"* [ %63, %62 ], [ %66, %64 ]
  %69 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %68, i64 -2
  %70 = icmp eq %"class.v8::internal::compiler::Node"* %59, null
  br i1 %70, label %72, label %71

71:                                               ; preds = %67
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %59, %"struct.v8::internal::compiler::Node::Use"* %69) #6
  br label %72

72:                                               ; preds = %71, %67
  store %"class.v8::internal::compiler::Node"* %44, %"class.v8::internal::compiler::Node"** %58, align 8
  %73 = icmp eq %"class.v8::internal::compiler::Node"* %44, null
  br i1 %73, label %75, label %74

74:                                               ; preds = %72
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %44, %"struct.v8::internal::compiler::Node::Use"* %69) #6
  br label %75

75:                                               ; preds = %55, %72, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !3
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__16__treeIiNS_4lessIiEEN2v88internal13ZoneAllocatorIiEEE16__construct_nodeIJRKiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__16__treeIiNS_4lessIiEEN2v88internal13ZoneAllocatorIiEEE16__construct_nodeIJRKiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__16__treeIiNS_4lessIiEEN2v88internal13ZoneAllocatorIiEEE16__construct_nodeIJRKiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__16__treeIiNS_4lessIiEEN2v88internal13ZoneAllocatorIiEEE16__construct_nodeIJRKiEEENS_10unique_ptrINS_11__tree_nodeIiPvEENS_22__tree_node_destructorINS5_ISE_EEEEEEDpOT_"}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !12}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !12}
!16 = distinct !{!16, !12}
