; ModuleID = '../../v8/src/heap/cppgc-js/unified-heap-marking-visitor.cc'
source_filename = "../../v8/src/heap/cppgc-js/unified-heap-marking-visitor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::UnifiedHeapMarkingVisitorBase" = type { %"class.v8::JSVisitor", %"class.cppgc::internal::MarkingStateBase"*, %"class.v8::internal::UnifiedHeapMarkingState"* }
%"class.v8::JSVisitor" = type { %"class.cppgc::Visitor" }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"class.cppgc::internal::HeapBase" = type <{ i32 (...)**, %"class.cppgc::internal::RawHeap", %"class.std::__1::shared_ptr", %"class.cppgc::internal::CagedHeap", %"class.std::__1::unique_ptr.29", %"class.cppgc::internal::HeapRegistry::Subscription", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.66", %"class.cppgc::internal::Compactor", %"class.cppgc::internal::ObjectAllocator", %"class.cppgc::internal::Sweeper", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::PersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::CrossThreadPersistentRegion", %"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl", i64, i64, i8, [3 x i8], i32, %"class.std::__1::unique_ptr.100", i64, i8, [7 x i8] }>
%"class.cppgc::internal::RawHeap" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BaseSpace"* }
%"class.cppgc::internal::BaseSpace" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8, [3 x i8] }>
%"class.std::__1::vector.0" = type { %"class.std::__1::__vector_base.1" }
%"class.std::__1::__vector_base.1" = type { %"class.cppgc::internal::BasePage"**, %"class.cppgc::internal::BasePage"**, %"class.std::__1::__compressed_pair.2" }
%"class.cppgc::internal::BasePage" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.cppgc::internal::BasePage"** }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::shared_ptr" = type { %"class.cppgc::Platform"*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::Platform" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.cppgc::internal::CagedHeap" = type { %"class.cppgc::internal::VirtualMemory", %"class.std::__1::unique_ptr.11" }
%"class.cppgc::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, i8*, i64 }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.22" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { i64 }
%"class.std::__1::set.22" = type { %"class.std::__1::__tree.23" }
%"class.std::__1::__tree.23" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.cppgc::internal::PageBackend"* }
%"class.cppgc::internal::PageBackend" = type opaque
%"class.cppgc::internal::HeapRegistry::Subscription" = type { %"class.cppgc::internal::HeapBase"* }
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::StatsCollector" = type { i64, %"class.v8::base::TimeTicks", i64, i64, i64, i64, %"class.std::__1::vector.38", i8, %"struct.cppgc::internal::StatsCollector::Event", %"struct.cppgc::internal::StatsCollector::Event", %"class.std::__1::unique_ptr.45", %"class.cppgc::Platform"* }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.cppgc::internal::StatsCollector::AllocationObserver"**, %"class.std::__1::__compressed_pair.40" }
%"class.cppgc::internal::StatsCollector::AllocationObserver" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver"** }
%"struct.cppgc::internal::StatsCollector::Event" = type { [6 x %"class.v8::base::TimeDelta"], [2 x i32], i64, i8, i8, i64, i64, i64 }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.cppgc::internal::MetricRecorder"* }
%"class.cppgc::internal::MetricRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.heap::base::Stack"* }
%"class.heap::base::Stack" = type { i8* }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.cppgc::internal::PreFinalizerHandler"* }
%"class.cppgc::internal::PreFinalizerHandler" = type opaque
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.cppgc::internal::MarkerBase"* }
%"class.cppgc::internal::MarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"struct.cppgc::internal::MarkerBase::MarkingConfig", [4 x i8], %"class.cppgc::Platform"*, %"class.std::__1::shared_ptr.461", %"struct.cppgc::internal::SingleThreadedHandle", %"class.cppgc::internal::MarkingWorklists", %"class.cppgc::internal::MutatorMarkingState", i8, [7 x i8], %"class.cppgc::internal::IncrementalMarkingSchedule", %"class.std::__1::unique_ptr.470", i8, [7 x i8] }>
%"struct.cppgc::internal::MarkerBase::MarkingConfig" = type <{ i8, [3 x i8], i32, i8, i8, [2 x i8] }>
%"class.std::__1::shared_ptr.461" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"struct.cppgc::internal::SingleThreadedHandle" = type { %"class.std::__1::shared_ptr.462" }
%"class.std::__1::shared_ptr.462" = type { i8*, %"class.std::__1::__shared_weak_count"* }
%"class.cppgc::internal::MarkingWorklists" = type { %"class.heap::base::Worklist.106", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.125", %"class.heap::base::Worklist.127", %"class.heap::base::Worklist.126", %"class.heap::base::Worklist.128", %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.heap::base::Worklist.125" }
%"class.heap::base::Worklist.106" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, [512 x %"struct.cppgc::TraceDescriptor"] }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"struct.cppgc::TraceDescriptor" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.heap::base::Worklist.127" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Segment"*, [64 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::HeapObjectHeader" = type { i32, i16, i16 }
%"class.heap::base::Worklist.126" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem"] }
%"struct.cppgc::internal::MarkingWorklists::WeakCallbackItem" = type { void (%"class.cppgc::LivenessBroker"*, i8*)*, i8* }
%"class.cppgc::LivenessBroker" = type { i8 }
%"class.heap::base::Worklist.128" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem"] }
%"struct.cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem" = type { i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64 }
%"class.heap::base::Worklist.129" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, [64 x %"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem"] }
%"struct.cppgc::internal::MarkingWorklists::EphemeronPairItem" = type { i8*, i8*, %"struct.cppgc::TraceDescriptor" }
%"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist" = type { %"class.v8::base::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.107", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.122", [4 x i8] }>
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109", %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { float }
%"class.heap::base::Worklist.125" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Segment"*, [16 x %"class.cppgc::internal::HeapObjectHeader"*] }
%"class.cppgc::internal::MutatorMarkingState" = type { %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" }
%"class.cppgc::internal::MarkingStateBase" = type { %"class.cppgc::internal::HeapBase"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local", %"class.std::__1::unique_ptr.130", i64 }
%"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Local" = type { %"class.heap::base::Worklist.106"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Local" = type { %"class.heap::base::Worklist.126"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 64>::Local" = type { %"class.heap::base::Worklist.127"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Local" = type { %"class.heap::base::Worklist.128"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Local" = type { %"class.heap::base::Worklist.129"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<cppgc::internal::HeapObjectHeader *, 16>::Local" = type { %"class.heap::base::Worklist.125"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.heap::base::Worklist<const void **, 256>::Local"* }
%"class.heap::base::Worklist<const void **, 256>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<const void **, 256>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<const void **, 256>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<const void **, 256>::Segment"*, [256 x i8**] }
%"class.cppgc::internal::MutatorMarkingState::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.463", i64 }
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.cppgc::internal::HeapObjectHeader"**, %"class.cppgc::internal::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.cppgc::internal::HeapObjectHeader"** }
%"class.cppgc::internal::IncrementalMarkingSchedule" = type { %"class.v8::base::TimeTicks", i64, %"struct.std::__1::atomic", double, i64, double }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.cppgc::internal::ConcurrentMarkerBase"* }
%"class.cppgc::internal::ConcurrentMarkerBase" = type <{ i32 (...)**, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::MarkingWorklists"*, %"class.cppgc::internal::IncrementalMarkingSchedule"*, %"class.cppgc::Platform"*, %"class.std::__1::unique_ptr.473", i64, %"class.v8::base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.473" = type { %"class.std::__1::__compressed_pair.474" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.475" }
%"struct.std::__1::__compressed_pair_elem.475" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.cppgc::internal::Compactor" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.72", %"class.std::__1::unique_ptr.79", i8, i8, [6 x i8] }>
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"class.cppgc::internal::NormalPageSpace"**, %"class.cppgc::internal::NormalPageSpace"**, %"class.std::__1::__compressed_pair.74" }
%"class.cppgc::internal::NormalPageSpace" = type { %"class.cppgc::internal::BaseSpace.base", %"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer", %"class.cppgc::internal::FreeList" }
%"class.cppgc::internal::BaseSpace.base" = type <{ %"class.cppgc::internal::RawHeap"*, %"class.std::__1::vector.0", %"class.v8::base::Mutex", i64, i32, i8 }>
%"class.cppgc::internal::NormalPageSpace::LinearAllocationBuffer" = type { i8*, i64 }
%"class.cppgc::internal::FreeList" = type { %"struct.std::__1::array", %"struct.std::__1::array", i64 }
%"struct.std::__1::array" = type { [17 x %"class.cppgc::internal::FreeList::Entry"*] }
%"class.cppgc::internal::FreeList::Entry" = type opaque
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.cppgc::internal::NormalPageSpace"** }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.cppgc::internal::CompactionWorklists"* }
%"class.cppgc::internal::CompactionWorklists" = type { %"class.heap::base::Worklist" }
%"class.cppgc::internal::ObjectAllocator" = type { %"class.cppgc::internal::RawHeap"*, %"class.cppgc::internal::PageBackend"*, %"class.cppgc::internal::StatsCollector"* }
%"class.cppgc::internal::Sweeper" = type { %"class.cppgc::internal::HeapBase"*, %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.cppgc::internal::Sweeper::SweeperImpl"* }
%"class.cppgc::internal::Sweeper::SweeperImpl" = type opaque
%"class.cppgc::internal::PersistentRegion" = type { %"class.std::__1::vector.92", %"class.cppgc::internal::PersistentNode"*, i64 }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.std::__1::unique_ptr.94"*, %"class.std::__1::unique_ptr.94"*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::unique_ptr.94" = type opaque
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::unique_ptr.94"* }
%"class.cppgc::internal::PersistentNode" = type { %union.anon, void (%"class.cppgc::Visitor"*, i8*)* }
%union.anon = type { i8* }
%"class.cppgc::internal::CrossThreadPersistentRegion" = type { %"class.cppgc::internal::PersistentRegion" }
%"class.cppgc::internal::ProcessHeapStatisticsUpdater::AllocationObserverImpl" = type { %"class.cppgc::internal::StatsCollector::AllocationObserver", i64 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { i32* }
%"class.v8::internal::UnifiedHeapMarkingState" = type { %"class.v8::internal::Heap"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.164", %"class.std::__1::vector.168", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.175", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.191", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.195", %"class.std::__1::vector.195", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.202", %"class.std::__1::unique_ptr.208", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.244", %"class.std::__1::unique_ptr.250", %"class.std::__1::unique_ptr.256", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.262", %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.274", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.286", %"class.std::__1::shared_ptr.292", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.293", %"class.std::__1::unique_ptr.319", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.325", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.338", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.344", i8, [7 x i8], %"class.std::__1::unordered_map.370", %"class.std::__1::unordered_map.396", %"class.std::__1::unordered_map.370", %"class.std::__1::unordered_map.420", %"class.std::__1::vector.448", i8, %"class.std::__1::unique_ptr.455", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.136" }
%"class.std::__1::__hash_table.136" = type <{ %"class.std::__1::unique_ptr.137", %"class.std::__1::__compressed_pair.147", %"class.std::__1::__compressed_pair.152", %"class.std::__1::__compressed_pair.154", [4 x i8] }>
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139", %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"struct.std::__1::__hash_node_base.140"** }
%"struct.std::__1::__hash_node_base.140" = type { %"struct.std::__1::__hash_node_base.140"* }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.std::__1::__bucket_list_deallocator.142" }
%"class.std::__1::__bucket_list_deallocator.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"struct.std::__1::__hash_node_base.140" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.159", %"struct.std::__1::atomic.159", %"struct.std::__1::atomic.159" }
%"struct.std::__1::atomic.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__atomic_base.161" }
%"struct.std::__1::__atomic_base.161" = type { %"struct.std::__1::__cxx_atomic_impl.162" }
%"struct.std::__1::__cxx_atomic_impl.162" = type { %"struct.std::__1::__cxx_atomic_base_impl.163" }
%"struct.std::__1::__cxx_atomic_base_impl.163" = type { i64 }
%"class.v8::internal::Isolate" = type opaque
%"struct.std::__1::atomic.164" = type { %"struct.std::__1::__atomic_base.165" }
%"struct.std::__1::__atomic_base.165" = type { %"struct.std::__1::__cxx_atomic_impl.166" }
%"struct.std::__1::__cxx_atomic_impl.166" = type { %"struct.std::__1::__cxx_atomic_base_impl.167" }
%"struct.std::__1::__cxx_atomic_base_impl.167" = type { i32 }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.170" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type opaque
%"class.v8::internal::CodeSpace" = type opaque
%"class.v8::internal::OldLargeObjectSpace" = type opaque
%"class.v8::internal::CodeLargeObjectSpace" = type opaque
%"class.v8::internal::NewLargeObjectSpace" = type opaque
%"class.v8::internal::ReadOnlySpace" = type opaque
%"class.v8::internal::OldSpace" = type opaque
%"class.v8::internal::MapSpace" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type opaque
%"class.v8::internal::Space" = type opaque
%"class.v8::internal::LocalHeap" = type opaque
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.181", %"struct.std::__1::atomic.185", %"class.std::__1::shared_ptr.189", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.181" = type { %"struct.std::__1::__atomic_base.182" }
%"struct.std::__1::__atomic_base.182" = type { %"struct.std::__1::__cxx_atomic_impl.183" }
%"struct.std::__1::__cxx_atomic_impl.183" = type { %"struct.std::__1::__cxx_atomic_base_impl.184" }
%"struct.std::__1::__cxx_atomic_base_impl.184" = type { i8 }
%"struct.std::__1::atomic.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i8 }
%"class.std::__1::shared_ptr.189" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.190" }
%"class.std::__1::shared_ptr.190" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"struct.std::__1::atomic.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__cxx_atomic_impl.193" }
%"struct.std::__1::__cxx_atomic_impl.193" = type { %"struct.std::__1::__cxx_atomic_base_impl.194" }
%"struct.std::__1::__cxx_atomic_base_impl.194" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.197" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type opaque
%"class.v8::internal::MinorMarkCompactCollector" = type opaque
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type opaque
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type opaque
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type opaque
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.250" = type { %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type opaque
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.274" = type { %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.276" }
%"struct.std::__1::__compressed_pair_elem.276" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.292" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type opaque
%"class.v8::CppHeap" = type { i32 (...)** }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.293" = type { %"class.std::__1::__hash_table.294" }
%"class.std::__1::__hash_table.294" = type <{ %"class.std::__1::unique_ptr.295", %"class.std::__1::__compressed_pair.305", %"class.std::__1::__compressed_pair.310", %"class.std::__1::__compressed_pair.313", [4 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297", %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.std::__1::__hash_node_base.298"** }
%"struct.std::__1::__hash_node_base.298" = type { %"struct.std::__1::__hash_node_base.298"* }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.std::__1::__bucket_list_deallocator.300" }
%"class.std::__1::__bucket_list_deallocator.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"struct.std::__1::__hash_node_base.298" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.331", %"class.std::__1::vector.331" }
%"class.std::__1::vector.331" = type { %"class.std::__1::__vector_base.332" }
%"class.std::__1::__vector_base.332" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.v8::internal::Object"* }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.std::__1::unordered_set.344" = type { %"class.std::__1::__hash_table.345" }
%"class.std::__1::__hash_table.345" = type <{ %"class.std::__1::unique_ptr.346", %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.361", %"class.std::__1::__compressed_pair.365", [4 x i8] }>
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348", %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"struct.std::__1::__hash_node_base.349"** }
%"struct.std::__1::__hash_node_base.349" = type { %"struct.std::__1::__hash_node_base.349"* }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.std::__1::__bucket_list_deallocator.351" }
%"class.std::__1::__bucket_list_deallocator.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"struct.std::__1::__hash_node_base.349" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::unordered_map.396" = type { %"class.std::__1::__hash_table.397" }
%"class.std::__1::__hash_table.397" = type <{ %"class.std::__1::unique_ptr.398", %"class.std::__1::__compressed_pair.408", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.416", [4 x i8] }>
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400", %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"struct.std::__1::__hash_node_base.401"** }
%"struct.std::__1::__hash_node_base.401" = type { %"struct.std::__1::__hash_node_base.401"* }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.std::__1::__bucket_list_deallocator.403" }
%"class.std::__1::__bucket_list_deallocator.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"struct.std::__1::__hash_node_base.401" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::unordered_map.370" = type { %"class.std::__1::__hash_table.371" }
%"class.std::__1::__hash_table.371" = type <{ %"class.std::__1::unique_ptr.372", %"class.std::__1::__compressed_pair.382", %"class.std::__1::__compressed_pair.387", %"class.std::__1::__compressed_pair.390", [4 x i8] }>
%"class.std::__1::unique_ptr.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.374", %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.374" = type { %"struct.std::__1::__hash_node_base.375"** }
%"struct.std::__1::__hash_node_base.375" = type { %"struct.std::__1::__hash_node_base.375"* }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"class.std::__1::__bucket_list_deallocator.377" }
%"class.std::__1::__bucket_list_deallocator.377" = type { %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"struct.std::__1::__hash_node_base.375" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::unordered_map.420" = type { %"class.std::__1::__hash_table.421" }
%"class.std::__1::__hash_table.421" = type <{ %"class.std::__1::unique_ptr.422", %"class.std::__1::__compressed_pair.432", %"class.std::__1::__compressed_pair.437", %"class.std::__1::__compressed_pair.442", [4 x i8] }>
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424", %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"struct.std::__1::__hash_node_base.425"** }
%"struct.std::__1::__hash_node_base.425" = type { %"struct.std::__1::__hash_node_base.425"* }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.std::__1::__bucket_list_deallocator.427" }
%"class.std::__1::__bucket_list_deallocator.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"struct.std::__1::__hash_node_base.425" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"class.std::__1::vector.448" = type { %"class.std::__1::__vector_base.449" }
%"class.std::__1::__vector_base.449" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.450" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.451" }
%"struct.std::__1::__compressed_pair_elem.451" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.455" = type { %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type opaque
%"class.v8::internal::MutatorUnifiedHeapMarkingVisitor" = type { %"class.v8::internal::UnifiedHeapMarkingVisitorBase" }
%"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor" = type { %"class.v8::internal::UnifiedHeapMarkingVisitorBase" }
%"class.cppgc::internal::ConcurrentMarkingState" = type { %"class.cppgc::internal::MarkingStateBase", i64 }
%"class.cppgc::internal::LargePage" = type { %"class.cppgc::internal::BasePage.base", i64 }
%"class.cppgc::internal::BasePage.base" = type <{ %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::BaseSpace"*, i8 }>
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.cppgc::SourceLocation" = type { i8*, i8*, i64 }

$_ZN5cppgc8internal16MarkingStateBase20ProcessWeakContainerEPKvNS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES3_ES3_ = comdat any

$_ZN2v88internal29UnifiedHeapMarkingVisitorBaseD0Ev = comdat any

$_ZN5cppgc7Visitor37DeferTraceToMutatorThreadIfConcurrentEPKvPFvPS0_S2_Em = comdat any

$_ZN5cppgc7Visitor9VisitRootEPKvNS_15TraceDescriptorERKNS_14SourceLocationE = comdat any

$_ZN5cppgc7Visitor13VisitWeakRootEPKvNS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_ES2_RKNS_14SourceLocationE = comdat any

$_ZN2v88internal32MutatorUnifiedHeapMarkingVisitorD0Ev = comdat any

$_ZN2v88internal35ConcurrentUnifiedHeapMarkingVisitorD0Ev = comdat any

$_ZN2v88internal35ConcurrentUnifiedHeapMarkingVisitor9VisitRootEPKvN5cppgc15TraceDescriptorERKNS4_14SourceLocationE = comdat any

$_ZN2v88internal35ConcurrentUnifiedHeapMarkingVisitor13VisitWeakRootEPKvN5cppgc15TraceDescriptorEPFvRKNS4_14LivenessBrokerES3_ES3_RKNS4_14SourceLocationE = comdat any

$_ZN5cppgc7VisitorD2Ev = comdat any

$_ZN5cppgc8internal16MarkingStateBase11MarkAndPushERNS0_16HeapObjectHeaderENS_15TraceDescriptorE = comdat any

$_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

@_ZTVN2v88internal29UnifiedHeapMarkingVisitorBaseE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cppgc::Visitor"*)* @_ZN5cppgc7VisitorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBaseD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase20RegisterWeakCallbackEPFvRKN5cppgc14LivenessBrokerEPKvES7_ to i8*), i8* bitcast (i1 (%"class.cppgc::Visitor"*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64)* @_ZN5cppgc7Visitor37DeferTraceToMutatorThreadIfConcurrentEPKvPFvPS0_S2_Em to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase5VisitEPKvN5cppgc15TraceDescriptorE to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase9VisitWeakEPKvN5cppgc15TraceDescriptorEPFvRKNS4_14LivenessBrokerES3_ES3_ to i8*), i8* bitcast (void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"*)* @_ZN5cppgc7Visitor9VisitRootEPKvNS_15TraceDescriptorERKNS_14SourceLocationE to i8*), i8* bitcast (void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*, %"class.cppgc::SourceLocation"*)* @_ZN5cppgc7Visitor13VisitWeakRootEPKvNS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_ES2_RKNS_14SourceLocationE to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase14VisitEphemeronEPKvS3_N5cppgc15TraceDescriptorE to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase18VisitWeakContainerEPKvN5cppgc15TraceDescriptorES5_PFvRKNS4_14LivenessBrokerES3_ES3_ to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8**)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase22HandleMovableReferenceEPPKv to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, %"class.v8::TracedReferenceBase"*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase5VisitERKNS_19TracedReferenceBaseE to i8*)] }, align 8
@_ZTVN2v88internal32MutatorUnifiedHeapMarkingVisitorE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cppgc::Visitor"*)* @_ZN5cppgc7VisitorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::MutatorUnifiedHeapMarkingVisitor"*)* @_ZN2v88internal32MutatorUnifiedHeapMarkingVisitorD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase20RegisterWeakCallbackEPFvRKN5cppgc14LivenessBrokerEPKvES7_ to i8*), i8* bitcast (i1 (%"class.cppgc::Visitor"*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64)* @_ZN5cppgc7Visitor37DeferTraceToMutatorThreadIfConcurrentEPKvPFvPS0_S2_Em to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase5VisitEPKvN5cppgc15TraceDescriptorE to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase9VisitWeakEPKvN5cppgc15TraceDescriptorEPFvRKNS4_14LivenessBrokerES3_ES3_ to i8*), i8* bitcast (void (%"class.v8::internal::MutatorUnifiedHeapMarkingVisitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"*)* @_ZN2v88internal32MutatorUnifiedHeapMarkingVisitor9VisitRootEPKvN5cppgc15TraceDescriptorERKNS4_14SourceLocationE to i8*), i8* bitcast (void (%"class.v8::internal::MutatorUnifiedHeapMarkingVisitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*, %"class.cppgc::SourceLocation"*)* @_ZN2v88internal32MutatorUnifiedHeapMarkingVisitor13VisitWeakRootEPKvN5cppgc15TraceDescriptorEPFvRKNS4_14LivenessBrokerES3_ES3_RKNS4_14SourceLocationE to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase14VisitEphemeronEPKvS3_N5cppgc15TraceDescriptorE to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase18VisitWeakContainerEPKvN5cppgc15TraceDescriptorES5_PFvRKNS4_14LivenessBrokerES3_ES3_ to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8**)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase22HandleMovableReferenceEPPKv to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, %"class.v8::TracedReferenceBase"*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase5VisitERKNS_19TracedReferenceBaseE to i8*)] }, align 8
@_ZTVN2v88internal35ConcurrentUnifiedHeapMarkingVisitorE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.cppgc::Visitor"*)* @_ZN5cppgc7VisitorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"*)* @_ZN2v88internal35ConcurrentUnifiedHeapMarkingVisitorD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase20RegisterWeakCallbackEPFvRKN5cppgc14LivenessBrokerEPKvES7_ to i8*), i8* bitcast (i1 (%"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64)* @_ZN2v88internal35ConcurrentUnifiedHeapMarkingVisitor37DeferTraceToMutatorThreadIfConcurrentEPKvPFvPN5cppgc7VisitorES3_Em to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase5VisitEPKvN5cppgc15TraceDescriptorE to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase9VisitWeakEPKvN5cppgc15TraceDescriptorEPFvRKNS4_14LivenessBrokerES3_ES3_ to i8*), i8* bitcast (void (%"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"*)* @_ZN2v88internal35ConcurrentUnifiedHeapMarkingVisitor9VisitRootEPKvN5cppgc15TraceDescriptorERKNS4_14SourceLocationE to i8*), i8* bitcast (void (%"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*, %"class.cppgc::SourceLocation"*)* @_ZN2v88internal35ConcurrentUnifiedHeapMarkingVisitor13VisitWeakRootEPKvN5cppgc15TraceDescriptorEPFvRKNS4_14LivenessBrokerES3_ES3_RKNS4_14SourceLocationE to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase14VisitEphemeronEPKvS3_N5cppgc15TraceDescriptorE to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase18VisitWeakContainerEPKvN5cppgc15TraceDescriptorES5_PFvRKNS4_14LivenessBrokerES3_ES3_ to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8**)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase22HandleMovableReferenceEPPKv to i8*), i8* bitcast (void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, %"class.v8::TracedReferenceBase"*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBase5VisitERKNS_19TracedReferenceBaseE to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1

@_ZN2v88internal29UnifiedHeapMarkingVisitorBaseC1ERN5cppgc8internal8HeapBaseERNS3_16MarkingStateBaseERNS0_23UnifiedHeapMarkingStateE = hidden unnamed_addr alias void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::MarkingStateBase"*, %"class.v8::internal::UnifiedHeapMarkingState"*), void (%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::MarkingStateBase"*, %"class.v8::internal::UnifiedHeapMarkingState"*)* @_ZN2v88internal29UnifiedHeapMarkingVisitorBaseC2ERN5cppgc8internal8HeapBaseERNS3_16MarkingStateBaseERNS0_23UnifiedHeapMarkingStateE
@_ZN2v88internal32MutatorUnifiedHeapMarkingVisitorC1ERN5cppgc8internal8HeapBaseERNS3_19MutatorMarkingStateERNS0_23UnifiedHeapMarkingStateE = hidden unnamed_addr alias void (%"class.v8::internal::MutatorUnifiedHeapMarkingVisitor"*, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::MutatorMarkingState"*, %"class.v8::internal::UnifiedHeapMarkingState"*), void (%"class.v8::internal::MutatorUnifiedHeapMarkingVisitor"*, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::MutatorMarkingState"*, %"class.v8::internal::UnifiedHeapMarkingState"*)* @_ZN2v88internal32MutatorUnifiedHeapMarkingVisitorC2ERN5cppgc8internal8HeapBaseERNS3_19MutatorMarkingStateERNS0_23UnifiedHeapMarkingStateE
@_ZN2v88internal35ConcurrentUnifiedHeapMarkingVisitorC1ERN5cppgc8internal8HeapBaseERNS3_22ConcurrentMarkingStateERNS0_23UnifiedHeapMarkingStateE = hidden unnamed_addr alias void (%"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"*, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::ConcurrentMarkingState"*, %"class.v8::internal::UnifiedHeapMarkingState"*), void (%"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"*, %"class.cppgc::internal::HeapBase"*, %"class.cppgc::internal::ConcurrentMarkingState"*, %"class.v8::internal::UnifiedHeapMarkingState"*)* @_ZN2v88internal35ConcurrentUnifiedHeapMarkingVisitorC2ERN5cppgc8internal8HeapBaseERNS3_22ConcurrentMarkingStateERNS0_23UnifiedHeapMarkingStateE

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal29UnifiedHeapMarkingVisitorBaseC2ERN5cppgc8internal8HeapBaseERNS3_16MarkingStateBaseERNS0_23UnifiedHeapMarkingStateE(%"class.v8::internal::UnifiedHeapMarkingVisitorBase"* nocapture, %"class.cppgc::internal::HeapBase"* nocapture readnone dereferenceable(448), %"class.cppgc::internal::MarkingStateBase"* dereferenceable(232), %"class.v8::internal::UnifiedHeapMarkingState"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVisitorBase", %"class.v8::internal::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN2v88internal29UnifiedHeapMarkingVisitorBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVisitorBase", %"class.v8::internal::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 1
  store %"class.cppgc::internal::MarkingStateBase"* %2, %"class.cppgc::internal::MarkingStateBase"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVisitorBase", %"class.v8::internal::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 2
  store %"class.v8::internal::UnifiedHeapMarkingState"* %3, %"class.v8::internal::UnifiedHeapMarkingState"** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal29UnifiedHeapMarkingVisitorBase5VisitEPKvN5cppgc15TraceDescriptorE(%"class.v8::internal::UnifiedHeapMarkingVisitorBase"* nocapture readonly, i8* nocapture readnone, i8*, void (%"class.cppgc::Visitor"*, i8*)*) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVisitorBase", %"class.v8::internal::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 1
  %6 = load %"class.cppgc::internal::MarkingStateBase"*, %"class.cppgc::internal::MarkingStateBase"** %5, align 8
  %7 = getelementptr inbounds i8, i8* %2, i64 -8
  %8 = bitcast i8* %7 to %"class.cppgc::internal::HeapObjectHeader"*
  tail call void @_ZN5cppgc8internal16MarkingStateBase11MarkAndPushERNS0_16HeapObjectHeaderENS_15TraceDescriptorE(%"class.cppgc::internal::MarkingStateBase"* %6, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8) %8, i8* %2, void (%"class.cppgc::Visitor"*, i8*)* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal29UnifiedHeapMarkingVisitorBase9VisitWeakEPKvN5cppgc15TraceDescriptorEPFvRKNS4_14LivenessBrokerES3_ES3_(%"class.v8::internal::UnifiedHeapMarkingVisitorBase"* nocapture readonly, i8* nocapture readnone, i8* nocapture readonly, void (%"class.cppgc::Visitor"*, i8*)* nocapture readnone, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*) unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVisitorBase", %"class.v8::internal::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 1
  %8 = load %"class.cppgc::internal::MarkingStateBase"*, %"class.cppgc::internal::MarkingStateBase"** %7, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 -2
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = and i16 %11, 1
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %14, label %57

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %8, i64 0, i32 4, i32 1
  %16 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %15, align 8
  %17 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %16, i64 0, i32 1
  %18 = load i16, i16* %17, align 2
  %19 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %16, i64 0, i32 0
  %20 = load i16, i16* %19, align 2
  %21 = icmp eq i16 %18, %20
  %22 = bitcast %"class.heap::base::internal::SegmentBase"* %16 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*
  br i1 %21, label %23, label %49, !prof !2

23:                                               ; preds = %14
  %24 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #10
  %25 = icmp eq %"class.heap::base::internal::SegmentBase"* %16, %24
  br i1 %25, label %40, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %8, i64 0, i32 4, i32 0
  %28 = load %"class.heap::base::Worklist.126"*, %"class.heap::base::Worklist.126"** %27, align 8
  %29 = bitcast %"class.heap::base::internal::SegmentBase"** %15 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"**
  %30 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %29, align 8
  %31 = getelementptr inbounds %"class.heap::base::Worklist.126", %"class.heap::base::Worklist.126"* %28, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %31) #10
  %32 = getelementptr inbounds %"class.heap::base::Worklist.126", %"class.heap::base::Worklist.126"* %28, i64 0, i32 1
  %33 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %30, i64 0, i32 1
  %36 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %30 to i64
  store atomic i64 %37, i64* %33 monotonic, align 8
  %38 = getelementptr inbounds %"class.heap::base::Worklist.126", %"class.heap::base::Worklist.126"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i64* %38, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %31) #10
  br label %40

40:                                               ; preds = %26, %23
  %41 = tail call i8* @_Znwm(i64 1040) #11
  %42 = bitcast i8* %41 to i16*
  store i16 64, i16* %42, align 2
  %43 = getelementptr inbounds i8, i8* %41, i64 2
  %44 = bitcast i8* %43 to i16*
  store i16 0, i16* %44, align 2
  %45 = getelementptr inbounds i8, i8* %41, i64 8
  %46 = bitcast i8* %45 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %46, align 8
  %47 = bitcast %"class.heap::base::internal::SegmentBase"** %15 to i8**
  store i8* %41, i8** %47, align 8
  %48 = bitcast i8* %41 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*
  br label %49

49:                                               ; preds = %40, %14
  %50 = phi %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* [ %48, %40 ], [ %22, %14 ]
  %51 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %50, i64 0, i32 0, i32 1
  %52 = load i16, i16* %51, align 2
  %53 = add i16 %52, 1
  store i16 %53, i16* %51, align 2
  %54 = zext i16 %52 to i64
  %55 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %50, i64 0, i32 2, i64 %54, i32 0
  store void (%"class.cppgc::LivenessBroker"*, i8*)* %4, void (%"class.cppgc::LivenessBroker"*, i8*)** %55, align 8
  %56 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %50, i64 0, i32 2, i64 %54, i32 1
  store i8* %5, i8** %56, align 8
  br label %57

57:                                               ; preds = %6, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal29UnifiedHeapMarkingVisitorBase14VisitEphemeronEPKvS3_N5cppgc15TraceDescriptorE(%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, i8*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVisitorBase", %"class.v8::internal::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 1
  %7 = load %"class.cppgc::internal::MarkingStateBase"*, %"class.cppgc::internal::MarkingStateBase"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVisitorBase", %"class.v8::internal::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds i8, i8* %1, i64 -2
  %10 = bitcast i8* %9 to i16*
  %11 = load atomic i16, i16* %10 monotonic, align 2
  %12 = and i16 %11, 1
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %5
  %15 = icmp eq i8* %3, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds i8, i8* %3, i64 -8
  %18 = bitcast i8* %17 to %"class.cppgc::internal::HeapObjectHeader"*
  tail call void @_ZN5cppgc8internal16MarkingStateBase11MarkAndPushERNS0_16HeapObjectHeaderENS_15TraceDescriptorE(%"class.cppgc::internal::MarkingStateBase"* %7, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8) %18, i8* nonnull %3, void (%"class.cppgc::Visitor"*, i8*)* %4) #10
  br label %65

19:                                               ; preds = %14
  tail call void %4(%"class.cppgc::Visitor"* %8, i8* %2) #10
  br label %65

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %7, i64 0, i32 7, i32 1
  %22 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %21, align 8
  %23 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %22, i64 0, i32 1
  %24 = load i16, i16* %23, align 2
  %25 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %22, i64 0, i32 0
  %26 = load i16, i16* %25, align 2
  %27 = icmp eq i16 %24, %26
  %28 = bitcast %"class.heap::base::internal::SegmentBase"* %22 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*
  br i1 %27, label %29, label %55, !prof !2

29:                                               ; preds = %20
  %30 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #10
  %31 = icmp eq %"class.heap::base::internal::SegmentBase"* %22, %30
  br i1 %31, label %46, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %7, i64 0, i32 7, i32 0
  %34 = load %"class.heap::base::Worklist.129"*, %"class.heap::base::Worklist.129"** %33, align 8
  %35 = bitcast %"class.heap::base::internal::SegmentBase"** %21 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"**
  %36 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %35, align 8
  %37 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %34, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %37) #10
  %38 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %34, i64 0, i32 1
  %39 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %36, i64 0, i32 1
  %42 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %36 to i64
  store atomic i64 %43, i64* %39 monotonic, align 8
  %44 = getelementptr inbounds %"class.heap::base::Worklist.129", %"class.heap::base::Worklist.129"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i64* %44, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %37) #10
  br label %46

46:                                               ; preds = %32, %29
  %47 = tail call i8* @_Znwm(i64 2064) #11
  %48 = bitcast i8* %47 to i16*
  store i16 64, i16* %48, align 2
  %49 = getelementptr inbounds i8, i8* %47, i64 2
  %50 = bitcast i8* %49 to i16*
  store i16 0, i16* %50, align 2
  %51 = getelementptr inbounds i8, i8* %47, i64 8
  %52 = bitcast i8* %51 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"** %52, align 8
  %53 = bitcast %"class.heap::base::internal::SegmentBase"** %21 to i8**
  store i8* %47, i8** %53, align 8
  %54 = bitcast i8* %47 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"*
  br label %55

55:                                               ; preds = %46, %20
  %56 = phi %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* [ %54, %46 ], [ %28, %20 ]
  %57 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %56, i64 0, i32 0, i32 1
  %58 = load i16, i16* %57, align 2
  %59 = add i16 %58, 1
  store i16 %59, i16* %57, align 2
  %60 = zext i16 %58 to i64
  %61 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %56, i64 0, i32 2, i64 %60, i32 0
  store i8* %1, i8** %61, align 8
  %62 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %56, i64 0, i32 2, i64 %60, i32 1
  store i8* %2, i8** %62, align 8
  %63 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %56, i64 0, i32 2, i64 %60, i32 2, i32 0
  store i8* %3, i8** %63, align 8
  %64 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::EphemeronPairItem, 64>::Segment"* %56, i64 0, i32 2, i64 %60, i32 2, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* %4, void (%"class.cppgc::Visitor"*, i8*)** %64, align 8
  br label %65

65:                                               ; preds = %16, %19, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal29UnifiedHeapMarkingVisitorBase18VisitWeakContainerEPKvN5cppgc15TraceDescriptorES5_PFvRKNS4_14LivenessBrokerES3_ES3_(%"class.v8::internal::UnifiedHeapMarkingVisitorBase"* nocapture readonly, i8*, i8* nocapture readnone, void (%"class.cppgc::Visitor"*, i8*)* nocapture readnone, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*) unnamed_addr #1 align 2 {
  %9 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVisitorBase", %"class.v8::internal::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 1
  %10 = load %"class.cppgc::internal::MarkingStateBase"*, %"class.cppgc::internal::MarkingStateBase"** %9, align 8
  tail call void @_ZN5cppgc8internal16MarkingStateBase20ProcessWeakContainerEPKvNS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES3_ES3_(%"class.cppgc::internal::MarkingStateBase"* %10, i8* %1, i8* %4, void (%"class.cppgc::Visitor"*, i8*)* %5, void (%"class.cppgc::LivenessBroker"*, i8*)* %6, i8* %7)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal16MarkingStateBase20ProcessWeakContainerEPKvNS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES3_ES3_(%"class.cppgc::internal::MarkingStateBase"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*) local_unnamed_addr #2 comdat align 2 {
  %7 = alloca %"class.cppgc::internal::HeapObjectHeader"*, align 8
  %8 = alloca %"class.cppgc::internal::HeapObjectHeader"*, align 8
  %9 = getelementptr inbounds i8, i8* %1, i64 -8
  %10 = getelementptr inbounds i8, i8* %1, i64 -4
  %11 = bitcast i8* %10 to i16*
  %12 = load atomic i16, i16* %11 acquire, align 2
  %13 = and i16 %12, 1
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 2
  %17 = load %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"** %16, align 8
  %18 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %8 to i8**
  store i8* %9, i8** %19, align 8
  %20 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"* %17, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %20) #10
  %21 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"* %17, i64 0, i32 1, i32 0
  %22 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %21, %"class.cppgc::internal::HeapObjectHeader"** nonnull dereferenceable(8) %8, %"class.cppgc::internal::HeapObjectHeader"** nonnull dereferenceable(8) %8) #10
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %20) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %146

23:                                               ; preds = %6
  %24 = getelementptr inbounds i8, i8* %1, i64 -2
  %25 = bitcast i8* %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = or i16 %26, 1
  %28 = icmp eq i16 %27, %26
  br i1 %28, label %146, label %29

29:                                               ; preds = %23
  %30 = cmpxchg i16* %25, i16 %26, i16 %27 monotonic monotonic
  %31 = extractvalue { i16, i1 } %30, 1
  br i1 %31, label %32, label %146

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 9
  %34 = load %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"** %33, align 8
  %35 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %7 to i8**
  store i8* %9, i8** %36, align 8
  %37 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"* %34, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %37) #10
  %38 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"* %34, i64 0, i32 1, i32 0
  %39 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %38, %"class.cppgc::internal::HeapObjectHeader"** nonnull dereferenceable(8) %7, %"class.cppgc::internal::HeapObjectHeader"** nonnull dereferenceable(8) %7) #10
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  %40 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 4, i32 1
  %41 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %40, align 8
  %42 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %41, i64 0, i32 1
  %43 = load i16, i16* %42, align 2
  %44 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %41, i64 0, i32 0
  %45 = load i16, i16* %44, align 2
  %46 = icmp eq i16 %43, %45
  %47 = bitcast %"class.heap::base::internal::SegmentBase"* %41 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*
  br i1 %46, label %48, label %74, !prof !2

48:                                               ; preds = %32
  %49 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #10
  %50 = icmp eq %"class.heap::base::internal::SegmentBase"* %41, %49
  br i1 %50, label %65, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 4, i32 0
  %53 = load %"class.heap::base::Worklist.126"*, %"class.heap::base::Worklist.126"** %52, align 8
  %54 = bitcast %"class.heap::base::internal::SegmentBase"** %40 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"**
  %55 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %54, align 8
  %56 = getelementptr inbounds %"class.heap::base::Worklist.126", %"class.heap::base::Worklist.126"* %53, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %56) #10
  %57 = getelementptr inbounds %"class.heap::base::Worklist.126", %"class.heap::base::Worklist.126"* %53, i64 0, i32 1
  %58 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %55, i64 0, i32 1
  %61 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %55 to i64
  store atomic i64 %62, i64* %58 monotonic, align 8
  %63 = getelementptr inbounds %"class.heap::base::Worklist.126", %"class.heap::base::Worklist.126"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i64* %63, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %56) #10
  br label %65

65:                                               ; preds = %51, %48
  %66 = call i8* @_Znwm(i64 1040) #11
  %67 = bitcast i8* %66 to i16*
  store i16 64, i16* %67, align 2
  %68 = getelementptr inbounds i8, i8* %66, i64 2
  %69 = bitcast i8* %68 to i16*
  store i16 0, i16* %69, align 2
  %70 = getelementptr inbounds i8, i8* %66, i64 8
  %71 = bitcast i8* %70 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %71, align 8
  %72 = bitcast %"class.heap::base::internal::SegmentBase"** %40 to i8**
  store i8* %66, i8** %72, align 8
  %73 = bitcast i8* %66 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*
  br label %74

74:                                               ; preds = %32, %65
  %75 = phi %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* [ %73, %65 ], [ %47, %32 ]
  %76 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %75, i64 0, i32 0, i32 1
  %77 = load i16, i16* %76, align 2
  %78 = add i16 %77, 1
  store i16 %78, i16* %76, align 2
  %79 = zext i16 %77 to i64
  %80 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %75, i64 0, i32 2, i64 %79, i32 0
  store void (%"class.cppgc::LivenessBroker"*, i8*)* %4, void (%"class.cppgc::LivenessBroker"*, i8*)** %80, align 8
  %81 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %75, i64 0, i32 2, i64 %79, i32 1
  store i8* %5, i8** %81, align 8
  %82 = icmp eq void (%"class.cppgc::Visitor"*, i8*)* %3, null
  br i1 %82, label %126, label %83

83:                                               ; preds = %74
  %84 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 1, i32 1
  %85 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %84, align 8
  %86 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %85, i64 0, i32 1
  %87 = load i16, i16* %86, align 2
  %88 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %85, i64 0, i32 0
  %89 = load i16, i16* %88, align 2
  %90 = icmp eq i16 %87, %89
  %91 = bitcast %"class.heap::base::internal::SegmentBase"* %85 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*
  br i1 %90, label %92, label %118, !prof !2

92:                                               ; preds = %83
  %93 = call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #10
  %94 = icmp eq %"class.heap::base::internal::SegmentBase"* %85, %93
  br i1 %94, label %109, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 1, i32 0
  %97 = load %"class.heap::base::Worklist.106"*, %"class.heap::base::Worklist.106"** %96, align 8
  %98 = bitcast %"class.heap::base::internal::SegmentBase"** %84 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"**
  %99 = load %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %98, align 8
  %100 = getelementptr inbounds %"class.heap::base::Worklist.106", %"class.heap::base::Worklist.106"* %97, i64 0, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %100) #10
  %101 = getelementptr inbounds %"class.heap::base::Worklist.106", %"class.heap::base::Worklist.106"* %97, i64 0, i32 1
  %102 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %99, i64 0, i32 1
  %105 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %104 to i64*
  store i64 %103, i64* %105, align 8
  %106 = ptrtoint %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %99 to i64
  store atomic i64 %106, i64* %102 monotonic, align 8
  %107 = getelementptr inbounds %"class.heap::base::Worklist.106", %"class.heap::base::Worklist.106"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i64* %107, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %100) #10
  br label %109

109:                                              ; preds = %95, %92
  %110 = call i8* @_Znwm(i64 8208) #11
  %111 = bitcast i8* %110 to i16*
  store i16 512, i16* %111, align 2
  %112 = getelementptr inbounds i8, i8* %110, i64 2
  %113 = bitcast i8* %112 to i16*
  store i16 0, i16* %113, align 2
  %114 = getelementptr inbounds i8, i8* %110, i64 8
  %115 = bitcast i8* %114 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"**
  store %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* null, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %115, align 8
  %116 = bitcast %"class.heap::base::internal::SegmentBase"** %84 to i8**
  store i8* %110, i8** %116, align 8
  %117 = bitcast i8* %110 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*
  br label %118

118:                                              ; preds = %83, %109
  %119 = phi %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* [ %117, %109 ], [ %91, %83 ]
  %120 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %119, i64 0, i32 0, i32 1
  %121 = load i16, i16* %120, align 2
  %122 = add i16 %121, 1
  store i16 %122, i16* %120, align 2
  %123 = zext i16 %121 to i64
  %124 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %119, i64 0, i32 2, i64 %123, i32 0
  store i8* %2, i8** %124, align 8
  %125 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %119, i64 0, i32 2, i64 %123, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* %3, void (%"class.cppgc::Visitor"*, i8*)** %125, align 8
  br label %146

126:                                              ; preds = %74
  %127 = load atomic i16, i16* %25 monotonic, align 2
  %128 = icmp ult i16 %127, 2
  br i1 %128, label %129, label %136

129:                                              ; preds = %126
  %130 = ptrtoint i8* %9 to i64
  %131 = and i64 %130, -131072
  %132 = or i64 %131, 4096
  %133 = inttoptr i64 %132 to %"class.cppgc::internal::LargePage"*
  %134 = getelementptr inbounds %"class.cppgc::internal::LargePage", %"class.cppgc::internal::LargePage"* %133, i64 0, i32 1
  %135 = load i64, i64* %134, align 8
  br label %141

136:                                              ; preds = %126
  %137 = load atomic i16, i16* %25 monotonic, align 2
  %138 = lshr i16 %137, 1
  %139 = zext i16 %138 to i64
  %140 = shl nuw nsw i64 %139, 3
  br label %141

141:                                              ; preds = %129, %136
  %142 = phi i64 [ %135, %129 ], [ %140, %136 ]
  %143 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 12
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, %142
  store i64 %145, i64* %143, align 8
  br label %146

146:                                              ; preds = %23, %118, %141, %29, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal29UnifiedHeapMarkingVisitorBase20RegisterWeakCallbackEPFvRKN5cppgc14LivenessBrokerEPKvES7_(%"class.v8::internal::UnifiedHeapMarkingVisitorBase"* nocapture readonly, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVisitorBase", %"class.v8::internal::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 1
  %5 = load %"class.cppgc::internal::MarkingStateBase"*, %"class.cppgc::internal::MarkingStateBase"** %4, align 8
  %6 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %5, i64 0, i32 4, i32 1
  %7 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %6, align 8
  %8 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %7, i64 0, i32 1
  %9 = load i16, i16* %8, align 2
  %10 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %7, i64 0, i32 0
  %11 = load i16, i16* %10, align 2
  %12 = icmp eq i16 %9, %11
  %13 = bitcast %"class.heap::base::internal::SegmentBase"* %7 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*
  br i1 %12, label %14, label %40, !prof !2

14:                                               ; preds = %3
  %15 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #10
  %16 = icmp eq %"class.heap::base::internal::SegmentBase"* %7, %15
  br i1 %16, label %31, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %5, i64 0, i32 4, i32 0
  %19 = load %"class.heap::base::Worklist.126"*, %"class.heap::base::Worklist.126"** %18, align 8
  %20 = bitcast %"class.heap::base::internal::SegmentBase"** %6 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"**
  %21 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %20, align 8
  %22 = getelementptr inbounds %"class.heap::base::Worklist.126", %"class.heap::base::Worklist.126"* %19, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %22) #10
  %23 = getelementptr inbounds %"class.heap::base::Worklist.126", %"class.heap::base::Worklist.126"* %19, i64 0, i32 1
  %24 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %21, i64 0, i32 1
  %27 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %21 to i64
  store atomic i64 %28, i64* %24 monotonic, align 8
  %29 = getelementptr inbounds %"class.heap::base::Worklist.126", %"class.heap::base::Worklist.126"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i64* %29, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %22) #10
  br label %31

31:                                               ; preds = %17, %14
  %32 = tail call i8* @_Znwm(i64 1040) #11
  %33 = bitcast i8* %32 to i16*
  store i16 64, i16* %33, align 2
  %34 = getelementptr inbounds i8, i8* %32, i64 2
  %35 = bitcast i8* %34 to i16*
  store i16 0, i16* %35, align 2
  %36 = getelementptr inbounds i8, i8* %32, i64 8
  %37 = bitcast i8* %36 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"** %37, align 8
  %38 = bitcast %"class.heap::base::internal::SegmentBase"** %6 to i8**
  store i8* %32, i8** %38, align 8
  %39 = bitcast i8* %32 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"*
  br label %40

40:                                               ; preds = %3, %31
  %41 = phi %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* [ %39, %31 ], [ %13, %3 ]
  %42 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %41, i64 0, i32 0, i32 1
  %43 = load i16, i16* %42, align 2
  %44 = add i16 %43, 1
  store i16 %44, i16* %42, align 2
  %45 = zext i16 %43 to i64
  %46 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %41, i64 0, i32 2, i64 %45, i32 0
  store void (%"class.cppgc::LivenessBroker"*, i8*)* %1, void (%"class.cppgc::LivenessBroker"*, i8*)** %46, align 8
  %47 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::WeakCallbackItem, 64>::Segment"* %41, i64 0, i32 2, i64 %45, i32 1
  store i8* %2, i8** %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal29UnifiedHeapMarkingVisitorBase22HandleMovableReferenceEPPKv(%"class.v8::internal::UnifiedHeapMarkingVisitorBase"* nocapture readonly, i8**) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVisitorBase", %"class.v8::internal::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 1
  %4 = load %"class.cppgc::internal::MarkingStateBase"*, %"class.cppgc::internal::MarkingStateBase"** %3, align 8
  %5 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %4, i64 0, i32 11, i32 0, i32 0, i32 0
  %6 = load %"class.heap::base::Worklist<const void **, 256>::Local"*, %"class.heap::base::Worklist<const void **, 256>::Local"** %5, align 8
  %7 = icmp eq %"class.heap::base::Worklist<const void **, 256>::Local"* %6, null
  br i1 %7, label %50, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Local", %"class.heap::base::Worklist<const void **, 256>::Local"* %6, i64 0, i32 1
  %10 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %9, align 8
  %11 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %10, i64 0, i32 1
  %12 = load i16, i16* %11, align 2
  %13 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %10, i64 0, i32 0
  %14 = load i16, i16* %13, align 2
  %15 = icmp eq i16 %12, %14
  %16 = bitcast %"class.heap::base::internal::SegmentBase"* %10 to %"class.heap::base::Worklist<const void **, 256>::Segment"*
  br i1 %15, label %17, label %43, !prof !2

17:                                               ; preds = %8
  %18 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #10
  %19 = icmp eq %"class.heap::base::internal::SegmentBase"* %10, %18
  br i1 %19, label %34, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Local", %"class.heap::base::Worklist<const void **, 256>::Local"* %6, i64 0, i32 0
  %22 = load %"class.heap::base::Worklist"*, %"class.heap::base::Worklist"** %21, align 8
  %23 = bitcast %"class.heap::base::internal::SegmentBase"** %9 to %"class.heap::base::Worklist<const void **, 256>::Segment"**
  %24 = load %"class.heap::base::Worklist<const void **, 256>::Segment"*, %"class.heap::base::Worklist<const void **, 256>::Segment"** %23, align 8
  %25 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %22, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %25) #10
  %26 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %22, i64 0, i32 1
  %27 = bitcast %"class.heap::base::Worklist<const void **, 256>::Segment"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Segment", %"class.heap::base::Worklist<const void **, 256>::Segment"* %24, i64 0, i32 1
  %30 = bitcast %"class.heap::base::Worklist<const void **, 256>::Segment"** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = ptrtoint %"class.heap::base::Worklist<const void **, 256>::Segment"* %24 to i64
  store atomic i64 %31, i64* %27 monotonic, align 8
  %32 = getelementptr inbounds %"class.heap::base::Worklist", %"class.heap::base::Worklist"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i64* %32, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %25) #10
  br label %34

34:                                               ; preds = %20, %17
  %35 = tail call i8* @_Znwm(i64 2064) #11
  %36 = bitcast i8* %35 to i16*
  store i16 256, i16* %36, align 2
  %37 = getelementptr inbounds i8, i8* %35, i64 2
  %38 = bitcast i8* %37 to i16*
  store i16 0, i16* %38, align 2
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to %"class.heap::base::Worklist<const void **, 256>::Segment"**
  store %"class.heap::base::Worklist<const void **, 256>::Segment"* null, %"class.heap::base::Worklist<const void **, 256>::Segment"** %40, align 8
  %41 = bitcast %"class.heap::base::internal::SegmentBase"** %9 to i8**
  store i8* %35, i8** %41, align 8
  %42 = bitcast i8* %35 to %"class.heap::base::Worklist<const void **, 256>::Segment"*
  br label %43

43:                                               ; preds = %34, %8
  %44 = phi %"class.heap::base::Worklist<const void **, 256>::Segment"* [ %42, %34 ], [ %16, %8 ]
  %45 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Segment", %"class.heap::base::Worklist<const void **, 256>::Segment"* %44, i64 0, i32 0, i32 1
  %46 = load i16, i16* %45, align 2
  %47 = add i16 %46, 1
  store i16 %47, i16* %45, align 2
  %48 = zext i16 %46 to i64
  %49 = getelementptr inbounds %"class.heap::base::Worklist<const void **, 256>::Segment", %"class.heap::base::Worklist<const void **, 256>::Segment"* %44, i64 0, i32 2, i64 %48
  store i8** %1, i8*** %49, align 8
  br label %50

50:                                               ; preds = %2, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal29UnifiedHeapMarkingVisitorBase5VisitERKNS_19TracedReferenceBaseE(%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*, %"class.v8::TracedReferenceBase"* dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVisitorBase", %"class.v8::internal::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 0, i32 0
  %4 = bitcast %"class.v8::TracedReferenceBase"* %1 to i8*
  %5 = bitcast %"class.v8::internal::UnifiedHeapMarkingVisitorBase"* %0 to i1 (%"class.cppgc::Visitor"*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64)***
  %6 = load i1 (%"class.cppgc::Visitor"*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64)**, i1 (%"class.cppgc::Visitor"*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.cppgc::Visitor"*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64)*, i1 (%"class.cppgc::Visitor"*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64)** %6, i64 3
  %8 = load i1 (%"class.cppgc::Visitor"*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64)*, i1 (%"class.cppgc::Visitor"*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.cppgc::Visitor"* %3, i8* %4, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN2v88internal12_GLOBAL__N_128DeferredTraceTracedReferenceEPN5cppgc7VisitorEPKv, i64 0) #10
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingVisitorBase", %"class.v8::internal::UnifiedHeapMarkingVisitorBase"* %0, i64 0, i32 2
  %12 = load %"class.v8::internal::UnifiedHeapMarkingState"*, %"class.v8::internal::UnifiedHeapMarkingState"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::UnifiedHeapMarkingState", %"class.v8::internal::UnifiedHeapMarkingState"* %12, i64 0, i32 0
  %14 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::TracedReferenceBase", %"class.v8::TracedReferenceBase"* %1, i64 0, i32 0
  %16 = load i64*, i64** %15, align 8
  tail call void @_ZN2v88internal4Heap34RegisterExternallyReferencedObjectEPm(%"class.v8::internal::Heap"* %14, i64* %16) #10
  br label %17

17:                                               ; preds = %10, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN2v88internal12_GLOBAL__N_128DeferredTraceTracedReferenceEPN5cppgc7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #1 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.cppgc::Visitor"* %0 to %"class.v8::JSVisitor"*
  %8 = bitcast i8* %1 to %"class.v8::TracedReferenceBase"*
  %9 = bitcast %"class.cppgc::Visitor"* %0 to void (%"class.v8::JSVisitor"*, %"class.v8::TracedReferenceBase"*)***
  %10 = load void (%"class.v8::JSVisitor"*, %"class.v8::TracedReferenceBase"*)**, void (%"class.v8::JSVisitor"*, %"class.v8::TracedReferenceBase"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.v8::JSVisitor"*, %"class.v8::TracedReferenceBase"*)*, void (%"class.v8::JSVisitor"*, %"class.v8::TracedReferenceBase"*)** %10, i64 11
  %12 = load void (%"class.v8::JSVisitor"*, %"class.v8::TracedReferenceBase"*)*, void (%"class.v8::JSVisitor"*, %"class.v8::TracedReferenceBase"*)** %11, align 8
  tail call void %12(%"class.v8::JSVisitor"* %7, %"class.v8::TracedReferenceBase"* dereferenceable(8) %8) #10
  br label %13

13:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal32MutatorUnifiedHeapMarkingVisitorC2ERN5cppgc8internal8HeapBaseERNS3_19MutatorMarkingStateERNS0_23UnifiedHeapMarkingStateE(%"class.v8::internal::MutatorUnifiedHeapMarkingVisitor"* nocapture, %"class.cppgc::internal::HeapBase"* nocapture readnone dereferenceable(448), %"class.cppgc::internal::MutatorMarkingState"* dereferenceable(264), %"class.v8::internal::UnifiedHeapMarkingState"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.cppgc::internal::MutatorMarkingState", %"class.cppgc::internal::MutatorMarkingState"* %2, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::MutatorUnifiedHeapMarkingVisitor", %"class.v8::internal::MutatorUnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::MutatorUnifiedHeapMarkingVisitor", %"class.v8::internal::MutatorUnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 1
  store %"class.cppgc::internal::MarkingStateBase"* %5, %"class.cppgc::internal::MarkingStateBase"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::MutatorUnifiedHeapMarkingVisitor", %"class.v8::internal::MutatorUnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 2
  store %"class.v8::internal::UnifiedHeapMarkingState"* %3, %"class.v8::internal::UnifiedHeapMarkingState"** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN2v88internal32MutatorUnifiedHeapMarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal32MutatorUnifiedHeapMarkingVisitor9VisitRootEPKvN5cppgc15TraceDescriptorERKNS4_14SourceLocationE(%"class.v8::internal::MutatorUnifiedHeapMarkingVisitor"* nocapture readonly, i8* nocapture readnone, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"* nocapture readnone dereferenceable(24)) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::MutatorUnifiedHeapMarkingVisitor", %"class.v8::internal::MutatorUnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.cppgc::internal::MarkingStateBase"*, %"class.cppgc::internal::MarkingStateBase"** %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 -8
  %9 = bitcast i8* %8 to %"class.cppgc::internal::HeapObjectHeader"*
  tail call void @_ZN5cppgc8internal16MarkingStateBase11MarkAndPushERNS0_16HeapObjectHeaderENS_15TraceDescriptorE(%"class.cppgc::internal::MarkingStateBase"* %7, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8) %9, i8* %2, void (%"class.cppgc::Visitor"*, i8*)* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal32MutatorUnifiedHeapMarkingVisitor13VisitWeakRootEPKvN5cppgc15TraceDescriptorEPFvRKNS4_14LivenessBrokerES3_ES3_RKNS4_14SourceLocationE(%"class.v8::internal::MutatorUnifiedHeapMarkingVisitor"* nocapture readonly, i8* nocapture readnone, i8* nocapture readnone, void (%"class.cppgc::Visitor"*, i8*)* nocapture readnone, void (%"class.cppgc::LivenessBroker"*, i8*)* nocapture, i8*, %"class.cppgc::SourceLocation"* nocapture readnone dereferenceable(24)) unnamed_addr #1 align 2 {
  %8 = alloca %"class.cppgc::LivenessBroker", align 1
  %9 = getelementptr inbounds %"class.cppgc::LivenessBroker", %"class.cppgc::LivenessBroker"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #10
  tail call void @_ZN5cppgc8internal21LivenessBrokerFactory6CreateEv() #10
  call void %4(%"class.cppgc::LivenessBroker"* nonnull dereferenceable(1) %8, i8* %5) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal35ConcurrentUnifiedHeapMarkingVisitorC2ERN5cppgc8internal8HeapBaseERNS3_22ConcurrentMarkingStateERNS0_23UnifiedHeapMarkingStateE(%"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"* nocapture, %"class.cppgc::internal::HeapBase"* nocapture readnone dereferenceable(448), %"class.cppgc::internal::ConcurrentMarkingState"* dereferenceable(240), %"class.v8::internal::UnifiedHeapMarkingState"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %2, i64 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor", %"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor", %"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 1
  store %"class.cppgc::internal::MarkingStateBase"* %5, %"class.cppgc::internal::MarkingStateBase"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor", %"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 2
  store %"class.v8::internal::UnifiedHeapMarkingState"* %3, %"class.v8::internal::UnifiedHeapMarkingState"** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN2v88internal35ConcurrentUnifiedHeapMarkingVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal35ConcurrentUnifiedHeapMarkingVisitor37DeferTraceToMutatorThreadIfConcurrentEPKvPFvPN5cppgc7VisitorES3_Em(%"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"* nocapture readonly, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor", %"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.cppgc::internal::MarkingStateBase"*, %"class.cppgc::internal::MarkingStateBase"** %5, align 8
  %7 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %6, i64 0, i32 6, i32 1
  %8 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %7, align 8
  %9 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %8, i64 0, i32 1
  %10 = load i16, i16* %9, align 2
  %11 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %8, i64 0, i32 0
  %12 = load i16, i16* %11, align 2
  %13 = icmp eq i16 %10, %12
  %14 = bitcast %"class.heap::base::internal::SegmentBase"* %8 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*
  br i1 %13, label %15, label %41, !prof !2

15:                                               ; preds = %4
  %16 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #10
  %17 = icmp eq %"class.heap::base::internal::SegmentBase"* %8, %16
  br i1 %17, label %32, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %6, i64 0, i32 6, i32 0
  %20 = load %"class.heap::base::Worklist.128"*, %"class.heap::base::Worklist.128"** %19, align 8
  %21 = bitcast %"class.heap::base::internal::SegmentBase"** %7 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"**
  %22 = load %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"** %21, align 8
  %23 = getelementptr inbounds %"class.heap::base::Worklist.128", %"class.heap::base::Worklist.128"* %20, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %23) #10
  %24 = getelementptr inbounds %"class.heap::base::Worklist.128", %"class.heap::base::Worklist.128"* %20, i64 0, i32 1
  %25 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* %22, i64 0, i32 1
  %28 = bitcast %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = ptrtoint %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* %22 to i64
  store atomic i64 %29, i64* %25 monotonic, align 8
  %30 = getelementptr inbounds %"class.heap::base::Worklist.128", %"class.heap::base::Worklist.128"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i64* %30, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %23) #10
  br label %32

32:                                               ; preds = %18, %15
  %33 = tail call i8* @_Znwm(i64 1552) #11
  %34 = bitcast i8* %33 to i16*
  store i16 64, i16* %34, align 2
  %35 = getelementptr inbounds i8, i8* %33, i64 2
  %36 = bitcast i8* %35 to i16*
  store i16 0, i16* %36, align 2
  %37 = getelementptr inbounds i8, i8* %33, i64 8
  %38 = bitcast i8* %37 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"**
  store %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* null, %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"** %38, align 8
  %39 = bitcast %"class.heap::base::internal::SegmentBase"** %7 to i8**
  store i8* %33, i8** %39, align 8
  %40 = bitcast i8* %33 to %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"*
  br label %41

41:                                               ; preds = %4, %32
  %42 = phi %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* [ %40, %32 ], [ %14, %4 ]
  %43 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* %42, i64 0, i32 0, i32 1
  %44 = load i16, i16* %43, align 2
  %45 = add i16 %44, 1
  store i16 %45, i16* %43, align 2
  %46 = zext i16 %44 to i64
  %47 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* %42, i64 0, i32 2, i64 %46, i32 0
  store i8* %1, i8** %47, align 8
  %48 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* %42, i64 0, i32 2, i64 %46, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* %2, void (%"class.cppgc::Visitor"*, i8*)** %48, align 8
  %49 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment", %"class.heap::base::Worklist<cppgc::internal::MarkingWorklists::ConcurrentMarkingBailoutItem, 64>::Segment"* %42, i64 0, i32 2, i64 %46, i32 2
  store i64 %3, i64* %49, align 8
  %50 = bitcast %"class.cppgc::internal::MarkingStateBase"** %5 to %"class.cppgc::internal::ConcurrentMarkingState"**
  %51 = load %"class.cppgc::internal::ConcurrentMarkingState"*, %"class.cppgc::internal::ConcurrentMarkingState"** %50, align 8
  %52 = getelementptr inbounds %"class.cppgc::internal::ConcurrentMarkingState", %"class.cppgc::internal::ConcurrentMarkingState"* %51, i64 0, i32 0, i32 12
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %53, %3
  store i64 %54, i64* %52, align 8
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal29UnifiedHeapMarkingVisitorBaseD0Ev(%"class.v8::internal::UnifiedHeapMarkingVisitorBase"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.v8::internal::UnifiedHeapMarkingVisitorBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5cppgc7Visitor37DeferTraceToMutatorThreadIfConcurrentEPKvPFvPS0_S2_Em(%"class.cppgc::Visitor"*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, i64) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc7Visitor9VisitRootEPKvNS_15TraceDescriptorERKNS_14SourceLocationE(%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc7Visitor13VisitWeakRootEPKvNS_15TraceDescriptorEPFvRKNS_14LivenessBrokerES2_ES2_RKNS_14SourceLocationE(%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*, %"class.cppgc::SourceLocation"* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal32MutatorUnifiedHeapMarkingVisitorD0Ev(%"class.v8::internal::MutatorUnifiedHeapMarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.v8::internal::MutatorUnifiedHeapMarkingVisitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal35ConcurrentUnifiedHeapMarkingVisitorD0Ev(%"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal35ConcurrentUnifiedHeapMarkingVisitor9VisitRootEPKvN5cppgc15TraceDescriptorERKNS4_14SourceLocationE(%"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, %"class.cppgc::SourceLocation"* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal35ConcurrentUnifiedHeapMarkingVisitor13VisitWeakRootEPKvN5cppgc15TraceDescriptorEPFvRKNS4_14LivenessBrokerES3_ES3_RKNS4_14SourceLocationE(%"class.v8::internal::ConcurrentUnifiedHeapMarkingVisitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*, void (%"class.cppgc::LivenessBroker"*, i8*)*, i8*, %"class.cppgc::SourceLocation"* dereferenceable(24)) unnamed_addr #1 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc7VisitorD2Ev(%"class.cppgc::Visitor"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal16MarkingStateBase11MarkAndPushERNS0_16HeapObjectHeaderENS_15TraceDescriptorE(%"class.cppgc::internal::MarkingStateBase"*, %"class.cppgc::internal::HeapObjectHeader"* dereferenceable(8), i8*, void (%"class.cppgc::Visitor"*, i8*)*) local_unnamed_addr #2 comdat align 2 {
  %5 = alloca %"class.cppgc::internal::HeapObjectHeader"*, align 8
  %6 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %1, i64 0, i32 1
  %7 = load atomic i16, i16* %6 acquire, align 2
  %8 = and i16 %7, 1
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %17

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 2
  %12 = load %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"*, %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"** %11, align 8
  %13 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  store %"class.cppgc::internal::HeapObjectHeader"* %1, %"class.cppgc::internal::HeapObjectHeader"** %5, align 8
  %14 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"* %12, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %14) #10
  %15 = getelementptr inbounds %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist", %"class.cppgc::internal::MarkingWorklists::ExternalMarkingWorklist"* %12, i64 0, i32 1, i32 0
  %16 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %15, %"class.cppgc::internal::HeapObjectHeader"** nonnull dereferenceable(8) %5, %"class.cppgc::internal::HeapObjectHeader"** nonnull dereferenceable(8) %5) #10
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %14) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  br label %68

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.cppgc::internal::HeapObjectHeader", %"class.cppgc::internal::HeapObjectHeader"* %1, i64 0, i32 2
  %19 = load atomic i16, i16* %18 monotonic, align 2
  %20 = or i16 %19, 1
  %21 = icmp eq i16 %20, %19
  br i1 %21, label %68, label %22

22:                                               ; preds = %17
  %23 = cmpxchg i16* %18, i16 %19, i16 %20 monotonic monotonic
  %24 = extractvalue { i16, i1 } %23, 1
  br i1 %24, label %25, label %68

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 1, i32 1
  %27 = load %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"** %26, align 8
  %28 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %27, i64 0, i32 1
  %29 = load i16, i16* %28, align 2
  %30 = getelementptr inbounds %"class.heap::base::internal::SegmentBase", %"class.heap::base::internal::SegmentBase"* %27, i64 0, i32 0
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %29, %31
  %33 = bitcast %"class.heap::base::internal::SegmentBase"* %27 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*
  br i1 %32, label %34, label %60, !prof !2

34:                                               ; preds = %25
  %35 = tail call %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() #10
  %36 = icmp eq %"class.heap::base::internal::SegmentBase"* %27, %35
  br i1 %36, label %51, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.cppgc::internal::MarkingStateBase", %"class.cppgc::internal::MarkingStateBase"* %0, i64 0, i32 1, i32 0
  %39 = load %"class.heap::base::Worklist.106"*, %"class.heap::base::Worklist.106"** %38, align 8
  %40 = bitcast %"class.heap::base::internal::SegmentBase"** %26 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"**
  %41 = load %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %40, align 8
  %42 = getelementptr inbounds %"class.heap::base::Worklist.106", %"class.heap::base::Worklist.106"* %39, i64 0, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %42) #10
  %43 = getelementptr inbounds %"class.heap::base::Worklist.106", %"class.heap::base::Worklist.106"* %39, i64 0, i32 1
  %44 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %41, i64 0, i32 1
  %47 = bitcast %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = ptrtoint %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %41 to i64
  store atomic i64 %48, i64* %44 monotonic, align 8
  %49 = getelementptr inbounds %"class.heap::base::Worklist.106", %"class.heap::base::Worklist.106"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i64* %49, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %42) #10
  br label %51

51:                                               ; preds = %37, %34
  %52 = tail call i8* @_Znwm(i64 8208) #11
  %53 = bitcast i8* %52 to i16*
  store i16 512, i16* %53, align 2
  %54 = getelementptr inbounds i8, i8* %52, i64 2
  %55 = bitcast i8* %54 to i16*
  store i16 0, i16* %55, align 2
  %56 = getelementptr inbounds i8, i8* %52, i64 8
  %57 = bitcast i8* %56 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"**
  store %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* null, %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"** %57, align 8
  %58 = bitcast %"class.heap::base::internal::SegmentBase"** %26 to i8**
  store i8* %52, i8** %58, align 8
  %59 = bitcast i8* %52 to %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"*
  br label %60

60:                                               ; preds = %25, %51
  %61 = phi %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* [ %59, %51 ], [ %33, %25 ]
  %62 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %61, i64 0, i32 0, i32 1
  %63 = load i16, i16* %62, align 2
  %64 = add i16 %63, 1
  store i16 %64, i16* %62, align 2
  %65 = zext i16 %63 to i64
  %66 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %61, i64 0, i32 2, i64 %65, i32 0
  store i8* %2, i8** %66, align 8
  %67 = getelementptr inbounds %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment", %"class.heap::base::Worklist<cppgc::TraceDescriptor, 512>::Segment"* %61, i64 0, i32 2, i64 %65, i32 1
  store void (%"class.cppgc::Visitor"*, i8*)* %3, void (%"class.cppgc::Visitor"*, i8*)** %67, align 8
  br label %68

68:                                               ; preds = %17, %22, %60, %10
  ret void
}

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.cppgc::internal::HeapObjectHeader"** dereferenceable(8), %"class.cppgc::internal::HeapObjectHeader"** dereferenceable(8)) local_unnamed_addr #1 comdat align 2 {
  %4 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %1, align 8
  %5 = ptrtoint %"class.cppgc::internal::HeapObjectHeader"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %81, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #10, !range !3
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base"* %37, null
  br i1 %38, label %81, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br i1 %24, label %41, label %63

41:                                               ; preds = %39, %58
  %42 = phi %"struct.std::__1::__hash_node_base"* [ %44, %58 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base"* %44, null
  br i1 %45, label %81, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = icmp ult i64 %49, %20
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %49, %20
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %54, %53 ], [ %49, %51 ]
  %57 = icmp eq i64 %56, %33
  br i1 %57, label %58, label %81

58:                                               ; preds = %55, %46
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %44, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base"* %59 to %"class.cppgc::internal::HeapObjectHeader"**
  %61 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %60, align 8
  %62 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %61, %4
  br i1 %62, label %169, label %41

63:                                               ; preds = %39, %76
  %64 = phi %"struct.std::__1::__hash_node_base"* [ %66, %76 ], [ %37, %39 ]
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %64, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, %18
  %73 = and i64 %71, %40
  %74 = icmp eq i64 %73, %33
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %81

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %66, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base"* %77 to %"class.cppgc::internal::HeapObjectHeader"**
  %79 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %78, align 8
  %80 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %79, %4
  br i1 %80, label %169, label %63

81:                                               ; preds = %68, %63, %55, %41, %32, %3
  %82 = phi i64 [ %33, %32 ], [ undef, %3 ], [ %33, %41 ], [ %33, %55 ], [ %33, %63 ], [ %33, %68 ]
  %83 = tail call i8* @_Znwm(i64 24) #11, !noalias !4
  %84 = getelementptr inbounds i8, i8* %83, i64 16
  %85 = bitcast %"class.cppgc::internal::HeapObjectHeader"** %2 to i64*
  %86 = load i64, i64* %85, align 8, !noalias !4
  %87 = bitcast i8* %84 to i64*
  store i64 %86, i64* %87, align 8, !noalias !4
  %88 = getelementptr inbounds i8, i8* %83, i64 8
  %89 = bitcast i8* %88 to i64*
  store i64 %18, i64* %89, align 8, !noalias !4
  %90 = bitcast i8* %83 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %90, align 8, !noalias !4
  %91 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  %94 = uitofp i64 %93 to float
  %95 = uitofp i64 %20 to float
  %96 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %97 = load float, float* %96, align 4
  %98 = fmul float %97, %95
  %99 = fcmp olt float %98, %94
  %100 = or i1 %21, %99
  br i1 %100, label %101, label %124

101:                                              ; preds = %81
  %102 = shl i64 %20, 1
  %103 = icmp ult i64 %20, 3
  %104 = tail call i64 @llvm.ctpop.i64(i64 %20) #10, !range !3
  %105 = icmp ugt i64 %104, 1
  %106 = or i1 %103, %105
  %107 = zext i1 %106 to i64
  %108 = or i64 %102, %107
  %109 = fdiv float %94, %97
  %110 = tail call float @llvm.ceil.f32(float %109) #10
  %111 = fptoui float %110 to i64
  %112 = icmp ult i64 %108, %111
  %113 = select i1 %112, i64 %111, i64 %108
  tail call void @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %113)
  %114 = load i64, i64* %19, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %114) #10, !range !3
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %101
  %118 = add i64 %114, -1
  %119 = and i64 %118, %18
  br label %124

120:                                              ; preds = %101
  %121 = icmp ult i64 %18, %114
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %18, %114
  br label %124

124:                                              ; preds = %122, %120, %117, %81
  %125 = phi i64 [ %20, %81 ], [ %114, %117 ], [ %114, %120 ], [ %114, %122 ]
  %126 = phi i64 [ %82, %81 ], [ %119, %117 ], [ %18, %120 ], [ %123, %122 ]
  %127 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %128, i64 %126
  %130 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %129, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base"* %130, null
  br i1 %131, label %132, label %158

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %134 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast i8* %83 to i64*
  store i64 %135, i64* %136, align 8
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %133 to i8**
  store i8* %83, i8** %137, align 8
  store %"struct.std::__1::__hash_node_base"* %133, %"struct.std::__1::__hash_node_base"** %129, align 8
  %138 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %90, align 8
  %139 = icmp eq %"struct.std::__1::__hash_node_base"* %138, null
  br i1 %139, label %165, label %140

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %138, i64 1
  %142 = bitcast %"struct.std::__1::__hash_node_base"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = tail call i64 @llvm.ctpop.i64(i64 %125) #10, !range !3
  %145 = icmp ugt i64 %144, 1
  br i1 %145, label %149, label %146

146:                                              ; preds = %140
  %147 = add i64 %125, -1
  %148 = and i64 %143, %147
  br label %153

149:                                              ; preds = %140
  %150 = icmp ult i64 %143, %125
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = urem i64 %143, %125
  br label %153

153:                                              ; preds = %146, %149, %151
  %154 = phi i64 [ %148, %146 ], [ %152, %151 ], [ %143, %149 ]
  %155 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %127, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %155, i64 %154
  %157 = bitcast %"struct.std::__1::__hash_node_base"** %156 to i8**
  br label %163

158:                                              ; preds = %124
  %159 = bitcast %"struct.std::__1::__hash_node_base"* %130 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast i8* %83 to i64*
  store i64 %160, i64* %161, align 8
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %130 to i8**
  br label %163

163:                                              ; preds = %153, %158
  %164 = phi i8** [ %162, %158 ], [ %157, %153 ]
  store i8* %83, i8** %164, align 8
  br label %165

165:                                              ; preds = %163, %132
  %166 = bitcast i8* %83 to %"struct.std::__1::__hash_node_base"*
  %167 = load i64, i64* %91, align 8
  %168 = add i64 %167, 1
  store i64 %168, i64* %91, align 8
  br label %169

169:                                              ; preds = %76, %58, %165
  %170 = phi i8 [ 1, %165 ], [ 0, %58 ], [ 0, %76 ]
  %171 = phi %"struct.std::__1::__hash_node_base"* [ %166, %165 ], [ %44, %58 ], [ %66, %76 ]
  %172 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %171, 0
  %173 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %172, i8 %170, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %173
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #10
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #10, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #10
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #10, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #10
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #11
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #11
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !7

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #10, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %103 to %"class.cppgc::internal::HeapObjectHeader"**
  %105 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %130, align 8
  %106 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %104, align 8
  %107 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base"* %129 to %"class.cppgc::internal::HeapObjectHeader"**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base"* %146 to %"class.cppgc::internal::HeapObjectHeader"**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base"* %134, %"struct.std::__1::__hash_node_base"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base"* %155 to %"class.cppgc::internal::HeapObjectHeader"**
  %157 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %147, align 8
  %158 = load %"class.cppgc::internal::HeapObjectHeader"*, %"class.cppgc::internal::HeapObjectHeader"** %156, align 8
  %159 = icmp eq %"class.cppgc::internal::HeapObjectHeader"* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %132, %"struct.std::__1::__hash_node_base"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %180, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #11
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #8

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #8

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #5

declare %"class.heap::base::internal::SegmentBase"* @_ZN4heap4base8internal11SegmentBase25GetSentinelSegmentAddressEv() local_unnamed_addr #5

declare void @_ZN2v88internal4Heap34RegisterExternallyReferencedObjectEPm(%"class.v8::internal::Heap"*, i64*) local_unnamed_addr #5

declare void @_ZN5cppgc8internal21LivenessBrokerFactory6CreateEv() local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__112__hash_tableIPN5cppgc8internal16HeapObjectHeaderENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
